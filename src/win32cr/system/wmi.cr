require "../system/com.cr"
require "../foundation.cr"

{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link("delayimp")]
{% end %}
@[Link("user32")]
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/IGNORE:4199")]
{% end %}
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/DELAYLOAD:mi.dll")]
{% else %}
@[Link("mi")]
{% end %}
lib LibWin32
  MI_FLAG_ANY = 127_u32
  MI_FLAG_VERSION = 469762048_u32
  MI_FLAG_ADOPT = 2147483648_u32
  MI_FLAG_CLASS = 1_u32
  MI_FLAG_METHOD = 2_u32
  MI_FLAG_PROPERTY = 4_u32
  MI_FLAG_PARAMETER = 8_u32
  MI_FLAG_ASSOCIATION = 16_u32
  MI_FLAG_INDICATION = 32_u32
  MI_FLAG_REFERENCE = 64_u32
  MI_FLAG_ENABLEOVERRIDE = 128_u32
  MI_FLAG_DISABLEOVERRIDE = 256_u32
  MI_FLAG_RESTRICTED = 512_u32
  MI_FLAG_TOSUBCLASS = 1024_u32
  MI_FLAG_TRANSLATABLE = 2048_u32
  MI_FLAG_KEY = 4096_u32
  MI_FLAG_IN = 8192_u32
  MI_FLAG_OUT = 16384_u32
  MI_FLAG_REQUIRED = 32768_u32
  MI_FLAG_STATIC = 65536_u32
  MI_FLAG_ABSTRACT = 131072_u32
  MI_FLAG_TERMINAL = 262144_u32
  MI_FLAG_EXPENSIVE = 524288_u32
  MI_FLAG_STREAM = 1048576_u32
  MI_FLAG_READONLY = 2097152_u32
  MI_FLAG_EXTENDED = 4096_u32
  MI_FLAG_NOT_MODIFIED = 33554432_u32
  MI_FLAG_NULL = 536870912_u32
  MI_FLAG_BORROW = 1073741824_u32
  MI_MODULE_FLAG_STANDARD_QUALIFIERS = 1_u32
  MI_MODULE_FLAG_DESCRIPTIONS = 2_u32
  MI_MODULE_FLAG_VALUES = 4_u32
  MI_MODULE_FLAG_MAPPING_STRINGS = 8_u32
  MI_MODULE_FLAG_BOOLEANS = 16_u32
  MI_MODULE_FLAG_CPLUSPLUS = 32_u32
  MI_MODULE_FLAG_LOCALIZED = 64_u32
  MI_MODULE_FLAG_FILTER_SUPPORT = 128_u32
  MI_MAX_LOCALE_SIZE = 128_u32
  MI_WRITEMESSAGE_CHANNEL_WARNING = 0_u32
  MI_WRITEMESSAGE_CHANNEL_VERBOSE = 1_u32
  MI_WRITEMESSAGE_CHANNEL_DEBUG = 2_u32
  MI_CALL_VERSION = 1_u32
  MI_OPERATIONFLAGS_MANUAL_ACK_RESULTS = 1_u32
  MI_OPERATIONFLAGS_NO_RTTI = 1024_u32
  MI_OPERATIONFLAGS_BASIC_RTTI = 2_u32
  MI_OPERATIONFLAGS_STANDARD_RTTI = 2048_u32
  MI_OPERATIONFLAGS_FULL_RTTI = 4_u32
  MI_OPERATIONFLAGS_DEFAULT_RTTI = 0_u32
  MI_OPERATIONFLAGS_LOCALIZED_QUALIFIERS = 8_u32
  MI_OPERATIONFLAGS_EXPENSIVE_PROPERTIES = 64_u32
  MI_OPERATIONFLAGS_POLYMORPHISM_SHALLOW = 128_u32
  MI_OPERATIONFLAGS_POLYMORPHISM_DEEP_BASE_PROPS_ONLY = 384_u32
  MI_OPERATIONFLAGS_REPORT_OPERATION_STARTED = 512_u32
  MI_SERIALIZER_FLAGS_CLASS_DEEP = 1_u32
  MI_SERIALIZER_FLAGS_INSTANCE_WITH_CLASS = 1_u32
  WBEMS_DISPID_DERIVATION = 23_u32
  WBEMS_DISPID_OBJECT_READY = 1_u32
  WBEMS_DISPID_COMPLETED = 2_u32
  WBEMS_DISPID_PROGRESS = 3_u32
  WBEMS_DISPID_OBJECT_PUT = 4_u32
  WBEMS_DISPID_CONNECTION_READY = 5_u32
  CLSID_WbemDefPath = LibC::GUID.new(0xcf4cc405_u32, 0xe2c5_u16, 0x4ddd_u16, StaticArray[0xb3_u8, 0xce_u8, 0x5e_u8, 0x75_u8, 0x82_u8, 0xd8_u8, 0xc9_u8, 0xfa_u8])
  CLSID_WbemQuery = LibC::GUID.new(0xeac8a024_u32, 0x21e2_u16, 0x4523_u16, StaticArray[0xad_u8, 0x73_u8, 0xa7_u8, 0x1a_u8, 0xa_u8, 0xa2_u8, 0xf5_u8, 0x6a_u8])
  CLSID_WbemLocator = LibC::GUID.new(0x4590f811_u32, 0x1d3a_u16, 0x11d0_u16, StaticArray[0x89_u8, 0x1f_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0x2e_u8, 0x24_u8])
  CLSID_WbemContext = LibC::GUID.new(0x674b6698_u32, 0xee92_u16, 0x11d0_u16, StaticArray[0xad_u8, 0x71_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  CLSID_UnsecuredApartment = LibC::GUID.new(0x49bd2028_u32, 0x1523_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x79_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  CLSID_WbemClassObject = LibC::GUID.new(0x9a653086_u32, 0x174f_u16, 0x11d2_u16, StaticArray[0xb5_u8, 0xf9_u8, 0x0_u8, 0x10_u8, 0x4b_u8, 0x70_u8, 0x3e_u8, 0xfd_u8])
  CLSID_MofCompiler = LibC::GUID.new(0x6daf9757_u32, 0x2e37_u16, 0x11d2_u16, StaticArray[0xae_u8, 0xc9_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  CLSID_WbemStatusCodeText = LibC::GUID.new(0xeb87e1bd_u32, 0x3233_u16, 0x11d2_u16, StaticArray[0xae_u8, 0xc9_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  CLSID_WbemBackupRestore = LibC::GUID.new(0xc49e32c6_u32, 0xbc8b_u16, 0x11d2_u16, StaticArray[0x85_u8, 0xd4_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x83_u8, 0x4_u8])
  CLSID_WbemRefresher = LibC::GUID.new(0xc71566f2_u32, 0x561e_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x87_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  CLSID_WbemObjectTextSrc = LibC::GUID.new(0x8d1c559d_u32, 0x84f0_u16, 0x4bb3_u16, StaticArray[0xa7_u8, 0xd5_u8, 0x56_u8, 0xa7_u8, 0x43_u8, 0x5a_u8, 0x9b_u8, 0xa6_u8])
  CLSID_WbemAdministrativeLocator = LibC::GUID.new(0xcb8555cc_u32, 0x9128_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x9b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  CLSID_WbemAuthenticatedLocator = LibC::GUID.new(0xcd184336_u32, 0x9128_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x9b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  CLSID_WbemUnauthenticatedLocator = LibC::GUID.new(0x443e7b79_u32, 0xde31_u16, 0x11d2_u16, StaticArray[0xb3_u8, 0x40_u8, 0x0_u8, 0x10_u8, 0x4b_u8, 0xcc_u8, 0x4b_u8, 0x4a_u8])
  CLSID_WbemDecoupledRegistrar = LibC::GUID.new(0x4cfc7932_u32, 0xf9d_u16, 0x4bef_u16, StaticArray[0x9c_u8, 0x32_u8, 0x8e_u8, 0xa2_u8, 0xa6_u8, 0xb5_u8, 0x6f_u8, 0xcb_u8])
  CLSID_WbemDecoupledBasicEventProvider = LibC::GUID.new(0xf5f75737_u32, 0x2843_u16, 0x4f22_u16, StaticArray[0x93_u8, 0x3d_u8, 0xc7_u8, 0x6a_u8, 0x97_u8, 0xcd_u8, 0xa6_u8, 0x2f_u8])
  CLSID_SWbemLocator = LibC::GUID.new(0x76a64158_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemNamedValueSet = LibC::GUID.new(0x9aed384e_u32, 0xce8b_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x5_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemObjectPath = LibC::GUID.new(0x5791bc26_u32, 0xce9c_u16, 0x11d1_u16, StaticArray[0x97_u8, 0xbf_u8, 0x0_u8, 0x0_u8, 0xf8_u8, 0x1e_u8, 0x84_u8, 0x9c_u8])
  CLSID_SWbemLastError = LibC::GUID.new(0xc2feeeac_u32, 0xcfcd_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x5_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemSink = LibC::GUID.new(0x75718c9a_u32, 0xf029_u16, 0x11d1_u16, StaticArray[0xa1_u8, 0xac_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0xc2_u8, 0x23_u8])
  CLSID_SWbemDateTime = LibC::GUID.new(0x47dfbe54_u32, 0xcf76_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x8f_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])
  CLSID_SWbemRefresher = LibC::GUID.new(0xd269bf5c_u32, 0xd9c1_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x8f_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])
  CLSID_SWbemServices = LibC::GUID.new(0x4b83d63_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemServicesEx = LibC::GUID.new(0x62e522dc_u32, 0x8cf3_u16, 0x40a8_u16, StaticArray[0x8b_u8, 0x2e_u8, 0x37_u8, 0xd5_u8, 0x95_u8, 0x65_u8, 0x1e_u8, 0x40_u8])
  CLSID_SWbemObject = LibC::GUID.new(0x4b83d62_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemObjectEx = LibC::GUID.new(0xd6bdafb2_u32, 0x9435_u16, 0x491f_u16, StaticArray[0xbb_u8, 0x87_u8, 0x6a_u8, 0xa0_u8, 0xf0_u8, 0xbc_u8, 0x31_u8, 0xa2_u8])
  CLSID_SWbemObjectSet = LibC::GUID.new(0x4b83d61_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemNamedValue = LibC::GUID.new(0x4b83d60_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemQualifier = LibC::GUID.new(0x4b83d5f_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemQualifierSet = LibC::GUID.new(0x4b83d5e_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemProperty = LibC::GUID.new(0x4b83d5d_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemPropertySet = LibC::GUID.new(0x4b83d5c_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemMethod = LibC::GUID.new(0x4b83d5b_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemMethodSet = LibC::GUID.new(0x4b83d5a_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemEventSource = LibC::GUID.new(0x4b83d58_u32, 0x21ae_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemSecurity = LibC::GUID.new(0xb54d66e9_u32, 0x2287_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemPrivilege = LibC::GUID.new(0x26ee67bc_u32, 0x5804_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x4a_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemPrivilegeSet = LibC::GUID.new(0x26ee67be_u32, 0x5804_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x4a_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  CLSID_SWbemRefreshableItem = LibC::GUID.new(0x8c6854bc_u32, 0xde4b_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x90_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])
  CLSID_WMIExtension = LibC::GUID.new(0xf0975afe_u32, 0x5c7f_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x74_u8, 0x0_u8, 0x10_u8, 0x4b_u8, 0x2a_u8, 0xfb_u8, 0x41_u8])
  CLSID_WbemLevel1Login = LibC::GUID.new(0x8bc3f05e_u32, 0xd86b_u16, 0x11d0_u16, StaticArray[0xa0_u8, 0x75_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  CLSID_WbemLocalAddrRes = LibC::GUID.new(0xa1044801_u32, 0x8f7e_u16, 0x11d1_u16, StaticArray[0x9e_u8, 0x7c_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x24_u8, 0xa8_u8])
  CLSID_WbemUninitializedClassObject = LibC::GUID.new(0x7a0227f6_u32, 0x7108_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x90_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  CLSID_WbemDCOMTransport = LibC::GUID.new(0xf7ce2e13_u32, 0x8c90_u16, 0x11d1_u16, StaticArray[0x9e_u8, 0x7b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x24_u8, 0xa8_u8])

  type MI_Module_Self = Void

  alias MI_MethodDecl_Invoke = Proc(Void*, MI_Context*, UInt16*, UInt16*, UInt16*, MI_Instance*, MI_Instance*, Void)
  alias MI_ProviderFT_Load = Proc(Void**, MI_Module_Self*, MI_Context*, Void)
  alias MI_ProviderFT_Unload = Proc(Void*, MI_Context*, Void)
  alias MI_ProviderFT_GetInstance = Proc(Void*, MI_Context*, UInt16*, UInt16*, MI_Instance*, MI_PropertySet*, Void)
  alias MI_ProviderFT_EnumerateInstances = Proc(Void*, MI_Context*, UInt16*, UInt16*, MI_PropertySet*, UInt8, MI_Filter*, Void)
  alias MI_ProviderFT_CreateInstance = Proc(Void*, MI_Context*, UInt16*, UInt16*, MI_Instance*, Void)
  alias MI_ProviderFT_ModifyInstance = Proc(Void*, MI_Context*, UInt16*, UInt16*, MI_Instance*, MI_PropertySet*, Void)
  alias MI_ProviderFT_DeleteInstance = Proc(Void*, MI_Context*, UInt16*, UInt16*, MI_Instance*, Void)
  alias MI_ProviderFT_AssociatorInstances = Proc(Void*, MI_Context*, UInt16*, UInt16*, MI_Instance*, UInt16*, UInt16*, UInt16*, MI_PropertySet*, UInt8, MI_Filter*, Void)
  alias MI_ProviderFT_ReferenceInstances = Proc(Void*, MI_Context*, UInt16*, UInt16*, MI_Instance*, UInt16*, MI_PropertySet*, UInt8, MI_Filter*, Void)
  alias MI_ProviderFT_EnableIndications = Proc(Void*, MI_Context*, UInt16*, UInt16*, Void)
  alias MI_ProviderFT_DisableIndications = Proc(Void*, MI_Context*, UInt16*, UInt16*, Void)
  alias MI_ProviderFT_Subscribe = Proc(Void*, MI_Context*, UInt16*, UInt16*, MI_Filter*, UInt16*, UInt64, Void**, Void)
  alias MI_ProviderFT_Unsubscribe = Proc(Void*, MI_Context*, UInt16*, UInt16*, UInt64, Void*, Void)
  alias MI_ProviderFT_Invoke = Proc(Void*, MI_Context*, UInt16*, UInt16*, UInt16*, MI_Instance*, MI_Instance*, Void)
  alias MI_Module_Load = Proc(MI_Module_Self**, MI_Context*, Void)
  alias MI_Module_Unload = Proc(MI_Module_Self*, MI_Context*, Void)
  alias MI_CancelCallback = Proc(MI_CancellationReason, Void*, Void)
  alias MI_MainFunction = Proc(MI_Server*, MI_Module*)
  alias MI_OperationCallback_PromptUser = Proc(MI_Operation*, Void*, UInt16*, MI_PromptType, LibC::IntPtrT, Void)
  alias MI_OperationCallback_WriteError = Proc(MI_Operation*, Void*, MI_Instance*, LibC::IntPtrT, Void)
  alias MI_OperationCallback_WriteMessage = Proc(MI_Operation*, Void*, UInt32, UInt16*, Void)
  alias MI_OperationCallback_WriteProgress = Proc(MI_Operation*, Void*, UInt16*, UInt16*, UInt16*, UInt32, UInt32, Void)
  alias MI_OperationCallback_Instance = Proc(MI_Operation*, Void*, MI_Instance*, UInt8, MI_Result, UInt16*, MI_Instance*, LibC::IntPtrT, Void)
  alias MI_OperationCallback_StreamedParameter = Proc(MI_Operation*, Void*, UInt16*, MI_Type, MI_Value*, LibC::IntPtrT, Void)
  alias MI_OperationCallback_Indication = Proc(MI_Operation*, Void*, MI_Instance*, UInt16*, UInt16*, UInt8, MI_Result, UInt16*, MI_Instance*, LibC::IntPtrT, Void)
  alias MI_OperationCallback_Class = Proc(MI_Operation*, Void*, MI_Class*, UInt8, MI_Result, UInt16*, MI_Instance*, LibC::IntPtrT, Void)
  alias MI_Deserializer_ClassObjectNeeded = Proc(Void*, UInt16*, UInt16*, UInt16*, MI_Class**, MI_Result)


  enum MI_Result : Int32
    MI_RESULT_OK = 0
    MI_RESULT_FAILED = 1
    MI_RESULT_ACCESS_DENIED = 2
    MI_RESULT_INVALID_NAMESPACE = 3
    MI_RESULT_INVALID_PARAMETER = 4
    MI_RESULT_INVALID_CLASS = 5
    MI_RESULT_NOT_FOUND = 6
    MI_RESULT_NOT_SUPPORTED = 7
    MI_RESULT_CLASS_HAS_CHILDREN = 8
    MI_RESULT_CLASS_HAS_INSTANCES = 9
    MI_RESULT_INVALID_SUPERCLASS = 10
    MI_RESULT_ALREADY_EXISTS = 11
    MI_RESULT_NO_SUCH_PROPERTY = 12
    MI_RESULT_TYPE_MISMATCH = 13
    MI_RESULT_QUERY_LANGUAGE_NOT_SUPPORTED = 14
    MI_RESULT_INVALID_QUERY = 15
    MI_RESULT_METHOD_NOT_AVAILABLE = 16
    MI_RESULT_METHOD_NOT_FOUND = 17
    MI_RESULT_NAMESPACE_NOT_EMPTY = 20
    MI_RESULT_INVALID_ENUMERATION_CONTEXT = 21
    MI_RESULT_INVALID_OPERATION_TIMEOUT = 22
    MI_RESULT_PULL_HAS_BEEN_ABANDONED = 23
    MI_RESULT_PULL_CANNOT_BE_ABANDONED = 24
    MI_RESULT_FILTERED_ENUMERATION_NOT_SUPPORTED = 25
    MI_RESULT_CONTINUATION_ON_ERROR_NOT_SUPPORTED = 26
    MI_RESULT_SERVER_LIMITS_EXCEEDED = 27
    MI_RESULT_SERVER_IS_SHUTTING_DOWN = 28
  end

  enum MI_ErrorCategory : Int32
    MI_ERRORCATEGORY_NOT_SPECIFIED = 0
    MI_ERRORCATEGORY_OPEN_ERROR = 1
    MI_ERRORCATEGORY_CLOS_EERROR = 2
    MI_ERRORCATEGORY_DEVICE_ERROR = 3
    MI_ERRORCATEGORY_DEADLOCK_DETECTED = 4
    MI_ERRORCATEGORY_INVALID_ARGUMENT = 5
    MI_ERRORCATEGORY_INVALID_DATA = 6
    MI_ERRORCATEGORY_INVALID_OPERATION = 7
    MI_ERRORCATEGORY_INVALID_RESULT = 8
    MI_ERRORCATEGORY_INVALID_TYPE = 9
    MI_ERRORCATEGORY_METADATA_ERROR = 10
    MI_ERRORCATEGORY_NOT_IMPLEMENTED = 11
    MI_ERRORCATEGORY_NOT_INSTALLED = 12
    MI_ERRORCATEGORY_OBJECT_NOT_FOUND = 13
    MI_ERRORCATEGORY_OPERATION_STOPPED = 14
    MI_ERRORCATEGORY_OPERATION_TIMEOUT = 15
    MI_ERRORCATEGORY_SYNTAX_ERROR = 16
    MI_ERRORCATEGORY_PARSER_ERROR = 17
    MI_ERRORCATEGORY_ACCESS_DENIED = 18
    MI_ERRORCATEGORY_RESOURCE_BUSY = 19
    MI_ERRORCATEGORY_RESOURCE_EXISTS = 20
    MI_ERRORCATEGORY_RESOURCE_UNAVAILABLE = 21
    MI_ERRORCATEGORY_READ_ERROR = 22
    MI_ERRORCATEGORY_WRITE_ERROR = 23
    MI_ERRORCATEGORY_FROM_STDERR = 24
    MI_ERRORCATEGORY_SECURITY_ERROR = 25
    MI_ERRORCATEGORY_PROTOCOL_ERROR = 26
    MI_ERRORCATEGORY_CONNECTION_ERROR = 27
    MI_ERRORCATEGORY_AUTHENTICATION_ERROR = 28
    MI_ERRORCATEGORY_LIMITS_EXCEEDED = 29
    MI_ERRORCATEGORY_QUOTA_EXCEEDED = 30
    MI_ERRORCATEGORY_NOT_ENABLED = 31
  end

  enum MI_PromptType : Int32
    MI_PROMPTTYPE_NORMAL = 0
    MI_PROMPTTYPE_CRITICAL = 1
  end

  enum MI_CallbackMode : Int32
    MI_CALLBACKMODE_REPORT = 0
    MI_CALLBACKMODE_INQUIRE = 1
    MI_CALLBACKMODE_IGNORE = 2
  end

  enum MI_ProviderArchitecture : Int32
    MI_PROVIDER_ARCHITECTURE_32BIT = 0
    MI_PROVIDER_ARCHITECTURE_64BIT = 1
  end

  enum MI_Type : Int32
    MI_BOOLEAN = 0
    MI_UINT8 = 1
    MI_SINT8 = 2
    MI_UINT16 = 3
    MI_SINT16 = 4
    MI_UINT32 = 5
    MI_SINT32 = 6
    MI_UINT64 = 7
    MI_SINT64 = 8
    MI_REAL32 = 9
    MI_REAL64 = 10
    MI_CHAR16 = 11
    MI_DATETIME = 12
    MI_STRING = 13
    MI_REFERENCE = 14
    MI_INSTANCE = 15
    MI_BOOLEANA = 16
    MI_UINT8A = 17
    MI_SINT8A = 18
    MI_UINT16A = 19
    MI_SINT16A = 20
    MI_UINT32A = 21
    MI_SINT32A = 22
    MI_UINT64A = 23
    MI_SINT64A = 24
    MI_REAL32A = 25
    MI_REAL64A = 26
    MI_CHAR16A = 27
    MI_DATETIMEA = 28
    MI_STRINGA = 29
    MI_REFERENCEA = 30
    MI_INSTANCEA = 31
    MI_ARRAY = 16
  end

  enum MI_LocaleType : Int32
    MI_LOCALE_TYPE_REQUESTED_UI = 0
    MI_LOCALE_TYPE_REQUESTED_DATA = 1
    MI_LOCALE_TYPE_CLOSEST_UI = 2
    MI_LOCALE_TYPE_CLOSEST_DATA = 3
  end

  enum MI_CancellationReason : Int32
    MI_REASON_NONE = 0
    MI_REASON_TIMEOUT = 1
    MI_REASON_SHUTDOWN = 2
    MI_REASON_SERVICESTOP = 3
  end

  enum MI_OperationCallback_ResponseType : Int32
    MI_OperationCallback_ResponseType_No = 0
    MI_OperationCallback_ResponseType_Yes = 1
    MI_OperationCallback_ResponseType_NoToAll = 2
    MI_OperationCallback_ResponseType_YesToAll = 3
  end

  enum MI_SubscriptionDeliveryType : Int32
    MI_SubscriptionDeliveryType_Pull = 1
    MI_SubscriptionDeliveryType_Push = 2
  end

  enum MI_DestinationOptions_ImpersonationType : Int32
    MI_DestinationOptions_ImpersonationType_Default = 0
    MI_DestinationOptions_ImpersonationType_None = 1
    MI_DestinationOptions_ImpersonationType_Identify = 2
    MI_DestinationOptions_ImpersonationType_Impersonate = 3
    MI_DestinationOptions_ImpersonationType_Delegate = 4
  end

  enum WBEM_PATH_STATUS_FLAG : Int32
    WBEMPATH_INFO_ANON_LOCAL_MACHINE = 1
    WBEMPATH_INFO_HAS_MACHINE_NAME = 2
    WBEMPATH_INFO_IS_CLASS_REF = 4
    WBEMPATH_INFO_IS_INST_REF = 8
    WBEMPATH_INFO_HAS_SUBSCOPES = 16
    WBEMPATH_INFO_IS_COMPOUND = 32
    WBEMPATH_INFO_HAS_V2_REF_PATHS = 64
    WBEMPATH_INFO_HAS_IMPLIED_KEY = 128
    WBEMPATH_INFO_CONTAINS_SINGLETON = 256
    WBEMPATH_INFO_V1_COMPLIANT = 512
    WBEMPATH_INFO_V2_COMPLIANT = 1024
    WBEMPATH_INFO_CIM_COMPLIANT = 2048
    WBEMPATH_INFO_IS_SINGLETON = 4096
    WBEMPATH_INFO_IS_PARENT = 8192
    WBEMPATH_INFO_SERVER_NAMESPACE_ONLY = 16384
    WBEMPATH_INFO_NATIVE_PATH = 32768
    WBEMPATH_INFO_WMI_PATH = 65536
    WBEMPATH_INFO_PATH_HAD_SERVER = 131072
  end

  enum WBEM_PATH_CREATE_FLAG : Int32
    WBEMPATH_CREATE_ACCEPT_RELATIVE = 1
    WBEMPATH_CREATE_ACCEPT_ABSOLUTE = 2
    WBEMPATH_CREATE_ACCEPT_ALL = 4
    WBEMPATH_TREAT_SINGLE_IDENT_AS_NS = 8
  end

  enum WBEM_GET_TEXT_FLAGS : Int32
    WBEMPATH_COMPRESSED = 1
    WBEMPATH_GET_RELATIVE_ONLY = 2
    WBEMPATH_GET_SERVER_TOO = 4
    WBEMPATH_GET_SERVER_AND_NAMESPACE_ONLY = 8
    WBEMPATH_GET_NAMESPACE_ONLY = 16
    WBEMPATH_GET_ORIGINAL = 32
  end

  enum WBEM_GET_KEY_FLAGS : Int32
    WBEMPATH_TEXT = 1
    WBEMPATH_QUOTEDTEXT = 2
  end

  enum WMIQ_ANALYSIS_TYPE : Int32
    WMIQ_ANALYSIS_RPN_SEQUENCE = 1
    WMIQ_ANALYSIS_ASSOC_QUERY = 2
    WMIQ_ANALYSIS_PROP_ANALYSIS_MATRIX = 3
    WMIQ_ANALYSIS_QUERY_TEXT = 4
    WMIQ_ANALYSIS_RESERVED = 134217728
  end

  enum WMIQ_RPN_TOKEN_FLAGS : Int32
    WMIQ_RPN_TOKEN_EXPRESSION = 1
    WMIQ_RPN_TOKEN_AND = 2
    WMIQ_RPN_TOKEN_OR = 3
    WMIQ_RPN_TOKEN_NOT = 4
    WMIQ_RPN_OP_UNDEFINED = 0
    WMIQ_RPN_OP_EQ = 1
    WMIQ_RPN_OP_NE = 2
    WMIQ_RPN_OP_GE = 3
    WMIQ_RPN_OP_LE = 4
    WMIQ_RPN_OP_LT = 5
    WMIQ_RPN_OP_GT = 6
    WMIQ_RPN_OP_LIKE = 7
    WMIQ_RPN_OP_ISA = 8
    WMIQ_RPN_OP_ISNOTA = 9
    WMIQ_RPN_OP_ISNULL = 10
    WMIQ_RPN_OP_ISNOTNULL = 11
    WMIQ_RPN_LEFT_PROPERTY_NAME = 1
    WMIQ_RPN_RIGHT_PROPERTY_NAME = 2
    WMIQ_RPN_CONST2 = 4
    WMIQ_RPN_CONST = 8
    WMIQ_RPN_RELOP = 16
    WMIQ_RPN_LEFT_FUNCTION = 32
    WMIQ_RPN_RIGHT_FUNCTION = 64
    WMIQ_RPN_GET_TOKEN_TYPE = 1
    WMIQ_RPN_GET_EXPR_SHAPE = 2
    WMIQ_RPN_GET_LEFT_FUNCTION = 3
    WMIQ_RPN_GET_RIGHT_FUNCTION = 4
    WMIQ_RPN_GET_RELOP = 5
    WMIQ_RPN_NEXT_TOKEN = 1
    WMIQ_RPN_FROM_UNARY = 1
    WMIQ_RPN_FROM_PATH = 2
    WMIQ_RPN_FROM_CLASS_LIST = 4
    WMIQ_RPN_FROM_MULTIPLE = 8
  end

  enum WMIQ_ASSOCQ_FLAGS : Int32
    WMIQ_ASSOCQ_ASSOCIATORS = 1
    WMIQ_ASSOCQ_REFERENCES = 2
    WMIQ_ASSOCQ_RESULTCLASS = 4
    WMIQ_ASSOCQ_ASSOCCLASS = 8
    WMIQ_ASSOCQ_ROLE = 16
    WMIQ_ASSOCQ_RESULTROLE = 32
    WMIQ_ASSOCQ_REQUIREDQUALIFIER = 64
    WMIQ_ASSOCQ_REQUIREDASSOCQUALIFIER = 128
    WMIQ_ASSOCQ_CLASSDEFSONLY = 256
    WMIQ_ASSOCQ_KEYSONLY = 512
    WMIQ_ASSOCQ_SCHEMAONLY = 1024
    WMIQ_ASSOCQ_CLASSREFSONLY = 2048
  end

  enum WMIQ_LANGUAGE_FEATURES : Int32
    WMIQ_LF1_BASIC_SELECT = 1
    WMIQ_LF2_CLASS_NAME_IN_QUERY = 2
    WMIQ_LF3_STRING_CASE_FUNCTIONS = 3
    WMIQ_LF4_PROP_TO_PROP_TESTS = 4
    WMIQ_LF5_COUNT_STAR = 5
    WMIQ_LF6_ORDER_BY = 6
    WMIQ_LF7_DISTINCT = 7
    WMIQ_LF8_ISA = 8
    WMIQ_LF9_THIS = 9
    WMIQ_LF10_COMPEX_SUBEXPRESSIONS = 10
    WMIQ_LF11_ALIASING = 11
    WMIQ_LF12_GROUP_BY_HAVING = 12
    WMIQ_LF13_WMI_WITHIN = 13
    WMIQ_LF14_SQL_WRITE_OPERATIONS = 14
    WMIQ_LF15_GO = 15
    WMIQ_LF16_SINGLE_LEVEL_TRANSACTIONS = 16
    WMIQ_LF17_QUALIFIED_NAMES = 17
    WMIQ_LF18_ASSOCIATONS = 18
    WMIQ_LF19_SYSTEM_PROPERTIES = 19
    WMIQ_LF20_EXTENDED_SYSTEM_PROPERTIES = 20
    WMIQ_LF21_SQL89_JOINS = 21
    WMIQ_LF22_SQL92_JOINS = 22
    WMIQ_LF23_SUBSELECTS = 23
    WMIQ_LF24_UMI_EXTENSIONS = 24
    WMIQ_LF25_DATEPART = 25
    WMIQ_LF26_LIKE = 26
    WMIQ_LF27_CIM_TEMPORAL_CONSTRUCTS = 27
    WMIQ_LF28_STANDARD_AGGREGATES = 28
    WMIQ_LF29_MULTI_LEVEL_ORDER_BY = 29
    WMIQ_LF30_WMI_PRAGMAS = 30
    WMIQ_LF31_QUALIFIER_TESTS = 31
    WMIQ_LF32_SP_EXECUTE = 32
    WMIQ_LF33_ARRAY_ACCESS = 33
    WMIQ_LF34_UNION = 34
    WMIQ_LF35_COMPLEX_SELECT_TARGET = 35
    WMIQ_LF36_REFERENCE_TESTS = 36
    WMIQ_LF37_SELECT_INTO = 37
    WMIQ_LF38_BASIC_DATETIME_TESTS = 38
    WMIQ_LF39_COUNT_COLUMN = 39
    WMIQ_LF40_BETWEEN = 40
    WMIQ_LF_LAST = 40
  end

  enum WMIQ_RPNQ_FEATURE : Int32
    WMIQ_RPNF_WHERE_CLAUSE_PRESENT = 1
    WMIQ_RPNF_QUERY_IS_CONJUNCTIVE = 2
    WMIQ_RPNF_QUERY_IS_DISJUNCTIVE = 4
    WMIQ_RPNF_PROJECTION = 8
    WMIQ_RPNF_FEATURE_SELECT_STAR = 16
    WMIQ_RPNF_EQUALITY_TESTS_ONLY = 32
    WMIQ_RPNF_COUNT_STAR = 64
    WMIQ_RPNF_QUALIFIED_NAMES_USED = 128
    WMIQ_RPNF_SYSPROP_CLASS_USED = 256
    WMIQ_RPNF_PROP_TO_PROP_TESTS = 512
    WMIQ_RPNF_ORDER_BY = 1024
    WMIQ_RPNF_ISA_USED = 2048
    WMIQ_RPNF_GROUP_BY_HAVING = 4096
    WMIQ_RPNF_ARRAY_ACCESS_USED = 8192
  end

  enum WBEM_GENUS_TYPE : Int32
    WBEM_GENUS_CLASS = 1
    WBEM_GENUS_INSTANCE = 2
  end

  enum WBEM_CHANGE_FLAG_TYPE : Int32
    WBEM_FLAG_CREATE_OR_UPDATE = 0
    WBEM_FLAG_UPDATE_ONLY = 1
    WBEM_FLAG_CREATE_ONLY = 2
    WBEM_FLAG_UPDATE_COMPATIBLE = 0
    WBEM_FLAG_UPDATE_SAFE_MODE = 32
    WBEM_FLAG_UPDATE_FORCE_MODE = 64
    WBEM_MASK_UPDATE_MODE = 96
    WBEM_FLAG_ADVISORY = 65536
  end

  enum WBEM_GENERIC_FLAG_TYPE : Int32
    WBEM_FLAG_RETURN_IMMEDIATELY = 16
    WBEM_FLAG_RETURN_WBEM_COMPLETE = 0
    WBEM_FLAG_BIDIRECTIONAL = 0
    WBEM_FLAG_FORWARD_ONLY = 32
    WBEM_FLAG_NO_ERROR_OBJECT = 64
    WBEM_FLAG_RETURN_ERROR_OBJECT = 0
    WBEM_FLAG_SEND_STATUS = 128
    WBEM_FLAG_DONT_SEND_STATUS = 0
    WBEM_FLAG_ENSURE_LOCATABLE = 256
    WBEM_FLAG_DIRECT_READ = 512
    WBEM_FLAG_SEND_ONLY_SELECTED = 0
    WBEM_RETURN_WHEN_COMPLETE = 0
    WBEM_RETURN_IMMEDIATELY = 16
    WBEM_MASK_RESERVED_FLAGS = 126976
    WBEM_FLAG_USE_AMENDED_QUALIFIERS = 131072
    WBEM_FLAG_STRONG_VALIDATION = 1048576
  end

  enum WBEM_STATUS_TYPE : Int32
    WBEM_STATUS_COMPLETE = 0
    WBEM_STATUS_REQUIREMENTS = 1
    WBEM_STATUS_PROGRESS = 2
    WBEM_STATUS_LOGGING_INFORMATION = 256
    WBEM_STATUS_LOGGING_INFORMATION_PROVIDER = 512
    WBEM_STATUS_LOGGING_INFORMATION_HOST = 1024
    WBEM_STATUS_LOGGING_INFORMATION_REPOSITORY = 2048
    WBEM_STATUS_LOGGING_INFORMATION_ESS = 4096
  end

  enum WBEM_TIMEOUT_TYPE : Int32
    WBEM_NO_WAIT = 0
    WBEM_INFINITE = -1
  end

  enum WBEM_CONDITION_FLAG_TYPE : Int32
    WBEM_FLAG_ALWAYS = 0
    WBEM_FLAG_ONLY_IF_TRUE = 1
    WBEM_FLAG_ONLY_IF_FALSE = 2
    WBEM_FLAG_ONLY_IF_IDENTICAL = 3
    WBEM_MASK_PRIMARY_CONDITION = 3
    WBEM_FLAG_KEYS_ONLY = 4
    WBEM_FLAG_REFS_ONLY = 8
    WBEM_FLAG_LOCAL_ONLY = 16
    WBEM_FLAG_PROPAGATED_ONLY = 32
    WBEM_FLAG_SYSTEM_ONLY = 48
    WBEM_FLAG_NONSYSTEM_ONLY = 64
    WBEM_MASK_CONDITION_ORIGIN = 112
    WBEM_FLAG_CLASS_OVERRIDES_ONLY = 256
    WBEM_FLAG_CLASS_LOCAL_AND_OVERRIDES = 512
    WBEM_MASK_CLASS_CONDITION = 768
  end

  enum WBEM_FLAVOR_TYPE : Int32
    WBEM_FLAVOR_DONT_PROPAGATE = 0
    WBEM_FLAVOR_FLAG_PROPAGATE_TO_INSTANCE = 1
    WBEM_FLAVOR_FLAG_PROPAGATE_TO_DERIVED_CLASS = 2
    WBEM_FLAVOR_MASK_PROPAGATION = 15
    WBEM_FLAVOR_OVERRIDABLE = 0
    WBEM_FLAVOR_NOT_OVERRIDABLE = 16
    WBEM_FLAVOR_MASK_PERMISSIONS = 16
    WBEM_FLAVOR_ORIGIN_LOCAL = 0
    WBEM_FLAVOR_ORIGIN_PROPAGATED = 32
    WBEM_FLAVOR_ORIGIN_SYSTEM = 64
    WBEM_FLAVOR_MASK_ORIGIN = 96
    WBEM_FLAVOR_NOT_AMENDED = 0
    WBEM_FLAVOR_AMENDED = 128
    WBEM_FLAVOR_MASK_AMENDED = 128
  end

  enum WBEM_QUERY_FLAG_TYPE : Int32
    WBEM_FLAG_DEEP = 0
    WBEM_FLAG_SHALLOW = 1
    WBEM_FLAG_PROTOTYPE = 2
  end

  enum WBEM_SECURITY_FLAGS : Int32
    WBEM_ENABLE = 1
    WBEM_METHOD_EXECUTE = 2
    WBEM_FULL_WRITE_REP = 4
    WBEM_PARTIAL_WRITE_REP = 8
    WBEM_WRITE_PROVIDER = 16
    WBEM_REMOTE_ACCESS = 32
    WBEM_RIGHT_SUBSCRIBE = 64
    WBEM_RIGHT_PUBLISH = 128
  end

  enum WBEM_LIMITATION_FLAG_TYPE : Int32
    WBEM_FLAG_EXCLUDE_OBJECT_QUALIFIERS = 16
    WBEM_FLAG_EXCLUDE_PROPERTY_QUALIFIERS = 32
  end

  enum WBEM_TEXT_FLAG_TYPE : Int32
    WBEM_FLAG_NO_FLAVORS = 1
  end

  enum WBEM_COMPARISON_FLAG : Int32
    WBEM_COMPARISON_INCLUDE_ALL = 0
    WBEM_FLAG_IGNORE_QUALIFIERS = 1
    WBEM_FLAG_IGNORE_OBJECT_SOURCE = 2
    WBEM_FLAG_IGNORE_DEFAULT_VALUES = 4
    WBEM_FLAG_IGNORE_CLASS = 8
    WBEM_FLAG_IGNORE_CASE = 16
    WBEM_FLAG_IGNORE_FLAVOR = 32
  end

  enum WBEM_LOCKING : Int32
    WBEM_FLAG_ALLOW_READ = 1
  end

  enum CIMTYPE_ENUMERATION : Int32
    CIM_ILLEGAL = 4095
    CIM_EMPTY = 0
    CIM_SINT8 = 16
    CIM_UINT8 = 17
    CIM_SINT16 = 2
    CIM_UINT16 = 18
    CIM_SINT32 = 3
    CIM_UINT32 = 19
    CIM_SINT64 = 20
    CIM_UINT64 = 21
    CIM_REAL32 = 4
    CIM_REAL64 = 5
    CIM_BOOLEAN = 11
    CIM_STRING = 8
    CIM_DATETIME = 101
    CIM_REFERENCE = 102
    CIM_CHAR16 = 103
    CIM_OBJECT = 13
    CIM_FLAG_ARRAY = 8192
  end

  enum WBEM_BACKUP_RESTORE_FLAGS : Int32
    WBEM_FLAG_BACKUP_RESTORE_DEFAULT = 0
    WBEM_FLAG_BACKUP_RESTORE_FORCE_SHUTDOWN = 1
  end

  enum WBEM_REFRESHER_FLAGS : Int32
    WBEM_FLAG_REFRESH_AUTO_RECONNECT = 0
    WBEM_FLAG_REFRESH_NO_AUTO_RECONNECT = 1
  end

  enum WBEM_SHUTDOWN_FLAGS : Int32
    WBEM_SHUTDOWN_UNLOAD_COMPONENT = 1
    WBEM_SHUTDOWN_WMI = 2
    WBEM_SHUTDOWN_OS = 3
  end

  enum WBEMSTATUS_FORMAT : Int32
    WBEMSTATUS_FORMAT_NEWLINE = 0
    WBEMSTATUS_FORMAT_NO_NEWLINE = 1
  end

  enum WBEM_LIMITS : Int32
    WBEM_MAX_IDENTIFIER = 4096
    WBEM_MAX_QUERY = 16384
    WBEM_MAX_PATH = 8192
    WBEM_MAX_OBJECT_NESTING = 64
    WBEM_MAX_USER_PROPERTIES = 1024
  end

  enum WBEMSTATUS : Int32
    WBEM_NO_ERROR = 0
    WBEM_S_NO_ERROR = 0
    WBEM_S_SAME = 0
    WBEM_S_FALSE = 1
    WBEM_S_ALREADY_EXISTS = 262145
    WBEM_S_RESET_TO_DEFAULT = 262146
    WBEM_S_DIFFERENT = 262147
    WBEM_S_TIMEDOUT = 262148
    WBEM_S_NO_MORE_DATA = 262149
    WBEM_S_OPERATION_CANCELLED = 262150
    WBEM_S_PENDING = 262151
    WBEM_S_DUPLICATE_OBJECTS = 262152
    WBEM_S_ACCESS_DENIED = 262153
    WBEM_S_PARTIAL_RESULTS = 262160
    WBEM_S_SOURCE_NOT_AVAILABLE = 262167
    WBEM_E_FAILED = -2147217407
    WBEM_E_NOT_FOUND = -2147217406
    WBEM_E_ACCESS_DENIED = -2147217405
    WBEM_E_PROVIDER_FAILURE = -2147217404
    WBEM_E_TYPE_MISMATCH = -2147217403
    WBEM_E_OUT_OF_MEMORY = -2147217402
    WBEM_E_INVALID_CONTEXT = -2147217401
    WBEM_E_INVALID_PARAMETER = -2147217400
    WBEM_E_NOT_AVAILABLE = -2147217399
    WBEM_E_CRITICAL_ERROR = -2147217398
    WBEM_E_INVALID_STREAM = -2147217397
    WBEM_E_NOT_SUPPORTED = -2147217396
    WBEM_E_INVALID_SUPERCLASS = -2147217395
    WBEM_E_INVALID_NAMESPACE = -2147217394
    WBEM_E_INVALID_OBJECT = -2147217393
    WBEM_E_INVALID_CLASS = -2147217392
    WBEM_E_PROVIDER_NOT_FOUND = -2147217391
    WBEM_E_INVALID_PROVIDER_REGISTRATION = -2147217390
    WBEM_E_PROVIDER_LOAD_FAILURE = -2147217389
    WBEM_E_INITIALIZATION_FAILURE = -2147217388
    WBEM_E_TRANSPORT_FAILURE = -2147217387
    WBEM_E_INVALID_OPERATION = -2147217386
    WBEM_E_INVALID_QUERY = -2147217385
    WBEM_E_INVALID_QUERY_TYPE = -2147217384
    WBEM_E_ALREADY_EXISTS = -2147217383
    WBEM_E_OVERRIDE_NOT_ALLOWED = -2147217382
    WBEM_E_PROPAGATED_QUALIFIER = -2147217381
    WBEM_E_PROPAGATED_PROPERTY = -2147217380
    WBEM_E_UNEXPECTED = -2147217379
    WBEM_E_ILLEGAL_OPERATION = -2147217378
    WBEM_E_CANNOT_BE_KEY = -2147217377
    WBEM_E_INCOMPLETE_CLASS = -2147217376
    WBEM_E_INVALID_SYNTAX = -2147217375
    WBEM_E_NONDECORATED_OBJECT = -2147217374
    WBEM_E_READ_ONLY = -2147217373
    WBEM_E_PROVIDER_NOT_CAPABLE = -2147217372
    WBEM_E_CLASS_HAS_CHILDREN = -2147217371
    WBEM_E_CLASS_HAS_INSTANCES = -2147217370
    WBEM_E_QUERY_NOT_IMPLEMENTED = -2147217369
    WBEM_E_ILLEGAL_NULL = -2147217368
    WBEM_E_INVALID_QUALIFIER_TYPE = -2147217367
    WBEM_E_INVALID_PROPERTY_TYPE = -2147217366
    WBEM_E_VALUE_OUT_OF_RANGE = -2147217365
    WBEM_E_CANNOT_BE_SINGLETON = -2147217364
    WBEM_E_INVALID_CIM_TYPE = -2147217363
    WBEM_E_INVALID_METHOD = -2147217362
    WBEM_E_INVALID_METHOD_PARAMETERS = -2147217361
    WBEM_E_SYSTEM_PROPERTY = -2147217360
    WBEM_E_INVALID_PROPERTY = -2147217359
    WBEM_E_CALL_CANCELLED = -2147217358
    WBEM_E_SHUTTING_DOWN = -2147217357
    WBEM_E_PROPAGATED_METHOD = -2147217356
    WBEM_E_UNSUPPORTED_PARAMETER = -2147217355
    WBEM_E_MISSING_PARAMETER_ID = -2147217354
    WBEM_E_INVALID_PARAMETER_ID = -2147217353
    WBEM_E_NONCONSECUTIVE_PARAMETER_IDS = -2147217352
    WBEM_E_PARAMETER_ID_ON_RETVAL = -2147217351
    WBEM_E_INVALID_OBJECT_PATH = -2147217350
    WBEM_E_OUT_OF_DISK_SPACE = -2147217349
    WBEM_E_BUFFER_TOO_SMALL = -2147217348
    WBEM_E_UNSUPPORTED_PUT_EXTENSION = -2147217347
    WBEM_E_UNKNOWN_OBJECT_TYPE = -2147217346
    WBEM_E_UNKNOWN_PACKET_TYPE = -2147217345
    WBEM_E_MARSHAL_VERSION_MISMATCH = -2147217344
    WBEM_E_MARSHAL_INVALID_SIGNATURE = -2147217343
    WBEM_E_INVALID_QUALIFIER = -2147217342
    WBEM_E_INVALID_DUPLICATE_PARAMETER = -2147217341
    WBEM_E_TOO_MUCH_DATA = -2147217340
    WBEM_E_SERVER_TOO_BUSY = -2147217339
    WBEM_E_INVALID_FLAVOR = -2147217338
    WBEM_E_CIRCULAR_REFERENCE = -2147217337
    WBEM_E_UNSUPPORTED_CLASS_UPDATE = -2147217336
    WBEM_E_CANNOT_CHANGE_KEY_INHERITANCE = -2147217335
    WBEM_E_CANNOT_CHANGE_INDEX_INHERITANCE = -2147217328
    WBEM_E_TOO_MANY_PROPERTIES = -2147217327
    WBEM_E_UPDATE_TYPE_MISMATCH = -2147217326
    WBEM_E_UPDATE_OVERRIDE_NOT_ALLOWED = -2147217325
    WBEM_E_UPDATE_PROPAGATED_METHOD = -2147217324
    WBEM_E_METHOD_NOT_IMPLEMENTED = -2147217323
    WBEM_E_METHOD_DISABLED = -2147217322
    WBEM_E_REFRESHER_BUSY = -2147217321
    WBEM_E_UNPARSABLE_QUERY = -2147217320
    WBEM_E_NOT_EVENT_CLASS = -2147217319
    WBEM_E_MISSING_GROUP_WITHIN = -2147217318
    WBEM_E_MISSING_AGGREGATION_LIST = -2147217317
    WBEM_E_PROPERTY_NOT_AN_OBJECT = -2147217316
    WBEM_E_AGGREGATING_BY_OBJECT = -2147217315
    WBEM_E_UNINTERPRETABLE_PROVIDER_QUERY = -2147217313
    WBEM_E_BACKUP_RESTORE_WINMGMT_RUNNING = -2147217312
    WBEM_E_QUEUE_OVERFLOW = -2147217311
    WBEM_E_PRIVILEGE_NOT_HELD = -2147217310
    WBEM_E_INVALID_OPERATOR = -2147217309
    WBEM_E_LOCAL_CREDENTIALS = -2147217308
    WBEM_E_CANNOT_BE_ABSTRACT = -2147217307
    WBEM_E_AMENDED_OBJECT = -2147217306
    WBEM_E_CLIENT_TOO_SLOW = -2147217305
    WBEM_E_NULL_SECURITY_DESCRIPTOR = -2147217304
    WBEM_E_TIMED_OUT = -2147217303
    WBEM_E_INVALID_ASSOCIATION = -2147217302
    WBEM_E_AMBIGUOUS_OPERATION = -2147217301
    WBEM_E_QUOTA_VIOLATION = -2147217300
    WBEM_E_RESERVED_001 = -2147217299
    WBEM_E_RESERVED_002 = -2147217298
    WBEM_E_UNSUPPORTED_LOCALE = -2147217297
    WBEM_E_HANDLE_OUT_OF_DATE = -2147217296
    WBEM_E_CONNECTION_FAILED = -2147217295
    WBEM_E_INVALID_HANDLE_REQUEST = -2147217294
    WBEM_E_PROPERTY_NAME_TOO_WIDE = -2147217293
    WBEM_E_CLASS_NAME_TOO_WIDE = -2147217292
    WBEM_E_METHOD_NAME_TOO_WIDE = -2147217291
    WBEM_E_QUALIFIER_NAME_TOO_WIDE = -2147217290
    WBEM_E_RERUN_COMMAND = -2147217289
    WBEM_E_DATABASE_VER_MISMATCH = -2147217288
    WBEM_E_VETO_DELETE = -2147217287
    WBEM_E_VETO_PUT = -2147217286
    WBEM_E_INVALID_LOCALE = -2147217280
    WBEM_E_PROVIDER_SUSPENDED = -2147217279
    WBEM_E_SYNCHRONIZATION_REQUIRED = -2147217278
    WBEM_E_NO_SCHEMA = -2147217277
    WBEM_E_PROVIDER_ALREADY_REGISTERED = -2147217276
    WBEM_E_PROVIDER_NOT_REGISTERED = -2147217275
    WBEM_E_FATAL_TRANSPORT_ERROR = -2147217274
    WBEM_E_ENCRYPTED_CONNECTION_REQUIRED = -2147217273
    WBEM_E_PROVIDER_TIMED_OUT = -2147217272
    WBEM_E_NO_KEY = -2147217271
    WBEM_E_PROVIDER_DISABLED = -2147217270
    WBEMESS_E_REGISTRATION_TOO_BROAD = -2147213311
    WBEMESS_E_REGISTRATION_TOO_PRECISE = -2147213310
    WBEMESS_E_AUTHZ_NOT_PRIVILEGED = -2147213309
    WBEMMOF_E_EXPECTED_QUALIFIER_NAME = -2147205119
    WBEMMOF_E_EXPECTED_SEMI = -2147205118
    WBEMMOF_E_EXPECTED_OPEN_BRACE = -2147205117
    WBEMMOF_E_EXPECTED_CLOSE_BRACE = -2147205116
    WBEMMOF_E_EXPECTED_CLOSE_BRACKET = -2147205115
    WBEMMOF_E_EXPECTED_CLOSE_PAREN = -2147205114
    WBEMMOF_E_ILLEGAL_CONSTANT_VALUE = -2147205113
    WBEMMOF_E_EXPECTED_TYPE_IDENTIFIER = -2147205112
    WBEMMOF_E_EXPECTED_OPEN_PAREN = -2147205111
    WBEMMOF_E_UNRECOGNIZED_TOKEN = -2147205110
    WBEMMOF_E_UNRECOGNIZED_TYPE = -2147205109
    WBEMMOF_E_EXPECTED_PROPERTY_NAME = -2147205108
    WBEMMOF_E_TYPEDEF_NOT_SUPPORTED = -2147205107
    WBEMMOF_E_UNEXPECTED_ALIAS = -2147205106
    WBEMMOF_E_UNEXPECTED_ARRAY_INIT = -2147205105
    WBEMMOF_E_INVALID_AMENDMENT_SYNTAX = -2147205104
    WBEMMOF_E_INVALID_DUPLICATE_AMENDMENT = -2147205103
    WBEMMOF_E_INVALID_PRAGMA = -2147205102
    WBEMMOF_E_INVALID_NAMESPACE_SYNTAX = -2147205101
    WBEMMOF_E_EXPECTED_CLASS_NAME = -2147205100
    WBEMMOF_E_TYPE_MISMATCH = -2147205099
    WBEMMOF_E_EXPECTED_ALIAS_NAME = -2147205098
    WBEMMOF_E_INVALID_CLASS_DECLARATION = -2147205097
    WBEMMOF_E_INVALID_INSTANCE_DECLARATION = -2147205096
    WBEMMOF_E_EXPECTED_DOLLAR = -2147205095
    WBEMMOF_E_CIMTYPE_QUALIFIER = -2147205094
    WBEMMOF_E_DUPLICATE_PROPERTY = -2147205093
    WBEMMOF_E_INVALID_NAMESPACE_SPECIFICATION = -2147205092
    WBEMMOF_E_OUT_OF_RANGE = -2147205091
    WBEMMOF_E_INVALID_FILE = -2147205090
    WBEMMOF_E_ALIASES_IN_EMBEDDED = -2147205089
    WBEMMOF_E_NULL_ARRAY_ELEM = -2147205088
    WBEMMOF_E_DUPLICATE_QUALIFIER = -2147205087
    WBEMMOF_E_EXPECTED_FLAVOR_TYPE = -2147205086
    WBEMMOF_E_INCOMPATIBLE_FLAVOR_TYPES = -2147205085
    WBEMMOF_E_MULTIPLE_ALIASES = -2147205084
    WBEMMOF_E_INCOMPATIBLE_FLAVOR_TYPES2 = -2147205083
    WBEMMOF_E_NO_ARRAYS_RETURNED = -2147205082
    WBEMMOF_E_MUST_BE_IN_OR_OUT = -2147205081
    WBEMMOF_E_INVALID_FLAGS_SYNTAX = -2147205080
    WBEMMOF_E_EXPECTED_BRACE_OR_BAD_TYPE = -2147205079
    WBEMMOF_E_UNSUPPORTED_CIMV22_QUAL_VALUE = -2147205078
    WBEMMOF_E_UNSUPPORTED_CIMV22_DATA_TYPE = -2147205077
    WBEMMOF_E_INVALID_DELETEINSTANCE_SYNTAX = -2147205076
    WBEMMOF_E_INVALID_QUALIFIER_SYNTAX = -2147205075
    WBEMMOF_E_QUALIFIER_USED_OUTSIDE_SCOPE = -2147205074
    WBEMMOF_E_ERROR_CREATING_TEMP_FILE = -2147205073
    WBEMMOF_E_ERROR_INVALID_INCLUDE_FILE = -2147205072
    WBEMMOF_E_INVALID_DELETECLASS_SYNTAX = -2147205071
  end

  enum WMI_OBJ_TEXT : Int32
    WMI_OBJ_TEXT_CIM_DTD_2_0 = 1
    WMI_OBJ_TEXT_WMI_DTD_2_0 = 2
    WMI_OBJ_TEXT_WMI_EXT1 = 3
    WMI_OBJ_TEXT_WMI_EXT2 = 4
    WMI_OBJ_TEXT_WMI_EXT3 = 5
    WMI_OBJ_TEXT_WMI_EXT4 = 6
    WMI_OBJ_TEXT_WMI_EXT5 = 7
    WMI_OBJ_TEXT_WMI_EXT6 = 8
    WMI_OBJ_TEXT_WMI_EXT7 = 9
    WMI_OBJ_TEXT_WMI_EXT8 = 10
    WMI_OBJ_TEXT_WMI_EXT9 = 11
    WMI_OBJ_TEXT_WMI_EXT10 = 12
    WMI_OBJ_TEXT_LAST = 13
  end

  enum WBEM_COMPILER_OPTIONS : Int32
    WBEM_FLAG_CHECK_ONLY = 1
    WBEM_FLAG_AUTORECOVER = 2
    WBEM_FLAG_WMI_CHECK = 4
    WBEM_FLAG_CONSOLE_PRINT = 8
    WBEM_FLAG_DONT_ADD_TO_LIST = 16
    WBEM_FLAG_SPLIT_FILES = 32
    WBEM_FLAG_STORE_FILE = 256
  end

  enum WBEM_CONNECT_OPTIONS : Int32
    WBEM_FLAG_CONNECT_REPOSITORY_ONLY = 64
    WBEM_FLAG_CONNECT_USE_MAX_WAIT = 128
    WBEM_FLAG_CONNECT_PROVIDERS = 256
  end

  enum WBEM_UNSECAPP_FLAG_TYPE : Int32
    WBEM_FLAG_UNSECAPP_DEFAULT_CHECK_ACCESS = 0
    WBEM_FLAG_UNSECAPP_CHECK_ACCESS = 1
    WBEM_FLAG_UNSECAPP_DONT_CHECK_ACCESS = 2
  end

  enum WBEM_INFORMATION_FLAG_TYPE : Int32
    WBEM_FLAG_SHORT_NAME = 1
    WBEM_FLAG_LONG_NAME = 2
  end

  enum WBEM_PROVIDER_REQUIREMENTS_TYPE : Int32
    WBEM_REQUIREMENTS_START_POSTFILTER = 0
    WBEM_REQUIREMENTS_STOP_POSTFILTER = 1
    WBEM_REQUIREMENTS_RECHECK_SUBSCRIPTIONS = 2
  end

  enum WBEM_EXTRA_RETURN_CODES : Int32
    WBEM_S_INITIALIZED = 0
    WBEM_S_LIMITED_SERVICE = 274433
    WBEM_S_INDIRECTLY_UPDATED = 274434
    WBEM_S_SUBJECT_TO_SDS = 274435
    WBEM_E_RETRY_LATER = -2147209215
    WBEM_E_RESOURCE_CONTENTION = -2147209214
  end

  enum WBEM_PROVIDER_FLAGS : Int32
    WBEM_FLAG_OWNER_UPDATE = 65536
  end

  enum WBEM_BATCH_TYPE : Int32
    WBEM_FLAG_BATCH_IF_NEEDED = 0
    WBEM_FLAG_MUST_BATCH = 1
    WBEM_FLAG_MUST_NOT_BATCH = 2
  end

  enum WbemChangeFlagEnum : Int32
    Wbemchangeflagcreateorupdate = 0
    Wbemchangeflagupdateonly = 1
    Wbemchangeflagcreateonly = 2
    Wbemchangeflagupdatecompatible = 0
    Wbemchangeflagupdatesafemode = 32
    Wbemchangeflagupdateforcemode = 64
    Wbemchangeflagstrongvalidation = 128
    Wbemchangeflagadvisory = 65536
  end

  enum WbemFlagEnum : Int32
    Wbemflagreturnimmediately = 16
    Wbemflagreturnwhencomplete = 0
    Wbemflagbidirectional = 0
    Wbemflagforwardonly = 32
    Wbemflagnoerrorobject = 64
    Wbemflagreturnerrorobject = 0
    Wbemflagsendstatus = 128
    Wbemflagdontsendstatus = 0
    Wbemflagensurelocatable = 256
    Wbemflagdirectread = 512
    Wbemflagsendonlyselected = 0
    Wbemflaguseamendedqualifiers = 131072
    Wbemflaggetdefault = 0
    Wbemflagspawninstance = 1
    Wbemflagusecurrenttime = 1
  end

  enum WbemQueryFlagEnum : Int32
    Wbemqueryflagdeep = 0
    Wbemqueryflagshallow = 1
    Wbemqueryflagprototype = 2
  end

  enum WbemTextFlagEnum : Int32
    Wbemtextflagnoflavors = 1
  end

  enum WbemTimeout : Int32
    Wbemtimeoutinfinite = -1
  end

  enum WbemComparisonFlagEnum : Int32
    Wbemcomparisonflagincludeall = 0
    Wbemcomparisonflagignorequalifiers = 1
    Wbemcomparisonflagignoreobjectsource = 2
    Wbemcomparisonflagignoredefaultvalues = 4
    Wbemcomparisonflagignoreclass = 8
    Wbemcomparisonflagignorecase = 16
    Wbemcomparisonflagignoreflavor = 32
  end

  enum WbemCimtypeEnum : Int32
    Wbemcimtypesint8 = 16
    Wbemcimtypeuint8 = 17
    Wbemcimtypesint16 = 2
    Wbemcimtypeuint16 = 18
    Wbemcimtypesint32 = 3
    Wbemcimtypeuint32 = 19
    Wbemcimtypesint64 = 20
    Wbemcimtypeuint64 = 21
    Wbemcimtypereal32 = 4
    Wbemcimtypereal64 = 5
    Wbemcimtypeboolean = 11
    Wbemcimtypestring = 8
    Wbemcimtypedatetime = 101
    Wbemcimtypereference = 102
    Wbemcimtypechar16 = 103
    Wbemcimtypeobject = 13
  end

  enum WbemErrorEnum : Int32
    Wbemnoerr = 0
    Wbemerrfailed = -2147217407
    Wbemerrnotfound = -2147217406
    Wbemerraccessdenied = -2147217405
    Wbemerrproviderfailure = -2147217404
    Wbemerrtypemismatch = -2147217403
    Wbemerroutofmemory = -2147217402
    Wbemerrinvalidcontext = -2147217401
    Wbemerrinvalidparameter = -2147217400
    Wbemerrnotavailable = -2147217399
    Wbemerrcriticalerror = -2147217398
    Wbemerrinvalidstream = -2147217397
    Wbemerrnotsupported = -2147217396
    Wbemerrinvalidsuperclass = -2147217395
    Wbemerrinvalidnamespace = -2147217394
    Wbemerrinvalidobject = -2147217393
    Wbemerrinvalidclass = -2147217392
    Wbemerrprovidernotfound = -2147217391
    Wbemerrinvalidproviderregistration = -2147217390
    Wbemerrproviderloadfailure = -2147217389
    Wbemerrinitializationfailure = -2147217388
    Wbemerrtransportfailure = -2147217387
    Wbemerrinvalidoperation = -2147217386
    Wbemerrinvalidquery = -2147217385
    Wbemerrinvalidquerytype = -2147217384
    Wbemerralreadyexists = -2147217383
    Wbemerroverridenotallowed = -2147217382
    Wbemerrpropagatedqualifier = -2147217381
    Wbemerrpropagatedproperty = -2147217380
    Wbemerrunexpected = -2147217379
    Wbemerrillegaloperation = -2147217378
    Wbemerrcannotbekey = -2147217377
    Wbemerrincompleteclass = -2147217376
    Wbemerrinvalidsyntax = -2147217375
    Wbemerrnondecoratedobject = -2147217374
    Wbemerrreadonly = -2147217373
    Wbemerrprovidernotcapable = -2147217372
    Wbemerrclasshaschildren = -2147217371
    Wbemerrclasshasinstances = -2147217370
    Wbemerrquerynotimplemented = -2147217369
    Wbemerrillegalnull = -2147217368
    Wbemerrinvalidqualifiertype = -2147217367
    Wbemerrinvalidpropertytype = -2147217366
    Wbemerrvalueoutofrange = -2147217365
    Wbemerrcannotbesingleton = -2147217364
    Wbemerrinvalidcimtype = -2147217363
    Wbemerrinvalidmethod = -2147217362
    Wbemerrinvalidmethodparameters = -2147217361
    Wbemerrsystemproperty = -2147217360
    Wbemerrinvalidproperty = -2147217359
    Wbemerrcallcancelled = -2147217358
    Wbemerrshuttingdown = -2147217357
    Wbemerrpropagatedmethod = -2147217356
    Wbemerrunsupportedparameter = -2147217355
    Wbemerrmissingparameter = -2147217354
    Wbemerrinvalidparameterid = -2147217353
    Wbemerrnonconsecutiveparameterids = -2147217352
    Wbemerrparameteridonretval = -2147217351
    Wbemerrinvalidobjectpath = -2147217350
    Wbemerroutofdiskspace = -2147217349
    Wbemerrbuffertoosmall = -2147217348
    Wbemerrunsupportedputextension = -2147217347
    Wbemerrunknownobjecttype = -2147217346
    Wbemerrunknownpackettype = -2147217345
    Wbemerrmarshalversionmismatch = -2147217344
    Wbemerrmarshalinvalidsignature = -2147217343
    Wbemerrinvalidqualifier = -2147217342
    Wbemerrinvalidduplicateparameter = -2147217341
    Wbemerrtoomuchdata = -2147217340
    Wbemerrservertoobusy = -2147217339
    Wbemerrinvalidflavor = -2147217338
    Wbemerrcircularreference = -2147217337
    Wbemerrunsupportedclassupdate = -2147217336
    Wbemerrcannotchangekeyinheritance = -2147217335
    Wbemerrcannotchangeindexinheritance = -2147217328
    Wbemerrtoomanyproperties = -2147217327
    Wbemerrupdatetypemismatch = -2147217326
    Wbemerrupdateoverridenotallowed = -2147217325
    Wbemerrupdatepropagatedmethod = -2147217324
    Wbemerrmethodnotimplemented = -2147217323
    Wbemerrmethoddisabled = -2147217322
    Wbemerrrefresherbusy = -2147217321
    Wbemerrunparsablequery = -2147217320
    Wbemerrnoteventclass = -2147217319
    Wbemerrmissinggroupwithin = -2147217318
    Wbemerrmissingaggregationlist = -2147217317
    Wbemerrpropertynotanobject = -2147217316
    Wbemerraggregatingbyobject = -2147217315
    Wbemerruninterpretableproviderquery = -2147217313
    Wbemerrbackuprestorewinmgmtrunning = -2147217312
    Wbemerrqueueoverflow = -2147217311
    Wbemerrprivilegenotheld = -2147217310
    Wbemerrinvalidoperator = -2147217309
    Wbemerrlocalcredentials = -2147217308
    Wbemerrcannotbeabstract = -2147217307
    Wbemerramendedobject = -2147217306
    Wbemerrclienttooslow = -2147217305
    Wbemerrnullsecuritydescriptor = -2147217304
    Wbemerrtimeout = -2147217303
    Wbemerrinvalidassociation = -2147217302
    Wbemerrambiguousoperation = -2147217301
    Wbemerrquotaviolation = -2147217300
    Wbemerrtransactionconflict = -2147217299
    Wbemerrforcedrollback = -2147217298
    Wbemerrunsupportedlocale = -2147217297
    Wbemerrhandleoutofdate = -2147217296
    Wbemerrconnectionfailed = -2147217295
    Wbemerrinvalidhandlerequest = -2147217294
    Wbemerrpropertynametoowide = -2147217293
    Wbemerrclassnametoowide = -2147217292
    Wbemerrmethodnametoowide = -2147217291
    Wbemerrqualifiernametoowide = -2147217290
    Wbemerrreruncommand = -2147217289
    Wbemerrdatabasevermismatch = -2147217288
    Wbemerrvetoput = -2147217287
    Wbemerrvetodelete = -2147217286
    Wbemerrinvalidlocale = -2147217280
    Wbemerrprovidersuspended = -2147217279
    Wbemerrsynchronizationrequired = -2147217278
    Wbemerrnoschema = -2147217277
    Wbemerrprovideralreadyregistered = -2147217276
    Wbemerrprovidernotregistered = -2147217275
    Wbemerrfataltransporterror = -2147217274
    Wbemerrencryptedconnectionrequired = -2147217273
    Wbemerrregistrationtoobroad = -2147213311
    Wbemerrregistrationtooprecise = -2147213310
    Wbemerrtimedout = -2147209215
    Wbemerrresettodefault = -2147209214
  end

  enum WbemAuthenticationLevelEnum : Int32
    Wbemauthenticationleveldefault = 0
    Wbemauthenticationlevelnone = 1
    Wbemauthenticationlevelconnect = 2
    Wbemauthenticationlevelcall = 3
    Wbemauthenticationlevelpkt = 4
    Wbemauthenticationlevelpktintegrity = 5
    Wbemauthenticationlevelpktprivacy = 6
  end

  enum WbemImpersonationLevelEnum : Int32
    Wbemimpersonationlevelanonymous = 1
    Wbemimpersonationlevelidentify = 2
    Wbemimpersonationlevelimpersonate = 3
    Wbemimpersonationleveldelegate = 4
  end

  enum WbemPrivilegeEnum : Int32
    Wbemprivilegecreatetoken = 1
    Wbemprivilegeprimarytoken = 2
    Wbemprivilegelockmemory = 3
    Wbemprivilegeincreasequota = 4
    Wbemprivilegemachineaccount = 5
    Wbemprivilegetcb = 6
    Wbemprivilegesecurity = 7
    Wbemprivilegetakeownership = 8
    Wbemprivilegeloaddriver = 9
    Wbemprivilegesystemprofile = 10
    Wbemprivilegesystemtime = 11
    Wbemprivilegeprofilesingleprocess = 12
    Wbemprivilegeincreasebasepriority = 13
    Wbemprivilegecreatepagefile = 14
    Wbemprivilegecreatepermanent = 15
    Wbemprivilegebackup = 16
    Wbemprivilegerestore = 17
    Wbemprivilegeshutdown = 18
    Wbemprivilegedebug = 19
    Wbemprivilegeaudit = 20
    Wbemprivilegesystemenvironment = 21
    Wbemprivilegechangenotify = 22
    Wbemprivilegeremoteshutdown = 23
    Wbemprivilegeundock = 24
    Wbemprivilegesyncagent = 25
    Wbemprivilegeenabledelegation = 26
    Wbemprivilegemanagevolume = 27
  end

  enum WbemObjectTextFormatEnum : Int32
    Wbemobjecttextformatcimdtd20 = 1
    Wbemobjecttextformatwmidtd20 = 2
  end

  enum WbemConnectOptionsEnum : Int32
    Wbemconnectflagusemaxwait = 128
  end

  enum Tag_wbem_login_type : Int32
    WBEM_FLAG_INPROC_LOGIN = 0
    WBEM_FLAG_LOCAL_LOGIN = 1
    WBEM_FLAG_REMOTE_LOGIN = 2
    WBEM_AUTHENTICATION_METHOD_MASK = 15
    WBEM_FLAG_USE_MULTIPLE_CHALLENGES = 16
  end

  union MI_Datetime_u_e__Union
    timestamp : MI_Timestamp
    interval : MI_Interval
  end
  union MI_Value
    boolean : UInt8
    uint8 : UInt8
    sint8 : Int8
    uint16 : UInt16
    sint16 : Int16
    uint32 : UInt32
    sint32 : Int32
    uint64 : UInt64
    sint64 : Int64
    real32 : Float32
    real64 : Float64
    char16 : UInt16
    datetime : MI_Datetime
    string : UInt16*
    instance : MI_Instance*
    reference : MI_Instance*
    booleana : MI_BooleanA
    uint8a : MI_Uint8A
    sint8a : MI_Sint8A
    uint16a : MI_Uint16A
    sint16a : MI_Sint16A
    uint32a : MI_Uint32A
    sint32a : MI_Sint32A
    uint64a : MI_Uint64A
    sint64a : MI_Sint64A
    real32a : MI_Real32A
    real64a : MI_Real64A
    char16a : MI_Char16A
    datetimea : MI_DatetimeA
    stringa : MI_StringA
    referencea : MI_ReferenceA
    instancea : MI_InstanceA
    array : MI_Array
  end
  union MI_UserCredentials_credentials_e__Union
    username_password : MI_UsernamePasswordCreds
    certificate_thumbprint : UInt16*
  end
  union SWbemRpnConst
    m_psz_str_val : LibC::LPWSTR
    m_b_bool_val : LibC::BOOL
    m_l_long_val : Int32
    m_u_long_val : UInt32
    m_dbl_val : Float64
    m_l_val64 : Int64
    m_u_val64 : Int64
  end

  struct MI_Timestamp
    year : UInt32
    month : UInt32
    day : UInt32
    hour : UInt32
    minute : UInt32
    second : UInt32
    microseconds : UInt32
    utc : Int32
  end
  struct MI_Interval
    days : UInt32
    hours : UInt32
    minutes : UInt32
    seconds : UInt32
    microseconds : UInt32
    __padding1 : UInt32
    __padding2 : UInt32
    __padding3 : UInt32
  end
  struct MI_Datetime
    is_timestamp : UInt32
    u : MI_Datetime_u_e__Union
  end
  struct MI_BooleanA
    data : UInt8*
    size : UInt32
  end
  struct MI_Uint8A
    data : UInt8*
    size : UInt32
  end
  struct MI_Sint8A
    data : Int8*
    size : UInt32
  end
  struct MI_Uint16A
    data : UInt16*
    size : UInt32
  end
  struct MI_Sint16A
    data : Int16*
    size : UInt32
  end
  struct MI_Uint32A
    data : UInt32*
    size : UInt32
  end
  struct MI_Sint32A
    data : Int32*
    size : UInt32
  end
  struct MI_Uint64A
    data : UInt64*
    size : UInt32
  end
  struct MI_Sint64A
    data : Int64*
    size : UInt32
  end
  struct MI_Real32A
    data : Float32*
    size : UInt32
  end
  struct MI_Real64A
    data : Float64*
    size : UInt32
  end
  struct MI_Char16A
    data : UInt16*
    size : UInt32
  end
  struct MI_DatetimeA
    data : MI_Datetime*
    size : UInt32
  end
  struct MI_StringA
    data : UInt16**
    size : UInt32
  end
  struct MI_ReferenceA
    data : MI_Instance**
    size : UInt32
  end
  struct MI_InstanceA
    data : MI_Instance**
    size : UInt32
  end
  struct MI_Array
    data : Void*
    size : UInt32
  end
  struct MI_ConstBooleanA
    data : UInt8*
    size : UInt32
  end
  struct MI_ConstUint8A
    data : UInt8*
    size : UInt32
  end
  struct MI_ConstSint8A
    data : Int8*
    size : UInt32
  end
  struct MI_ConstUint16A
    data : UInt16*
    size : UInt32
  end
  struct MI_ConstSint16A
    data : Int16*
    size : UInt32
  end
  struct MI_ConstUint32A
    data : UInt32*
    size : UInt32
  end
  struct MI_ConstSint32A
    data : Int32*
    size : UInt32
  end
  struct MI_ConstUint64A
    data : UInt64*
    size : UInt32
  end
  struct MI_ConstSint64A
    data : Int64*
    size : UInt32
  end
  struct MI_ConstReal32A
    data : Float32*
    size : UInt32
  end
  struct MI_ConstReal64A
    data : Float64*
    size : UInt32
  end
  struct MI_ConstChar16A
    data : UInt16*
    size : UInt32
  end
  struct MI_ConstDatetimeA
    data : MI_Datetime*
    size : UInt32
  end
  struct MI_ConstStringA
    data : UInt16**
    size : UInt32
  end
  struct MI_ConstReferenceA
    data : MI_Instance**
    size : UInt32
  end
  struct MI_ConstInstanceA
    data : MI_Instance**
    size : UInt32
  end
  struct MI_BooleanField
    value : UInt8
    exists : UInt8
    flags : UInt8
  end
  struct MI_Sint8Field
    value : Int8
    exists : UInt8
    flags : UInt8
  end
  struct MI_Uint8Field
    value : UInt8
    exists : UInt8
    flags : UInt8
  end
  struct MI_Sint16Field
    value : Int16
    exists : UInt8
    flags : UInt8
  end
  struct MI_Uint16Field
    value : UInt16
    exists : UInt8
    flags : UInt8
  end
  struct MI_Sint32Field
    value : Int32
    exists : UInt8
    flags : UInt8
  end
  struct MI_Uint32Field
    value : UInt32
    exists : UInt8
    flags : UInt8
  end
  struct MI_Sint64Field
    value : Int64
    exists : UInt8
    flags : UInt8
  end
  struct MI_Uint64Field
    value : UInt64
    exists : UInt8
    flags : UInt8
  end
  struct MI_Real32Field
    value : Float32
    exists : UInt8
    flags : UInt8
  end
  struct MI_Real64Field
    value : Float64
    exists : UInt8
    flags : UInt8
  end
  struct MI_Char16Field
    value : UInt16
    exists : UInt8
    flags : UInt8
  end
  struct MI_DatetimeField
    value : MI_Datetime
    exists : UInt8
    flags : UInt8
  end
  struct MI_StringField
    value : UInt16*
    exists : UInt8
    flags : UInt8
  end
  struct MI_ReferenceField
    value : MI_Instance*
    exists : UInt8
    flags : UInt8
  end
  struct MI_InstanceField
    value : MI_Instance*
    exists : UInt8
    flags : UInt8
  end
  struct MI_BooleanAField
    value : MI_BooleanA
    exists : UInt8
    flags : UInt8
  end
  struct MI_Uint8AField
    value : MI_Uint8A
    exists : UInt8
    flags : UInt8
  end
  struct MI_Sint8AField
    value : MI_Sint8A
    exists : UInt8
    flags : UInt8
  end
  struct MI_Uint16AField
    value : MI_Uint16A
    exists : UInt8
    flags : UInt8
  end
  struct MI_Sint16AField
    value : MI_Sint16A
    exists : UInt8
    flags : UInt8
  end
  struct MI_Uint32AField
    value : MI_Uint32A
    exists : UInt8
    flags : UInt8
  end
  struct MI_Sint32AField
    value : MI_Sint32A
    exists : UInt8
    flags : UInt8
  end
  struct MI_Uint64AField
    value : MI_Uint64A
    exists : UInt8
    flags : UInt8
  end
  struct MI_Sint64AField
    value : MI_Sint64A
    exists : UInt8
    flags : UInt8
  end
  struct MI_Real32AField
    value : MI_Real32A
    exists : UInt8
    flags : UInt8
  end
  struct MI_Real64AField
    value : MI_Real64A
    exists : UInt8
    flags : UInt8
  end
  struct MI_Char16AField
    value : MI_Char16A
    exists : UInt8
    flags : UInt8
  end
  struct MI_DatetimeAField
    value : MI_DatetimeA
    exists : UInt8
    flags : UInt8
  end
  struct MI_StringAField
    value : MI_StringA
    exists : UInt8
    flags : UInt8
  end
  struct MI_ReferenceAField
    value : MI_ReferenceA
    exists : UInt8
    flags : UInt8
  end
  struct MI_InstanceAField
    value : MI_InstanceA
    exists : UInt8
    flags : UInt8
  end
  struct MI_ArrayField
    value : MI_Array
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstBooleanField
    value : UInt8
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstSint8Field
    value : Int8
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstUint8Field
    value : UInt8
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstSint16Field
    value : Int16
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstUint16Field
    value : UInt16
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstSint32Field
    value : Int32
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstUint32Field
    value : UInt32
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstSint64Field
    value : Int64
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstUint64Field
    value : UInt64
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstReal32Field
    value : Float32
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstReal64Field
    value : Float64
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstChar16Field
    value : UInt16
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstDatetimeField
    value : MI_Datetime
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstStringField
    value : UInt16*
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstReferenceField
    value : MI_Instance*
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstInstanceField
    value : MI_Instance*
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstBooleanAField
    value : MI_ConstBooleanA
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstUint8AField
    value : MI_ConstUint8A
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstSint8AField
    value : MI_ConstSint8A
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstUint16AField
    value : MI_ConstUint16A
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstSint16AField
    value : MI_ConstSint16A
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstUint32AField
    value : MI_ConstUint32A
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstSint32AField
    value : MI_ConstSint32A
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstUint64AField
    value : MI_ConstUint64A
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstSint64AField
    value : MI_ConstSint64A
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstReal32AField
    value : MI_ConstReal32A
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstReal64AField
    value : MI_ConstReal64A
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstChar16AField
    value : MI_ConstChar16A
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstDatetimeAField
    value : MI_ConstDatetimeA
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstStringAField
    value : MI_ConstStringA
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstReferenceAField
    value : MI_ConstReferenceA
    exists : UInt8
    flags : UInt8
  end
  struct MI_ConstInstanceAField
    value : MI_ConstInstanceA
    exists : UInt8
    flags : UInt8
  end
  struct MI_ServerFT
    get_version : LibC::IntPtrT
    get_system_name : LibC::IntPtrT
  end
  struct MI_Server
    server_ft : MI_ServerFT*
    context_ft : MI_ContextFT*
    instance_ft : MI_InstanceFT*
    property_set_ft : MI_PropertySetFT*
    filter_ft : MI_FilterFT*
  end
  struct MI_FilterFT
    evaluate : LibC::IntPtrT
    get_expression : LibC::IntPtrT
  end
  struct MI_Filter
    ft : MI_FilterFT*
    reserved : LibC::IntPtrT[3]*
  end
  struct MI_PropertySetFT
    get_element_count : LibC::IntPtrT
    contains_element : LibC::IntPtrT
    add_element : LibC::IntPtrT
    get_element_at : LibC::IntPtrT
    clear : LibC::IntPtrT
    destruct : LibC::IntPtrT
    delete : LibC::IntPtrT
    clone : LibC::IntPtrT
  end
  struct MI_PropertySet
    ft : MI_PropertySetFT*
    reserved : LibC::IntPtrT[3]*
  end
  struct MI_ObjectDecl
    flags : UInt32
    code : UInt32
    name : UInt16*
    qualifiers : MI_Qualifier**
    num_qualifiers : UInt32
    properties : MI_PropertyDecl**
    num_properties : UInt32
    size : UInt32
  end
  struct MI_ClassDecl
    flags : UInt32
    code : UInt32
    name : UInt16*
    qualifiers : MI_Qualifier**
    num_qualifiers : UInt32
    properties : MI_PropertyDecl**
    num_properties : UInt32
    size : UInt32
    super_class : UInt16*
    super_class_decl : MI_ClassDecl*
    methods : MI_MethodDecl**
    num_methods : UInt32
    schema : MI_SchemaDecl*
    provider_ft : MI_ProviderFT*
    owning_class : MI_Class*
  end
  struct MI_FeatureDecl
    flags : UInt32
    code : UInt32
    name : UInt16*
    qualifiers : MI_Qualifier**
    num_qualifiers : UInt32
  end
  struct MI_ParameterDecl
    flags : UInt32
    code : UInt32
    name : UInt16*
    qualifiers : MI_Qualifier**
    num_qualifiers : UInt32
    type : UInt32
    class_name : UInt16*
    subscript : UInt32
    offset : UInt32
  end
  struct MI_PropertyDecl
    flags : UInt32
    code : UInt32
    name : UInt16*
    qualifiers : MI_Qualifier**
    num_qualifiers : UInt32
    type : UInt32
    class_name : UInt16*
    subscript : UInt32
    offset : UInt32
    origin : UInt16*
    propagator : UInt16*
    value : Void*
  end
  struct MI_MethodDecl
    flags : UInt32
    code : UInt32
    name : UInt16*
    qualifiers : MI_Qualifier**
    num_qualifiers : UInt32
    parameters : MI_ParameterDecl**
    num_parameters : UInt32
    size : UInt32
    return_type : UInt32
    origin : UInt16*
    propagator : UInt16*
    schema : MI_SchemaDecl*
    function : MI_MethodDecl_Invoke
  end
  struct MI_QualifierDecl
    name : UInt16*
    type : UInt32
    scope : UInt32
    flavor : UInt32
    subscript : UInt32
    value : Void*
  end
  struct MI_Qualifier
    name : UInt16*
    type : UInt32
    flavor : UInt32
    value : Void*
  end
  struct MI_SchemaDecl
    qualifier_decls : MI_QualifierDecl**
    num_qualifier_decls : UInt32
    class_decls : MI_ClassDecl**
    num_class_decls : UInt32
  end
  struct MI_ProviderFT
    load : MI_ProviderFT_Load
    unload : MI_ProviderFT_Unload
    get_instance : MI_ProviderFT_GetInstance
    enumerate_instances : MI_ProviderFT_EnumerateInstances
    create_instance : MI_ProviderFT_CreateInstance
    modify_instance : MI_ProviderFT_ModifyInstance
    delete_instance : MI_ProviderFT_DeleteInstance
    associator_instances : MI_ProviderFT_AssociatorInstances
    reference_instances : MI_ProviderFT_ReferenceInstances
    enable_indications : MI_ProviderFT_EnableIndications
    disable_indications : MI_ProviderFT_DisableIndications
    subscribe : MI_ProviderFT_Subscribe
    unsubscribe : MI_ProviderFT_Unsubscribe
    invoke : MI_ProviderFT_Invoke
  end
  struct MI_Module
    version : UInt32
    generator_version : UInt32
    flags : UInt32
    char_size : UInt32
    schema_decl : MI_SchemaDecl*
    load : MI_Module_Load
    unload : MI_Module_Unload
    dynamic_provider_ft : MI_ProviderFT*
  end
  struct MI_InstanceFT
    clone : LibC::IntPtrT
    destruct : LibC::IntPtrT
    delete : LibC::IntPtrT
    is_a : LibC::IntPtrT
    get_class_name_a : LibC::IntPtrT
    set_name_space : LibC::IntPtrT
    get_name_space : LibC::IntPtrT
    get_element_count : LibC::IntPtrT
    add_element : LibC::IntPtrT
    set_element : LibC::IntPtrT
    set_element_at : LibC::IntPtrT
    get_element : LibC::IntPtrT
    get_element_at : LibC::IntPtrT
    clear_element : LibC::IntPtrT
    clear_element_at : LibC::IntPtrT
    get_server_name : LibC::IntPtrT
    set_server_name : LibC::IntPtrT
    get_class : LibC::IntPtrT
  end
  struct MI_InstanceExFT
    parent : MI_InstanceFT
    normalize : LibC::IntPtrT
  end
  struct MI_Instance
    ft : MI_InstanceFT*
    class_decl : MI_ClassDecl*
    server_name : UInt16*
    name_space : UInt16*
    reserved : LibC::IntPtrT[4]*
  end
  struct MI_ContextFT
    post_result : LibC::IntPtrT
    post_instance : LibC::IntPtrT
    post_indication : LibC::IntPtrT
    construct_instance : LibC::IntPtrT
    construct_parameters : LibC::IntPtrT
    new_instance : LibC::IntPtrT
    new_dynamic_instance : LibC::IntPtrT
    new_parameters : LibC::IntPtrT
    canceled : LibC::IntPtrT
    get_locale : LibC::IntPtrT
    register_cancel : LibC::IntPtrT
    request_unload : LibC::IntPtrT
    refuse_unload : LibC::IntPtrT
    get_local_session : LibC::IntPtrT
    set_string_option : LibC::IntPtrT
    get_string_option : LibC::IntPtrT
    get_number_option : LibC::IntPtrT
    get_custom_option : LibC::IntPtrT
    get_custom_option_count : LibC::IntPtrT
    get_custom_option_at : LibC::IntPtrT
    write_message : LibC::IntPtrT
    write_progress : LibC::IntPtrT
    write_stream_parameter : LibC::IntPtrT
    write_cim_error : LibC::IntPtrT
    prompt_user : LibC::IntPtrT
    should_process : LibC::IntPtrT
    should_continue : LibC::IntPtrT
    post_error : LibC::IntPtrT
    post_cim_error : LibC::IntPtrT
    write_error : LibC::IntPtrT
  end
  struct MI_Context
    ft : MI_ContextFT*
    reserved : LibC::IntPtrT[3]*
  end
  struct MI_QualifierSetFT
    get_qualifier_count : LibC::IntPtrT
    get_qualifier_at : LibC::IntPtrT
    get_qualifier : LibC::IntPtrT
  end
  struct MI_QualifierSet
    reserved1 : UInt64
    reserved2 : LibC::IntPtrT
    ft : MI_QualifierSetFT*
  end
  struct MI_ParameterSetFT
    get_method_return_type : LibC::IntPtrT
    get_parameter_count : LibC::IntPtrT
    get_parameter_at : LibC::IntPtrT
    get_parameter : LibC::IntPtrT
  end
  struct MI_ParameterSet
    reserved1 : UInt64
    reserved2 : LibC::IntPtrT
    ft : MI_ParameterSetFT*
  end
  struct MI_ClassFT
    get_class_name_a : LibC::IntPtrT
    get_name_space : LibC::IntPtrT
    get_server_name : LibC::IntPtrT
    get_element_count : LibC::IntPtrT
    get_element : LibC::IntPtrT
    get_element_at : LibC::IntPtrT
    get_class_qualifier_set : LibC::IntPtrT
    get_method_count : LibC::IntPtrT
    get_method_at : LibC::IntPtrT
    get_method : LibC::IntPtrT
    get_parent_class_name : LibC::IntPtrT
    get_parent_class : LibC::IntPtrT
    delete : LibC::IntPtrT
    clone : LibC::IntPtrT
  end
  struct MI_Class
    ft : MI_ClassFT*
    class_decl : MI_ClassDecl*
    namespace_name : UInt16*
    server_name : UInt16*
    reserved : LibC::IntPtrT[4]*
  end
  struct MI_OperationCallbacks
    callback_context : Void*
    prompt_user : MI_OperationCallback_PromptUser
    write_error : MI_OperationCallback_WriteError
    write_message : MI_OperationCallback_WriteMessage
    write_progress : MI_OperationCallback_WriteProgress
    instance_result : MI_OperationCallback_Instance
    indication_result : MI_OperationCallback_Indication
    class_result : MI_OperationCallback_Class
    streamed_parameter_result : MI_OperationCallback_StreamedParameter
  end
  struct MI_SessionCallbacks
    callback_context : Void*
    write_message : LibC::IntPtrT
    write_error : LibC::IntPtrT
  end
  struct MI_UsernamePasswordCreds
    domain : UInt16*
    username : UInt16*
    password : UInt16*
  end
  struct MI_UserCredentials
    authentication_type : UInt16*
    credentials : MI_UserCredentials_credentials_e__Union
  end
  struct MI_SubscriptionDeliveryOptionsFT
    set_string : LibC::IntPtrT
    set_number : LibC::IntPtrT
    set_date_time : LibC::IntPtrT
    set_interval : LibC::IntPtrT
    add_credentials : LibC::IntPtrT
    delete : LibC::IntPtrT
    get_string : LibC::IntPtrT
    get_number : LibC::IntPtrT
    get_date_time : LibC::IntPtrT
    get_interval : LibC::IntPtrT
    get_option_count : LibC::IntPtrT
    get_option_at : LibC::IntPtrT
    get_option : LibC::IntPtrT
    get_credentials_count : LibC::IntPtrT
    get_credentials_at : LibC::IntPtrT
    get_credentials_password_at : LibC::IntPtrT
    clone : LibC::IntPtrT
  end
  struct MI_SubscriptionDeliveryOptions
    reserved1 : UInt64
    reserved2 : LibC::IntPtrT
    ft : MI_SubscriptionDeliveryOptionsFT*
  end
  struct MI_Serializer
    reserved1 : UInt64
    reserved2 : LibC::IntPtrT
  end
  struct MI_Deserializer
    reserved1 : UInt64
    reserved2 : LibC::IntPtrT
  end
  struct MI_SerializerFT
    close : LibC::IntPtrT
    serialize_class : LibC::IntPtrT
    serialize_instance : LibC::IntPtrT
  end
  struct MI_DeserializerFT
    close : LibC::IntPtrT
    deserialize_class : LibC::IntPtrT
    class_get_class_name : LibC::IntPtrT
    class_get_parent_class_name : LibC::IntPtrT
    deserialize_instance : LibC::IntPtrT
    instance_get_class_name : LibC::IntPtrT
  end
  struct MI_ApplicationFT
    close : LibC::IntPtrT
    new_session : LibC::IntPtrT
    new_hosted_provider : LibC::IntPtrT
    new_instance : LibC::IntPtrT
    new_destination_options : LibC::IntPtrT
    new_operation_options : LibC::IntPtrT
    new_subscription_delivery_options : LibC::IntPtrT
    new_serializer : LibC::IntPtrT
    new_deserializer : LibC::IntPtrT
    new_instance_from_class : LibC::IntPtrT
    new_class : LibC::IntPtrT
  end
  struct MI_HostedProviderFT
    close : LibC::IntPtrT
    get_application : LibC::IntPtrT
  end
  struct MI_SessionFT
    close : LibC::IntPtrT
    get_application : LibC::IntPtrT
    get_instance : LibC::IntPtrT
    modify_instance : LibC::IntPtrT
    create_instance : LibC::IntPtrT
    delete_instance : LibC::IntPtrT
    invoke : LibC::IntPtrT
    enumerate_instances : LibC::IntPtrT
    query_instances : LibC::IntPtrT
    associator_instances : LibC::IntPtrT
    reference_instances : LibC::IntPtrT
    subscribe : LibC::IntPtrT
    get_class : LibC::IntPtrT
    enumerate_classes : LibC::IntPtrT
    test_connection : LibC::IntPtrT
  end
  struct MI_OperationFT
    close : LibC::IntPtrT
    cancel : LibC::IntPtrT
    get_session : LibC::IntPtrT
    get_instance : LibC::IntPtrT
    get_indication : LibC::IntPtrT
    get_class : LibC::IntPtrT
  end
  struct MI_DestinationOptionsFT
    delete : LibC::IntPtrT
    set_string : LibC::IntPtrT
    set_number : LibC::IntPtrT
    add_credentials : LibC::IntPtrT
    get_string : LibC::IntPtrT
    get_number : LibC::IntPtrT
    get_option_count : LibC::IntPtrT
    get_option_at : LibC::IntPtrT
    get_option : LibC::IntPtrT
    get_credentials_count : LibC::IntPtrT
    get_credentials_at : LibC::IntPtrT
    get_credentials_password_at : LibC::IntPtrT
    clone : LibC::IntPtrT
    set_interval : LibC::IntPtrT
    get_interval : LibC::IntPtrT
  end
  struct MI_OperationOptionsFT
    delete : LibC::IntPtrT
    set_string : LibC::IntPtrT
    set_number : LibC::IntPtrT
    set_custom_option : LibC::IntPtrT
    get_string : LibC::IntPtrT
    get_number : LibC::IntPtrT
    get_option_count : LibC::IntPtrT
    get_option_at : LibC::IntPtrT
    get_option : LibC::IntPtrT
    get_enabled_channels : LibC::IntPtrT
    clone : LibC::IntPtrT
    set_interval : LibC::IntPtrT
    get_interval : LibC::IntPtrT
  end
  struct MI_Application
    reserved1 : UInt64
    reserved2 : LibC::IntPtrT
    ft : MI_ApplicationFT*
  end
  struct MI_Session
    reserved1 : UInt64
    reserved2 : LibC::IntPtrT
    ft : MI_SessionFT*
  end
  struct MI_Operation
    reserved1 : UInt64
    reserved2 : LibC::IntPtrT
    ft : MI_OperationFT*
  end
  struct MI_HostedProvider
    reserved1 : UInt64
    reserved2 : LibC::IntPtrT
    ft : MI_HostedProviderFT*
  end
  struct MI_DestinationOptions
    reserved1 : UInt64
    reserved2 : LibC::IntPtrT
    ft : MI_DestinationOptionsFT*
  end
  struct MI_OperationOptions
    reserved1 : UInt64
    reserved2 : LibC::IntPtrT
    ft : MI_OperationOptionsFT*
  end
  struct MI_UtilitiesFT
    map_error_to_mi_error_category : LibC::IntPtrT
    cim_error_from_error_code : LibC::IntPtrT
  end
  struct MI_ClientFT_V1
    application_ft : MI_ApplicationFT*
    session_ft : MI_SessionFT*
    operation_ft : MI_OperationFT*
    hosted_provider_ft : MI_HostedProviderFT*
    serializer_ft : MI_SerializerFT*
    deserializer_ft : MI_DeserializerFT*
    subscribe_delivery_options_ft : MI_SubscriptionDeliveryOptionsFT*
    destination_options_ft : MI_DestinationOptionsFT*
    operation_options_ft : MI_OperationOptionsFT*
    utilities_ft : MI_UtilitiesFT*
  end
  struct SWbemQueryQualifiedName
    m_u_version : UInt32
    m_u_token_type : UInt32
    m_u_name_list_size : UInt32
    m_ppsz_name_list : LibC::LPWSTR*
    m_b_arrays_used : LibC::BOOL
    m_pb_array_el_used : LibC::BOOL*
    m_pu_array_index : UInt32*
  end
  struct SWbemRpnQueryToken
    m_u_version : UInt32
    m_u_token_type : UInt32
    m_u_subexpression_shape : UInt32
    m_u_operator : UInt32
    m_p_right_ident : SWbemQueryQualifiedName*
    m_p_left_ident : SWbemQueryQualifiedName*
    m_u_const_apparent_type : UInt32
    m_const : SWbemRpnConst
    m_u_const2_apparent_type : UInt32
    m_const2 : SWbemRpnConst
    m_psz_right_func : LibC::LPWSTR
    m_psz_left_func : LibC::LPWSTR
  end
  struct SWbemRpnTokenList
    m_u_version : UInt32
    m_u_token_type : UInt32
    m_u_num_tokens : UInt32
  end
  struct SWbemRpnEncodedQuery
    m_u_version : UInt32
    m_u_token_type : UInt32
    m_u_parsed_feature_mask : UInt64
    m_u_detected_array_size : UInt32
    m_pu_detected_features : UInt32*
    m_u_select_list_size : UInt32
    m_pp_select_list : SWbemQueryQualifiedName**
    m_u_from_target_type : UInt32
    m_psz_optional_from_path : LibC::LPWSTR
    m_u_from_list_size : UInt32
    m_ppsz_from_list : LibC::LPWSTR*
    m_u_where_clause_size : UInt32
    m_pp_rpn_where_clause : SWbemRpnQueryToken**
    m_dbl_within_polling : Float64
    m_dbl_within_window : Float64
    m_u_order_by_list_size : UInt32
    m_ppsz_order_by_list : LibC::LPWSTR*
    m_u_order_direction_el : UInt32*
  end
  struct SWbemAnalysisMatrix
    m_u_version : UInt32
    m_u_matrix_type : UInt32
    m_psz_property : LibC::LPWSTR
    m_u_property_type : UInt32
    m_u_entries : UInt32
    m_p_values : Void**
    m_pb_truth_table : LibC::BOOL*
  end
  struct SWbemAnalysisMatrixList
    m_u_version : UInt32
    m_u_matrix_type : UInt32
    m_u_num_matrices : UInt32
    m_p_matrices : SWbemAnalysisMatrix*
  end
  struct SWbemAssocQueryInf
    m_u_version : UInt32
    m_u_analysis_type : UInt32
    m_u_feature_mask : UInt32
    m_p_path : IWbemPath
    m_psz_path : LibC::LPWSTR
    m_psz_query_text : LibC::LPWSTR
    m_psz_result_class : LibC::LPWSTR
    m_psz_assoc_class : LibC::LPWSTR
    m_psz_role : LibC::LPWSTR
    m_psz_result_role : LibC::LPWSTR
    m_psz_required_qualifier : LibC::LPWSTR
    m_psz_required_assoc_qualifier : LibC::LPWSTR
  end
  struct WBEM_COMPILE_STATUS_INFO
    l_phase_error : Int32
    h_res : HRESULT
    object_num : Int32
    first_line : Int32
    last_line : Int32
    dw_out_flags : UInt32
  end


  struct IWbemPathKeyListVTbl
    query_interface : Proc(IWbemPathKeyList*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemPathKeyList*, UInt32)
    release : Proc(IWbemPathKeyList*, UInt32)
    get_count : Proc(IWbemPathKeyList*, UInt32*, HRESULT)
    set_key : Proc(IWbemPathKeyList*, LibC::LPWSTR, UInt32, UInt32, Void*, HRESULT)
    set_key2 : Proc(IWbemPathKeyList*, LibC::LPWSTR, UInt32, UInt32, VARIANT*, HRESULT)
    get_key : Proc(IWbemPathKeyList*, UInt32, UInt32, UInt32*, Char*, UInt32*, Void*, UInt32*, HRESULT)
    get_key2 : Proc(IWbemPathKeyList*, UInt32, UInt32, UInt32*, Char*, VARIANT*, UInt32*, HRESULT)
    remove_key : Proc(IWbemPathKeyList*, LibC::LPWSTR, UInt32, HRESULT)
    remove_all_keys : Proc(IWbemPathKeyList*, UInt32, HRESULT)
    make_singleton : Proc(IWbemPathKeyList*, UInt8, HRESULT)
    get_info : Proc(IWbemPathKeyList*, UInt32, UInt64*, HRESULT)
    get_text : Proc(IWbemPathKeyList*, Int32, UInt32*, Char*, HRESULT)
  end

  IWbemPathKeyList_GUID = "9ae62877-7544-4bb0-aa26-a13824659ed6"
  IID_IWbemPathKeyList = LibC::GUID.new(0x9ae62877_u32, 0x7544_u16, 0x4bb0_u16, StaticArray[0xaa_u8, 0x26_u8, 0xa1_u8, 0x38_u8, 0x24_u8, 0x65_u8, 0x9e_u8, 0xd6_u8])
  struct IWbemPathKeyList
    lpVtbl : IWbemPathKeyListVTbl*
  end

  struct IWbemPathVTbl
    query_interface : Proc(IWbemPath*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemPath*, UInt32)
    release : Proc(IWbemPath*, UInt32)
    set_text : Proc(IWbemPath*, UInt32, LibC::LPWSTR, HRESULT)
    get_text : Proc(IWbemPath*, Int32, UInt32*, Char*, HRESULT)
    get_info : Proc(IWbemPath*, UInt32, UInt64*, HRESULT)
    set_server : Proc(IWbemPath*, LibC::LPWSTR, HRESULT)
    get_server : Proc(IWbemPath*, UInt32*, Char*, HRESULT)
    get_namespace_count : Proc(IWbemPath*, UInt32*, HRESULT)
    set_namespace_at : Proc(IWbemPath*, UInt32, LibC::LPWSTR, HRESULT)
    get_namespace_at : Proc(IWbemPath*, UInt32, UInt32*, Char*, HRESULT)
    remove_namespace_at : Proc(IWbemPath*, UInt32, HRESULT)
    remove_all_namespaces : Proc(IWbemPath*, HRESULT)
    get_scope_count : Proc(IWbemPath*, UInt32*, HRESULT)
    set_scope : Proc(IWbemPath*, UInt32, LibC::LPWSTR, HRESULT)
    set_scope_from_text : Proc(IWbemPath*, UInt32, LibC::LPWSTR, HRESULT)
    get_scope : Proc(IWbemPath*, UInt32, UInt32*, Char*, IWbemPathKeyList*, HRESULT)
    get_scope_as_text : Proc(IWbemPath*, UInt32, UInt32*, Char*, HRESULT)
    remove_scope : Proc(IWbemPath*, UInt32, HRESULT)
    remove_all_scopes : Proc(IWbemPath*, HRESULT)
    set_class_name : Proc(IWbemPath*, LibC::LPWSTR, HRESULT)
    get_class_name : Proc(IWbemPath*, UInt32*, Char*, HRESULT)
    get_key_list : Proc(IWbemPath*, IWbemPathKeyList*, HRESULT)
    create_class_part : Proc(IWbemPath*, Int32, LibC::LPWSTR, HRESULT)
    delete_class_part : Proc(IWbemPath*, Int32, HRESULT)
    is_relative : Proc(IWbemPath*, LibC::LPWSTR, LibC::LPWSTR, LibC::BOOL)
    is_relative_or_child : Proc(IWbemPath*, LibC::LPWSTR, LibC::LPWSTR, Int32, LibC::BOOL)
    is_local : Proc(IWbemPath*, LibC::LPWSTR, LibC::BOOL)
    is_same_class_name : Proc(IWbemPath*, LibC::LPWSTR, LibC::BOOL)
  end

  IWbemPath_GUID = "3bc15af2-736c-477e-9e51-238af8667dcc"
  IID_IWbemPath = LibC::GUID.new(0x3bc15af2_u32, 0x736c_u16, 0x477e_u16, StaticArray[0x9e_u8, 0x51_u8, 0x23_u8, 0x8a_u8, 0xf8_u8, 0x66_u8, 0x7d_u8, 0xcc_u8])
  struct IWbemPath
    lpVtbl : IWbemPathVTbl*
  end

  struct IWbemQueryVTbl
    query_interface : Proc(IWbemQuery*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemQuery*, UInt32)
    release : Proc(IWbemQuery*, UInt32)
    empty : Proc(IWbemQuery*, HRESULT)
    set_language_features : Proc(IWbemQuery*, UInt32, UInt32, UInt32*, HRESULT)
    test_language_features : Proc(IWbemQuery*, UInt32, UInt32*, UInt32*, HRESULT)
    parse : Proc(IWbemQuery*, LibC::LPWSTR, LibC::LPWSTR, UInt32, HRESULT)
    get_analysis : Proc(IWbemQuery*, UInt32, UInt32, Void**, HRESULT)
    free_memory : Proc(IWbemQuery*, Void*, HRESULT)
    get_query_info : Proc(IWbemQuery*, UInt32, UInt32, UInt32, Void*, HRESULT)
  end

  IWbemQuery_GUID = "81166f58-dd98-11d3-a120-00105a1f515a"
  IID_IWbemQuery = LibC::GUID.new(0x81166f58_u32, 0xdd98_u16, 0x11d3_u16, StaticArray[0xa1_u8, 0x20_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x51_u8, 0x5a_u8])
  struct IWbemQuery
    lpVtbl : IWbemQueryVTbl*
  end

  struct IWbemClassObjectVTbl
    query_interface : Proc(IWbemClassObject*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemClassObject*, UInt32)
    release : Proc(IWbemClassObject*, UInt32)
    get_qualifier_set : Proc(IWbemClassObject*, IWbemQualifierSet*, HRESULT)
    get : Proc(IWbemClassObject*, LibC::LPWSTR, Int32, VARIANT*, Int32*, Int32*, HRESULT)
    put : Proc(IWbemClassObject*, LibC::LPWSTR, Int32, VARIANT*, Int32, HRESULT)
    delete : Proc(IWbemClassObject*, LibC::LPWSTR, HRESULT)
    get_names : Proc(IWbemClassObject*, LibC::LPWSTR, Int32, VARIANT*, SAFEARRAY**, HRESULT)
    begin_enumeration : Proc(IWbemClassObject*, Int32, HRESULT)
    next : Proc(IWbemClassObject*, Int32, UInt8**, VARIANT*, Int32*, Int32*, HRESULT)
    end_enumeration : Proc(IWbemClassObject*, HRESULT)
    get_property_qualifier_set : Proc(IWbemClassObject*, LibC::LPWSTR, IWbemQualifierSet*, HRESULT)
    clone : Proc(IWbemClassObject*, IWbemClassObject*, HRESULT)
    get_object_text : Proc(IWbemClassObject*, Int32, UInt8**, HRESULT)
    spawn_derived_class : Proc(IWbemClassObject*, Int32, IWbemClassObject*, HRESULT)
    spawn_instance : Proc(IWbemClassObject*, Int32, IWbemClassObject*, HRESULT)
    compare_to : Proc(IWbemClassObject*, Int32, IWbemClassObject, HRESULT)
    get_property_origin : Proc(IWbemClassObject*, LibC::LPWSTR, UInt8**, HRESULT)
    inherits_from : Proc(IWbemClassObject*, LibC::LPWSTR, HRESULT)
    get_method : Proc(IWbemClassObject*, LibC::LPWSTR, Int32, IWbemClassObject*, IWbemClassObject*, HRESULT)
    put_method : Proc(IWbemClassObject*, LibC::LPWSTR, Int32, IWbemClassObject, IWbemClassObject, HRESULT)
    delete_method : Proc(IWbemClassObject*, LibC::LPWSTR, HRESULT)
    begin_method_enumeration : Proc(IWbemClassObject*, Int32, HRESULT)
    next_method : Proc(IWbemClassObject*, Int32, UInt8**, IWbemClassObject*, IWbemClassObject*, HRESULT)
    end_method_enumeration : Proc(IWbemClassObject*, HRESULT)
    get_method_qualifier_set : Proc(IWbemClassObject*, LibC::LPWSTR, IWbemQualifierSet*, HRESULT)
    get_method_origin : Proc(IWbemClassObject*, LibC::LPWSTR, UInt8**, HRESULT)
  end

  IWbemClassObject_GUID = "dc12a681-737f-11cf-884d-00aa004b2e24"
  IID_IWbemClassObject = LibC::GUID.new(0xdc12a681_u32, 0x737f_u16, 0x11cf_u16, StaticArray[0x88_u8, 0x4d_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0x2e_u8, 0x24_u8])
  struct IWbemClassObject
    lpVtbl : IWbemClassObjectVTbl*
  end

  struct IWbemObjectAccessVTbl
    query_interface : Proc(IWbemObjectAccess*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemObjectAccess*, UInt32)
    release : Proc(IWbemObjectAccess*, UInt32)
    get_qualifier_set : Proc(IWbemObjectAccess*, IWbemQualifierSet*, HRESULT)
    get : Proc(IWbemObjectAccess*, LibC::LPWSTR, Int32, VARIANT*, Int32*, Int32*, HRESULT)
    put : Proc(IWbemObjectAccess*, LibC::LPWSTR, Int32, VARIANT*, Int32, HRESULT)
    delete : Proc(IWbemObjectAccess*, LibC::LPWSTR, HRESULT)
    get_names : Proc(IWbemObjectAccess*, LibC::LPWSTR, Int32, VARIANT*, SAFEARRAY**, HRESULT)
    begin_enumeration : Proc(IWbemObjectAccess*, Int32, HRESULT)
    next : Proc(IWbemObjectAccess*, Int32, UInt8**, VARIANT*, Int32*, Int32*, HRESULT)
    end_enumeration : Proc(IWbemObjectAccess*, HRESULT)
    get_property_qualifier_set : Proc(IWbemObjectAccess*, LibC::LPWSTR, IWbemQualifierSet*, HRESULT)
    clone : Proc(IWbemObjectAccess*, IWbemClassObject*, HRESULT)
    get_object_text : Proc(IWbemObjectAccess*, Int32, UInt8**, HRESULT)
    spawn_derived_class : Proc(IWbemObjectAccess*, Int32, IWbemClassObject*, HRESULT)
    spawn_instance : Proc(IWbemObjectAccess*, Int32, IWbemClassObject*, HRESULT)
    compare_to : Proc(IWbemObjectAccess*, Int32, IWbemClassObject, HRESULT)
    get_property_origin : Proc(IWbemObjectAccess*, LibC::LPWSTR, UInt8**, HRESULT)
    inherits_from : Proc(IWbemObjectAccess*, LibC::LPWSTR, HRESULT)
    get_method : Proc(IWbemObjectAccess*, LibC::LPWSTR, Int32, IWbemClassObject*, IWbemClassObject*, HRESULT)
    put_method : Proc(IWbemObjectAccess*, LibC::LPWSTR, Int32, IWbemClassObject, IWbemClassObject, HRESULT)
    delete_method : Proc(IWbemObjectAccess*, LibC::LPWSTR, HRESULT)
    begin_method_enumeration : Proc(IWbemObjectAccess*, Int32, HRESULT)
    next_method : Proc(IWbemObjectAccess*, Int32, UInt8**, IWbemClassObject*, IWbemClassObject*, HRESULT)
    end_method_enumeration : Proc(IWbemObjectAccess*, HRESULT)
    get_method_qualifier_set : Proc(IWbemObjectAccess*, LibC::LPWSTR, IWbemQualifierSet*, HRESULT)
    get_method_origin : Proc(IWbemObjectAccess*, LibC::LPWSTR, UInt8**, HRESULT)
    get_property_handle : Proc(IWbemObjectAccess*, LibC::LPWSTR, Int32*, Int32*, HRESULT)
    write_property_value : Proc(IWbemObjectAccess*, Int32, Int32, UInt8*, HRESULT)
    read_property_value : Proc(IWbemObjectAccess*, Int32, Int32, Int32*, UInt8*, HRESULT)
    read_dword : Proc(IWbemObjectAccess*, Int32, UInt32*, HRESULT)
    write_dword : Proc(IWbemObjectAccess*, Int32, UInt32, HRESULT)
    read_qword : Proc(IWbemObjectAccess*, Int32, UInt64*, HRESULT)
    write_qword : Proc(IWbemObjectAccess*, Int32, UInt64, HRESULT)
    get_property_info_by_handle : Proc(IWbemObjectAccess*, Int32, UInt8**, Int32*, HRESULT)
    lock : Proc(IWbemObjectAccess*, Int32, HRESULT)
    unlock : Proc(IWbemObjectAccess*, Int32, HRESULT)
  end

  IWbemObjectAccess_GUID = "49353c9a-516b-11d1-aea6-00c04fb68820"
  IID_IWbemObjectAccess = LibC::GUID.new(0x49353c9a_u32, 0x516b_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xa6_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  struct IWbemObjectAccess
    lpVtbl : IWbemObjectAccessVTbl*
  end

  struct IWbemQualifierSetVTbl
    query_interface : Proc(IWbemQualifierSet*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemQualifierSet*, UInt32)
    release : Proc(IWbemQualifierSet*, UInt32)
    get : Proc(IWbemQualifierSet*, LibC::LPWSTR, Int32, VARIANT*, Int32*, HRESULT)
    put : Proc(IWbemQualifierSet*, LibC::LPWSTR, VARIANT*, Int32, HRESULT)
    delete : Proc(IWbemQualifierSet*, LibC::LPWSTR, HRESULT)
    get_names : Proc(IWbemQualifierSet*, Int32, SAFEARRAY**, HRESULT)
    begin_enumeration : Proc(IWbemQualifierSet*, Int32, HRESULT)
    next : Proc(IWbemQualifierSet*, Int32, UInt8**, VARIANT*, Int32*, HRESULT)
    end_enumeration : Proc(IWbemQualifierSet*, HRESULT)
  end

  IWbemQualifierSet_GUID = "dc12a680-737f-11cf-884d-00aa004b2e24"
  IID_IWbemQualifierSet = LibC::GUID.new(0xdc12a680_u32, 0x737f_u16, 0x11cf_u16, StaticArray[0x88_u8, 0x4d_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0x2e_u8, 0x24_u8])
  struct IWbemQualifierSet
    lpVtbl : IWbemQualifierSetVTbl*
  end

  struct IWbemServicesVTbl
    query_interface : Proc(IWbemServices*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemServices*, UInt32)
    release : Proc(IWbemServices*, UInt32)
    open_namespace : Proc(IWbemServices*, UInt8*, Int32, IWbemContext, IWbemServices*, IWbemCallResult*, HRESULT)
    cancel_async_call : Proc(IWbemServices*, IWbemObjectSink, HRESULT)
    query_object_sink : Proc(IWbemServices*, Int32, IWbemObjectSink*, HRESULT)
    get_object : Proc(IWbemServices*, UInt8*, Int32, IWbemContext, IWbemClassObject*, IWbemCallResult*, HRESULT)
    get_object_async : Proc(IWbemServices*, UInt8*, Int32, IWbemContext, IWbemObjectSink, HRESULT)
    put_class : Proc(IWbemServices*, IWbemClassObject, Int32, IWbemContext, IWbemCallResult*, HRESULT)
    put_class_async : Proc(IWbemServices*, IWbemClassObject, Int32, IWbemContext, IWbemObjectSink, HRESULT)
    delete_class : Proc(IWbemServices*, UInt8*, Int32, IWbemContext, IWbemCallResult*, HRESULT)
    delete_class_async : Proc(IWbemServices*, UInt8*, Int32, IWbemContext, IWbemObjectSink, HRESULT)
    create_class_enum : Proc(IWbemServices*, UInt8*, Int32, IWbemContext, IEnumWbemClassObject*, HRESULT)
    create_class_enum_async : Proc(IWbemServices*, UInt8*, Int32, IWbemContext, IWbemObjectSink, HRESULT)
    put_instance : Proc(IWbemServices*, IWbemClassObject, Int32, IWbemContext, IWbemCallResult*, HRESULT)
    put_instance_async : Proc(IWbemServices*, IWbemClassObject, Int32, IWbemContext, IWbemObjectSink, HRESULT)
    delete_instance : Proc(IWbemServices*, UInt8*, Int32, IWbemContext, IWbemCallResult*, HRESULT)
    delete_instance_async : Proc(IWbemServices*, UInt8*, Int32, IWbemContext, IWbemObjectSink, HRESULT)
    create_instance_enum : Proc(IWbemServices*, UInt8*, Int32, IWbemContext, IEnumWbemClassObject*, HRESULT)
    create_instance_enum_async : Proc(IWbemServices*, UInt8*, Int32, IWbemContext, IWbemObjectSink, HRESULT)
    exec_query : Proc(IWbemServices*, UInt8*, UInt8*, Int32, IWbemContext, IEnumWbemClassObject*, HRESULT)
    exec_query_async : Proc(IWbemServices*, UInt8*, UInt8*, Int32, IWbemContext, IWbemObjectSink, HRESULT)
    exec_notification_query : Proc(IWbemServices*, UInt8*, UInt8*, Int32, IWbemContext, IEnumWbemClassObject*, HRESULT)
    exec_notification_query_async : Proc(IWbemServices*, UInt8*, UInt8*, Int32, IWbemContext, IWbemObjectSink, HRESULT)
    exec_method : Proc(IWbemServices*, UInt8*, UInt8*, Int32, IWbemContext, IWbemClassObject, IWbemClassObject*, IWbemCallResult*, HRESULT)
    exec_method_async : Proc(IWbemServices*, UInt8*, UInt8*, Int32, IWbemContext, IWbemClassObject, IWbemObjectSink, HRESULT)
  end

  IWbemServices_GUID = "9556dc99-828c-11cf-a37e-00aa003240c7"
  IID_IWbemServices = LibC::GUID.new(0x9556dc99_u32, 0x828c_u16, 0x11cf_u16, StaticArray[0xa3_u8, 0x7e_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x32_u8, 0x40_u8, 0xc7_u8])
  struct IWbemServices
    lpVtbl : IWbemServicesVTbl*
  end

  struct IWbemLocatorVTbl
    query_interface : Proc(IWbemLocator*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemLocator*, UInt32)
    release : Proc(IWbemLocator*, UInt32)
    connect_server : Proc(IWbemLocator*, UInt8*, UInt8*, UInt8*, UInt8*, Int32, UInt8*, IWbemContext, IWbemServices*, HRESULT)
  end

  IWbemLocator_GUID = "dc12a687-737f-11cf-884d-00aa004b2e24"
  IID_IWbemLocator = LibC::GUID.new(0xdc12a687_u32, 0x737f_u16, 0x11cf_u16, StaticArray[0x88_u8, 0x4d_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0x2e_u8, 0x24_u8])
  struct IWbemLocator
    lpVtbl : IWbemLocatorVTbl*
  end

  struct IWbemObjectSinkVTbl
    query_interface : Proc(IWbemObjectSink*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemObjectSink*, UInt32)
    release : Proc(IWbemObjectSink*, UInt32)
    indicate : Proc(IWbemObjectSink*, Int32, IWbemClassObject*, HRESULT)
    set_status : Proc(IWbemObjectSink*, Int32, HRESULT, UInt8*, IWbemClassObject, HRESULT)
  end

  IWbemObjectSink_GUID = "7c857801-7381-11cf-884d-00aa004b2e24"
  IID_IWbemObjectSink = LibC::GUID.new(0x7c857801_u32, 0x7381_u16, 0x11cf_u16, StaticArray[0x88_u8, 0x4d_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0x2e_u8, 0x24_u8])
  struct IWbemObjectSink
    lpVtbl : IWbemObjectSinkVTbl*
  end

  struct IEnumWbemClassObjectVTbl
    query_interface : Proc(IEnumWbemClassObject*, Guid*, Void**, HRESULT)
    add_ref : Proc(IEnumWbemClassObject*, UInt32)
    release : Proc(IEnumWbemClassObject*, UInt32)
    reset : Proc(IEnumWbemClassObject*, HRESULT)
    next : Proc(IEnumWbemClassObject*, Int32, UInt32, IWbemClassObject*, UInt32*, HRESULT)
    next_async : Proc(IEnumWbemClassObject*, UInt32, IWbemObjectSink, HRESULT)
    clone : Proc(IEnumWbemClassObject*, IEnumWbemClassObject*, HRESULT)
    skip : Proc(IEnumWbemClassObject*, Int32, UInt32, HRESULT)
  end

  IEnumWbemClassObject_GUID = "027947e1-d731-11ce-a357-000000000001"
  IID_IEnumWbemClassObject = LibC::GUID.new(0x27947e1_u32, 0xd731_u16, 0x11ce_u16, StaticArray[0xa3_u8, 0x57_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x1_u8])
  struct IEnumWbemClassObject
    lpVtbl : IEnumWbemClassObjectVTbl*
  end

  struct IWbemCallResultVTbl
    query_interface : Proc(IWbemCallResult*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemCallResult*, UInt32)
    release : Proc(IWbemCallResult*, UInt32)
    get_result_object : Proc(IWbemCallResult*, Int32, IWbemClassObject*, HRESULT)
    get_result_string : Proc(IWbemCallResult*, Int32, UInt8**, HRESULT)
    get_result_services : Proc(IWbemCallResult*, Int32, IWbemServices*, HRESULT)
    get_call_status : Proc(IWbemCallResult*, Int32, Int32*, HRESULT)
  end

  IWbemCallResult_GUID = "44aca675-e8fc-11d0-a07c-00c04fb68820"
  IID_IWbemCallResult = LibC::GUID.new(0x44aca675_u32, 0xe8fc_u16, 0x11d0_u16, StaticArray[0xa0_u8, 0x7c_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  struct IWbemCallResult
    lpVtbl : IWbemCallResultVTbl*
  end

  struct IWbemContextVTbl
    query_interface : Proc(IWbemContext*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemContext*, UInt32)
    release : Proc(IWbemContext*, UInt32)
    clone : Proc(IWbemContext*, IWbemContext*, HRESULT)
    get_names : Proc(IWbemContext*, Int32, SAFEARRAY**, HRESULT)
    begin_enumeration : Proc(IWbemContext*, Int32, HRESULT)
    next : Proc(IWbemContext*, Int32, UInt8**, VARIANT*, HRESULT)
    end_enumeration : Proc(IWbemContext*, HRESULT)
    set_value : Proc(IWbemContext*, LibC::LPWSTR, Int32, VARIANT*, HRESULT)
    get_value : Proc(IWbemContext*, LibC::LPWSTR, Int32, VARIANT*, HRESULT)
    delete_value : Proc(IWbemContext*, LibC::LPWSTR, Int32, HRESULT)
    delete_all : Proc(IWbemContext*, HRESULT)
  end

  IWbemContext_GUID = "44aca674-e8fc-11d0-a07c-00c04fb68820"
  IID_IWbemContext = LibC::GUID.new(0x44aca674_u32, 0xe8fc_u16, 0x11d0_u16, StaticArray[0xa0_u8, 0x7c_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  struct IWbemContext
    lpVtbl : IWbemContextVTbl*
  end

  struct IUnsecuredApartmentVTbl
    query_interface : Proc(IUnsecuredApartment*, Guid*, Void**, HRESULT)
    add_ref : Proc(IUnsecuredApartment*, UInt32)
    release : Proc(IUnsecuredApartment*, UInt32)
    create_object_stub : Proc(IUnsecuredApartment*, IUnknown, IUnknown*, HRESULT)
  end

  IUnsecuredApartment_GUID = "1cfaba8c-1523-11d1-ad79-00c04fd8fdff"
  IID_IUnsecuredApartment = LibC::GUID.new(0x1cfaba8c_u32, 0x1523_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x79_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  struct IUnsecuredApartment
    lpVtbl : IUnsecuredApartmentVTbl*
  end

  struct IWbemUnsecuredApartmentVTbl
    query_interface : Proc(IWbemUnsecuredApartment*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemUnsecuredApartment*, UInt32)
    release : Proc(IWbemUnsecuredApartment*, UInt32)
    create_object_stub : Proc(IWbemUnsecuredApartment*, IUnknown, IUnknown*, HRESULT)
    create_sink_stub : Proc(IWbemUnsecuredApartment*, IWbemObjectSink, UInt32, LibC::LPWSTR, IWbemObjectSink*, HRESULT)
  end

  IWbemUnsecuredApartment_GUID = "31739d04-3471-4cf4-9a7c-57a44ae71956"
  IID_IWbemUnsecuredApartment = LibC::GUID.new(0x31739d04_u32, 0x3471_u16, 0x4cf4_u16, StaticArray[0x9a_u8, 0x7c_u8, 0x57_u8, 0xa4_u8, 0x4a_u8, 0xe7_u8, 0x19_u8, 0x56_u8])
  struct IWbemUnsecuredApartment
    lpVtbl : IWbemUnsecuredApartmentVTbl*
  end

  struct IWbemStatusCodeTextVTbl
    query_interface : Proc(IWbemStatusCodeText*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemStatusCodeText*, UInt32)
    release : Proc(IWbemStatusCodeText*, UInt32)
    get_error_code_text : Proc(IWbemStatusCodeText*, HRESULT, UInt32, Int32, UInt8**, HRESULT)
    get_facility_code_text : Proc(IWbemStatusCodeText*, HRESULT, UInt32, Int32, UInt8**, HRESULT)
  end

  IWbemStatusCodeText_GUID = "eb87e1bc-3233-11d2-aec9-00c04fb68820"
  IID_IWbemStatusCodeText = LibC::GUID.new(0xeb87e1bc_u32, 0x3233_u16, 0x11d2_u16, StaticArray[0xae_u8, 0xc9_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  struct IWbemStatusCodeText
    lpVtbl : IWbemStatusCodeTextVTbl*
  end

  struct IWbemBackupRestoreVTbl
    query_interface : Proc(IWbemBackupRestore*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemBackupRestore*, UInt32)
    release : Proc(IWbemBackupRestore*, UInt32)
    backup : Proc(IWbemBackupRestore*, LibC::LPWSTR, Int32, HRESULT)
    restore : Proc(IWbemBackupRestore*, LibC::LPWSTR, Int32, HRESULT)
  end

  IWbemBackupRestore_GUID = "c49e32c7-bc8b-11d2-85d4-00105a1f8304"
  IID_IWbemBackupRestore = LibC::GUID.new(0xc49e32c7_u32, 0xbc8b_u16, 0x11d2_u16, StaticArray[0x85_u8, 0xd4_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x83_u8, 0x4_u8])
  struct IWbemBackupRestore
    lpVtbl : IWbemBackupRestoreVTbl*
  end

  struct IWbemBackupRestoreExVTbl
    query_interface : Proc(IWbemBackupRestoreEx*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemBackupRestoreEx*, UInt32)
    release : Proc(IWbemBackupRestoreEx*, UInt32)
    backup : Proc(IWbemBackupRestoreEx*, LibC::LPWSTR, Int32, HRESULT)
    restore : Proc(IWbemBackupRestoreEx*, LibC::LPWSTR, Int32, HRESULT)
    pause : Proc(IWbemBackupRestoreEx*, HRESULT)
    resume : Proc(IWbemBackupRestoreEx*, HRESULT)
  end

  IWbemBackupRestoreEx_GUID = "a359dec5-e813-4834-8a2a-ba7f1d777d76"
  IID_IWbemBackupRestoreEx = LibC::GUID.new(0xa359dec5_u32, 0xe813_u16, 0x4834_u16, StaticArray[0x8a_u8, 0x2a_u8, 0xba_u8, 0x7f_u8, 0x1d_u8, 0x77_u8, 0x7d_u8, 0x76_u8])
  struct IWbemBackupRestoreEx
    lpVtbl : IWbemBackupRestoreExVTbl*
  end

  struct IWbemRefresherVTbl
    query_interface : Proc(IWbemRefresher*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemRefresher*, UInt32)
    release : Proc(IWbemRefresher*, UInt32)
    refresh : Proc(IWbemRefresher*, Int32, HRESULT)
  end

  IWbemRefresher_GUID = "49353c99-516b-11d1-aea6-00c04fb68820"
  IID_IWbemRefresher = LibC::GUID.new(0x49353c99_u32, 0x516b_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xa6_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  struct IWbemRefresher
    lpVtbl : IWbemRefresherVTbl*
  end

  struct IWbemHiPerfEnumVTbl
    query_interface : Proc(IWbemHiPerfEnum*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemHiPerfEnum*, UInt32)
    release : Proc(IWbemHiPerfEnum*, UInt32)
    add_objects : Proc(IWbemHiPerfEnum*, Int32, UInt32, Int32*, IWbemObjectAccess*, HRESULT)
    remove_objects : Proc(IWbemHiPerfEnum*, Int32, UInt32, Int32*, HRESULT)
    get_objects : Proc(IWbemHiPerfEnum*, Int32, UInt32, IWbemObjectAccess*, UInt32*, HRESULT)
    remove_all : Proc(IWbemHiPerfEnum*, Int32, HRESULT)
  end

  IWbemHiPerfEnum_GUID = "2705c288-79ae-11d2-b348-00105a1f8177"
  IID_IWbemHiPerfEnum = LibC::GUID.new(0x2705c288_u32, 0x79ae_u16, 0x11d2_u16, StaticArray[0xb3_u8, 0x48_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x81_u8, 0x77_u8])
  struct IWbemHiPerfEnum
    lpVtbl : IWbemHiPerfEnumVTbl*
  end

  struct IWbemConfigureRefresherVTbl
    query_interface : Proc(IWbemConfigureRefresher*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemConfigureRefresher*, UInt32)
    release : Proc(IWbemConfigureRefresher*, UInt32)
    add_object_by_path : Proc(IWbemConfigureRefresher*, IWbemServices, LibC::LPWSTR, Int32, IWbemContext, IWbemClassObject*, Int32*, HRESULT)
    add_object_by_template : Proc(IWbemConfigureRefresher*, IWbemServices, IWbemClassObject, Int32, IWbemContext, IWbemClassObject*, Int32*, HRESULT)
    add_refresher : Proc(IWbemConfigureRefresher*, IWbemRefresher, Int32, Int32*, HRESULT)
    remove : Proc(IWbemConfigureRefresher*, Int32, Int32, HRESULT)
    add_enum : Proc(IWbemConfigureRefresher*, IWbemServices, LibC::LPWSTR, Int32, IWbemContext, IWbemHiPerfEnum*, Int32*, HRESULT)
  end

  IWbemConfigureRefresher_GUID = "49353c92-516b-11d1-aea6-00c04fb68820"
  IID_IWbemConfigureRefresher = LibC::GUID.new(0x49353c92_u32, 0x516b_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xa6_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  struct IWbemConfigureRefresher
    lpVtbl : IWbemConfigureRefresherVTbl*
  end

  struct IWbemObjectSinkExVTbl
    query_interface : Proc(IWbemObjectSinkEx*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemObjectSinkEx*, UInt32)
    release : Proc(IWbemObjectSinkEx*, UInt32)
    indicate : Proc(IWbemObjectSinkEx*, Int32, IWbemClassObject*, HRESULT)
    set_status : Proc(IWbemObjectSinkEx*, Int32, HRESULT, UInt8*, IWbemClassObject, HRESULT)
    write_message : Proc(IWbemObjectSinkEx*, UInt32, UInt8*, HRESULT)
    write_error : Proc(IWbemObjectSinkEx*, IWbemClassObject, UInt8*, HRESULT)
    prompt_user : Proc(IWbemObjectSinkEx*, UInt8*, UInt8, UInt8*, HRESULT)
    write_progress : Proc(IWbemObjectSinkEx*, UInt8*, UInt8*, UInt8*, UInt32, UInt32, HRESULT)
    write_stream_parameter : Proc(IWbemObjectSinkEx*, UInt8*, VARIANT*, UInt32, UInt32, HRESULT)
  end

  IWbemObjectSinkEx_GUID = "e7d35cfa-348b-485e-b524-252725d697ca"
  IID_IWbemObjectSinkEx = LibC::GUID.new(0xe7d35cfa_u32, 0x348b_u16, 0x485e_u16, StaticArray[0xb5_u8, 0x24_u8, 0x25_u8, 0x27_u8, 0x25_u8, 0xd6_u8, 0x97_u8, 0xca_u8])
  struct IWbemObjectSinkEx
    lpVtbl : IWbemObjectSinkExVTbl*
  end

  struct IWbemShutdownVTbl
    query_interface : Proc(IWbemShutdown*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemShutdown*, UInt32)
    release : Proc(IWbemShutdown*, UInt32)
    shutdown : Proc(IWbemShutdown*, Int32, UInt32, IWbemContext, HRESULT)
  end

  IWbemShutdown_GUID = "b7b31df9-d515-11d3-a11c-00105a1f515a"
  IID_IWbemShutdown = LibC::GUID.new(0xb7b31df9_u32, 0xd515_u16, 0x11d3_u16, StaticArray[0xa1_u8, 0x1c_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x51_u8, 0x5a_u8])
  struct IWbemShutdown
    lpVtbl : IWbemShutdownVTbl*
  end

  struct IWbemObjectTextSrcVTbl
    query_interface : Proc(IWbemObjectTextSrc*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemObjectTextSrc*, UInt32)
    release : Proc(IWbemObjectTextSrc*, UInt32)
    get_text : Proc(IWbemObjectTextSrc*, Int32, IWbemClassObject, UInt32, IWbemContext, UInt8**, HRESULT)
    create_from_text : Proc(IWbemObjectTextSrc*, Int32, UInt8*, UInt32, IWbemContext, IWbemClassObject*, HRESULT)
  end

  IWbemObjectTextSrc_GUID = "bfbf883a-cad7-11d3-a11b-00105a1f515a"
  IID_IWbemObjectTextSrc = LibC::GUID.new(0xbfbf883a_u32, 0xcad7_u16, 0x11d3_u16, StaticArray[0xa1_u8, 0x1b_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x51_u8, 0x5a_u8])
  struct IWbemObjectTextSrc
    lpVtbl : IWbemObjectTextSrcVTbl*
  end

  struct IMofCompilerVTbl
    query_interface : Proc(IMofCompiler*, Guid*, Void**, HRESULT)
    add_ref : Proc(IMofCompiler*, UInt32)
    release : Proc(IMofCompiler*, UInt32)
    compile_file : Proc(IMofCompiler*, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, Int32, Int32, Int32, WBEM_COMPILE_STATUS_INFO*, HRESULT)
    compile_buffer : Proc(IMofCompiler*, Int32, UInt8*, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, Int32, Int32, Int32, WBEM_COMPILE_STATUS_INFO*, HRESULT)
    create_bmof : Proc(IMofCompiler*, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, Int32, Int32, Int32, WBEM_COMPILE_STATUS_INFO*, HRESULT)
  end

  IMofCompiler_GUID = "6daf974e-2e37-11d2-aec9-00c04fb68820"
  IID_IMofCompiler = LibC::GUID.new(0x6daf974e_u32, 0x2e37_u16, 0x11d2_u16, StaticArray[0xae_u8, 0xc9_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  struct IMofCompiler
    lpVtbl : IMofCompilerVTbl*
  end

  struct IWbemPropertyProviderVTbl
    query_interface : Proc(IWbemPropertyProvider*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemPropertyProvider*, UInt32)
    release : Proc(IWbemPropertyProvider*, UInt32)
    get_property : Proc(IWbemPropertyProvider*, Int32, UInt8*, UInt8*, UInt8*, UInt8*, VARIANT*, HRESULT)
    put_property : Proc(IWbemPropertyProvider*, Int32, UInt8*, UInt8*, UInt8*, UInt8*, VARIANT*, HRESULT)
  end

  IWbemPropertyProvider_GUID = "ce61e841-65bc-11d0-b6bd-00aa003240c7"
  IID_IWbemPropertyProvider = LibC::GUID.new(0xce61e841_u32, 0x65bc_u16, 0x11d0_u16, StaticArray[0xb6_u8, 0xbd_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x32_u8, 0x40_u8, 0xc7_u8])
  struct IWbemPropertyProvider
    lpVtbl : IWbemPropertyProviderVTbl*
  end

  struct IWbemUnboundObjectSinkVTbl
    query_interface : Proc(IWbemUnboundObjectSink*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemUnboundObjectSink*, UInt32)
    release : Proc(IWbemUnboundObjectSink*, UInt32)
    indicate_to_consumer : Proc(IWbemUnboundObjectSink*, IWbemClassObject, Int32, IWbemClassObject*, HRESULT)
  end

  IWbemUnboundObjectSink_GUID = "e246107b-b06e-11d0-ad61-00c04fd8fdff"
  IID_IWbemUnboundObjectSink = LibC::GUID.new(0xe246107b_u32, 0xb06e_u16, 0x11d0_u16, StaticArray[0xad_u8, 0x61_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  struct IWbemUnboundObjectSink
    lpVtbl : IWbemUnboundObjectSinkVTbl*
  end

  struct IWbemEventProviderVTbl
    query_interface : Proc(IWbemEventProvider*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemEventProvider*, UInt32)
    release : Proc(IWbemEventProvider*, UInt32)
    provide_events : Proc(IWbemEventProvider*, IWbemObjectSink, Int32, HRESULT)
  end

  IWbemEventProvider_GUID = "e245105b-b06e-11d0-ad61-00c04fd8fdff"
  IID_IWbemEventProvider = LibC::GUID.new(0xe245105b_u32, 0xb06e_u16, 0x11d0_u16, StaticArray[0xad_u8, 0x61_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  struct IWbemEventProvider
    lpVtbl : IWbemEventProviderVTbl*
  end

  struct IWbemEventProviderQuerySinkVTbl
    query_interface : Proc(IWbemEventProviderQuerySink*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemEventProviderQuerySink*, UInt32)
    release : Proc(IWbemEventProviderQuerySink*, UInt32)
    new_query : Proc(IWbemEventProviderQuerySink*, UInt32, UInt16*, UInt16*, HRESULT)
    cancel_query : Proc(IWbemEventProviderQuerySink*, UInt32, HRESULT)
  end

  IWbemEventProviderQuerySink_GUID = "580acaf8-fa1c-11d0-ad72-00c04fd8fdff"
  IID_IWbemEventProviderQuerySink = LibC::GUID.new(0x580acaf8_u32, 0xfa1c_u16, 0x11d0_u16, StaticArray[0xad_u8, 0x72_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  struct IWbemEventProviderQuerySink
    lpVtbl : IWbemEventProviderQuerySinkVTbl*
  end

  struct IWbemEventProviderSecurityVTbl
    query_interface : Proc(IWbemEventProviderSecurity*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemEventProviderSecurity*, UInt32)
    release : Proc(IWbemEventProviderSecurity*, UInt32)
    access_check : Proc(IWbemEventProviderSecurity*, UInt16*, UInt16*, Int32, UInt8*, HRESULT)
  end

  IWbemEventProviderSecurity_GUID = "631f7d96-d993-11d2-b339-00105a1f4aaf"
  IID_IWbemEventProviderSecurity = LibC::GUID.new(0x631f7d96_u32, 0xd993_u16, 0x11d2_u16, StaticArray[0xb3_u8, 0x39_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x4a_u8, 0xaf_u8])
  struct IWbemEventProviderSecurity
    lpVtbl : IWbemEventProviderSecurityVTbl*
  end

  struct IWbemEventConsumerProviderVTbl
    query_interface : Proc(IWbemEventConsumerProvider*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemEventConsumerProvider*, UInt32)
    release : Proc(IWbemEventConsumerProvider*, UInt32)
    find_consumer : Proc(IWbemEventConsumerProvider*, IWbemClassObject, IWbemUnboundObjectSink*, HRESULT)
  end

  IWbemEventConsumerProvider_GUID = "e246107a-b06e-11d0-ad61-00c04fd8fdff"
  IID_IWbemEventConsumerProvider = LibC::GUID.new(0xe246107a_u32, 0xb06e_u16, 0x11d0_u16, StaticArray[0xad_u8, 0x61_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  struct IWbemEventConsumerProvider
    lpVtbl : IWbemEventConsumerProviderVTbl*
  end

  struct IWbemProviderInitSinkVTbl
    query_interface : Proc(IWbemProviderInitSink*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemProviderInitSink*, UInt32)
    release : Proc(IWbemProviderInitSink*, UInt32)
    set_status : Proc(IWbemProviderInitSink*, Int32, Int32, HRESULT)
  end

  IWbemProviderInitSink_GUID = "1be41571-91dd-11d1-aeb2-00c04fb68820"
  IID_IWbemProviderInitSink = LibC::GUID.new(0x1be41571_u32, 0x91dd_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xb2_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  struct IWbemProviderInitSink
    lpVtbl : IWbemProviderInitSinkVTbl*
  end

  struct IWbemProviderInitVTbl
    query_interface : Proc(IWbemProviderInit*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemProviderInit*, UInt32)
    release : Proc(IWbemProviderInit*, UInt32)
    initialize : Proc(IWbemProviderInit*, LibC::LPWSTR, Int32, LibC::LPWSTR, LibC::LPWSTR, IWbemServices, IWbemContext, IWbemProviderInitSink, HRESULT)
  end

  IWbemProviderInit_GUID = "1be41572-91dd-11d1-aeb2-00c04fb68820"
  IID_IWbemProviderInit = LibC::GUID.new(0x1be41572_u32, 0x91dd_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xb2_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  struct IWbemProviderInit
    lpVtbl : IWbemProviderInitVTbl*
  end

  struct IWbemHiPerfProviderVTbl
    query_interface : Proc(IWbemHiPerfProvider*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemHiPerfProvider*, UInt32)
    release : Proc(IWbemHiPerfProvider*, UInt32)
    query_instances : Proc(IWbemHiPerfProvider*, IWbemServices, LibC::LPWSTR, Int32, IWbemContext, IWbemObjectSink, HRESULT)
    create_refresher : Proc(IWbemHiPerfProvider*, IWbemServices, Int32, IWbemRefresher*, HRESULT)
    create_refreshable_object : Proc(IWbemHiPerfProvider*, IWbemServices, IWbemObjectAccess, IWbemRefresher, Int32, IWbemContext, IWbemObjectAccess*, Int32*, HRESULT)
    stop_refreshing : Proc(IWbemHiPerfProvider*, IWbemRefresher, Int32, Int32, HRESULT)
    create_refreshable_enum : Proc(IWbemHiPerfProvider*, IWbemServices, LibC::LPWSTR, IWbemRefresher, Int32, IWbemContext, IWbemHiPerfEnum, Int32*, HRESULT)
    get_objects : Proc(IWbemHiPerfProvider*, IWbemServices, Int32, IWbemObjectAccess*, Int32, IWbemContext, HRESULT)
  end

  IWbemHiPerfProvider_GUID = "49353c93-516b-11d1-aea6-00c04fb68820"
  IID_IWbemHiPerfProvider = LibC::GUID.new(0x49353c93_u32, 0x516b_u16, 0x11d1_u16, StaticArray[0xae_u8, 0xa6_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  struct IWbemHiPerfProvider
    lpVtbl : IWbemHiPerfProviderVTbl*
  end

  struct IWbemDecoupledRegistrarVTbl
    query_interface : Proc(IWbemDecoupledRegistrar*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemDecoupledRegistrar*, UInt32)
    release : Proc(IWbemDecoupledRegistrar*, UInt32)
    register : Proc(IWbemDecoupledRegistrar*, Int32, IWbemContext, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, IUnknown, HRESULT)
    un_register : Proc(IWbemDecoupledRegistrar*, HRESULT)
  end

  IWbemDecoupledRegistrar_GUID = "1005cbcf-e64f-4646-bcd3-3a089d8a84b4"
  IID_IWbemDecoupledRegistrar = LibC::GUID.new(0x1005cbcf_u32, 0xe64f_u16, 0x4646_u16, StaticArray[0xbc_u8, 0xd3_u8, 0x3a_u8, 0x8_u8, 0x9d_u8, 0x8a_u8, 0x84_u8, 0xb4_u8])
  struct IWbemDecoupledRegistrar
    lpVtbl : IWbemDecoupledRegistrarVTbl*
  end

  struct IWbemProviderIdentityVTbl
    query_interface : Proc(IWbemProviderIdentity*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemProviderIdentity*, UInt32)
    release : Proc(IWbemProviderIdentity*, UInt32)
    set_registration_object : Proc(IWbemProviderIdentity*, Int32, IWbemClassObject, HRESULT)
  end

  IWbemProviderIdentity_GUID = "631f7d97-d993-11d2-b339-00105a1f4aaf"
  IID_IWbemProviderIdentity = LibC::GUID.new(0x631f7d97_u32, 0xd993_u16, 0x11d2_u16, StaticArray[0xb3_u8, 0x39_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x4a_u8, 0xaf_u8])
  struct IWbemProviderIdentity
    lpVtbl : IWbemProviderIdentityVTbl*
  end

  struct IWbemDecoupledBasicEventProviderVTbl
    query_interface : Proc(IWbemDecoupledBasicEventProvider*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemDecoupledBasicEventProvider*, UInt32)
    release : Proc(IWbemDecoupledBasicEventProvider*, UInt32)
    register : Proc(IWbemDecoupledBasicEventProvider*, Int32, IWbemContext, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, IUnknown, HRESULT)
    un_register : Proc(IWbemDecoupledBasicEventProvider*, HRESULT)
    get_sink : Proc(IWbemDecoupledBasicEventProvider*, Int32, IWbemContext, IWbemObjectSink*, HRESULT)
    get_service : Proc(IWbemDecoupledBasicEventProvider*, Int32, IWbemContext, IWbemServices*, HRESULT)
  end

  IWbemDecoupledBasicEventProvider_GUID = "86336d20-ca11-4786-9ef1-bc8a946b42fc"
  IID_IWbemDecoupledBasicEventProvider = LibC::GUID.new(0x86336d20_u32, 0xca11_u16, 0x4786_u16, StaticArray[0x9e_u8, 0xf1_u8, 0xbc_u8, 0x8a_u8, 0x94_u8, 0x6b_u8, 0x42_u8, 0xfc_u8])
  struct IWbemDecoupledBasicEventProvider
    lpVtbl : IWbemDecoupledBasicEventProviderVTbl*
  end

  struct IWbemEventSinkVTbl
    query_interface : Proc(IWbemEventSink*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemEventSink*, UInt32)
    release : Proc(IWbemEventSink*, UInt32)
    indicate : Proc(IWbemEventSink*, Int32, IWbemClassObject*, HRESULT)
    set_status : Proc(IWbemEventSink*, Int32, HRESULT, UInt8*, IWbemClassObject, HRESULT)
    set_sink_security : Proc(IWbemEventSink*, Int32, UInt8*, HRESULT)
    is_active : Proc(IWbemEventSink*, HRESULT)
    get_restricted_sink : Proc(IWbemEventSink*, Int32, LibC::LPWSTR*, IUnknown, IWbemEventSink*, HRESULT)
    set_batching_parameters : Proc(IWbemEventSink*, Int32, UInt32, UInt32, HRESULT)
  end

  IWbemEventSink_GUID = "3ae0080a-7e3a-4366-bf89-0feedc931659"
  IID_IWbemEventSink = LibC::GUID.new(0x3ae0080a_u32, 0x7e3a_u16, 0x4366_u16, StaticArray[0xbf_u8, 0x89_u8, 0xf_u8, 0xee_u8, 0xdc_u8, 0x93_u8, 0x16_u8, 0x59_u8])
  struct IWbemEventSink
    lpVtbl : IWbemEventSinkVTbl*
  end

  struct ISWbemServicesVTbl
    query_interface : Proc(ISWbemServices*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemServices*, UInt32)
    release : Proc(ISWbemServices*, UInt32)
    get_type_info_count : Proc(ISWbemServices*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemServices*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemServices*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemServices*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get : Proc(ISWbemServices*, UInt8*, Int32, IDispatch, ISWbemObject*, HRESULT)
    get_async : Proc(ISWbemServices*, IDispatch, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    delete : Proc(ISWbemServices*, UInt8*, Int32, IDispatch, HRESULT)
    delete_async : Proc(ISWbemServices*, IDispatch, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    instances_of : Proc(ISWbemServices*, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    instances_of_async : Proc(ISWbemServices*, IDispatch, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    subclasses_of : Proc(ISWbemServices*, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    subclasses_of_async : Proc(ISWbemServices*, IDispatch, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    exec_query : Proc(ISWbemServices*, UInt8*, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    exec_query_async : Proc(ISWbemServices*, IDispatch, UInt8*, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    associators_of : Proc(ISWbemServices*, UInt8*, UInt8*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    associators_of_async : Proc(ISWbemServices*, IDispatch, UInt8*, UInt8*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    references_to : Proc(ISWbemServices*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    references_to_async : Proc(ISWbemServices*, IDispatch, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    exec_notification_query : Proc(ISWbemServices*, UInt8*, UInt8*, Int32, IDispatch, ISWbemEventSource*, HRESULT)
    exec_notification_query_async : Proc(ISWbemServices*, IDispatch, UInt8*, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    exec_method : Proc(ISWbemServices*, UInt8*, UInt8*, IDispatch, Int32, IDispatch, ISWbemObject*, HRESULT)
    exec_method_async : Proc(ISWbemServices*, IDispatch, UInt8*, UInt8*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    get_security_ : Proc(ISWbemServices*, ISWbemSecurity*, HRESULT)
  end

  ISWbemServices_GUID = "76a6415c-cb41-11d1-8b02-00600806d9b6"
  IID_ISWbemServices = LibC::GUID.new(0x76a6415c_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemServices
    lpVtbl : ISWbemServicesVTbl*
  end

  struct ISWbemLocatorVTbl
    query_interface : Proc(ISWbemLocator*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemLocator*, UInt32)
    release : Proc(ISWbemLocator*, UInt32)
    get_type_info_count : Proc(ISWbemLocator*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemLocator*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemLocator*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemLocator*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    connect_server : Proc(ISWbemLocator*, UInt8*, UInt8*, UInt8*, UInt8*, UInt8*, UInt8*, Int32, IDispatch, ISWbemServices*, HRESULT)
    get_security_ : Proc(ISWbemLocator*, ISWbemSecurity*, HRESULT)
  end

  ISWbemLocator_GUID = "76a6415b-cb41-11d1-8b02-00600806d9b6"
  IID_ISWbemLocator = LibC::GUID.new(0x76a6415b_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemLocator
    lpVtbl : ISWbemLocatorVTbl*
  end

  struct ISWbemObjectVTbl
    query_interface : Proc(ISWbemObject*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemObject*, UInt32)
    release : Proc(ISWbemObject*, UInt32)
    get_type_info_count : Proc(ISWbemObject*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemObject*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemObject*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemObject*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    put_ : Proc(ISWbemObject*, Int32, IDispatch, ISWbemObjectPath*, HRESULT)
    put_async_ : Proc(ISWbemObject*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    delete_ : Proc(ISWbemObject*, Int32, IDispatch, HRESULT)
    delete_async_ : Proc(ISWbemObject*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    instances_ : Proc(ISWbemObject*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    instances_async_ : Proc(ISWbemObject*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    subclasses_ : Proc(ISWbemObject*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    subclasses_async_ : Proc(ISWbemObject*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    associators_ : Proc(ISWbemObject*, UInt8*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    associators_async_ : Proc(ISWbemObject*, IDispatch, UInt8*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    references_ : Proc(ISWbemObject*, UInt8*, UInt8*, Int16, Int16, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    references_async_ : Proc(ISWbemObject*, IDispatch, UInt8*, UInt8*, Int16, Int16, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    exec_method_ : Proc(ISWbemObject*, UInt8*, IDispatch, Int32, IDispatch, ISWbemObject*, HRESULT)
    exec_method_async_ : Proc(ISWbemObject*, IDispatch, UInt8*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    clone_ : Proc(ISWbemObject*, ISWbemObject*, HRESULT)
    get_object_text_ : Proc(ISWbemObject*, Int32, UInt8**, HRESULT)
    spawn_derived_class_ : Proc(ISWbemObject*, Int32, ISWbemObject*, HRESULT)
    spawn_instance_ : Proc(ISWbemObject*, Int32, ISWbemObject*, HRESULT)
    compare_to_ : Proc(ISWbemObject*, IDispatch, Int32, Int16*, HRESULT)
    get_qualifiers_ : Proc(ISWbemObject*, ISWbemQualifierSet*, HRESULT)
    get_properties_ : Proc(ISWbemObject*, ISWbemPropertySet*, HRESULT)
    get_methods_ : Proc(ISWbemObject*, ISWbemMethodSet*, HRESULT)
    get_derivation_ : Proc(ISWbemObject*, VARIANT*, HRESULT)
    get_path_ : Proc(ISWbemObject*, ISWbemObjectPath*, HRESULT)
    get_security_ : Proc(ISWbemObject*, ISWbemSecurity*, HRESULT)
  end

  ISWbemObject_GUID = "76a6415a-cb41-11d1-8b02-00600806d9b6"
  IID_ISWbemObject = LibC::GUID.new(0x76a6415a_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemObject
    lpVtbl : ISWbemObjectVTbl*
  end

  struct ISWbemObjectSetVTbl
    query_interface : Proc(ISWbemObjectSet*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemObjectSet*, UInt32)
    release : Proc(ISWbemObjectSet*, UInt32)
    get_type_info_count : Proc(ISWbemObjectSet*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemObjectSet*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemObjectSet*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemObjectSet*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get__new_enum : Proc(ISWbemObjectSet*, IUnknown*, HRESULT)
    item : Proc(ISWbemObjectSet*, UInt8*, Int32, ISWbemObject*, HRESULT)
    get_count : Proc(ISWbemObjectSet*, Int32*, HRESULT)
    get_security_ : Proc(ISWbemObjectSet*, ISWbemSecurity*, HRESULT)
    item_index : Proc(ISWbemObjectSet*, Int32, ISWbemObject*, HRESULT)
  end

  ISWbemObjectSet_GUID = "76a6415f-cb41-11d1-8b02-00600806d9b6"
  IID_ISWbemObjectSet = LibC::GUID.new(0x76a6415f_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemObjectSet
    lpVtbl : ISWbemObjectSetVTbl*
  end

  struct ISWbemNamedValueVTbl
    query_interface : Proc(ISWbemNamedValue*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemNamedValue*, UInt32)
    release : Proc(ISWbemNamedValue*, UInt32)
    get_type_info_count : Proc(ISWbemNamedValue*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemNamedValue*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemNamedValue*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemNamedValue*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_value : Proc(ISWbemNamedValue*, VARIANT*, HRESULT)
    put_value : Proc(ISWbemNamedValue*, VARIANT*, HRESULT)
    get_name : Proc(ISWbemNamedValue*, UInt8**, HRESULT)
  end

  ISWbemNamedValue_GUID = "76a64164-cb41-11d1-8b02-00600806d9b6"
  IID_ISWbemNamedValue = LibC::GUID.new(0x76a64164_u32, 0xcb41_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x2_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemNamedValue
    lpVtbl : ISWbemNamedValueVTbl*
  end

  struct ISWbemNamedValueSetVTbl
    query_interface : Proc(ISWbemNamedValueSet*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemNamedValueSet*, UInt32)
    release : Proc(ISWbemNamedValueSet*, UInt32)
    get_type_info_count : Proc(ISWbemNamedValueSet*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemNamedValueSet*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemNamedValueSet*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemNamedValueSet*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get__new_enum : Proc(ISWbemNamedValueSet*, IUnknown*, HRESULT)
    item : Proc(ISWbemNamedValueSet*, UInt8*, Int32, ISWbemNamedValue*, HRESULT)
    get_count : Proc(ISWbemNamedValueSet*, Int32*, HRESULT)
    add : Proc(ISWbemNamedValueSet*, UInt8*, VARIANT*, Int32, ISWbemNamedValue*, HRESULT)
    remove : Proc(ISWbemNamedValueSet*, UInt8*, Int32, HRESULT)
    clone : Proc(ISWbemNamedValueSet*, ISWbemNamedValueSet*, HRESULT)
    delete_all : Proc(ISWbemNamedValueSet*, HRESULT)
  end

  ISWbemNamedValueSet_GUID = "cf2376ea-ce8c-11d1-8b05-00600806d9b6"
  IID_ISWbemNamedValueSet = LibC::GUID.new(0xcf2376ea_u32, 0xce8c_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x5_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemNamedValueSet
    lpVtbl : ISWbemNamedValueSetVTbl*
  end

  struct ISWbemQualifierVTbl
    query_interface : Proc(ISWbemQualifier*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemQualifier*, UInt32)
    release : Proc(ISWbemQualifier*, UInt32)
    get_type_info_count : Proc(ISWbemQualifier*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemQualifier*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemQualifier*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemQualifier*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_value : Proc(ISWbemQualifier*, VARIANT*, HRESULT)
    put_value : Proc(ISWbemQualifier*, VARIANT*, HRESULT)
    get_name : Proc(ISWbemQualifier*, UInt8**, HRESULT)
    get_is_local : Proc(ISWbemQualifier*, Int16*, HRESULT)
    get_propagates_to_subclass : Proc(ISWbemQualifier*, Int16*, HRESULT)
    put_propagates_to_subclass : Proc(ISWbemQualifier*, Int16, HRESULT)
    get_propagates_to_instance : Proc(ISWbemQualifier*, Int16*, HRESULT)
    put_propagates_to_instance : Proc(ISWbemQualifier*, Int16, HRESULT)
    get_is_overridable : Proc(ISWbemQualifier*, Int16*, HRESULT)
    put_is_overridable : Proc(ISWbemQualifier*, Int16, HRESULT)
    get_is_amended : Proc(ISWbemQualifier*, Int16*, HRESULT)
  end

  ISWbemQualifier_GUID = "79b05932-d3b7-11d1-8b06-00600806d9b6"
  IID_ISWbemQualifier = LibC::GUID.new(0x79b05932_u32, 0xd3b7_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x6_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemQualifier
    lpVtbl : ISWbemQualifierVTbl*
  end

  struct ISWbemQualifierSetVTbl
    query_interface : Proc(ISWbemQualifierSet*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemQualifierSet*, UInt32)
    release : Proc(ISWbemQualifierSet*, UInt32)
    get_type_info_count : Proc(ISWbemQualifierSet*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemQualifierSet*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemQualifierSet*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemQualifierSet*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get__new_enum : Proc(ISWbemQualifierSet*, IUnknown*, HRESULT)
    item : Proc(ISWbemQualifierSet*, UInt8*, Int32, ISWbemQualifier*, HRESULT)
    get_count : Proc(ISWbemQualifierSet*, Int32*, HRESULT)
    add : Proc(ISWbemQualifierSet*, UInt8*, VARIANT*, Int16, Int16, Int16, Int32, ISWbemQualifier*, HRESULT)
    remove : Proc(ISWbemQualifierSet*, UInt8*, Int32, HRESULT)
  end

  ISWbemQualifierSet_GUID = "9b16ed16-d3df-11d1-8b08-00600806d9b6"
  IID_ISWbemQualifierSet = LibC::GUID.new(0x9b16ed16_u32, 0xd3df_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x8_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemQualifierSet
    lpVtbl : ISWbemQualifierSetVTbl*
  end

  struct ISWbemPropertyVTbl
    query_interface : Proc(ISWbemProperty*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemProperty*, UInt32)
    release : Proc(ISWbemProperty*, UInt32)
    get_type_info_count : Proc(ISWbemProperty*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemProperty*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemProperty*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemProperty*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_value : Proc(ISWbemProperty*, VARIANT*, HRESULT)
    put_value : Proc(ISWbemProperty*, VARIANT*, HRESULT)
    get_name : Proc(ISWbemProperty*, UInt8**, HRESULT)
    get_is_local : Proc(ISWbemProperty*, Int16*, HRESULT)
    get_origin : Proc(ISWbemProperty*, UInt8**, HRESULT)
    get_cim_type : Proc(ISWbemProperty*, WbemCimtypeEnum*, HRESULT)
    get_qualifiers_ : Proc(ISWbemProperty*, ISWbemQualifierSet*, HRESULT)
    get_is_array : Proc(ISWbemProperty*, Int16*, HRESULT)
  end

  ISWbemProperty_GUID = "1a388f98-d4ba-11d1-8b09-00600806d9b6"
  IID_ISWbemProperty = LibC::GUID.new(0x1a388f98_u32, 0xd4ba_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x9_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemProperty
    lpVtbl : ISWbemPropertyVTbl*
  end

  struct ISWbemPropertySetVTbl
    query_interface : Proc(ISWbemPropertySet*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemPropertySet*, UInt32)
    release : Proc(ISWbemPropertySet*, UInt32)
    get_type_info_count : Proc(ISWbemPropertySet*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemPropertySet*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemPropertySet*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemPropertySet*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get__new_enum : Proc(ISWbemPropertySet*, IUnknown*, HRESULT)
    item : Proc(ISWbemPropertySet*, UInt8*, Int32, ISWbemProperty*, HRESULT)
    get_count : Proc(ISWbemPropertySet*, Int32*, HRESULT)
    add : Proc(ISWbemPropertySet*, UInt8*, WbemCimtypeEnum, Int16, Int32, ISWbemProperty*, HRESULT)
    remove : Proc(ISWbemPropertySet*, UInt8*, Int32, HRESULT)
  end

  ISWbemPropertySet_GUID = "dea0a7b2-d4ba-11d1-8b09-00600806d9b6"
  IID_ISWbemPropertySet = LibC::GUID.new(0xdea0a7b2_u32, 0xd4ba_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x9_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemPropertySet
    lpVtbl : ISWbemPropertySetVTbl*
  end

  struct ISWbemMethodVTbl
    query_interface : Proc(ISWbemMethod*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemMethod*, UInt32)
    release : Proc(ISWbemMethod*, UInt32)
    get_type_info_count : Proc(ISWbemMethod*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemMethod*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemMethod*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemMethod*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_name : Proc(ISWbemMethod*, UInt8**, HRESULT)
    get_origin : Proc(ISWbemMethod*, UInt8**, HRESULT)
    get_in_parameters : Proc(ISWbemMethod*, ISWbemObject*, HRESULT)
    get_out_parameters : Proc(ISWbemMethod*, ISWbemObject*, HRESULT)
    get_qualifiers_ : Proc(ISWbemMethod*, ISWbemQualifierSet*, HRESULT)
  end

  ISWbemMethod_GUID = "422e8e90-d955-11d1-8b09-00600806d9b6"
  IID_ISWbemMethod = LibC::GUID.new(0x422e8e90_u32, 0xd955_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x9_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemMethod
    lpVtbl : ISWbemMethodVTbl*
  end

  struct ISWbemMethodSetVTbl
    query_interface : Proc(ISWbemMethodSet*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemMethodSet*, UInt32)
    release : Proc(ISWbemMethodSet*, UInt32)
    get_type_info_count : Proc(ISWbemMethodSet*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemMethodSet*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemMethodSet*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemMethodSet*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get__new_enum : Proc(ISWbemMethodSet*, IUnknown*, HRESULT)
    item : Proc(ISWbemMethodSet*, UInt8*, Int32, ISWbemMethod*, HRESULT)
    get_count : Proc(ISWbemMethodSet*, Int32*, HRESULT)
  end

  ISWbemMethodSet_GUID = "c93ba292-d955-11d1-8b09-00600806d9b6"
  IID_ISWbemMethodSet = LibC::GUID.new(0xc93ba292_u32, 0xd955_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x9_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemMethodSet
    lpVtbl : ISWbemMethodSetVTbl*
  end

  struct ISWbemEventSourceVTbl
    query_interface : Proc(ISWbemEventSource*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemEventSource*, UInt32)
    release : Proc(ISWbemEventSource*, UInt32)
    get_type_info_count : Proc(ISWbemEventSource*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemEventSource*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemEventSource*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemEventSource*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    next_event : Proc(ISWbemEventSource*, Int32, ISWbemObject*, HRESULT)
    get_security_ : Proc(ISWbemEventSource*, ISWbemSecurity*, HRESULT)
  end

  ISWbemEventSource_GUID = "27d54d92-0ebe-11d2-8b22-00600806d9b6"
  IID_ISWbemEventSource = LibC::GUID.new(0x27d54d92_u32, 0xebe_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x22_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemEventSource
    lpVtbl : ISWbemEventSourceVTbl*
  end

  struct ISWbemObjectPathVTbl
    query_interface : Proc(ISWbemObjectPath*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemObjectPath*, UInt32)
    release : Proc(ISWbemObjectPath*, UInt32)
    get_type_info_count : Proc(ISWbemObjectPath*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemObjectPath*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemObjectPath*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemObjectPath*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_path : Proc(ISWbemObjectPath*, UInt8**, HRESULT)
    put_path : Proc(ISWbemObjectPath*, UInt8*, HRESULT)
    get_rel_path : Proc(ISWbemObjectPath*, UInt8**, HRESULT)
    put_rel_path : Proc(ISWbemObjectPath*, UInt8*, HRESULT)
    get_server : Proc(ISWbemObjectPath*, UInt8**, HRESULT)
    put_server : Proc(ISWbemObjectPath*, UInt8*, HRESULT)
    get_namespace : Proc(ISWbemObjectPath*, UInt8**, HRESULT)
    put_namespace : Proc(ISWbemObjectPath*, UInt8*, HRESULT)
    get_parent_namespace : Proc(ISWbemObjectPath*, UInt8**, HRESULT)
    get_display_name : Proc(ISWbemObjectPath*, UInt8**, HRESULT)
    put_display_name : Proc(ISWbemObjectPath*, UInt8*, HRESULT)
    get_class : Proc(ISWbemObjectPath*, UInt8**, HRESULT)
    put_class : Proc(ISWbemObjectPath*, UInt8*, HRESULT)
    get_is_class : Proc(ISWbemObjectPath*, Int16*, HRESULT)
    set_as_class : Proc(ISWbemObjectPath*, HRESULT)
    get_is_singleton : Proc(ISWbemObjectPath*, Int16*, HRESULT)
    set_as_singleton : Proc(ISWbemObjectPath*, HRESULT)
    get_keys : Proc(ISWbemObjectPath*, ISWbemNamedValueSet*, HRESULT)
    get_security_ : Proc(ISWbemObjectPath*, ISWbemSecurity*, HRESULT)
    get_locale : Proc(ISWbemObjectPath*, UInt8**, HRESULT)
    put_locale : Proc(ISWbemObjectPath*, UInt8*, HRESULT)
    get_authority : Proc(ISWbemObjectPath*, UInt8**, HRESULT)
    put_authority : Proc(ISWbemObjectPath*, UInt8*, HRESULT)
  end

  ISWbemObjectPath_GUID = "5791bc27-ce9c-11d1-97bf-0000f81e849c"
  IID_ISWbemObjectPath = LibC::GUID.new(0x5791bc27_u32, 0xce9c_u16, 0x11d1_u16, StaticArray[0x97_u8, 0xbf_u8, 0x0_u8, 0x0_u8, 0xf8_u8, 0x1e_u8, 0x84_u8, 0x9c_u8])
  struct ISWbemObjectPath
    lpVtbl : ISWbemObjectPathVTbl*
  end

  struct ISWbemLastErrorVTbl
    query_interface : Proc(ISWbemLastError*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemLastError*, UInt32)
    release : Proc(ISWbemLastError*, UInt32)
    get_type_info_count : Proc(ISWbemLastError*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemLastError*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemLastError*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemLastError*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    put_ : Proc(ISWbemLastError*, Int32, IDispatch, ISWbemObjectPath*, HRESULT)
    put_async_ : Proc(ISWbemLastError*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    delete_ : Proc(ISWbemLastError*, Int32, IDispatch, HRESULT)
    delete_async_ : Proc(ISWbemLastError*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    instances_ : Proc(ISWbemLastError*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    instances_async_ : Proc(ISWbemLastError*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    subclasses_ : Proc(ISWbemLastError*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    subclasses_async_ : Proc(ISWbemLastError*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    associators_ : Proc(ISWbemLastError*, UInt8*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    associators_async_ : Proc(ISWbemLastError*, IDispatch, UInt8*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    references_ : Proc(ISWbemLastError*, UInt8*, UInt8*, Int16, Int16, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    references_async_ : Proc(ISWbemLastError*, IDispatch, UInt8*, UInt8*, Int16, Int16, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    exec_method_ : Proc(ISWbemLastError*, UInt8*, IDispatch, Int32, IDispatch, ISWbemObject*, HRESULT)
    exec_method_async_ : Proc(ISWbemLastError*, IDispatch, UInt8*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    clone_ : Proc(ISWbemLastError*, ISWbemObject*, HRESULT)
    get_object_text_ : Proc(ISWbemLastError*, Int32, UInt8**, HRESULT)
    spawn_derived_class_ : Proc(ISWbemLastError*, Int32, ISWbemObject*, HRESULT)
    spawn_instance_ : Proc(ISWbemLastError*, Int32, ISWbemObject*, HRESULT)
    compare_to_ : Proc(ISWbemLastError*, IDispatch, Int32, Int16*, HRESULT)
    get_qualifiers_ : Proc(ISWbemLastError*, ISWbemQualifierSet*, HRESULT)
    get_properties_ : Proc(ISWbemLastError*, ISWbemPropertySet*, HRESULT)
    get_methods_ : Proc(ISWbemLastError*, ISWbemMethodSet*, HRESULT)
    get_derivation_ : Proc(ISWbemLastError*, VARIANT*, HRESULT)
    get_path_ : Proc(ISWbemLastError*, ISWbemObjectPath*, HRESULT)
    get_security_ : Proc(ISWbemLastError*, ISWbemSecurity*, HRESULT)
  end

  ISWbemLastError_GUID = "d962db84-d4bb-11d1-8b09-00600806d9b6"
  IID_ISWbemLastError = LibC::GUID.new(0xd962db84_u32, 0xd4bb_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x9_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemLastError
    lpVtbl : ISWbemLastErrorVTbl*
  end

  struct ISWbemSinkEventsVTbl
    query_interface : Proc(ISWbemSinkEvents*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemSinkEvents*, UInt32)
    release : Proc(ISWbemSinkEvents*, UInt32)
    get_type_info_count : Proc(ISWbemSinkEvents*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemSinkEvents*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemSinkEvents*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemSinkEvents*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
  end

  ISWbemSinkEvents_GUID = "75718ca0-f029-11d1-a1ac-00c04fb6c223"
  IID_ISWbemSinkEvents = LibC::GUID.new(0x75718ca0_u32, 0xf029_u16, 0x11d1_u16, StaticArray[0xa1_u8, 0xac_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0xc2_u8, 0x23_u8])
  struct ISWbemSinkEvents
    lpVtbl : ISWbemSinkEventsVTbl*
  end

  struct ISWbemSinkVTbl
    query_interface : Proc(ISWbemSink*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemSink*, UInt32)
    release : Proc(ISWbemSink*, UInt32)
    get_type_info_count : Proc(ISWbemSink*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemSink*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemSink*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemSink*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    cancel : Proc(ISWbemSink*, HRESULT)
  end

  ISWbemSink_GUID = "75718c9f-f029-11d1-a1ac-00c04fb6c223"
  IID_ISWbemSink = LibC::GUID.new(0x75718c9f_u32, 0xf029_u16, 0x11d1_u16, StaticArray[0xa1_u8, 0xac_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0xc2_u8, 0x23_u8])
  struct ISWbemSink
    lpVtbl : ISWbemSinkVTbl*
  end

  struct ISWbemSecurityVTbl
    query_interface : Proc(ISWbemSecurity*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemSecurity*, UInt32)
    release : Proc(ISWbemSecurity*, UInt32)
    get_type_info_count : Proc(ISWbemSecurity*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemSecurity*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemSecurity*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemSecurity*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_impersonation_level : Proc(ISWbemSecurity*, WbemImpersonationLevelEnum*, HRESULT)
    put_impersonation_level : Proc(ISWbemSecurity*, WbemImpersonationLevelEnum, HRESULT)
    get_authentication_level : Proc(ISWbemSecurity*, WbemAuthenticationLevelEnum*, HRESULT)
    put_authentication_level : Proc(ISWbemSecurity*, WbemAuthenticationLevelEnum, HRESULT)
    get_privileges : Proc(ISWbemSecurity*, ISWbemPrivilegeSet*, HRESULT)
  end

  ISWbemSecurity_GUID = "b54d66e6-2287-11d2-8b33-00600806d9b6"
  IID_ISWbemSecurity = LibC::GUID.new(0xb54d66e6_u32, 0x2287_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x33_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemSecurity
    lpVtbl : ISWbemSecurityVTbl*
  end

  struct ISWbemPrivilegeVTbl
    query_interface : Proc(ISWbemPrivilege*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemPrivilege*, UInt32)
    release : Proc(ISWbemPrivilege*, UInt32)
    get_type_info_count : Proc(ISWbemPrivilege*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemPrivilege*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemPrivilege*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemPrivilege*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_is_enabled : Proc(ISWbemPrivilege*, Int16*, HRESULT)
    put_is_enabled : Proc(ISWbemPrivilege*, Int16, HRESULT)
    get_name : Proc(ISWbemPrivilege*, UInt8**, HRESULT)
    get_display_name : Proc(ISWbemPrivilege*, UInt8**, HRESULT)
    get_identifier : Proc(ISWbemPrivilege*, WbemPrivilegeEnum*, HRESULT)
  end

  ISWbemPrivilege_GUID = "26ee67bd-5804-11d2-8b4a-00600806d9b6"
  IID_ISWbemPrivilege = LibC::GUID.new(0x26ee67bd_u32, 0x5804_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x4a_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemPrivilege
    lpVtbl : ISWbemPrivilegeVTbl*
  end

  struct ISWbemPrivilegeSetVTbl
    query_interface : Proc(ISWbemPrivilegeSet*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemPrivilegeSet*, UInt32)
    release : Proc(ISWbemPrivilegeSet*, UInt32)
    get_type_info_count : Proc(ISWbemPrivilegeSet*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemPrivilegeSet*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemPrivilegeSet*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemPrivilegeSet*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get__new_enum : Proc(ISWbemPrivilegeSet*, IUnknown*, HRESULT)
    item : Proc(ISWbemPrivilegeSet*, WbemPrivilegeEnum, ISWbemPrivilege*, HRESULT)
    get_count : Proc(ISWbemPrivilegeSet*, Int32*, HRESULT)
    add : Proc(ISWbemPrivilegeSet*, WbemPrivilegeEnum, Int16, ISWbemPrivilege*, HRESULT)
    remove : Proc(ISWbemPrivilegeSet*, WbemPrivilegeEnum, HRESULT)
    delete_all : Proc(ISWbemPrivilegeSet*, HRESULT)
    add_as_string : Proc(ISWbemPrivilegeSet*, UInt8*, Int16, ISWbemPrivilege*, HRESULT)
  end

  ISWbemPrivilegeSet_GUID = "26ee67bf-5804-11d2-8b4a-00600806d9b6"
  IID_ISWbemPrivilegeSet = LibC::GUID.new(0x26ee67bf_u32, 0x5804_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x4a_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x6_u8, 0xd9_u8, 0xb6_u8])
  struct ISWbemPrivilegeSet
    lpVtbl : ISWbemPrivilegeSetVTbl*
  end

  struct ISWbemServicesExVTbl
    query_interface : Proc(ISWbemServicesEx*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemServicesEx*, UInt32)
    release : Proc(ISWbemServicesEx*, UInt32)
    get_type_info_count : Proc(ISWbemServicesEx*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemServicesEx*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemServicesEx*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemServicesEx*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get : Proc(ISWbemServicesEx*, UInt8*, Int32, IDispatch, ISWbemObject*, HRESULT)
    get_async : Proc(ISWbemServicesEx*, IDispatch, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    delete : Proc(ISWbemServicesEx*, UInt8*, Int32, IDispatch, HRESULT)
    delete_async : Proc(ISWbemServicesEx*, IDispatch, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    instances_of : Proc(ISWbemServicesEx*, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    instances_of_async : Proc(ISWbemServicesEx*, IDispatch, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    subclasses_of : Proc(ISWbemServicesEx*, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    subclasses_of_async : Proc(ISWbemServicesEx*, IDispatch, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    exec_query : Proc(ISWbemServicesEx*, UInt8*, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    exec_query_async : Proc(ISWbemServicesEx*, IDispatch, UInt8*, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    associators_of : Proc(ISWbemServicesEx*, UInt8*, UInt8*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    associators_of_async : Proc(ISWbemServicesEx*, IDispatch, UInt8*, UInt8*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    references_to : Proc(ISWbemServicesEx*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    references_to_async : Proc(ISWbemServicesEx*, IDispatch, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    exec_notification_query : Proc(ISWbemServicesEx*, UInt8*, UInt8*, Int32, IDispatch, ISWbemEventSource*, HRESULT)
    exec_notification_query_async : Proc(ISWbemServicesEx*, IDispatch, UInt8*, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    exec_method : Proc(ISWbemServicesEx*, UInt8*, UInt8*, IDispatch, Int32, IDispatch, ISWbemObject*, HRESULT)
    exec_method_async : Proc(ISWbemServicesEx*, IDispatch, UInt8*, UInt8*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    get_security_ : Proc(ISWbemServicesEx*, ISWbemSecurity*, HRESULT)
    put : Proc(ISWbemServicesEx*, ISWbemObjectEx, Int32, IDispatch, ISWbemObjectPath*, HRESULT)
    put_async : Proc(ISWbemServicesEx*, ISWbemSink, ISWbemObjectEx, Int32, IDispatch, IDispatch, HRESULT)
  end

  ISWbemServicesEx_GUID = "d2f68443-85dc-427e-91d8-366554cc754c"
  IID_ISWbemServicesEx = LibC::GUID.new(0xd2f68443_u32, 0x85dc_u16, 0x427e_u16, StaticArray[0x91_u8, 0xd8_u8, 0x36_u8, 0x65_u8, 0x54_u8, 0xcc_u8, 0x75_u8, 0x4c_u8])
  struct ISWbemServicesEx
    lpVtbl : ISWbemServicesExVTbl*
  end

  struct ISWbemObjectExVTbl
    query_interface : Proc(ISWbemObjectEx*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemObjectEx*, UInt32)
    release : Proc(ISWbemObjectEx*, UInt32)
    get_type_info_count : Proc(ISWbemObjectEx*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemObjectEx*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemObjectEx*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemObjectEx*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    put_ : Proc(ISWbemObjectEx*, Int32, IDispatch, ISWbemObjectPath*, HRESULT)
    put_async_ : Proc(ISWbemObjectEx*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    delete_ : Proc(ISWbemObjectEx*, Int32, IDispatch, HRESULT)
    delete_async_ : Proc(ISWbemObjectEx*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    instances_ : Proc(ISWbemObjectEx*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    instances_async_ : Proc(ISWbemObjectEx*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    subclasses_ : Proc(ISWbemObjectEx*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    subclasses_async_ : Proc(ISWbemObjectEx*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    associators_ : Proc(ISWbemObjectEx*, UInt8*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    associators_async_ : Proc(ISWbemObjectEx*, IDispatch, UInt8*, UInt8*, UInt8*, UInt8*, Int16, Int16, UInt8*, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    references_ : Proc(ISWbemObjectEx*, UInt8*, UInt8*, Int16, Int16, UInt8*, Int32, IDispatch, ISWbemObjectSet*, HRESULT)
    references_async_ : Proc(ISWbemObjectEx*, IDispatch, UInt8*, UInt8*, Int16, Int16, UInt8*, Int32, IDispatch, IDispatch, HRESULT)
    exec_method_ : Proc(ISWbemObjectEx*, UInt8*, IDispatch, Int32, IDispatch, ISWbemObject*, HRESULT)
    exec_method_async_ : Proc(ISWbemObjectEx*, IDispatch, UInt8*, IDispatch, Int32, IDispatch, IDispatch, HRESULT)
    clone_ : Proc(ISWbemObjectEx*, ISWbemObject*, HRESULT)
    get_object_text_ : Proc(ISWbemObjectEx*, Int32, UInt8**, HRESULT)
    spawn_derived_class_ : Proc(ISWbemObjectEx*, Int32, ISWbemObject*, HRESULT)
    spawn_instance_ : Proc(ISWbemObjectEx*, Int32, ISWbemObject*, HRESULT)
    compare_to_ : Proc(ISWbemObjectEx*, IDispatch, Int32, Int16*, HRESULT)
    get_qualifiers_ : Proc(ISWbemObjectEx*, ISWbemQualifierSet*, HRESULT)
    get_properties_ : Proc(ISWbemObjectEx*, ISWbemPropertySet*, HRESULT)
    get_methods_ : Proc(ISWbemObjectEx*, ISWbemMethodSet*, HRESULT)
    get_derivation_ : Proc(ISWbemObjectEx*, VARIANT*, HRESULT)
    get_path_ : Proc(ISWbemObjectEx*, ISWbemObjectPath*, HRESULT)
    get_security_ : Proc(ISWbemObjectEx*, ISWbemSecurity*, HRESULT)
    refresh_ : Proc(ISWbemObjectEx*, Int32, IDispatch, HRESULT)
    get_system_properties_ : Proc(ISWbemObjectEx*, ISWbemPropertySet*, HRESULT)
    get_text_ : Proc(ISWbemObjectEx*, WbemObjectTextFormatEnum, Int32, IDispatch, UInt8**, HRESULT)
    set_from_text_ : Proc(ISWbemObjectEx*, UInt8*, WbemObjectTextFormatEnum, Int32, IDispatch, HRESULT)
  end

  ISWbemObjectEx_GUID = "269ad56a-8a67-4129-bc8c-0506dcfe9880"
  IID_ISWbemObjectEx = LibC::GUID.new(0x269ad56a_u32, 0x8a67_u16, 0x4129_u16, StaticArray[0xbc_u8, 0x8c_u8, 0x5_u8, 0x6_u8, 0xdc_u8, 0xfe_u8, 0x98_u8, 0x80_u8])
  struct ISWbemObjectEx
    lpVtbl : ISWbemObjectExVTbl*
  end

  struct ISWbemDateTimeVTbl
    query_interface : Proc(ISWbemDateTime*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemDateTime*, UInt32)
    release : Proc(ISWbemDateTime*, UInt32)
    get_type_info_count : Proc(ISWbemDateTime*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemDateTime*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemDateTime*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemDateTime*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_value : Proc(ISWbemDateTime*, UInt8**, HRESULT)
    put_value : Proc(ISWbemDateTime*, UInt8*, HRESULT)
    get_year : Proc(ISWbemDateTime*, Int32*, HRESULT)
    put_year : Proc(ISWbemDateTime*, Int32, HRESULT)
    get_year_specified : Proc(ISWbemDateTime*, Int16*, HRESULT)
    put_year_specified : Proc(ISWbemDateTime*, Int16, HRESULT)
    get_month : Proc(ISWbemDateTime*, Int32*, HRESULT)
    put_month : Proc(ISWbemDateTime*, Int32, HRESULT)
    get_month_specified : Proc(ISWbemDateTime*, Int16*, HRESULT)
    put_month_specified : Proc(ISWbemDateTime*, Int16, HRESULT)
    get_day : Proc(ISWbemDateTime*, Int32*, HRESULT)
    put_day : Proc(ISWbemDateTime*, Int32, HRESULT)
    get_day_specified : Proc(ISWbemDateTime*, Int16*, HRESULT)
    put_day_specified : Proc(ISWbemDateTime*, Int16, HRESULT)
    get_hours : Proc(ISWbemDateTime*, Int32*, HRESULT)
    put_hours : Proc(ISWbemDateTime*, Int32, HRESULT)
    get_hours_specified : Proc(ISWbemDateTime*, Int16*, HRESULT)
    put_hours_specified : Proc(ISWbemDateTime*, Int16, HRESULT)
    get_minutes : Proc(ISWbemDateTime*, Int32*, HRESULT)
    put_minutes : Proc(ISWbemDateTime*, Int32, HRESULT)
    get_minutes_specified : Proc(ISWbemDateTime*, Int16*, HRESULT)
    put_minutes_specified : Proc(ISWbemDateTime*, Int16, HRESULT)
    get_seconds : Proc(ISWbemDateTime*, Int32*, HRESULT)
    put_seconds : Proc(ISWbemDateTime*, Int32, HRESULT)
    get_seconds_specified : Proc(ISWbemDateTime*, Int16*, HRESULT)
    put_seconds_specified : Proc(ISWbemDateTime*, Int16, HRESULT)
    get_microseconds : Proc(ISWbemDateTime*, Int32*, HRESULT)
    put_microseconds : Proc(ISWbemDateTime*, Int32, HRESULT)
    get_microseconds_specified : Proc(ISWbemDateTime*, Int16*, HRESULT)
    put_microseconds_specified : Proc(ISWbemDateTime*, Int16, HRESULT)
    get_utc : Proc(ISWbemDateTime*, Int32*, HRESULT)
    put_utc : Proc(ISWbemDateTime*, Int32, HRESULT)
    get_utc_specified : Proc(ISWbemDateTime*, Int16*, HRESULT)
    put_utc_specified : Proc(ISWbemDateTime*, Int16, HRESULT)
    get_is_interval : Proc(ISWbemDateTime*, Int16*, HRESULT)
    put_is_interval : Proc(ISWbemDateTime*, Int16, HRESULT)
    get_var_date : Proc(ISWbemDateTime*, Int16, Float64*, HRESULT)
    set_var_date : Proc(ISWbemDateTime*, Float64, Int16, HRESULT)
    get_file_time : Proc(ISWbemDateTime*, Int16, UInt8**, HRESULT)
    set_file_time : Proc(ISWbemDateTime*, UInt8*, Int16, HRESULT)
  end

  ISWbemDateTime_GUID = "5e97458a-cf77-11d3-b38f-00105a1f473a"
  IID_ISWbemDateTime = LibC::GUID.new(0x5e97458a_u32, 0xcf77_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x8f_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])
  struct ISWbemDateTime
    lpVtbl : ISWbemDateTimeVTbl*
  end

  struct ISWbemRefresherVTbl
    query_interface : Proc(ISWbemRefresher*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemRefresher*, UInt32)
    release : Proc(ISWbemRefresher*, UInt32)
    get_type_info_count : Proc(ISWbemRefresher*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemRefresher*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemRefresher*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemRefresher*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get__new_enum : Proc(ISWbemRefresher*, IUnknown*, HRESULT)
    item : Proc(ISWbemRefresher*, Int32, ISWbemRefreshableItem*, HRESULT)
    get_count : Proc(ISWbemRefresher*, Int32*, HRESULT)
    add : Proc(ISWbemRefresher*, ISWbemServicesEx, UInt8*, Int32, IDispatch, ISWbemRefreshableItem*, HRESULT)
    add_enum : Proc(ISWbemRefresher*, ISWbemServicesEx, UInt8*, Int32, IDispatch, ISWbemRefreshableItem*, HRESULT)
    remove : Proc(ISWbemRefresher*, Int32, Int32, HRESULT)
    refresh : Proc(ISWbemRefresher*, Int32, HRESULT)
    get_auto_reconnect : Proc(ISWbemRefresher*, Int16*, HRESULT)
    put_auto_reconnect : Proc(ISWbemRefresher*, Int16, HRESULT)
    delete_all : Proc(ISWbemRefresher*, HRESULT)
  end

  ISWbemRefresher_GUID = "14d8250e-d9c2-11d3-b38f-00105a1f473a"
  IID_ISWbemRefresher = LibC::GUID.new(0x14d8250e_u32, 0xd9c2_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x8f_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])
  struct ISWbemRefresher
    lpVtbl : ISWbemRefresherVTbl*
  end

  struct ISWbemRefreshableItemVTbl
    query_interface : Proc(ISWbemRefreshableItem*, Guid*, Void**, HRESULT)
    add_ref : Proc(ISWbemRefreshableItem*, UInt32)
    release : Proc(ISWbemRefreshableItem*, UInt32)
    get_type_info_count : Proc(ISWbemRefreshableItem*, UInt32*, HRESULT)
    get_type_info : Proc(ISWbemRefreshableItem*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(ISWbemRefreshableItem*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(ISWbemRefreshableItem*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_index : Proc(ISWbemRefreshableItem*, Int32*, HRESULT)
    get_refresher : Proc(ISWbemRefreshableItem*, ISWbemRefresher*, HRESULT)
    get_is_set : Proc(ISWbemRefreshableItem*, Int16*, HRESULT)
    get_object : Proc(ISWbemRefreshableItem*, ISWbemObjectEx*, HRESULT)
    get_object_set : Proc(ISWbemRefreshableItem*, ISWbemObjectSet*, HRESULT)
    remove : Proc(ISWbemRefreshableItem*, Int32, HRESULT)
  end

  ISWbemRefreshableItem_GUID = "5ad4bf92-daab-11d3-b38f-00105a1f473a"
  IID_ISWbemRefreshableItem = LibC::GUID.new(0x5ad4bf92_u32, 0xdaab_u16, 0x11d3_u16, StaticArray[0xb3_u8, 0x8f_u8, 0x0_u8, 0x10_u8, 0x5a_u8, 0x1f_u8, 0x47_u8, 0x3a_u8])
  struct ISWbemRefreshableItem
    lpVtbl : ISWbemRefreshableItemVTbl*
  end

  struct IWMIExtensionVTbl
    query_interface : Proc(IWMIExtension*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWMIExtension*, UInt32)
    release : Proc(IWMIExtension*, UInt32)
    get_type_info_count : Proc(IWMIExtension*, UInt32*, HRESULT)
    get_type_info : Proc(IWMIExtension*, UInt32, UInt32, ITypeInfo*, HRESULT)
    get_i_ds_of_names : Proc(IWMIExtension*, Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)
    invoke : Proc(IWMIExtension*, Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)
    get_wmi_object_path : Proc(IWMIExtension*, UInt8**, HRESULT)
    get_wmi_object : Proc(IWMIExtension*, ISWbemObject*, HRESULT)
    get_wmi_services : Proc(IWMIExtension*, ISWbemServices*, HRESULT)
  end

  IWMIExtension_GUID = "adc1f06e-5c7e-11d2-8b74-00104b2afb41"
  IID_IWMIExtension = LibC::GUID.new(0xadc1f06e_u32, 0x5c7e_u16, 0x11d2_u16, StaticArray[0x8b_u8, 0x74_u8, 0x0_u8, 0x10_u8, 0x4b_u8, 0x2a_u8, 0xfb_u8, 0x41_u8])
  struct IWMIExtension
    lpVtbl : IWMIExtensionVTbl*
  end

  struct IWbemTransportVTbl
    query_interface : Proc(IWbemTransport*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemTransport*, UInt32)
    release : Proc(IWbemTransport*, UInt32)
    initialize : Proc(IWbemTransport*, HRESULT)
  end

  IWbemTransport_GUID = "553fe584-2156-11d0-b6ae-00aa003240c7"
  IID_IWbemTransport = LibC::GUID.new(0x553fe584_u32, 0x2156_u16, 0x11d0_u16, StaticArray[0xb6_u8, 0xae_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x32_u8, 0x40_u8, 0xc7_u8])
  struct IWbemTransport
    lpVtbl : IWbemTransportVTbl*
  end

  struct IWbemLevel1LoginVTbl
    query_interface : Proc(IWbemLevel1Login*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemLevel1Login*, UInt32)
    release : Proc(IWbemLevel1Login*, UInt32)
    establish_position : Proc(IWbemLevel1Login*, LibC::LPWSTR, UInt32, UInt32*, HRESULT)
    request_challenge : Proc(IWbemLevel1Login*, LibC::LPWSTR, LibC::LPWSTR, UInt8*, HRESULT)
    wbem_login : Proc(IWbemLevel1Login*, LibC::LPWSTR, UInt8*, Int32, IWbemContext, IWbemServices*, HRESULT)
    ntlm_login : Proc(IWbemLevel1Login*, LibC::LPWSTR, LibC::LPWSTR, Int32, IWbemContext, IWbemServices*, HRESULT)
  end

  IWbemLevel1Login_GUID = "f309ad18-d86a-11d0-a075-00c04fb68820"
  IID_IWbemLevel1Login = LibC::GUID.new(0xf309ad18_u32, 0xd86a_u16, 0x11d0_u16, StaticArray[0xa0_u8, 0x75_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x88_u8, 0x20_u8])
  struct IWbemLevel1Login
    lpVtbl : IWbemLevel1LoginVTbl*
  end

  struct IWbemConnectorLoginVTbl
    query_interface : Proc(IWbemConnectorLogin*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemConnectorLogin*, UInt32)
    release : Proc(IWbemConnectorLogin*, UInt32)
    connector_login : Proc(IWbemConnectorLogin*, LibC::LPWSTR, LibC::LPWSTR, Int32, IWbemContext, Guid*, Void**, HRESULT)
  end

  IWbemConnectorLogin_GUID = "d8ec9cb1-b135-4f10-8b1b-c7188bb0d186"
  IID_IWbemConnectorLogin = LibC::GUID.new(0xd8ec9cb1_u32, 0xb135_u16, 0x4f10_u16, StaticArray[0x8b_u8, 0x1b_u8, 0xc7_u8, 0x18_u8, 0x8b_u8, 0xb0_u8, 0xd1_u8, 0x86_u8])
  struct IWbemConnectorLogin
    lpVtbl : IWbemConnectorLoginVTbl*
  end

  struct IWbemAddressResolutionVTbl
    query_interface : Proc(IWbemAddressResolution*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemAddressResolution*, UInt32)
    release : Proc(IWbemAddressResolution*, UInt32)
    resolve : Proc(IWbemAddressResolution*, LibC::LPWSTR, LibC::LPWSTR, UInt32*, UInt8**, HRESULT)
  end

  IWbemAddressResolution_GUID = "f7ce2e12-8c90-11d1-9e7b-00c04fc324a8"
  IID_IWbemAddressResolution = LibC::GUID.new(0xf7ce2e12_u32, 0x8c90_u16, 0x11d1_u16, StaticArray[0x9e_u8, 0x7b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x24_u8, 0xa8_u8])
  struct IWbemAddressResolution
    lpVtbl : IWbemAddressResolutionVTbl*
  end

  struct IWbemClientTransportVTbl
    query_interface : Proc(IWbemClientTransport*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemClientTransport*, UInt32)
    release : Proc(IWbemClientTransport*, UInt32)
    connect_server : Proc(IWbemClientTransport*, UInt8*, UInt32, UInt8*, UInt8*, UInt8*, UInt8*, UInt8*, Int32, UInt8*, IWbemContext, IWbemServices*, HRESULT)
  end

  IWbemClientTransport_GUID = "f7ce2e11-8c90-11d1-9e7b-00c04fc324a8"
  IID_IWbemClientTransport = LibC::GUID.new(0xf7ce2e11_u32, 0x8c90_u16, 0x11d1_u16, StaticArray[0x9e_u8, 0x7b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x24_u8, 0xa8_u8])
  struct IWbemClientTransport
    lpVtbl : IWbemClientTransportVTbl*
  end

  struct IWbemClientConnectionTransportVTbl
    query_interface : Proc(IWbemClientConnectionTransport*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemClientConnectionTransport*, UInt32)
    release : Proc(IWbemClientConnectionTransport*, UInt32)
    open : Proc(IWbemClientConnectionTransport*, UInt8*, UInt32, UInt8*, UInt8*, UInt8*, UInt8*, UInt8*, Int32, IWbemContext, Guid*, Void**, IWbemCallResult*, HRESULT)
    open_async : Proc(IWbemClientConnectionTransport*, UInt8*, UInt32, UInt8*, UInt8*, UInt8*, UInt8*, UInt8*, Int32, IWbemContext, Guid*, IWbemObjectSink, HRESULT)
    cancel : Proc(IWbemClientConnectionTransport*, Int32, IWbemObjectSink, HRESULT)
  end

  IWbemClientConnectionTransport_GUID = "a889c72a-fcc1-4a9e-af61-ed071333fb5b"
  IID_IWbemClientConnectionTransport = LibC::GUID.new(0xa889c72a_u32, 0xfcc1_u16, 0x4a9e_u16, StaticArray[0xaf_u8, 0x61_u8, 0xed_u8, 0x7_u8, 0x13_u8, 0x33_u8, 0xfb_u8, 0x5b_u8])
  struct IWbemClientConnectionTransport
    lpVtbl : IWbemClientConnectionTransportVTbl*
  end

  struct IWbemConstructClassObjectVTbl
    query_interface : Proc(IWbemConstructClassObject*, Guid*, Void**, HRESULT)
    add_ref : Proc(IWbemConstructClassObject*, UInt32)
    release : Proc(IWbemConstructClassObject*, UInt32)
    set_inheritance_chain : Proc(IWbemConstructClassObject*, Int32, LibC::LPWSTR*, HRESULT)
    set_property_origin : Proc(IWbemConstructClassObject*, LibC::LPWSTR, Int32, HRESULT)
    set_method_origin : Proc(IWbemConstructClassObject*, LibC::LPWSTR, Int32, HRESULT)
    set_server_namespace : Proc(IWbemConstructClassObject*, LibC::LPWSTR, LibC::LPWSTR, HRESULT)
  end

  IWbemConstructClassObject_GUID = "9ef76194-70d5-11d1-ad90-00c04fd8fdff"
  IID_IWbemConstructClassObject = LibC::GUID.new(0x9ef76194_u32, 0x70d5_u16, 0x11d1_u16, StaticArray[0xad_u8, 0x90_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd8_u8, 0xfd_u8, 0xff_u8])
  struct IWbemConstructClassObject
    lpVtbl : IWbemConstructClassObjectVTbl*
  end


  # Params # flags : UInt32 [In],applicationid : UInt16* [In],extendederror : MI_Instance** [In],application : MI_Application* [In]
  fun MI_Application_InitializeV1(flags : UInt32, applicationid : UInt16*, extendederror : MI_Instance**, application : MI_Application*) : MI_Result
end
struct LibWin32::IWbemPathKeyList
  def query_interface(this : IWbemPathKeyList*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemPathKeyList*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemPathKeyList*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_count(this : IWbemPathKeyList*, pukeycount : UInt32*) : HRESULT
    @lpVtbl.value.get_count.call(this, pukeycount)
  end
  def set_key(this : IWbemPathKeyList*, wszname : LibC::LPWSTR, uflags : UInt32, ucimtype : UInt32, pkeyval : Void*) : HRESULT
    @lpVtbl.value.set_key.call(this, wszname, uflags, ucimtype, pkeyval)
  end
  def set_key2(this : IWbemPathKeyList*, wszname : LibC::LPWSTR, uflags : UInt32, ucimtype : UInt32, pkeyval : VARIANT*) : HRESULT
    @lpVtbl.value.set_key2.call(this, wszname, uflags, ucimtype, pkeyval)
  end
  def get_key(this : IWbemPathKeyList*, ukeyix : UInt32, uflags : UInt32, punamebufsize : UInt32*, pszkeyname : Char*, pukeyvalbufsize : UInt32*, pkeyval : Void*, puapparentcimtype : UInt32*) : HRESULT
    @lpVtbl.value.get_key.call(this, ukeyix, uflags, punamebufsize, pszkeyname, pukeyvalbufsize, pkeyval, puapparentcimtype)
  end
  def get_key2(this : IWbemPathKeyList*, ukeyix : UInt32, uflags : UInt32, punamebufsize : UInt32*, pszkeyname : Char*, pkeyvalue : VARIANT*, puapparentcimtype : UInt32*) : HRESULT
    @lpVtbl.value.get_key2.call(this, ukeyix, uflags, punamebufsize, pszkeyname, pkeyvalue, puapparentcimtype)
  end
  def remove_key(this : IWbemPathKeyList*, wszname : LibC::LPWSTR, uflags : UInt32) : HRESULT
    @lpVtbl.value.remove_key.call(this, wszname, uflags)
  end
  def remove_all_keys(this : IWbemPathKeyList*, uflags : UInt32) : HRESULT
    @lpVtbl.value.remove_all_keys.call(this, uflags)
  end
  def make_singleton(this : IWbemPathKeyList*, bset : UInt8) : HRESULT
    @lpVtbl.value.make_singleton.call(this, bset)
  end
  def get_info(this : IWbemPathKeyList*, urequestedinfo : UInt32, puresponse : UInt64*) : HRESULT
    @lpVtbl.value.get_info.call(this, urequestedinfo, puresponse)
  end
  def get_text(this : IWbemPathKeyList*, lflags : Int32, pubufflength : UInt32*, psztext : Char*) : HRESULT
    @lpVtbl.value.get_text.call(this, lflags, pubufflength, psztext)
  end
end
struct LibWin32::IWbemPath
  def query_interface(this : IWbemPath*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemPath*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemPath*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def set_text(this : IWbemPath*, umode : UInt32, pszpath : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_text.call(this, umode, pszpath)
  end
  def get_text(this : IWbemPath*, lflags : Int32, pubufflength : UInt32*, psztext : Char*) : HRESULT
    @lpVtbl.value.get_text.call(this, lflags, pubufflength, psztext)
  end
  def get_info(this : IWbemPath*, urequestedinfo : UInt32, puresponse : UInt64*) : HRESULT
    @lpVtbl.value.get_info.call(this, urequestedinfo, puresponse)
  end
  def set_server(this : IWbemPath*, name : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_server.call(this, name)
  end
  def get_server(this : IWbemPath*, punamebuflength : UInt32*, pname : Char*) : HRESULT
    @lpVtbl.value.get_server.call(this, punamebuflength, pname)
  end
  def get_namespace_count(this : IWbemPath*, pucount : UInt32*) : HRESULT
    @lpVtbl.value.get_namespace_count.call(this, pucount)
  end
  def set_namespace_at(this : IWbemPath*, uindex : UInt32, pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_namespace_at.call(this, uindex, pszname)
  end
  def get_namespace_at(this : IWbemPath*, uindex : UInt32, punamebuflength : UInt32*, pname : Char*) : HRESULT
    @lpVtbl.value.get_namespace_at.call(this, uindex, punamebuflength, pname)
  end
  def remove_namespace_at(this : IWbemPath*, uindex : UInt32) : HRESULT
    @lpVtbl.value.remove_namespace_at.call(this, uindex)
  end
  def remove_all_namespaces(this : IWbemPath*) : HRESULT
    @lpVtbl.value.remove_all_namespaces.call(this)
  end
  def get_scope_count(this : IWbemPath*, pucount : UInt32*) : HRESULT
    @lpVtbl.value.get_scope_count.call(this, pucount)
  end
  def set_scope(this : IWbemPath*, uindex : UInt32, pszclass : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_scope.call(this, uindex, pszclass)
  end
  def set_scope_from_text(this : IWbemPath*, uindex : UInt32, psztext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_scope_from_text.call(this, uindex, psztext)
  end
  def get_scope(this : IWbemPath*, uindex : UInt32, puclassnamebufsize : UInt32*, pszclass : Char*, pkeylist : IWbemPathKeyList*) : HRESULT
    @lpVtbl.value.get_scope.call(this, uindex, puclassnamebufsize, pszclass, pkeylist)
  end
  def get_scope_as_text(this : IWbemPath*, uindex : UInt32, putextbufsize : UInt32*, psztext : Char*) : HRESULT
    @lpVtbl.value.get_scope_as_text.call(this, uindex, putextbufsize, psztext)
  end
  def remove_scope(this : IWbemPath*, uindex : UInt32) : HRESULT
    @lpVtbl.value.remove_scope.call(this, uindex)
  end
  def remove_all_scopes(this : IWbemPath*) : HRESULT
    @lpVtbl.value.remove_all_scopes.call(this)
  end
  def set_class_name(this : IWbemPath*, name : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_class_name.call(this, name)
  end
  def get_class_name(this : IWbemPath*, pubufflength : UInt32*, pszname : Char*) : HRESULT
    @lpVtbl.value.get_class_name.call(this, pubufflength, pszname)
  end
  def get_key_list(this : IWbemPath*, pout : IWbemPathKeyList*) : HRESULT
    @lpVtbl.value.get_key_list.call(this, pout)
  end
  def create_class_part(this : IWbemPath*, lflags : Int32, name : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.create_class_part.call(this, lflags, name)
  end
  def delete_class_part(this : IWbemPath*, lflags : Int32) : HRESULT
    @lpVtbl.value.delete_class_part.call(this, lflags)
  end
  def is_relative(this : IWbemPath*, wszmachine : LibC::LPWSTR, wsznamespace : LibC::LPWSTR) : LibC::BOOL
    @lpVtbl.value.is_relative.call(this, wszmachine, wsznamespace)
  end
  def is_relative_or_child(this : IWbemPath*, wszmachine : LibC::LPWSTR, wsznamespace : LibC::LPWSTR, lflags : Int32) : LibC::BOOL
    @lpVtbl.value.is_relative_or_child.call(this, wszmachine, wsznamespace, lflags)
  end
  def is_local(this : IWbemPath*, wszmachine : LibC::LPWSTR) : LibC::BOOL
    @lpVtbl.value.is_local.call(this, wszmachine)
  end
  def is_same_class_name(this : IWbemPath*, wszclass : LibC::LPWSTR) : LibC::BOOL
    @lpVtbl.value.is_same_class_name.call(this, wszclass)
  end
end
struct LibWin32::IWbemQuery
  def query_interface(this : IWbemQuery*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemQuery*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemQuery*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def empty(this : IWbemQuery*) : HRESULT
    @lpVtbl.value.empty.call(this)
  end
  def set_language_features(this : IWbemQuery*, uflags : UInt32, uarraysize : UInt32, pufeatures : UInt32*) : HRESULT
    @lpVtbl.value.set_language_features.call(this, uflags, uarraysize, pufeatures)
  end
  def test_language_features(this : IWbemQuery*, uflags : UInt32, uarraysize : UInt32*, pufeatures : UInt32*) : HRESULT
    @lpVtbl.value.test_language_features.call(this, uflags, uarraysize, pufeatures)
  end
  def parse(this : IWbemQuery*, pszlang : LibC::LPWSTR, pszquery : LibC::LPWSTR, uflags : UInt32) : HRESULT
    @lpVtbl.value.parse.call(this, pszlang, pszquery, uflags)
  end
  def get_analysis(this : IWbemQuery*, uanalysistype : UInt32, uflags : UInt32, panalysis : Void**) : HRESULT
    @lpVtbl.value.get_analysis.call(this, uanalysistype, uflags, panalysis)
  end
  def free_memory(this : IWbemQuery*, pmem : Void*) : HRESULT
    @lpVtbl.value.free_memory.call(this, pmem)
  end
  def get_query_info(this : IWbemQuery*, uanalysistype : UInt32, uinfoid : UInt32, ubufsize : UInt32, pdestbuf : Void*) : HRESULT
    @lpVtbl.value.get_query_info.call(this, uanalysistype, uinfoid, ubufsize, pdestbuf)
  end
end
struct LibWin32::IWbemClassObject
  def query_interface(this : IWbemClassObject*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemClassObject*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemClassObject*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_qualifier_set(this : IWbemClassObject*, ppqualset : IWbemQualifierSet*) : HRESULT
    @lpVtbl.value.get_qualifier_set.call(this, ppqualset)
  end
  def get(this : IWbemClassObject*, wszname : LibC::LPWSTR, lflags : Int32, pval : VARIANT*, ptype : Int32*, plflavor : Int32*) : HRESULT
    @lpVtbl.value.get.call(this, wszname, lflags, pval, ptype, plflavor)
  end
  def put(this : IWbemClassObject*, wszname : LibC::LPWSTR, lflags : Int32, pval : VARIANT*, type : Int32) : HRESULT
    @lpVtbl.value.put.call(this, wszname, lflags, pval, type)
  end
  def delete(this : IWbemClassObject*, wszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.delete.call(this, wszname)
  end
  def get_names(this : IWbemClassObject*, wszqualifiername : LibC::LPWSTR, lflags : Int32, pqualifierval : VARIANT*, pnames : SAFEARRAY**) : HRESULT
    @lpVtbl.value.get_names.call(this, wszqualifiername, lflags, pqualifierval, pnames)
  end
  def begin_enumeration(this : IWbemClassObject*, lenumflags : Int32) : HRESULT
    @lpVtbl.value.begin_enumeration.call(this, lenumflags)
  end
  def next(this : IWbemClassObject*, lflags : Int32, strname : UInt8**, pval : VARIANT*, ptype : Int32*, plflavor : Int32*) : HRESULT
    @lpVtbl.value.next.call(this, lflags, strname, pval, ptype, plflavor)
  end
  def end_enumeration(this : IWbemClassObject*) : HRESULT
    @lpVtbl.value.end_enumeration.call(this)
  end
  def get_property_qualifier_set(this : IWbemClassObject*, wszproperty : LibC::LPWSTR, ppqualset : IWbemQualifierSet*) : HRESULT
    @lpVtbl.value.get_property_qualifier_set.call(this, wszproperty, ppqualset)
  end
  def clone(this : IWbemClassObject*, ppcopy : IWbemClassObject*) : HRESULT
    @lpVtbl.value.clone.call(this, ppcopy)
  end
  def get_object_text(this : IWbemClassObject*, lflags : Int32, pstrobjecttext : UInt8**) : HRESULT
    @lpVtbl.value.get_object_text.call(this, lflags, pstrobjecttext)
  end
  def spawn_derived_class(this : IWbemClassObject*, lflags : Int32, ppnewclass : IWbemClassObject*) : HRESULT
    @lpVtbl.value.spawn_derived_class.call(this, lflags, ppnewclass)
  end
  def spawn_instance(this : IWbemClassObject*, lflags : Int32, ppnewinstance : IWbemClassObject*) : HRESULT
    @lpVtbl.value.spawn_instance.call(this, lflags, ppnewinstance)
  end
  def compare_to(this : IWbemClassObject*, lflags : Int32, pcompareto : IWbemClassObject) : HRESULT
    @lpVtbl.value.compare_to.call(this, lflags, pcompareto)
  end
  def get_property_origin(this : IWbemClassObject*, wszname : LibC::LPWSTR, pstrclassname : UInt8**) : HRESULT
    @lpVtbl.value.get_property_origin.call(this, wszname, pstrclassname)
  end
  def inherits_from(this : IWbemClassObject*, strancestor : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.inherits_from.call(this, strancestor)
  end
  def get_method(this : IWbemClassObject*, wszname : LibC::LPWSTR, lflags : Int32, ppinsignature : IWbemClassObject*, ppoutsignature : IWbemClassObject*) : HRESULT
    @lpVtbl.value.get_method.call(this, wszname, lflags, ppinsignature, ppoutsignature)
  end
  def put_method(this : IWbemClassObject*, wszname : LibC::LPWSTR, lflags : Int32, pinsignature : IWbemClassObject, poutsignature : IWbemClassObject) : HRESULT
    @lpVtbl.value.put_method.call(this, wszname, lflags, pinsignature, poutsignature)
  end
  def delete_method(this : IWbemClassObject*, wszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.delete_method.call(this, wszname)
  end
  def begin_method_enumeration(this : IWbemClassObject*, lenumflags : Int32) : HRESULT
    @lpVtbl.value.begin_method_enumeration.call(this, lenumflags)
  end
  def next_method(this : IWbemClassObject*, lflags : Int32, pstrname : UInt8**, ppinsignature : IWbemClassObject*, ppoutsignature : IWbemClassObject*) : HRESULT
    @lpVtbl.value.next_method.call(this, lflags, pstrname, ppinsignature, ppoutsignature)
  end
  def end_method_enumeration(this : IWbemClassObject*) : HRESULT
    @lpVtbl.value.end_method_enumeration.call(this)
  end
  def get_method_qualifier_set(this : IWbemClassObject*, wszmethod : LibC::LPWSTR, ppqualset : IWbemQualifierSet*) : HRESULT
    @lpVtbl.value.get_method_qualifier_set.call(this, wszmethod, ppqualset)
  end
  def get_method_origin(this : IWbemClassObject*, wszmethodname : LibC::LPWSTR, pstrclassname : UInt8**) : HRESULT
    @lpVtbl.value.get_method_origin.call(this, wszmethodname, pstrclassname)
  end
end
struct LibWin32::IWbemObjectAccess
  def query_interface(this : IWbemObjectAccess*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemObjectAccess*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemObjectAccess*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_qualifier_set(this : IWbemObjectAccess*, ppqualset : IWbemQualifierSet*) : HRESULT
    @lpVtbl.value.get_qualifier_set.call(this, ppqualset)
  end
  def get(this : IWbemObjectAccess*, wszname : LibC::LPWSTR, lflags : Int32, pval : VARIANT*, ptype : Int32*, plflavor : Int32*) : HRESULT
    @lpVtbl.value.get.call(this, wszname, lflags, pval, ptype, plflavor)
  end
  def put(this : IWbemObjectAccess*, wszname : LibC::LPWSTR, lflags : Int32, pval : VARIANT*, type : Int32) : HRESULT
    @lpVtbl.value.put.call(this, wszname, lflags, pval, type)
  end
  def delete(this : IWbemObjectAccess*, wszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.delete.call(this, wszname)
  end
  def get_names(this : IWbemObjectAccess*, wszqualifiername : LibC::LPWSTR, lflags : Int32, pqualifierval : VARIANT*, pnames : SAFEARRAY**) : HRESULT
    @lpVtbl.value.get_names.call(this, wszqualifiername, lflags, pqualifierval, pnames)
  end
  def begin_enumeration(this : IWbemObjectAccess*, lenumflags : Int32) : HRESULT
    @lpVtbl.value.begin_enumeration.call(this, lenumflags)
  end
  def next(this : IWbemObjectAccess*, lflags : Int32, strname : UInt8**, pval : VARIANT*, ptype : Int32*, plflavor : Int32*) : HRESULT
    @lpVtbl.value.next.call(this, lflags, strname, pval, ptype, plflavor)
  end
  def end_enumeration(this : IWbemObjectAccess*) : HRESULT
    @lpVtbl.value.end_enumeration.call(this)
  end
  def get_property_qualifier_set(this : IWbemObjectAccess*, wszproperty : LibC::LPWSTR, ppqualset : IWbemQualifierSet*) : HRESULT
    @lpVtbl.value.get_property_qualifier_set.call(this, wszproperty, ppqualset)
  end
  def clone(this : IWbemObjectAccess*, ppcopy : IWbemClassObject*) : HRESULT
    @lpVtbl.value.clone.call(this, ppcopy)
  end
  def get_object_text(this : IWbemObjectAccess*, lflags : Int32, pstrobjecttext : UInt8**) : HRESULT
    @lpVtbl.value.get_object_text.call(this, lflags, pstrobjecttext)
  end
  def spawn_derived_class(this : IWbemObjectAccess*, lflags : Int32, ppnewclass : IWbemClassObject*) : HRESULT
    @lpVtbl.value.spawn_derived_class.call(this, lflags, ppnewclass)
  end
  def spawn_instance(this : IWbemObjectAccess*, lflags : Int32, ppnewinstance : IWbemClassObject*) : HRESULT
    @lpVtbl.value.spawn_instance.call(this, lflags, ppnewinstance)
  end
  def compare_to(this : IWbemObjectAccess*, lflags : Int32, pcompareto : IWbemClassObject) : HRESULT
    @lpVtbl.value.compare_to.call(this, lflags, pcompareto)
  end
  def get_property_origin(this : IWbemObjectAccess*, wszname : LibC::LPWSTR, pstrclassname : UInt8**) : HRESULT
    @lpVtbl.value.get_property_origin.call(this, wszname, pstrclassname)
  end
  def inherits_from(this : IWbemObjectAccess*, strancestor : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.inherits_from.call(this, strancestor)
  end
  def get_method(this : IWbemObjectAccess*, wszname : LibC::LPWSTR, lflags : Int32, ppinsignature : IWbemClassObject*, ppoutsignature : IWbemClassObject*) : HRESULT
    @lpVtbl.value.get_method.call(this, wszname, lflags, ppinsignature, ppoutsignature)
  end
  def put_method(this : IWbemObjectAccess*, wszname : LibC::LPWSTR, lflags : Int32, pinsignature : IWbemClassObject, poutsignature : IWbemClassObject) : HRESULT
    @lpVtbl.value.put_method.call(this, wszname, lflags, pinsignature, poutsignature)
  end
  def delete_method(this : IWbemObjectAccess*, wszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.delete_method.call(this, wszname)
  end
  def begin_method_enumeration(this : IWbemObjectAccess*, lenumflags : Int32) : HRESULT
    @lpVtbl.value.begin_method_enumeration.call(this, lenumflags)
  end
  def next_method(this : IWbemObjectAccess*, lflags : Int32, pstrname : UInt8**, ppinsignature : IWbemClassObject*, ppoutsignature : IWbemClassObject*) : HRESULT
    @lpVtbl.value.next_method.call(this, lflags, pstrname, ppinsignature, ppoutsignature)
  end
  def end_method_enumeration(this : IWbemObjectAccess*) : HRESULT
    @lpVtbl.value.end_method_enumeration.call(this)
  end
  def get_method_qualifier_set(this : IWbemObjectAccess*, wszmethod : LibC::LPWSTR, ppqualset : IWbemQualifierSet*) : HRESULT
    @lpVtbl.value.get_method_qualifier_set.call(this, wszmethod, ppqualset)
  end
  def get_method_origin(this : IWbemObjectAccess*, wszmethodname : LibC::LPWSTR, pstrclassname : UInt8**) : HRESULT
    @lpVtbl.value.get_method_origin.call(this, wszmethodname, pstrclassname)
  end
  def get_property_handle(this : IWbemObjectAccess*, wszpropertyname : LibC::LPWSTR, ptype : Int32*, plhandle : Int32*) : HRESULT
    @lpVtbl.value.get_property_handle.call(this, wszpropertyname, ptype, plhandle)
  end
  def write_property_value(this : IWbemObjectAccess*, lhandle : Int32, lnumbytes : Int32, adata : UInt8*) : HRESULT
    @lpVtbl.value.write_property_value.call(this, lhandle, lnumbytes, adata)
  end
  def read_property_value(this : IWbemObjectAccess*, lhandle : Int32, lbuffersize : Int32, plnumbytes : Int32*, adata : UInt8*) : HRESULT
    @lpVtbl.value.read_property_value.call(this, lhandle, lbuffersize, plnumbytes, adata)
  end
  def read_dword(this : IWbemObjectAccess*, lhandle : Int32, pdw : UInt32*) : HRESULT
    @lpVtbl.value.read_dword.call(this, lhandle, pdw)
  end
  def write_dword(this : IWbemObjectAccess*, lhandle : Int32, dw : UInt32) : HRESULT
    @lpVtbl.value.write_dword.call(this, lhandle, dw)
  end
  def read_qword(this : IWbemObjectAccess*, lhandle : Int32, pqw : UInt64*) : HRESULT
    @lpVtbl.value.read_qword.call(this, lhandle, pqw)
  end
  def write_qword(this : IWbemObjectAccess*, lhandle : Int32, pw : UInt64) : HRESULT
    @lpVtbl.value.write_qword.call(this, lhandle, pw)
  end
  def get_property_info_by_handle(this : IWbemObjectAccess*, lhandle : Int32, pstrname : UInt8**, ptype : Int32*) : HRESULT
    @lpVtbl.value.get_property_info_by_handle.call(this, lhandle, pstrname, ptype)
  end
  def lock(this : IWbemObjectAccess*, lflags : Int32) : HRESULT
    @lpVtbl.value.lock.call(this, lflags)
  end
  def unlock(this : IWbemObjectAccess*, lflags : Int32) : HRESULT
    @lpVtbl.value.unlock.call(this, lflags)
  end
end
struct LibWin32::IWbemQualifierSet
  def query_interface(this : IWbemQualifierSet*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemQualifierSet*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemQualifierSet*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get(this : IWbemQualifierSet*, wszname : LibC::LPWSTR, lflags : Int32, pval : VARIANT*, plflavor : Int32*) : HRESULT
    @lpVtbl.value.get.call(this, wszname, lflags, pval, plflavor)
  end
  def put(this : IWbemQualifierSet*, wszname : LibC::LPWSTR, pval : VARIANT*, lflavor : Int32) : HRESULT
    @lpVtbl.value.put.call(this, wszname, pval, lflavor)
  end
  def delete(this : IWbemQualifierSet*, wszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.delete.call(this, wszname)
  end
  def get_names(this : IWbemQualifierSet*, lflags : Int32, pnames : SAFEARRAY**) : HRESULT
    @lpVtbl.value.get_names.call(this, lflags, pnames)
  end
  def begin_enumeration(this : IWbemQualifierSet*, lflags : Int32) : HRESULT
    @lpVtbl.value.begin_enumeration.call(this, lflags)
  end
  def next(this : IWbemQualifierSet*, lflags : Int32, pstrname : UInt8**, pval : VARIANT*, plflavor : Int32*) : HRESULT
    @lpVtbl.value.next.call(this, lflags, pstrname, pval, plflavor)
  end
  def end_enumeration(this : IWbemQualifierSet*) : HRESULT
    @lpVtbl.value.end_enumeration.call(this)
  end
end
struct LibWin32::IWbemServices
  def query_interface(this : IWbemServices*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemServices*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemServices*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def open_namespace(this : IWbemServices*, strnamespace : UInt8*, lflags : Int32, pctx : IWbemContext, ppworkingnamespace : IWbemServices*, ppresult : IWbemCallResult*) : HRESULT
    @lpVtbl.value.open_namespace.call(this, strnamespace, lflags, pctx, ppworkingnamespace, ppresult)
  end
  def cancel_async_call(this : IWbemServices*, psink : IWbemObjectSink) : HRESULT
    @lpVtbl.value.cancel_async_call.call(this, psink)
  end
  def query_object_sink(this : IWbemServices*, lflags : Int32, ppresponsehandler : IWbemObjectSink*) : HRESULT
    @lpVtbl.value.query_object_sink.call(this, lflags, ppresponsehandler)
  end
  def get_object(this : IWbemServices*, strobjectpath : UInt8*, lflags : Int32, pctx : IWbemContext, ppobject : IWbemClassObject*, ppcallresult : IWbemCallResult*) : HRESULT
    @lpVtbl.value.get_object.call(this, strobjectpath, lflags, pctx, ppobject, ppcallresult)
  end
  def get_object_async(this : IWbemServices*, strobjectpath : UInt8*, lflags : Int32, pctx : IWbemContext, presponsehandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.get_object_async.call(this, strobjectpath, lflags, pctx, presponsehandler)
  end
  def put_class(this : IWbemServices*, pobject : IWbemClassObject, lflags : Int32, pctx : IWbemContext, ppcallresult : IWbemCallResult*) : HRESULT
    @lpVtbl.value.put_class.call(this, pobject, lflags, pctx, ppcallresult)
  end
  def put_class_async(this : IWbemServices*, pobject : IWbemClassObject, lflags : Int32, pctx : IWbemContext, presponsehandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.put_class_async.call(this, pobject, lflags, pctx, presponsehandler)
  end
  def delete_class(this : IWbemServices*, strclass : UInt8*, lflags : Int32, pctx : IWbemContext, ppcallresult : IWbemCallResult*) : HRESULT
    @lpVtbl.value.delete_class.call(this, strclass, lflags, pctx, ppcallresult)
  end
  def delete_class_async(this : IWbemServices*, strclass : UInt8*, lflags : Int32, pctx : IWbemContext, presponsehandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.delete_class_async.call(this, strclass, lflags, pctx, presponsehandler)
  end
  def create_class_enum(this : IWbemServices*, strsuperclass : UInt8*, lflags : Int32, pctx : IWbemContext, ppenum : IEnumWbemClassObject*) : HRESULT
    @lpVtbl.value.create_class_enum.call(this, strsuperclass, lflags, pctx, ppenum)
  end
  def create_class_enum_async(this : IWbemServices*, strsuperclass : UInt8*, lflags : Int32, pctx : IWbemContext, presponsehandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.create_class_enum_async.call(this, strsuperclass, lflags, pctx, presponsehandler)
  end
  def put_instance(this : IWbemServices*, pinst : IWbemClassObject, lflags : Int32, pctx : IWbemContext, ppcallresult : IWbemCallResult*) : HRESULT
    @lpVtbl.value.put_instance.call(this, pinst, lflags, pctx, ppcallresult)
  end
  def put_instance_async(this : IWbemServices*, pinst : IWbemClassObject, lflags : Int32, pctx : IWbemContext, presponsehandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.put_instance_async.call(this, pinst, lflags, pctx, presponsehandler)
  end
  def delete_instance(this : IWbemServices*, strobjectpath : UInt8*, lflags : Int32, pctx : IWbemContext, ppcallresult : IWbemCallResult*) : HRESULT
    @lpVtbl.value.delete_instance.call(this, strobjectpath, lflags, pctx, ppcallresult)
  end
  def delete_instance_async(this : IWbemServices*, strobjectpath : UInt8*, lflags : Int32, pctx : IWbemContext, presponsehandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.delete_instance_async.call(this, strobjectpath, lflags, pctx, presponsehandler)
  end
  def create_instance_enum(this : IWbemServices*, strfilter : UInt8*, lflags : Int32, pctx : IWbemContext, ppenum : IEnumWbemClassObject*) : HRESULT
    @lpVtbl.value.create_instance_enum.call(this, strfilter, lflags, pctx, ppenum)
  end
  def create_instance_enum_async(this : IWbemServices*, strfilter : UInt8*, lflags : Int32, pctx : IWbemContext, presponsehandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.create_instance_enum_async.call(this, strfilter, lflags, pctx, presponsehandler)
  end
  def exec_query(this : IWbemServices*, strquerylanguage : UInt8*, strquery : UInt8*, lflags : Int32, pctx : IWbemContext, ppenum : IEnumWbemClassObject*) : HRESULT
    @lpVtbl.value.exec_query.call(this, strquerylanguage, strquery, lflags, pctx, ppenum)
  end
  def exec_query_async(this : IWbemServices*, strquerylanguage : UInt8*, strquery : UInt8*, lflags : Int32, pctx : IWbemContext, presponsehandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.exec_query_async.call(this, strquerylanguage, strquery, lflags, pctx, presponsehandler)
  end
  def exec_notification_query(this : IWbemServices*, strquerylanguage : UInt8*, strquery : UInt8*, lflags : Int32, pctx : IWbemContext, ppenum : IEnumWbemClassObject*) : HRESULT
    @lpVtbl.value.exec_notification_query.call(this, strquerylanguage, strquery, lflags, pctx, ppenum)
  end
  def exec_notification_query_async(this : IWbemServices*, strquerylanguage : UInt8*, strquery : UInt8*, lflags : Int32, pctx : IWbemContext, presponsehandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.exec_notification_query_async.call(this, strquerylanguage, strquery, lflags, pctx, presponsehandler)
  end
  def exec_method(this : IWbemServices*, strobjectpath : UInt8*, strmethodname : UInt8*, lflags : Int32, pctx : IWbemContext, pinparams : IWbemClassObject, ppoutparams : IWbemClassObject*, ppcallresult : IWbemCallResult*) : HRESULT
    @lpVtbl.value.exec_method.call(this, strobjectpath, strmethodname, lflags, pctx, pinparams, ppoutparams, ppcallresult)
  end
  def exec_method_async(this : IWbemServices*, strobjectpath : UInt8*, strmethodname : UInt8*, lflags : Int32, pctx : IWbemContext, pinparams : IWbemClassObject, presponsehandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.exec_method_async.call(this, strobjectpath, strmethodname, lflags, pctx, pinparams, presponsehandler)
  end
end
struct LibWin32::IWbemLocator
  def query_interface(this : IWbemLocator*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemLocator*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemLocator*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def connect_server(this : IWbemLocator*, strnetworkresource : UInt8*, struser : UInt8*, strpassword : UInt8*, strlocale : UInt8*, lsecurityflags : Int32, strauthority : UInt8*, pctx : IWbemContext, ppnamespace : IWbemServices*) : HRESULT
    @lpVtbl.value.connect_server.call(this, strnetworkresource, struser, strpassword, strlocale, lsecurityflags, strauthority, pctx, ppnamespace)
  end
end
struct LibWin32::IWbemObjectSink
  def query_interface(this : IWbemObjectSink*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemObjectSink*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemObjectSink*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def indicate(this : IWbemObjectSink*, lobjectcount : Int32, apobjarray : IWbemClassObject*) : HRESULT
    @lpVtbl.value.indicate.call(this, lobjectcount, apobjarray)
  end
  def set_status(this : IWbemObjectSink*, lflags : Int32, hresult : HRESULT, strparam : UInt8*, pobjparam : IWbemClassObject) : HRESULT
    @lpVtbl.value.set_status.call(this, lflags, hresult, strparam, pobjparam)
  end
end
struct LibWin32::IEnumWbemClassObject
  def query_interface(this : IEnumWbemClassObject*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IEnumWbemClassObject*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IEnumWbemClassObject*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def reset(this : IEnumWbemClassObject*) : HRESULT
    @lpVtbl.value.reset.call(this)
  end
  def next(this : IEnumWbemClassObject*, ltimeout : Int32, ucount : UInt32, apobjects : IWbemClassObject*, pureturned : UInt32*) : HRESULT
    @lpVtbl.value.next.call(this, ltimeout, ucount, apobjects, pureturned)
  end
  def next_async(this : IEnumWbemClassObject*, ucount : UInt32, psink : IWbemObjectSink) : HRESULT
    @lpVtbl.value.next_async.call(this, ucount, psink)
  end
  def clone(this : IEnumWbemClassObject*, ppenum : IEnumWbemClassObject*) : HRESULT
    @lpVtbl.value.clone.call(this, ppenum)
  end
  def skip(this : IEnumWbemClassObject*, ltimeout : Int32, ncount : UInt32) : HRESULT
    @lpVtbl.value.skip.call(this, ltimeout, ncount)
  end
end
struct LibWin32::IWbemCallResult
  def query_interface(this : IWbemCallResult*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemCallResult*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemCallResult*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_result_object(this : IWbemCallResult*, ltimeout : Int32, ppresultobject : IWbemClassObject*) : HRESULT
    @lpVtbl.value.get_result_object.call(this, ltimeout, ppresultobject)
  end
  def get_result_string(this : IWbemCallResult*, ltimeout : Int32, pstrresultstring : UInt8**) : HRESULT
    @lpVtbl.value.get_result_string.call(this, ltimeout, pstrresultstring)
  end
  def get_result_services(this : IWbemCallResult*, ltimeout : Int32, ppservices : IWbemServices*) : HRESULT
    @lpVtbl.value.get_result_services.call(this, ltimeout, ppservices)
  end
  def get_call_status(this : IWbemCallResult*, ltimeout : Int32, plstatus : Int32*) : HRESULT
    @lpVtbl.value.get_call_status.call(this, ltimeout, plstatus)
  end
end
struct LibWin32::IWbemContext
  def query_interface(this : IWbemContext*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemContext*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemContext*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def clone(this : IWbemContext*, ppnewcopy : IWbemContext*) : HRESULT
    @lpVtbl.value.clone.call(this, ppnewcopy)
  end
  def get_names(this : IWbemContext*, lflags : Int32, pnames : SAFEARRAY**) : HRESULT
    @lpVtbl.value.get_names.call(this, lflags, pnames)
  end
  def begin_enumeration(this : IWbemContext*, lflags : Int32) : HRESULT
    @lpVtbl.value.begin_enumeration.call(this, lflags)
  end
  def next(this : IWbemContext*, lflags : Int32, pstrname : UInt8**, pvalue : VARIANT*) : HRESULT
    @lpVtbl.value.next.call(this, lflags, pstrname, pvalue)
  end
  def end_enumeration(this : IWbemContext*) : HRESULT
    @lpVtbl.value.end_enumeration.call(this)
  end
  def set_value(this : IWbemContext*, wszname : LibC::LPWSTR, lflags : Int32, pvalue : VARIANT*) : HRESULT
    @lpVtbl.value.set_value.call(this, wszname, lflags, pvalue)
  end
  def get_value(this : IWbemContext*, wszname : LibC::LPWSTR, lflags : Int32, pvalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_value.call(this, wszname, lflags, pvalue)
  end
  def delete_value(this : IWbemContext*, wszname : LibC::LPWSTR, lflags : Int32) : HRESULT
    @lpVtbl.value.delete_value.call(this, wszname, lflags)
  end
  def delete_all(this : IWbemContext*) : HRESULT
    @lpVtbl.value.delete_all.call(this)
  end
end
struct LibWin32::IUnsecuredApartment
  def query_interface(this : IUnsecuredApartment*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IUnsecuredApartment*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IUnsecuredApartment*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def create_object_stub(this : IUnsecuredApartment*, pobject : IUnknown, ppstub : IUnknown*) : HRESULT
    @lpVtbl.value.create_object_stub.call(this, pobject, ppstub)
  end
end
struct LibWin32::IWbemUnsecuredApartment
  def query_interface(this : IWbemUnsecuredApartment*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemUnsecuredApartment*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemUnsecuredApartment*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def create_object_stub(this : IWbemUnsecuredApartment*, pobject : IUnknown, ppstub : IUnknown*) : HRESULT
    @lpVtbl.value.create_object_stub.call(this, pobject, ppstub)
  end
  def create_sink_stub(this : IWbemUnsecuredApartment*, psink : IWbemObjectSink, dwflags : UInt32, wszreserved : LibC::LPWSTR, ppstub : IWbemObjectSink*) : HRESULT
    @lpVtbl.value.create_sink_stub.call(this, psink, dwflags, wszreserved, ppstub)
  end
end
struct LibWin32::IWbemStatusCodeText
  def query_interface(this : IWbemStatusCodeText*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemStatusCodeText*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemStatusCodeText*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_error_code_text(this : IWbemStatusCodeText*, hres : HRESULT, localeid : UInt32, lflags : Int32, messagetext : UInt8**) : HRESULT
    @lpVtbl.value.get_error_code_text.call(this, hres, localeid, lflags, messagetext)
  end
  def get_facility_code_text(this : IWbemStatusCodeText*, hres : HRESULT, localeid : UInt32, lflags : Int32, messagetext : UInt8**) : HRESULT
    @lpVtbl.value.get_facility_code_text.call(this, hres, localeid, lflags, messagetext)
  end
end
struct LibWin32::IWbemBackupRestore
  def query_interface(this : IWbemBackupRestore*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemBackupRestore*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemBackupRestore*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def backup(this : IWbemBackupRestore*, strbackuptofile : LibC::LPWSTR, lflags : Int32) : HRESULT
    @lpVtbl.value.backup.call(this, strbackuptofile, lflags)
  end
  def restore(this : IWbemBackupRestore*, strrestorefromfile : LibC::LPWSTR, lflags : Int32) : HRESULT
    @lpVtbl.value.restore.call(this, strrestorefromfile, lflags)
  end
end
struct LibWin32::IWbemBackupRestoreEx
  def query_interface(this : IWbemBackupRestoreEx*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemBackupRestoreEx*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemBackupRestoreEx*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def backup(this : IWbemBackupRestoreEx*, strbackuptofile : LibC::LPWSTR, lflags : Int32) : HRESULT
    @lpVtbl.value.backup.call(this, strbackuptofile, lflags)
  end
  def restore(this : IWbemBackupRestoreEx*, strrestorefromfile : LibC::LPWSTR, lflags : Int32) : HRESULT
    @lpVtbl.value.restore.call(this, strrestorefromfile, lflags)
  end
  def pause(this : IWbemBackupRestoreEx*) : HRESULT
    @lpVtbl.value.pause.call(this)
  end
  def resume(this : IWbemBackupRestoreEx*) : HRESULT
    @lpVtbl.value.resume.call(this)
  end
end
struct LibWin32::IWbemRefresher
  def query_interface(this : IWbemRefresher*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemRefresher*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemRefresher*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def refresh(this : IWbemRefresher*, lflags : Int32) : HRESULT
    @lpVtbl.value.refresh.call(this, lflags)
  end
end
struct LibWin32::IWbemHiPerfEnum
  def query_interface(this : IWbemHiPerfEnum*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemHiPerfEnum*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemHiPerfEnum*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def add_objects(this : IWbemHiPerfEnum*, lflags : Int32, unumobjects : UInt32, apids : Int32*, apobj : IWbemObjectAccess*) : HRESULT
    @lpVtbl.value.add_objects.call(this, lflags, unumobjects, apids, apobj)
  end
  def remove_objects(this : IWbemHiPerfEnum*, lflags : Int32, unumobjects : UInt32, apids : Int32*) : HRESULT
    @lpVtbl.value.remove_objects.call(this, lflags, unumobjects, apids)
  end
  def get_objects(this : IWbemHiPerfEnum*, lflags : Int32, unumobjects : UInt32, apobj : IWbemObjectAccess*, pureturned : UInt32*) : HRESULT
    @lpVtbl.value.get_objects.call(this, lflags, unumobjects, apobj, pureturned)
  end
  def remove_all(this : IWbemHiPerfEnum*, lflags : Int32) : HRESULT
    @lpVtbl.value.remove_all.call(this, lflags)
  end
end
struct LibWin32::IWbemConfigureRefresher
  def query_interface(this : IWbemConfigureRefresher*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemConfigureRefresher*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemConfigureRefresher*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def add_object_by_path(this : IWbemConfigureRefresher*, pnamespace : IWbemServices, wszpath : LibC::LPWSTR, lflags : Int32, pcontext : IWbemContext, pprefreshable : IWbemClassObject*, plid : Int32*) : HRESULT
    @lpVtbl.value.add_object_by_path.call(this, pnamespace, wszpath, lflags, pcontext, pprefreshable, plid)
  end
  def add_object_by_template(this : IWbemConfigureRefresher*, pnamespace : IWbemServices, ptemplate : IWbemClassObject, lflags : Int32, pcontext : IWbemContext, pprefreshable : IWbemClassObject*, plid : Int32*) : HRESULT
    @lpVtbl.value.add_object_by_template.call(this, pnamespace, ptemplate, lflags, pcontext, pprefreshable, plid)
  end
  def add_refresher(this : IWbemConfigureRefresher*, prefresher : IWbemRefresher, lflags : Int32, plid : Int32*) : HRESULT
    @lpVtbl.value.add_refresher.call(this, prefresher, lflags, plid)
  end
  def remove(this : IWbemConfigureRefresher*, lid : Int32, lflags : Int32) : HRESULT
    @lpVtbl.value.remove.call(this, lid, lflags)
  end
  def add_enum(this : IWbemConfigureRefresher*, pnamespace : IWbemServices, wszclassname : LibC::LPWSTR, lflags : Int32, pcontext : IWbemContext, ppenum : IWbemHiPerfEnum*, plid : Int32*) : HRESULT
    @lpVtbl.value.add_enum.call(this, pnamespace, wszclassname, lflags, pcontext, ppenum, plid)
  end
end
struct LibWin32::IWbemObjectSinkEx
  def query_interface(this : IWbemObjectSinkEx*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemObjectSinkEx*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemObjectSinkEx*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def indicate(this : IWbemObjectSinkEx*, lobjectcount : Int32, apobjarray : IWbemClassObject*) : HRESULT
    @lpVtbl.value.indicate.call(this, lobjectcount, apobjarray)
  end
  def set_status(this : IWbemObjectSinkEx*, lflags : Int32, hresult : HRESULT, strparam : UInt8*, pobjparam : IWbemClassObject) : HRESULT
    @lpVtbl.value.set_status.call(this, lflags, hresult, strparam, pobjparam)
  end
  def write_message(this : IWbemObjectSinkEx*, uchannel : UInt32, strmessage : UInt8*) : HRESULT
    @lpVtbl.value.write_message.call(this, uchannel, strmessage)
  end
  def write_error(this : IWbemObjectSinkEx*, pobjerror : IWbemClassObject, pureturned : UInt8*) : HRESULT
    @lpVtbl.value.write_error.call(this, pobjerror, pureturned)
  end
  def prompt_user(this : IWbemObjectSinkEx*, strmessage : UInt8*, uprompttype : UInt8, pureturned : UInt8*) : HRESULT
    @lpVtbl.value.prompt_user.call(this, strmessage, uprompttype, pureturned)
  end
  def write_progress(this : IWbemObjectSinkEx*, stractivity : UInt8*, strcurrentoperation : UInt8*, strstatusdescription : UInt8*, upercentcomplete : UInt32, usecondsremaining : UInt32) : HRESULT
    @lpVtbl.value.write_progress.call(this, stractivity, strcurrentoperation, strstatusdescription, upercentcomplete, usecondsremaining)
  end
  def write_stream_parameter(this : IWbemObjectSinkEx*, strname : UInt8*, vtvalue : VARIANT*, ultype : UInt32, ulflags : UInt32) : HRESULT
    @lpVtbl.value.write_stream_parameter.call(this, strname, vtvalue, ultype, ulflags)
  end
end
struct LibWin32::IWbemShutdown
  def query_interface(this : IWbemShutdown*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemShutdown*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemShutdown*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def shutdown(this : IWbemShutdown*, ureason : Int32, umaxmilliseconds : UInt32, pctx : IWbemContext) : HRESULT
    @lpVtbl.value.shutdown.call(this, ureason, umaxmilliseconds, pctx)
  end
end
struct LibWin32::IWbemObjectTextSrc
  def query_interface(this : IWbemObjectTextSrc*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemObjectTextSrc*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemObjectTextSrc*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_text(this : IWbemObjectTextSrc*, lflags : Int32, pobj : IWbemClassObject, uobjtextformat : UInt32, pctx : IWbemContext, strtext : UInt8**) : HRESULT
    @lpVtbl.value.get_text.call(this, lflags, pobj, uobjtextformat, pctx, strtext)
  end
  def create_from_text(this : IWbemObjectTextSrc*, lflags : Int32, strtext : UInt8*, uobjtextformat : UInt32, pctx : IWbemContext, pnewobj : IWbemClassObject*) : HRESULT
    @lpVtbl.value.create_from_text.call(this, lflags, strtext, uobjtextformat, pctx, pnewobj)
  end
end
struct LibWin32::IMofCompiler
  def query_interface(this : IMofCompiler*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IMofCompiler*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IMofCompiler*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def compile_file(this : IMofCompiler*, filename : LibC::LPWSTR, serverandnamespace : LibC::LPWSTR, user : LibC::LPWSTR, authority : LibC::LPWSTR, password : LibC::LPWSTR, loptionflags : Int32, lclassflags : Int32, linstanceflags : Int32, pinfo : WBEM_COMPILE_STATUS_INFO*) : HRESULT
    @lpVtbl.value.compile_file.call(this, filename, serverandnamespace, user, authority, password, loptionflags, lclassflags, linstanceflags, pinfo)
  end
  def compile_buffer(this : IMofCompiler*, buffsize : Int32, pbuffer : UInt8*, serverandnamespace : LibC::LPWSTR, user : LibC::LPWSTR, authority : LibC::LPWSTR, password : LibC::LPWSTR, loptionflags : Int32, lclassflags : Int32, linstanceflags : Int32, pinfo : WBEM_COMPILE_STATUS_INFO*) : HRESULT
    @lpVtbl.value.compile_buffer.call(this, buffsize, pbuffer, serverandnamespace, user, authority, password, loptionflags, lclassflags, linstanceflags, pinfo)
  end
  def create_bmof(this : IMofCompiler*, textfilename : LibC::LPWSTR, bmoffilename : LibC::LPWSTR, serverandnamespace : LibC::LPWSTR, loptionflags : Int32, lclassflags : Int32, linstanceflags : Int32, pinfo : WBEM_COMPILE_STATUS_INFO*) : HRESULT
    @lpVtbl.value.create_bmof.call(this, textfilename, bmoffilename, serverandnamespace, loptionflags, lclassflags, linstanceflags, pinfo)
  end
end
struct LibWin32::IWbemPropertyProvider
  def query_interface(this : IWbemPropertyProvider*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemPropertyProvider*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemPropertyProvider*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_property(this : IWbemPropertyProvider*, lflags : Int32, strlocale : UInt8*, strclassmapping : UInt8*, strinstmapping : UInt8*, strpropmapping : UInt8*, pvvalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_property.call(this, lflags, strlocale, strclassmapping, strinstmapping, strpropmapping, pvvalue)
  end
  def put_property(this : IWbemPropertyProvider*, lflags : Int32, strlocale : UInt8*, strclassmapping : UInt8*, strinstmapping : UInt8*, strpropmapping : UInt8*, pvvalue : VARIANT*) : HRESULT
    @lpVtbl.value.put_property.call(this, lflags, strlocale, strclassmapping, strinstmapping, strpropmapping, pvvalue)
  end
end
struct LibWin32::IWbemUnboundObjectSink
  def query_interface(this : IWbemUnboundObjectSink*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemUnboundObjectSink*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemUnboundObjectSink*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def indicate_to_consumer(this : IWbemUnboundObjectSink*, plogicalconsumer : IWbemClassObject, lnumobjects : Int32, apobjects : IWbemClassObject*) : HRESULT
    @lpVtbl.value.indicate_to_consumer.call(this, plogicalconsumer, lnumobjects, apobjects)
  end
end
struct LibWin32::IWbemEventProvider
  def query_interface(this : IWbemEventProvider*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemEventProvider*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemEventProvider*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def provide_events(this : IWbemEventProvider*, psink : IWbemObjectSink, lflags : Int32) : HRESULT
    @lpVtbl.value.provide_events.call(this, psink, lflags)
  end
end
struct LibWin32::IWbemEventProviderQuerySink
  def query_interface(this : IWbemEventProviderQuerySink*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemEventProviderQuerySink*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemEventProviderQuerySink*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def new_query(this : IWbemEventProviderQuerySink*, dwid : UInt32, wszquerylanguage : UInt16*, wszquery : UInt16*) : HRESULT
    @lpVtbl.value.new_query.call(this, dwid, wszquerylanguage, wszquery)
  end
  def cancel_query(this : IWbemEventProviderQuerySink*, dwid : UInt32) : HRESULT
    @lpVtbl.value.cancel_query.call(this, dwid)
  end
end
struct LibWin32::IWbemEventProviderSecurity
  def query_interface(this : IWbemEventProviderSecurity*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemEventProviderSecurity*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemEventProviderSecurity*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def access_check(this : IWbemEventProviderSecurity*, wszquerylanguage : UInt16*, wszquery : UInt16*, lsidlength : Int32, psid : UInt8*) : HRESULT
    @lpVtbl.value.access_check.call(this, wszquerylanguage, wszquery, lsidlength, psid)
  end
end
struct LibWin32::IWbemEventConsumerProvider
  def query_interface(this : IWbemEventConsumerProvider*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemEventConsumerProvider*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemEventConsumerProvider*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def find_consumer(this : IWbemEventConsumerProvider*, plogicalconsumer : IWbemClassObject, ppconsumer : IWbemUnboundObjectSink*) : HRESULT
    @lpVtbl.value.find_consumer.call(this, plogicalconsumer, ppconsumer)
  end
end
struct LibWin32::IWbemProviderInitSink
  def query_interface(this : IWbemProviderInitSink*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemProviderInitSink*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemProviderInitSink*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def set_status(this : IWbemProviderInitSink*, lstatus : Int32, lflags : Int32) : HRESULT
    @lpVtbl.value.set_status.call(this, lstatus, lflags)
  end
end
struct LibWin32::IWbemProviderInit
  def query_interface(this : IWbemProviderInit*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemProviderInit*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemProviderInit*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def initialize(this : IWbemProviderInit*, wszuser : LibC::LPWSTR, lflags : Int32, wsznamespace : LibC::LPWSTR, wszlocale : LibC::LPWSTR, pnamespace : IWbemServices, pctx : IWbemContext, pinitsink : IWbemProviderInitSink) : HRESULT
    @lpVtbl.value.initialize.call(this, wszuser, lflags, wsznamespace, wszlocale, pnamespace, pctx, pinitsink)
  end
end
struct LibWin32::IWbemHiPerfProvider
  def query_interface(this : IWbemHiPerfProvider*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemHiPerfProvider*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemHiPerfProvider*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def query_instances(this : IWbemHiPerfProvider*, pnamespace : IWbemServices, wszclass : LibC::LPWSTR, lflags : Int32, pctx : IWbemContext, psink : IWbemObjectSink) : HRESULT
    @lpVtbl.value.query_instances.call(this, pnamespace, wszclass, lflags, pctx, psink)
  end
  def create_refresher(this : IWbemHiPerfProvider*, pnamespace : IWbemServices, lflags : Int32, pprefresher : IWbemRefresher*) : HRESULT
    @lpVtbl.value.create_refresher.call(this, pnamespace, lflags, pprefresher)
  end
  def create_refreshable_object(this : IWbemHiPerfProvider*, pnamespace : IWbemServices, ptemplate : IWbemObjectAccess, prefresher : IWbemRefresher, lflags : Int32, pcontext : IWbemContext, pprefreshable : IWbemObjectAccess*, plid : Int32*) : HRESULT
    @lpVtbl.value.create_refreshable_object.call(this, pnamespace, ptemplate, prefresher, lflags, pcontext, pprefreshable, plid)
  end
  def stop_refreshing(this : IWbemHiPerfProvider*, prefresher : IWbemRefresher, lid : Int32, lflags : Int32) : HRESULT
    @lpVtbl.value.stop_refreshing.call(this, prefresher, lid, lflags)
  end
  def create_refreshable_enum(this : IWbemHiPerfProvider*, pnamespace : IWbemServices, wszclass : LibC::LPWSTR, prefresher : IWbemRefresher, lflags : Int32, pcontext : IWbemContext, phiperfenum : IWbemHiPerfEnum, plid : Int32*) : HRESULT
    @lpVtbl.value.create_refreshable_enum.call(this, pnamespace, wszclass, prefresher, lflags, pcontext, phiperfenum, plid)
  end
  def get_objects(this : IWbemHiPerfProvider*, pnamespace : IWbemServices, lnumobjects : Int32, apobj : IWbemObjectAccess*, lflags : Int32, pcontext : IWbemContext) : HRESULT
    @lpVtbl.value.get_objects.call(this, pnamespace, lnumobjects, apobj, lflags, pcontext)
  end
end
struct LibWin32::IWbemDecoupledRegistrar
  def query_interface(this : IWbemDecoupledRegistrar*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemDecoupledRegistrar*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemDecoupledRegistrar*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def register(this : IWbemDecoupledRegistrar*, a_flags : Int32, a_context : IWbemContext, a_user : LibC::LPWSTR, a_locale : LibC::LPWSTR, a_scope : LibC::LPWSTR, a_registration : LibC::LPWSTR, piunknown : IUnknown) : HRESULT
    @lpVtbl.value.register.call(this, a_flags, a_context, a_user, a_locale, a_scope, a_registration, piunknown)
  end
  def un_register(this : IWbemDecoupledRegistrar*) : HRESULT
    @lpVtbl.value.un_register.call(this)
  end
end
struct LibWin32::IWbemProviderIdentity
  def query_interface(this : IWbemProviderIdentity*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemProviderIdentity*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemProviderIdentity*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def set_registration_object(this : IWbemProviderIdentity*, lflags : Int32, pprovreg : IWbemClassObject) : HRESULT
    @lpVtbl.value.set_registration_object.call(this, lflags, pprovreg)
  end
end
struct LibWin32::IWbemDecoupledBasicEventProvider
  def query_interface(this : IWbemDecoupledBasicEventProvider*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemDecoupledBasicEventProvider*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemDecoupledBasicEventProvider*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def register(this : IWbemDecoupledBasicEventProvider*, a_flags : Int32, a_context : IWbemContext, a_user : LibC::LPWSTR, a_locale : LibC::LPWSTR, a_scope : LibC::LPWSTR, a_registration : LibC::LPWSTR, piunknown : IUnknown) : HRESULT
    @lpVtbl.value.register.call(this, a_flags, a_context, a_user, a_locale, a_scope, a_registration, piunknown)
  end
  def un_register(this : IWbemDecoupledBasicEventProvider*) : HRESULT
    @lpVtbl.value.un_register.call(this)
  end
  def get_sink(this : IWbemDecoupledBasicEventProvider*, a_flags : Int32, a_context : IWbemContext, a_sink : IWbemObjectSink*) : HRESULT
    @lpVtbl.value.get_sink.call(this, a_flags, a_context, a_sink)
  end
  def get_service(this : IWbemDecoupledBasicEventProvider*, a_flags : Int32, a_context : IWbemContext, a_service : IWbemServices*) : HRESULT
    @lpVtbl.value.get_service.call(this, a_flags, a_context, a_service)
  end
end
struct LibWin32::IWbemEventSink
  def query_interface(this : IWbemEventSink*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemEventSink*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemEventSink*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def indicate(this : IWbemEventSink*, lobjectcount : Int32, apobjarray : IWbemClassObject*) : HRESULT
    @lpVtbl.value.indicate.call(this, lobjectcount, apobjarray)
  end
  def set_status(this : IWbemEventSink*, lflags : Int32, hresult : HRESULT, strparam : UInt8*, pobjparam : IWbemClassObject) : HRESULT
    @lpVtbl.value.set_status.call(this, lflags, hresult, strparam, pobjparam)
  end
  def set_sink_security(this : IWbemEventSink*, lsdlength : Int32, psd : UInt8*) : HRESULT
    @lpVtbl.value.set_sink_security.call(this, lsdlength, psd)
  end
  def is_active(this : IWbemEventSink*) : HRESULT
    @lpVtbl.value.is_active.call(this)
  end
  def get_restricted_sink(this : IWbemEventSink*, lnumqueries : Int32, awszqueries : LibC::LPWSTR*, pcallback : IUnknown, ppsink : IWbemEventSink*) : HRESULT
    @lpVtbl.value.get_restricted_sink.call(this, lnumqueries, awszqueries, pcallback, ppsink)
  end
  def set_batching_parameters(this : IWbemEventSink*, lflags : Int32, dwmaxbuffersize : UInt32, dwmaxsendlatency : UInt32) : HRESULT
    @lpVtbl.value.set_batching_parameters.call(this, lflags, dwmaxbuffersize, dwmaxsendlatency)
  end
end
struct LibWin32::ISWbemServices
  def query_interface(this : ISWbemServices*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemServices*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemServices*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemServices*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemServices*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemServices*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemServices*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get(this : ISWbemServices*, strobjectpath : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.get.call(this, strobjectpath, iflags, objwbemnamedvalueset, objwbemobject)
  end
  def get_async(this : ISWbemServices*, objwbemsink : IDispatch, strobjectpath : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.get_async.call(this, objwbemsink, strobjectpath, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def delete(this : ISWbemServices*, strobjectpath : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch) : HRESULT
    @lpVtbl.value.delete.call(this, strobjectpath, iflags, objwbemnamedvalueset)
  end
  def delete_async(this : ISWbemServices*, objwbemsink : IDispatch, strobjectpath : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.delete_async.call(this, objwbemsink, strobjectpath, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def instances_of(this : ISWbemServices*, strclass : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.instances_of.call(this, strclass, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def instances_of_async(this : ISWbemServices*, objwbemsink : IDispatch, strclass : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.instances_of_async.call(this, objwbemsink, strclass, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def subclasses_of(this : ISWbemServices*, strsuperclass : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.subclasses_of.call(this, strsuperclass, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def subclasses_of_async(this : ISWbemServices*, objwbemsink : IDispatch, strsuperclass : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.subclasses_of_async.call(this, objwbemsink, strsuperclass, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def exec_query(this : ISWbemServices*, strquery : UInt8*, strquerylanguage : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.exec_query.call(this, strquery, strquerylanguage, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def exec_query_async(this : ISWbemServices*, objwbemsink : IDispatch, strquery : UInt8*, strquerylanguage : UInt8*, lflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.exec_query_async.call(this, objwbemsink, strquery, strquerylanguage, lflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def associators_of(this : ISWbemServices*, strobjectpath : UInt8*, strassocclass : UInt8*, strresultclass : UInt8*, strresultrole : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredassocqualifier : UInt8*, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.associators_of.call(this, strobjectpath, strassocclass, strresultclass, strresultrole, strrole, bclassesonly, bschemaonly, strrequiredassocqualifier, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def associators_of_async(this : ISWbemServices*, objwbemsink : IDispatch, strobjectpath : UInt8*, strassocclass : UInt8*, strresultclass : UInt8*, strresultrole : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredassocqualifier : UInt8*, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.associators_of_async.call(this, objwbemsink, strobjectpath, strassocclass, strresultclass, strresultrole, strrole, bclassesonly, bschemaonly, strrequiredassocqualifier, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def references_to(this : ISWbemServices*, strobjectpath : UInt8*, strresultclass : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.references_to.call(this, strobjectpath, strresultclass, strrole, bclassesonly, bschemaonly, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def references_to_async(this : ISWbemServices*, objwbemsink : IDispatch, strobjectpath : UInt8*, strresultclass : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.references_to_async.call(this, objwbemsink, strobjectpath, strresultclass, strrole, bclassesonly, bschemaonly, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def exec_notification_query(this : ISWbemServices*, strquery : UInt8*, strquerylanguage : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemeventsource : ISWbemEventSource*) : HRESULT
    @lpVtbl.value.exec_notification_query.call(this, strquery, strquerylanguage, iflags, objwbemnamedvalueset, objwbemeventsource)
  end
  def exec_notification_query_async(this : ISWbemServices*, objwbemsink : IDispatch, strquery : UInt8*, strquerylanguage : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.exec_notification_query_async.call(this, objwbemsink, strquery, strquerylanguage, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def exec_method(this : ISWbemServices*, strobjectpath : UInt8*, strmethodname : UInt8*, objwbeminparameters : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemoutparameters : ISWbemObject*) : HRESULT
    @lpVtbl.value.exec_method.call(this, strobjectpath, strmethodname, objwbeminparameters, iflags, objwbemnamedvalueset, objwbemoutparameters)
  end
  def exec_method_async(this : ISWbemServices*, objwbemsink : IDispatch, strobjectpath : UInt8*, strmethodname : UInt8*, objwbeminparameters : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.exec_method_async.call(this, objwbemsink, strobjectpath, strmethodname, objwbeminparameters, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def get_security_(this : ISWbemServices*, objwbemsecurity : ISWbemSecurity*) : HRESULT
    @lpVtbl.value.get_security_.call(this, objwbemsecurity)
  end
end
struct LibWin32::ISWbemLocator
  def query_interface(this : ISWbemLocator*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemLocator*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemLocator*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemLocator*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemLocator*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemLocator*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemLocator*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def connect_server(this : ISWbemLocator*, strserver : UInt8*, strnamespace : UInt8*, struser : UInt8*, strpassword : UInt8*, strlocale : UInt8*, strauthority : UInt8*, isecurityflags : Int32, objwbemnamedvalueset : IDispatch, objwbemservices : ISWbemServices*) : HRESULT
    @lpVtbl.value.connect_server.call(this, strserver, strnamespace, struser, strpassword, strlocale, strauthority, isecurityflags, objwbemnamedvalueset, objwbemservices)
  end
  def get_security_(this : ISWbemLocator*, objwbemsecurity : ISWbemSecurity*) : HRESULT
    @lpVtbl.value.get_security_.call(this, objwbemsecurity)
  end
end
struct LibWin32::ISWbemObject
  def query_interface(this : ISWbemObject*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemObject*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemObject*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemObject*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemObject*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemObject*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemObject*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_(this : ISWbemObject*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectpath : ISWbemObjectPath*) : HRESULT
    @lpVtbl.value.put_.call(this, iflags, objwbemnamedvalueset, objwbemobjectpath)
  end
  def put_async_(this : ISWbemObject*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.put_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def delete_(this : ISWbemObject*, iflags : Int32, objwbemnamedvalueset : IDispatch) : HRESULT
    @lpVtbl.value.delete_.call(this, iflags, objwbemnamedvalueset)
  end
  def delete_async_(this : ISWbemObject*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.delete_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def instances_(this : ISWbemObject*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.instances_.call(this, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def instances_async_(this : ISWbemObject*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.instances_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def subclasses_(this : ISWbemObject*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.subclasses_.call(this, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def subclasses_async_(this : ISWbemObject*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.subclasses_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def associators_(this : ISWbemObject*, strassocclass : UInt8*, strresultclass : UInt8*, strresultrole : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredassocqualifier : UInt8*, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.associators_.call(this, strassocclass, strresultclass, strresultrole, strrole, bclassesonly, bschemaonly, strrequiredassocqualifier, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def associators_async_(this : ISWbemObject*, objwbemsink : IDispatch, strassocclass : UInt8*, strresultclass : UInt8*, strresultrole : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredassocqualifier : UInt8*, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.associators_async_.call(this, objwbemsink, strassocclass, strresultclass, strresultrole, strrole, bclassesonly, bschemaonly, strrequiredassocqualifier, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def references_(this : ISWbemObject*, strresultclass : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.references_.call(this, strresultclass, strrole, bclassesonly, bschemaonly, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def references_async_(this : ISWbemObject*, objwbemsink : IDispatch, strresultclass : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.references_async_.call(this, objwbemsink, strresultclass, strrole, bclassesonly, bschemaonly, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def exec_method_(this : ISWbemObject*, strmethodname : UInt8*, objwbeminparameters : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemoutparameters : ISWbemObject*) : HRESULT
    @lpVtbl.value.exec_method_.call(this, strmethodname, objwbeminparameters, iflags, objwbemnamedvalueset, objwbemoutparameters)
  end
  def exec_method_async_(this : ISWbemObject*, objwbemsink : IDispatch, strmethodname : UInt8*, objwbeminparameters : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.exec_method_async_.call(this, objwbemsink, strmethodname, objwbeminparameters, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def clone_(this : ISWbemObject*, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.clone_.call(this, objwbemobject)
  end
  def get_object_text_(this : ISWbemObject*, iflags : Int32, strobjecttext : UInt8**) : HRESULT
    @lpVtbl.value.get_object_text_.call(this, iflags, strobjecttext)
  end
  def spawn_derived_class_(this : ISWbemObject*, iflags : Int32, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.spawn_derived_class_.call(this, iflags, objwbemobject)
  end
  def spawn_instance_(this : ISWbemObject*, iflags : Int32, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.spawn_instance_.call(this, iflags, objwbemobject)
  end
  def compare_to_(this : ISWbemObject*, objwbemobject : IDispatch, iflags : Int32, bresult : Int16*) : HRESULT
    @lpVtbl.value.compare_to_.call(this, objwbemobject, iflags, bresult)
  end
  def get_qualifiers_(this : ISWbemObject*, objwbemqualifierset : ISWbemQualifierSet*) : HRESULT
    @lpVtbl.value.get_qualifiers_.call(this, objwbemqualifierset)
  end
  def get_properties_(this : ISWbemObject*, objwbempropertyset : ISWbemPropertySet*) : HRESULT
    @lpVtbl.value.get_properties_.call(this, objwbempropertyset)
  end
  def get_methods_(this : ISWbemObject*, objwbemmethodset : ISWbemMethodSet*) : HRESULT
    @lpVtbl.value.get_methods_.call(this, objwbemmethodset)
  end
  def get_derivation_(this : ISWbemObject*, strclassnamearray : VARIANT*) : HRESULT
    @lpVtbl.value.get_derivation_.call(this, strclassnamearray)
  end
  def get_path_(this : ISWbemObject*, objwbemobjectpath : ISWbemObjectPath*) : HRESULT
    @lpVtbl.value.get_path_.call(this, objwbemobjectpath)
  end
  def get_security_(this : ISWbemObject*, objwbemsecurity : ISWbemSecurity*) : HRESULT
    @lpVtbl.value.get_security_.call(this, objwbemsecurity)
  end
end
struct LibWin32::ISWbemObjectSet
  def query_interface(this : ISWbemObjectSet*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemObjectSet*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemObjectSet*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemObjectSet*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemObjectSet*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemObjectSet*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemObjectSet*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get__new_enum(this : ISWbemObjectSet*, punk : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.call(this, punk)
  end
  def item(this : ISWbemObjectSet*, strobjectpath : UInt8*, iflags : Int32, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.item.call(this, strobjectpath, iflags, objwbemobject)
  end
  def get_count(this : ISWbemObjectSet*, icount : Int32*) : HRESULT
    @lpVtbl.value.get_count.call(this, icount)
  end
  def get_security_(this : ISWbemObjectSet*, objwbemsecurity : ISWbemSecurity*) : HRESULT
    @lpVtbl.value.get_security_.call(this, objwbemsecurity)
  end
  def item_index(this : ISWbemObjectSet*, lindex : Int32, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.item_index.call(this, lindex, objwbemobject)
  end
end
struct LibWin32::ISWbemNamedValue
  def query_interface(this : ISWbemNamedValue*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemNamedValue*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemNamedValue*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemNamedValue*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemNamedValue*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemNamedValue*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemNamedValue*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_value(this : ISWbemNamedValue*, varvalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_value.call(this, varvalue)
  end
  def put_value(this : ISWbemNamedValue*, varvalue : VARIANT*) : HRESULT
    @lpVtbl.value.put_value.call(this, varvalue)
  end
  def get_name(this : ISWbemNamedValue*, strname : UInt8**) : HRESULT
    @lpVtbl.value.get_name.call(this, strname)
  end
end
struct LibWin32::ISWbemNamedValueSet
  def query_interface(this : ISWbemNamedValueSet*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemNamedValueSet*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemNamedValueSet*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemNamedValueSet*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemNamedValueSet*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemNamedValueSet*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemNamedValueSet*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get__new_enum(this : ISWbemNamedValueSet*, punk : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.call(this, punk)
  end
  def item(this : ISWbemNamedValueSet*, strname : UInt8*, iflags : Int32, objwbemnamedvalue : ISWbemNamedValue*) : HRESULT
    @lpVtbl.value.item.call(this, strname, iflags, objwbemnamedvalue)
  end
  def get_count(this : ISWbemNamedValueSet*, icount : Int32*) : HRESULT
    @lpVtbl.value.get_count.call(this, icount)
  end
  def add(this : ISWbemNamedValueSet*, strname : UInt8*, varvalue : VARIANT*, iflags : Int32, objwbemnamedvalue : ISWbemNamedValue*) : HRESULT
    @lpVtbl.value.add.call(this, strname, varvalue, iflags, objwbemnamedvalue)
  end
  def remove(this : ISWbemNamedValueSet*, strname : UInt8*, iflags : Int32) : HRESULT
    @lpVtbl.value.remove.call(this, strname, iflags)
  end
  def clone(this : ISWbemNamedValueSet*, objwbemnamedvalueset : ISWbemNamedValueSet*) : HRESULT
    @lpVtbl.value.clone.call(this, objwbemnamedvalueset)
  end
  def delete_all(this : ISWbemNamedValueSet*) : HRESULT
    @lpVtbl.value.delete_all.call(this)
  end
end
struct LibWin32::ISWbemQualifier
  def query_interface(this : ISWbemQualifier*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemQualifier*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemQualifier*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemQualifier*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemQualifier*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemQualifier*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemQualifier*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_value(this : ISWbemQualifier*, varvalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_value.call(this, varvalue)
  end
  def put_value(this : ISWbemQualifier*, varvalue : VARIANT*) : HRESULT
    @lpVtbl.value.put_value.call(this, varvalue)
  end
  def get_name(this : ISWbemQualifier*, strname : UInt8**) : HRESULT
    @lpVtbl.value.get_name.call(this, strname)
  end
  def get_is_local(this : ISWbemQualifier*, bislocal : Int16*) : HRESULT
    @lpVtbl.value.get_is_local.call(this, bislocal)
  end
  def get_propagates_to_subclass(this : ISWbemQualifier*, bpropagatestosubclass : Int16*) : HRESULT
    @lpVtbl.value.get_propagates_to_subclass.call(this, bpropagatestosubclass)
  end
  def put_propagates_to_subclass(this : ISWbemQualifier*, bpropagatestosubclass : Int16) : HRESULT
    @lpVtbl.value.put_propagates_to_subclass.call(this, bpropagatestosubclass)
  end
  def get_propagates_to_instance(this : ISWbemQualifier*, bpropagatestoinstance : Int16*) : HRESULT
    @lpVtbl.value.get_propagates_to_instance.call(this, bpropagatestoinstance)
  end
  def put_propagates_to_instance(this : ISWbemQualifier*, bpropagatestoinstance : Int16) : HRESULT
    @lpVtbl.value.put_propagates_to_instance.call(this, bpropagatestoinstance)
  end
  def get_is_overridable(this : ISWbemQualifier*, bisoverridable : Int16*) : HRESULT
    @lpVtbl.value.get_is_overridable.call(this, bisoverridable)
  end
  def put_is_overridable(this : ISWbemQualifier*, bisoverridable : Int16) : HRESULT
    @lpVtbl.value.put_is_overridable.call(this, bisoverridable)
  end
  def get_is_amended(this : ISWbemQualifier*, bisamended : Int16*) : HRESULT
    @lpVtbl.value.get_is_amended.call(this, bisamended)
  end
end
struct LibWin32::ISWbemQualifierSet
  def query_interface(this : ISWbemQualifierSet*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemQualifierSet*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemQualifierSet*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemQualifierSet*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemQualifierSet*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemQualifierSet*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemQualifierSet*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get__new_enum(this : ISWbemQualifierSet*, punk : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.call(this, punk)
  end
  def item(this : ISWbemQualifierSet*, name : UInt8*, iflags : Int32, objwbemqualifier : ISWbemQualifier*) : HRESULT
    @lpVtbl.value.item.call(this, name, iflags, objwbemqualifier)
  end
  def get_count(this : ISWbemQualifierSet*, icount : Int32*) : HRESULT
    @lpVtbl.value.get_count.call(this, icount)
  end
  def add(this : ISWbemQualifierSet*, strname : UInt8*, varval : VARIANT*, bpropagatestosubclass : Int16, bpropagatestoinstance : Int16, bisoverridable : Int16, iflags : Int32, objwbemqualifier : ISWbemQualifier*) : HRESULT
    @lpVtbl.value.add.call(this, strname, varval, bpropagatestosubclass, bpropagatestoinstance, bisoverridable, iflags, objwbemqualifier)
  end
  def remove(this : ISWbemQualifierSet*, strname : UInt8*, iflags : Int32) : HRESULT
    @lpVtbl.value.remove.call(this, strname, iflags)
  end
end
struct LibWin32::ISWbemProperty
  def query_interface(this : ISWbemProperty*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemProperty*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemProperty*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemProperty*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemProperty*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemProperty*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemProperty*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_value(this : ISWbemProperty*, varvalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_value.call(this, varvalue)
  end
  def put_value(this : ISWbemProperty*, varvalue : VARIANT*) : HRESULT
    @lpVtbl.value.put_value.call(this, varvalue)
  end
  def get_name(this : ISWbemProperty*, strname : UInt8**) : HRESULT
    @lpVtbl.value.get_name.call(this, strname)
  end
  def get_is_local(this : ISWbemProperty*, bislocal : Int16*) : HRESULT
    @lpVtbl.value.get_is_local.call(this, bislocal)
  end
  def get_origin(this : ISWbemProperty*, strorigin : UInt8**) : HRESULT
    @lpVtbl.value.get_origin.call(this, strorigin)
  end
  def get_cim_type(this : ISWbemProperty*, icimtype : WbemCimtypeEnum*) : HRESULT
    @lpVtbl.value.get_cim_type.call(this, icimtype)
  end
  def get_qualifiers_(this : ISWbemProperty*, objwbemqualifierset : ISWbemQualifierSet*) : HRESULT
    @lpVtbl.value.get_qualifiers_.call(this, objwbemqualifierset)
  end
  def get_is_array(this : ISWbemProperty*, bisarray : Int16*) : HRESULT
    @lpVtbl.value.get_is_array.call(this, bisarray)
  end
end
struct LibWin32::ISWbemPropertySet
  def query_interface(this : ISWbemPropertySet*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemPropertySet*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemPropertySet*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemPropertySet*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemPropertySet*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemPropertySet*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemPropertySet*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get__new_enum(this : ISWbemPropertySet*, punk : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.call(this, punk)
  end
  def item(this : ISWbemPropertySet*, strname : UInt8*, iflags : Int32, objwbemproperty : ISWbemProperty*) : HRESULT
    @lpVtbl.value.item.call(this, strname, iflags, objwbemproperty)
  end
  def get_count(this : ISWbemPropertySet*, icount : Int32*) : HRESULT
    @lpVtbl.value.get_count.call(this, icount)
  end
  def add(this : ISWbemPropertySet*, strname : UInt8*, icimtype : WbemCimtypeEnum, bisarray : Int16, iflags : Int32, objwbemproperty : ISWbemProperty*) : HRESULT
    @lpVtbl.value.add.call(this, strname, icimtype, bisarray, iflags, objwbemproperty)
  end
  def remove(this : ISWbemPropertySet*, strname : UInt8*, iflags : Int32) : HRESULT
    @lpVtbl.value.remove.call(this, strname, iflags)
  end
end
struct LibWin32::ISWbemMethod
  def query_interface(this : ISWbemMethod*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemMethod*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemMethod*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemMethod*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemMethod*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemMethod*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemMethod*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_name(this : ISWbemMethod*, strname : UInt8**) : HRESULT
    @lpVtbl.value.get_name.call(this, strname)
  end
  def get_origin(this : ISWbemMethod*, strorigin : UInt8**) : HRESULT
    @lpVtbl.value.get_origin.call(this, strorigin)
  end
  def get_in_parameters(this : ISWbemMethod*, objwbeminparameters : ISWbemObject*) : HRESULT
    @lpVtbl.value.get_in_parameters.call(this, objwbeminparameters)
  end
  def get_out_parameters(this : ISWbemMethod*, objwbemoutparameters : ISWbemObject*) : HRESULT
    @lpVtbl.value.get_out_parameters.call(this, objwbemoutparameters)
  end
  def get_qualifiers_(this : ISWbemMethod*, objwbemqualifierset : ISWbemQualifierSet*) : HRESULT
    @lpVtbl.value.get_qualifiers_.call(this, objwbemqualifierset)
  end
end
struct LibWin32::ISWbemMethodSet
  def query_interface(this : ISWbemMethodSet*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemMethodSet*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemMethodSet*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemMethodSet*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemMethodSet*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemMethodSet*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemMethodSet*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get__new_enum(this : ISWbemMethodSet*, punk : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.call(this, punk)
  end
  def item(this : ISWbemMethodSet*, strname : UInt8*, iflags : Int32, objwbemmethod : ISWbemMethod*) : HRESULT
    @lpVtbl.value.item.call(this, strname, iflags, objwbemmethod)
  end
  def get_count(this : ISWbemMethodSet*, icount : Int32*) : HRESULT
    @lpVtbl.value.get_count.call(this, icount)
  end
end
struct LibWin32::ISWbemEventSource
  def query_interface(this : ISWbemEventSource*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemEventSource*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemEventSource*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemEventSource*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemEventSource*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemEventSource*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemEventSource*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def next_event(this : ISWbemEventSource*, itimeoutms : Int32, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.next_event.call(this, itimeoutms, objwbemobject)
  end
  def get_security_(this : ISWbemEventSource*, objwbemsecurity : ISWbemSecurity*) : HRESULT
    @lpVtbl.value.get_security_.call(this, objwbemsecurity)
  end
end
struct LibWin32::ISWbemObjectPath
  def query_interface(this : ISWbemObjectPath*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemObjectPath*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemObjectPath*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemObjectPath*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemObjectPath*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemObjectPath*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemObjectPath*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_path(this : ISWbemObjectPath*, strpath : UInt8**) : HRESULT
    @lpVtbl.value.get_path.call(this, strpath)
  end
  def put_path(this : ISWbemObjectPath*, strpath : UInt8*) : HRESULT
    @lpVtbl.value.put_path.call(this, strpath)
  end
  def get_rel_path(this : ISWbemObjectPath*, strrelpath : UInt8**) : HRESULT
    @lpVtbl.value.get_rel_path.call(this, strrelpath)
  end
  def put_rel_path(this : ISWbemObjectPath*, strrelpath : UInt8*) : HRESULT
    @lpVtbl.value.put_rel_path.call(this, strrelpath)
  end
  def get_server(this : ISWbemObjectPath*, strserver : UInt8**) : HRESULT
    @lpVtbl.value.get_server.call(this, strserver)
  end
  def put_server(this : ISWbemObjectPath*, strserver : UInt8*) : HRESULT
    @lpVtbl.value.put_server.call(this, strserver)
  end
  def get_namespace(this : ISWbemObjectPath*, strnamespace : UInt8**) : HRESULT
    @lpVtbl.value.get_namespace.call(this, strnamespace)
  end
  def put_namespace(this : ISWbemObjectPath*, strnamespace : UInt8*) : HRESULT
    @lpVtbl.value.put_namespace.call(this, strnamespace)
  end
  def get_parent_namespace(this : ISWbemObjectPath*, strparentnamespace : UInt8**) : HRESULT
    @lpVtbl.value.get_parent_namespace.call(this, strparentnamespace)
  end
  def get_display_name(this : ISWbemObjectPath*, strdisplayname : UInt8**) : HRESULT
    @lpVtbl.value.get_display_name.call(this, strdisplayname)
  end
  def put_display_name(this : ISWbemObjectPath*, strdisplayname : UInt8*) : HRESULT
    @lpVtbl.value.put_display_name.call(this, strdisplayname)
  end
  def get_class(this : ISWbemObjectPath*, strclass : UInt8**) : HRESULT
    @lpVtbl.value.get_class.call(this, strclass)
  end
  def put_class(this : ISWbemObjectPath*, strclass : UInt8*) : HRESULT
    @lpVtbl.value.put_class.call(this, strclass)
  end
  def get_is_class(this : ISWbemObjectPath*, bisclass : Int16*) : HRESULT
    @lpVtbl.value.get_is_class.call(this, bisclass)
  end
  def set_as_class(this : ISWbemObjectPath*) : HRESULT
    @lpVtbl.value.set_as_class.call(this)
  end
  def get_is_singleton(this : ISWbemObjectPath*, bissingleton : Int16*) : HRESULT
    @lpVtbl.value.get_is_singleton.call(this, bissingleton)
  end
  def set_as_singleton(this : ISWbemObjectPath*) : HRESULT
    @lpVtbl.value.set_as_singleton.call(this)
  end
  def get_keys(this : ISWbemObjectPath*, objwbemnamedvalueset : ISWbemNamedValueSet*) : HRESULT
    @lpVtbl.value.get_keys.call(this, objwbemnamedvalueset)
  end
  def get_security_(this : ISWbemObjectPath*, objwbemsecurity : ISWbemSecurity*) : HRESULT
    @lpVtbl.value.get_security_.call(this, objwbemsecurity)
  end
  def get_locale(this : ISWbemObjectPath*, strlocale : UInt8**) : HRESULT
    @lpVtbl.value.get_locale.call(this, strlocale)
  end
  def put_locale(this : ISWbemObjectPath*, strlocale : UInt8*) : HRESULT
    @lpVtbl.value.put_locale.call(this, strlocale)
  end
  def get_authority(this : ISWbemObjectPath*, strauthority : UInt8**) : HRESULT
    @lpVtbl.value.get_authority.call(this, strauthority)
  end
  def put_authority(this : ISWbemObjectPath*, strauthority : UInt8*) : HRESULT
    @lpVtbl.value.put_authority.call(this, strauthority)
  end
end
struct LibWin32::ISWbemLastError
  def query_interface(this : ISWbemLastError*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemLastError*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemLastError*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemLastError*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemLastError*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemLastError*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemLastError*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_(this : ISWbemLastError*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectpath : ISWbemObjectPath*) : HRESULT
    @lpVtbl.value.put_.call(this, iflags, objwbemnamedvalueset, objwbemobjectpath)
  end
  def put_async_(this : ISWbemLastError*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.put_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def delete_(this : ISWbemLastError*, iflags : Int32, objwbemnamedvalueset : IDispatch) : HRESULT
    @lpVtbl.value.delete_.call(this, iflags, objwbemnamedvalueset)
  end
  def delete_async_(this : ISWbemLastError*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.delete_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def instances_(this : ISWbemLastError*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.instances_.call(this, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def instances_async_(this : ISWbemLastError*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.instances_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def subclasses_(this : ISWbemLastError*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.subclasses_.call(this, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def subclasses_async_(this : ISWbemLastError*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.subclasses_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def associators_(this : ISWbemLastError*, strassocclass : UInt8*, strresultclass : UInt8*, strresultrole : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredassocqualifier : UInt8*, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.associators_.call(this, strassocclass, strresultclass, strresultrole, strrole, bclassesonly, bschemaonly, strrequiredassocqualifier, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def associators_async_(this : ISWbemLastError*, objwbemsink : IDispatch, strassocclass : UInt8*, strresultclass : UInt8*, strresultrole : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredassocqualifier : UInt8*, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.associators_async_.call(this, objwbemsink, strassocclass, strresultclass, strresultrole, strrole, bclassesonly, bschemaonly, strrequiredassocqualifier, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def references_(this : ISWbemLastError*, strresultclass : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.references_.call(this, strresultclass, strrole, bclassesonly, bschemaonly, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def references_async_(this : ISWbemLastError*, objwbemsink : IDispatch, strresultclass : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.references_async_.call(this, objwbemsink, strresultclass, strrole, bclassesonly, bschemaonly, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def exec_method_(this : ISWbemLastError*, strmethodname : UInt8*, objwbeminparameters : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemoutparameters : ISWbemObject*) : HRESULT
    @lpVtbl.value.exec_method_.call(this, strmethodname, objwbeminparameters, iflags, objwbemnamedvalueset, objwbemoutparameters)
  end
  def exec_method_async_(this : ISWbemLastError*, objwbemsink : IDispatch, strmethodname : UInt8*, objwbeminparameters : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.exec_method_async_.call(this, objwbemsink, strmethodname, objwbeminparameters, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def clone_(this : ISWbemLastError*, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.clone_.call(this, objwbemobject)
  end
  def get_object_text_(this : ISWbemLastError*, iflags : Int32, strobjecttext : UInt8**) : HRESULT
    @lpVtbl.value.get_object_text_.call(this, iflags, strobjecttext)
  end
  def spawn_derived_class_(this : ISWbemLastError*, iflags : Int32, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.spawn_derived_class_.call(this, iflags, objwbemobject)
  end
  def spawn_instance_(this : ISWbemLastError*, iflags : Int32, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.spawn_instance_.call(this, iflags, objwbemobject)
  end
  def compare_to_(this : ISWbemLastError*, objwbemobject : IDispatch, iflags : Int32, bresult : Int16*) : HRESULT
    @lpVtbl.value.compare_to_.call(this, objwbemobject, iflags, bresult)
  end
  def get_qualifiers_(this : ISWbemLastError*, objwbemqualifierset : ISWbemQualifierSet*) : HRESULT
    @lpVtbl.value.get_qualifiers_.call(this, objwbemqualifierset)
  end
  def get_properties_(this : ISWbemLastError*, objwbempropertyset : ISWbemPropertySet*) : HRESULT
    @lpVtbl.value.get_properties_.call(this, objwbempropertyset)
  end
  def get_methods_(this : ISWbemLastError*, objwbemmethodset : ISWbemMethodSet*) : HRESULT
    @lpVtbl.value.get_methods_.call(this, objwbemmethodset)
  end
  def get_derivation_(this : ISWbemLastError*, strclassnamearray : VARIANT*) : HRESULT
    @lpVtbl.value.get_derivation_.call(this, strclassnamearray)
  end
  def get_path_(this : ISWbemLastError*, objwbemobjectpath : ISWbemObjectPath*) : HRESULT
    @lpVtbl.value.get_path_.call(this, objwbemobjectpath)
  end
  def get_security_(this : ISWbemLastError*, objwbemsecurity : ISWbemSecurity*) : HRESULT
    @lpVtbl.value.get_security_.call(this, objwbemsecurity)
  end
end
struct LibWin32::ISWbemSinkEvents
  def query_interface(this : ISWbemSinkEvents*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemSinkEvents*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemSinkEvents*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemSinkEvents*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemSinkEvents*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemSinkEvents*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemSinkEvents*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISWbemSink
  def query_interface(this : ISWbemSink*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemSink*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemSink*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemSink*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemSink*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemSink*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemSink*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def cancel(this : ISWbemSink*) : HRESULT
    @lpVtbl.value.cancel.call(this)
  end
end
struct LibWin32::ISWbemSecurity
  def query_interface(this : ISWbemSecurity*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemSecurity*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemSecurity*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemSecurity*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemSecurity*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemSecurity*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemSecurity*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_impersonation_level(this : ISWbemSecurity*, iimpersonationlevel : WbemImpersonationLevelEnum*) : HRESULT
    @lpVtbl.value.get_impersonation_level.call(this, iimpersonationlevel)
  end
  def put_impersonation_level(this : ISWbemSecurity*, iimpersonationlevel : WbemImpersonationLevelEnum) : HRESULT
    @lpVtbl.value.put_impersonation_level.call(this, iimpersonationlevel)
  end
  def get_authentication_level(this : ISWbemSecurity*, iauthenticationlevel : WbemAuthenticationLevelEnum*) : HRESULT
    @lpVtbl.value.get_authentication_level.call(this, iauthenticationlevel)
  end
  def put_authentication_level(this : ISWbemSecurity*, iauthenticationlevel : WbemAuthenticationLevelEnum) : HRESULT
    @lpVtbl.value.put_authentication_level.call(this, iauthenticationlevel)
  end
  def get_privileges(this : ISWbemSecurity*, objwbemprivilegeset : ISWbemPrivilegeSet*) : HRESULT
    @lpVtbl.value.get_privileges.call(this, objwbemprivilegeset)
  end
end
struct LibWin32::ISWbemPrivilege
  def query_interface(this : ISWbemPrivilege*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemPrivilege*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemPrivilege*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemPrivilege*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemPrivilege*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemPrivilege*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemPrivilege*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_is_enabled(this : ISWbemPrivilege*, bisenabled : Int16*) : HRESULT
    @lpVtbl.value.get_is_enabled.call(this, bisenabled)
  end
  def put_is_enabled(this : ISWbemPrivilege*, bisenabled : Int16) : HRESULT
    @lpVtbl.value.put_is_enabled.call(this, bisenabled)
  end
  def get_name(this : ISWbemPrivilege*, strdisplayname : UInt8**) : HRESULT
    @lpVtbl.value.get_name.call(this, strdisplayname)
  end
  def get_display_name(this : ISWbemPrivilege*, strdisplayname : UInt8**) : HRESULT
    @lpVtbl.value.get_display_name.call(this, strdisplayname)
  end
  def get_identifier(this : ISWbemPrivilege*, iprivilege : WbemPrivilegeEnum*) : HRESULT
    @lpVtbl.value.get_identifier.call(this, iprivilege)
  end
end
struct LibWin32::ISWbemPrivilegeSet
  def query_interface(this : ISWbemPrivilegeSet*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemPrivilegeSet*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemPrivilegeSet*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemPrivilegeSet*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemPrivilegeSet*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemPrivilegeSet*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemPrivilegeSet*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get__new_enum(this : ISWbemPrivilegeSet*, punk : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.call(this, punk)
  end
  def item(this : ISWbemPrivilegeSet*, iprivilege : WbemPrivilegeEnum, objwbemprivilege : ISWbemPrivilege*) : HRESULT
    @lpVtbl.value.item.call(this, iprivilege, objwbemprivilege)
  end
  def get_count(this : ISWbemPrivilegeSet*, icount : Int32*) : HRESULT
    @lpVtbl.value.get_count.call(this, icount)
  end
  def add(this : ISWbemPrivilegeSet*, iprivilege : WbemPrivilegeEnum, bisenabled : Int16, objwbemprivilege : ISWbemPrivilege*) : HRESULT
    @lpVtbl.value.add.call(this, iprivilege, bisenabled, objwbemprivilege)
  end
  def remove(this : ISWbemPrivilegeSet*, iprivilege : WbemPrivilegeEnum) : HRESULT
    @lpVtbl.value.remove.call(this, iprivilege)
  end
  def delete_all(this : ISWbemPrivilegeSet*) : HRESULT
    @lpVtbl.value.delete_all.call(this)
  end
  def add_as_string(this : ISWbemPrivilegeSet*, strprivilege : UInt8*, bisenabled : Int16, objwbemprivilege : ISWbemPrivilege*) : HRESULT
    @lpVtbl.value.add_as_string.call(this, strprivilege, bisenabled, objwbemprivilege)
  end
end
struct LibWin32::ISWbemServicesEx
  def query_interface(this : ISWbemServicesEx*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemServicesEx*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemServicesEx*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemServicesEx*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemServicesEx*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemServicesEx*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemServicesEx*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get(this : ISWbemServicesEx*, strobjectpath : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.get.call(this, strobjectpath, iflags, objwbemnamedvalueset, objwbemobject)
  end
  def get_async(this : ISWbemServicesEx*, objwbemsink : IDispatch, strobjectpath : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.get_async.call(this, objwbemsink, strobjectpath, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def delete(this : ISWbemServicesEx*, strobjectpath : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch) : HRESULT
    @lpVtbl.value.delete.call(this, strobjectpath, iflags, objwbemnamedvalueset)
  end
  def delete_async(this : ISWbemServicesEx*, objwbemsink : IDispatch, strobjectpath : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.delete_async.call(this, objwbemsink, strobjectpath, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def instances_of(this : ISWbemServicesEx*, strclass : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.instances_of.call(this, strclass, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def instances_of_async(this : ISWbemServicesEx*, objwbemsink : IDispatch, strclass : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.instances_of_async.call(this, objwbemsink, strclass, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def subclasses_of(this : ISWbemServicesEx*, strsuperclass : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.subclasses_of.call(this, strsuperclass, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def subclasses_of_async(this : ISWbemServicesEx*, objwbemsink : IDispatch, strsuperclass : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.subclasses_of_async.call(this, objwbemsink, strsuperclass, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def exec_query(this : ISWbemServicesEx*, strquery : UInt8*, strquerylanguage : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.exec_query.call(this, strquery, strquerylanguage, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def exec_query_async(this : ISWbemServicesEx*, objwbemsink : IDispatch, strquery : UInt8*, strquerylanguage : UInt8*, lflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.exec_query_async.call(this, objwbemsink, strquery, strquerylanguage, lflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def associators_of(this : ISWbemServicesEx*, strobjectpath : UInt8*, strassocclass : UInt8*, strresultclass : UInt8*, strresultrole : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredassocqualifier : UInt8*, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.associators_of.call(this, strobjectpath, strassocclass, strresultclass, strresultrole, strrole, bclassesonly, bschemaonly, strrequiredassocqualifier, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def associators_of_async(this : ISWbemServicesEx*, objwbemsink : IDispatch, strobjectpath : UInt8*, strassocclass : UInt8*, strresultclass : UInt8*, strresultrole : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredassocqualifier : UInt8*, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.associators_of_async.call(this, objwbemsink, strobjectpath, strassocclass, strresultclass, strresultrole, strrole, bclassesonly, bschemaonly, strrequiredassocqualifier, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def references_to(this : ISWbemServicesEx*, strobjectpath : UInt8*, strresultclass : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.references_to.call(this, strobjectpath, strresultclass, strrole, bclassesonly, bschemaonly, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def references_to_async(this : ISWbemServicesEx*, objwbemsink : IDispatch, strobjectpath : UInt8*, strresultclass : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.references_to_async.call(this, objwbemsink, strobjectpath, strresultclass, strrole, bclassesonly, bschemaonly, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def exec_notification_query(this : ISWbemServicesEx*, strquery : UInt8*, strquerylanguage : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemeventsource : ISWbemEventSource*) : HRESULT
    @lpVtbl.value.exec_notification_query.call(this, strquery, strquerylanguage, iflags, objwbemnamedvalueset, objwbemeventsource)
  end
  def exec_notification_query_async(this : ISWbemServicesEx*, objwbemsink : IDispatch, strquery : UInt8*, strquerylanguage : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.exec_notification_query_async.call(this, objwbemsink, strquery, strquerylanguage, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def exec_method(this : ISWbemServicesEx*, strobjectpath : UInt8*, strmethodname : UInt8*, objwbeminparameters : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemoutparameters : ISWbemObject*) : HRESULT
    @lpVtbl.value.exec_method.call(this, strobjectpath, strmethodname, objwbeminparameters, iflags, objwbemnamedvalueset, objwbemoutparameters)
  end
  def exec_method_async(this : ISWbemServicesEx*, objwbemsink : IDispatch, strobjectpath : UInt8*, strmethodname : UInt8*, objwbeminparameters : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.exec_method_async.call(this, objwbemsink, strobjectpath, strmethodname, objwbeminparameters, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def get_security_(this : ISWbemServicesEx*, objwbemsecurity : ISWbemSecurity*) : HRESULT
    @lpVtbl.value.get_security_.call(this, objwbemsecurity)
  end
  def put(this : ISWbemServicesEx*, objwbemobject : ISWbemObjectEx, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectpath : ISWbemObjectPath*) : HRESULT
    @lpVtbl.value.put.call(this, objwbemobject, iflags, objwbemnamedvalueset, objwbemobjectpath)
  end
  def put_async(this : ISWbemServicesEx*, objwbemsink : ISWbemSink, objwbemobject : ISWbemObjectEx, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.put_async.call(this, objwbemsink, objwbemobject, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
end
struct LibWin32::ISWbemObjectEx
  def query_interface(this : ISWbemObjectEx*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemObjectEx*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemObjectEx*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemObjectEx*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemObjectEx*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemObjectEx*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemObjectEx*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_(this : ISWbemObjectEx*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectpath : ISWbemObjectPath*) : HRESULT
    @lpVtbl.value.put_.call(this, iflags, objwbemnamedvalueset, objwbemobjectpath)
  end
  def put_async_(this : ISWbemObjectEx*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.put_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def delete_(this : ISWbemObjectEx*, iflags : Int32, objwbemnamedvalueset : IDispatch) : HRESULT
    @lpVtbl.value.delete_.call(this, iflags, objwbemnamedvalueset)
  end
  def delete_async_(this : ISWbemObjectEx*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.delete_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def instances_(this : ISWbemObjectEx*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.instances_.call(this, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def instances_async_(this : ISWbemObjectEx*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.instances_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def subclasses_(this : ISWbemObjectEx*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.subclasses_.call(this, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def subclasses_async_(this : ISWbemObjectEx*, objwbemsink : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.subclasses_async_.call(this, objwbemsink, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def associators_(this : ISWbemObjectEx*, strassocclass : UInt8*, strresultclass : UInt8*, strresultrole : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredassocqualifier : UInt8*, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.associators_.call(this, strassocclass, strresultclass, strresultrole, strrole, bclassesonly, bschemaonly, strrequiredassocqualifier, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def associators_async_(this : ISWbemObjectEx*, objwbemsink : IDispatch, strassocclass : UInt8*, strresultclass : UInt8*, strresultrole : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredassocqualifier : UInt8*, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.associators_async_.call(this, objwbemsink, strassocclass, strresultclass, strresultrole, strrole, bclassesonly, bschemaonly, strrequiredassocqualifier, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def references_(this : ISWbemObjectEx*, strresultclass : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.references_.call(this, strresultclass, strrole, bclassesonly, bschemaonly, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemobjectset)
  end
  def references_async_(this : ISWbemObjectEx*, objwbemsink : IDispatch, strresultclass : UInt8*, strrole : UInt8*, bclassesonly : Int16, bschemaonly : Int16, strrequiredqualifier : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.references_async_.call(this, objwbemsink, strresultclass, strrole, bclassesonly, bschemaonly, strrequiredqualifier, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def exec_method_(this : ISWbemObjectEx*, strmethodname : UInt8*, objwbeminparameters : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemoutparameters : ISWbemObject*) : HRESULT
    @lpVtbl.value.exec_method_.call(this, strmethodname, objwbeminparameters, iflags, objwbemnamedvalueset, objwbemoutparameters)
  end
  def exec_method_async_(this : ISWbemObjectEx*, objwbemsink : IDispatch, strmethodname : UInt8*, objwbeminparameters : IDispatch, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemasynccontext : IDispatch) : HRESULT
    @lpVtbl.value.exec_method_async_.call(this, objwbemsink, strmethodname, objwbeminparameters, iflags, objwbemnamedvalueset, objwbemasynccontext)
  end
  def clone_(this : ISWbemObjectEx*, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.clone_.call(this, objwbemobject)
  end
  def get_object_text_(this : ISWbemObjectEx*, iflags : Int32, strobjecttext : UInt8**) : HRESULT
    @lpVtbl.value.get_object_text_.call(this, iflags, strobjecttext)
  end
  def spawn_derived_class_(this : ISWbemObjectEx*, iflags : Int32, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.spawn_derived_class_.call(this, iflags, objwbemobject)
  end
  def spawn_instance_(this : ISWbemObjectEx*, iflags : Int32, objwbemobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.spawn_instance_.call(this, iflags, objwbemobject)
  end
  def compare_to_(this : ISWbemObjectEx*, objwbemobject : IDispatch, iflags : Int32, bresult : Int16*) : HRESULT
    @lpVtbl.value.compare_to_.call(this, objwbemobject, iflags, bresult)
  end
  def get_qualifiers_(this : ISWbemObjectEx*, objwbemqualifierset : ISWbemQualifierSet*) : HRESULT
    @lpVtbl.value.get_qualifiers_.call(this, objwbemqualifierset)
  end
  def get_properties_(this : ISWbemObjectEx*, objwbempropertyset : ISWbemPropertySet*) : HRESULT
    @lpVtbl.value.get_properties_.call(this, objwbempropertyset)
  end
  def get_methods_(this : ISWbemObjectEx*, objwbemmethodset : ISWbemMethodSet*) : HRESULT
    @lpVtbl.value.get_methods_.call(this, objwbemmethodset)
  end
  def get_derivation_(this : ISWbemObjectEx*, strclassnamearray : VARIANT*) : HRESULT
    @lpVtbl.value.get_derivation_.call(this, strclassnamearray)
  end
  def get_path_(this : ISWbemObjectEx*, objwbemobjectpath : ISWbemObjectPath*) : HRESULT
    @lpVtbl.value.get_path_.call(this, objwbemobjectpath)
  end
  def get_security_(this : ISWbemObjectEx*, objwbemsecurity : ISWbemSecurity*) : HRESULT
    @lpVtbl.value.get_security_.call(this, objwbemsecurity)
  end
  def refresh_(this : ISWbemObjectEx*, iflags : Int32, objwbemnamedvalueset : IDispatch) : HRESULT
    @lpVtbl.value.refresh_.call(this, iflags, objwbemnamedvalueset)
  end
  def get_system_properties_(this : ISWbemObjectEx*, objwbempropertyset : ISWbemPropertySet*) : HRESULT
    @lpVtbl.value.get_system_properties_.call(this, objwbempropertyset)
  end
  def get_text_(this : ISWbemObjectEx*, iobjecttextformat : WbemObjectTextFormatEnum, iflags : Int32, objwbemnamedvalueset : IDispatch, bstext : UInt8**) : HRESULT
    @lpVtbl.value.get_text_.call(this, iobjecttextformat, iflags, objwbemnamedvalueset, bstext)
  end
  def set_from_text_(this : ISWbemObjectEx*, bstext : UInt8*, iobjecttextformat : WbemObjectTextFormatEnum, iflags : Int32, objwbemnamedvalueset : IDispatch) : HRESULT
    @lpVtbl.value.set_from_text_.call(this, bstext, iobjecttextformat, iflags, objwbemnamedvalueset)
  end
end
struct LibWin32::ISWbemDateTime
  def query_interface(this : ISWbemDateTime*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemDateTime*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemDateTime*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemDateTime*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemDateTime*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemDateTime*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemDateTime*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_value(this : ISWbemDateTime*, strvalue : UInt8**) : HRESULT
    @lpVtbl.value.get_value.call(this, strvalue)
  end
  def put_value(this : ISWbemDateTime*, strvalue : UInt8*) : HRESULT
    @lpVtbl.value.put_value.call(this, strvalue)
  end
  def get_year(this : ISWbemDateTime*, iyear : Int32*) : HRESULT
    @lpVtbl.value.get_year.call(this, iyear)
  end
  def put_year(this : ISWbemDateTime*, iyear : Int32) : HRESULT
    @lpVtbl.value.put_year.call(this, iyear)
  end
  def get_year_specified(this : ISWbemDateTime*, byearspecified : Int16*) : HRESULT
    @lpVtbl.value.get_year_specified.call(this, byearspecified)
  end
  def put_year_specified(this : ISWbemDateTime*, byearspecified : Int16) : HRESULT
    @lpVtbl.value.put_year_specified.call(this, byearspecified)
  end
  def get_month(this : ISWbemDateTime*, imonth : Int32*) : HRESULT
    @lpVtbl.value.get_month.call(this, imonth)
  end
  def put_month(this : ISWbemDateTime*, imonth : Int32) : HRESULT
    @lpVtbl.value.put_month.call(this, imonth)
  end
  def get_month_specified(this : ISWbemDateTime*, bmonthspecified : Int16*) : HRESULT
    @lpVtbl.value.get_month_specified.call(this, bmonthspecified)
  end
  def put_month_specified(this : ISWbemDateTime*, bmonthspecified : Int16) : HRESULT
    @lpVtbl.value.put_month_specified.call(this, bmonthspecified)
  end
  def get_day(this : ISWbemDateTime*, iday : Int32*) : HRESULT
    @lpVtbl.value.get_day.call(this, iday)
  end
  def put_day(this : ISWbemDateTime*, iday : Int32) : HRESULT
    @lpVtbl.value.put_day.call(this, iday)
  end
  def get_day_specified(this : ISWbemDateTime*, bdayspecified : Int16*) : HRESULT
    @lpVtbl.value.get_day_specified.call(this, bdayspecified)
  end
  def put_day_specified(this : ISWbemDateTime*, bdayspecified : Int16) : HRESULT
    @lpVtbl.value.put_day_specified.call(this, bdayspecified)
  end
  def get_hours(this : ISWbemDateTime*, ihours : Int32*) : HRESULT
    @lpVtbl.value.get_hours.call(this, ihours)
  end
  def put_hours(this : ISWbemDateTime*, ihours : Int32) : HRESULT
    @lpVtbl.value.put_hours.call(this, ihours)
  end
  def get_hours_specified(this : ISWbemDateTime*, bhoursspecified : Int16*) : HRESULT
    @lpVtbl.value.get_hours_specified.call(this, bhoursspecified)
  end
  def put_hours_specified(this : ISWbemDateTime*, bhoursspecified : Int16) : HRESULT
    @lpVtbl.value.put_hours_specified.call(this, bhoursspecified)
  end
  def get_minutes(this : ISWbemDateTime*, iminutes : Int32*) : HRESULT
    @lpVtbl.value.get_minutes.call(this, iminutes)
  end
  def put_minutes(this : ISWbemDateTime*, iminutes : Int32) : HRESULT
    @lpVtbl.value.put_minutes.call(this, iminutes)
  end
  def get_minutes_specified(this : ISWbemDateTime*, bminutesspecified : Int16*) : HRESULT
    @lpVtbl.value.get_minutes_specified.call(this, bminutesspecified)
  end
  def put_minutes_specified(this : ISWbemDateTime*, bminutesspecified : Int16) : HRESULT
    @lpVtbl.value.put_minutes_specified.call(this, bminutesspecified)
  end
  def get_seconds(this : ISWbemDateTime*, iseconds : Int32*) : HRESULT
    @lpVtbl.value.get_seconds.call(this, iseconds)
  end
  def put_seconds(this : ISWbemDateTime*, iseconds : Int32) : HRESULT
    @lpVtbl.value.put_seconds.call(this, iseconds)
  end
  def get_seconds_specified(this : ISWbemDateTime*, bsecondsspecified : Int16*) : HRESULT
    @lpVtbl.value.get_seconds_specified.call(this, bsecondsspecified)
  end
  def put_seconds_specified(this : ISWbemDateTime*, bsecondsspecified : Int16) : HRESULT
    @lpVtbl.value.put_seconds_specified.call(this, bsecondsspecified)
  end
  def get_microseconds(this : ISWbemDateTime*, imicroseconds : Int32*) : HRESULT
    @lpVtbl.value.get_microseconds.call(this, imicroseconds)
  end
  def put_microseconds(this : ISWbemDateTime*, imicroseconds : Int32) : HRESULT
    @lpVtbl.value.put_microseconds.call(this, imicroseconds)
  end
  def get_microseconds_specified(this : ISWbemDateTime*, bmicrosecondsspecified : Int16*) : HRESULT
    @lpVtbl.value.get_microseconds_specified.call(this, bmicrosecondsspecified)
  end
  def put_microseconds_specified(this : ISWbemDateTime*, bmicrosecondsspecified : Int16) : HRESULT
    @lpVtbl.value.put_microseconds_specified.call(this, bmicrosecondsspecified)
  end
  def get_utc(this : ISWbemDateTime*, iutc : Int32*) : HRESULT
    @lpVtbl.value.get_utc.call(this, iutc)
  end
  def put_utc(this : ISWbemDateTime*, iutc : Int32) : HRESULT
    @lpVtbl.value.put_utc.call(this, iutc)
  end
  def get_utc_specified(this : ISWbemDateTime*, butcspecified : Int16*) : HRESULT
    @lpVtbl.value.get_utc_specified.call(this, butcspecified)
  end
  def put_utc_specified(this : ISWbemDateTime*, butcspecified : Int16) : HRESULT
    @lpVtbl.value.put_utc_specified.call(this, butcspecified)
  end
  def get_is_interval(this : ISWbemDateTime*, bisinterval : Int16*) : HRESULT
    @lpVtbl.value.get_is_interval.call(this, bisinterval)
  end
  def put_is_interval(this : ISWbemDateTime*, bisinterval : Int16) : HRESULT
    @lpVtbl.value.put_is_interval.call(this, bisinterval)
  end
  def get_var_date(this : ISWbemDateTime*, bislocal : Int16, dvardate : Float64*) : HRESULT
    @lpVtbl.value.get_var_date.call(this, bislocal, dvardate)
  end
  def set_var_date(this : ISWbemDateTime*, dvardate : Float64, bislocal : Int16) : HRESULT
    @lpVtbl.value.set_var_date.call(this, dvardate, bislocal)
  end
  def get_file_time(this : ISWbemDateTime*, bislocal : Int16, strfiletime : UInt8**) : HRESULT
    @lpVtbl.value.get_file_time.call(this, bislocal, strfiletime)
  end
  def set_file_time(this : ISWbemDateTime*, strfiletime : UInt8*, bislocal : Int16) : HRESULT
    @lpVtbl.value.set_file_time.call(this, strfiletime, bislocal)
  end
end
struct LibWin32::ISWbemRefresher
  def query_interface(this : ISWbemRefresher*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemRefresher*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemRefresher*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemRefresher*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemRefresher*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemRefresher*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemRefresher*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get__new_enum(this : ISWbemRefresher*, punk : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.call(this, punk)
  end
  def item(this : ISWbemRefresher*, iindex : Int32, objwbemrefreshableitem : ISWbemRefreshableItem*) : HRESULT
    @lpVtbl.value.item.call(this, iindex, objwbemrefreshableitem)
  end
  def get_count(this : ISWbemRefresher*, icount : Int32*) : HRESULT
    @lpVtbl.value.get_count.call(this, icount)
  end
  def add(this : ISWbemRefresher*, objwbemservices : ISWbemServicesEx, bsinstancepath : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemrefreshableitem : ISWbemRefreshableItem*) : HRESULT
    @lpVtbl.value.add.call(this, objwbemservices, bsinstancepath, iflags, objwbemnamedvalueset, objwbemrefreshableitem)
  end
  def add_enum(this : ISWbemRefresher*, objwbemservices : ISWbemServicesEx, bsclassname : UInt8*, iflags : Int32, objwbemnamedvalueset : IDispatch, objwbemrefreshableitem : ISWbemRefreshableItem*) : HRESULT
    @lpVtbl.value.add_enum.call(this, objwbemservices, bsclassname, iflags, objwbemnamedvalueset, objwbemrefreshableitem)
  end
  def remove(this : ISWbemRefresher*, iindex : Int32, iflags : Int32) : HRESULT
    @lpVtbl.value.remove.call(this, iindex, iflags)
  end
  def refresh(this : ISWbemRefresher*, iflags : Int32) : HRESULT
    @lpVtbl.value.refresh.call(this, iflags)
  end
  def get_auto_reconnect(this : ISWbemRefresher*, bcount : Int16*) : HRESULT
    @lpVtbl.value.get_auto_reconnect.call(this, bcount)
  end
  def put_auto_reconnect(this : ISWbemRefresher*, bcount : Int16) : HRESULT
    @lpVtbl.value.put_auto_reconnect.call(this, bcount)
  end
  def delete_all(this : ISWbemRefresher*) : HRESULT
    @lpVtbl.value.delete_all.call(this)
  end
end
struct LibWin32::ISWbemRefreshableItem
  def query_interface(this : ISWbemRefreshableItem*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : ISWbemRefreshableItem*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : ISWbemRefreshableItem*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : ISWbemRefreshableItem*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : ISWbemRefreshableItem*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : ISWbemRefreshableItem*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : ISWbemRefreshableItem*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_index(this : ISWbemRefreshableItem*, iindex : Int32*) : HRESULT
    @lpVtbl.value.get_index.call(this, iindex)
  end
  def get_refresher(this : ISWbemRefreshableItem*, objwbemrefresher : ISWbemRefresher*) : HRESULT
    @lpVtbl.value.get_refresher.call(this, objwbemrefresher)
  end
  def get_is_set(this : ISWbemRefreshableItem*, bisset : Int16*) : HRESULT
    @lpVtbl.value.get_is_set.call(this, bisset)
  end
  def get_object(this : ISWbemRefreshableItem*, objwbemobject : ISWbemObjectEx*) : HRESULT
    @lpVtbl.value.get_object.call(this, objwbemobject)
  end
  def get_object_set(this : ISWbemRefreshableItem*, objwbemobjectset : ISWbemObjectSet*) : HRESULT
    @lpVtbl.value.get_object_set.call(this, objwbemobjectset)
  end
  def remove(this : ISWbemRefreshableItem*, iflags : Int32) : HRESULT
    @lpVtbl.value.remove.call(this, iflags)
  end
end
struct LibWin32::IWMIExtension
  def query_interface(this : IWMIExtension*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWMIExtension*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWMIExtension*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def get_type_info_count(this : IWMIExtension*, pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.call(this, pctinfo)
  end
  def get_type_info(this : IWMIExtension*, itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.call(this, itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(this : IWMIExtension*, riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.call(this, riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(this : IWMIExtension*, dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.call(this, dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_wmi_object_path(this : IWMIExtension*, strwmiobjectpath : UInt8**) : HRESULT
    @lpVtbl.value.get_wmi_object_path.call(this, strwmiobjectpath)
  end
  def get_wmi_object(this : IWMIExtension*, objwmiobject : ISWbemObject*) : HRESULT
    @lpVtbl.value.get_wmi_object.call(this, objwmiobject)
  end
  def get_wmi_services(this : IWMIExtension*, objwmiservices : ISWbemServices*) : HRESULT
    @lpVtbl.value.get_wmi_services.call(this, objwmiservices)
  end
end
struct LibWin32::IWbemTransport
  def query_interface(this : IWbemTransport*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemTransport*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemTransport*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def initialize(this : IWbemTransport*) : HRESULT
    @lpVtbl.value.initialize.call(this)
  end
end
struct LibWin32::IWbemLevel1Login
  def query_interface(this : IWbemLevel1Login*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemLevel1Login*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemLevel1Login*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def establish_position(this : IWbemLevel1Login*, wszlocalelist : LibC::LPWSTR, dwnumlocales : UInt32, reserved : UInt32*) : HRESULT
    @lpVtbl.value.establish_position.call(this, wszlocalelist, dwnumlocales, reserved)
  end
  def request_challenge(this : IWbemLevel1Login*, wsznetworkresource : LibC::LPWSTR, wszuser : LibC::LPWSTR, nonce : UInt8*) : HRESULT
    @lpVtbl.value.request_challenge.call(this, wsznetworkresource, wszuser, nonce)
  end
  def wbem_login(this : IWbemLevel1Login*, wszpreferredlocale : LibC::LPWSTR, accesstoken : UInt8*, lflags : Int32, pctx : IWbemContext, ppnamespace : IWbemServices*) : HRESULT
    @lpVtbl.value.wbem_login.call(this, wszpreferredlocale, accesstoken, lflags, pctx, ppnamespace)
  end
  def ntlm_login(this : IWbemLevel1Login*, wsznetworkresource : LibC::LPWSTR, wszpreferredlocale : LibC::LPWSTR, lflags : Int32, pctx : IWbemContext, ppnamespace : IWbemServices*) : HRESULT
    @lpVtbl.value.ntlm_login.call(this, wsznetworkresource, wszpreferredlocale, lflags, pctx, ppnamespace)
  end
end
struct LibWin32::IWbemConnectorLogin
  def query_interface(this : IWbemConnectorLogin*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemConnectorLogin*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemConnectorLogin*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def connector_login(this : IWbemConnectorLogin*, wsznetworkresource : LibC::LPWSTR, wszpreferredlocale : LibC::LPWSTR, lflags : Int32, pctx : IWbemContext, riid : Guid*, pinterface : Void**) : HRESULT
    @lpVtbl.value.connector_login.call(this, wsznetworkresource, wszpreferredlocale, lflags, pctx, riid, pinterface)
  end
end
struct LibWin32::IWbemAddressResolution
  def query_interface(this : IWbemAddressResolution*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemAddressResolution*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemAddressResolution*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def resolve(this : IWbemAddressResolution*, wsznamespacepath : LibC::LPWSTR, wszaddresstype : LibC::LPWSTR, pdwaddresslength : UInt32*, pabbinaryaddress : UInt8**) : HRESULT
    @lpVtbl.value.resolve.call(this, wsznamespacepath, wszaddresstype, pdwaddresslength, pabbinaryaddress)
  end
end
struct LibWin32::IWbemClientTransport
  def query_interface(this : IWbemClientTransport*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemClientTransport*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemClientTransport*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def connect_server(this : IWbemClientTransport*, straddresstype : UInt8*, dwbinaryaddresslength : UInt32, abbinaryaddress : UInt8*, strnetworkresource : UInt8*, struser : UInt8*, strpassword : UInt8*, strlocale : UInt8*, lsecurityflags : Int32, strauthority : UInt8*, pctx : IWbemContext, ppnamespace : IWbemServices*) : HRESULT
    @lpVtbl.value.connect_server.call(this, straddresstype, dwbinaryaddresslength, abbinaryaddress, strnetworkresource, struser, strpassword, strlocale, lsecurityflags, strauthority, pctx, ppnamespace)
  end
end
struct LibWin32::IWbemClientConnectionTransport
  def query_interface(this : IWbemClientConnectionTransport*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemClientConnectionTransport*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemClientConnectionTransport*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def open(this : IWbemClientConnectionTransport*, straddresstype : UInt8*, dwbinaryaddresslength : UInt32, abbinaryaddress : UInt8*, strobject : UInt8*, struser : UInt8*, strpassword : UInt8*, strlocale : UInt8*, lflags : Int32, pctx : IWbemContext, riid : Guid*, pinterface : Void**, pcallres : IWbemCallResult*) : HRESULT
    @lpVtbl.value.open.call(this, straddresstype, dwbinaryaddresslength, abbinaryaddress, strobject, struser, strpassword, strlocale, lflags, pctx, riid, pinterface, pcallres)
  end
  def open_async(this : IWbemClientConnectionTransport*, straddresstype : UInt8*, dwbinaryaddresslength : UInt32, abbinaryaddress : UInt8*, strobject : UInt8*, struser : UInt8*, strpassword : UInt8*, strlocale : UInt8*, lflags : Int32, pctx : IWbemContext, riid : Guid*, presponsehandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.open_async.call(this, straddresstype, dwbinaryaddresslength, abbinaryaddress, strobject, struser, strpassword, strlocale, lflags, pctx, riid, presponsehandler)
  end
  def cancel(this : IWbemClientConnectionTransport*, lflags : Int32, phandler : IWbemObjectSink) : HRESULT
    @lpVtbl.value.cancel.call(this, lflags, phandler)
  end
end
struct LibWin32::IWbemConstructClassObject
  def query_interface(this : IWbemConstructClassObject*, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.call(this, riid, ppvobject)
  end
  def add_ref(this : IWbemConstructClassObject*) : UInt32
    @lpVtbl.value.add_ref.call(this)
  end
  def release(this : IWbemConstructClassObject*) : UInt32
    @lpVtbl.value.release.call(this)
  end
  def set_inheritance_chain(this : IWbemConstructClassObject*, lnumantecedents : Int32, awszantecedents : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.set_inheritance_chain.call(this, lnumantecedents, awszantecedents)
  end
  def set_property_origin(this : IWbemConstructClassObject*, wszpropertyname : LibC::LPWSTR, loriginindex : Int32) : HRESULT
    @lpVtbl.value.set_property_origin.call(this, wszpropertyname, loriginindex)
  end
  def set_method_origin(this : IWbemConstructClassObject*, wszmethodname : LibC::LPWSTR, loriginindex : Int32) : HRESULT
    @lpVtbl.value.set_method_origin.call(this, wszmethodname, loriginindex)
  end
  def set_server_namespace(this : IWbemConstructClassObject*, wszserver : LibC::LPWSTR, wsznamespace : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_server_namespace.call(this, wszserver, wsznamespace)
  end
end
