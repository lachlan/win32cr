require "../networking/winsock.cr"
require "../foundation.cr"
require "../security/cryptography.cr"
require "../networkmanagement/iphelper.cr"

@[Link("delayimp")]
@[Link("user32")]
@[Link(ldflags: "/IGNORE:4199")]
@[Link(ldflags: "/DELAYLOAD:rasapi32.dll")]
@[Link(ldflags: "/DELAYLOAD:rasdlg.dll")]
@[Link(ldflags: "/DELAYLOAD:mprapi.dll")]
@[Link(ldflags: "/DELAYLOAD:rtm.dll")]
lib LibWin32
  alias HRASCONN = LibC::IntPtrT

  RASNAP_ProbationTime = 1_u32
  RASTUNNELENDPOINT_UNKNOWN = 0_u32
  RASTUNNELENDPOINT_IPv4 = 1_u32
  RASTUNNELENDPOINT_IPv6 = 2_u32
  RAS_MaxDeviceType = 16_u32
  RAS_MaxPhoneNumber = 128_u32
  RAS_MaxIpAddress = 15_u32
  RAS_MaxIpxAddress = 21_u32
  RAS_MaxEntryName = 256_u32
  RAS_MaxDeviceName = 128_u32
  RAS_MaxCallbackNumber = 128_u32
  RAS_MaxAreaCode = 10_u32
  RAS_MaxPadType = 32_u32
  RAS_MaxX25Address = 200_u32
  RAS_MaxFacilities = 200_u32
  RAS_MaxUserData = 200_u32
  RAS_MaxReplyMessage = 1024_u32
  RAS_MaxDnsSuffix = 256_u32
  RASCF_AllUsers = 1_u32
  RASCF_GlobalCreds = 2_u32
  RASCF_OwnerKnown = 4_u32
  RASCF_OwnerMatch = 8_u32
  RAS_MaxIDSize = 256_u32
  RASCS_PAUSED = 4096_u32
  RASCS_DONE = 8192_u32
  RASCSS_DONE = 8192_u32
  RDEOPT_UsePrefixSuffix = 1_u32
  RDEOPT_PausedStates = 2_u32
  RDEOPT_IgnoreModemSpeaker = 4_u32
  RDEOPT_SetModemSpeaker = 8_u32
  RDEOPT_IgnoreSoftwareCompression = 16_u32
  RDEOPT_SetSoftwareCompression = 32_u32
  RDEOPT_DisableConnectedUI = 64_u32
  RDEOPT_DisableReconnectUI = 128_u32
  RDEOPT_DisableReconnect = 256_u32
  RDEOPT_NoUser = 512_u32
  RDEOPT_PauseOnScript = 1024_u32
  RDEOPT_Router = 2048_u32
  RDEOPT_CustomDial = 4096_u32
  RDEOPT_UseCustomScripting = 8192_u32
  RDEOPT_InvokeAutoTriggerCredentialUI = 16384_u32
  RDEOPT_EapInfoCryptInCapable = 32768_u32
  REN_User = 0_u32
  REN_AllUsers = 1_u32
  RASIPO_VJ = 1_u32
  RASLCPO_PFC = 1_u32
  RASLCPO_ACFC = 2_u32
  RASLCPO_SSHF = 4_u32
  RASLCPO_DES_56 = 8_u32
  RASLCPO_3_DES = 16_u32
  RASLCPO_AES_128 = 32_u32
  RASLCPO_AES_256 = 64_u32
  RASLCPO_AES_192 = 128_u32
  RASLCPO_GCM_AES_128 = 256_u32
  RASLCPO_GCM_AES_192 = 512_u32
  RASLCPO_GCM_AES_256 = 1024_u32
  RASCCPCA_MPPC = 6_u32
  RASCCPCA_STAC = 5_u32
  RASCCPO_Compression = 1_u32
  RASCCPO_HistoryLess = 2_u32
  RASCCPO_Encryption56bit = 16_u32
  RASCCPO_Encryption40bit = 32_u32
  RASCCPO_Encryption128bit = 64_u32
  RASIKEv2_AUTH_MACHINECERTIFICATES = 1_u32
  RASIKEv2_AUTH_EAP = 2_u32
  RASIKEv2_AUTH_PSK = 3_u32
  WM_RASDIALEVENT = 52429_u32
  ET_None = 0_u32
  ET_Require = 1_u32
  ET_RequireMax = 2_u32
  ET_Optional = 3_u32
  VS_Default = 0_u32
  VS_PptpOnly = 1_u32
  VS_PptpFirst = 2_u32
  VS_L2tpOnly = 3_u32
  VS_L2tpFirst = 4_u32
  VS_SstpOnly = 5_u32
  VS_SstpFirst = 6_u32
  VS_Ikev2Only = 7_u32
  VS_Ikev2First = 8_u32
  VS_GREOnly = 9_u32
  VS_PptpSstp = 12_u32
  VS_L2tpSstp = 13_u32
  VS_Ikev2Sstp = 14_u32
  VS_ProtocolList = 15_u32
  RASEO_UseCountryAndAreaCodes = 1_u32
  RASEO_SpecificIpAddr = 2_u32
  RASEO_SpecificNameServers = 4_u32
  RASEO_IpHeaderCompression = 8_u32
  RASEO_RemoteDefaultGateway = 16_u32
  RASEO_DisableLcpExtensions = 32_u32
  RASEO_TerminalBeforeDial = 64_u32
  RASEO_TerminalAfterDial = 128_u32
  RASEO_ModemLights = 256_u32
  RASEO_SwCompression = 512_u32
  RASEO_RequireEncryptedPw = 1024_u32
  RASEO_RequireMsEncryptedPw = 2048_u32
  RASEO_RequireDataEncryption = 4096_u32
  RASEO_NetworkLogon = 8192_u32
  RASEO_UseLogonCredentials = 16384_u32
  RASEO_PromoteAlternates = 32768_u32
  RASEO_SecureLocalFiles = 65536_u32
  RASEO_RequireEAP = 131072_u32
  RASEO_RequirePAP = 262144_u32
  RASEO_RequireSPAP = 524288_u32
  RASEO_Custom = 1048576_u32
  RASEO_PreviewPhoneNumber = 2097152_u32
  RASEO_SharedPhoneNumbers = 8388608_u32
  RASEO_PreviewUserPw = 16777216_u32
  RASEO_PreviewDomain = 33554432_u32
  RASEO_ShowDialingProgress = 67108864_u32
  RASEO_RequireCHAP = 134217728_u32
  RASEO_RequireMsCHAP = 268435456_u32
  RASEO_RequireMsCHAP2 = 536870912_u32
  RASEO_RequireW95MSCHAP = 1073741824_u32
  RASEO_CustomScript = 2147483648_u32
  RASEO2_SecureFileAndPrint = 1_u32
  RASEO2_SecureClientForMSNet = 2_u32
  RASEO2_DontNegotiateMultilink = 4_u32
  RASEO2_DontUseRasCredentials = 8_u32
  RASEO2_UsePreSharedKey = 16_u32
  RASEO2_Internet = 32_u32
  RASEO2_DisableNbtOverIP = 64_u32
  RASEO2_UseGlobalDeviceSettings = 128_u32
  RASEO2_ReconnectIfDropped = 256_u32
  RASEO2_SharePhoneNumbers = 512_u32
  RASEO2_SecureRoutingCompartment = 1024_u32
  RASEO2_UseTypicalSettings = 2048_u32
  RASEO2_IPv6SpecificNameServers = 4096_u32
  RASEO2_IPv6RemoteDefaultGateway = 8192_u32
  RASEO2_RegisterIpWithDNS = 16384_u32
  RASEO2_UseDNSSuffixForRegistration = 32768_u32
  RASEO2_IPv4ExplicitMetric = 65536_u32
  RASEO2_IPv6ExplicitMetric = 131072_u32
  RASEO2_DisableIKENameEkuCheck = 262144_u32
  RASEO2_DisableClassBasedStaticRoute = 524288_u32
  RASEO2_SpecificIPv6Addr = 1048576_u32
  RASEO2_DisableMobility = 2097152_u32
  RASEO2_RequireMachineCertificates = 4194304_u32
  RASEO2_UsePreSharedKeyForIkev2Initiator = 8388608_u32
  RASEO2_UsePreSharedKeyForIkev2Responder = 16777216_u32
  RASEO2_CacheCredentials = 33554432_u32
  RASEO2_AutoTriggerCapable = 67108864_u32
  RASEO2_IsThirdPartyProfile = 134217728_u32
  RASEO2_AuthTypeIsOtp = 268435456_u32
  RASEO2_IsAlwaysOn = 536870912_u32
  RASEO2_IsPrivateNetwork = 1073741824_u32
  RASEO2_PlumbIKEv2TSAsRoutes = 2147483648_u32
  RASNP_NetBEUI = 1_u32
  RASNP_Ipx = 2_u32
  RASNP_Ip = 4_u32
  RASNP_Ipv6 = 8_u32
  RASFP_Ppp = 1_u32
  RASFP_Slip = 2_u32
  RASFP_Ras = 4_u32
  RASET_Phone = 1_u32
  RASET_Vpn = 2_u32
  RASET_Direct = 3_u32
  RASET_Internet = 4_u32
  RASET_Broadband = 5_u32
  RASCN_Connection = 1_u32
  RASCN_Disconnection = 2_u32
  RASCN_BandwidthAdded = 4_u32
  RASCN_BandwidthRemoved = 8_u32
  RASCN_Dormant = 16_u32
  RASCN_ReConnection = 32_u32
  RASCN_EPDGPacketArrival = 64_u32
  RASIDS_Disabled = 4294967295_u32
  RASIDS_UseGlobalValue = 0_u32
  RASADFLG_PositionDlg = 1_u32
  RASCM_UserName = 1_u32
  RASCM_Password = 2_u32
  RASCM_Domain = 4_u32
  RASCM_DefaultCreds = 8_u32
  RASCM_PreSharedKey = 16_u32
  RASCM_ServerPreSharedKey = 32_u32
  RASCM_DDMPreSharedKey = 64_u32
  RASADP_DisableConnectionQuery = 0_u32
  RASADP_LoginSessionDisable = 1_u32
  RASADP_SavedAddressesLimit = 2_u32
  RASADP_FailedConnectionTimeout = 3_u32
  RASADP_ConnectionQueryTimeout = 4_u32
  RASEAPF_NonInteractive = 2_u32
  RASEAPF_Logon = 4_u32
  RASEAPF_Preview = 8_u32
  RCD_SingleUser = 0_u32
  RCD_AllUsers = 1_u32
  RCD_Eap = 2_u32
  RCD_Logon = 4_u32
  RASPBDEVENT_AddEntry = 1_u32
  RASPBDEVENT_EditEntry = 2_u32
  RASPBDEVENT_RemoveEntry = 3_u32
  RASPBDEVENT_DialEntry = 4_u32
  RASPBDEVENT_EditGlobals = 5_u32
  RASPBDEVENT_NoUser = 6_u32
  RASPBDEVENT_NoUserEdit = 7_u32
  RASNOUSER_SmartCard = 1_u32
  RASPBDFLAG_PositionDlg = 1_u32
  RASPBDFLAG_ForceCloseOnDial = 2_u32
  RASPBDFLAG_NoUser = 16_u32
  RASPBDFLAG_UpdateDefaults = 2147483648_u32
  RASEDFLAG_PositionDlg = 1_u32
  RASEDFLAG_NewEntry = 2_u32
  RASEDFLAG_CloneEntry = 4_u32
  RASEDFLAG_NoRename = 8_u32
  RASEDFLAG_ShellOwned = 1073741824_u32
  RASEDFLAG_NewPhoneEntry = 16_u32
  RASEDFLAG_NewTunnelEntry = 32_u32
  RASEDFLAG_NewDirectEntry = 64_u32
  RASEDFLAG_NewBroadbandEntry = 128_u32
  RASEDFLAG_InternetEntry = 256_u32
  RASEDFLAG_NAT = 512_u32
  RASEDFLAG_IncomingConnection = 1024_u32
  RASDDFLAG_PositionDlg = 1_u32
  RASDDFLAG_NoPrompt = 2_u32
  RASDDFLAG_AoacRedial = 4_u32
  RASDDFLAG_LinkFailure = 2147483648_u32
  PID_IPX = 43_u32
  PID_IP = 33_u32
  PID_IPV6 = 87_u32
  PID_NBF = 63_u32
  PID_ATALK = 41_u32
  MPR_INTERFACE_OUT_OF_RESOURCES = 1_u32
  MPR_INTERFACE_ADMIN_DISABLED = 2_u32
  MPR_INTERFACE_CONNECTION_FAILURE = 4_u32
  MPR_INTERFACE_SERVICE_PAUSED = 8_u32
  MPR_INTERFACE_DIALOUT_HOURS_RESTRICTION = 16_u32
  MPR_INTERFACE_NO_MEDIA_SENSE = 32_u32
  MPR_INTERFACE_NO_DEVICE = 64_u32
  MPR_MaxDeviceType = 16_u32
  MPR_MaxPhoneNumber = 128_u32
  MPR_MaxIpAddress = 15_u32
  MPR_MaxIpxAddress = 21_u32
  MPR_MaxEntryName = 256_u32
  MPR_MaxDeviceName = 128_u32
  MPR_MaxCallbackNumber = 128_u32
  MPR_MaxAreaCode = 10_u32
  MPR_MaxPadType = 32_u32
  MPR_MaxX25Address = 200_u32
  MPR_MaxFacilities = 200_u32
  MPR_MaxUserData = 200_u32
  MPRIO_SpecificIpAddr = 2_u32
  MPRIO_SpecificNameServers = 4_u32
  MPRIO_IpHeaderCompression = 8_u32
  MPRIO_RemoteDefaultGateway = 16_u32
  MPRIO_DisableLcpExtensions = 32_u32
  MPRIO_SwCompression = 512_u32
  MPRIO_RequireEncryptedPw = 1024_u32
  MPRIO_RequireMsEncryptedPw = 2048_u32
  MPRIO_RequireDataEncryption = 4096_u32
  MPRIO_NetworkLogon = 8192_u32
  MPRIO_PromoteAlternates = 32768_u32
  MPRIO_SecureLocalFiles = 65536_u32
  MPRIO_RequireEAP = 131072_u32
  MPRIO_RequirePAP = 262144_u32
  MPRIO_RequireSPAP = 524288_u32
  MPRIO_SharedPhoneNumbers = 8388608_u32
  MPRIO_RequireCHAP = 134217728_u32
  MPRIO_RequireMsCHAP = 268435456_u32
  MPRIO_RequireMsCHAP2 = 536870912_u32
  MPRIO_IpSecPreSharedKey = 2147483648_u32
  MPRIO_RequireMachineCertificates = 16777216_u32
  MPRIO_UsePreSharedKeyForIkev2Initiator = 33554432_u32
  MPRIO_UsePreSharedKeyForIkev2Responder = 67108864_u32
  MPRNP_Ipx = 2_u32
  MPRNP_Ip = 4_u32
  MPRNP_Ipv6 = 8_u32
  MPRET_Phone = 1_u32
  MPRET_Vpn = 2_u32
  MPRET_Direct = 3_u32
  MPRIDS_Disabled = 4294967295_u32
  MPRIDS_UseGlobalValue = 0_u32
  MPR_VS_Ikev2Only = 7_u32
  MPR_VS_Ikev2First = 8_u32
  MPR_ENABLE_RAS_ON_DEVICE = 1_u32
  MPR_ENABLE_ROUTING_ON_DEVICE = 2_u32
  IPADDRESSLEN = 15_u32
  IPXADDRESSLEN = 22_u32
  ATADDRESSLEN = 32_u32
  MAXIPADRESSLEN = 64_u32
  PPP_IPCP_VJ = 1_u32
  PPP_CCP_COMPRESSION = 1_u32
  PPP_CCP_ENCRYPTION40BITOLD = 16_u32
  PPP_CCP_ENCRYPTION40BIT = 32_u32
  PPP_CCP_ENCRYPTION128BIT = 64_u32
  PPP_CCP_ENCRYPTION56BIT = 128_u32
  PPP_CCP_HISTORYLESS = 16777216_u32
  PPP_LCP_MULTILINK_FRAMING = 1_u32
  PPP_LCP_PFC = 2_u32
  PPP_LCP_ACFC = 4_u32
  PPP_LCP_SSHF = 8_u32
  PPP_LCP_DES_56 = 16_u32
  PPP_LCP_3_DES = 32_u32
  PPP_LCP_AES_128 = 64_u32
  PPP_LCP_AES_256 = 128_u32
  PPP_LCP_AES_192 = 256_u32
  PPP_LCP_GCM_AES_128 = 512_u32
  PPP_LCP_GCM_AES_192 = 1024_u32
  PPP_LCP_GCM_AES_256 = 2048_u32
  RAS_FLAGS_RAS_CONNECTION = 4_u32
  RASPRIV_NoCallback = 1_u32
  RASPRIV_AdminSetCallback = 2_u32
  RASPRIV_CallerSetCallback = 4_u32
  RASPRIV_DialinPrivilege = 8_u32
  RASPRIV2_DialinPolicy = 1_u32
  MPRAPI_IKEV2_AUTH_USING_CERT = 1_u32
  MPRAPI_IKEV2_AUTH_USING_EAP = 2_u32
  MPRAPI_PPP_PROJECTION_INFO_TYPE = 1_u32
  MPRAPI_IKEV2_PROJECTION_INFO_TYPE = 2_u32
  MPRAPI_RAS_CONNECTION_OBJECT_REVISION_1 = 1_u32
  MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_1 = 1_u32
  MPRAPI_IF_CUSTOM_CONFIG_FOR_IKEV2 = 1_u32
  MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_3 = 3_u32
  MPRAPI_MPR_IF_CUSTOM_CONFIG_OBJECT_REVISION_2 = 2_u32
  MPRAPI_IKEV2_SET_TUNNEL_CONFIG_PARAMS = 1_u32
  MPRAPI_L2TP_SET_TUNNEL_CONFIG_PARAMS = 1_u32
  MAX_SSTP_HASH_SIZE = 32_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_1 = 1_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_2 = 2_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_3 = 3_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_4 = 4_u32
  MPRAPI_MPR_SERVER_OBJECT_REVISION_5 = 5_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_1 = 1_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_2 = 2_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_3 = 3_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_4 = 4_u32
  MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_5 = 5_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_PPTP = 1_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_L2TP = 2_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_SSTP = 4_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_IKEV2 = 8_u32
  MPRAPI_SET_CONFIG_PROTOCOL_FOR_GRE = 16_u32
  ALLOW_NO_AUTH = 1_u32
  DO_NOT_ALLOW_NO_AUTH = 0_u32
  MPRAPI_RAS_UPDATE_CONNECTION_OBJECT_REVISION_1 = 1_u32
  MPRAPI_ADMIN_DLL_VERSION_1 = 1_u32
  MPRAPI_ADMIN_DLL_VERSION_2 = 2_u32
  MGM_JOIN_STATE_FLAG = 1_u32
  MGM_FORWARD_STATE_FLAG = 2_u32
  MGM_MFE_STATS_0 = 1_u32
  MGM_MFE_STATS_1 = 2_u32
  RTM_MAX_ADDRESS_SIZE = 16_u32
  RTM_MAX_VIEWS = 32_u32
  RTM_VIEW_ID_UCAST = 0_u32
  RTM_VIEW_ID_MCAST = 1_u32
  RTM_VIEW_MASK_SIZE = 32_u32
  RTM_VIEW_MASK_NONE = 0_u32
  RTM_VIEW_MASK_ANY = 0_u32
  RTM_VIEW_MASK_UCAST = 1_u32
  RTM_VIEW_MASK_MCAST = 2_u32
  RTM_VIEW_MASK_ALL = 4294967295_u32
  IPV6_ADDRESS_LEN_IN_BYTES = 16_u32
  RTM_DEST_FLAG_NATURAL_NET = 1_u32
  RTM_DEST_FLAG_FWD_ENGIN_ADD = 2_u32
  RTM_DEST_FLAG_DONT_FORWARD = 4_u32
  RTM_ROUTE_STATE_CREATED = 0_u32
  RTM_ROUTE_STATE_DELETING = 1_u32
  RTM_ROUTE_STATE_DELETED = 2_u32
  RTM_ROUTE_FLAGS_MARTIAN = 1_u32
  RTM_ROUTE_FLAGS_BLACKHOLE = 2_u32
  RTM_ROUTE_FLAGS_DISCARD = 4_u32
  RTM_ROUTE_FLAGS_INACTIVE = 8_u32
  RTM_ROUTE_FLAGS_LOCAL = 16_u32
  RTM_ROUTE_FLAGS_REMOTE = 32_u32
  RTM_ROUTE_FLAGS_MYSELF = 64_u32
  RTM_ROUTE_FLAGS_LOOPBACK = 128_u32
  RTM_ROUTE_FLAGS_MCAST = 256_u32
  RTM_ROUTE_FLAGS_LOCAL_MCAST = 512_u32
  RTM_ROUTE_FLAGS_LIMITED_BC = 1024_u32
  RTM_ROUTE_FLAGS_ZEROS_NETBC = 4096_u32
  RTM_ROUTE_FLAGS_ZEROS_SUBNETBC = 8192_u32
  RTM_ROUTE_FLAGS_ONES_NETBC = 16384_u32
  RTM_ROUTE_FLAGS_ONES_SUBNETBC = 32768_u32
  RTM_NEXTHOP_STATE_CREATED = 0_u32
  RTM_NEXTHOP_STATE_DELETED = 1_u32
  RTM_NEXTHOP_FLAGS_REMOTE = 1_u32
  RTM_NEXTHOP_FLAGS_DOWN = 2_u32
  METHOD_TYPE_ALL_METHODS = 4294967295_u32
  METHOD_RIP2_NEIGHBOUR_ADDR = 1_u32
  METHOD_RIP2_OUTBOUND_INTF = 2_u32
  METHOD_RIP2_ROUTE_TAG = 4_u32
  METHOD_RIP2_ROUTE_TIMESTAMP = 8_u32
  METHOD_BGP4_AS_PATH = 1_u32
  METHOD_BGP4_PEER_ID = 2_u32
  METHOD_BGP4_PA_ORIGIN = 4_u32
  METHOD_BGP4_NEXTHOP_ATTR = 8_u32
  RTM_RESUME_METHODS = 0_u32
  RTM_BLOCK_METHODS = 1_u32
  RTM_ROUTE_CHANGE_FIRST = 1_u32
  RTM_ROUTE_CHANGE_NEW = 2_u32
  RTM_ROUTE_CHANGE_BEST = 65536_u32
  RTM_NEXTHOP_CHANGE_NEW = 1_u32
  RTM_MATCH_NONE = 0_u32
  RTM_MATCH_OWNER = 1_u32
  RTM_MATCH_NEIGHBOUR = 2_u32
  RTM_MATCH_PREF = 4_u32
  RTM_MATCH_NEXTHOP = 8_u32
  RTM_MATCH_INTERFACE = 16_u32
  RTM_MATCH_FULL = 65535_u32
  RTM_ENUM_START = 0_u32
  RTM_ENUM_NEXT = 1_u32
  RTM_ENUM_RANGE = 2_u32
  RTM_ENUM_ALL_DESTS = 0_u32
  RTM_ENUM_OWN_DESTS = 16777216_u32
  RTM_ENUM_ALL_ROUTES = 0_u32
  RTM_ENUM_OWN_ROUTES = 65536_u32
  RTM_NUM_CHANGE_TYPES = 3_u32
  RTM_CHANGE_TYPE_ALL = 1_u32
  RTM_CHANGE_TYPE_BEST = 2_u32
  RTM_CHANGE_TYPE_FORWARDING = 4_u32
  RTM_NOTIFY_ONLY_MARKED_DESTS = 65536_u32
  RASBASE = 600_u32
  PENDING = 600_u32
  ERROR_INVALID_PORT_HANDLE = 601_u32
  ERROR_PORT_ALREADY_OPEN = 602_u32
  ERROR_BUFFER_TOO_SMALL = 603_u32
  ERROR_WRONG_INFO_SPECIFIED = 604_u32
  ERROR_CANNOT_SET_PORT_INFO = 605_u32
  ERROR_PORT_NOT_CONNECTED = 606_u32
  ERROR_EVENT_INVALID = 607_u32
  ERROR_DEVICE_DOES_NOT_EXIST = 608_u32
  ERROR_DEVICETYPE_DOES_NOT_EXIST = 609_u32
  ERROR_BUFFER_INVALID = 610_u32
  ERROR_ROUTE_NOT_AVAILABLE = 611_u32
  ERROR_ROUTE_NOT_ALLOCATED = 612_u32
  ERROR_INVALID_COMPRESSION_SPECIFIED = 613_u32
  ERROR_OUT_OF_BUFFERS = 614_u32
  ERROR_PORT_NOT_FOUND = 615_u32
  ERROR_ASYNC_REQUEST_PENDING = 616_u32
  ERROR_ALREADY_DISCONNECTING = 617_u32
  ERROR_PORT_NOT_OPEN = 618_u32
  ERROR_PORT_DISCONNECTED = 619_u32
  ERROR_NO_ENDPOINTS = 620_u32
  ERROR_CANNOT_OPEN_PHONEBOOK = 621_u32
  ERROR_CANNOT_LOAD_PHONEBOOK = 622_u32
  ERROR_CANNOT_FIND_PHONEBOOK_ENTRY = 623_u32
  ERROR_CANNOT_WRITE_PHONEBOOK = 624_u32
  ERROR_CORRUPT_PHONEBOOK = 625_u32
  ERROR_CANNOT_LOAD_STRING = 626_u32
  ERROR_KEY_NOT_FOUND = 627_u32
  ERROR_DISCONNECTION = 628_u32
  ERROR_REMOTE_DISCONNECTION = 629_u32
  ERROR_HARDWARE_FAILURE = 630_u32
  ERROR_USER_DISCONNECTION = 631_u32
  ERROR_INVALID_SIZE = 632_u32
  ERROR_PORT_NOT_AVAILABLE = 633_u32
  ERROR_CANNOT_PROJECT_CLIENT = 634_u32
  ERROR_UNKNOWN = 635_u32
  ERROR_WRONG_DEVICE_ATTACHED = 636_u32
  ERROR_BAD_STRING = 637_u32
  ERROR_REQUEST_TIMEOUT = 638_u32
  ERROR_CANNOT_GET_LANA = 639_u32
  ERROR_NETBIOS_ERROR = 640_u32
  ERROR_SERVER_OUT_OF_RESOURCES = 641_u32
  ERROR_NAME_EXISTS_ON_NET = 642_u32
  ERROR_SERVER_GENERAL_NET_FAILURE = 643_u32
  WARNING_MSG_ALIAS_NOT_ADDED = 644_u32
  ERROR_AUTH_INTERNAL = 645_u32
  ERROR_RESTRICTED_LOGON_HOURS = 646_u32
  ERROR_ACCT_DISABLED = 647_u32
  ERROR_PASSWD_EXPIRED = 648_u32
  ERROR_NO_DIALIN_PERMISSION = 649_u32
  ERROR_SERVER_NOT_RESPONDING = 650_u32
  ERROR_FROM_DEVICE = 651_u32
  ERROR_UNRECOGNIZED_RESPONSE = 652_u32
  ERROR_MACRO_NOT_FOUND = 653_u32
  ERROR_MACRO_NOT_DEFINED = 654_u32
  ERROR_MESSAGE_MACRO_NOT_FOUND = 655_u32
  ERROR_DEFAULTOFF_MACRO_NOT_FOUND = 656_u32
  ERROR_FILE_COULD_NOT_BE_OPENED = 657_u32
  ERROR_DEVICENAME_TOO_LONG = 658_u32
  ERROR_DEVICENAME_NOT_FOUND = 659_u32
  ERROR_NO_RESPONSES = 660_u32
  ERROR_NO_COMMAND_FOUND = 661_u32
  ERROR_WRONG_KEY_SPECIFIED = 662_u32
  ERROR_UNKNOWN_DEVICE_TYPE = 663_u32
  ERROR_ALLOCATING_MEMORY = 664_u32
  ERROR_PORT_NOT_CONFIGURED = 665_u32
  ERROR_DEVICE_NOT_READY = 666_u32
  ERROR_READING_INI_FILE = 667_u32
  ERROR_NO_CONNECTION = 668_u32
  ERROR_BAD_USAGE_IN_INI_FILE = 669_u32
  ERROR_READING_SECTIONNAME = 670_u32
  ERROR_READING_DEVICETYPE = 671_u32
  ERROR_READING_DEVICENAME = 672_u32
  ERROR_READING_USAGE = 673_u32
  ERROR_READING_MAXCONNECTBPS = 674_u32
  ERROR_READING_MAXCARRIERBPS = 675_u32
  ERROR_LINE_BUSY = 676_u32
  ERROR_VOICE_ANSWER = 677_u32
  ERROR_NO_ANSWER = 678_u32
  ERROR_NO_CARRIER = 679_u32
  ERROR_NO_DIALTONE = 680_u32
  ERROR_IN_COMMAND = 681_u32
  ERROR_WRITING_SECTIONNAME = 682_u32
  ERROR_WRITING_DEVICETYPE = 683_u32
  ERROR_WRITING_DEVICENAME = 684_u32
  ERROR_WRITING_MAXCONNECTBPS = 685_u32
  ERROR_WRITING_MAXCARRIERBPS = 686_u32
  ERROR_WRITING_USAGE = 687_u32
  ERROR_WRITING_DEFAULTOFF = 688_u32
  ERROR_READING_DEFAULTOFF = 689_u32
  ERROR_EMPTY_INI_FILE = 690_u32
  ERROR_AUTHENTICATION_FAILURE = 691_u32
  ERROR_PORT_OR_DEVICE = 692_u32
  ERROR_NOT_BINARY_MACRO = 693_u32
  ERROR_DCB_NOT_FOUND = 694_u32
  ERROR_STATE_MACHINES_NOT_STARTED = 695_u32
  ERROR_STATE_MACHINES_ALREADY_STARTED = 696_u32
  ERROR_PARTIAL_RESPONSE_LOOPING = 697_u32
  ERROR_UNKNOWN_RESPONSE_KEY = 698_u32
  ERROR_RECV_BUF_FULL = 699_u32
  ERROR_CMD_TOO_LONG = 700_u32
  ERROR_UNSUPPORTED_BPS = 701_u32
  ERROR_UNEXPECTED_RESPONSE = 702_u32
  ERROR_INTERACTIVE_MODE = 703_u32
  ERROR_BAD_CALLBACK_NUMBER = 704_u32
  ERROR_INVALID_AUTH_STATE = 705_u32
  ERROR_WRITING_INITBPS = 706_u32
  ERROR_X25_DIAGNOSTIC = 707_u32
  ERROR_ACCT_EXPIRED = 708_u32
  ERROR_CHANGING_PASSWORD = 709_u32
  ERROR_OVERRUN = 710_u32
  ERROR_RASMAN_CANNOT_INITIALIZE = 711_u32
  ERROR_BIPLEX_PORT_NOT_AVAILABLE = 712_u32
  ERROR_NO_ACTIVE_ISDN_LINES = 713_u32
  ERROR_NO_ISDN_CHANNELS_AVAILABLE = 714_u32
  ERROR_TOO_MANY_LINE_ERRORS = 715_u32
  ERROR_IP_CONFIGURATION = 716_u32
  ERROR_NO_IP_ADDRESSES = 717_u32
  ERROR_PPP_TIMEOUT = 718_u32
  ERROR_PPP_REMOTE_TERMINATED = 719_u32
  ERROR_PPP_NO_PROTOCOLS_CONFIGURED = 720_u32
  ERROR_PPP_NO_RESPONSE = 721_u32
  ERROR_PPP_INVALID_PACKET = 722_u32
  ERROR_PHONE_NUMBER_TOO_LONG = 723_u32
  ERROR_IPXCP_NO_DIALOUT_CONFIGURED = 724_u32
  ERROR_IPXCP_NO_DIALIN_CONFIGURED = 725_u32
  ERROR_IPXCP_DIALOUT_ALREADY_ACTIVE = 726_u32
  ERROR_ACCESSING_TCPCFGDLL = 727_u32
  ERROR_NO_IP_RAS_ADAPTER = 728_u32
  ERROR_SLIP_REQUIRES_IP = 729_u32
  ERROR_PROJECTION_NOT_COMPLETE = 730_u32
  ERROR_PROTOCOL_NOT_CONFIGURED = 731_u32
  ERROR_PPP_NOT_CONVERGING = 732_u32
  ERROR_PPP_CP_REJECTED = 733_u32
  ERROR_PPP_LCP_TERMINATED = 734_u32
  ERROR_PPP_REQUIRED_ADDRESS_REJECTED = 735_u32
  ERROR_PPP_NCP_TERMINATED = 736_u32
  ERROR_PPP_LOOPBACK_DETECTED = 737_u32
  ERROR_PPP_NO_ADDRESS_ASSIGNED = 738_u32
  ERROR_CANNOT_USE_LOGON_CREDENTIALS = 739_u32
  ERROR_TAPI_CONFIGURATION = 740_u32
  ERROR_NO_LOCAL_ENCRYPTION = 741_u32
  ERROR_NO_REMOTE_ENCRYPTION = 742_u32
  ERROR_REMOTE_REQUIRES_ENCRYPTION = 743_u32
  ERROR_IPXCP_NET_NUMBER_CONFLICT = 744_u32
  ERROR_INVALID_SMM = 745_u32
  ERROR_SMM_UNINITIALIZED = 746_u32
  ERROR_NO_MAC_FOR_PORT = 747_u32
  ERROR_SMM_TIMEOUT = 748_u32
  ERROR_BAD_PHONE_NUMBER = 749_u32
  ERROR_WRONG_MODULE = 750_u32
  ERROR_INVALID_CALLBACK_NUMBER = 751_u32
  ERROR_SCRIPT_SYNTAX = 752_u32
  ERROR_HANGUP_FAILED = 753_u32
  ERROR_BUNDLE_NOT_FOUND = 754_u32
  ERROR_CANNOT_DO_CUSTOMDIAL = 755_u32
  ERROR_DIAL_ALREADY_IN_PROGRESS = 756_u32
  ERROR_RASAUTO_CANNOT_INITIALIZE = 757_u32
  ERROR_CONNECTION_ALREADY_SHARED = 758_u32
  ERROR_SHARING_CHANGE_FAILED = 759_u32
  ERROR_SHARING_ROUTER_INSTALL = 760_u32
  ERROR_SHARE_CONNECTION_FAILED = 761_u32
  ERROR_SHARING_PRIVATE_INSTALL = 762_u32
  ERROR_CANNOT_SHARE_CONNECTION = 763_u32
  ERROR_NO_SMART_CARD_READER = 764_u32
  ERROR_SHARING_ADDRESS_EXISTS = 765_u32
  ERROR_NO_CERTIFICATE = 766_u32
  ERROR_SHARING_MULTIPLE_ADDRESSES = 767_u32
  ERROR_FAILED_TO_ENCRYPT = 768_u32
  ERROR_BAD_ADDRESS_SPECIFIED = 769_u32
  ERROR_CONNECTION_REJECT = 770_u32
  ERROR_CONGESTION = 771_u32
  ERROR_INCOMPATIBLE = 772_u32
  ERROR_NUMBERCHANGED = 773_u32
  ERROR_TEMPFAILURE = 774_u32
  ERROR_BLOCKED = 775_u32
  ERROR_DONOTDISTURB = 776_u32
  ERROR_OUTOFORDER = 777_u32
  ERROR_UNABLE_TO_AUTHENTICATE_SERVER = 778_u32
  ERROR_SMART_CARD_REQUIRED = 779_u32
  ERROR_INVALID_FUNCTION_FOR_ENTRY = 780_u32
  ERROR_CERT_FOR_ENCRYPTION_NOT_FOUND = 781_u32
  ERROR_SHARING_RRAS_CONFLICT = 782_u32
  ERROR_SHARING_NO_PRIVATE_LAN = 783_u32
  ERROR_NO_DIFF_USER_AT_LOGON = 784_u32
  ERROR_NO_REG_CERT_AT_LOGON = 785_u32
  ERROR_OAKLEY_NO_CERT = 786_u32
  ERROR_OAKLEY_AUTH_FAIL = 787_u32
  ERROR_OAKLEY_ATTRIB_FAIL = 788_u32
  ERROR_OAKLEY_GENERAL_PROCESSING = 789_u32
  ERROR_OAKLEY_NO_PEER_CERT = 790_u32
  ERROR_OAKLEY_NO_POLICY = 791_u32
  ERROR_OAKLEY_TIMED_OUT = 792_u32
  ERROR_OAKLEY_ERROR = 793_u32
  ERROR_UNKNOWN_FRAMED_PROTOCOL = 794_u32
  ERROR_WRONG_TUNNEL_TYPE = 795_u32
  ERROR_UNKNOWN_SERVICE_TYPE = 796_u32
  ERROR_CONNECTING_DEVICE_NOT_FOUND = 797_u32
  ERROR_NO_EAPTLS_CERTIFICATE = 798_u32
  ERROR_SHARING_HOST_ADDRESS_CONFLICT = 799_u32
  ERROR_AUTOMATIC_VPN_FAILED = 800_u32
  ERROR_VALIDATING_SERVER_CERT = 801_u32
  ERROR_READING_SCARD = 802_u32
  ERROR_INVALID_PEAP_COOKIE_CONFIG = 803_u32
  ERROR_INVALID_PEAP_COOKIE_USER = 804_u32
  ERROR_INVALID_MSCHAPV2_CONFIG = 805_u32
  ERROR_VPN_GRE_BLOCKED = 806_u32
  ERROR_VPN_DISCONNECT = 807_u32
  ERROR_VPN_REFUSED = 808_u32
  ERROR_VPN_TIMEOUT = 809_u32
  ERROR_VPN_BAD_CERT = 810_u32
  ERROR_VPN_BAD_PSK = 811_u32
  ERROR_SERVER_POLICY = 812_u32
  ERROR_BROADBAND_ACTIVE = 813_u32
  ERROR_BROADBAND_NO_NIC = 814_u32
  ERROR_BROADBAND_TIMEOUT = 815_u32
  ERROR_FEATURE_DEPRECATED = 816_u32
  ERROR_CANNOT_DELETE = 817_u32
  ERROR_RASQEC_RESOURCE_CREATION_FAILED = 818_u32
  ERROR_RASQEC_NAPAGENT_NOT_ENABLED = 819_u32
  ERROR_RASQEC_NAPAGENT_NOT_CONNECTED = 820_u32
  ERROR_RASQEC_CONN_DOESNOTEXIST = 821_u32
  ERROR_RASQEC_TIMEOUT = 822_u32
  ERROR_PEAP_CRYPTOBINDING_INVALID = 823_u32
  ERROR_PEAP_CRYPTOBINDING_NOTRECEIVED = 824_u32
  ERROR_INVALID_VPNSTRATEGY = 825_u32
  ERROR_EAPTLS_CACHE_CREDENTIALS_INVALID = 826_u32
  ERROR_IPSEC_SERVICE_STOPPED = 827_u32
  ERROR_IDLE_TIMEOUT = 828_u32
  ERROR_LINK_FAILURE = 829_u32
  ERROR_USER_LOGOFF = 830_u32
  ERROR_FAST_USER_SWITCH = 831_u32
  ERROR_HIBERNATION = 832_u32
  ERROR_SYSTEM_SUSPENDED = 833_u32
  ERROR_RASMAN_SERVICE_STOPPED = 834_u32
  ERROR_INVALID_SERVER_CERT = 835_u32
  ERROR_NOT_NAP_CAPABLE = 836_u32
  ERROR_INVALID_TUNNELID = 837_u32
  ERROR_UPDATECONNECTION_REQUEST_IN_PROCESS = 838_u32
  ERROR_PROTOCOL_ENGINE_DISABLED = 839_u32
  ERROR_INTERNAL_ADDRESS_FAILURE = 840_u32
  ERROR_FAILED_CP_REQUIRED = 841_u32
  ERROR_TS_UNACCEPTABLE = 842_u32
  ERROR_MOBIKE_DISABLED = 843_u32
  ERROR_CANNOT_INITIATE_MOBIKE_UPDATE = 844_u32
  ERROR_PEAP_SERVER_REJECTED_CLIENT_TLV = 845_u32
  ERROR_INVALID_PREFERENCES = 846_u32
  ERROR_EAPTLS_SCARD_CACHE_CREDENTIALS_INVALID = 847_u32
  ERROR_SSTP_COOKIE_SET_FAILURE = 848_u32
  ERROR_INVALID_PEAP_COOKIE_ATTRIBUTES = 849_u32
  ERROR_EAP_METHOD_NOT_INSTALLED = 850_u32
  ERROR_EAP_METHOD_DOES_NOT_SUPPORT_SSO = 851_u32
  ERROR_EAP_METHOD_OPERATION_NOT_SUPPORTED = 852_u32
  ERROR_EAP_USER_CERT_INVALID = 853_u32
  ERROR_EAP_USER_CERT_EXPIRED = 854_u32
  ERROR_EAP_USER_CERT_REVOKED = 855_u32
  ERROR_EAP_USER_CERT_OTHER_ERROR = 856_u32
  ERROR_EAP_SERVER_CERT_INVALID = 857_u32
  ERROR_EAP_SERVER_CERT_EXPIRED = 858_u32
  ERROR_EAP_SERVER_CERT_REVOKED = 859_u32
  ERROR_EAP_SERVER_CERT_OTHER_ERROR = 860_u32
  ERROR_EAP_USER_ROOT_CERT_NOT_FOUND = 861_u32
  ERROR_EAP_USER_ROOT_CERT_INVALID = 862_u32
  ERROR_EAP_USER_ROOT_CERT_EXPIRED = 863_u32
  ERROR_EAP_SERVER_ROOT_CERT_NOT_FOUND = 864_u32
  ERROR_EAP_SERVER_ROOT_CERT_INVALID = 865_u32
  ERROR_EAP_SERVER_ROOT_CERT_NAME_REQUIRED = 866_u32
  ERROR_PEAP_IDENTITY_MISMATCH = 867_u32
  ERROR_DNSNAME_NOT_RESOLVABLE = 868_u32
  ERROR_EAPTLS_PASSWD_INVALID = 869_u32
  ERROR_IKEV2_PSK_INTERFACE_ALREADY_EXISTS = 870_u32
  ERROR_INVALID_DESTINATION_IP = 871_u32
  ERROR_INVALID_INTERFACE_CONFIG = 872_u32
  ERROR_VPN_PLUGIN_GENERIC = 873_u32
  ERROR_SSO_CERT_MISSING = 874_u32
  ERROR_DEVICE_COMPLIANCE = 875_u32
  ERROR_PLUGIN_NOT_INSTALLED = 876_u32
  ERROR_ACTION_REQUIRED = 877_u32
  RASBASEEND = 877_u32

  alias RASDIALFUNC = Proc(UInt32, RASCONNSTATE, UInt32, Void)
  alias RASDIALFUNC1 = Proc(HRASCONN, UInt32, RASCONNSTATE, UInt32, UInt32, Void)
  alias RASDIALFUNC2 = Proc(LibC::UINT_PTR, UInt32, HRASCONN, UInt32, RASCONNSTATE, UInt32, UInt32, UInt32)
  alias ORASADFUNC = Proc(LibC::HANDLE, PSTR, UInt32, UInt32*, LibC::BOOL)
  alias RASADFUNCA = Proc(PSTR, PSTR, RASADPARAMS*, UInt32*, LibC::BOOL)
  alias RASADFUNCW = Proc(LibC::LPWSTR, LibC::LPWSTR, RASADPARAMS*, UInt32*, LibC::BOOL)
  alias PFNRASGETBUFFER = Proc(UInt8**, UInt32*, UInt32)
  alias PFNRASFREEBUFFER = Proc(UInt8*, UInt32)
  alias PFNRASSENDBUFFER = Proc(LibC::HANDLE, UInt8*, UInt32, UInt32)
  alias PFNRASRECEIVEBUFFER = Proc(LibC::HANDLE, UInt8*, UInt32*, UInt32, LibC::HANDLE, UInt32)
  alias PFNRASRETRIEVEBUFFER = Proc(LibC::HANDLE, UInt8*, UInt32*, UInt32)
  alias RasCustomScriptExecuteFn = Proc(LibC::HANDLE, LibC::LPWSTR, LibC::LPWSTR, PFNRASGETBUFFER, PFNRASFREEBUFFER, PFNRASSENDBUFFER, PFNRASRECEIVEBUFFER, PFNRASRETRIEVEBUFFER, LibC::HANDLE, RASDIALPARAMSA*, Void*, UInt32)
  alias PFNRASSETCOMMSETTINGS = Proc(LibC::HANDLE, RASCOMMSETTINGS*, Void*, UInt32)
  alias RasCustomHangUpFn = Proc(HRASCONN, UInt32)
  alias RasCustomDialFn = Proc(HINSTANCE, RASDIALEXTENSIONS*, LibC::LPWSTR, RASDIALPARAMSA*, UInt32, Void*, HRASCONN*, UInt32, UInt32)
  alias RasCustomDeleteEntryNotifyFn = Proc(LibC::LPWSTR, LibC::LPWSTR, UInt32, UInt32)
  alias RASPBDLGFUNCW = Proc(LibC::UINT_PTR, UInt32, LibC::LPWSTR, Void*, Void)
  alias RASPBDLGFUNCA = Proc(LibC::UINT_PTR, UInt32, PSTR, Void*, Void)
  alias RasCustomDialDlgFn = Proc(HINSTANCE, UInt32, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, RASDIALDLG*, Void*, LibC::BOOL)
  alias RasCustomEntryDlgFn = Proc(HINSTANCE, LibC::LPWSTR, LibC::LPWSTR, RASENTRYDLGA*, UInt32, LibC::BOOL)
  alias PMPRADMINGETIPADDRESSFORUSER = Proc(LibC::LPWSTR, LibC::LPWSTR, UInt32*, LibC::BOOL*, UInt32)
  alias PMPRADMINRELEASEIPADRESS = Proc(LibC::LPWSTR, LibC::LPWSTR, UInt32*, Void)
  alias PMPRADMINGETIPV6ADDRESSFORUSER = Proc(LibC::LPWSTR, LibC::LPWSTR, IN6_ADDR*, LibC::BOOL*, UInt32)
  alias PMPRADMINRELEASEIPV6ADDRESSFORUSER = Proc(LibC::LPWSTR, LibC::LPWSTR, IN6_ADDR*, Void)
  alias PMPRADMINACCEPTNEWCONNECTION = Proc(RAS_CONNECTION_0*, RAS_CONNECTION_1*, LibC::BOOL)
  alias PMPRADMINACCEPTNEWCONNECTION2 = Proc(RAS_CONNECTION_0*, RAS_CONNECTION_1*, RAS_CONNECTION_2*, LibC::BOOL)
  alias PMPRADMINACCEPTNEWCONNECTION3 = Proc(RAS_CONNECTION_0*, RAS_CONNECTION_1*, RAS_CONNECTION_2*, RAS_CONNECTION_3*, LibC::BOOL)
  alias PMPRADMINACCEPTNEWLINK = Proc(RAS_PORT_0*, RAS_PORT_1*, LibC::BOOL)
  alias PMPRADMINCONNECTIONHANGUPNOTIFICATION = Proc(RAS_CONNECTION_0*, RAS_CONNECTION_1*, Void)
  alias PMPRADMINCONNECTIONHANGUPNOTIFICATION2 = Proc(RAS_CONNECTION_0*, RAS_CONNECTION_1*, RAS_CONNECTION_2*, Void)
  alias PMPRADMINCONNECTIONHANGUPNOTIFICATION3 = Proc(RAS_CONNECTION_0*, RAS_CONNECTION_1*, RAS_CONNECTION_2*, RAS_CONNECTION_3, Void)
  alias PMPRADMINLINKHANGUPNOTIFICATION = Proc(RAS_PORT_0*, RAS_PORT_1*, Void)
  alias PMPRADMINTERMINATEDLL = Proc(UInt32)
  alias PMPRADMINACCEPTREAUTHENTICATION = Proc(RAS_CONNECTION_0*, RAS_CONNECTION_1*, RAS_CONNECTION_2*, RAS_CONNECTION_3*, LibC::BOOL)
  alias PMPRADMINACCEPTNEWCONNECTIONEX = Proc(RAS_CONNECTION_EX*, LibC::BOOL)
  alias PMPRADMINACCEPTREAUTHENTICATIONEX = Proc(RAS_CONNECTION_EX*, LibC::BOOL)
  alias PMPRADMINACCEPTTUNNELENDPOINTCHANGEEX = Proc(RAS_CONNECTION_EX*, LibC::BOOL)
  alias PMPRADMINCONNECTIONHANGUPNOTIFICATIONEX = Proc(RAS_CONNECTION_EX*, Void)
  alias PMPRADMINRASVALIDATEPREAUTHENTICATEDCONNECTIONEX = Proc(AUTH_VALIDATION_EX*, UInt32)
  alias RASSECURITYPROC = Proc(UInt32)
  alias PMGM_RPF_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32*, UInt32*, UInt32*, UInt32, UInt8*, UInt8*, UInt32)
  alias PMGM_CREATION_ALERT_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, MGM_IF_ENTRY*, UInt32)
  alias PMGM_PRUNE_ALERT_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, LibC::BOOL, UInt32*, UInt32)
  alias PMGM_JOIN_ALERT_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, LibC::BOOL, UInt32)
  alias PMGM_WRONG_IF_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt8*, UInt32)
  alias PMGM_LOCAL_JOIN_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, UInt32)
  alias PMGM_LOCAL_LEAVE_CALLBACK = Proc(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, UInt32)
  alias PMGM_DISABLE_IGMP_CALLBACK = Proc(UInt32, UInt32, UInt32)
  alias PMGM_ENABLE_IGMP_CALLBACK = Proc(UInt32, UInt32, UInt32)
  alias RTM_EVENT_CALLBACK = Proc(LibC::IntPtrT, RTM_EVENT_TYPE, Void*, Void*, UInt32)
  alias RTM_ENTITY_EXPORT_METHOD = Proc(LibC::IntPtrT, LibC::IntPtrT, RTM_ENTITY_METHOD_INPUT*, RTM_ENTITY_METHOD_OUTPUT*, Void)


  enum MPR_INTERFACE_DIAL_MODE : UInt32
    MPRDM_DialFirst = 0
    MPRDM_DialAll = 1
    MPRDM_DialAsNeeded = 2
  end

  enum RASENTRY_DIAL_MODE : UInt32
    RASEDM_DialAll = 1
    RASEDM_DialAsNeeded = 2
  end

  enum RAS_FLAGS : UInt32
    RAS_FLAGS_PPP_CONNECTION = 1
    RAS_FLAGS_MESSENGER_PRESENT = 2
    RAS_FLAGS_QUARANTINE_PRESENT = 8
    RAS_FLAGS_ARAP_CONNECTION = 16
    RAS_FLAGS_IKEV2_CONNECTION = 16
    RAS_FLAGS_DORMANT = 32
  end

  enum MPR_ET : UInt32
    MPR_ET_None = 0
    MPR_ET_Require = 1
    MPR_ET_RequireMax = 2
    MPR_ET_Optional = 3
  end

  enum RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA : UInt32
    RASLCPAD_CHAP_MD5 = 5
    RASLCPAD_CHAP_MS = 128
    RASLCPAD_CHAP_MSV2 = 129
  end

  enum PPP_LCP : UInt32
    PPP_LCP_PAP = 49187
    PPP_LCP_CHAP = 49699
    PPP_LCP_EAP = 49703
    PPP_LCP_SPAP = 49191
  end

  enum RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL : UInt32
    RASLCPAP_PAP = 49187
    RASLCPAP_SPAP = 49191
    RASLCPAP_CHAP = 49699
    RASLCPAP_EAP = 49703
  end

  enum PPP_LCP_INFO_AUTH_DATA : UInt32
    PPP_LCP_CHAP_MD5 = 5
    PPP_LCP_CHAP_MS = 128
    PPP_LCP_CHAP_MSV2 = 129
  end

  enum RASIKEV_PROJECTION_INFO_FLAGS : UInt32
    RASIKEv2_FLAGS_MOBIKESUPPORTED = 1
    RASIKEv2_FLAGS_BEHIND_NAT = 2
    RASIKEv2_FLAGS_SERVERBEHIND_NAT = 4
  end

  enum MPR_VS : UInt32
    MPR_VS_Default = 0
    MPR_VS_PptpOnly = 1
    MPR_VS_PptpFirst = 2
    MPR_VS_L2tpOnly = 3
    MPR_VS_L2tpFirst = 4
  end

  enum SECURITY_MESSAGE_MSG_ID : UInt32
    SECURITYMSG_SUCCESS = 1
    SECURITYMSG_FAILURE = 2
    SECURITYMSG_ERROR = 3
  end

  enum RASAPIVERSION : Int32
    RASAPIVERSION_500 = 1
    RASAPIVERSION_501 = 2
    RASAPIVERSION_600 = 3
    RASAPIVERSION_601 = 4
  end

  enum RASCONNSTATE : Int32
    RASCS_OpenPort = 0
    RASCS_PortOpened = 1
    RASCS_ConnectDevice = 2
    RASCS_DeviceConnected = 3
    RASCS_AllDevicesConnected = 4
    RASCS_Authenticate = 5
    RASCS_AuthNotify = 6
    RASCS_AuthRetry = 7
    RASCS_AuthCallback = 8
    RASCS_AuthChangePassword = 9
    RASCS_AuthProject = 10
    RASCS_AuthLinkSpeed = 11
    RASCS_AuthAck = 12
    RASCS_ReAuthenticate = 13
    RASCS_Authenticated = 14
    RASCS_PrepareForCallback = 15
    RASCS_WaitForModemReset = 16
    RASCS_WaitForCallback = 17
    RASCS_Projected = 18
    RASCS_StartAuthentication = 19
    RASCS_CallbackComplete = 20
    RASCS_LogonNetwork = 21
    RASCS_SubEntryConnected = 22
    RASCS_SubEntryDisconnected = 23
    RASCS_ApplySettings = 24
    RASCS_Interactive = 4096
    RASCS_RetryAuthentication = 4097
    RASCS_CallbackSetByCaller = 4098
    RASCS_PasswordExpired = 4099
    RASCS_InvokeEapUI = 4100
    RASCS_Connected = 8192
    RASCS_Disconnected = 8193
  end

  enum RASCONNSUBSTATE : Int32
    RASCSS_None = 0
    RASCSS_Dormant = 1
    RASCSS_Reconnecting = 2
    RASCSS_Reconnected = 8192
  end

  enum RASPROJECTION : Int32
    RASP_Amb = 65536
    RASP_PppNbf = 32831
    RASP_PppIpx = 32811
    RASP_PppIp = 32801
    RASP_PppCcp = 33021
    RASP_PppLcp = 49185
    RASP_PppIpv6 = 32855
  end

  enum RASPROJECTION_INFO_TYPE : Int32
    PROJECTION_INFO_TYPE_PPP = 1
    PROJECTION_INFO_TYPE_IKEv2 = 2
  end

  enum IKEV2_ID_PAYLOAD_TYPE : Int32
    IKEV2_ID_PAYLOAD_TYPE_INVALID = 0
    IKEV2_ID_PAYLOAD_TYPE_IPV4_ADDR = 1
    IKEV2_ID_PAYLOAD_TYPE_FQDN = 2
    IKEV2_ID_PAYLOAD_TYPE_RFC822_ADDR = 3
    IKEV2_ID_PAYLOAD_TYPE_RESERVED1 = 4
    IKEV2_ID_PAYLOAD_TYPE_ID_IPV6_ADDR = 5
    IKEV2_ID_PAYLOAD_TYPE_RESERVED2 = 6
    IKEV2_ID_PAYLOAD_TYPE_RESERVED3 = 7
    IKEV2_ID_PAYLOAD_TYPE_RESERVED4 = 8
    IKEV2_ID_PAYLOAD_TYPE_DER_ASN1_DN = 9
    IKEV2_ID_PAYLOAD_TYPE_DER_ASN1_GN = 10
    IKEV2_ID_PAYLOAD_TYPE_KEY_ID = 11
    IKEV2_ID_PAYLOAD_TYPE_MAX = 12
  end

  enum ROUTER_INTERFACE_TYPE : Int32
    ROUTER_IF_TYPE_CLIENT = 0
    ROUTER_IF_TYPE_HOME_ROUTER = 1
    ROUTER_IF_TYPE_FULL_ROUTER = 2
    ROUTER_IF_TYPE_DEDICATED = 3
    ROUTER_IF_TYPE_INTERNAL = 4
    ROUTER_IF_TYPE_LOOPBACK = 5
    ROUTER_IF_TYPE_TUNNEL1 = 6
    ROUTER_IF_TYPE_DIALOUT = 7
    ROUTER_IF_TYPE_MAX = 8
  end

  enum ROUTER_CONNECTION_STATE : Int32
    ROUTER_IF_STATE_UNREACHABLE = 0
    ROUTER_IF_STATE_DISCONNECTED = 1
    ROUTER_IF_STATE_CONNECTING = 2
    ROUTER_IF_STATE_CONNECTED = 3
  end

  enum RAS_PORT_CONDITION : Int32
    RAS_PORT_NON_OPERATIONAL = 0
    RAS_PORT_DISCONNECTED = 1
    RAS_PORT_CALLING_BACK = 2
    RAS_PORT_LISTENING = 3
    RAS_PORT_AUTHENTICATING = 4
    RAS_PORT_AUTHENTICATED = 5
    RAS_PORT_INITIALIZING = 6
  end

  enum RAS_HARDWARE_CONDITION : Int32
    RAS_HARDWARE_OPERATIONAL = 0
    RAS_HARDWARE_FAILURE = 1
  end

  enum RAS_QUARANTINE_STATE : Int32
    RAS_QUAR_STATE_NORMAL = 0
    RAS_QUAR_STATE_QUARANTINE = 1
    RAS_QUAR_STATE_PROBATION = 2
    RAS_QUAR_STATE_NOT_CAPABLE = 3
  end

  enum MPRAPI_OBJECT_TYPE : Int32
    MPRAPI_OBJECT_TYPE_RAS_CONNECTION_OBJECT = 1
    MPRAPI_OBJECT_TYPE_MPR_SERVER_OBJECT = 2
    MPRAPI_OBJECT_TYPE_MPR_SERVER_SET_CONFIG_OBJECT = 3
    MPRAPI_OBJECT_TYPE_AUTH_VALIDATION_OBJECT = 4
    MPRAPI_OBJECT_TYPE_UPDATE_CONNECTION_OBJECT = 5
    MPRAPI_OBJECT_TYPE_IF_CUSTOM_CONFIG_OBJECT = 6
  end

  enum MPR_VPN_TS_TYPE : Int32
    MPR_VPN_TS_IPv4_ADDR_RANGE = 7
    MPR_VPN_TS_IPv6_ADDR_RANGE = 8
  end

  enum MGM_ENUM_TYPES : Int32
    ANY_SOURCE = 0
    ALL_SOURCES = 1
  end

  enum RTM_EVENT_TYPE : Int32
    RTM_ENTITY_REGISTERED = 0
    RTM_ENTITY_DEREGISTERED = 1
    RTM_ROUTE_EXPIRED = 2
    RTM_CHANGE_NOTIFICATION = 3
  end

  union RASTUNNELENDPOINT_Anonymous_e__Union
    ipv4 : IN_ADDR
    ipv6 : IN6_ADDR
  end
  union RAS_PROJECTION_INFO_Anonymous_e__Union
    ppp : RASPPP_PROJECTION_INFO
    ikev2 : RASIKEV2_PROJECTION_INFO
  end
  union PROJECTION_INFO_Anonymous_e__Union
    ppp_projection_info : PPP_PROJECTION_INFO
    ikev2_projection_info : IKEV2_PROJECTION_INFO
  end
  union PROJECTION_INFO2_Anonymous_e__Union
    ppp_projection_info : PPP_PROJECTION_INFO2
    ikev2_projection_info : IKEV2_PROJECTION_INFO2
  end
  union VPN_TS_IP_ADDRESS_Anonymous_e__Union
    v4 : IN_ADDR
    v6 : IN6_ADDR
  end
  union RTM_ENTITY_ID_Anonymous_e__Union
    anonymous : RTM_ENTITY_ID_Anonymous_e__Union_Anonymous_e__Struct
    entity_id : UInt64
  end

  struct RASIPADDR
    a : UInt8
    b : UInt8
    c : UInt8
    d : UInt8
  end
  struct RASTUNNELENDPOINT
    dw_type : UInt32
    anonymous : RASTUNNELENDPOINT_Anonymous_e__Union
  end
  struct RASCONNW
    dw_size : UInt32
    hrasconn : HRASCONN
    sz_entry_name : Char[257]*
    sz_device_type : Char[17]*
    sz_device_name : Char[129]*
    sz_phonebook : Char[260]*
    dw_sub_entry : UInt32
    guid_entry : Guid
    dw_flags : UInt32
    luid : LUID
    guid_correlation_id : Guid
  end
  struct RASCONNA
    dw_size : UInt32
    hrasconn : HRASCONN
    sz_entry_name : CHAR[257]*
    sz_device_type : CHAR[17]*
    sz_device_name : CHAR[129]*
    sz_phonebook : CHAR[260]*
    dw_sub_entry : UInt32
    guid_entry : Guid
    dw_flags : UInt32
    luid : LUID
    guid_correlation_id : Guid
  end
  struct RASCONNSTATUSW
    dw_size : UInt32
    rasconnstate : RASCONNSTATE
    dw_error : UInt32
    sz_device_type : Char[17]*
    sz_device_name : Char[129]*
    sz_phone_number : Char[129]*
    local_end_point : RASTUNNELENDPOINT
    remote_end_point : RASTUNNELENDPOINT
    rasconnsubstate : RASCONNSUBSTATE
  end
  struct RASCONNSTATUSA
    dw_size : UInt32
    rasconnstate : RASCONNSTATE
    dw_error : UInt32
    sz_device_type : CHAR[17]*
    sz_device_name : CHAR[129]*
    sz_phone_number : CHAR[129]*
    local_end_point : RASTUNNELENDPOINT
    remote_end_point : RASTUNNELENDPOINT
    rasconnsubstate : RASCONNSUBSTATE
  end
  struct RASDIALPARAMSW
    dw_size : UInt32
    sz_entry_name : Char[257]*
    sz_phone_number : Char[129]*
    sz_callback_number : Char[129]*
    sz_user_name : Char[257]*
    sz_password : Char[257]*
    sz_domain : Char[16]*
    dw_sub_entry : UInt32
    dw_callback_id : LibC::UINT_PTR
    dw_if_index : UInt32
    sz_enc_password : LibC::LPWSTR
  end
  struct RASDIALPARAMSA
    dw_size : UInt32
    sz_entry_name : CHAR[257]*
    sz_phone_number : CHAR[129]*
    sz_callback_number : CHAR[129]*
    sz_user_name : CHAR[257]*
    sz_password : CHAR[257]*
    sz_domain : CHAR[16]*
    dw_sub_entry : UInt32
    dw_callback_id : LibC::UINT_PTR
    dw_if_index : UInt32
    sz_enc_password : PSTR
  end
  struct RASEAPINFO
    dw_sizeof_eap_info : UInt32
    pb_eap_info : UInt8*
  end
  struct RASDEVSPECIFICINFO
    dw_size : UInt32
    pb_dev_specific_info : UInt8*
  end
  struct RASDIALEXTENSIONS
    dw_size : UInt32
    dwf_options : UInt32
    hwnd_parent : HANDLE
    reserved : LibC::UINT_PTR
    reserved1 : LibC::UINT_PTR
    ras_eap_info : RASEAPINFO
    f_skip_ppp_auth : LibC::BOOL
    ras_dev_specific_info : RASDEVSPECIFICINFO
  end
  struct RASENTRYNAMEW
    dw_size : UInt32
    sz_entry_name : Char[257]*
    dw_flags : UInt32
    sz_phonebook_path : Char[261]*
  end
  struct RASENTRYNAMEA
    dw_size : UInt32
    sz_entry_name : CHAR[257]*
    dw_flags : UInt32
    sz_phonebook_path : CHAR[261]*
  end
  struct RASAMBW
    dw_size : UInt32
    dw_error : UInt32
    sz_net_bios_error : Char[17]*
    b_lana : UInt8
  end
  struct RASAMBA
    dw_size : UInt32
    dw_error : UInt32
    sz_net_bios_error : CHAR[17]*
    b_lana : UInt8
  end
  struct RASPPPNBFW
    dw_size : UInt32
    dw_error : UInt32
    dw_net_bios_error : UInt32
    sz_net_bios_error : Char[17]*
    sz_workstation_name : Char[17]*
    b_lana : UInt8
  end
  struct RASPPPNBFA
    dw_size : UInt32
    dw_error : UInt32
    dw_net_bios_error : UInt32
    sz_net_bios_error : CHAR[17]*
    sz_workstation_name : CHAR[17]*
    b_lana : UInt8
  end
  struct RASIPXW
    dw_size : UInt32
    dw_error : UInt32
    sz_ipx_address : Char[22]*
  end
  struct RASPPPIPXA
    dw_size : UInt32
    dw_error : UInt32
    sz_ipx_address : CHAR[22]*
  end
  struct RASPPPIPW
    dw_size : UInt32
    dw_error : UInt32
    sz_ip_address : Char[16]*
    sz_server_ip_address : Char[16]*
    dw_options : UInt32
    dw_server_options : UInt32
  end
  struct RASPPPIPA
    dw_size : UInt32
    dw_error : UInt32
    sz_ip_address : CHAR[16]*
    sz_server_ip_address : CHAR[16]*
    dw_options : UInt32
    dw_server_options : UInt32
  end
  struct RASPPPIPV6
    dw_size : UInt32
    dw_error : UInt32
    b_local_interface_identifier : UInt8[8]*
    b_peer_interface_identifier : UInt8[8]*
    b_local_compression_protocol : UInt8[2]*
    b_peer_compression_protocol : UInt8[2]*
  end
  struct RASPPPLCPW
    dw_size : UInt32
    f_bundled : LibC::BOOL
    dw_error : UInt32
    dw_authentication_protocol : UInt32
    dw_authentication_data : UInt32
    dw_eap_type_id : UInt32
    dw_server_authentication_protocol : UInt32
    dw_server_authentication_data : UInt32
    dw_server_eap_type_id : UInt32
    f_multilink : LibC::BOOL
    dw_terminate_reason : UInt32
    dw_server_terminate_reason : UInt32
    sz_reply_message : Char[1024]*
    dw_options : UInt32
    dw_server_options : UInt32
  end
  struct RASPPPLCPA
    dw_size : UInt32
    f_bundled : LibC::BOOL
    dw_error : UInt32
    dw_authentication_protocol : UInt32
    dw_authentication_data : UInt32
    dw_eap_type_id : UInt32
    dw_server_authentication_protocol : UInt32
    dw_server_authentication_data : UInt32
    dw_server_eap_type_id : UInt32
    f_multilink : LibC::BOOL
    dw_terminate_reason : UInt32
    dw_server_terminate_reason : UInt32
    sz_reply_message : CHAR[1024]*
    dw_options : UInt32
    dw_server_options : UInt32
  end
  struct RASPPPCCP
    dw_size : UInt32
    dw_error : UInt32
    dw_compression_algorithm : UInt32
    dw_options : UInt32
    dw_server_compression_algorithm : UInt32
    dw_server_options : UInt32
  end
  struct RASPPP_PROJECTION_INFO
    dw_i_pv4_negotiation_error : UInt32
    ipv4_address : IN_ADDR
    ipv4_server_address : IN_ADDR
    dw_i_pv4_options : UInt32
    dw_i_pv4_server_options : UInt32
    dw_i_pv6_negotiation_error : UInt32
    b_interface_identifier : UInt8[8]*
    b_server_interface_identifier : UInt8[8]*
    f_bundled : LibC::BOOL
    f_multilink : LibC::BOOL
    dw_authentication_protocol : RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL
    dw_authentication_data : RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA
    dw_server_authentication_protocol : RASPPP_PROJECTION_INFO_SERVER_AUTH_PROTOCOL
    dw_server_authentication_data : RASPPP_PROJECTION_INFO_SERVER_AUTH_DATA
    dw_eap_type_id : UInt32
    dw_server_eap_type_id : UInt32
    dw_lcp_options : UInt32
    dw_lcp_server_options : UInt32
    dw_ccp_error : UInt32
    dw_ccp_compression_algorithm : UInt32
    dw_ccp_server_compression_algorithm : UInt32
    dw_ccp_options : UInt32
    dw_ccp_server_options : UInt32
  end
  struct RASIKEV2_PROJECTION_INFO
    dw_i_pv4_negotiation_error : UInt32
    ipv4_address : IN_ADDR
    ipv4_server_address : IN_ADDR
    dw_i_pv6_negotiation_error : UInt32
    ipv6_address : IN6_ADDR
    ipv6_server_address : IN6_ADDR
    dw_prefix_length : UInt32
    dw_authentication_protocol : UInt32
    dw_eap_type_id : UInt32
    dw_flags : RASIKEV_PROJECTION_INFO_FLAGS
    dw_encryption_method : UInt32
    num_i_pv4_server_addresses : UInt32
    ipv4_server_addresses : IN_ADDR*
    num_i_pv6_server_addresses : UInt32
    ipv6_server_addresses : IN6_ADDR*
  end
  struct RAS_PROJECTION_INFO
    version : RASAPIVERSION
    type : RASPROJECTION_INFO_TYPE
    anonymous : RAS_PROJECTION_INFO_Anonymous_e__Union
  end
  struct RASDEVINFOW
    dw_size : UInt32
    sz_device_type : Char[17]*
    sz_device_name : Char[129]*
  end
  struct RASDEVINFOA
    dw_size : UInt32
    sz_device_type : CHAR[17]*
    sz_device_name : CHAR[129]*
  end
  struct RASCTRYINFO
    dw_size : UInt32
    dw_country_id : UInt32
    dw_next_country_id : UInt32
    dw_country_code : UInt32
    dw_country_name_offset : UInt32
  end
  struct RASENTRYA
    dw_size : UInt32
    dwf_options : UInt32
    dw_country_id : UInt32
    dw_country_code : UInt32
    sz_area_code : CHAR[11]*
    sz_local_phone_number : CHAR[129]*
    dw_alternate_offset : UInt32
    ipaddr : RASIPADDR
    ipaddr_dns : RASIPADDR
    ipaddr_dns_alt : RASIPADDR
    ipaddr_wins : RASIPADDR
    ipaddr_wins_alt : RASIPADDR
    dw_frame_size : UInt32
    dwf_net_protocols : UInt32
    dw_framing_protocol : UInt32
    sz_script : CHAR[260]*
    sz_autodial_dll : CHAR[260]*
    sz_autodial_func : CHAR[260]*
    sz_device_type : CHAR[17]*
    sz_device_name : CHAR[129]*
    sz_x25_pad_type : CHAR[33]*
    sz_x25_address : CHAR[201]*
    sz_x25_facilities : CHAR[201]*
    sz_x25_user_data : CHAR[201]*
    dw_channels : UInt32
    dw_reserved1 : UInt32
    dw_reserved2 : UInt32
    dw_sub_entries : UInt32
    dw_dial_mode : RASENTRY_DIAL_MODE
    dw_dial_extra_percent : UInt32
    dw_dial_extra_sample_seconds : UInt32
    dw_hang_up_extra_percent : UInt32
    dw_hang_up_extra_sample_seconds : UInt32
    dw_idle_disconnect_seconds : UInt32
    dw_type : UInt32
    dw_encryption_type : UInt32
    dw_custom_auth_key : UInt32
    guid_id : Guid
    sz_custom_dial_dll : CHAR[260]*
    dw_vpn_strategy : UInt32
    dwf_options2 : UInt32
    dwf_options3 : UInt32
    sz_dns_suffix : CHAR[256]*
    dw_tcp_window_size : UInt32
    sz_prerequisite_pbk : CHAR[260]*
    sz_prerequisite_entry : CHAR[257]*
    dw_redial_count : UInt32
    dw_redial_pause : UInt32
    ipv6addr_dns : IN6_ADDR
    ipv6addr_dns_alt : IN6_ADDR
    dw_i_pv4_interface_metric : UInt32
    dw_i_pv6_interface_metric : UInt32
    ipv6addr : IN6_ADDR
    dw_i_pv6_prefix_length : UInt32
    dw_network_outage_time : UInt32
    sz_i_di : CHAR[257]*
    sz_i_dr : CHAR[257]*
    f_is_ims_config : LibC::BOOL
    idi_type : IKEV2_ID_PAYLOAD_TYPE
    idr_type : IKEV2_ID_PAYLOAD_TYPE
    f_disable_ik_ev2_fragmentation : LibC::BOOL
  end
  struct RASENTRYW
    dw_size : UInt32
    dwf_options : UInt32
    dw_country_id : UInt32
    dw_country_code : UInt32
    sz_area_code : Char[11]*
    sz_local_phone_number : Char[129]*
    dw_alternate_offset : UInt32
    ipaddr : RASIPADDR
    ipaddr_dns : RASIPADDR
    ipaddr_dns_alt : RASIPADDR
    ipaddr_wins : RASIPADDR
    ipaddr_wins_alt : RASIPADDR
    dw_frame_size : UInt32
    dwf_net_protocols : UInt32
    dw_framing_protocol : UInt32
    sz_script : Char[260]*
    sz_autodial_dll : Char[260]*
    sz_autodial_func : Char[260]*
    sz_device_type : Char[17]*
    sz_device_name : Char[129]*
    sz_x25_pad_type : Char[33]*
    sz_x25_address : Char[201]*
    sz_x25_facilities : Char[201]*
    sz_x25_user_data : Char[201]*
    dw_channels : UInt32
    dw_reserved1 : UInt32
    dw_reserved2 : UInt32
    dw_sub_entries : UInt32
    dw_dial_mode : RASENTRY_DIAL_MODE
    dw_dial_extra_percent : UInt32
    dw_dial_extra_sample_seconds : UInt32
    dw_hang_up_extra_percent : UInt32
    dw_hang_up_extra_sample_seconds : UInt32
    dw_idle_disconnect_seconds : UInt32
    dw_type : UInt32
    dw_encryption_type : UInt32
    dw_custom_auth_key : UInt32
    guid_id : Guid
    sz_custom_dial_dll : Char[260]*
    dw_vpn_strategy : UInt32
    dwf_options2 : UInt32
    dwf_options3 : UInt32
    sz_dns_suffix : Char[256]*
    dw_tcp_window_size : UInt32
    sz_prerequisite_pbk : Char[260]*
    sz_prerequisite_entry : Char[257]*
    dw_redial_count : UInt32
    dw_redial_pause : UInt32
    ipv6addr_dns : IN6_ADDR
    ipv6addr_dns_alt : IN6_ADDR
    dw_i_pv4_interface_metric : UInt32
    dw_i_pv6_interface_metric : UInt32
    ipv6addr : IN6_ADDR
    dw_i_pv6_prefix_length : UInt32
    dw_network_outage_time : UInt32
    sz_i_di : Char[257]*
    sz_i_dr : Char[257]*
    f_is_ims_config : LibC::BOOL
    idi_type : IKEV2_ID_PAYLOAD_TYPE
    idr_type : IKEV2_ID_PAYLOAD_TYPE
    f_disable_ik_ev2_fragmentation : LibC::BOOL
  end
  struct RASADPARAMS
    dw_size : UInt32
    hwnd_owner : HANDLE
    dw_flags : UInt32
    x_dlg : Int32
    y_dlg : Int32
  end
  struct RASSUBENTRYA
    dw_size : UInt32
    dwf_flags : UInt32
    sz_device_type : CHAR[17]*
    sz_device_name : CHAR[129]*
    sz_local_phone_number : CHAR[129]*
    dw_alternate_offset : UInt32
  end
  struct RASSUBENTRYW
    dw_size : UInt32
    dwf_flags : UInt32
    sz_device_type : Char[17]*
    sz_device_name : Char[129]*
    sz_local_phone_number : Char[129]*
    dw_alternate_offset : UInt32
  end
  struct RASCREDENTIALSA
    dw_size : UInt32
    dw_mask : UInt32
    sz_user_name : CHAR[257]*
    sz_password : CHAR[257]*
    sz_domain : CHAR[16]*
  end
  struct RASCREDENTIALSW
    dw_size : UInt32
    dw_mask : UInt32
    sz_user_name : Char[257]*
    sz_password : Char[257]*
    sz_domain : Char[16]*
  end
  struct RASAUTODIALENTRYA
    dw_size : UInt32
    dw_flags : UInt32
    dw_dialing_location : UInt32
    sz_entry : CHAR[257]*
  end
  struct RASAUTODIALENTRYW
    dw_size : UInt32
    dw_flags : UInt32
    dw_dialing_location : UInt32
    sz_entry : Char[257]*
  end
  struct RASEAPUSERIDENTITYA
    sz_user_name : CHAR[257]*
    dw_sizeof_eap_info : UInt32
    pb_eap_info : UInt8[0]*
  end
  struct RASEAPUSERIDENTITYW
    sz_user_name : Char[257]*
    dw_sizeof_eap_info : UInt32
    pb_eap_info : UInt8[0]*
  end
  struct RASCOMMSETTINGS
    dw_size : UInt32
    b_parity : UInt8
    b_stop : UInt8
    b_byte_size : UInt8
    b_align : UInt8
  end
  struct RASCUSTOMSCRIPTEXTENSIONS
    dw_size : UInt32
    pfn_ras_set_comm_settings : PFNRASSETCOMMSETTINGS
  end
  struct RAS_STATS
    dw_size : UInt32
    dw_bytes_xmited : UInt32
    dw_bytes_rcved : UInt32
    dw_frames_xmited : UInt32
    dw_frames_rcved : UInt32
    dw_crc_err : UInt32
    dw_timeout_err : UInt32
    dw_alignment_err : UInt32
    dw_hardware_overrun_err : UInt32
    dw_framing_err : UInt32
    dw_buffer_overrun_err : UInt32
    dw_compression_ratio_in : UInt32
    dw_compression_ratio_out : UInt32
    dw_bps : UInt32
    dw_connect_duration : UInt32
  end
  struct RASUPDATECONN
    version : RASAPIVERSION
    dw_size : UInt32
    dw_flags : UInt32
    dw_if_index : UInt32
    local_end_point : RASTUNNELENDPOINT
    remote_end_point : RASTUNNELENDPOINT
  end
  struct RASNOUSERW
    dw_size : UInt32
    dw_flags : UInt32
    dw_timeout_ms : UInt32
    sz_user_name : Char[257]*
    sz_password : Char[257]*
    sz_domain : Char[16]*
  end
  struct RASNOUSERA
    dw_size : UInt32
    dw_flags : UInt32
    dw_timeout_ms : UInt32
    sz_user_name : CHAR[257]*
    sz_password : CHAR[257]*
    sz_domain : CHAR[16]*
  end
  struct RASPBDLGW
    dw_size : UInt32
    hwnd_owner : HANDLE
    dw_flags : UInt32
    x_dlg : Int32
    y_dlg : Int32
    dw_callback_id : LibC::UINT_PTR
    p_callback : RASPBDLGFUNCW
    dw_error : UInt32
    reserved : LibC::UINT_PTR
    reserved2 : LibC::UINT_PTR
  end
  struct RASPBDLGA
    dw_size : UInt32
    hwnd_owner : HANDLE
    dw_flags : UInt32
    x_dlg : Int32
    y_dlg : Int32
    dw_callback_id : LibC::UINT_PTR
    p_callback : RASPBDLGFUNCA
    dw_error : UInt32
    reserved : LibC::UINT_PTR
    reserved2 : LibC::UINT_PTR
  end
  struct RASENTRYDLGW
    dw_size : UInt32
    hwnd_owner : HANDLE
    dw_flags : UInt32
    x_dlg : Int32
    y_dlg : Int32
    sz_entry : Char[257]*
    dw_error : UInt32
    reserved : LibC::UINT_PTR
    reserved2 : LibC::UINT_PTR
  end
  struct RASENTRYDLGA
    dw_size : UInt32
    hwnd_owner : HANDLE
    dw_flags : UInt32
    x_dlg : Int32
    y_dlg : Int32
    sz_entry : CHAR[257]*
    dw_error : UInt32
    reserved : LibC::UINT_PTR
    reserved2 : LibC::UINT_PTR
  end
  struct RASDIALDLG
    dw_size : UInt32
    hwnd_owner : HANDLE
    dw_flags : UInt32
    x_dlg : Int32
    y_dlg : Int32
    dw_sub_entry : UInt32
    dw_error : UInt32
    reserved : LibC::UINT_PTR
    reserved2 : LibC::UINT_PTR
  end
  struct MPR_INTERFACE_0
    wsz_interface_name : Char[257]*
    h_interface : LibC::HANDLE
    f_enabled : LibC::BOOL
    dw_if_type : ROUTER_INTERFACE_TYPE
    dw_connection_state : ROUTER_CONNECTION_STATE
    f_un_reachability_reasons : UInt32
    dw_last_error : UInt32
  end
  struct MPR_IPINIP_INTERFACE_0
    wsz_friendly_name : Char[257]*
    guid : Guid
  end
  struct MPR_INTERFACE_1
    wsz_interface_name : Char[257]*
    h_interface : LibC::HANDLE
    f_enabled : LibC::BOOL
    dw_if_type : ROUTER_INTERFACE_TYPE
    dw_connection_state : ROUTER_CONNECTION_STATE
    f_un_reachability_reasons : UInt32
    dw_last_error : UInt32
    lpws_dialout_hours_restriction : LibC::LPWSTR
  end
  struct MPR_INTERFACE_2
    wsz_interface_name : Char[257]*
    h_interface : LibC::HANDLE
    f_enabled : LibC::BOOL
    dw_if_type : ROUTER_INTERFACE_TYPE
    dw_connection_state : ROUTER_CONNECTION_STATE
    f_un_reachability_reasons : UInt32
    dw_last_error : UInt32
    dwf_options : UInt32
    sz_local_phone_number : Char[129]*
    sz_alternates : LibC::LPWSTR
    ipaddr : UInt32
    ipaddr_dns : UInt32
    ipaddr_dns_alt : UInt32
    ipaddr_wins : UInt32
    ipaddr_wins_alt : UInt32
    dwf_net_protocols : UInt32
    sz_device_type : Char[17]*
    sz_device_name : Char[129]*
    sz_x25_pad_type : Char[33]*
    sz_x25_address : Char[201]*
    sz_x25_facilities : Char[201]*
    sz_x25_user_data : Char[201]*
    dw_channels : UInt32
    dw_sub_entries : UInt32
    dw_dial_mode : MPR_INTERFACE_DIAL_MODE
    dw_dial_extra_percent : UInt32
    dw_dial_extra_sample_seconds : UInt32
    dw_hang_up_extra_percent : UInt32
    dw_hang_up_extra_sample_seconds : UInt32
    dw_idle_disconnect_seconds : UInt32
    dw_type : UInt32
    dw_encryption_type : MPR_ET
    dw_custom_auth_key : UInt32
    dw_custom_auth_data_size : UInt32
    lpb_custom_auth_data : UInt8*
    guid_id : Guid
    dw_vpn_strategy : MPR_VS
  end
  struct MPR_INTERFACE_3
    wsz_interface_name : Char[257]*
    h_interface : LibC::HANDLE
    f_enabled : LibC::BOOL
    dw_if_type : ROUTER_INTERFACE_TYPE
    dw_connection_state : ROUTER_CONNECTION_STATE
    f_un_reachability_reasons : UInt32
    dw_last_error : UInt32
    dwf_options : UInt32
    sz_local_phone_number : Char[129]*
    sz_alternates : LibC::LPWSTR
    ipaddr : UInt32
    ipaddr_dns : UInt32
    ipaddr_dns_alt : UInt32
    ipaddr_wins : UInt32
    ipaddr_wins_alt : UInt32
    dwf_net_protocols : UInt32
    sz_device_type : Char[17]*
    sz_device_name : Char[129]*
    sz_x25_pad_type : Char[33]*
    sz_x25_address : Char[201]*
    sz_x25_facilities : Char[201]*
    sz_x25_user_data : Char[201]*
    dw_channels : UInt32
    dw_sub_entries : UInt32
    dw_dial_mode : MPR_INTERFACE_DIAL_MODE
    dw_dial_extra_percent : UInt32
    dw_dial_extra_sample_seconds : UInt32
    dw_hang_up_extra_percent : UInt32
    dw_hang_up_extra_sample_seconds : UInt32
    dw_idle_disconnect_seconds : UInt32
    dw_type : UInt32
    dw_encryption_type : MPR_ET
    dw_custom_auth_key : UInt32
    dw_custom_auth_data_size : UInt32
    lpb_custom_auth_data : UInt8*
    guid_id : Guid
    dw_vpn_strategy : MPR_VS
    address_count : UInt32
    ipv6addr_dns : IN6_ADDR
    ipv6addr_dns_alt : IN6_ADDR
    ipv6addr : IN6_ADDR*
  end
  struct MPR_DEVICE_0
    sz_device_type : Char[17]*
    sz_device_name : Char[129]*
  end
  struct MPR_DEVICE_1
    sz_device_type : Char[17]*
    sz_device_name : Char[129]*
    sz_local_phone_number : Char[129]*
    sz_alternates : LibC::LPWSTR
  end
  struct MPR_CREDENTIALSEX_0
    dw_size : UInt32
    lpb_credentials_info : UInt8*
  end
  struct MPR_CREDENTIALSEX_1
    dw_size : UInt32
    lpb_credentials_info : UInt8*
  end
  struct MPR_TRANSPORT_0
    dw_transport_id : UInt32
    h_transport : LibC::HANDLE
    wsz_transport_name : Char[41]*
  end
  struct MPR_IFTRANSPORT_0
    dw_transport_id : UInt32
    h_if_transport : LibC::HANDLE
    wsz_if_transport_name : Char[41]*
  end
  struct MPR_SERVER_0
    f_lan_only_mode : LibC::BOOL
    dw_up_time : UInt32
    dw_total_ports : UInt32
    dw_ports_in_use : UInt32
  end
  struct MPR_SERVER_1
    dw_num_pptp_ports : UInt32
    dw_pptp_port_flags : UInt32
    dw_num_l2tp_ports : UInt32
    dw_l2tp_port_flags : UInt32
  end
  struct MPR_SERVER_2
    dw_num_pptp_ports : UInt32
    dw_pptp_port_flags : UInt32
    dw_num_l2tp_ports : UInt32
    dw_l2tp_port_flags : UInt32
    dw_num_sstp_ports : UInt32
    dw_sstp_port_flags : UInt32
  end
  struct RAS_PORT_0
    h_port : LibC::HANDLE
    h_connection : LibC::HANDLE
    dw_port_condition : RAS_PORT_CONDITION
    dw_total_number_of_calls : UInt32
    dw_connect_duration : UInt32
    wsz_port_name : Char[17]*
    wsz_media_name : Char[17]*
    wsz_device_name : Char[129]*
    wsz_device_type : Char[17]*
  end
  struct RAS_PORT_1
    h_port : LibC::HANDLE
    h_connection : LibC::HANDLE
    dw_hardware_condition : RAS_HARDWARE_CONDITION
    dw_line_speed : UInt32
    dw_bytes_xmited : UInt32
    dw_bytes_rcved : UInt32
    dw_frames_xmited : UInt32
    dw_frames_rcved : UInt32
    dw_crc_err : UInt32
    dw_timeout_err : UInt32
    dw_alignment_err : UInt32
    dw_hardware_overrun_err : UInt32
    dw_framing_err : UInt32
    dw_buffer_overrun_err : UInt32
    dw_compression_ratio_in : UInt32
    dw_compression_ratio_out : UInt32
  end
  struct RAS_PORT_2
    h_port : LibC::HANDLE
    h_connection : LibC::HANDLE
    dw_conn_state : UInt32
    wsz_port_name : Char[17]*
    wsz_media_name : Char[17]*
    wsz_device_name : Char[129]*
    wsz_device_type : Char[17]*
    dw_hardware_condition : RAS_HARDWARE_CONDITION
    dw_line_speed : UInt32
    dw_crc_err : UInt32
    dw_serial_over_run_errs : UInt32
    dw_timeout_err : UInt32
    dw_alignment_err : UInt32
    dw_hardware_overrun_err : UInt32
    dw_framing_err : UInt32
    dw_buffer_overrun_err : UInt32
    dw_compression_ratio_in : UInt32
    dw_compression_ratio_out : UInt32
    dw_total_errors : UInt32
    ull_bytes_xmited : UInt64
    ull_bytes_rcved : UInt64
    ull_frames_xmited : UInt64
    ull_frames_rcved : UInt64
    ull_bytes_tx_uncompressed : UInt64
    ull_bytes_tx_compressed : UInt64
    ull_bytes_rcv_uncompressed : UInt64
    ull_bytes_rcv_compressed : UInt64
  end
  struct PPP_NBFCP_INFO
    dw_error : UInt32
    wsz_wksta : Char[17]*
  end
  struct PPP_IPCP_INFO
    dw_error : UInt32
    wsz_address : Char[16]*
    wsz_remote_address : Char[16]*
  end
  struct PPP_IPCP_INFO2
    dw_error : UInt32
    wsz_address : Char[16]*
    wsz_remote_address : Char[16]*
    dw_options : UInt32
    dw_remote_options : UInt32
  end
  struct PPP_IPXCP_INFO
    dw_error : UInt32
    wsz_address : Char[23]*
  end
  struct PPP_ATCP_INFO
    dw_error : UInt32
    wsz_address : Char[33]*
  end
  struct PPP_IPV6_CP_INFO
    dw_version : UInt32
    dw_size : UInt32
    dw_error : UInt32
    b_interface_identifier : UInt8[8]*
    b_remote_interface_identifier : UInt8[8]*
    dw_options : UInt32
    dw_remote_options : UInt32
    b_prefix : UInt8[8]*
    dw_prefix_length : UInt32
  end
  struct PPP_INFO
    nbf : PPP_NBFCP_INFO
    ip : PPP_IPCP_INFO
    ipx : PPP_IPXCP_INFO
    at : PPP_ATCP_INFO
  end
  struct PPP_CCP_INFO
    dw_error : UInt32
    dw_compression_algorithm : UInt32
    dw_options : UInt32
    dw_remote_compression_algorithm : UInt32
    dw_remote_options : UInt32
  end
  struct PPP_LCP_INFO
    dw_error : UInt32
    dw_authentication_protocol : PPP_LCP
    dw_authentication_data : PPP_LCP_INFO_AUTH_DATA
    dw_remote_authentication_protocol : UInt32
    dw_remote_authentication_data : UInt32
    dw_terminate_reason : UInt32
    dw_remote_terminate_reason : UInt32
    dw_options : UInt32
    dw_remote_options : UInt32
    dw_eap_type_id : UInt32
    dw_remote_eap_type_id : UInt32
  end
  struct PPP_INFO_2
    nbf : PPP_NBFCP_INFO
    ip : PPP_IPCP_INFO2
    ipx : PPP_IPXCP_INFO
    at : PPP_ATCP_INFO
    ccp : PPP_CCP_INFO
    lcp : PPP_LCP_INFO
  end
  struct PPP_INFO_3
    nbf : PPP_NBFCP_INFO
    ip : PPP_IPCP_INFO2
    ipv6 : PPP_IPV6_CP_INFO
    ccp : PPP_CCP_INFO
    lcp : PPP_LCP_INFO
  end
  struct RAS_CONNECTION_0
    h_connection : LibC::HANDLE
    h_interface : LibC::HANDLE
    dw_connect_duration : UInt32
    dw_interface_type : ROUTER_INTERFACE_TYPE
    dw_connection_flags : RAS_FLAGS
    wsz_interface_name : Char[257]*
    wsz_user_name : Char[257]*
    wsz_logon_domain : Char[16]*
    wsz_remote_computer : Char[17]*
  end
  struct RAS_CONNECTION_1
    h_connection : LibC::HANDLE
    h_interface : LibC::HANDLE
    ppp_info : PPP_INFO
    dw_bytes_xmited : UInt32
    dw_bytes_rcved : UInt32
    dw_frames_xmited : UInt32
    dw_frames_rcved : UInt32
    dw_crc_err : UInt32
    dw_timeout_err : UInt32
    dw_alignment_err : UInt32
    dw_hardware_overrun_err : UInt32
    dw_framing_err : UInt32
    dw_buffer_overrun_err : UInt32
    dw_compression_ratio_in : UInt32
    dw_compression_ratio_out : UInt32
  end
  struct RAS_CONNECTION_2
    h_connection : LibC::HANDLE
    wsz_user_name : Char[257]*
    dw_interface_type : ROUTER_INTERFACE_TYPE
    guid : Guid
    ppp_info2 : PPP_INFO_2
  end
  struct RAS_CONNECTION_3
    dw_version : UInt32
    dw_size : UInt32
    h_connection : LibC::HANDLE
    wsz_user_name : Char[257]*
    dw_interface_type : ROUTER_INTERFACE_TYPE
    guid : Guid
    ppp_info3 : PPP_INFO_3
    ras_quar_state : RAS_QUARANTINE_STATE
    timer : FILETIME
  end
  struct RAS_USER_0
    bf_privilege : UInt8
    wsz_phone_number : Char[129]*
  end
  struct RAS_USER_1
    bf_privilege : UInt8
    wsz_phone_number : Char[129]*
    bf_privilege2 : UInt8
  end
  struct MPR_FILTER_0
    f_enable : LibC::BOOL
  end
  struct MPRAPI_OBJECT_HEADER
    revision : UInt8
    type : UInt8
    size : UInt16
  end
  struct PPP_PROJECTION_INFO
    dw_i_pv4_negotiation_error : UInt32
    wsz_address : Char[16]*
    wsz_remote_address : Char[16]*
    dw_i_pv4_options : UInt32
    dw_i_pv4_remote_options : UInt32
    i_pv4_sub_interface_index : UInt64
    dw_i_pv6_negotiation_error : UInt32
    b_interface_identifier : UInt8[8]*
    b_remote_interface_identifier : UInt8[8]*
    b_prefix : UInt8[8]*
    dw_prefix_length : UInt32
    i_pv6_sub_interface_index : UInt64
    dw_lcp_error : UInt32
    dw_authentication_protocol : PPP_LCP
    dw_authentication_data : PPP_LCP_INFO_AUTH_DATA
    dw_remote_authentication_protocol : PPP_LCP
    dw_remote_authentication_data : PPP_LCP_INFO_AUTH_DATA
    dw_lcp_terminate_reason : UInt32
    dw_lcp_remote_terminate_reason : UInt32
    dw_lcp_options : UInt32
    dw_lcp_remote_options : UInt32
    dw_eap_type_id : UInt32
    dw_remote_eap_type_id : UInt32
    dw_ccp_error : UInt32
    dw_compression_algorithm : UInt32
    dw_ccp_options : UInt32
    dw_remote_compression_algorithm : UInt32
    dw_ccp_remote_options : UInt32
  end
  struct PPP_PROJECTION_INFO2
    dw_i_pv4_negotiation_error : UInt32
    wsz_address : Char[16]*
    wsz_remote_address : Char[16]*
    dw_i_pv4_options : UInt32
    dw_i_pv4_remote_options : UInt32
    i_pv4_sub_interface_index : UInt64
    dw_i_pv6_negotiation_error : UInt32
    b_interface_identifier : UInt8[8]*
    b_remote_interface_identifier : UInt8[8]*
    b_prefix : UInt8[8]*
    dw_prefix_length : UInt32
    i_pv6_sub_interface_index : UInt64
    dw_lcp_error : UInt32
    dw_authentication_protocol : PPP_LCP
    dw_authentication_data : PPP_LCP_INFO_AUTH_DATA
    dw_remote_authentication_protocol : PPP_LCP
    dw_remote_authentication_data : PPP_LCP_INFO_AUTH_DATA
    dw_lcp_terminate_reason : UInt32
    dw_lcp_remote_terminate_reason : UInt32
    dw_lcp_options : UInt32
    dw_lcp_remote_options : UInt32
    dw_eap_type_id : UInt32
    dw_embedded_eap_type_id : UInt32
    dw_remote_eap_type_id : UInt32
    dw_ccp_error : UInt32
    dw_compression_algorithm : UInt32
    dw_ccp_options : UInt32
    dw_remote_compression_algorithm : UInt32
    dw_ccp_remote_options : UInt32
  end
  struct IKEV2_PROJECTION_INFO
    dw_i_pv4_negotiation_error : UInt32
    wsz_address : Char[16]*
    wsz_remote_address : Char[16]*
    i_pv4_sub_interface_index : UInt64
    dw_i_pv6_negotiation_error : UInt32
    b_interface_identifier : UInt8[8]*
    b_remote_interface_identifier : UInt8[8]*
    b_prefix : UInt8[8]*
    dw_prefix_length : UInt32
    i_pv6_sub_interface_index : UInt64
    dw_options : UInt32
    dw_authentication_protocol : UInt32
    dw_eap_type_id : UInt32
    dw_compression_algorithm : UInt32
    dw_encryption_method : UInt32
  end
  struct IKEV2_PROJECTION_INFO2
    dw_i_pv4_negotiation_error : UInt32
    wsz_address : Char[16]*
    wsz_remote_address : Char[16]*
    i_pv4_sub_interface_index : UInt64
    dw_i_pv6_negotiation_error : UInt32
    b_interface_identifier : UInt8[8]*
    b_remote_interface_identifier : UInt8[8]*
    b_prefix : UInt8[8]*
    dw_prefix_length : UInt32
    i_pv6_sub_interface_index : UInt64
    dw_options : UInt32
    dw_authentication_protocol : UInt32
    dw_eap_type_id : UInt32
    dw_embedded_eap_type_id : UInt32
    dw_compression_algorithm : UInt32
    dw_encryption_method : UInt32
  end
  struct PROJECTION_INFO
    projection_info_type : UInt8
    anonymous : PROJECTION_INFO_Anonymous_e__Union
  end
  struct PROJECTION_INFO2
    projection_info_type : UInt8
    anonymous : PROJECTION_INFO2_Anonymous_e__Union
  end
  struct RAS_CONNECTION_EX
    header : MPRAPI_OBJECT_HEADER
    dw_connect_duration : UInt32
    dw_interface_type : ROUTER_INTERFACE_TYPE
    dw_connection_flags : RAS_FLAGS
    wsz_interface_name : Char[257]*
    wsz_user_name : Char[257]*
    wsz_logon_domain : Char[16]*
    wsz_remote_computer : Char[17]*
    guid : Guid
    ras_quar_state : RAS_QUARANTINE_STATE
    probation_time : FILETIME
    dw_bytes_xmited : UInt32
    dw_bytes_rcved : UInt32
    dw_frames_xmited : UInt32
    dw_frames_rcved : UInt32
    dw_crc_err : UInt32
    dw_timeout_err : UInt32
    dw_alignment_err : UInt32
    dw_hardware_overrun_err : UInt32
    dw_framing_err : UInt32
    dw_buffer_overrun_err : UInt32
    dw_compression_ratio_in : UInt32
    dw_compression_ratio_out : UInt32
    dw_num_switch_overs : UInt32
    wsz_remote_endpoint_address : Char[65]*
    wsz_local_endpoint_address : Char[65]*
    projection_info : PROJECTION_INFO
    h_connection : LibC::HANDLE
    h_interface : LibC::HANDLE
  end
  struct RAS_CONNECTION_4
    dw_connect_duration : UInt32
    dw_interface_type : ROUTER_INTERFACE_TYPE
    dw_connection_flags : RAS_FLAGS
    wsz_interface_name : Char[257]*
    wsz_user_name : Char[257]*
    wsz_logon_domain : Char[16]*
    wsz_remote_computer : Char[17]*
    guid : Guid
    ras_quar_state : RAS_QUARANTINE_STATE
    probation_time : FILETIME
    connection_start_time : FILETIME
    ull_bytes_xmited : UInt64
    ull_bytes_rcved : UInt64
    dw_frames_xmited : UInt32
    dw_frames_rcved : UInt32
    dw_crc_err : UInt32
    dw_timeout_err : UInt32
    dw_alignment_err : UInt32
    dw_hardware_overrun_err : UInt32
    dw_framing_err : UInt32
    dw_buffer_overrun_err : UInt32
    dw_compression_ratio_in : UInt32
    dw_compression_ratio_out : UInt32
    dw_num_switch_overs : UInt32
    wsz_remote_endpoint_address : Char[65]*
    wsz_local_endpoint_address : Char[65]*
    projection_info : PROJECTION_INFO2
    h_connection : LibC::HANDLE
    h_interface : LibC::HANDLE
    dw_device_type : UInt32
  end
  struct ROUTER_CUSTOM_IKEv2_POLICY0
    dw_integrity_method : UInt32
    dw_encryption_method : UInt32
    dw_cipher_transform_constant : UInt32
    dw_auth_transform_constant : UInt32
    dw_pfs_group : UInt32
    dw_dh_group : UInt32
  end
  struct ROUTER_IKEv2_IF_CUSTOM_CONFIG0
    dw_sa_life_time : UInt32
    dw_sa_data_size : UInt32
    certificate_name : CRYPTOAPI_BLOB
    custom_policy : ROUTER_CUSTOM_IKEv2_POLICY0*
  end
  struct MPR_IF_CUSTOMINFOEX0
    header : MPRAPI_OBJECT_HEADER
    dw_flags : UInt32
    custom_ikev2_config : ROUTER_IKEv2_IF_CUSTOM_CONFIG0
  end
  struct MPR_CERT_EKU
    dw_size : UInt32
    is_ekuoid : LibC::BOOL
    pwsz_eku : LibC::LPWSTR
  end
  struct VPN_TS_IP_ADDRESS
    type : UInt16
    anonymous : VPN_TS_IP_ADDRESS_Anonymous_e__Union
  end
  struct MPR_VPN_SELECTOR
    type : MPR_VPN_TS_TYPE
    protocol_id : UInt8
    port_start : UInt16
    port_end : UInt16
    ts_payload_id : UInt16
    addr_start : VPN_TS_IP_ADDRESS
    addr_end : VPN_TS_IP_ADDRESS
  end
  struct MPR_VPN_TRAFFIC_SELECTORS
    num_tsi : UInt32
    num_tsr : UInt32
    ts_i : MPR_VPN_SELECTOR*
    ts_r : MPR_VPN_SELECTOR*
  end
  struct ROUTER_IKEv2_IF_CUSTOM_CONFIG2
    dw_sa_life_time : UInt32
    dw_sa_data_size : UInt32
    certificate_name : CRYPTOAPI_BLOB
    custom_policy : ROUTER_CUSTOM_IKEv2_POLICY0*
    certificate_hash : CRYPTOAPI_BLOB
    dw_mm_sa_life_time : UInt32
    vpn_traffic_selectors : MPR_VPN_TRAFFIC_SELECTORS
  end
  struct MPR_IF_CUSTOMINFOEX2
    header : MPRAPI_OBJECT_HEADER
    dw_flags : UInt32
    custom_ikev2_config : ROUTER_IKEv2_IF_CUSTOM_CONFIG2
  end
  struct IKEV2_TUNNEL_CONFIG_PARAMS4
    dw_idle_timeout : UInt32
    dw_network_blackout_time : UInt32
    dw_sa_life_time : UInt32
    dw_sa_data_size_for_renegotiation : UInt32
    dw_config_options : UInt32
    dw_total_certificates : UInt32
    certificate_names : CRYPTOAPI_BLOB*
    machine_certificate_name : CRYPTOAPI_BLOB
    dw_encryption_type : UInt32
    custom_policy : ROUTER_CUSTOM_IKEv2_POLICY0*
    dw_total_ekus : UInt32
    certificate_ek_us : MPR_CERT_EKU*
    machine_certificate_hash : CRYPTOAPI_BLOB
    dw_mm_sa_life_time : UInt32
  end
  struct ROUTER_IKEv2_IF_CUSTOM_CONFIG1
    dw_sa_life_time : UInt32
    dw_sa_data_size : UInt32
    certificate_name : CRYPTOAPI_BLOB
    custom_policy : ROUTER_CUSTOM_IKEv2_POLICY0*
    certificate_hash : CRYPTOAPI_BLOB
  end
  struct MPR_IF_CUSTOMINFOEX1
    header : MPRAPI_OBJECT_HEADER
    dw_flags : UInt32
    custom_ikev2_config : ROUTER_IKEv2_IF_CUSTOM_CONFIG1
  end
  struct IKEV2_TUNNEL_CONFIG_PARAMS3
    dw_idle_timeout : UInt32
    dw_network_blackout_time : UInt32
    dw_sa_life_time : UInt32
    dw_sa_data_size_for_renegotiation : UInt32
    dw_config_options : UInt32
    dw_total_certificates : UInt32
    certificate_names : CRYPTOAPI_BLOB*
    machine_certificate_name : CRYPTOAPI_BLOB
    dw_encryption_type : UInt32
    custom_policy : ROUTER_CUSTOM_IKEv2_POLICY0*
    dw_total_ekus : UInt32
    certificate_ek_us : MPR_CERT_EKU*
    machine_certificate_hash : CRYPTOAPI_BLOB
  end
  struct IKEV2_TUNNEL_CONFIG_PARAMS2
    dw_idle_timeout : UInt32
    dw_network_blackout_time : UInt32
    dw_sa_life_time : UInt32
    dw_sa_data_size_for_renegotiation : UInt32
    dw_config_options : UInt32
    dw_total_certificates : UInt32
    certificate_names : CRYPTOAPI_BLOB*
    machine_certificate_name : CRYPTOAPI_BLOB
    dw_encryption_type : UInt32
    custom_policy : ROUTER_CUSTOM_IKEv2_POLICY0*
  end
  struct L2TP_TUNNEL_CONFIG_PARAMS2
    dw_idle_timeout : UInt32
    dw_encryption_type : UInt32
    dw_sa_life_time : UInt32
    dw_sa_data_size_for_renegotiation : UInt32
    custom_policy : ROUTER_CUSTOM_IKEv2_POLICY0*
    dw_mm_sa_life_time : UInt32
  end
  struct L2TP_TUNNEL_CONFIG_PARAMS1
    dw_idle_timeout : UInt32
    dw_encryption_type : UInt32
    dw_sa_life_time : UInt32
    dw_sa_data_size_for_renegotiation : UInt32
    custom_policy : ROUTER_CUSTOM_IKEv2_POLICY0*
  end
  struct IKEV2_CONFIG_PARAMS
    dw_num_ports : UInt32
    dw_port_flags : UInt32
    dw_tunnel_config_param_flags : UInt32
    tunnel_config_params : IKEV2_TUNNEL_CONFIG_PARAMS4
  end
  struct PPTP_CONFIG_PARAMS
    dw_num_ports : UInt32
    dw_port_flags : UInt32
  end
  struct L2TP_CONFIG_PARAMS1
    dw_num_ports : UInt32
    dw_port_flags : UInt32
    dw_tunnel_config_param_flags : UInt32
    tunnel_config_params : L2TP_TUNNEL_CONFIG_PARAMS2
  end
  struct GRE_CONFIG_PARAMS0
    dw_num_ports : UInt32
    dw_port_flags : UInt32
  end
  struct L2TP_CONFIG_PARAMS0
    dw_num_ports : UInt32
    dw_port_flags : UInt32
  end
  struct SSTP_CERT_INFO
    is_default : LibC::BOOL
    cert_blob : CRYPTOAPI_BLOB
  end
  struct SSTP_CONFIG_PARAMS
    dw_num_ports : UInt32
    dw_port_flags : UInt32
    is_use_https : LibC::BOOL
    cert_algorithm : UInt32
    sstp_cert_details : SSTP_CERT_INFO
  end
  struct MPRAPI_TUNNEL_CONFIG_PARAMS0
    ike_config_params : IKEV2_CONFIG_PARAMS
    pptp_config_params : PPTP_CONFIG_PARAMS
    l2tp_config_params : L2TP_CONFIG_PARAMS1
    sstp_config_params : SSTP_CONFIG_PARAMS
  end
  struct MPRAPI_TUNNEL_CONFIG_PARAMS1
    ike_config_params : IKEV2_CONFIG_PARAMS
    pptp_config_params : PPTP_CONFIG_PARAMS
    l2tp_config_params : L2TP_CONFIG_PARAMS1
    sstp_config_params : SSTP_CONFIG_PARAMS
    gre_config_params : GRE_CONFIG_PARAMS0
  end
  struct MPR_SERVER_EX0
    header : MPRAPI_OBJECT_HEADER
    f_lan_only_mode : UInt32
    dw_up_time : UInt32
    dw_total_ports : UInt32
    dw_ports_in_use : UInt32
    reserved : UInt32
    config_params : MPRAPI_TUNNEL_CONFIG_PARAMS0
  end
  struct MPR_SERVER_EX1
    header : MPRAPI_OBJECT_HEADER
    f_lan_only_mode : UInt32
    dw_up_time : UInt32
    dw_total_ports : UInt32
    dw_ports_in_use : UInt32
    reserved : UInt32
    config_params : MPRAPI_TUNNEL_CONFIG_PARAMS1
  end
  struct MPR_SERVER_SET_CONFIG_EX0
    header : MPRAPI_OBJECT_HEADER
    set_config_for_protocols : UInt32
    config_params : MPRAPI_TUNNEL_CONFIG_PARAMS0
  end
  struct MPR_SERVER_SET_CONFIG_EX1
    header : MPRAPI_OBJECT_HEADER
    set_config_for_protocols : UInt32
    config_params : MPRAPI_TUNNEL_CONFIG_PARAMS1
  end
  struct AUTH_VALIDATION_EX
    header : MPRAPI_OBJECT_HEADER
    h_ras_connection : LibC::HANDLE
    wsz_user_name : Char[257]*
    wsz_logon_domain : Char[16]*
    auth_info_size : UInt32
    auth_info : UInt8[0]*
  end
  struct RAS_UPDATE_CONNECTION
    header : MPRAPI_OBJECT_HEADER
    dw_if_index : UInt32
    wsz_local_endpoint_address : Char[65]*
    wsz_remote_endpoint_address : Char[65]*
  end
  struct MPRAPI_ADMIN_DLL_CALLBACKS
    revision : UInt8
    lpfn_mpr_admin_get_ip_address_for_user : PMPRADMINGETIPADDRESSFORUSER
    lpfn_mpr_admin_release_ip_address : PMPRADMINRELEASEIPADRESS
    lpfn_mpr_admin_get_ipv6_address_for_user : PMPRADMINGETIPV6ADDRESSFORUSER
    lpfn_mpr_admin_release_ip_v6_address_for_user : PMPRADMINRELEASEIPV6ADDRESSFORUSER
    lpfn_ras_admin_accept_new_link : PMPRADMINACCEPTNEWLINK
    lpfn_ras_admin_link_hangup_notification : PMPRADMINLINKHANGUPNOTIFICATION
    lpfn_ras_admin_terminate_dll : PMPRADMINTERMINATEDLL
    lpfn_ras_admin_accept_new_connection_ex : PMPRADMINACCEPTNEWCONNECTIONEX
    lpfn_ras_admin_accept_endpoint_change_ex : PMPRADMINACCEPTTUNNELENDPOINTCHANGEEX
    lpfn_ras_admin_accept_reauthentication_ex : PMPRADMINACCEPTREAUTHENTICATIONEX
    lpfn_ras_admin_connection_hangup_notification_ex : PMPRADMINCONNECTIONHANGUPNOTIFICATIONEX
    lpfn_ras_validate_pre_authenticated_connection_ex : PMPRADMINRASVALIDATEPREAUTHENTICATEDCONNECTIONEX
  end
  struct SECURITY_MESSAGE
    dw_msg_id : SECURITY_MESSAGE_MSG_ID
    h_port : LibC::IntPtrT
    dw_error : UInt32
    user_name : CHAR[257]*
    domain : CHAR[16]*
  end
  struct RAS_SECURITY_INFO
    last_error : UInt32
    bytes_received : UInt32
    device_name : CHAR[129]*
  end
  struct MGM_IF_ENTRY
    dw_if_index : UInt32
    dw_if_next_hop_addr : UInt32
    b_igmp : LibC::BOOL
    b_is_enabled : LibC::BOOL
  end
  struct ROUTING_PROTOCOL_CONFIG
    dw_callback_flags : UInt32
    pfn_rpf_callback : PMGM_RPF_CALLBACK
    pfn_creation_alert_callback : PMGM_CREATION_ALERT_CALLBACK
    pfn_prune_alert_callback : PMGM_PRUNE_ALERT_CALLBACK
    pfn_join_alert_callback : PMGM_JOIN_ALERT_CALLBACK
    pfn_wrong_if_callback : PMGM_WRONG_IF_CALLBACK
    pfn_local_join_callback : PMGM_LOCAL_JOIN_CALLBACK
    pfn_local_leave_callback : PMGM_LOCAL_LEAVE_CALLBACK
    pfn_disable_igmp_callback : PMGM_DISABLE_IGMP_CALLBACK
    pfn_enable_igmp_callback : PMGM_ENABLE_IGMP_CALLBACK
  end
  struct SOURCE_GROUP_ENTRY
    dw_source_addr : UInt32
    dw_source_mask : UInt32
    dw_group_addr : UInt32
    dw_group_mask : UInt32
  end
  struct RTM_REGN_PROFILE
    max_next_hops_in_route : UInt32
    max_handles_in_enum : UInt32
    views_supported : UInt32
    number_of_views : UInt32
  end
  struct RTM_NET_ADDRESS
    address_family : UInt16
    num_bits : UInt16
    addr_bits : UInt8[16]*
  end
  struct RTM_PREF_INFO
    metric : UInt32
    preference : UInt32
  end
  struct RTM_NEXTHOP_LIST
    num_next_hops : UInt16
    next_hops : LibC::IntPtrT[0]*
  end
  struct RTM_DEST_INFO
    dest_handle : LibC::IntPtrT
    dest_address : RTM_NET_ADDRESS
    last_changed : FILETIME
    belongs_to_views : UInt32
    number_of_views : UInt32
    view_info : RTM_DEST_INFO_Anonymous_e__Struct[0]*
  end
  struct RTM_DEST_INFO_Anonymous_e__Struct
    view_id : Int32
    num_routes : UInt32
    route : LibC::IntPtrT
    owner : LibC::IntPtrT
    dest_flags : UInt32
    hold_route : LibC::IntPtrT
  end
  struct RTM_ROUTE_INFO
    dest_handle : LibC::IntPtrT
    route_owner : LibC::IntPtrT
    neighbour : LibC::IntPtrT
    state : UInt8
    flags1 : UInt8
    flags : UInt16
    pref_info : RTM_PREF_INFO
    belongs_to_views : UInt32
    entity_specific_info : Void*
    next_hops_list : RTM_NEXTHOP_LIST
  end
  struct RTM_NEXTHOP_INFO
    next_hop_address : RTM_NET_ADDRESS
    next_hop_owner : LibC::IntPtrT
    interface_index : UInt32
    state : UInt16
    flags : UInt16
    entity_specific_info : Void*
    remote_next_hop : LibC::IntPtrT
  end
  struct RTM_ENTITY_ID
    anonymous : RTM_ENTITY_ID_Anonymous_e__Union
  end
  struct RTM_ENTITY_ID_Anonymous_e__Union_Anonymous_e__Struct
    entity_protocol_id : UInt32
    entity_instance_id : UInt32
  end
  struct RTM_ENTITY_INFO
    rtm_instance_id : UInt16
    address_family : UInt16
    entity_id : RTM_ENTITY_ID
  end
  struct RTM_ENTITY_METHOD_INPUT
    method_type : UInt32
    input_size : UInt32
    input_data : UInt8[0]*
  end
  struct RTM_ENTITY_METHOD_OUTPUT
    method_type : UInt32
    method_status : UInt32
    output_size : UInt32
    output_data : UInt8[0]*
  end
  struct RTM_ENTITY_EXPORT_METHODS
    num_methods : UInt32
    methods : RTM_ENTITY_EXPORT_METHOD[0]*
  end


  # Params # param0 : RASDIALEXTENSIONS* [In],param1 : PSTR [In],param2 : RASDIALPARAMSA* [In],param3 : UInt32 [In],param4 : Void* [In],param5 : HRASCONN* [In]
  fun RasDialA(param0 : RASDIALEXTENSIONS*, param1 : PSTR, param2 : RASDIALPARAMSA*, param3 : UInt32, param4 : Void*, param5 : HRASCONN*) : UInt32

  # Params # param0 : RASDIALEXTENSIONS* [In],param1 : LibC::LPWSTR [In],param2 : RASDIALPARAMSW* [In],param3 : UInt32 [In],param4 : Void* [In],param5 : HRASCONN* [In]
  fun RasDialW(param0 : RASDIALEXTENSIONS*, param1 : LibC::LPWSTR, param2 : RASDIALPARAMSW*, param3 : UInt32, param4 : Void*, param5 : HRASCONN*) : UInt32

  # Params # param0 : RASCONNA* [In],param1 : UInt32* [In],param2 : UInt32* [In]
  fun RasEnumConnectionsA(param0 : RASCONNA*, param1 : UInt32*, param2 : UInt32*) : UInt32

  # Params # param0 : RASCONNW* [In],param1 : UInt32* [In],param2 : UInt32* [In]
  fun RasEnumConnectionsW(param0 : RASCONNW*, param1 : UInt32*, param2 : UInt32*) : UInt32

  # Params # param0 : PSTR [In],param1 : PSTR [In],param2 : RASENTRYNAMEA* [In],param3 : UInt32* [In],param4 : UInt32* [In]
  fun RasEnumEntriesA(param0 : PSTR, param1 : PSTR, param2 : RASENTRYNAMEA*, param3 : UInt32*, param4 : UInt32*) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : LibC::LPWSTR [In],param2 : RASENTRYNAMEW* [In],param3 : UInt32* [In],param4 : UInt32* [In]
  fun RasEnumEntriesW(param0 : LibC::LPWSTR, param1 : LibC::LPWSTR, param2 : RASENTRYNAMEW*, param3 : UInt32*, param4 : UInt32*) : UInt32

  # Params # param0 : HRASCONN [In],param1 : RASCONNSTATUSA* [In]
  fun RasGetConnectStatusA(param0 : HRASCONN, param1 : RASCONNSTATUSA*) : UInt32

  # Params # param0 : HRASCONN [In],param1 : RASCONNSTATUSW* [In]
  fun RasGetConnectStatusW(param0 : HRASCONN, param1 : RASCONNSTATUSW*) : UInt32

  # Params # resourceid : UInt32 [In],lpszstring : UInt8* [In],inbufsize : UInt32 [In]
  fun RasGetErrorStringA(resourceid : UInt32, lpszstring : UInt8*, inbufsize : UInt32) : UInt32

  # Params # resourceid : UInt32 [In],lpszstring : Char* [In],inbufsize : UInt32 [In]
  fun RasGetErrorStringW(resourceid : UInt32, lpszstring : Char*, inbufsize : UInt32) : UInt32

  # Params # param0 : HRASCONN [In]
  fun RasHangUpA(param0 : HRASCONN) : UInt32

  # Params # param0 : HRASCONN [In]
  fun RasHangUpW(param0 : HRASCONN) : UInt32

  # Params # param0 : HRASCONN [In],param1 : RASPROJECTION [In],param2 : Void* [In],param3 : UInt32* [In]
  fun RasGetProjectionInfoA(param0 : HRASCONN, param1 : RASPROJECTION, param2 : Void*, param3 : UInt32*) : UInt32

  # Params # param0 : HRASCONN [In],param1 : RASPROJECTION [In],param2 : Void* [In],param3 : UInt32* [In]
  fun RasGetProjectionInfoW(param0 : HRASCONN, param1 : RASPROJECTION, param2 : Void*, param3 : UInt32*) : UInt32

  # Params # param0 : LibC::HANDLE [In],param1 : PSTR [In]
  fun RasCreatePhonebookEntryA(param0 : LibC::HANDLE, param1 : PSTR) : UInt32

  # Params # param0 : LibC::HANDLE [In],param1 : LibC::LPWSTR [In]
  fun RasCreatePhonebookEntryW(param0 : LibC::HANDLE, param1 : LibC::LPWSTR) : UInt32

  # Params # param0 : LibC::HANDLE [In],param1 : PSTR [In],param2 : PSTR [In]
  fun RasEditPhonebookEntryA(param0 : LibC::HANDLE, param1 : PSTR, param2 : PSTR) : UInt32

  # Params # param0 : LibC::HANDLE [In],param1 : LibC::LPWSTR [In],param2 : LibC::LPWSTR [In]
  fun RasEditPhonebookEntryW(param0 : LibC::HANDLE, param1 : LibC::LPWSTR, param2 : LibC::LPWSTR) : UInt32

  # Params # param0 : PSTR [In],param1 : RASDIALPARAMSA* [In],param2 : LibC::BOOL [In]
  fun RasSetEntryDialParamsA(param0 : PSTR, param1 : RASDIALPARAMSA*, param2 : LibC::BOOL) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : RASDIALPARAMSW* [In],param2 : LibC::BOOL [In]
  fun RasSetEntryDialParamsW(param0 : LibC::LPWSTR, param1 : RASDIALPARAMSW*, param2 : LibC::BOOL) : UInt32

  # Params # param0 : PSTR [In],param1 : RASDIALPARAMSA* [In],param2 : Int32* [In]
  fun RasGetEntryDialParamsA(param0 : PSTR, param1 : RASDIALPARAMSA*, param2 : Int32*) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : RASDIALPARAMSW* [In],param2 : Int32* [In]
  fun RasGetEntryDialParamsW(param0 : LibC::LPWSTR, param1 : RASDIALPARAMSW*, param2 : Int32*) : UInt32

  # Params # param0 : RASDEVINFOA* [In],param1 : UInt32* [In],param2 : UInt32* [In]
  fun RasEnumDevicesA(param0 : RASDEVINFOA*, param1 : UInt32*, param2 : UInt32*) : UInt32

  # Params # param0 : RASDEVINFOW* [In],param1 : UInt32* [In],param2 : UInt32* [In]
  fun RasEnumDevicesW(param0 : RASDEVINFOW*, param1 : UInt32*, param2 : UInt32*) : UInt32

  # Params # param0 : RASCTRYINFO* [In],param1 : UInt32* [In]
  fun RasGetCountryInfoA(param0 : RASCTRYINFO*, param1 : UInt32*) : UInt32

  # Params # param0 : RASCTRYINFO* [In],param1 : UInt32* [In]
  fun RasGetCountryInfoW(param0 : RASCTRYINFO*, param1 : UInt32*) : UInt32

  # Params # param0 : PSTR [In],param1 : PSTR [In],param2 : RASENTRYA* [In],param3 : UInt32* [In],param4 : UInt8* [In],param5 : UInt32* [In]
  fun RasGetEntryPropertiesA(param0 : PSTR, param1 : PSTR, param2 : RASENTRYA*, param3 : UInt32*, param4 : UInt8*, param5 : UInt32*) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : LibC::LPWSTR [In],param2 : RASENTRYW* [In],param3 : UInt32* [In],param4 : UInt8* [In],param5 : UInt32* [In]
  fun RasGetEntryPropertiesW(param0 : LibC::LPWSTR, param1 : LibC::LPWSTR, param2 : RASENTRYW*, param3 : UInt32*, param4 : UInt8*, param5 : UInt32*) : UInt32

  # Params # param0 : PSTR [In],param1 : PSTR [In],param2 : RASENTRYA* [In],param3 : UInt32 [In],param4 : UInt8* [In],param5 : UInt32 [In]
  fun RasSetEntryPropertiesA(param0 : PSTR, param1 : PSTR, param2 : RASENTRYA*, param3 : UInt32, param4 : UInt8*, param5 : UInt32) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : LibC::LPWSTR [In],param2 : RASENTRYW* [In],param3 : UInt32 [In],param4 : UInt8* [In],param5 : UInt32 [In]
  fun RasSetEntryPropertiesW(param0 : LibC::LPWSTR, param1 : LibC::LPWSTR, param2 : RASENTRYW*, param3 : UInt32, param4 : UInt8*, param5 : UInt32) : UInt32

  # Params # param0 : PSTR [In],param1 : PSTR [In],param2 : PSTR [In]
  fun RasRenameEntryA(param0 : PSTR, param1 : PSTR, param2 : PSTR) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : LibC::LPWSTR [In],param2 : LibC::LPWSTR [In]
  fun RasRenameEntryW(param0 : LibC::LPWSTR, param1 : LibC::LPWSTR, param2 : LibC::LPWSTR) : UInt32

  # Params # param0 : PSTR [In],param1 : PSTR [In]
  fun RasDeleteEntryA(param0 : PSTR, param1 : PSTR) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : LibC::LPWSTR [In]
  fun RasDeleteEntryW(param0 : LibC::LPWSTR, param1 : LibC::LPWSTR) : UInt32

  # Params # param0 : PSTR [In],param1 : PSTR [In]
  fun RasValidateEntryNameA(param0 : PSTR, param1 : PSTR) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : LibC::LPWSTR [In]
  fun RasValidateEntryNameW(param0 : LibC::LPWSTR, param1 : LibC::LPWSTR) : UInt32

  # Params # param0 : HRASCONN [In],param1 : LibC::HANDLE [In],param2 : UInt32 [In]
  fun RasConnectionNotificationA(param0 : HRASCONN, param1 : LibC::HANDLE, param2 : UInt32) : UInt32

  # Params # param0 : HRASCONN [In],param1 : LibC::HANDLE [In],param2 : UInt32 [In]
  fun RasConnectionNotificationW(param0 : HRASCONN, param1 : LibC::HANDLE, param2 : UInt32) : UInt32

  # Params # param0 : HRASCONN [In],param1 : UInt32 [In],param2 : HRASCONN* [In]
  fun RasGetSubEntryHandleA(param0 : HRASCONN, param1 : UInt32, param2 : HRASCONN*) : UInt32

  # Params # param0 : HRASCONN [In],param1 : UInt32 [In],param2 : HRASCONN* [In]
  fun RasGetSubEntryHandleW(param0 : HRASCONN, param1 : UInt32, param2 : HRASCONN*) : UInt32

  # Params # param0 : PSTR [In],param1 : PSTR [In],param2 : RASCREDENTIALSA* [In]
  fun RasGetCredentialsA(param0 : PSTR, param1 : PSTR, param2 : RASCREDENTIALSA*) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : LibC::LPWSTR [In],param2 : RASCREDENTIALSW* [In]
  fun RasGetCredentialsW(param0 : LibC::LPWSTR, param1 : LibC::LPWSTR, param2 : RASCREDENTIALSW*) : UInt32

  # Params # param0 : PSTR [In],param1 : PSTR [In],param2 : RASCREDENTIALSA* [In],param3 : LibC::BOOL [In]
  fun RasSetCredentialsA(param0 : PSTR, param1 : PSTR, param2 : RASCREDENTIALSA*, param3 : LibC::BOOL) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : LibC::LPWSTR [In],param2 : RASCREDENTIALSW* [In],param3 : LibC::BOOL [In]
  fun RasSetCredentialsW(param0 : LibC::LPWSTR, param1 : LibC::LPWSTR, param2 : RASCREDENTIALSW*, param3 : LibC::BOOL) : UInt32

  # Params # param0 : PSTR [In],param1 : PSTR [In],param2 : UInt32 [In],param3 : RASSUBENTRYA* [In],param4 : UInt32* [In],param5 : UInt8* [In],param6 : UInt32* [In]
  fun RasGetSubEntryPropertiesA(param0 : PSTR, param1 : PSTR, param2 : UInt32, param3 : RASSUBENTRYA*, param4 : UInt32*, param5 : UInt8*, param6 : UInt32*) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : LibC::LPWSTR [In],param2 : UInt32 [In],param3 : RASSUBENTRYW* [In],param4 : UInt32* [In],param5 : UInt8* [In],param6 : UInt32* [In]
  fun RasGetSubEntryPropertiesW(param0 : LibC::LPWSTR, param1 : LibC::LPWSTR, param2 : UInt32, param3 : RASSUBENTRYW*, param4 : UInt32*, param5 : UInt8*, param6 : UInt32*) : UInt32

  # Params # param0 : PSTR [In],param1 : PSTR [In],param2 : UInt32 [In],param3 : RASSUBENTRYA* [In],param4 : UInt32 [In],param5 : UInt8* [In],param6 : UInt32 [In]
  fun RasSetSubEntryPropertiesA(param0 : PSTR, param1 : PSTR, param2 : UInt32, param3 : RASSUBENTRYA*, param4 : UInt32, param5 : UInt8*, param6 : UInt32) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : LibC::LPWSTR [In],param2 : UInt32 [In],param3 : RASSUBENTRYW* [In],param4 : UInt32 [In],param5 : UInt8* [In],param6 : UInt32 [In]
  fun RasSetSubEntryPropertiesW(param0 : LibC::LPWSTR, param1 : LibC::LPWSTR, param2 : UInt32, param3 : RASSUBENTRYW*, param4 : UInt32, param5 : UInt8*, param6 : UInt32) : UInt32

  # Params # param0 : PSTR [In],param1 : UInt32* [In],param2 : RASAUTODIALENTRYA* [In],param3 : UInt32* [In],param4 : UInt32* [In]
  fun RasGetAutodialAddressA(param0 : PSTR, param1 : UInt32*, param2 : RASAUTODIALENTRYA*, param3 : UInt32*, param4 : UInt32*) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : UInt32* [In],param2 : RASAUTODIALENTRYW* [In],param3 : UInt32* [In],param4 : UInt32* [In]
  fun RasGetAutodialAddressW(param0 : LibC::LPWSTR, param1 : UInt32*, param2 : RASAUTODIALENTRYW*, param3 : UInt32*, param4 : UInt32*) : UInt32

  # Params # param0 : PSTR [In],param1 : UInt32 [In],param2 : RASAUTODIALENTRYA* [In],param3 : UInt32 [In],param4 : UInt32 [In]
  fun RasSetAutodialAddressA(param0 : PSTR, param1 : UInt32, param2 : RASAUTODIALENTRYA*, param3 : UInt32, param4 : UInt32) : UInt32

  # Params # param0 : LibC::LPWSTR [In],param1 : UInt32 [In],param2 : RASAUTODIALENTRYW* [In],param3 : UInt32 [In],param4 : UInt32 [In]
  fun RasSetAutodialAddressW(param0 : LibC::LPWSTR, param1 : UInt32, param2 : RASAUTODIALENTRYW*, param3 : UInt32, param4 : UInt32) : UInt32

  # Params # lpprasautodialaddresses : PSTR* [In],lpdwcbrasautodialaddresses : UInt32* [In],lpdwcrasautodialaddresses : UInt32* [In]
  fun RasEnumAutodialAddressesA(lpprasautodialaddresses : PSTR*, lpdwcbrasautodialaddresses : UInt32*, lpdwcrasautodialaddresses : UInt32*) : UInt32

  # Params # lpprasautodialaddresses : LibC::LPWSTR* [In],lpdwcbrasautodialaddresses : UInt32* [In],lpdwcrasautodialaddresses : UInt32* [In]
  fun RasEnumAutodialAddressesW(lpprasautodialaddresses : LibC::LPWSTR*, lpdwcbrasautodialaddresses : UInt32*, lpdwcrasautodialaddresses : UInt32*) : UInt32

  # Params # param0 : UInt32 [In],param1 : Int32* [In]
  fun RasGetAutodialEnableA(param0 : UInt32, param1 : Int32*) : UInt32

  # Params # param0 : UInt32 [In],param1 : Int32* [In]
  fun RasGetAutodialEnableW(param0 : UInt32, param1 : Int32*) : UInt32

  # Params # param0 : UInt32 [In],param1 : LibC::BOOL [In]
  fun RasSetAutodialEnableA(param0 : UInt32, param1 : LibC::BOOL) : UInt32

  # Params # param0 : UInt32 [In],param1 : LibC::BOOL [In]
  fun RasSetAutodialEnableW(param0 : UInt32, param1 : LibC::BOOL) : UInt32

  # Params # param0 : UInt32 [In],param1 : Void* [In],param2 : UInt32* [In]
  fun RasGetAutodialParamA(param0 : UInt32, param1 : Void*, param2 : UInt32*) : UInt32

  # Params # param0 : UInt32 [In],param1 : Void* [In],param2 : UInt32* [In]
  fun RasGetAutodialParamW(param0 : UInt32, param1 : Void*, param2 : UInt32*) : UInt32

  # Params # param0 : UInt32 [In],param1 : Void* [In],param2 : UInt32 [In]
  fun RasSetAutodialParamA(param0 : UInt32, param1 : Void*, param2 : UInt32) : UInt32

  # Params # param0 : UInt32 [In],param1 : Void* [In],param2 : UInt32 [In]
  fun RasSetAutodialParamW(param0 : UInt32, param1 : Void*, param2 : UInt32) : UInt32

  # Params # lpszpcscf : LibC::LPWSTR [In]
  fun RasGetPCscf(lpszpcscf : LibC::LPWSTR) : UInt32

  # Params # param0 : HRASCONN [In],param1 : UInt32 [In],param2 : RASDIALEXTENSIONS* [In],param3 : LibC::HANDLE [In]
  fun RasInvokeEapUI(param0 : HRASCONN, param1 : UInt32, param2 : RASDIALEXTENSIONS*, param3 : LibC::HANDLE) : UInt32

  # Params # hrasconn : HRASCONN [In],dwsubentry : UInt32 [In],lpstatistics : RAS_STATS* [In]
  fun RasGetLinkStatistics(hrasconn : HRASCONN, dwsubentry : UInt32, lpstatistics : RAS_STATS*) : UInt32

  # Params # hrasconn : HRASCONN [In],lpstatistics : RAS_STATS* [In]
  fun RasGetConnectionStatistics(hrasconn : HRASCONN, lpstatistics : RAS_STATS*) : UInt32

  # Params # hrasconn : HRASCONN [In],dwsubentry : UInt32 [In]
  fun RasClearLinkStatistics(hrasconn : HRASCONN, dwsubentry : UInt32) : UInt32

  # Params # hrasconn : HRASCONN [In]
  fun RasClearConnectionStatistics(hrasconn : HRASCONN) : UInt32

  # Params # htoken : LibC::HANDLE [In],pszphonebook : PSTR [In],pszentry : PSTR [In],pbeapdata : UInt8* [In],pdwsizeofeapdata : UInt32* [In]
  fun RasGetEapUserDataA(htoken : LibC::HANDLE, pszphonebook : PSTR, pszentry : PSTR, pbeapdata : UInt8*, pdwsizeofeapdata : UInt32*) : UInt32

  # Params # htoken : LibC::HANDLE [In],pszphonebook : LibC::LPWSTR [In],pszentry : LibC::LPWSTR [In],pbeapdata : UInt8* [In],pdwsizeofeapdata : UInt32* [In]
  fun RasGetEapUserDataW(htoken : LibC::HANDLE, pszphonebook : LibC::LPWSTR, pszentry : LibC::LPWSTR, pbeapdata : UInt8*, pdwsizeofeapdata : UInt32*) : UInt32

  # Params # htoken : LibC::HANDLE [In],pszphonebook : PSTR [In],pszentry : PSTR [In],pbeapdata : UInt8* [In],dwsizeofeapdata : UInt32 [In]
  fun RasSetEapUserDataA(htoken : LibC::HANDLE, pszphonebook : PSTR, pszentry : PSTR, pbeapdata : UInt8*, dwsizeofeapdata : UInt32) : UInt32

  # Params # htoken : LibC::HANDLE [In],pszphonebook : LibC::LPWSTR [In],pszentry : LibC::LPWSTR [In],pbeapdata : UInt8* [In],dwsizeofeapdata : UInt32 [In]
  fun RasSetEapUserDataW(htoken : LibC::HANDLE, pszphonebook : LibC::LPWSTR, pszentry : LibC::LPWSTR, pbeapdata : UInt8*, dwsizeofeapdata : UInt32) : UInt32

  # Params # pszphonebook : PSTR [In],pszentry : PSTR [In],pbcustomauthdata : UInt8* [In],pdwsizeofcustomauthdata : UInt32* [In]
  fun RasGetCustomAuthDataA(pszphonebook : PSTR, pszentry : PSTR, pbcustomauthdata : UInt8*, pdwsizeofcustomauthdata : UInt32*) : UInt32

  # Params # pszphonebook : LibC::LPWSTR [In],pszentry : LibC::LPWSTR [In],pbcustomauthdata : UInt8* [In],pdwsizeofcustomauthdata : UInt32* [In]
  fun RasGetCustomAuthDataW(pszphonebook : LibC::LPWSTR, pszentry : LibC::LPWSTR, pbcustomauthdata : UInt8*, pdwsizeofcustomauthdata : UInt32*) : UInt32

  # Params # pszphonebook : PSTR [In],pszentry : PSTR [In],pbcustomauthdata : UInt8* [In],dwsizeofcustomauthdata : UInt32 [In]
  fun RasSetCustomAuthDataA(pszphonebook : PSTR, pszentry : PSTR, pbcustomauthdata : UInt8*, dwsizeofcustomauthdata : UInt32) : UInt32

  # Params # pszphonebook : LibC::LPWSTR [In],pszentry : LibC::LPWSTR [In],pbcustomauthdata : UInt8* [In],dwsizeofcustomauthdata : UInt32 [In]
  fun RasSetCustomAuthDataW(pszphonebook : LibC::LPWSTR, pszentry : LibC::LPWSTR, pbcustomauthdata : UInt8*, dwsizeofcustomauthdata : UInt32) : UInt32

  # Params # pszphonebook : LibC::LPWSTR [In],pszentry : LibC::LPWSTR [In],dwflags : UInt32 [In],hwnd : LibC::HANDLE [In],ppraseapuseridentity : RASEAPUSERIDENTITYW** [In]
  fun RasGetEapUserIdentityW(pszphonebook : LibC::LPWSTR, pszentry : LibC::LPWSTR, dwflags : UInt32, hwnd : LibC::HANDLE, ppraseapuseridentity : RASEAPUSERIDENTITYW**) : UInt32

  # Params # pszphonebook : PSTR [In],pszentry : PSTR [In],dwflags : UInt32 [In],hwnd : LibC::HANDLE [In],ppraseapuseridentity : RASEAPUSERIDENTITYA** [In]
  fun RasGetEapUserIdentityA(pszphonebook : PSTR, pszentry : PSTR, dwflags : UInt32, hwnd : LibC::HANDLE, ppraseapuseridentity : RASEAPUSERIDENTITYA**) : UInt32

  # Params # praseapuseridentity : RASEAPUSERIDENTITYW* [In]
  fun RasFreeEapUserIdentityW(praseapuseridentity : RASEAPUSERIDENTITYW*)

  # Params # praseapuseridentity : RASEAPUSERIDENTITYA* [In]
  fun RasFreeEapUserIdentityA(praseapuseridentity : RASEAPUSERIDENTITYA*)

  # Params # pszphonebook : PSTR [In],pszentry : PSTR [In],dwsubentryid : UInt32 [In]
  fun RasDeleteSubEntryA(pszphonebook : PSTR, pszentry : PSTR, dwsubentryid : UInt32) : UInt32

  # Params # pszphonebook : LibC::LPWSTR [In],pszentry : LibC::LPWSTR [In],dwsubentryid : UInt32 [In]
  fun RasDeleteSubEntryW(pszphonebook : LibC::LPWSTR, pszentry : LibC::LPWSTR, dwsubentryid : UInt32) : UInt32

  # Params # hrasconn : HRASCONN [In],lprasupdateconn : RASUPDATECONN* [In]
  fun RasUpdateConnection(hrasconn : HRASCONN, lprasupdateconn : RASUPDATECONN*) : UInt32

  # Params # hrasconn : HRASCONN [In],prasprojection : RAS_PROJECTION_INFO* [In],lpdwsize : UInt32* [In]
  fun RasGetProjectionInfoEx(hrasconn : HRASCONN, prasprojection : RAS_PROJECTION_INFO*, lpdwsize : UInt32*) : UInt32

  # Params # lpszphonebook : PSTR [In],lpszentry : PSTR [In],lpinfo : RASPBDLGA* [In]
  fun RasPhonebookDlgA(lpszphonebook : PSTR, lpszentry : PSTR, lpinfo : RASPBDLGA*) : LibC::BOOL

  # Params # lpszphonebook : LibC::LPWSTR [In],lpszentry : LibC::LPWSTR [In],lpinfo : RASPBDLGW* [In]
  fun RasPhonebookDlgW(lpszphonebook : LibC::LPWSTR, lpszentry : LibC::LPWSTR, lpinfo : RASPBDLGW*) : LibC::BOOL

  # Params # lpszphonebook : PSTR [In],lpszentry : PSTR [In],lpinfo : RASENTRYDLGA* [In]
  fun RasEntryDlgA(lpszphonebook : PSTR, lpszentry : PSTR, lpinfo : RASENTRYDLGA*) : LibC::BOOL

  # Params # lpszphonebook : LibC::LPWSTR [In],lpszentry : LibC::LPWSTR [In],lpinfo : RASENTRYDLGW* [In]
  fun RasEntryDlgW(lpszphonebook : LibC::LPWSTR, lpszentry : LibC::LPWSTR, lpinfo : RASENTRYDLGW*) : LibC::BOOL

  # Params # lpszphonebook : PSTR [In],lpszentry : PSTR [In],lpszphonenumber : PSTR [In],lpinfo : RASDIALDLG* [In]
  fun RasDialDlgA(lpszphonebook : PSTR, lpszentry : PSTR, lpszphonenumber : PSTR, lpinfo : RASDIALDLG*) : LibC::BOOL

  # Params # lpszphonebook : LibC::LPWSTR [In],lpszentry : LibC::LPWSTR [In],lpszphonenumber : LibC::LPWSTR [In],lpinfo : RASDIALDLG* [In]
  fun RasDialDlgW(lpszphonebook : LibC::LPWSTR, lpszentry : LibC::LPWSTR, lpszphonenumber : LibC::LPWSTR, lpinfo : RASDIALDLG*) : LibC::BOOL

  # Params # hrasserver : LibC::IntPtrT [In],pobjectheader : MPRAPI_OBJECT_HEADER* [In],dwpreferedmaxlen : UInt32 [In],lpdwentriesread : UInt32* [In],lpdwtotalentries : UInt32* [In],pprasconn : RAS_CONNECTION_EX** [In],lpdwresumehandle : UInt32* [In]
  fun MprAdminConnectionEnumEx(hrasserver : LibC::IntPtrT, pobjectheader : MPRAPI_OBJECT_HEADER*, dwpreferedmaxlen : UInt32, lpdwentriesread : UInt32*, lpdwtotalentries : UInt32*, pprasconn : RAS_CONNECTION_EX**, lpdwresumehandle : UInt32*) : UInt32

  # Params # hrasserver : LibC::IntPtrT [In],hrasconnection : LibC::HANDLE [In],prasconnection : RAS_CONNECTION_EX* [In]
  fun MprAdminConnectionGetInfoEx(hrasserver : LibC::IntPtrT, hrasconnection : LibC::HANDLE, prasconnection : RAS_CONNECTION_EX*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],pserverinfo : MPR_SERVER_EX1* [In]
  fun MprAdminServerGetInfoEx(hmprserver : LibC::IntPtrT, pserverinfo : MPR_SERVER_EX1*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],pserverinfo : MPR_SERVER_SET_CONFIG_EX1* [In]
  fun MprAdminServerSetInfoEx(hmprserver : LibC::IntPtrT, pserverinfo : MPR_SERVER_SET_CONFIG_EX1*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],pserverinfo : MPR_SERVER_EX1* [In]
  fun MprConfigServerGetInfoEx(hmprconfig : LibC::HANDLE, pserverinfo : MPR_SERVER_EX1*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],psetserverconfig : MPR_SERVER_SET_CONFIG_EX1* [In]
  fun MprConfigServerSetInfoEx(hmprconfig : LibC::HANDLE, psetserverconfig : MPR_SERVER_SET_CONFIG_EX1*) : UInt32

  # Params # hrasserver : LibC::IntPtrT [In],hrasconnection : LibC::HANDLE [In],prasupdateconnection : RAS_UPDATE_CONNECTION* [In]
  fun MprAdminUpdateConnection(hrasserver : LibC::IntPtrT, hrasconnection : LibC::HANDLE, prasupdateconnection : RAS_UPDATE_CONNECTION*) : UInt32

  # Params # lpwsservername : LibC::LPWSTR [In],fisserviceinitialized : LibC::BOOL* [In]
  fun MprAdminIsServiceInitialized(lpwsservername : LibC::LPWSTR, fisserviceinitialized : LibC::BOOL*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],pcustominfo : MPR_IF_CUSTOMINFOEX2* [In]
  fun MprAdminInterfaceSetCustomInfoEx(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, pcustominfo : MPR_IF_CUSTOMINFOEX2*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],pcustominfo : MPR_IF_CUSTOMINFOEX2* [In]
  fun MprAdminInterfaceGetCustomInfoEx(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, pcustominfo : MPR_IF_CUSTOMINFOEX2*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hrouterinterface : LibC::HANDLE [In],pcustominfo : MPR_IF_CUSTOMINFOEX2* [In]
  fun MprConfigInterfaceGetCustomInfoEx(hmprconfig : LibC::HANDLE, hrouterinterface : LibC::HANDLE, pcustominfo : MPR_IF_CUSTOMINFOEX2*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hrouterinterface : LibC::HANDLE [In],pcustominfo : MPR_IF_CUSTOMINFOEX2* [In]
  fun MprConfigInterfaceSetCustomInfoEx(hmprconfig : LibC::HANDLE, hrouterinterface : LibC::HANDLE, pcustominfo : MPR_IF_CUSTOMINFOEX2*) : UInt32

  # Params # hrasserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],lplpbbuffer : UInt8** [In],dwprefmaxlen : UInt32 [In],lpdwentriesread : UInt32* [In],lpdwtotalentries : UInt32* [In],lpdwresumehandle : UInt32* [In]
  fun MprAdminConnectionEnum(hrasserver : LibC::IntPtrT, dwlevel : UInt32, lplpbbuffer : UInt8**, dwprefmaxlen : UInt32, lpdwentriesread : UInt32*, lpdwtotalentries : UInt32*, lpdwresumehandle : UInt32*) : UInt32

  # Params # hrasserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],hrasconnection : LibC::HANDLE [In],lplpbbuffer : UInt8** [In],dwprefmaxlen : UInt32 [In],lpdwentriesread : UInt32* [In],lpdwtotalentries : UInt32* [In],lpdwresumehandle : UInt32* [In]
  fun MprAdminPortEnum(hrasserver : LibC::IntPtrT, dwlevel : UInt32, hrasconnection : LibC::HANDLE, lplpbbuffer : UInt8**, dwprefmaxlen : UInt32, lpdwentriesread : UInt32*, lpdwtotalentries : UInt32*, lpdwresumehandle : UInt32*) : UInt32

  # Params # hrasserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],hrasconnection : LibC::HANDLE [In],lplpbbuffer : UInt8** [In]
  fun MprAdminConnectionGetInfo(hrasserver : LibC::IntPtrT, dwlevel : UInt32, hrasconnection : LibC::HANDLE, lplpbbuffer : UInt8**) : UInt32

  # Params # hrasserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],hport : LibC::HANDLE [In],lplpbbuffer : UInt8** [In]
  fun MprAdminPortGetInfo(hrasserver : LibC::IntPtrT, dwlevel : UInt32, hport : LibC::HANDLE, lplpbbuffer : UInt8**) : UInt32

  # Params # hrasserver : LibC::IntPtrT [In],hrasconnection : LibC::HANDLE [In]
  fun MprAdminConnectionClearStats(hrasserver : LibC::IntPtrT, hrasconnection : LibC::HANDLE) : UInt32

  # Params # hrasserver : LibC::IntPtrT [In],hport : LibC::HANDLE [In]
  fun MprAdminPortClearStats(hrasserver : LibC::IntPtrT, hport : LibC::HANDLE) : UInt32

  # Params # hrasserver : LibC::IntPtrT [In],hport : LibC::HANDLE [In]
  fun MprAdminPortReset(hrasserver : LibC::IntPtrT, hport : LibC::HANDLE) : UInt32

  # Params # hrasserver : LibC::IntPtrT [In],hport : LibC::HANDLE [In]
  fun MprAdminPortDisconnect(hrasserver : LibC::IntPtrT, hport : LibC::HANDLE) : UInt32

  # Params # hrasserver : LibC::HANDLE [In],hrasconnection : LibC::HANDLE [In],fisipaddress : LibC::BOOL [In]
  fun MprAdminConnectionRemoveQuarantine(hrasserver : LibC::HANDLE, hrasconnection : LibC::HANDLE, fisipaddress : LibC::BOOL) : UInt32

  # Params # lpszserver : LibC::LPWSTR [In],lpszuser : LibC::LPWSTR [In],dwlevel : UInt32 [In],lpbbuffer : UInt8* [In]
  fun MprAdminUserGetInfo(lpszserver : LibC::LPWSTR, lpszuser : LibC::LPWSTR, dwlevel : UInt32, lpbbuffer : UInt8*) : UInt32

  # Params # lpszserver : LibC::LPWSTR [In],lpszuser : LibC::LPWSTR [In],dwlevel : UInt32 [In],lpbbuffer : UInt8* [In]
  fun MprAdminUserSetInfo(lpszserver : LibC::LPWSTR, lpszuser : LibC::LPWSTR, dwlevel : UInt32, lpbbuffer : UInt8*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hconnection : LibC::HANDLE [In],lpwszmessage : LibC::LPWSTR [In]
  fun MprAdminSendUserMessage(hmprserver : LibC::IntPtrT, hconnection : LibC::HANDLE, lpwszmessage : LibC::LPWSTR) : UInt32

  # Params # lpszdomain : LibC::LPWSTR [In],lpszserver : LibC::LPWSTR [In],lpszpdcserver : LibC::LPWSTR [In]
  fun MprAdminGetPDCServer(lpszdomain : LibC::LPWSTR, lpszserver : LibC::LPWSTR, lpszpdcserver : LibC::LPWSTR) : UInt32

  # Params # lpwsservername : LibC::LPWSTR [In]
  fun MprAdminIsServiceRunning(lpwsservername : LibC::LPWSTR) : LibC::BOOL

  # Params # lpwsservername : LibC::LPWSTR [In],phmprserver : LibC::IntPtrT* [In]
  fun MprAdminServerConnect(lpwsservername : LibC::LPWSTR, phmprserver : LibC::IntPtrT*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In]
  fun MprAdminServerDisconnect(hmprserver : LibC::IntPtrT)

  # Params # hmprserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],lplpbbuffer : UInt8** [In]
  fun MprAdminServerGetCredentials(hmprserver : LibC::IntPtrT, dwlevel : UInt32, lplpbbuffer : UInt8**) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],lpbbuffer : UInt8* [In]
  fun MprAdminServerSetCredentials(hmprserver : LibC::IntPtrT, dwlevel : UInt32, lpbbuffer : UInt8*) : UInt32

  # Params # pbuffer : Void* [In]
  fun MprAdminBufferFree(pbuffer : Void*) : UInt32

  # Params # dwerror : UInt32 [In],lplpwserrorstring : LibC::LPWSTR* [In]
  fun MprAdminGetErrorString(dwerror : UInt32, lplpwserrorstring : LibC::LPWSTR*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],lplpbbuffer : UInt8** [In]
  fun MprAdminServerGetInfo(hmprserver : LibC::IntPtrT, dwlevel : UInt32, lplpbbuffer : UInt8**) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],lpbbuffer : UInt8* [In]
  fun MprAdminServerSetInfo(hmprserver : LibC::IntPtrT, dwlevel : UInt32, lpbbuffer : UInt8*) : UInt32

  # Params # pszdomain : LibC::LPWSTR [In],pszmachine : LibC::LPWSTR [In],benable : LibC::BOOL [In]
  fun MprAdminEstablishDomainRasServer(pszdomain : LibC::LPWSTR, pszmachine : LibC::LPWSTR, benable : LibC::BOOL) : UInt32

  # Params # pszdomain : LibC::LPWSTR [In],pszmachine : LibC::LPWSTR [In],pbisrasserver : LibC::BOOL* [In]
  fun MprAdminIsDomainRasServer(pszdomain : LibC::LPWSTR, pszmachine : LibC::LPWSTR, pbisrasserver : LibC::BOOL*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],dwtransportid : UInt32 [In],lpwstransportname : LibC::LPWSTR [In],pglobalinfo : UInt8* [In],dwglobalinfosize : UInt32 [In],pclientinterfaceinfo : UInt8* [In],dwclientinterfaceinfosize : UInt32 [In],lpwsdllpath : LibC::LPWSTR [In]
  fun MprAdminTransportCreate(hmprserver : LibC::IntPtrT, dwtransportid : UInt32, lpwstransportname : LibC::LPWSTR, pglobalinfo : UInt8*, dwglobalinfosize : UInt32, pclientinterfaceinfo : UInt8*, dwclientinterfaceinfosize : UInt32, lpwsdllpath : LibC::LPWSTR) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],dwtransportid : UInt32 [In],pglobalinfo : UInt8* [In],dwglobalinfosize : UInt32 [In],pclientinterfaceinfo : UInt8* [In],dwclientinterfaceinfosize : UInt32 [In]
  fun MprAdminTransportSetInfo(hmprserver : LibC::IntPtrT, dwtransportid : UInt32, pglobalinfo : UInt8*, dwglobalinfosize : UInt32, pclientinterfaceinfo : UInt8*, dwclientinterfaceinfosize : UInt32) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],dwtransportid : UInt32 [In],ppglobalinfo : UInt8** [In],lpdwglobalinfosize : UInt32* [In],ppclientinterfaceinfo : UInt8** [In],lpdwclientinterfaceinfosize : UInt32* [In]
  fun MprAdminTransportGetInfo(hmprserver : LibC::IntPtrT, dwtransportid : UInt32, ppglobalinfo : UInt8**, lpdwglobalinfosize : UInt32*, ppclientinterfaceinfo : UInt8**, lpdwclientinterfaceinfosize : UInt32*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],lplpbbuffer : UInt8** [In],lpdwtotalentries : UInt32* [In]
  fun MprAdminDeviceEnum(hmprserver : LibC::IntPtrT, dwlevel : UInt32, lplpbbuffer : UInt8**, lpdwtotalentries : UInt32*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],lpwsinterfacename : LibC::LPWSTR [In],phinterface : LibC::HANDLE* [In],fincludeclientinterfaces : LibC::BOOL [In]
  fun MprAdminInterfaceGetHandle(hmprserver : LibC::IntPtrT, lpwsinterfacename : LibC::LPWSTR, phinterface : LibC::HANDLE*, fincludeclientinterfaces : LibC::BOOL) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],lpbbuffer : UInt8* [In],phinterface : LibC::HANDLE* [In]
  fun MprAdminInterfaceCreate(hmprserver : LibC::IntPtrT, dwlevel : UInt32, lpbbuffer : UInt8*, phinterface : LibC::HANDLE*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwlevel : UInt32 [In],lplpbbuffer : UInt8** [In]
  fun MprAdminInterfaceGetInfo(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwlevel : UInt32, lplpbbuffer : UInt8**) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwlevel : UInt32 [In],lpbbuffer : UInt8* [In]
  fun MprAdminInterfaceSetInfo(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwlevel : UInt32, lpbbuffer : UInt8*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In]
  fun MprAdminInterfaceDelete(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwindex : UInt32 [In],dwlevel : UInt32 [In],lplpbuffer : UInt8** [In]
  fun MprAdminInterfaceDeviceGetInfo(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwindex : UInt32, dwlevel : UInt32, lplpbuffer : UInt8**) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwindex : UInt32 [In],dwlevel : UInt32 [In],lpbbuffer : UInt8* [In]
  fun MprAdminInterfaceDeviceSetInfo(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwindex : UInt32, dwlevel : UInt32, lpbbuffer : UInt8*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwtransportid : UInt32 [In]
  fun MprAdminInterfaceTransportRemove(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwtransportid : UInt32) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwtransportid : UInt32 [In],pinterfaceinfo : UInt8* [In],dwinterfaceinfosize : UInt32 [In]
  fun MprAdminInterfaceTransportAdd(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwtransportid : UInt32, pinterfaceinfo : UInt8*, dwinterfaceinfosize : UInt32) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwtransportid : UInt32 [In],ppinterfaceinfo : UInt8** [In],lpdwinterfaceinfosize : UInt32* [In]
  fun MprAdminInterfaceTransportGetInfo(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwtransportid : UInt32, ppinterfaceinfo : UInt8**, lpdwinterfaceinfosize : UInt32*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwtransportid : UInt32 [In],pinterfaceinfo : UInt8* [In],dwinterfaceinfosize : UInt32 [In]
  fun MprAdminInterfaceTransportSetInfo(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwtransportid : UInt32, pinterfaceinfo : UInt8*, dwinterfaceinfosize : UInt32) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],lplpbbuffer : UInt8** [In],dwprefmaxlen : UInt32 [In],lpdwentriesread : UInt32* [In],lpdwtotalentries : UInt32* [In],lpdwresumehandle : UInt32* [In]
  fun MprAdminInterfaceEnum(hmprserver : LibC::IntPtrT, dwlevel : UInt32, lplpbbuffer : UInt8**, dwprefmaxlen : UInt32, lpdwentriesread : UInt32*, lpdwtotalentries : UInt32*, lpdwresumehandle : UInt32*) : UInt32

  # Params # lpwsserver : LibC::LPWSTR [In],lpwsinterfacename : LibC::LPWSTR [In],lpwsusername : LibC::LPWSTR [In],lpwsdomainname : LibC::LPWSTR [In],lpwspassword : LibC::LPWSTR [In]
  fun MprAdminInterfaceSetCredentials(lpwsserver : LibC::LPWSTR, lpwsinterfacename : LibC::LPWSTR, lpwsusername : LibC::LPWSTR, lpwsdomainname : LibC::LPWSTR, lpwspassword : LibC::LPWSTR) : UInt32

  # Params # lpwsserver : LibC::LPWSTR [In],lpwsinterfacename : LibC::LPWSTR [In],lpwsusername : LibC::LPWSTR [In],lpwspassword : LibC::LPWSTR [In],lpwsdomainname : LibC::LPWSTR [In]
  fun MprAdminInterfaceGetCredentials(lpwsserver : LibC::LPWSTR, lpwsinterfacename : LibC::LPWSTR, lpwsusername : LibC::LPWSTR, lpwspassword : LibC::LPWSTR, lpwsdomainname : LibC::LPWSTR) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwlevel : UInt32 [In],lpbbuffer : UInt8* [In]
  fun MprAdminInterfaceSetCredentialsEx(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwlevel : UInt32, lpbbuffer : UInt8*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwlevel : UInt32 [In],lplpbbuffer : UInt8** [In]
  fun MprAdminInterfaceGetCredentialsEx(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwlevel : UInt32, lplpbbuffer : UInt8**) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],hevent : LibC::HANDLE [In],fsynchronous : LibC::BOOL [In]
  fun MprAdminInterfaceConnect(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, hevent : LibC::HANDLE, fsynchronous : LibC::BOOL) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In]
  fun MprAdminInterfaceDisconnect(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwprotocolid : UInt32 [In],hevent : LibC::HANDLE [In]
  fun MprAdminInterfaceUpdateRoutes(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwprotocolid : UInt32, hevent : LibC::HANDLE) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In],dwprotocolid : UInt32 [In],lpdwupdateresult : UInt32* [In]
  fun MprAdminInterfaceQueryUpdateResult(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE, dwprotocolid : UInt32, lpdwupdateresult : UInt32*) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],hinterface : LibC::HANDLE [In]
  fun MprAdminInterfaceUpdatePhonebookInfo(hmprserver : LibC::IntPtrT, hinterface : LibC::HANDLE) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],heventnotification : LibC::HANDLE [In]
  fun MprAdminRegisterConnectionNotification(hmprserver : LibC::IntPtrT, heventnotification : LibC::HANDLE) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],heventnotification : LibC::HANDLE [In]
  fun MprAdminDeregisterConnectionNotification(hmprserver : LibC::IntPtrT, heventnotification : LibC::HANDLE) : UInt32

  # Params # lpwsservername : LibC::LPWSTR [In],phmibserver : LibC::IntPtrT* [In]
  fun MprAdminMIBServerConnect(lpwsservername : LibC::LPWSTR, phmibserver : LibC::IntPtrT*) : UInt32

  # Params # hmibserver : LibC::IntPtrT [In]
  fun MprAdminMIBServerDisconnect(hmibserver : LibC::IntPtrT)

  # Params # hmibserver : LibC::IntPtrT [In],dwpid : UInt32 [In],dwroutingpid : UInt32 [In],lpentry : Void* [In],dwentrysize : UInt32 [In]
  fun MprAdminMIBEntryCreate(hmibserver : LibC::IntPtrT, dwpid : UInt32, dwroutingpid : UInt32, lpentry : Void*, dwentrysize : UInt32) : UInt32

  # Params # hmibserver : LibC::IntPtrT [In],dwprotocolid : UInt32 [In],dwroutingpid : UInt32 [In],lpentry : Void* [In],dwentrysize : UInt32 [In]
  fun MprAdminMIBEntryDelete(hmibserver : LibC::IntPtrT, dwprotocolid : UInt32, dwroutingpid : UInt32, lpentry : Void*, dwentrysize : UInt32) : UInt32

  # Params # hmibserver : LibC::IntPtrT [In],dwprotocolid : UInt32 [In],dwroutingpid : UInt32 [In],lpentry : Void* [In],dwentrysize : UInt32 [In]
  fun MprAdminMIBEntrySet(hmibserver : LibC::IntPtrT, dwprotocolid : UInt32, dwroutingpid : UInt32, lpentry : Void*, dwentrysize : UInt32) : UInt32

  # Params # hmibserver : LibC::IntPtrT [In],dwprotocolid : UInt32 [In],dwroutingpid : UInt32 [In],lpinentry : Void* [In],dwinentrysize : UInt32 [In],lplpoutentry : Void** [In],lpoutentrysize : UInt32* [In]
  fun MprAdminMIBEntryGet(hmibserver : LibC::IntPtrT, dwprotocolid : UInt32, dwroutingpid : UInt32, lpinentry : Void*, dwinentrysize : UInt32, lplpoutentry : Void**, lpoutentrysize : UInt32*) : UInt32

  # Params # hmibserver : LibC::IntPtrT [In],dwprotocolid : UInt32 [In],dwroutingpid : UInt32 [In],lpinentry : Void* [In],dwinentrysize : UInt32 [In],lplpoutentry : Void** [In],lpoutentrysize : UInt32* [In]
  fun MprAdminMIBEntryGetFirst(hmibserver : LibC::IntPtrT, dwprotocolid : UInt32, dwroutingpid : UInt32, lpinentry : Void*, dwinentrysize : UInt32, lplpoutentry : Void**, lpoutentrysize : UInt32*) : UInt32

  # Params # hmibserver : LibC::IntPtrT [In],dwprotocolid : UInt32 [In],dwroutingpid : UInt32 [In],lpinentry : Void* [In],dwinentrysize : UInt32 [In],lplpoutentry : Void** [In],lpoutentrysize : UInt32* [In]
  fun MprAdminMIBEntryGetNext(hmibserver : LibC::IntPtrT, dwprotocolid : UInt32, dwroutingpid : UInt32, lpinentry : Void*, dwinentrysize : UInt32, lplpoutentry : Void**, lpoutentrysize : UInt32*) : UInt32

  # Params # pbuffer : Void* [In]
  fun MprAdminMIBBufferFree(pbuffer : Void*) : UInt32

  # Params # dwlevel : UInt32 [In],pbuffer : Void* [In]
  fun MprConfigServerInstall(dwlevel : UInt32, pbuffer : Void*) : UInt32

  # Params # lpwsservername : LibC::LPWSTR [In],phmprconfig : LibC::HANDLE* [In]
  fun MprConfigServerConnect(lpwsservername : LibC::LPWSTR, phmprconfig : LibC::HANDLE*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In]
  fun MprConfigServerDisconnect(hmprconfig : LibC::HANDLE)

  # Params # hmprconfig : LibC::HANDLE [In]
  fun MprConfigServerRefresh(hmprconfig : LibC::HANDLE) : UInt32

  # Params # pbuffer : Void* [In]
  fun MprConfigBufferFree(pbuffer : Void*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],dwlevel : UInt32 [In],lplpbbuffer : UInt8** [In]
  fun MprConfigServerGetInfo(hmprconfig : LibC::HANDLE, dwlevel : UInt32, lplpbbuffer : UInt8**) : UInt32

  # Params # hmprserver : LibC::IntPtrT [In],dwlevel : UInt32 [In],lpbbuffer : UInt8* [In]
  fun MprConfigServerSetInfo(hmprserver : LibC::IntPtrT, dwlevel : UInt32, lpbbuffer : UInt8*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],lpwspath : LibC::LPWSTR [In]
  fun MprConfigServerBackup(hmprconfig : LibC::HANDLE, lpwspath : LibC::LPWSTR) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],lpwspath : LibC::LPWSTR [In]
  fun MprConfigServerRestore(hmprconfig : LibC::HANDLE, lpwspath : LibC::LPWSTR) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],dwtransportid : UInt32 [In],lpwstransportname : LibC::LPWSTR [In],pglobalinfo : UInt8* [In],dwglobalinfosize : UInt32 [In],pclientinterfaceinfo : UInt8* [In],dwclientinterfaceinfosize : UInt32 [In],lpwsdllpath : LibC::LPWSTR [In],phroutertransport : LibC::HANDLE* [In]
  fun MprConfigTransportCreate(hmprconfig : LibC::HANDLE, dwtransportid : UInt32, lpwstransportname : LibC::LPWSTR, pglobalinfo : UInt8*, dwglobalinfosize : UInt32, pclientinterfaceinfo : UInt8*, dwclientinterfaceinfosize : UInt32, lpwsdllpath : LibC::LPWSTR, phroutertransport : LibC::HANDLE*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hroutertransport : LibC::HANDLE [In]
  fun MprConfigTransportDelete(hmprconfig : LibC::HANDLE, hroutertransport : LibC::HANDLE) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],dwtransportid : UInt32 [In],phroutertransport : LibC::HANDLE* [In]
  fun MprConfigTransportGetHandle(hmprconfig : LibC::HANDLE, dwtransportid : UInt32, phroutertransport : LibC::HANDLE*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hroutertransport : LibC::HANDLE [In],pglobalinfo : UInt8* [In],dwglobalinfosize : UInt32 [In],pclientinterfaceinfo : UInt8* [In],dwclientinterfaceinfosize : UInt32 [In],lpwsdllpath : LibC::LPWSTR [In]
  fun MprConfigTransportSetInfo(hmprconfig : LibC::HANDLE, hroutertransport : LibC::HANDLE, pglobalinfo : UInt8*, dwglobalinfosize : UInt32, pclientinterfaceinfo : UInt8*, dwclientinterfaceinfosize : UInt32, lpwsdllpath : LibC::LPWSTR) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hroutertransport : LibC::HANDLE [In],ppglobalinfo : UInt8** [In],lpdwglobalinfosize : UInt32* [In],ppclientinterfaceinfo : UInt8** [In],lpdwclientinterfaceinfosize : UInt32* [In],lplpwsdllpath : LibC::LPWSTR* [In]
  fun MprConfigTransportGetInfo(hmprconfig : LibC::HANDLE, hroutertransport : LibC::HANDLE, ppglobalinfo : UInt8**, lpdwglobalinfosize : UInt32*, ppclientinterfaceinfo : UInt8**, lpdwclientinterfaceinfosize : UInt32*, lplpwsdllpath : LibC::LPWSTR*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],dwlevel : UInt32 [In],lplpbuffer : UInt8** [In],dwprefmaxlen : UInt32 [In],lpdwentriesread : UInt32* [In],lpdwtotalentries : UInt32* [In],lpdwresumehandle : UInt32* [In]
  fun MprConfigTransportEnum(hmprconfig : LibC::HANDLE, dwlevel : UInt32, lplpbuffer : UInt8**, dwprefmaxlen : UInt32, lpdwentriesread : UInt32*, lpdwtotalentries : UInt32*, lpdwresumehandle : UInt32*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],dwlevel : UInt32 [In],lpbbuffer : UInt8* [In],phrouterinterface : LibC::HANDLE* [In]
  fun MprConfigInterfaceCreate(hmprconfig : LibC::HANDLE, dwlevel : UInt32, lpbbuffer : UInt8*, phrouterinterface : LibC::HANDLE*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hrouterinterface : LibC::HANDLE [In]
  fun MprConfigInterfaceDelete(hmprconfig : LibC::HANDLE, hrouterinterface : LibC::HANDLE) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],lpwsinterfacename : LibC::LPWSTR [In],phrouterinterface : LibC::HANDLE* [In]
  fun MprConfigInterfaceGetHandle(hmprconfig : LibC::HANDLE, lpwsinterfacename : LibC::LPWSTR, phrouterinterface : LibC::HANDLE*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hrouterinterface : LibC::HANDLE [In],dwlevel : UInt32 [In],lplpbuffer : UInt8** [In],lpdwbuffersize : UInt32* [In]
  fun MprConfigInterfaceGetInfo(hmprconfig : LibC::HANDLE, hrouterinterface : LibC::HANDLE, dwlevel : UInt32, lplpbuffer : UInt8**, lpdwbuffersize : UInt32*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hrouterinterface : LibC::HANDLE [In],dwlevel : UInt32 [In],lpbbuffer : UInt8* [In]
  fun MprConfigInterfaceSetInfo(hmprconfig : LibC::HANDLE, hrouterinterface : LibC::HANDLE, dwlevel : UInt32, lpbbuffer : UInt8*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],dwlevel : UInt32 [In],lplpbuffer : UInt8** [In],dwprefmaxlen : UInt32 [In],lpdwentriesread : UInt32* [In],lpdwtotalentries : UInt32* [In],lpdwresumehandle : UInt32* [In]
  fun MprConfigInterfaceEnum(hmprconfig : LibC::HANDLE, dwlevel : UInt32, lplpbuffer : UInt8**, dwprefmaxlen : UInt32, lpdwentriesread : UInt32*, lpdwtotalentries : UInt32*, lpdwresumehandle : UInt32*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hrouterinterface : LibC::HANDLE [In],dwtransportid : UInt32 [In],lpwstransportname : LibC::LPWSTR [In],pinterfaceinfo : UInt8* [In],dwinterfaceinfosize : UInt32 [In],phrouteriftransport : LibC::HANDLE* [In]
  fun MprConfigInterfaceTransportAdd(hmprconfig : LibC::HANDLE, hrouterinterface : LibC::HANDLE, dwtransportid : UInt32, lpwstransportname : LibC::LPWSTR, pinterfaceinfo : UInt8*, dwinterfaceinfosize : UInt32, phrouteriftransport : LibC::HANDLE*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hrouterinterface : LibC::HANDLE [In],hrouteriftransport : LibC::HANDLE [In]
  fun MprConfigInterfaceTransportRemove(hmprconfig : LibC::HANDLE, hrouterinterface : LibC::HANDLE, hrouteriftransport : LibC::HANDLE) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hrouterinterface : LibC::HANDLE [In],dwtransportid : UInt32 [In],phrouteriftransport : LibC::HANDLE* [In]
  fun MprConfigInterfaceTransportGetHandle(hmprconfig : LibC::HANDLE, hrouterinterface : LibC::HANDLE, dwtransportid : UInt32, phrouteriftransport : LibC::HANDLE*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hrouterinterface : LibC::HANDLE [In],hrouteriftransport : LibC::HANDLE [In],ppinterfaceinfo : UInt8** [In],lpdwinterfaceinfosize : UInt32* [In]
  fun MprConfigInterfaceTransportGetInfo(hmprconfig : LibC::HANDLE, hrouterinterface : LibC::HANDLE, hrouteriftransport : LibC::HANDLE, ppinterfaceinfo : UInt8**, lpdwinterfaceinfosize : UInt32*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hrouterinterface : LibC::HANDLE [In],hrouteriftransport : LibC::HANDLE [In],pinterfaceinfo : UInt8* [In],dwinterfaceinfosize : UInt32 [In]
  fun MprConfigInterfaceTransportSetInfo(hmprconfig : LibC::HANDLE, hrouterinterface : LibC::HANDLE, hrouteriftransport : LibC::HANDLE, pinterfaceinfo : UInt8*, dwinterfaceinfosize : UInt32) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],hrouterinterface : LibC::HANDLE [In],dwlevel : UInt32 [In],lplpbuffer : UInt8** [In],dwprefmaxlen : UInt32 [In],lpdwentriesread : UInt32* [In],lpdwtotalentries : UInt32* [In],lpdwresumehandle : UInt32* [In]
  fun MprConfigInterfaceTransportEnum(hmprconfig : LibC::HANDLE, hrouterinterface : LibC::HANDLE, dwlevel : UInt32, lplpbuffer : UInt8**, dwprefmaxlen : UInt32, lpdwentriesread : UInt32*, lpdwtotalentries : UInt32*, lpdwresumehandle : UInt32*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],pszguidname : LibC::LPWSTR [In],pszbuffer : LibC::LPWSTR [In],dwbuffersize : UInt32 [In]
  fun MprConfigGetFriendlyName(hmprconfig : LibC::HANDLE, pszguidname : LibC::LPWSTR, pszbuffer : LibC::LPWSTR, dwbuffersize : UInt32) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],pszfriendlyname : LibC::LPWSTR [In],pszbuffer : LibC::LPWSTR [In],dwbuffersize : UInt32 [In]
  fun MprConfigGetGuidName(hmprconfig : LibC::HANDLE, pszfriendlyname : LibC::LPWSTR, pszbuffer : LibC::LPWSTR, dwbuffersize : UInt32) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],dwlevel : UInt32 [In],dwtransportid : UInt32 [In],lpbuffer : UInt8* [In]
  fun MprConfigFilterGetInfo(hmprconfig : LibC::HANDLE, dwlevel : UInt32, dwtransportid : UInt32, lpbuffer : UInt8*) : UInt32

  # Params # hmprconfig : LibC::HANDLE [In],dwlevel : UInt32 [In],dwtransportid : UInt32 [In],lpbuffer : UInt8* [In]
  fun MprConfigFilterSetInfo(hmprconfig : LibC::HANDLE, dwlevel : UInt32, dwtransportid : UInt32, lpbuffer : UInt8*) : UInt32

  # Params # dwversion : UInt32 [In],lplpnewheader : Void** [In]
  fun MprInfoCreate(dwversion : UInt32, lplpnewheader : Void**) : UInt32

  # Params # lpheader : Void* [In]
  fun MprInfoDelete(lpheader : Void*) : UInt32

  # Params # lpheader : Void* [In],lplpnewheader : Void** [In]
  fun MprInfoRemoveAll(lpheader : Void*, lplpnewheader : Void**) : UInt32

  # Params # lpheader : Void* [In],lplpnewheader : Void** [In]
  fun MprInfoDuplicate(lpheader : Void*, lplpnewheader : Void**) : UInt32

  # Params # lpheader : Void* [In],dwinfotype : UInt32 [In],dwitemsize : UInt32 [In],dwitemcount : UInt32 [In],lpitemdata : UInt8* [In],lplpnewheader : Void** [In]
  fun MprInfoBlockAdd(lpheader : Void*, dwinfotype : UInt32, dwitemsize : UInt32, dwitemcount : UInt32, lpitemdata : UInt8*, lplpnewheader : Void**) : UInt32

  # Params # lpheader : Void* [In],dwinfotype : UInt32 [In],lplpnewheader : Void** [In]
  fun MprInfoBlockRemove(lpheader : Void*, dwinfotype : UInt32, lplpnewheader : Void**) : UInt32

  # Params # lpheader : Void* [In],dwinfotype : UInt32 [In],dwitemsize : UInt32 [In],dwitemcount : UInt32 [In],lpitemdata : UInt8* [In],lplpnewheader : Void** [In]
  fun MprInfoBlockSet(lpheader : Void*, dwinfotype : UInt32, dwitemsize : UInt32, dwitemcount : UInt32, lpitemdata : UInt8*, lplpnewheader : Void**) : UInt32

  # Params # lpheader : Void* [In],dwinfotype : UInt32 [In],lpdwitemsize : UInt32* [In],lpdwitemcount : UInt32* [In],lplpitemdata : UInt8** [In]
  fun MprInfoBlockFind(lpheader : Void*, dwinfotype : UInt32, lpdwitemsize : UInt32*, lpdwitemcount : UInt32*, lplpitemdata : UInt8**) : UInt32

  # Params # lpheader : Void* [In]
  fun MprInfoBlockQuerySize(lpheader : Void*) : UInt32

  # Params # prpiinfo : ROUTING_PROTOCOL_CONFIG* [In],dwprotocolid : UInt32 [In],dwcomponentid : UInt32 [In],phprotocol : LibC::HANDLE* [In]
  fun MgmRegisterMProtocol(prpiinfo : ROUTING_PROTOCOL_CONFIG*, dwprotocolid : UInt32, dwcomponentid : UInt32, phprotocol : LibC::HANDLE*) : UInt32

  # Params # hprotocol : LibC::HANDLE [In]
  fun MgmDeRegisterMProtocol(hprotocol : LibC::HANDLE) : UInt32

  # Params # hprotocol : LibC::HANDLE [In],dwifindex : UInt32 [In],dwifnexthopaddr : UInt32 [In]
  fun MgmTakeInterfaceOwnership(hprotocol : LibC::HANDLE, dwifindex : UInt32, dwifnexthopaddr : UInt32) : UInt32

  # Params # hprotocol : LibC::HANDLE [In],dwifindex : UInt32 [In],dwifnexthopaddr : UInt32 [In]
  fun MgmReleaseInterfaceOwnership(hprotocol : LibC::HANDLE, dwifindex : UInt32, dwifnexthopaddr : UInt32) : UInt32

  # Params # dwifindex : UInt32 [In],dwifnexthopaddr : UInt32 [In],pdwifprotocolid : UInt32* [In],pdwifcomponentid : UInt32* [In]
  fun MgmGetProtocolOnInterface(dwifindex : UInt32, dwifnexthopaddr : UInt32, pdwifprotocolid : UInt32*, pdwifcomponentid : UInt32*) : UInt32

  # Params # hprotocol : LibC::HANDLE [In],dwsourceaddr : UInt32 [In],dwsourcemask : UInt32 [In],dwgroupaddr : UInt32 [In],dwgroupmask : UInt32 [In],dwifindex : UInt32 [In],dwifnexthopipaddr : UInt32 [In],dwflags : UInt32 [In]
  fun MgmAddGroupMembershipEntry(hprotocol : LibC::HANDLE, dwsourceaddr : UInt32, dwsourcemask : UInt32, dwgroupaddr : UInt32, dwgroupmask : UInt32, dwifindex : UInt32, dwifnexthopipaddr : UInt32, dwflags : UInt32) : UInt32

  # Params # hprotocol : LibC::HANDLE [In],dwsourceaddr : UInt32 [In],dwsourcemask : UInt32 [In],dwgroupaddr : UInt32 [In],dwgroupmask : UInt32 [In],dwifindex : UInt32 [In],dwifnexthopipaddr : UInt32 [In],dwflags : UInt32 [In]
  fun MgmDeleteGroupMembershipEntry(hprotocol : LibC::HANDLE, dwsourceaddr : UInt32, dwsourcemask : UInt32, dwgroupaddr : UInt32, dwgroupmask : UInt32, dwifindex : UInt32, dwifnexthopipaddr : UInt32, dwflags : UInt32) : UInt32

  # Params # pimm : MIB_IPMCAST_MFE* [In],pdwbuffersize : UInt32* [In],pbbuffer : UInt8* [In]
  fun MgmGetMfe(pimm : MIB_IPMCAST_MFE*, pdwbuffersize : UInt32*, pbbuffer : UInt8*) : UInt32

  # Params # pdwbuffersize : UInt32* [In],pbbuffer : UInt8* [In],pdwnumentries : UInt32* [In]
  fun MgmGetFirstMfe(pdwbuffersize : UInt32*, pbbuffer : UInt8*, pdwnumentries : UInt32*) : UInt32

  # Params # pimmstart : MIB_IPMCAST_MFE* [In],pdwbuffersize : UInt32* [In],pbbuffer : UInt8* [In],pdwnumentries : UInt32* [In]
  fun MgmGetNextMfe(pimmstart : MIB_IPMCAST_MFE*, pdwbuffersize : UInt32*, pbbuffer : UInt8*, pdwnumentries : UInt32*) : UInt32

  # Params # pimm : MIB_IPMCAST_MFE* [In],pdwbuffersize : UInt32* [In],pbbuffer : UInt8* [In],dwflags : UInt32 [In]
  fun MgmGetMfeStats(pimm : MIB_IPMCAST_MFE*, pdwbuffersize : UInt32*, pbbuffer : UInt8*, dwflags : UInt32) : UInt32

  # Params # pdwbuffersize : UInt32* [In],pbbuffer : UInt8* [In],pdwnumentries : UInt32* [In],dwflags : UInt32 [In]
  fun MgmGetFirstMfeStats(pdwbuffersize : UInt32*, pbbuffer : UInt8*, pdwnumentries : UInt32*, dwflags : UInt32) : UInt32

  # Params # pimmstart : MIB_IPMCAST_MFE* [In],pdwbuffersize : UInt32* [In],pbbuffer : UInt8* [In],pdwnumentries : UInt32* [In],dwflags : UInt32 [In]
  fun MgmGetNextMfeStats(pimmstart : MIB_IPMCAST_MFE*, pdwbuffersize : UInt32*, pbbuffer : UInt8*, pdwnumentries : UInt32*, dwflags : UInt32) : UInt32

  # Params # hprotocol : LibC::HANDLE [In],metenumtype : MGM_ENUM_TYPES [In],phenumhandle : LibC::HANDLE* [In]
  fun MgmGroupEnumerationStart(hprotocol : LibC::HANDLE, metenumtype : MGM_ENUM_TYPES, phenumhandle : LibC::HANDLE*) : UInt32

  # Params # henum : LibC::HANDLE [In],pdwbuffersize : UInt32* [In],pbbuffer : UInt8* [In],pdwnumentries : UInt32* [In]
  fun MgmGroupEnumerationGetNext(henum : LibC::HANDLE, pdwbuffersize : UInt32*, pbbuffer : UInt8*, pdwnumentries : UInt32*) : UInt32

  # Params # henum : LibC::HANDLE [In]
  fun MgmGroupEnumerationEnd(henum : LibC::HANDLE) : UInt32

  # Params # pnetaddress : RTM_NET_ADDRESS* [In],paddress : IN6_ADDR* [In],plength : UInt32* [In],dwaddresssize : UInt32 [In]
  fun RtmConvertNetAddressToIpv6AddressAndLength(pnetaddress : RTM_NET_ADDRESS*, paddress : IN6_ADDR*, plength : UInt32*, dwaddresssize : UInt32) : UInt32

  # Params # pnetaddress : RTM_NET_ADDRESS* [In],address : IN6_ADDR [In],dwlength : UInt32 [In],dwaddresssize : UInt32 [In]
  fun RtmConvertIpv6AddressAndLengthToNetAddress(pnetaddress : RTM_NET_ADDRESS*, address : IN6_ADDR, dwlength : UInt32, dwaddresssize : UInt32) : UInt32

  # Params # rtmentityinfo : RTM_ENTITY_INFO* [In],exportmethods : RTM_ENTITY_EXPORT_METHODS* [In],eventcallback : RTM_EVENT_CALLBACK [In],reserveopaquepointer : LibC::BOOL [In],rtmregprofile : RTM_REGN_PROFILE* [In],rtmreghandle : LibC::IntPtrT* [In]
  fun RtmRegisterEntity(rtmentityinfo : RTM_ENTITY_INFO*, exportmethods : RTM_ENTITY_EXPORT_METHODS*, eventcallback : RTM_EVENT_CALLBACK, reserveopaquepointer : LibC::BOOL, rtmregprofile : RTM_REGN_PROFILE*, rtmreghandle : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In]
  fun RtmDeregisterEntity(rtmreghandle : LibC::IntPtrT) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],numentities : UInt32* [In],entityhandles : LibC::IntPtrT* [In],entityinfos : RTM_ENTITY_INFO* [In]
  fun RtmGetRegisteredEntities(rtmreghandle : LibC::IntPtrT, numentities : UInt32*, entityhandles : LibC::IntPtrT*, entityinfos : RTM_ENTITY_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],numentities : UInt32 [In],entityhandles : LibC::IntPtrT* [In]
  fun RtmReleaseEntities(rtmreghandle : LibC::IntPtrT, numentities : UInt32, entityhandles : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],desthandle : LibC::IntPtrT [In],exclusive : LibC::BOOL [In],lockdest : LibC::BOOL [In]
  fun RtmLockDestination(rtmreghandle : LibC::IntPtrT, desthandle : LibC::IntPtrT, exclusive : LibC::BOOL, lockdest : LibC::BOOL) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],desthandle : LibC::IntPtrT [In],opaqueinfopointer : Void** [In]
  fun RtmGetOpaqueInformationPointer(rtmreghandle : LibC::IntPtrT, desthandle : LibC::IntPtrT, opaqueinfopointer : Void**) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],entityhandle : LibC::IntPtrT [In],nummethods : UInt32* [In],exptmethods : RTM_ENTITY_EXPORT_METHOD* [In]
  fun RtmGetEntityMethods(rtmreghandle : LibC::IntPtrT, entityhandle : LibC::IntPtrT, nummethods : UInt32*, exptmethods : RTM_ENTITY_EXPORT_METHOD*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],entityhandle : LibC::IntPtrT [In],input : RTM_ENTITY_METHOD_INPUT* [In],outputsize : UInt32* [In],output : RTM_ENTITY_METHOD_OUTPUT* [In]
  fun RtmInvokeMethod(rtmreghandle : LibC::IntPtrT, entityhandle : LibC::IntPtrT, input : RTM_ENTITY_METHOD_INPUT*, outputsize : UInt32*, output : RTM_ENTITY_METHOD_OUTPUT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],targethandle : LibC::HANDLE [In],targettype : UInt8 [In],blockingflag : UInt32 [In]
  fun RtmBlockMethods(rtmreghandle : LibC::IntPtrT, targethandle : LibC::HANDLE, targettype : UInt8, blockingflag : UInt32) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],entityhandle : LibC::IntPtrT [In],entityinfo : RTM_ENTITY_INFO* [In]
  fun RtmGetEntityInfo(rtmreghandle : LibC::IntPtrT, entityhandle : LibC::IntPtrT, entityinfo : RTM_ENTITY_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],desthandle : LibC::IntPtrT [In],protocolid : UInt32 [In],targetviews : UInt32 [In],destinfo : RTM_DEST_INFO* [In]
  fun RtmGetDestInfo(rtmreghandle : LibC::IntPtrT, desthandle : LibC::IntPtrT, protocolid : UInt32, targetviews : UInt32, destinfo : RTM_DEST_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routehandle : LibC::IntPtrT [In],routeinfo : RTM_ROUTE_INFO* [In],destaddress : RTM_NET_ADDRESS* [In]
  fun RtmGetRouteInfo(rtmreghandle : LibC::IntPtrT, routehandle : LibC::IntPtrT, routeinfo : RTM_ROUTE_INFO*, destaddress : RTM_NET_ADDRESS*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],nexthophandle : LibC::IntPtrT [In],nexthopinfo : RTM_NEXTHOP_INFO* [In]
  fun RtmGetNextHopInfo(rtmreghandle : LibC::IntPtrT, nexthophandle : LibC::IntPtrT, nexthopinfo : RTM_NEXTHOP_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],entityinfo : RTM_ENTITY_INFO* [In]
  fun RtmReleaseEntityInfo(rtmreghandle : LibC::IntPtrT, entityinfo : RTM_ENTITY_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],destinfo : RTM_DEST_INFO* [In]
  fun RtmReleaseDestInfo(rtmreghandle : LibC::IntPtrT, destinfo : RTM_DEST_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routeinfo : RTM_ROUTE_INFO* [In]
  fun RtmReleaseRouteInfo(rtmreghandle : LibC::IntPtrT, routeinfo : RTM_ROUTE_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],nexthopinfo : RTM_NEXTHOP_INFO* [In]
  fun RtmReleaseNextHopInfo(rtmreghandle : LibC::IntPtrT, nexthopinfo : RTM_NEXTHOP_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routehandle : LibC::IntPtrT* [In],destaddress : RTM_NET_ADDRESS* [In],routeinfo : RTM_ROUTE_INFO* [In],timetolive : UInt32 [In],routelisthandle : LibC::IntPtrT [In],notifytype : UInt32 [In],notifyhandle : LibC::IntPtrT [In],changeflags : UInt32* [In]
  fun RtmAddRouteToDest(rtmreghandle : LibC::IntPtrT, routehandle : LibC::IntPtrT*, destaddress : RTM_NET_ADDRESS*, routeinfo : RTM_ROUTE_INFO*, timetolive : UInt32, routelisthandle : LibC::IntPtrT, notifytype : UInt32, notifyhandle : LibC::IntPtrT, changeflags : UInt32*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routehandle : LibC::IntPtrT [In],changeflags : UInt32* [In]
  fun RtmDeleteRouteToDest(rtmreghandle : LibC::IntPtrT, routehandle : LibC::IntPtrT, changeflags : UInt32*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],desthandle : LibC::IntPtrT [In],targetviews : UInt32 [In],holdtime : UInt32 [In]
  fun RtmHoldDestination(rtmreghandle : LibC::IntPtrT, desthandle : LibC::IntPtrT, targetviews : UInt32, holdtime : UInt32) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routehandle : LibC::IntPtrT [In],routepointer : RTM_ROUTE_INFO** [In]
  fun RtmGetRoutePointer(rtmreghandle : LibC::IntPtrT, routehandle : LibC::IntPtrT, routepointer : RTM_ROUTE_INFO**) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routehandle : LibC::IntPtrT [In],exclusive : LibC::BOOL [In],lockroute : LibC::BOOL [In],routepointer : RTM_ROUTE_INFO** [In]
  fun RtmLockRoute(rtmreghandle : LibC::IntPtrT, routehandle : LibC::IntPtrT, exclusive : LibC::BOOL, lockroute : LibC::BOOL, routepointer : RTM_ROUTE_INFO**) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routehandle : LibC::IntPtrT [In],timetolive : UInt32 [In],routelisthandle : LibC::IntPtrT [In],notifytype : UInt32 [In],notifyhandle : LibC::IntPtrT [In],changeflags : UInt32* [In]
  fun RtmUpdateAndUnlockRoute(rtmreghandle : LibC::IntPtrT, routehandle : LibC::IntPtrT, timetolive : UInt32, routelisthandle : LibC::IntPtrT, notifytype : UInt32, notifyhandle : LibC::IntPtrT, changeflags : UInt32*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],destaddress : RTM_NET_ADDRESS* [In],protocolid : UInt32 [In],targetviews : UInt32 [In],destinfo : RTM_DEST_INFO* [In]
  fun RtmGetExactMatchDestination(rtmreghandle : LibC::IntPtrT, destaddress : RTM_NET_ADDRESS*, protocolid : UInt32, targetviews : UInt32, destinfo : RTM_DEST_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],destaddress : RTM_NET_ADDRESS* [In],protocolid : UInt32 [In],targetviews : UInt32 [In],destinfo : RTM_DEST_INFO* [In]
  fun RtmGetMostSpecificDestination(rtmreghandle : LibC::IntPtrT, destaddress : RTM_NET_ADDRESS*, protocolid : UInt32, targetviews : UInt32, destinfo : RTM_DEST_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],desthandle : LibC::IntPtrT [In],protocolid : UInt32 [In],targetviews : UInt32 [In],destinfo : RTM_DEST_INFO* [In]
  fun RtmGetLessSpecificDestination(rtmreghandle : LibC::IntPtrT, desthandle : LibC::IntPtrT, protocolid : UInt32, targetviews : UInt32, destinfo : RTM_DEST_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],destaddress : RTM_NET_ADDRESS* [In],matchingflags : UInt32 [In],routeinfo : RTM_ROUTE_INFO* [In],interfaceindex : UInt32 [In],targetviews : UInt32 [In],routehandle : LibC::IntPtrT* [In]
  fun RtmGetExactMatchRoute(rtmreghandle : LibC::IntPtrT, destaddress : RTM_NET_ADDRESS*, matchingflags : UInt32, routeinfo : RTM_ROUTE_INFO*, interfaceindex : UInt32, targetviews : UInt32, routehandle : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routehandle : LibC::IntPtrT [In],bestinviews : UInt32* [In]
  fun RtmIsBestRoute(rtmreghandle : LibC::IntPtrT, routehandle : LibC::IntPtrT, bestinviews : UInt32*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],nexthopinfo : RTM_NEXTHOP_INFO* [In],nexthophandle : LibC::IntPtrT* [In],changeflags : UInt32* [In]
  fun RtmAddNextHop(rtmreghandle : LibC::IntPtrT, nexthopinfo : RTM_NEXTHOP_INFO*, nexthophandle : LibC::IntPtrT*, changeflags : UInt32*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],nexthopinfo : RTM_NEXTHOP_INFO* [In],nexthophandle : LibC::IntPtrT* [In],nexthoppointer : RTM_NEXTHOP_INFO** [In]
  fun RtmFindNextHop(rtmreghandle : LibC::IntPtrT, nexthopinfo : RTM_NEXTHOP_INFO*, nexthophandle : LibC::IntPtrT*, nexthoppointer : RTM_NEXTHOP_INFO**) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],nexthophandle : LibC::IntPtrT [In],nexthopinfo : RTM_NEXTHOP_INFO* [In]
  fun RtmDeleteNextHop(rtmreghandle : LibC::IntPtrT, nexthophandle : LibC::IntPtrT, nexthopinfo : RTM_NEXTHOP_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],nexthophandle : LibC::IntPtrT [In],nexthoppointer : RTM_NEXTHOP_INFO** [In]
  fun RtmGetNextHopPointer(rtmreghandle : LibC::IntPtrT, nexthophandle : LibC::IntPtrT, nexthoppointer : RTM_NEXTHOP_INFO**) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],nexthophandle : LibC::IntPtrT [In],exclusive : LibC::BOOL [In],locknexthop : LibC::BOOL [In],nexthoppointer : RTM_NEXTHOP_INFO** [In]
  fun RtmLockNextHop(rtmreghandle : LibC::IntPtrT, nexthophandle : LibC::IntPtrT, exclusive : LibC::BOOL, locknexthop : LibC::BOOL, nexthoppointer : RTM_NEXTHOP_INFO**) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],targetviews : UInt32 [In],enumflags : UInt32 [In],netaddress : RTM_NET_ADDRESS* [In],protocolid : UInt32 [In],rtmenumhandle : LibC::IntPtrT* [In]
  fun RtmCreateDestEnum(rtmreghandle : LibC::IntPtrT, targetviews : UInt32, enumflags : UInt32, netaddress : RTM_NET_ADDRESS*, protocolid : UInt32, rtmenumhandle : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],enumhandle : LibC::IntPtrT [In],numdests : UInt32* [In],destinfos : RTM_DEST_INFO* [In]
  fun RtmGetEnumDests(rtmreghandle : LibC::IntPtrT, enumhandle : LibC::IntPtrT, numdests : UInt32*, destinfos : RTM_DEST_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],numdests : UInt32 [In],destinfos : RTM_DEST_INFO* [In]
  fun RtmReleaseDests(rtmreghandle : LibC::IntPtrT, numdests : UInt32, destinfos : RTM_DEST_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],desthandle : LibC::IntPtrT [In],targetviews : UInt32 [In],enumflags : UInt32 [In],startdest : RTM_NET_ADDRESS* [In],matchingflags : UInt32 [In],criteriaroute : RTM_ROUTE_INFO* [In],criteriainterface : UInt32 [In],rtmenumhandle : LibC::IntPtrT* [In]
  fun RtmCreateRouteEnum(rtmreghandle : LibC::IntPtrT, desthandle : LibC::IntPtrT, targetviews : UInt32, enumflags : UInt32, startdest : RTM_NET_ADDRESS*, matchingflags : UInt32, criteriaroute : RTM_ROUTE_INFO*, criteriainterface : UInt32, rtmenumhandle : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],enumhandle : LibC::IntPtrT [In],numroutes : UInt32* [In],routehandles : LibC::IntPtrT* [In]
  fun RtmGetEnumRoutes(rtmreghandle : LibC::IntPtrT, enumhandle : LibC::IntPtrT, numroutes : UInt32*, routehandles : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],numroutes : UInt32 [In],routehandles : LibC::IntPtrT* [In]
  fun RtmReleaseRoutes(rtmreghandle : LibC::IntPtrT, numroutes : UInt32, routehandles : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],enumflags : UInt32 [In],netaddress : RTM_NET_ADDRESS* [In],rtmenumhandle : LibC::IntPtrT* [In]
  fun RtmCreateNextHopEnum(rtmreghandle : LibC::IntPtrT, enumflags : UInt32, netaddress : RTM_NET_ADDRESS*, rtmenumhandle : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],enumhandle : LibC::IntPtrT [In],numnexthops : UInt32* [In],nexthophandles : LibC::IntPtrT* [In]
  fun RtmGetEnumNextHops(rtmreghandle : LibC::IntPtrT, enumhandle : LibC::IntPtrT, numnexthops : UInt32*, nexthophandles : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],numnexthops : UInt32 [In],nexthophandles : LibC::IntPtrT* [In]
  fun RtmReleaseNextHops(rtmreghandle : LibC::IntPtrT, numnexthops : UInt32, nexthophandles : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],enumhandle : LibC::IntPtrT [In]
  fun RtmDeleteEnumHandle(rtmreghandle : LibC::IntPtrT, enumhandle : LibC::IntPtrT) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],targetviews : UInt32 [In],notifyflags : UInt32 [In],notifycontext : Void* [In],notifyhandle : LibC::IntPtrT* [In]
  fun RtmRegisterForChangeNotification(rtmreghandle : LibC::IntPtrT, targetviews : UInt32, notifyflags : UInt32, notifycontext : Void*, notifyhandle : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],notifyhandle : LibC::IntPtrT [In],numdests : UInt32* [In],changeddests : RTM_DEST_INFO* [In]
  fun RtmGetChangedDests(rtmreghandle : LibC::IntPtrT, notifyhandle : LibC::IntPtrT, numdests : UInt32*, changeddests : RTM_DEST_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],notifyhandle : LibC::IntPtrT [In],numdests : UInt32 [In],changeddests : RTM_DEST_INFO* [In]
  fun RtmReleaseChangedDests(rtmreghandle : LibC::IntPtrT, notifyhandle : LibC::IntPtrT, numdests : UInt32, changeddests : RTM_DEST_INFO*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],notifyhandle : LibC::IntPtrT [In],numdests : UInt32 [In],changeddests : LibC::IntPtrT* [In]
  fun RtmIgnoreChangedDests(rtmreghandle : LibC::IntPtrT, notifyhandle : LibC::IntPtrT, numdests : UInt32, changeddests : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],notifyhandle : LibC::IntPtrT [In],desthandle : LibC::IntPtrT [In],changestatus : LibC::BOOL* [In]
  fun RtmGetChangeStatus(rtmreghandle : LibC::IntPtrT, notifyhandle : LibC::IntPtrT, desthandle : LibC::IntPtrT, changestatus : LibC::BOOL*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],notifyhandle : LibC::IntPtrT [In],desthandle : LibC::IntPtrT [In],markdest : LibC::BOOL [In]
  fun RtmMarkDestForChangeNotification(rtmreghandle : LibC::IntPtrT, notifyhandle : LibC::IntPtrT, desthandle : LibC::IntPtrT, markdest : LibC::BOOL) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],notifyhandle : LibC::IntPtrT [In],desthandle : LibC::IntPtrT [In],destmarked : LibC::BOOL* [In]
  fun RtmIsMarkedForChangeNotification(rtmreghandle : LibC::IntPtrT, notifyhandle : LibC::IntPtrT, desthandle : LibC::IntPtrT, destmarked : LibC::BOOL*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],notifyhandle : LibC::IntPtrT [In]
  fun RtmDeregisterFromChangeNotification(rtmreghandle : LibC::IntPtrT, notifyhandle : LibC::IntPtrT) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routelisthandle : LibC::IntPtrT* [In]
  fun RtmCreateRouteList(rtmreghandle : LibC::IntPtrT, routelisthandle : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routelisthandle : LibC::IntPtrT [In],numroutes : UInt32 [In],routehandles : LibC::IntPtrT* [In]
  fun RtmInsertInRouteList(rtmreghandle : LibC::IntPtrT, routelisthandle : LibC::IntPtrT, numroutes : UInt32, routehandles : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routelisthandle : LibC::IntPtrT [In],rtmenumhandle : LibC::IntPtrT* [In]
  fun RtmCreateRouteListEnum(rtmreghandle : LibC::IntPtrT, routelisthandle : LibC::IntPtrT, rtmenumhandle : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],enumhandle : LibC::IntPtrT [In],numroutes : UInt32* [In],routehandles : LibC::IntPtrT* [In]
  fun RtmGetListEnumRoutes(rtmreghandle : LibC::IntPtrT, enumhandle : LibC::IntPtrT, numroutes : UInt32*, routehandles : LibC::IntPtrT*) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],routelisthandle : LibC::IntPtrT [In]
  fun RtmDeleteRouteList(rtmreghandle : LibC::IntPtrT, routelisthandle : LibC::IntPtrT) : UInt32

  # Params # rtmreghandle : LibC::IntPtrT [In],numhandles : UInt32 [In],rtmhandles : LibC::HANDLE* [In]
  fun RtmReferenceHandles(rtmreghandle : LibC::IntPtrT, numhandles : UInt32, rtmhandles : LibC::HANDLE*) : UInt32
end
