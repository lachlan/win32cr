require "../security.cr"
require "../foundation.cr"
require "../networking/winsock.cr"
require "../system/kernel.cr"
require "../system/rpc.cr"

@[Link("delayimp")]
@[Link("user32")]
@[Link(ldflags: "/IGNORE:4199")]
@[Link(ldflags: "/DELAYLOAD:fwpuclnt.dll")]
lib LibWin32
  FWPM_NET_EVENT_KEYWORD_INBOUND_MCAST = 1_u32
  FWPM_NET_EVENT_KEYWORD_INBOUND_BCAST = 2_u32
  FWPM_NET_EVENT_KEYWORD_CAPABILITY_DROP = 4_u32
  FWPM_NET_EVENT_KEYWORD_CAPABILITY_ALLOW = 8_u32
  FWPM_NET_EVENT_KEYWORD_CLASSIFY_ALLOW = 16_u32
  FWPM_NET_EVENT_KEYWORD_PORT_SCANNING_DROP = 32_u32
  FWPM_ENGINE_OPTION_PACKET_QUEUE_NONE = 0_u32
  FWPM_ENGINE_OPTION_PACKET_QUEUE_INBOUND = 1_u32
  FWPM_ENGINE_OPTION_PACKET_QUEUE_FORWARD = 2_u32
  FWPM_ENGINE_OPTION_PACKET_BATCH_INBOUND = 4_u32
  FWPM_SESSION_FLAG_DYNAMIC = 1_u32
  FWPM_SESSION_FLAG_RESERVED = 268435456_u32
  FWPM_PROVIDER_FLAG_PERSISTENT = 1_u32
  FWPM_PROVIDER_FLAG_DISABLED = 16_u32
  FWPM_PROVIDER_CONTEXT_FLAG_PERSISTENT = 1_u32
  FWPM_PROVIDER_CONTEXT_FLAG_DOWNLEVEL = 2_u32
  FWPM_SUBLAYER_FLAG_PERSISTENT = 1_u32
  FWPM_LAYER_FLAG_KERNEL = 1_u32
  FWPM_LAYER_FLAG_BUILTIN = 2_u32
  FWPM_LAYER_FLAG_CLASSIFY_MOSTLY = 4_u32
  FWPM_LAYER_FLAG_BUFFERED = 8_u32
  FWPM_CALLOUT_FLAG_PERSISTENT = 65536_u32
  FWPM_CALLOUT_FLAG_USES_PROVIDER_CONTEXT = 131072_u32
  FWPM_CALLOUT_FLAG_REGISTERED = 262144_u32
  FWPM_FILTER_FLAG_HAS_SECURITY_REALM_PROVIDER_CONTEXT = 128_u32
  FWPM_FILTER_FLAG_SYSTEMOS_ONLY = 256_u32
  FWPM_FILTER_FLAG_GAMEOS_ONLY = 512_u32
  FWPM_FILTER_FLAG_SILENT_MODE = 1024_u32
  FWPM_FILTER_FLAG_IPSEC_NO_ACQUIRE_INITIATE = 2048_u32
  FWPM_FILTER_FLAG_RESERVED0 = 4096_u32
  FWPM_FILTER_FLAG_RESERVED1 = 8192_u32
  FWPM_NET_EVENT_FLAG_IP_PROTOCOL_SET = 1_u32
  FWPM_NET_EVENT_FLAG_LOCAL_ADDR_SET = 2_u32
  FWPM_NET_EVENT_FLAG_REMOTE_ADDR_SET = 4_u32
  FWPM_NET_EVENT_FLAG_LOCAL_PORT_SET = 8_u32
  FWPM_NET_EVENT_FLAG_REMOTE_PORT_SET = 16_u32
  FWPM_NET_EVENT_FLAG_APP_ID_SET = 32_u32
  FWPM_NET_EVENT_FLAG_USER_ID_SET = 64_u32
  FWPM_NET_EVENT_FLAG_SCOPE_ID_SET = 128_u32
  FWPM_NET_EVENT_FLAG_IP_VERSION_SET = 256_u32
  FWPM_NET_EVENT_FLAG_REAUTH_REASON_SET = 512_u32
  FWPM_NET_EVENT_FLAG_PACKAGE_ID_SET = 1024_u32
  FWPM_NET_EVENT_FLAG_ENTERPRISE_ID_SET = 2048_u32
  FWPM_NET_EVENT_FLAG_POLICY_FLAGS_SET = 4096_u32
  FWPM_NET_EVENT_FLAG_EFFECTIVE_NAME_SET = 8192_u32
  IKEEXT_CERT_HASH_LEN = 20_u32
  FWPM_NET_EVENT_IKEEXT_MM_FAILURE_FLAG_BENIGN = 1_u32
  FWPM_NET_EVENT_IKEEXT_MM_FAILURE_FLAG_MULTIPLE = 2_u32
  FWPM_NET_EVENT_IKEEXT_EM_FAILURE_FLAG_MULTIPLE = 1_u32
  FWPM_NET_EVENT_IKEEXT_EM_FAILURE_FLAG_BENIGN = 2_u32
  FWPM_CONNECTION_ENUM_FLAG_QUERY_BYTES_TRANSFERRED = 1_u32
  FWPS_FILTER_FLAG_CLEAR_ACTION_RIGHT = 1_u32
  FWPS_FILTER_FLAG_PERMIT_IF_CALLOUT_UNREGISTERED = 2_u32
  FWPS_FILTER_FLAG_OR_CONDITIONS = 4_u32
  FWPS_FILTER_FLAG_HAS_SECURITY_REALM_PROVIDER_CONTEXT = 8_u32
  FWPS_FILTER_FLAG_SILENT_MODE = 16_u32
  FWPS_FILTER_FLAG_IPSEC_NO_ACQUIRE_INITIATE = 32_u32
  FWPS_FILTER_FLAG_RESERVED0 = 64_u32
  FWPS_FILTER_FLAG_RESERVED1 = 128_u32
  FWPS_INCOMING_FLAG_CACHE_SAFE = 1_u32
  FWPS_INCOMING_FLAG_ENFORCE_QUERY = 2_u32
  FWPS_INCOMING_FLAG_ABSORB = 4_u32
  FWPS_INCOMING_FLAG_CONNECTION_FAILING_INDICATION = 8_u32
  FWPS_INCOMING_FLAG_MID_STREAM_INSPECTION = 16_u32
  FWPS_INCOMING_FLAG_RECLASSIFY = 32_u32
  FWPS_INCOMING_FLAG_IS_LOOSE_SOURCE_FLOW = 64_u32
  FWPS_INCOMING_FLAG_IS_LOCAL_ONLY_FLOW = 128_u32
  FWPS_L2_INCOMING_FLAG_IS_RAW_IPV4_FRAMING = 1_u32
  FWPS_L2_INCOMING_FLAG_IS_RAW_IPV6_FRAMING = 2_u32
  FWPS_L2_INCOMING_FLAG_RECLASSIFY_MULTI_DESTINATION = 8_u32
  FWPS_INCOMING_FLAG_RESERVED0 = 256_u32
  FWPS_RIGHT_ACTION_WRITE = 1_u32
  FWPS_CLASSIFY_OUT_FLAG_ABSORB = 1_u32
  FWPS_CLASSIFY_OUT_FLAG_BUFFER_LIMIT_REACHED = 2_u32
  FWPS_CLASSIFY_OUT_FLAG_NO_MORE_DATA = 4_u32
  FWPS_CLASSIFY_OUT_FLAG_ALE_FAST_CACHE_CHECK = 8_u32
  FWPS_CLASSIFY_OUT_FLAG_ALE_FAST_CACHE_POSSIBLE = 16_u32
  FWPS_ALE_ENDPOINT_FLAG_IPSEC_SECURED = 1_u32
  FWP_BYTEMAP_ARRAY64_SIZE = 8_u32
  FWP_BYTE_ARRAY6_SIZE = 6_u32
  FWP_V6_ADDR_SIZE = 16_u32
  FWP_ACTRL_MATCH_FILTER = 1_u32
  FWP_OPTION_VALUE_ALLOW_MULTICAST_STATE = 0_u32
  FWP_OPTION_VALUE_DENY_MULTICAST_STATE = 1_u32
  FWP_OPTION_VALUE_ALLOW_GLOBAL_MULTICAST_STATE = 2_u32
  FWP_OPTION_VALUE_DISABLE_LOOSE_SOURCE = 0_u32
  FWP_OPTION_VALUE_ENABLE_LOOSE_SOURCE = 1_u32
  FWP_OPTION_VALUE_DISABLE_LOCAL_ONLY_MAPPING = 0_u32
  FWP_OPTION_VALUE_ENABLE_LOCAL_ONLY_MAPPING = 1_u32
  FWP_ACTION_FLAG_TERMINATING = 4096_u32
  FWP_ACTION_FLAG_NON_TERMINATING = 8192_u32
  FWP_ACTION_FLAG_CALLOUT = 16384_u32
  FWP_ACTION_NONE = 7_u32
  FWP_ACTION_NONE_NO_MATCH = 8_u32
  FWP_CONDITION_FLAG_IS_LOOPBACK = 1_u32
  FWP_CONDITION_FLAG_IS_IPSEC_SECURED = 2_u32
  FWP_CONDITION_FLAG_IS_REAUTHORIZE = 4_u32
  FWP_CONDITION_FLAG_IS_WILDCARD_BIND = 8_u32
  FWP_CONDITION_FLAG_IS_RAW_ENDPOINT = 16_u32
  FWP_CONDITION_FLAG_IS_FRAGMENT = 32_u32
  FWP_CONDITION_FLAG_IS_FRAGMENT_GROUP = 64_u32
  FWP_CONDITION_FLAG_IS_IPSEC_NATT_RECLASSIFY = 128_u32
  FWP_CONDITION_FLAG_REQUIRES_ALE_CLASSIFY = 256_u32
  FWP_CONDITION_FLAG_IS_IMPLICIT_BIND = 512_u32
  FWP_CONDITION_FLAG_IS_REASSEMBLED = 1024_u32
  FWP_CONDITION_FLAG_IS_NAME_APP_SPECIFIED = 16384_u32
  FWP_CONDITION_FLAG_IS_PROMISCUOUS = 32768_u32
  FWP_CONDITION_FLAG_IS_AUTH_FW = 65536_u32
  FWP_CONDITION_FLAG_IS_RECLASSIFY = 131072_u32
  FWP_CONDITION_FLAG_IS_OUTBOUND_PASS_THRU = 262144_u32
  FWP_CONDITION_FLAG_IS_INBOUND_PASS_THRU = 524288_u32
  FWP_CONDITION_FLAG_IS_CONNECTION_REDIRECTED = 1048576_u32
  FWP_CONDITION_FLAG_IS_PROXY_CONNECTION = 2097152_u32
  FWP_CONDITION_FLAG_IS_APPCONTAINER_LOOPBACK = 4194304_u32
  FWP_CONDITION_FLAG_IS_NON_APPCONTAINER_LOOPBACK = 8388608_u32
  FWP_CONDITION_FLAG_IS_RESERVED = 16777216_u32
  FWP_CONDITION_FLAG_IS_HONORING_POLICY_AUTHORIZE = 33554432_u32
  FWP_CONDITION_REAUTHORIZE_REASON_POLICY_CHANGE = 1_u32
  FWP_CONDITION_REAUTHORIZE_REASON_NEW_ARRIVAL_INTERFACE = 2_u32
  FWP_CONDITION_REAUTHORIZE_REASON_NEW_NEXTHOP_INTERFACE = 4_u32
  FWP_CONDITION_REAUTHORIZE_REASON_PROFILE_CROSSING = 8_u32
  FWP_CONDITION_REAUTHORIZE_REASON_CLASSIFY_COMPLETION = 16_u32
  FWP_CONDITION_REAUTHORIZE_REASON_IPSEC_PROPERTIES_CHANGED = 32_u32
  FWP_CONDITION_REAUTHORIZE_REASON_MID_STREAM_INSPECTION = 64_u32
  FWP_CONDITION_REAUTHORIZE_REASON_SOCKET_PROPERTY_CHANGED = 128_u32
  FWP_CONDITION_REAUTHORIZE_REASON_NEW_INBOUND_MCAST_BCAST_PACKET = 256_u32
  FWP_CONDITION_REAUTHORIZE_REASON_EDP_POLICY_CHANGED = 512_u32
  FWP_CONDITION_REAUTHORIZE_REASON_PROXY_HANDLE_CHANGED = 16384_u32
  FWP_CONDITION_REAUTHORIZE_REASON_CHECK_OFFLOAD = 65536_u32
  FWP_CONDITION_SOCKET_PROPERTY_FLAG_IS_SYSTEM_PORT_RPC = 1_u32
  FWP_CONDITION_SOCKET_PROPERTY_FLAG_ALLOW_EDGE_TRAFFIC = 2_u32
  FWP_CONDITION_SOCKET_PROPERTY_FLAG_DENY_EDGE_TRAFFIC = 4_u32
  FWP_CONDITION_L2_IS_NATIVE_ETHERNET = 1_u32
  FWP_CONDITION_L2_IS_WIFI = 2_u32
  FWP_CONDITION_L2_IS_MOBILE_BROADBAND = 4_u32
  FWP_CONDITION_L2_IS_WIFI_DIRECT_DATA = 8_u32
  FWP_CONDITION_L2_IS_VM2VM = 16_u32
  FWP_CONDITION_L2_IS_MALFORMED_PACKET = 32_u32
  FWP_CONDITION_L2_IS_IP_FRAGMENT_GROUP = 64_u32
  FWP_CONDITION_L2_IF_CONNECTOR_PRESENT = 128_u32
  FWP_FILTER_ENUM_FLAG_BEST_TERMINATING_MATCH = 1_u32
  FWP_FILTER_ENUM_FLAG_SORTED = 2_u32
  FWP_FILTER_ENUM_FLAG_BOOTTIME_ONLY = 4_u32
  FWP_FILTER_ENUM_FLAG_INCLUDE_BOOTTIME = 8_u32
  FWP_FILTER_ENUM_FLAG_INCLUDE_DISABLED = 16_u32
  FWP_FILTER_ENUM_FLAG_RESERVED1 = 32_u32
  FWP_CALLOUT_FLAG_CONDITIONAL_ON_FLOW = 1_u32
  FWP_CALLOUT_FLAG_ALLOW_OFFLOAD = 2_u32
  FWP_CALLOUT_FLAG_ENABLE_COMMIT_ADD_NOTIFY = 4_u32
  FWP_CALLOUT_FLAG_ALLOW_MID_STREAM_INSPECTION = 8_u32
  FWP_CALLOUT_FLAG_ALLOW_RECLASSIFY = 16_u32
  FWP_CALLOUT_FLAG_RESERVED1 = 32_u32
  FWP_CALLOUT_FLAG_ALLOW_RSC = 64_u32
  FWP_CALLOUT_FLAG_ALLOW_L2_BATCH_CLASSIFY = 128_u32
  FWP_CALLOUT_FLAG_ALLOW_USO = 256_u32
  FWP_CALLOUT_FLAG_ALLOW_URO = 512_u32
  FWP_CALLOUT_FLAG_RESERVED2 = 1024_u32
  IKEEXT_CERT_AUTH_FLAG_DISABLE_CRL_CHECK = 2_u32
  IKEEXT_CERT_AUTH_FLAG_DISABLE_REQUEST_PAYLOAD = 64_u32
  IKEEXT_KERB_AUTH_FORCE_PROXY_ON_INITIATOR = 4_u32
  IKEEXT_NTLM_V2_AUTH_DONT_ACCEPT_EXPLICIT_CREDENTIALS = 1_u32
  IKEEXT_POLICY_FLAG_MOBIKE_NOT_SUPPORTED = 16_u32
  IKEEXT_POLICY_FLAG_SITE_TO_SITE = 32_u32
  IKEEXT_POLICY_FLAG_IMS_VPN = 64_u32
  IKEEXT_POLICY_ENABLE_IKEV2_FRAGMENTATION = 128_u32
  IKEEXT_POLICY_SUPPORT_LOW_POWER_MODE = 256_u32
  IKEEXT_CERT_CREDENTIAL_FLAG_NAP_CERT = 1_u32
  IPSEC_AUTH_CONFIG_HMAC_MD5_96 = 0_u32
  IPSEC_AUTH_CONFIG_HMAC_SHA_1_96 = 1_u32
  IPSEC_AUTH_CONFIG_HMAC_SHA_256_128 = 2_u32
  IPSEC_AUTH_CONFIG_GCM_AES_128 = 3_u32
  IPSEC_AUTH_CONFIG_GCM_AES_192 = 4_u32
  IPSEC_AUTH_CONFIG_GCM_AES_256 = 5_u32
  IPSEC_AUTH_CONFIG_MAX = 6_u32
  IPSEC_CIPHER_CONFIG_CBC_DES = 1_u32
  IPSEC_CIPHER_CONFIG_CBC_3DES = 2_u32
  IPSEC_CIPHER_CONFIG_CBC_AES_128 = 3_u32
  IPSEC_CIPHER_CONFIG_CBC_AES_192 = 4_u32
  IPSEC_CIPHER_CONFIG_CBC_AES_256 = 5_u32
  IPSEC_CIPHER_CONFIG_GCM_AES_128 = 6_u32
  IPSEC_CIPHER_CONFIG_GCM_AES_192 = 7_u32
  IPSEC_CIPHER_CONFIG_GCM_AES_256 = 8_u32
  IPSEC_CIPHER_CONFIG_MAX = 9_u32
  IPSEC_POLICY_FLAG_KEY_MANAGER_ALLOW_NOTIFY_KEY = 16384_u32
  IPSEC_POLICY_FLAG_RESERVED1 = 32768_u32
  IPSEC_POLICY_FLAG_SITE_TO_SITE_TUNNEL = 65536_u32
  IPSEC_KEYING_POLICY_FLAG_TERMINATING_MATCH = 1_u32
  IPSEC_SA_BUNDLE_FLAG_NLB = 16_u32
  IPSEC_SA_BUNDLE_FLAG_NO_MACHINE_LUID_VERIFY = 32_u32
  IPSEC_SA_BUNDLE_FLAG_NO_IMPERSONATION_LUID_VERIFY = 64_u32
  IPSEC_SA_BUNDLE_FLAG_NO_EXPLICIT_CRED_MATCH = 128_u32
  IPSEC_SA_BUNDLE_FLAG_FORCE_INBOUND_CONNECTIONS = 32768_u32
  IPSEC_SA_BUNDLE_FLAG_FORCE_OUTBOUND_CONNECTIONS = 65536_u32
  IPSEC_SA_BUNDLE_FLAG_FORWARD_PATH_INITIATOR = 131072_u32
  IPSEC_SA_BUNDLE_FLAG_ENABLE_OPTIONAL_ASYMMETRIC_IDLE = 262144_u32
  IPSEC_SA_BUNDLE_FLAG_USING_DICTATED_KEYS = 524288_u32
  IPSEC_SA_BUNDLE_FLAG_LOCALLY_DICTATED_KEYS = 1048576_u32
  IPSEC_SA_BUNDLE_FLAG_SA_OFFLOADED = 2097152_u32
  IPSEC_SA_BUNDLE_FLAG_IP_IN_IP_PKT = 4194304_u32
  IPSEC_SA_BUNDLE_FLAG_LOW_POWER_MODE_SUPPORT = 8388608_u32
  IPSEC_DOSP_DSCP_DISABLE_VALUE = 255_u32
  IPSEC_DOSP_RATE_LIMIT_DISABLE_VALUE = 0_u32
  IPSEC_KEY_MANAGER_FLAG_DICTATE_KEY = 1_u32
  LITTLE_ENDIAN = 1234_u32
  BIG_ENDIAN = 4321_u32
  PDP_ENDIAN = 3412_u32
  BYTE_ORDER = 1234_u32
  DL_ADDRESS_LENGTH_MAXIMUM = 32_u32
  DL_HEADER_LENGTH_MAXIMUM = 64_u32
  SNAP_DSAP = 170_u32
  SNAP_SSAP = 170_u32
  SNAP_CONTROL = 3_u32
  SNAP_OUI = 0_u32
  ETH_LENGTH_OF_HEADER = 14_u32
  ETH_LENGTH_OF_VLAN_HEADER = 4_u32
  ETH_LENGTH_OF_SNAP_HEADER = 8_u32
  ETHERNET_TYPE_MINIMUM = 1536_u32
  ETHERNET_TYPE_IPV4 = 2048_u32
  ETHERNET_TYPE_ARP = 2054_u32
  ETHERNET_TYPE_IPV6 = 34525_u32
  ETHERNET_TYPE_802_1Q = 33024_u32
  ETHERNET_TYPE_802_1AD = 34984_u32
  IP_VER_MASK = 240_u32
  IPV4_VERSION = 4_u32
  MAX_IPV4_PACKET = 65535_u32
  MAX_IPV4_HLEN = 60_u32
  IPV4_MINIMUM_MTU = 576_u32
  IPV4_MIN_MINIMUM_MTU = 352_u32
  IPV4_MAX_MINIMUM_MTU = 576_u32
  SIZEOF_IP_OPT_ROUTING_HEADER = 3_u32
  SIZEOF_IP_OPT_TIMESTAMP_HEADER = 4_u32
  SIZEOF_IP_OPT_SECURITY = 11_u32
  SIZEOF_IP_OPT_STREAMIDENTIFIER = 4_u32
  SIZEOF_IP_OPT_ROUTERALERT = 4_u32
  IP4_OFF_MASK = 65311_u32
  ICMPV4_INVALID_PREFERENCE_LEVEL = 2147483648_u32
  IGMP_QUERY_TYPE = 17_u32
  IGMP_VERSION1_REPORT_TYPE = 18_u32
  IGMP_VERSION2_REPORT_TYPE = 22_u32
  IGMP_LEAVE_GROUP_TYPE = 23_u32
  IGMP_VERSION3_REPORT_TYPE = 34_u32
  IPV6_VERSION = 96_u32
  IPV6_TRAFFIC_CLASS_MASK = 49167_u32
  IPV6_FULL_TRAFFIC_CLASS_MASK = 61455_u32
  IPV6_ECN_MASK = 12288_u32
  IPV6_FLOW_LABEL_MASK = 4294905600_u32
  MAX_IPV6_PAYLOAD = 65535_u32
  IPV6_ECN_SHIFT = 12_u32
  IPV6_MINIMUM_MTU = 1280_u32
  IP6F_OFF_MASK = 63743_u32
  IP6F_RESERVED_MASK = 1536_u32
  IP6F_MORE_FRAG = 256_u32
  EXT_LEN_UNIT = 8_u32
  IP6OPT_TYPE_SKIP = 0_u32
  IP6OPT_TYPE_DISCARD = 64_u32
  IP6OPT_TYPE_FORCEICMP = 128_u32
  IP6OPT_TYPE_ICMP = 192_u32
  IP6OPT_MUTABLE = 32_u32
  ICMP6_DST_UNREACH_NOROUTE = 0_u32
  ICMP6_DST_UNREACH_ADMIN = 1_u32
  ICMP6_DST_UNREACH_BEYONDSCOPE = 2_u32
  ICMP6_DST_UNREACH_ADDR = 3_u32
  ICMP6_DST_UNREACH_NOPORT = 4_u32
  ICMP6_TIME_EXCEED_TRANSIT = 0_u32
  ICMP6_TIME_EXCEED_REASSEMBLY = 1_u32
  ICMP6_PARAMPROB_HEADER = 0_u32
  ICMP6_PARAMPROB_NEXTHEADER = 1_u32
  ICMP6_PARAMPROB_OPTION = 2_u32
  ICMPV6_ECHO_REQUEST_FLAG_REVERSE = 1_u32
  ND_RA_FLAG_MANAGED = 128_u32
  ND_RA_FLAG_OTHER = 64_u32
  ND_RA_FLAG_HOME_AGENT = 32_u32
  ND_RA_FLAG_PREFERENCE = 24_u32
  ND_NA_FLAG_ROUTER = 2147483648_u32
  ND_NA_FLAG_SOLICITED = 1073741824_u32
  ND_NA_FLAG_OVERRIDE = 536870912_u32
  ND_OPT_PI_FLAG_ONLINK = 128_u32
  ND_OPT_PI_FLAG_AUTO = 64_u32
  ND_OPT_PI_FLAG_ROUTER_ADDR = 32_u32
  ND_OPT_PI_FLAG_SITE_PREFIX = 16_u32
  ND_OPT_PI_FLAG_ROUTE = 1_u32
  ND_OPT_RI_FLAG_PREFERENCE = 24_u32
  ND_OPT_RDNSS_MIN_LEN = 24_u32
  ND_OPT_DNSSL_MIN_LEN = 16_u32
  IN6_EMBEDDEDV4_UOCTET_POSITION = 8_u32
  IN6_EMBEDDEDV4_BITS_IN_BYTE = 8_u32
  TH_FIN = 1_u32
  TH_SYN = 2_u32
  TH_RST = 4_u32
  TH_PSH = 8_u32
  TH_ACK = 16_u32
  TH_URG = 32_u32
  TH_ECE = 64_u32
  TH_CWR = 128_u32
  TH_OPT_EOL = 0_u32
  TH_OPT_NOP = 1_u32
  TH_OPT_MSS = 2_u32
  TH_OPT_WS = 3_u32
  TH_OPT_SACK_PERMITTED = 4_u32
  TH_OPT_SACK = 5_u32
  TH_OPT_TS = 8_u32
  TH_OPT_FASTOPEN = 34_u32
  FWPM_LAYER_INBOUND_IPPACKET_V4 = "c86fd1bf-21cd-497e-a0bb-17425c885c58"
  FWPM_LAYER_INBOUND_IPPACKET_V4_DISCARD = "b5a230d0-a8c0-44f2-916e-991b53ded1f7"
  FWPM_LAYER_INBOUND_IPPACKET_V6 = "f52032cb-991c-46e7-971d-2601459a91ca"
  FWPM_LAYER_INBOUND_IPPACKET_V6_DISCARD = "bb24c279-93b4-47a2-83ad-ae1698b50885"
  FWPM_LAYER_OUTBOUND_IPPACKET_V4 = "1e5c9fae-8a84-4135-a331-950b54229ecd"
  FWPM_LAYER_OUTBOUND_IPPACKET_V4_DISCARD = "08e4bcb5-b647-48f3-953c-e5ddbd03937e"
  FWPM_LAYER_OUTBOUND_IPPACKET_V6 = "a3b3ab6b-3564-488c-9117-f34e82142763"
  FWPM_LAYER_OUTBOUND_IPPACKET_V6_DISCARD = "9513d7c4-a934-49dc-91a7-6ccb80cc02e3"
  FWPM_LAYER_IPFORWARD_V4 = "a82acc24-4ee1-4ee1-b465-fd1d25cb10a4"
  FWPM_LAYER_IPFORWARD_V4_DISCARD = "9e9ea773-2fae-4210-8f17-34129ef369eb"
  FWPM_LAYER_IPFORWARD_V6 = "7b964818-19c7-493a-b71f-832c3684d28c"
  FWPM_LAYER_IPFORWARD_V6_DISCARD = "31524a5d-1dfe-472f-bb93-518ee945d8a2"
  FWPM_LAYER_INBOUND_TRANSPORT_V4 = "5926dfc8-e3cf-4426-a283-dc393f5d0f9d"
  FWPM_LAYER_INBOUND_TRANSPORT_V4_DISCARD = "ac4a9833-f69d-4648-b261-6dc84835ef39"
  FWPM_LAYER_INBOUND_TRANSPORT_V6 = "634a869f-fc23-4b90-b0c1-bf620a36ae6f"
  FWPM_LAYER_INBOUND_TRANSPORT_V6_DISCARD = "2a6ff955-3b2b-49d2-9848-ad9d72dcaab7"
  FWPM_LAYER_OUTBOUND_TRANSPORT_V4 = "09e61aea-d214-46e2-9b21-b26b0b2f28c8"
  FWPM_LAYER_OUTBOUND_TRANSPORT_V4_DISCARD = "c5f10551-bdb0-43d7-a313-50e211f4d68a"
  FWPM_LAYER_OUTBOUND_TRANSPORT_V6 = "e1735bde-013f-4655-b351-a49e15762df0"
  FWPM_LAYER_OUTBOUND_TRANSPORT_V6_DISCARD = "f433df69-ccbd-482e-b9b2-57165658c3b3"
  FWPM_LAYER_STREAM_V4 = "3b89653c-c170-49e4-b1cd-e0eeeee19a3e"
  FWPM_LAYER_STREAM_V4_DISCARD = "25c4c2c2-25ff-4352-82f9-c54a4a4726dc"
  FWPM_LAYER_STREAM_V6 = "47c9137a-7ec4-46b3-b6e4-48e926b1eda4"
  FWPM_LAYER_STREAM_V6_DISCARD = "10a59fc7-b628-4c41-9eb8-cf37d55103cf"
  FWPM_LAYER_DATAGRAM_DATA_V4 = "3d08bf4e-45f6-4930-a922-417098e20027"
  FWPM_LAYER_DATAGRAM_DATA_V4_DISCARD = "18e330c6-7248-4e52-aaab-472ed67704fd"
  FWPM_LAYER_DATAGRAM_DATA_V6 = "fa45fe2f-3cba-4427-87fc-57b9a4b10d00"
  FWPM_LAYER_DATAGRAM_DATA_V6_DISCARD = "09d1dfe1-9b86-4a42-be9d-8c315b92a5d0"
  FWPM_LAYER_INBOUND_ICMP_ERROR_V4 = "61499990-3cb6-4e84-b950-53b94b6964f3"
  FWPM_LAYER_INBOUND_ICMP_ERROR_V4_DISCARD = "a6b17075-ebaf-4053-a4e7-213c8121ede5"
  FWPM_LAYER_INBOUND_ICMP_ERROR_V6 = "65f9bdff-3b2d-4e5d-b8c6-c720651fe898"
  FWPM_LAYER_INBOUND_ICMP_ERROR_V6_DISCARD = "a6e7ccc0-08fb-468d-a472-9771d5595e09"
  FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4 = "41390100-564c-4b32-bc1d-718048354d7c"
  FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4_DISCARD = "b3598d36-0561-4588-a6bf-e955e3f6264b"
  FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6 = "7fb03b60-7b8d-4dfa-badd-980176fc4e12"
  FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6_DISCARD = "65f2e647-8d0c-4f47-b19b-33a4d3f1357c"
  FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4 = "1247d66d-0b60-4a15-8d44-7155d0f53a0c"
  FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4_DISCARD = "0b5812a2-c3ff-4eca-b88d-c79e20ac6322"
  FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6 = "55a650e1-5f0a-4eca-a653-88f53b26aa8c"
  FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6_DISCARD = "cbc998bb-c51f-4c1a-bb4f-9775fcacab2f"
  FWPM_LAYER_ALE_AUTH_LISTEN_V4 = "88bb5dad-76d7-4227-9c71-df0a3ed7be7e"
  FWPM_LAYER_ALE_AUTH_LISTEN_V4_DISCARD = "371dfada-9f26-45fd-b4eb-c29eb212893f"
  FWPM_LAYER_ALE_AUTH_LISTEN_V6 = "7ac9de24-17dd-4814-b4bd-a9fbc95a321b"
  FWPM_LAYER_ALE_AUTH_LISTEN_V6_DISCARD = "60703b07-63c8-48e9-ada3-12b1af40a617"
  FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4 = "e1cd9fe7-f4b5-4273-96c0-592e487b8650"
  FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4_DISCARD = "9eeaa99b-bd22-4227-919f-0073c63357b1"
  FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6 = "a3b42c97-9f04-4672-b87e-cee9c483257f"
  FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6_DISCARD = "89455b97-dbe1-453f-a224-13da895af396"
  FWPM_LAYER_ALE_AUTH_CONNECT_V4 = "c38d57d1-05a7-4c33-904f-7fbceee60e82"
  FWPM_LAYER_ALE_AUTH_CONNECT_V4_DISCARD = "d632a801-f5ba-4ad6-96e3-607017d9836a"
  FWPM_LAYER_ALE_AUTH_CONNECT_V6 = "4a72393b-319f-44bc-84c3-ba54dcb3b6b4"
  FWPM_LAYER_ALE_AUTH_CONNECT_V6_DISCARD = "c97bc3b8-c9a3-4e33-8695-8e17aad4de09"
  FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4 = "af80470a-5596-4c13-9992-539e6fe57967"
  FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4_DISCARD = "146ae4a9-a1d2-4d43-a31a-4c42682b8e4f"
  FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6 = "7021d2b3-dfa4-406e-afeb-6afaf7e70efd"
  FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6_DISCARD = "46928636-bbca-4b76-941d-0fa7f5d7d372"
  FWPM_LAYER_INBOUND_MAC_FRAME_ETHERNET = "effb7edb-0055-4f9a-a231-4ff8131ad191"
  FWPM_LAYER_OUTBOUND_MAC_FRAME_ETHERNET = "694673bc-d6db-4870-adee-0acdbdb7f4b2"
  FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE = "d4220bd3-62ce-4f08-ae88-b56e8526df50"
  FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE = "94c44912-9d6f-4ebf-b995-05ab8a088d1b"
  FWPM_LAYER_INGRESS_VSWITCH_ETHERNET = "7d98577a-9a87-41ec-9718-7cf589c9f32d"
  FWPM_LAYER_EGRESS_VSWITCH_ETHERNET = "86c872b0-76fa-4b79-93a4-0750530ae292"
  FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V4 = "b2696ff6-774f-4554-9f7d-3da3945f8e85"
  FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V6 = "5ee314fc-7d8a-47f4-b7e3-291a36da4e12"
  FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V4 = "b92350b6-91f0-46b6-bdc4-871dfd4a7c98"
  FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V6 = "1b2def23-1881-40bd-82f4-4254e63141cb"
  FWPM_LAYER_INBOUND_TRANSPORT_FAST = "e41d2719-05c7-40f0-8983-ea8d17bbc2f6"
  FWPM_LAYER_OUTBOUND_TRANSPORT_FAST = "13ed4388-a070-4815-9935-7a9be6408b78"
  FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE_FAST = "853aaa8e-2b78-4d24-a804-36db08b29711"
  FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE_FAST = "470df946-c962-486f-9446-8293cbc75eb8"
  FWPM_LAYER_IPSEC_KM_DEMUX_V4 = "f02b1526-a459-4a51-b9e3-759de52b9d2c"
  FWPM_LAYER_IPSEC_KM_DEMUX_V6 = "2f755cf6-2fd4-4e88-b3e4-a91bca495235"
  FWPM_LAYER_IPSEC_V4 = "eda65c74-610d-4bc5-948f-3c4f89556867"
  FWPM_LAYER_IPSEC_V6 = "13c48442-8d87-4261-9a29-59d2abc348b4"
  FWPM_LAYER_IKEEXT_V4 = "b14b7bdb-dbbd-473e-bed4-8b4708d4f270"
  FWPM_LAYER_IKEEXT_V6 = "b64786b3-f687-4eb9-89d2-8ef32acdabe2"
  FWPM_LAYER_RPC_UM = "75a89dda-95e4-40f3-adc7-7688a9c847e1"
  FWPM_LAYER_RPC_EPMAP = "9247bc61-eb07-47ee-872c-bfd78bfd1616"
  FWPM_LAYER_RPC_EP_ADD = "618dffc7-c450-4943-95db-99b4c16a55d4"
  FWPM_LAYER_RPC_PROXY_CONN = "94a4b50b-ba5c-4f27-907a-229fac0c2a7a"
  FWPM_LAYER_RPC_PROXY_IF = "f8a38615-e12c-41ac-98df-121ad981aade"
  FWPM_LAYER_KM_AUTHORIZATION = "4aa226e9-9020-45fb-956a-c0249d841195"
  FWPM_LAYER_NAME_RESOLUTION_CACHE_V4 = "0c2aa681-905b-4ccd-a467-4dd811d07b7b"
  FWPM_LAYER_NAME_RESOLUTION_CACHE_V6 = "92d592fa-6b01-434a-9dea-d1e96ea97da9"
  FWPM_LAYER_ALE_RESOURCE_RELEASE_V4 = "74365cce-ccb0-401a-bfc1-b89934ad7e15"
  FWPM_LAYER_ALE_RESOURCE_RELEASE_V6 = "f4e5ce80-edcc-4e13-8a2f-b91454bb057b"
  FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V4 = "b4766427-e2a2-467a-bd7e-dbcd1bd85a09"
  FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V6 = "bb536ccd-4755-4ba9-9ff7-f9edf8699c7b"
  FWPM_LAYER_ALE_CONNECT_REDIRECT_V4 = "c6e63c8c-b784-4562-aa7d-0a67cfcaf9a3"
  FWPM_LAYER_ALE_CONNECT_REDIRECT_V6 = "587e54a7-8046-42ba-a0aa-b716250fc7fd"
  FWPM_LAYER_ALE_BIND_REDIRECT_V4 = "66978cad-c704-42ac-86ac-7c1a231bd253"
  FWPM_LAYER_ALE_BIND_REDIRECT_V6 = "bef02c9c-606b-4536-8c26-1c2fc7b631d4"
  FWPM_LAYER_STREAM_PACKET_V4 = "af52d8ec-cb2d-44e5-ad92-f8dc38d2eb29"
  FWPM_LAYER_STREAM_PACKET_V6 = "779a8ca3-f099-468f-b5d4-83535c461c02"
  FWPM_LAYER_INBOUND_RESERVED2 = "f4fb8d55-c076-46d8-a2c7-6a4c722ca4ed"
  FWPM_SUBLAYER_RPC_AUDIT = "758c84f4-fb48-4de9-9aeb-3ed9551ab1fd"
  FWPM_SUBLAYER_IPSEC_TUNNEL = "83f299ed-9ff4-4967-aff4-c309f4dab827"
  FWPM_SUBLAYER_UNIVERSAL = "eebecc03-ced4-4380-819a-2734397b2b74"
  FWPM_SUBLAYER_LIPS = "1b75c0ce-ff60-4711-a70f-b4958cc3b2d0"
  FWPM_SUBLAYER_SECURE_SOCKET = "15a66e17-3f3c-4f7b-aa6c-812aa613dd82"
  FWPM_SUBLAYER_TCP_CHIMNEY_OFFLOAD = "337608b9-b7d5-4d5f-82f9-3618618bc058"
  FWPM_SUBLAYER_INSPECTION = "877519e1-e6a9-41a5-81b4-8c4f118e4a60"
  FWPM_SUBLAYER_TEREDO = "ba69dc66-5176-4979-9c89-26a7b46a8327"
  FWPM_SUBLAYER_IPSEC_FORWARD_OUTBOUND_TUNNEL = "a5082e73-8f71-4559-8a9a-101cea04ef87"
  FWPM_SUBLAYER_IPSEC_DOSP = "e076d572-5d3d-48ef-802b-909eddb098bd"
  FWPM_SUBLAYER_TCP_TEMPLATES = "24421dcf-0ac5-4caa-9e14-50f6e3636af0"
  FWPM_SUBLAYER_IPSEC_SECURITY_REALM = "37a57701-5884-4964-92b8-3e704688b0ad"
  FWPM_SUBLAYER_MPSSVC_WSH = "b3cdd441-af90-41ba-a745-7c6008ff2300"
  FWPM_SUBLAYER_MPSSVC_WF = "b3cdd441-af90-41ba-a745-7c6008ff2301"
  FWPM_SUBLAYER_MPSSVC_QUARANTINE = "b3cdd441-af90-41ba-a745-7c6008ff2302"
  FWPM_SUBLAYER_MPSSVC_EDP = "09a47e38-fa97-471b-b123-18bcd7e65071"
  FWPM_SUBLAYER_MPSSVC_TENANT_RESTRICTIONS = "1ec6c7e1-fdd9-478a-b55f-ff8ba1d2c17d"
  FWPM_CONDITION_INTERFACE_MAC_ADDRESS = "f6e63dce-1f4b-4c6b-b6ef-1165e71f8ee7"
  FWPM_CONDITION_MAC_LOCAL_ADDRESS = "d999e981-7948-4c83-b742-c84e3b678f8f"
  FWPM_CONDITION_MAC_REMOTE_ADDRESS = "408f2ed4-3a70-4b4d-92a6-415ac20e2f12"
  FWPM_CONDITION_ETHER_TYPE = "fd08948d-a219-4d52-bb98-1a5540ee7b4e"
  FWPM_CONDITION_VLAN_ID = "938eab21-3618-4e64-9ca5-2141ebda1ca2"
  FWPM_CONDITION_VSWITCH_TENANT_NETWORK_ID = "dc04843c-79e6-4e44-a025-65b9bb0f9f94"
  FWPM_CONDITION_NDIS_PORT = "db7bb42b-2dac-4cd4-a59a-e0bdce1e6834"
  FWPM_CONDITION_NDIS_MEDIA_TYPE = "cb31cef1-791d-473b-89d1-61c5984304a0"
  FWPM_CONDITION_NDIS_PHYSICAL_MEDIA_TYPE = "34c79823-c229-44f2-b83c-74020882ae77"
  FWPM_CONDITION_L2_FLAGS = "7bc43cbf-37ba-45f1-b74a-82ff518eeb10"
  FWPM_CONDITION_MAC_LOCAL_ADDRESS_TYPE = "cc31355c-3073-4ffb-a14f-79415cb1ead1"
  FWPM_CONDITION_MAC_REMOTE_ADDRESS_TYPE = "027fedb4-f1c1-4030-b564-ee777fd867ea"
  FWPM_CONDITION_ALE_PACKAGE_ID = "71bc78fa-f17c-4997-a602-6abb261f351c"
  FWPM_CONDITION_MAC_SOURCE_ADDRESS = "7b795451-f1f6-4d05-b7cb-21779d802336"
  FWPM_CONDITION_MAC_DESTINATION_ADDRESS = "04ea2a93-858c-4027-b613-b43180c7859e"
  FWPM_CONDITION_MAC_SOURCE_ADDRESS_TYPE = "5c1b72e4-299e-4437-a298-bc3f014b3dc2"
  FWPM_CONDITION_MAC_DESTINATION_ADDRESS_TYPE = "ae052932-ef42-4e99-b129-f3b3139e34f7"
  FWPM_CONDITION_IP_SOURCE_PORT = "a6afef91-3df4-4730-a214-f5426aebf821"
  FWPM_CONDITION_IP_DESTINATION_PORT = "ce6def45-60fb-4a7b-a304-af30a117000e"
  FWPM_CONDITION_VSWITCH_ID = "c4a414ba-437b-4de6-9946-d99c1b95b312"
  FWPM_CONDITION_VSWITCH_NETWORK_TYPE = "11d48b4b-e77a-40b4-9155-392c906c2608"
  FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_ID = "7f4ef24b-b2c1-4938-ba33-a1ecbed512ba"
  FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_ID = "8ed48be4-c926-49f6-a4f6-ef3030e3fc16"
  FWPM_CONDITION_VSWITCH_SOURCE_VM_ID = "9c2a9ec2-9fc6-42bc-bdd8-406d4da0be64"
  FWPM_CONDITION_VSWITCH_DESTINATION_VM_ID = "6106aace-4de1-4c84-9671-3637f8bcf731"
  FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_TYPE = "e6b040a2-edaf-4c36-908b-f2f58ae43807"
  FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_TYPE = "fa9b3f06-2f1a-4c57-9e68-a7098b28dbfe"
  FWPM_CONDITION_ALE_SECURITY_ATTRIBUTE_FQBN_VALUE = "37a57699-5883-4963-92b8-3e704688b0ad"
  FWPM_CONDITION_IPSEC_SECURITY_REALM_ID = "37a57700-5884-4964-92b8-3e704688b0ad"
  FWPM_CONDITION_ALE_EFFECTIVE_NAME = "b1277b9a-b781-40fc-9671-e5f1b989f34e"
  FWPM_CONDITION_IP_LOCAL_ADDRESS = "d9ee00de-c1ef-4617-bfe3-ffd8f5a08957"
  FWPM_CONDITION_IP_REMOTE_ADDRESS = "b235ae9a-1d64-49b8-a44c-5ff3d9095045"
  FWPM_CONDITION_IP_SOURCE_ADDRESS = "ae96897e-2e94-4bc9-b313-b27ee80e574d"
  FWPM_CONDITION_IP_DESTINATION_ADDRESS = "2d79133b-b390-45c6-8699-acaceaafed33"
  FWPM_CONDITION_IP_LOCAL_ADDRESS_TYPE = "6ec7f6c4-376b-45d7-9e9c-d337cedcd237"
  FWPM_CONDITION_IP_DESTINATION_ADDRESS_TYPE = "1ec1b7c9-4eea-4f5e-b9ef-76beaaaf17ee"
  FWPM_CONDITION_IP_NEXTHOP_ADDRESS = "eabe448a-a711-4d64-85b7-3f76b65299c7"
  FWPM_CONDITION_IP_LOCAL_INTERFACE = "4cd62a49-59c3-4969-b7f3-bda5d32890a4"
  FWPM_CONDITION_IP_ARRIVAL_INTERFACE = "618a9b6d-386b-4136-ad6e-b51587cfb1cd"
  FWPM_CONDITION_ARRIVAL_INTERFACE_TYPE = "89f990de-e798-4e6d-ab76-7c9558292e6f"
  FWPM_CONDITION_ARRIVAL_TUNNEL_TYPE = "511166dc-7a8c-4aa7-b533-95ab59fb0340"
  FWPM_CONDITION_ARRIVAL_INTERFACE_INDEX = "cc088db3-1792-4a71-b0f9-037d21cd828b"
  FWPM_CONDITION_NEXTHOP_SUB_INTERFACE_INDEX = "ef8a6122-0577-45a7-9aaf-825fbeb4fb95"
  FWPM_CONDITION_IP_NEXTHOP_INTERFACE = "93ae8f5b-7f6f-4719-98c8-14e97429ef04"
  FWPM_CONDITION_NEXTHOP_INTERFACE_TYPE = "97537c6c-d9a3-4767-a381-e942675cd920"
  FWPM_CONDITION_NEXTHOP_TUNNEL_TYPE = "72b1a111-987b-4720-99dd-c7c576fa2d4c"
  FWPM_CONDITION_NEXTHOP_INTERFACE_INDEX = "138e6888-7ab8-4d65-9ee8-0591bcf6a494"
  FWPM_CONDITION_ORIGINAL_PROFILE_ID = "46ea1551-2255-492b-8019-aabeee349f40"
  FWPM_CONDITION_CURRENT_PROFILE_ID = "ab3033c9-c0e3-4759-937d-5758c65d4ae3"
  FWPM_CONDITION_LOCAL_INTERFACE_PROFILE_ID = "4ebf7562-9f18-4d06-9941-a7a625744d71"
  FWPM_CONDITION_ARRIVAL_INTERFACE_PROFILE_ID = "cdfe6aab-c083-4142-8679-c08f95329c61"
  FWPM_CONDITION_NEXTHOP_INTERFACE_PROFILE_ID = "d7ff9a56-cdaa-472b-84db-d23963c1d1bf"
  FWPM_CONDITION_REAUTHORIZE_REASON = "11205e8c-11ae-457a-8a44-477026dd764a"
  FWPM_CONDITION_ORIGINAL_ICMP_TYPE = "076dfdbe-c56c-4f72-ae8a-2cfe7e5c8286"
  FWPM_CONDITION_IP_PHYSICAL_ARRIVAL_INTERFACE = "da50d5c8-fa0d-4c89-b032-6e62136d1e96"
  FWPM_CONDITION_IP_PHYSICAL_NEXTHOP_INTERFACE = "f09bd5ce-5150-48be-b098-c25152fb1f92"
  FWPM_CONDITION_INTERFACE_QUARANTINE_EPOCH = "cce68d5e-053b-43a8-9a6f-33384c28e4f6"
  FWPM_CONDITION_INTERFACE_TYPE = "daf8cd14-e09e-4c93-a5ae-c5c13b73ffca"
  FWPM_CONDITION_TUNNEL_TYPE = "77a40437-8779-4868-a261-f5a902f1c0cd"
  FWPM_CONDITION_IP_FORWARD_INTERFACE = "1076b8a5-6323-4c5e-9810-e8d3fc9e6136"
  FWPM_CONDITION_IP_PROTOCOL = "3971ef2b-623e-4f9a-8cb1-6e79b806b9a7"
  FWPM_CONDITION_IP_LOCAL_PORT = "0c1ba1af-5765-453f-af22-a8f791ac775b"
  FWPM_CONDITION_IP_REMOTE_PORT = "c35a604d-d22b-4e1a-91b4-68f674ee674b"
  FWPM_CONDITION_EMBEDDED_LOCAL_ADDRESS_TYPE = "4672a468-8a0a-4202-abb4-849e92e66809"
  FWPM_CONDITION_EMBEDDED_REMOTE_ADDRESS = "77ee4b39-3273-4671-b63b-ab6feb66eeb6"
  FWPM_CONDITION_EMBEDDED_PROTOCOL = "07784107-a29e-4c7b-9ec7-29c44afafdbc"
  FWPM_CONDITION_EMBEDDED_LOCAL_PORT = "bfca394d-acdb-484e-b8e6-2aff79757345"
  FWPM_CONDITION_EMBEDDED_REMOTE_PORT = "cae4d6a1-2968-40ed-a4ce-547160dda88d"
  FWPM_CONDITION_FLAGS = "632ce23b-5167-435c-86d7-e903684aa80c"
  FWPM_CONDITION_DIRECTION = "8784c146-ca97-44d6-9fd1-19fb1840cbf7"
  FWPM_CONDITION_INTERFACE_INDEX = "667fd755-d695-434a-8af5-d3835a1259bc"
  FWPM_CONDITION_SUB_INTERFACE_INDEX = "0cd42473-d621-4be3-ae8c-72a348d283e1"
  FWPM_CONDITION_SOURCE_INTERFACE_INDEX = "2311334d-c92d-45bf-9496-edf447820e2d"
  FWPM_CONDITION_SOURCE_SUB_INTERFACE_INDEX = "055edd9d-acd2-4361-8dab-f9525d97662f"
  FWPM_CONDITION_DESTINATION_INTERFACE_INDEX = "35cf6522-4139-45ee-a0d5-67b80949d879"
  FWPM_CONDITION_DESTINATION_SUB_INTERFACE_INDEX = "2b7d4399-d4c7-4738-a2f5-e994b43da388"
  FWPM_CONDITION_ALE_APP_ID = "d78e1e87-8644-4ea5-9437-d809ecefc971"
  FWPM_CONDITION_ALE_ORIGINAL_APP_ID = "0e6cd086-e1fb-4212-842f-8a9f993fb3f6"
  FWPM_CONDITION_ALE_USER_ID = "af043a0a-b34d-4f86-979c-c90371af6e66"
  FWPM_CONDITION_ALE_REMOTE_USER_ID = "f63073b7-0189-4ab0-95a4-6123cbfab862"
  FWPM_CONDITION_ALE_REMOTE_MACHINE_ID = "1aa47f51-7f93-4508-a271-81abb00c9cab"
  FWPM_CONDITION_ALE_PROMISCUOUS_MODE = "1c974776-7182-46e9-afd3-b02910e30334"
  FWPM_CONDITION_ALE_SIO_FIREWALL_SYSTEM_PORT = "b9f4e088-cb98-4efb-a2c7-ad07332643db"
  FWPM_CONDITION_ALE_REAUTH_REASON = "b482d227-1979-4a98-8044-18bbe6237542"
  FWPM_CONDITION_ALE_NAP_CONTEXT = "46275a9d-c03f-4d77-b784-1c57f4d02753"
  FWPM_CONDITION_KM_AUTH_NAP_CONTEXT = "35d0ea0e-15ca-492b-900e-97fd46352cce"
  FWPM_CONDITION_REMOTE_USER_TOKEN = "9bf0ee66-06c9-41b9-84da-288cb43af51f"
  FWPM_CONDITION_RPC_IF_UUID = "7c9c7d9f-0075-4d35-a0d1-8311c4cf6af1"
  FWPM_CONDITION_RPC_IF_VERSION = "eabfd9b7-1262-4a2e-adaa-5f96f6fe326d"
  FWPM_CONDITION_RPC_IF_FLAG = "238a8a32-3199-467d-871c-272621ab3896"
  FWPM_CONDITION_DCOM_APP_ID = "ff2e7b4d-3112-4770-b636-4d24ae3a6af2"
  FWPM_CONDITION_IMAGE_NAME = "d024de4d-deaa-4317-9c85-e40ef6e140c3"
  FWPM_CONDITION_RPC_PROTOCOL = "2717bc74-3a35-4ce7-b7ef-c838fabdec45"
  FWPM_CONDITION_RPC_AUTH_TYPE = "daba74ab-0d67-43e7-986e-75b84f82f594"
  FWPM_CONDITION_RPC_AUTH_LEVEL = "e5a0aed5-59ac-46ea-be05-a5f05ecf446e"
  FWPM_CONDITION_SEC_ENCRYPT_ALGORITHM = "0d306ef0-e974-4f74-b5c7-591b0da7d562"
  FWPM_CONDITION_SEC_KEY_SIZE = "4772183b-ccf8-4aeb-bce1-c6c6161c8fe4"
  FWPM_CONDITION_IP_LOCAL_ADDRESS_V4 = "03a629cb-6e52-49f8-9c41-5709633c09cf"
  FWPM_CONDITION_IP_LOCAL_ADDRESS_V6 = "2381be84-7524-45b3-a05b-1e637d9c7a6a"
  FWPM_CONDITION_PIPE = "1bd0741d-e3df-4e24-8634-762046eef6eb"
  FWPM_CONDITION_IP_REMOTE_ADDRESS_V4 = "1febb610-3bcc-45e1-bc36-2e067e2cb186"
  FWPM_CONDITION_IP_REMOTE_ADDRESS_V6 = "246e1d8c-8bee-4018-9b98-31d4582f3361"
  FWPM_CONDITION_PROCESS_WITH_RPC_IF_UUID = "e31180a8-bbbd-4d14-a65e-7157b06233bb"
  FWPM_CONDITION_RPC_EP_VALUE = "dccea0b9-0886-4360-9c6a-ab043a24fba9"
  FWPM_CONDITION_RPC_EP_FLAGS = "218b814a-0a39-49b8-8e71-c20c39c7dd2e"
  FWPM_CONDITION_CLIENT_TOKEN = "c228fc1e-403a-4478-be05-c9baa4c05ace"
  FWPM_CONDITION_RPC_SERVER_NAME = "b605a225-c3b3-48c7-9833-7aefa9527546"
  FWPM_CONDITION_RPC_SERVER_PORT = "8090f645-9ad5-4e3b-9f9f-8023ca097909"
  FWPM_CONDITION_RPC_PROXY_AUTH_TYPE = "40953fe2-8565-4759-8488-1771b4b4b5db"
  FWPM_CONDITION_CLIENT_CERT_KEY_LENGTH = "a3ec00c7-05f4-4df7-91f2-5f60d91ff443"
  FWPM_CONDITION_CLIENT_CERT_OID = "c491ad5e-f882-4283-b916-436b103ff4ad"
  FWPM_CONDITION_NET_EVENT_TYPE = "206e9996-490e-40cf-b831-b38641eb6fcb"
  FWPM_CONDITION_PEER_NAME = "9b539082-eb90-4186-a6cc-de5b63235016"
  FWPM_CONDITION_REMOTE_ID = "f68166fd-0682-4c89-b8f5-86436c7ef9b7"
  FWPM_CONDITION_AUTHENTICATION_TYPE = "eb458cd5-da7b-4ef9-8d43-7b0a840332f2"
  FWPM_CONDITION_KM_TYPE = "ff0f5f49-0ceb-481b-8638-1479791f3f2c"
  FWPM_CONDITION_KM_MODE = "feef4582-ef8f-4f7b-858b-9077d122de47"
  FWPM_CONDITION_IPSEC_POLICY_KEY = "ad37dee3-722f-45cc-a4e3-068048124452"
  FWPM_CONDITION_QM_MODE = "f64fc6d1-f9cb-43d2-8a5f-e13bc894f265"
  FWPM_CONDITION_COMPARTMENT_ID = "35a791ab-04ac-4ff2-a6bb-da6cfac71806"
  FWPM_CONDITION_RESERVED0 = "678f4deb-45af-4882-93fe-19d4729d9834"
  FWPM_CONDITION_RESERVED1 = "d818f827-5c69-48eb-bf80-d86b17755f97"
  FWPM_CONDITION_RESERVED2 = "53d4123d-e15b-4e84-b7a8-dce16f7b62d9"
  FWPM_CONDITION_RESERVED3 = "7f6e8ca3-6606-4932-97c7-e1f20710af3b"
  FWPM_CONDITION_RESERVED4 = "5f58e642-b937-495e-a94b-f6b051a49250"
  FWPM_CONDITION_RESERVED5 = "9ba8f6cd-f77c-43e6-8847-11939dc5db5a"
  FWPM_CONDITION_RESERVED6 = "f13d84bd-59d5-44c4-8817-5ecdae1805bd"
  FWPM_CONDITION_RESERVED7 = "65a0f930-45dd-4983-aa33-efc7b611af08"
  FWPM_CONDITION_RESERVED8 = "4f424974-0c12-4816-9b47-9a547db39a32"
  FWPM_CONDITION_RESERVED9 = "ce78e10f-13ff-4c70-8643-36ad1879afa3"
  FWPM_CONDITION_RESERVED10 = "b979e282-d621-4c8c-b184-b105a61c36ce"
  FWPM_CONDITION_RESERVED11 = "2d62ee4d-023d-411f-9582-43acbb795975"
  FWPM_CONDITION_RESERVED12 = "a3677c32-7e35-4ddc-93da-e8c33fc923c7"
  FWPM_CONDITION_RESERVED13 = "335a3e90-84aa-42f5-9e6f-59309536a44c"
  FWPM_CONDITION_RESERVED14 = "30e44da2-2f1a-4116-a559-f907de83604a"
  FWPM_CONDITION_RESERVED15 = "bab8340f-afe0-43d1-80d8-5ca456962de3"
  FWPM_PROVIDER_IKEEXT = "10ad9216-ccde-456c-8b16-e9f04e60a90b"
  FWPM_PROVIDER_IPSEC_DOSP_CONFIG = "3c6c05a9-c05c-4bb9-8338-2327814ce8bf"
  FWPM_PROVIDER_TCP_CHIMNEY_OFFLOAD = "896aa19e-9a34-4bcb-ae79-beb9127c84b9"
  FWPM_PROVIDER_TCP_TEMPLATES = "76cfcd30-3394-432d-bed3-441ae50e63c3"
  FWPM_PROVIDER_MPSSVC_WSH = "4b153735-1049-4480-aab4-d1b9bdc03710"
  FWPM_PROVIDER_MPSSVC_WF = "decc16ca-3f33-4346-be1e-8fb4ae0f3d62"
  FWPM_PROVIDER_MPSSVC_EDP = "a90296f7-46b8-4457-8f84-b05e05d3c622"
  FWPM_PROVIDER_MPSSVC_TENANT_RESTRICTIONS = "d0718ff9-44da-4f50-9dc2-c963a4247613"
  FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V4 = "5132900d-5e84-4b5f-80e4-01741e81ff10"
  FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V6 = "49d3ac92-2a6c-4dcf-955f-1c3be009dd99"
  FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V4 = "4b46bf0a-4523-4e57-aa38-a87987c910d9"
  FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V6 = "38d87722-ad83-4f11-a91f-df0fb077225b"
  FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V4 = "191a8a46-0bf8-46cf-b045-4b45dfa6a324"
  FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V6 = "80c342e3-1e53-4d6f-9b44-03df5aeee154"
  FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V4 = "70a4196c-835b-4fb0-98e8-075f4d977d46"
  FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V6 = "f1835363-a6a5-4e62-b180-23db789d8da6"
  FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V4 = "28829633-c4f0-4e66-873f-844db2a899c7"
  FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V6 = "af50bec2-c686-429a-884d-b74443e7b0b4"
  FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V4 = "fb532136-15cb-440b-937c-1717ca320c40"
  FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V6 = "dae640cc-e021-4bee-9eb6-a48b275c8c1d"
  FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V4 = "7dff309b-ba7d-4aba-91aa-ae5c6640c944"
  FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V6 = "a9a0d6d9-c58c-474e-8aeb-3cfe99d6d53d"
  FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V4 = "3df6e7de-fd20-48f2-9f26-f854444cba79"
  FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V6 = "a1e392d3-72ac-47bb-87a7-0122c69434ab"
  FWPM_CALLOUT_IPSEC_ALE_CONNECT_V4 = "6ac141fc-f75d-4203-b9c8-48e6149c2712"
  FWPM_CALLOUT_IPSEC_ALE_CONNECT_V6 = "4c0dda05-e31f-4666-90b0-b3dfad34129a"
  FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V6 = "6d08a342-db9e-4fbe-9ed2-57374ce89f79"
  FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V4 = "2fcb56ec-cd37-4b4f-b108-62c2b1850a0c"
  FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V4_SILENT_DROP = "eda08606-2494-4d78-89bc-67837c03b969"
  FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V6_SILENT_DROP = "8693cc74-a075-4156-b476-9286eece814e"
  FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V4 = "f3e10ab3-2c25-4279-ac36-c30fc181bec4"
  FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V6 = "39e22085-a341-42fc-a279-aec94e689c56"
  FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V4 = "e183ecb2-3a7f-4b54-8ad9-76050ed880ca"
  FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V6 = "0378cf41-bf98-4603-81f2-7f12586079f6"
  FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V4 = "bc582280-1677-41e9-94ab-c2fcb15c2eeb"
  FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V6 = "98e5373c-b884-490f-b65f-2f6a4a575195"
  FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V4 = "2d55f008-0c01-4f92-b26e-a08a94569b8d"
  FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V6 = "63018537-f281-4dc4-83d3-8dec18b7ade2"
  FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V4 = "288b524d-0566-4e19-b612-8f441a2e5949"
  FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V6 = "00b84b92-2b5e-4b71-ab0e-aaca43e387e6"
  FWPM_CALLOUT_TEREDO_ALE_RESOURCE_ASSIGNMENT_V6 = "31b95392-066e-42a2-b7db-92f8acdd56f9"
  FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_RESOURCE_ASSIGNMENT_V4 = "079b1010-f1c5-4fcd-ae05-da41107abd0b"
  FWPM_CALLOUT_TEREDO_ALE_LISTEN_V6 = "81a434e7-f60c-4378-bab8-c625a30f0197"
  FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_LISTEN_V4 = "33486ab5-6d5e-4e65-a00b-a7afed0ba9a1"
  FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V4 = "215a0b39-4b7e-4eda-8ce4-179679df6224"
  FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V6 = "838b37a1-5c12-4d34-8b38-078728b2d25c"
  FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V4 = "2f23f5d0-40c4-4c41-a254-46d8dba8957c"
  FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V6 = "b25152f0-991c-4f53-bbe7-d24b45fe632c"
  FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V4 = "5fbfc31d-a51c-44dc-acb6-0624a030a700"
  FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V6 = "5fbfc31d-a51c-44dc-acb6-0624a030a701"
  FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V4 = "5fbfc31d-a51c-44dc-acb6-0624a030a702"
  FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V6 = "5fbfc31d-a51c-44dc-acb6-0624a030a703"
  FWPM_CALLOUT_HTTP_TEMPLATE_SSL_HANDSHAKE = "b3423249-8d09-4858-9210-95c7fda8e30f"
  FWPM_CALLOUT_BUILT_IN_RESERVED_1 = "779719a4-e695-47b6-a199-7999fec9163b"
  FWPM_CALLOUT_BUILT_IN_RESERVED_2 = "ef9661b6-7c5e-48fd-a130-96678ceacc41"
  FWPM_CALLOUT_BUILT_IN_RESERVED_3 = "18729c7a-2f62-4be0-966f-974b21b86df1"
  FWPM_CALLOUT_BUILT_IN_RESERVED_4 = "6c3fb801-daff-40e9-91e6-f7ff7e52f7d9"
  FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_AUTHIP = "b25ea800-0d02-46ed-92bd-7fa84bb73e9d"
  FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_IPSEC = "8c2d4144-f8e0-42c0-94ce-7ccfc63b2f9b"
  FWPM_KEYING_MODULE_IKE = "a9bbf787-82a8-45bb-a400-5d7e5952c7a9"
  FWPM_KEYING_MODULE_AUTHIP = "11e3dae0-dd26-4590-857d-ab4b28d1a095"
  FWPM_KEYING_MODULE_IKEV2 = "041792cc-8f07-419d-a394-716968cb1647"
  FWPM_AUTO_WEIGHT_BITS = 60_u32
  FWPM_WEIGHT_RANGE_IPSEC = 0_u32
  FWPM_WEIGHT_RANGE_IKE_EXEMPTIONS = 12_u32
  FWPM_ACTRL_ADD = 1_u32
  FWPM_ACTRL_ADD_LINK = 2_u32
  FWPM_ACTRL_BEGIN_READ_TXN = 4_u32
  FWPM_ACTRL_BEGIN_WRITE_TXN = 8_u32
  FWPM_ACTRL_CLASSIFY = 16_u32
  FWPM_ACTRL_ENUM = 32_u32
  FWPM_ACTRL_OPEN = 64_u32
  FWPM_ACTRL_READ = 128_u32
  FWPM_ACTRL_READ_STATS = 256_u32
  FWPM_ACTRL_SUBSCRIBE = 512_u32
  FWPM_ACTRL_WRITE = 1024_u32
  FWPM_TXN_READ_ONLY = 1_u32
  FWPM_TUNNEL_FLAG_POINT_TO_POINT = 1_u32
  FWPM_TUNNEL_FLAG_ENABLE_VIRTUAL_IF_TUNNELING = 2_u32
  FWPM_TUNNEL_FLAG_RESERVED0 = 4_u32
  FWPS_METADATA_FIELD_DISCARD_REASON = 1_u32
  FWPS_METADATA_FIELD_FLOW_HANDLE = 2_u32
  FWPS_METADATA_FIELD_IP_HEADER_SIZE = 4_u32
  FWPS_METADATA_FIELD_PROCESS_PATH = 8_u32
  FWPS_METADATA_FIELD_TOKEN = 16_u32
  FWPS_METADATA_FIELD_PROCESS_ID = 32_u32
  FWPS_METADATA_FIELD_SYSTEM_FLAGS = 64_u32
  FWPS_METADATA_FIELD_RESERVED = 128_u32
  FWPS_METADATA_FIELD_SOURCE_INTERFACE_INDEX = 256_u32
  FWPS_METADATA_FIELD_DESTINATION_INTERFACE_INDEX = 512_u32
  FWPS_METADATA_FIELD_TRANSPORT_HEADER_SIZE = 1024_u32
  FWPS_METADATA_FIELD_COMPARTMENT_ID = 2048_u32
  FWPS_METADATA_FIELD_FRAGMENT_DATA = 4096_u32
  FWPS_METADATA_FIELD_PATH_MTU = 8192_u32
  FWPS_METADATA_FIELD_COMPLETION_HANDLE = 16384_u32
  FWPS_METADATA_FIELD_TRANSPORT_ENDPOINT_HANDLE = 32768_u32
  FWPS_METADATA_FIELD_TRANSPORT_CONTROL_DATA = 65536_u32
  FWPS_METADATA_FIELD_REMOTE_SCOPE_ID = 131072_u32
  FWPS_METADATA_FIELD_PACKET_DIRECTION = 262144_u32
  FWPS_METADATA_FIELD_PACKET_SYSTEM_CRITICAL = 524288_u32
  FWPS_METADATA_FIELD_FORWARD_LAYER_OUTBOUND_PASS_THRU = 1048576_u32
  FWPS_METADATA_FIELD_FORWARD_LAYER_INBOUND_PASS_THRU = 2097152_u32
  FWPS_METADATA_FIELD_ALE_CLASSIFY_REQUIRED = 4194304_u32
  FWPS_METADATA_FIELD_TRANSPORT_HEADER_INCLUDE_HEADER = 8388608_u32
  FWPS_METADATA_FIELD_DESTINATION_PREFIX = 16777216_u32
  FWPS_METADATA_FIELD_ETHER_FRAME_LENGTH = 33554432_u32
  FWPS_METADATA_FIELD_PARENT_ENDPOINT_HANDLE = 67108864_u32
  FWPS_METADATA_FIELD_ICMP_ID_AND_SEQUENCE = 134217728_u32
  FWPS_METADATA_FIELD_LOCAL_REDIRECT_TARGET_PID = 268435456_u32
  FWPS_METADATA_FIELD_ORIGINAL_DESTINATION = 536870912_u32
  FWPS_METADATA_FIELD_REDIRECT_RECORD_HANDLE = 1073741824_u32
  FWPS_METADATA_FIELD_SUB_PROCESS_TAG = 2147483648_u32
  FWPS_L2_METADATA_FIELD_ETHERNET_MAC_HEADER_SIZE = 1_u32
  FWPS_L2_METADATA_FIELD_WIFI_OPERATION_MODE = 2_u32
  FWPS_L2_METADATA_FIELD_VSWITCH_SOURCE_PORT_ID = 4_u32
  FWPS_L2_METADATA_FIELD_VSWITCH_SOURCE_NIC_INDEX = 8_u32
  FWPS_L2_METADATA_FIELD_VSWITCH_PACKET_CONTEXT = 16_u32
  FWPS_L2_METADATA_FIELD_VSWITCH_DESTINATION_PORT_ID = 32_u32
  FWPS_L2_METADATA_FIELD_RESERVED = 2147483648_u32

  alias FWPM_PROVIDER_CHANGE_CALLBACK0 = Proc(Void*, FWPM_PROVIDER_CHANGE0*, Void)
  alias FWPM_PROVIDER_CONTEXT_CHANGE_CALLBACK0 = Proc(Void*, FWPM_PROVIDER_CONTEXT_CHANGE0*, Void)
  alias FWPM_SUBLAYER_CHANGE_CALLBACK0 = Proc(Void*, FWPM_SUBLAYER_CHANGE0*, Void)
  alias FWPM_CALLOUT_CHANGE_CALLBACK0 = Proc(Void*, FWPM_CALLOUT_CHANGE0*, Void)
  alias FWPM_FILTER_CHANGE_CALLBACK0 = Proc(Void*, FWPM_FILTER_CHANGE0*, Void)
  alias IPSEC_SA_CONTEXT_CALLBACK0 = Proc(Void*, IPSEC_SA_CONTEXT_CHANGE0*, Void)
  alias IPSEC_KEY_MANAGER_KEY_DICTATION_CHECK0 = Proc(IKEEXT_TRAFFIC0*, LibC::BOOL*, UInt32*, Void)
  alias IPSEC_KEY_MANAGER_DICTATE_KEY0 = Proc(IPSEC_SA_DETAILS1*, IPSEC_SA_DETAILS1*, LibC::BOOL*, UInt32)
  alias IPSEC_KEY_MANAGER_NOTIFY_KEY0 = Proc(IPSEC_SA_DETAILS1*, IPSEC_SA_DETAILS1*, Void)
  alias FWPM_NET_EVENT_CALLBACK0 = Proc(Void*, FWPM_NET_EVENT1*, Void)
  alias FWPM_NET_EVENT_CALLBACK1 = Proc(Void*, FWPM_NET_EVENT2*, Void)
  alias FWPM_NET_EVENT_CALLBACK2 = Proc(Void*, FWPM_NET_EVENT3*, Void)
  alias FWPM_NET_EVENT_CALLBACK3 = Proc(Void*, FWPM_NET_EVENT4_*, Void)
  alias FWPM_NET_EVENT_CALLBACK4 = Proc(Void*, FWPM_NET_EVENT5_*, Void)
  alias FWPM_DYNAMIC_KEYWORD_CALLBACK0 = Proc(Void*, Void*, Void)
  alias FWPM_SYSTEM_PORTS_CALLBACK0 = Proc(Void*, FWPM_SYSTEM_PORTS0*, Void)
  alias FWPM_CONNECTION_CALLBACK0 = Proc(Void*, FWPM_CONNECTION_EVENT_TYPE, FWPM_CONNECTION0*, Void)
  alias FWPM_VSWITCH_EVENT_CALLBACK0 = Proc(Void*, FWPM_VSWITCH_EVENT0*, UInt32)


  enum IPSEC_SA_BUNDLE_FLAGS : UInt32
    IPSEC_SA_BUNDLE_FLAG_ND_SECURE = 1
    IPSEC_SA_BUNDLE_FLAG_ND_BOUNDARY = 2
    IPSEC_SA_BUNDLE_FLAG_ND_PEER_NAT_BOUNDARY = 4
    IPSEC_SA_BUNDLE_FLAG_GUARANTEE_ENCRYPTION = 8
    IPSEC_SA_BUNDLE_FLAG_ALLOW_NULL_TARGET_NAME_MATCH = 512
    IPSEC_SA_BUNDLE_FLAG_CLEAR_DF_ON_TUNNEL = 1024
    IPSEC_SA_BUNDLE_FLAG_ASSUME_UDP_CONTEXT_OUTBOUND = 2048
    IPSEC_SA_BUNDLE_FLAG_ND_PEER_BOUNDARY = 4096
    IPSEC_SA_BUNDLE_FLAG_SUPPRESS_DUPLICATE_DELETION = 8192
    IPSEC_SA_BUNDLE_FLAG_PEER_SUPPORTS_GUARANTEE_ENCRYPTION = 16384
  end

  enum IPSEC_POLICY_FLAG : UInt32
    IPSEC_POLICY_FLAG_ND_SECURE = 2
    IPSEC_POLICY_FLAG_ND_BOUNDARY = 4
    IPSEC_POLICY_FLAG_NAT_ENCAP_ALLOW_PEER_BEHIND_NAT = 16
    IPSEC_POLICY_FLAG_NAT_ENCAP_ALLOW_GENERAL_NAT_TRAVERSAL = 32
    IPSEC_POLICY_FLAG_DONT_NEGOTIATE_SECOND_LIFETIME = 64
    IPSEC_POLICY_FLAG_DONT_NEGOTIATE_BYTE_LIFETIME = 128
    IPSEC_POLICY_FLAG_CLEAR_DF_ON_TUNNEL = 8
    IPSEC_POLICY_FLAG_ENABLE_V6_IN_V4_TUNNELING = 256
    IPSEC_POLICY_FLAG_ENABLE_SERVER_ADDR_ASSIGNMENT = 512
    IPSEC_POLICY_FLAG_TUNNEL_ALLOW_OUTBOUND_CLEAR_CONNECTION = 1024
    IPSEC_POLICY_FLAG_TUNNEL_BYPASS_ALREADY_SECURE_CONNECTION = 2048
    IPSEC_POLICY_FLAG_TUNNEL_BYPASS_ICMPV6 = 4096
    IPSEC_POLICY_FLAG_KEY_MANAGER_ALLOW_DICTATE_KEY = 8192
  end

  enum IKEEXT_CERT_AUTH : UInt32
    IKEEXT_CERT_AUTH_FLAG_SSL_ONE_WAY = 1
    IKEEXT_CERT_AUTH_ENABLE_CRL_CHECK_STRONG = 4
    IKEEXT_CERT_AUTH_DISABLE_SSL_CERT_VALIDATION = 8
    IKEEXT_CERT_AUTH_ALLOW_HTTP_CERT_LOOKUP = 16
    IKEEXT_CERT_AUTH_URL_CONTAINS_BUNDLE = 32
  end

  enum IKEEXT_PRESHARED_KEY_AUTHENTICATION_FLAGS : UInt32
    IKEEXT_PSK_FLAG_LOCAL_AUTH_ONLY = 1
    IKEEXT_PSK_FLAG_REMOTE_AUTH_ONLY = 2
  end

  enum IKEEXT_POLICY_FLAG : UInt32
    IKEEXT_POLICY_FLAG_DISABLE_DIAGNOSTICS = 1
    IKEEXT_POLICY_FLAG_NO_MACHINE_LUID_VERIFY = 2
    IKEEXT_POLICY_FLAG_NO_IMPERSONATION_LUID_VERIFY = 4
    IKEEXT_POLICY_FLAG_ENABLE_OPTIONAL_DH = 8
  end

  enum FWPM_SUBSCRIPTION_FLAGS : UInt32
    FWPM_SUBSCRIPTION_FLAG_NOTIFY_ON_ADD = 1
    FWPM_SUBSCRIPTION_FLAG_NOTIFY_ON_DELETE = 2
  end

  enum IKEEXT_CERT_FLAGS : UInt32
    IKEEXT_CERT_FLAG_ENABLE_ACCOUNT_MAPPING = 1
    IKEEXT_CERT_FLAG_DISABLE_REQUEST_PAYLOAD = 2
    IKEEXT_CERT_FLAG_USE_NAP_CERTIFICATE = 4
    IKEEXT_CERT_FLAG_INTERMEDIATE_CA = 8
    IKEEXT_CERT_FLAG_IGNORE_INIT_CERT_MAP_FAILURE = 16
    IKEEXT_CERT_FLAG_PREFER_NAP_CERTIFICATE_OUTBOUND = 32
    IKEEXT_CERT_FLAG_SELECT_NAP_CERTIFICATE = 64
    IKEEXT_CERT_FLAG_VERIFY_NAP_CERTIFICATE = 128
    IKEEXT_CERT_FLAG_FOLLOW_RENEWAL_CERTIFICATE = 256
  end

  enum IPSEC_DOSP_FLAGS : UInt32
    IPSEC_DOSP_FLAG_ENABLE_IKEV1 = 1
    IPSEC_DOSP_FLAG_ENABLE_IKEV2 = 2
    IPSEC_DOSP_FLAG_DISABLE_AUTHIP = 4
    IPSEC_DOSP_FLAG_DISABLE_DEFAULT_BLOCK = 8
    IPSEC_DOSP_FLAG_FILTER_BLOCK = 16
    IPSEC_DOSP_FLAG_FILTER_EXEMPT = 32
  end

  enum IKEEXT_KERBEROS_AUTHENTICATION_FLAGS : UInt32
    IKEEXT_KERB_AUTH_DISABLE_INITIATOR_TOKEN_GENERATION = 1
    IKEEXT_KERB_AUTH_DONT_ACCEPT_EXPLICIT_CREDENTIALS = 2
  end

  enum IKEEXT_RESERVED_AUTHENTICATION_FLAGS : UInt32
    IKEEXT_RESERVED_AUTH_DISABLE_INITIATOR_TOKEN_GENERATION = 1
  end

  enum IKEEXT_EAP_AUTHENTICATION_FLAGS : UInt32
    IKEEXT_EAP_FLAG_LOCAL_AUTH_ONLY = 1
    IKEEXT_EAP_FLAG_REMOTE_AUTH_ONLY = 2
  end

  enum FWPM_FILTER_FLAGS : UInt32
    FWPM_FILTER_FLAG_NONE = 0
    FWPM_FILTER_FLAG_PERSISTENT = 1
    FWPM_FILTER_FLAG_BOOTTIME = 2
    FWPM_FILTER_FLAG_HAS_PROVIDER_CONTEXT = 4
    FWPM_FILTER_FLAG_CLEAR_ACTION_RIGHT = 8
    FWPM_FILTER_FLAG_PERMIT_IF_CALLOUT_UNREGISTERED = 16
    FWPM_FILTER_FLAG_DISABLED = 32
    FWPM_FILTER_FLAG_INDEXED = 64
  end

  enum FWP_DIRECTION : Int32
    FWP_DIRECTION_OUTBOUND = 0
    FWP_DIRECTION_INBOUND = 1
    FWP_DIRECTION_MAX = 2
  end

  enum FWP_IP_VERSION : Int32
    FWP_IP_VERSION_V4 = 0
    FWP_IP_VERSION_V6 = 1
    FWP_IP_VERSION_NONE = 2
    FWP_IP_VERSION_MAX = 3
  end

  enum FWP_AF : Int32
    FWP_AF_INET = 0
    FWP_AF_INET6 = 1
    FWP_AF_ETHER = 2
    FWP_AF_NONE = 3
  end

  enum FWP_ETHER_ENCAP_METHOD : Int32
    FWP_ETHER_ENCAP_METHOD_ETHER_V2 = 0
    FWP_ETHER_ENCAP_METHOD_SNAP = 1
    FWP_ETHER_ENCAP_METHOD_SNAP_W_OUI_ZERO = 3
  end

  enum FWP_DATA_TYPE : Int32
    FWP_EMPTY = 0
    FWP_UINT8 = 1
    FWP_UINT16 = 2
    FWP_UINT32 = 3
    FWP_UINT64 = 4
    FWP_INT8 = 5
    FWP_INT16 = 6
    FWP_INT32 = 7
    FWP_INT64 = 8
    FWP_FLOAT = 9
    FWP_DOUBLE = 10
    FWP_BYTE_ARRAY16_TYPE = 11
    FWP_BYTE_BLOB_TYPE = 12
    FWP_SID = 13
    FWP_SECURITY_DESCRIPTOR_TYPE = 14
    FWP_TOKEN_INFORMATION_TYPE = 15
    FWP_TOKEN_ACCESS_INFORMATION_TYPE = 16
    FWP_UNICODE_STRING_TYPE = 17
    FWP_BYTE_ARRAY6_TYPE = 18
    FWP_SINGLE_DATA_TYPE_MAX = 255
    FWP_V4_ADDR_MASK = 256
    FWP_V6_ADDR_MASK = 257
    FWP_RANGE_TYPE = 258
    FWP_DATA_TYPE_MAX = 259
  end

  enum FWP_MATCH_TYPE : Int32
    FWP_MATCH_EQUAL = 0
    FWP_MATCH_GREATER = 1
    FWP_MATCH_LESS = 2
    FWP_MATCH_GREATER_OR_EQUAL = 3
    FWP_MATCH_LESS_OR_EQUAL = 4
    FWP_MATCH_RANGE = 5
    FWP_MATCH_FLAGS_ALL_SET = 6
    FWP_MATCH_FLAGS_ANY_SET = 7
    FWP_MATCH_FLAGS_NONE_SET = 8
    FWP_MATCH_EQUAL_CASE_INSENSITIVE = 9
    FWP_MATCH_NOT_EQUAL = 10
    FWP_MATCH_PREFIX = 11
    FWP_MATCH_NOT_PREFIX = 12
    FWP_MATCH_TYPE_MAX = 13
  end

  enum FWP_CLASSIFY_OPTION_TYPE : Int32
    FWP_CLASSIFY_OPTION_MULTICAST_STATE = 0
    FWP_CLASSIFY_OPTION_LOOSE_SOURCE_MAPPING = 1
    FWP_CLASSIFY_OPTION_UNICAST_LIFETIME = 2
    FWP_CLASSIFY_OPTION_MCAST_BCAST_LIFETIME = 3
    FWP_CLASSIFY_OPTION_SECURE_SOCKET_SECURITY_FLAGS = 4
    FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_MM_POLICY_KEY = 5
    FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_QM_POLICY_KEY = 6
    FWP_CLASSIFY_OPTION_LOCAL_ONLY_MAPPING = 7
    FWP_CLASSIFY_OPTION_MAX = 8
  end

  enum FWP_VSWITCH_NETWORK_TYPE : Int32
    FWP_VSWITCH_NETWORK_TYPE_UNKNOWN = 0
    FWP_VSWITCH_NETWORK_TYPE_PRIVATE = 1
    FWP_VSWITCH_NETWORK_TYPE_INTERNAL = 2
    FWP_VSWITCH_NETWORK_TYPE_EXTERNAL = 3
  end

  enum FWP_FILTER_ENUM_TYPE : Int32
    FWP_FILTER_ENUM_FULLY_CONTAINED = 0
    FWP_FILTER_ENUM_OVERLAPPING = 1
    FWP_FILTER_ENUM_TYPE_MAX = 2
  end

  enum IKEEXT_KEY_MODULE_TYPE : Int32
    IKEEXT_KEY_MODULE_IKE = 0
    IKEEXT_KEY_MODULE_AUTHIP = 1
    IKEEXT_KEY_MODULE_IKEV2 = 2
    IKEEXT_KEY_MODULE_MAX = 3
  end

  enum IKEEXT_AUTHENTICATION_METHOD_TYPE : Int32
    IKEEXT_PRESHARED_KEY = 0
    IKEEXT_CERTIFICATE = 1
    IKEEXT_KERBEROS = 2
    IKEEXT_ANONYMOUS = 3
    IKEEXT_SSL = 4
    IKEEXT_NTLM_V2 = 5
    IKEEXT_IPV6_CGA = 6
    IKEEXT_CERTIFICATE_ECDSA_P256 = 7
    IKEEXT_CERTIFICATE_ECDSA_P384 = 8
    IKEEXT_SSL_ECDSA_P256 = 9
    IKEEXT_SSL_ECDSA_P384 = 10
    IKEEXT_EAP = 11
    IKEEXT_RESERVED = 12
    IKEEXT_AUTHENTICATION_METHOD_TYPE_MAX = 13
  end

  enum IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE : Int32
    IKEEXT_IMPERSONATION_NONE = 0
    IKEEXT_IMPERSONATION_SOCKET_PRINCIPAL = 1
    IKEEXT_IMPERSONATION_MAX = 2
  end

  enum IKEEXT_CERT_CONFIG_TYPE : Int32
    IKEEXT_CERT_CONFIG_EXPLICIT_TRUST_LIST = 0
    IKEEXT_CERT_CONFIG_ENTERPRISE_STORE = 1
    IKEEXT_CERT_CONFIG_TRUSTED_ROOT_STORE = 2
    IKEEXT_CERT_CONFIG_UNSPECIFIED = 3
    IKEEXT_CERT_CONFIG_TYPE_MAX = 4
  end

  enum IKEEXT_CERT_CRITERIA_NAME_TYPE : Int32
    IKEEXT_CERT_CRITERIA_DNS = 0
    IKEEXT_CERT_CRITERIA_UPN = 1
    IKEEXT_CERT_CRITERIA_RFC822 = 2
    IKEEXT_CERT_CRITERIA_CN = 3
    IKEEXT_CERT_CRITERIA_OU = 4
    IKEEXT_CERT_CRITERIA_O = 5
    IKEEXT_CERT_CRITERIA_DC = 6
    IKEEXT_CERT_CRITERIA_NAME_TYPE_MAX = 7
  end

  enum IKEEXT_CIPHER_TYPE : Int32
    IKEEXT_CIPHER_DES = 0
    IKEEXT_CIPHER_3DES = 1
    IKEEXT_CIPHER_AES_128 = 2
    IKEEXT_CIPHER_AES_192 = 3
    IKEEXT_CIPHER_AES_256 = 4
    IKEEXT_CIPHER_AES_GCM_128_16ICV = 5
    IKEEXT_CIPHER_AES_GCM_256_16ICV = 6
    IKEEXT_CIPHER_TYPE_MAX = 7
  end

  enum IKEEXT_INTEGRITY_TYPE : Int32
    IKEEXT_INTEGRITY_MD5 = 0
    IKEEXT_INTEGRITY_SHA1 = 1
    IKEEXT_INTEGRITY_SHA_256 = 2
    IKEEXT_INTEGRITY_SHA_384 = 3
    IKEEXT_INTEGRITY_TYPE_MAX = 4
  end

  enum IKEEXT_DH_GROUP : Int32
    IKEEXT_DH_GROUP_NONE = 0
    IKEEXT_DH_GROUP_1 = 1
    IKEEXT_DH_GROUP_2 = 2
    IKEEXT_DH_GROUP_14 = 3
    IKEEXT_DH_GROUP_2048 = 3
    IKEEXT_DH_ECP_256 = 4
    IKEEXT_DH_ECP_384 = 5
    IKEEXT_DH_GROUP_24 = 6
    IKEEXT_DH_GROUP_MAX = 7
  end

  enum IKEEXT_MM_SA_STATE : Int32
    IKEEXT_MM_SA_STATE_NONE = 0
    IKEEXT_MM_SA_STATE_SA_SENT = 1
    IKEEXT_MM_SA_STATE_SSPI_SENT = 2
    IKEEXT_MM_SA_STATE_FINAL = 3
    IKEEXT_MM_SA_STATE_FINAL_SENT = 4
    IKEEXT_MM_SA_STATE_COMPLETE = 5
    IKEEXT_MM_SA_STATE_MAX = 6
  end

  enum IKEEXT_QM_SA_STATE : Int32
    IKEEXT_QM_SA_STATE_NONE = 0
    IKEEXT_QM_SA_STATE_INITIAL = 1
    IKEEXT_QM_SA_STATE_FINAL = 2
    IKEEXT_QM_SA_STATE_COMPLETE = 3
    IKEEXT_QM_SA_STATE_MAX = 4
  end

  enum IKEEXT_EM_SA_STATE : Int32
    IKEEXT_EM_SA_STATE_NONE = 0
    IKEEXT_EM_SA_STATE_SENT_ATTS = 1
    IKEEXT_EM_SA_STATE_SSPI_SENT = 2
    IKEEXT_EM_SA_STATE_AUTH_COMPLETE = 3
    IKEEXT_EM_SA_STATE_FINAL = 4
    IKEEXT_EM_SA_STATE_COMPLETE = 5
    IKEEXT_EM_SA_STATE_MAX = 6
  end

  enum IKEEXT_SA_ROLE : Int32
    IKEEXT_SA_ROLE_INITIATOR = 0
    IKEEXT_SA_ROLE_RESPONDER = 1
    IKEEXT_SA_ROLE_MAX = 2
  end

  enum IPSEC_TRANSFORM_TYPE : Int32
    IPSEC_TRANSFORM_AH = 1
    IPSEC_TRANSFORM_ESP_AUTH = 2
    IPSEC_TRANSFORM_ESP_CIPHER = 3
    IPSEC_TRANSFORM_ESP_AUTH_AND_CIPHER = 4
    IPSEC_TRANSFORM_ESP_AUTH_FW = 5
    IPSEC_TRANSFORM_TYPE_MAX = 6
  end

  enum IPSEC_AUTH_TYPE : Int32
    IPSEC_AUTH_MD5 = 0
    IPSEC_AUTH_SHA_1 = 1
    IPSEC_AUTH_SHA_256 = 2
    IPSEC_AUTH_AES_128 = 3
    IPSEC_AUTH_AES_192 = 4
    IPSEC_AUTH_AES_256 = 5
    IPSEC_AUTH_MAX = 6
  end

  enum IPSEC_CIPHER_TYPE : Int32
    IPSEC_CIPHER_TYPE_DES = 1
    IPSEC_CIPHER_TYPE_3DES = 2
    IPSEC_CIPHER_TYPE_AES_128 = 3
    IPSEC_CIPHER_TYPE_AES_192 = 4
    IPSEC_CIPHER_TYPE_AES_256 = 5
    IPSEC_CIPHER_TYPE_MAX = 6
  end

  enum IPSEC_PFS_GROUP : Int32
    IPSEC_PFS_NONE = 0
    IPSEC_PFS_1 = 1
    IPSEC_PFS_2 = 2
    IPSEC_PFS_2048 = 3
    IPSEC_PFS_14 = 3
    IPSEC_PFS_ECP_256 = 4
    IPSEC_PFS_ECP_384 = 5
    IPSEC_PFS_MM = 6
    IPSEC_PFS_24 = 7
    IPSEC_PFS_MAX = 8
  end

  enum IPSEC_TOKEN_TYPE : Int32
    IPSEC_TOKEN_TYPE_MACHINE = 0
    IPSEC_TOKEN_TYPE_IMPERSONATION = 1
    IPSEC_TOKEN_TYPE_MAX = 2
  end

  enum IPSEC_TOKEN_PRINCIPAL : Int32
    IPSEC_TOKEN_PRINCIPAL_LOCAL = 0
    IPSEC_TOKEN_PRINCIPAL_PEER = 1
    IPSEC_TOKEN_PRINCIPAL_MAX = 2
  end

  enum IPSEC_TOKEN_MODE : Int32
    IPSEC_TOKEN_MODE_MAIN = 0
    IPSEC_TOKEN_MODE_EXTENDED = 1
    IPSEC_TOKEN_MODE_MAX = 2
  end

  enum IPSEC_TRAFFIC_TYPE : Int32
    IPSEC_TRAFFIC_TYPE_TRANSPORT = 0
    IPSEC_TRAFFIC_TYPE_TUNNEL = 1
    IPSEC_TRAFFIC_TYPE_MAX = 2
  end

  enum IPSEC_SA_CONTEXT_EVENT_TYPE0 : Int32
    IPSEC_SA_CONTEXT_EVENT_ADD = 1
    IPSEC_SA_CONTEXT_EVENT_DELETE = 2
    IPSEC_SA_CONTEXT_EVENT_MAX = 3
  end

  enum IPSEC_FAILURE_POINT : Int32
    IPSEC_FAILURE_NONE = 0
    IPSEC_FAILURE_ME = 1
    IPSEC_FAILURE_PEER = 2
    IPSEC_FAILURE_POINT_MAX = 3
  end

  enum DL_ADDRESS_TYPE : Int32
    DlUnicast = 0
    DlMulticast = 1
    DlBroadcast = 2
  end

  enum FWPM_CHANGE_TYPE : Int32
    FWPM_CHANGE_ADD = 1
    FWPM_CHANGE_DELETE = 2
    FWPM_CHANGE_TYPE_MAX = 3
  end

  enum FWPM_SERVICE_STATE : Int32
    FWPM_SERVICE_STOPPED = 0
    FWPM_SERVICE_START_PENDING = 1
    FWPM_SERVICE_STOP_PENDING = 2
    FWPM_SERVICE_RUNNING = 3
    FWPM_SERVICE_STATE_MAX = 4
  end

  enum FWPM_ENGINE_OPTION : Int32
    FWPM_ENGINE_COLLECT_NET_EVENTS = 0
    FWPM_ENGINE_NET_EVENT_MATCH_ANY_KEYWORDS = 1
    FWPM_ENGINE_NAME_CACHE = 2
    FWPM_ENGINE_MONITOR_IPSEC_CONNECTIONS = 3
    FWPM_ENGINE_PACKET_QUEUING = 4
    FWPM_ENGINE_TXN_WATCHDOG_TIMEOUT_IN_MSEC = 5
    FWPM_ENGINE_OPTION_MAX = 6
  end

  enum FWPM_PROVIDER_CONTEXT_TYPE : Int32
    FWPM_IPSEC_KEYING_CONTEXT = 0
    FWPM_IPSEC_IKE_QM_TRANSPORT_CONTEXT = 1
    FWPM_IPSEC_IKE_QM_TUNNEL_CONTEXT = 2
    FWPM_IPSEC_AUTHIP_QM_TRANSPORT_CONTEXT = 3
    FWPM_IPSEC_AUTHIP_QM_TUNNEL_CONTEXT = 4
    FWPM_IPSEC_IKE_MM_CONTEXT = 5
    FWPM_IPSEC_AUTHIP_MM_CONTEXT = 6
    FWPM_CLASSIFY_OPTIONS_CONTEXT = 7
    FWPM_GENERAL_CONTEXT = 8
    FWPM_IPSEC_IKEV2_QM_TUNNEL_CONTEXT = 9
    FWPM_IPSEC_IKEV2_MM_CONTEXT = 10
    FWPM_IPSEC_DOSP_CONTEXT = 11
    FWPM_IPSEC_IKEV2_QM_TRANSPORT_CONTEXT = 12
    FWPM_PROVIDER_CONTEXT_TYPE_MAX = 13
  end

  enum FWPM_FIELD_TYPE : Int32
    FWPM_FIELD_RAW_DATA = 0
    FWPM_FIELD_IP_ADDRESS = 1
    FWPM_FIELD_FLAGS = 2
    FWPM_FIELD_TYPE_MAX = 3
  end

  enum FWPM_NET_EVENT_TYPE : Int32
    FWPM_NET_EVENT_TYPE_IKEEXT_MM_FAILURE = 0
    FWPM_NET_EVENT_TYPE_IKEEXT_QM_FAILURE = 1
    FWPM_NET_EVENT_TYPE_IKEEXT_EM_FAILURE = 2
    FWPM_NET_EVENT_TYPE_CLASSIFY_DROP = 3
    FWPM_NET_EVENT_TYPE_IPSEC_KERNEL_DROP = 4
    FWPM_NET_EVENT_TYPE_IPSEC_DOSP_DROP = 5
    FWPM_NET_EVENT_TYPE_CLASSIFY_ALLOW = 6
    FWPM_NET_EVENT_TYPE_CAPABILITY_DROP = 7
    FWPM_NET_EVENT_TYPE_CAPABILITY_ALLOW = 8
    FWPM_NET_EVENT_TYPE_CLASSIFY_DROP_MAC = 9
    FWPM_NET_EVENT_TYPE_LPM_PACKET_ARRIVAL = 10
    FWPM_NET_EVENT_TYPE_MAX = 11
  end

  enum FWPM_APPC_NETWORK_CAPABILITY_TYPE : Int32
    FWPM_APPC_NETWORK_CAPABILITY_INTERNET_CLIENT = 0
    FWPM_APPC_NETWORK_CAPABILITY_INTERNET_CLIENT_SERVER = 1
    FWPM_APPC_NETWORK_CAPABILITY_INTERNET_PRIVATE_NETWORK = 2
  end

  enum FWPM_SYSTEM_PORT_TYPE : Int32
    FWPM_SYSTEM_PORT_RPC_EPMAP = 0
    FWPM_SYSTEM_PORT_TEREDO = 1
    FWPM_SYSTEM_PORT_IPHTTPS_IN = 2
    FWPM_SYSTEM_PORT_IPHTTPS_OUT = 3
    FWPM_SYSTEM_PORT_TYPE_MAX = 4
  end

  enum FWPM_CONNECTION_EVENT_TYPE : Int32
    FWPM_CONNECTION_EVENT_ADD = 0
    FWPM_CONNECTION_EVENT_DELETE = 1
    FWPM_CONNECTION_EVENT_MAX = 2
  end

  enum FWPM_VSWITCH_EVENT_TYPE : Int32
    FWPM_VSWITCH_EVENT_FILTER_ADD_TO_INCOMPLETE_LAYER = 0
    FWPM_VSWITCH_EVENT_FILTER_ENGINE_NOT_IN_REQUIRED_POSITION = 1
    FWPM_VSWITCH_EVENT_ENABLED_FOR_INSPECTION = 2
    FWPM_VSWITCH_EVENT_DISABLED_FOR_INSPECTION = 3
    FWPM_VSWITCH_EVENT_FILTER_ENGINE_REORDER = 4
    FWPM_VSWITCH_EVENT_MAX = 5
  end

  enum IPV4_OPTION_TYPE : Int32
    IP_OPT_EOL = 0
    IP_OPT_NOP = 1
    IP_OPT_SECURITY = 130
    IP_OPT_LSRR = 131
    IP_OPT_TS = 68
    IP_OPT_RR = 7
    IP_OPT_SSRR = 137
    IP_OPT_SID = 136
    IP_OPT_ROUTER_ALERT = 148
    IP_OPT_MULTIDEST = 149
  end

  enum IP_OPTION_TIMESTAMP_FLAGS : Int32
    IP_OPTION_TIMESTAMP_ONLY = 0
    IP_OPTION_TIMESTAMP_ADDRESS = 1
    IP_OPTION_TIMESTAMP_SPECIFIC_ADDRESS = 3
  end

  enum ICMP4_UNREACH_CODE : Int32
    ICMP4_UNREACH_NET = 0
    ICMP4_UNREACH_HOST = 1
    ICMP4_UNREACH_PROTOCOL = 2
    ICMP4_UNREACH_PORT = 3
    ICMP4_UNREACH_FRAG_NEEDED = 4
    ICMP4_UNREACH_SOURCEROUTE_FAILED = 5
    ICMP4_UNREACH_NET_UNKNOWN = 6
    ICMP4_UNREACH_HOST_UNKNOWN = 7
    ICMP4_UNREACH_ISOLATED = 8
    ICMP4_UNREACH_NET_ADMIN = 9
    ICMP4_UNREACH_HOST_ADMIN = 10
    ICMP4_UNREACH_NET_TOS = 11
    ICMP4_UNREACH_HOST_TOS = 12
    ICMP4_UNREACH_ADMIN = 13
  end

  enum ICMP4_TIME_EXCEED_CODE : Int32
    ICMP4_TIME_EXCEED_TRANSIT = 0
    ICMP4_TIME_EXCEED_REASSEMBLY = 1
  end

  enum ARP_OPCODE : Int32
    ARP_REQUEST = 1
    ARP_RESPONSE = 2
  end

  enum ARP_HARDWARE_TYPE : Int32
    ARP_HW_ENET = 1
    ARP_HW_802 = 6
  end

  enum IGMP_MAX_RESP_CODE_TYPE : Int32
    IGMP_MAX_RESP_CODE_TYPE_NORMAL = 0
    IGMP_MAX_RESP_CODE_TYPE_FLOAT = 1
  end

  enum IPV6_OPTION_TYPE : Int32
    IP6OPT_PAD1 = 0
    IP6OPT_PADN = 1
    IP6OPT_TUNNEL_LIMIT = 4
    IP6OPT_ROUTER_ALERT = 5
    IP6OPT_JUMBO = 194
    IP6OPT_NSAP_ADDR = 195
  end

  enum ND_OPTION_TYPE : Int32
    ND_OPT_SOURCE_LINKADDR = 1
    ND_OPT_TARGET_LINKADDR = 2
    ND_OPT_PREFIX_INFORMATION = 3
    ND_OPT_REDIRECTED_HEADER = 4
    ND_OPT_MTU = 5
    ND_OPT_NBMA_SHORTCUT_LIMIT = 6
    ND_OPT_ADVERTISEMENT_INTERVAL = 7
    ND_OPT_HOME_AGENT_INFORMATION = 8
    ND_OPT_SOURCE_ADDR_LIST = 9
    ND_OPT_TARGET_ADDR_LIST = 10
    ND_OPT_ROUTE_INFO = 24
    ND_OPT_RDNSS = 25
    ND_OPT_DNSSL = 31
  end

  enum MLD_MAX_RESP_CODE_TYPE : Int32
    MLD_MAX_RESP_CODE_TYPE_NORMAL = 0
    MLD_MAX_RESP_CODE_TYPE_FLOAT = 1
  end

  enum TUNNEL_SUB_TYPE : Int32
    TUNNEL_SUB_TYPE_NONE = 0
    TUNNEL_SUB_TYPE_CP = 1
    TUNNEL_SUB_TYPE_IPTLS = 2
    TUNNEL_SUB_TYPE_HA = 3
  end

  enum NPI_MODULEID_TYPE : Int32
    MIT_GUID = 1
    MIT_IF_LUID = 2
  end

  enum FALLBACK_INDEX : Int32
    FallbackIndexTcpFastopen = 0
    FallbackIndexMax = 1
  end

  union FWP_VALUE0_Anonymous_e__Union
    uint8 : UInt8
    uint16 : UInt16
    uint32 : UInt32
    uint64 : UInt64*
    int8 : Int8
    int16 : Int16
    int32 : Int32
    int64 : Int64*
    float32 : Float32
    double64 : Float64*
    byte_array16 : FWP_BYTE_ARRAY16*
    byte_blob : FWP_BYTE_BLOB*
    sid : SID*
    sd : FWP_BYTE_BLOB*
    token_information : FWP_TOKEN_INFORMATION*
    token_access_information : FWP_BYTE_BLOB*
    unicode_string : LibC::LPWSTR
    byte_array6 : FWP_BYTE_ARRAY6*
  end
  union FWP_CONDITION_VALUE0_Anonymous_e__Union
    uint8 : UInt8
    uint16 : UInt16
    uint32 : UInt32
    uint64 : UInt64*
    int8 : Int8
    int16 : Int16
    int32 : Int32
    int64 : Int64*
    float32 : Float32
    double64 : Float64*
    byte_array16 : FWP_BYTE_ARRAY16*
    byte_blob : FWP_BYTE_BLOB*
    sid : SID*
    sd : FWP_BYTE_BLOB*
    token_information : FWP_TOKEN_INFORMATION*
    token_access_information : FWP_BYTE_BLOB*
    unicode_string : LibC::LPWSTR
    byte_array6 : FWP_BYTE_ARRAY6*
    v4_addr_mask : FWP_V4_ADDR_AND_MASK*
    v6_addr_mask : FWP_V6_ADDR_AND_MASK*
    range_value : FWP_RANGE0*
  end
  union IKEEXT_CERTIFICATE_AUTHENTICATION0_Anonymous2_e__Union
    anonymous : IKEEXT_CERTIFICATE_AUTHENTICATION0_Anonymous2_e__Union_Anonymous_e__Struct
    outbound_enterprise_store_config : IKEEXT_CERT_ROOT_CONFIG0*
    outbound_trusted_root_store_config : IKEEXT_CERT_ROOT_CONFIG0*
  end
  union IKEEXT_CERTIFICATE_AUTHENTICATION0_Anonymous1_e__Union
    anonymous : IKEEXT_CERTIFICATE_AUTHENTICATION0_Anonymous1_e__Union_Anonymous_e__Struct
    inbound_enterprise_store_config : IKEEXT_CERT_ROOT_CONFIG0*
    inbound_trusted_root_store_config : IKEEXT_CERT_ROOT_CONFIG0*
  end
  union IKEEXT_CERTIFICATE_AUTHENTICATION1_Anonymous2_e__Union
    anonymous : IKEEXT_CERTIFICATE_AUTHENTICATION1_Anonymous2_e__Union_Anonymous_e__Struct
    outbound_enterprise_store_config : IKEEXT_CERT_ROOT_CONFIG0*
    outbound_trusted_root_store_config : IKEEXT_CERT_ROOT_CONFIG0*
  end
  union IKEEXT_CERTIFICATE_AUTHENTICATION1_Anonymous1_e__Union
    anonymous : IKEEXT_CERTIFICATE_AUTHENTICATION1_Anonymous1_e__Union_Anonymous_e__Struct
    inbound_enterprise_store_config : IKEEXT_CERT_ROOT_CONFIG0*
    inbound_trusted_root_store_config : IKEEXT_CERT_ROOT_CONFIG0*
  end
  union IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous2_e__Union
    anonymous1 : IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous2_e__Union_Anonymous1_e__Struct
    anonymous2 : IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous2_e__Union_Anonymous2_e__Struct
    anonymous3 : IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous2_e__Union_Anonymous3_e__Struct
  end
  union IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous1_e__Union
    anonymous1 : IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous1_e__Union_Anonymous1_e__Struct
    anonymous2 : IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous1_e__Union_Anonymous2_e__Struct
    anonymous3 : IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous1_e__Union_Anonymous3_e__Struct
  end
  union IKEEXT_AUTHENTICATION_METHOD0_Anonymous_e__Union
    preshared_key_authentication : IKEEXT_PRESHARED_KEY_AUTHENTICATION0
    certificate_authentication : IKEEXT_CERTIFICATE_AUTHENTICATION0
    kerberos_authentication : IKEEXT_KERBEROS_AUTHENTICATION0
    ntlm_v2_authentication : IKEEXT_NTLM_V2_AUTHENTICATION0
    ssl_authentication : IKEEXT_CERTIFICATE_AUTHENTICATION0
    cga_authentication : IKEEXT_IPV6_CGA_AUTHENTICATION0
  end
  union IKEEXT_AUTHENTICATION_METHOD1_Anonymous_e__Union
    preshared_key_authentication : IKEEXT_PRESHARED_KEY_AUTHENTICATION1
    certificate_authentication : IKEEXT_CERTIFICATE_AUTHENTICATION1
    kerberos_authentication : IKEEXT_KERBEROS_AUTHENTICATION0
    ntlm_v2_authentication : IKEEXT_NTLM_V2_AUTHENTICATION0
    ssl_authentication : IKEEXT_CERTIFICATE_AUTHENTICATION1
    cga_authentication : IKEEXT_IPV6_CGA_AUTHENTICATION0
    eap_authentication : IKEEXT_EAP_AUTHENTICATION0
  end
  union IKEEXT_AUTHENTICATION_METHOD2_Anonymous_e__Union
    preshared_key_authentication : IKEEXT_PRESHARED_KEY_AUTHENTICATION1
    certificate_authentication : IKEEXT_CERTIFICATE_AUTHENTICATION2
    kerberos_authentication : IKEEXT_KERBEROS_AUTHENTICATION1
    reserved_authentication : IKEEXT_RESERVED_AUTHENTICATION0
    ntlm_v2_authentication : IKEEXT_NTLM_V2_AUTHENTICATION0
    ssl_authentication : IKEEXT_CERTIFICATE_AUTHENTICATION2
    cga_authentication : IKEEXT_IPV6_CGA_AUTHENTICATION0
    eap_authentication : IKEEXT_EAP_AUTHENTICATION0
  end
  union IKEEXT_TRAFFIC0_Anonymous2_e__Union
    remote_v4_address : UInt32
    remote_v6_address : UInt8[16]*
  end
  union IKEEXT_TRAFFIC0_Anonymous1_e__Union
    local_v4_address : UInt32
    local_v6_address : UInt8[16]*
  end
  union IKEEXT_CREDENTIAL0_Anonymous_e__Union
    preshared_key : IKEEXT_PRESHARED_KEY_AUTHENTICATION0*
    certificate : IKEEXT_CERTIFICATE_CREDENTIAL0*
    name : IKEEXT_NAME_CREDENTIAL0*
  end
  union IKEEXT_SA_DETAILS0_Anonymous_e__Union
    v4_udp_encapsulation : IPSEC_V4_UDP_ENCAPSULATION0*
  end
  union IKEEXT_CREDENTIAL1_Anonymous_e__Union
    preshared_key : IKEEXT_PRESHARED_KEY_AUTHENTICATION1*
    certificate : IKEEXT_CERTIFICATE_CREDENTIAL1*
    name : IKEEXT_NAME_CREDENTIAL0*
  end
  union IKEEXT_SA_DETAILS1_Anonymous_e__Union
    v4_udp_encapsulation : IPSEC_V4_UDP_ENCAPSULATION0*
  end
  union IKEEXT_CREDENTIAL2_Anonymous_e__Union
    preshared_key : IKEEXT_PRESHARED_KEY_AUTHENTICATION1*
    certificate : IKEEXT_CERTIFICATE_CREDENTIAL1*
    name : IKEEXT_NAME_CREDENTIAL0*
  end
  union IKEEXT_SA_DETAILS2_Anonymous_e__Union
    v4_udp_encapsulation : IPSEC_V4_UDP_ENCAPSULATION0*
  end
  union IPSEC_SA_TRANSFORM0_Anonymous_e__Union
    ah_transform : IPSEC_AUTH_TRANSFORM0*
    esp_auth_transform : IPSEC_AUTH_TRANSFORM0*
    esp_cipher_transform : IPSEC_CIPHER_TRANSFORM0*
    esp_auth_and_cipher_transform : IPSEC_AUTH_AND_CIPHER_TRANSFORM0*
    esp_auth_fw_transform : IPSEC_AUTH_TRANSFORM0*
  end
  union IPSEC_TRAFFIC_SELECTOR0__Anonymous1_e__Union
    start_v4_address : UInt32
    start_v6_address : UInt8[16]*
  end
  union IPSEC_TRAFFIC_SELECTOR0__Anonymous2_e__Union
    end_v4_address : UInt32
    end_v6_address : UInt8[16]*
  end
  union IPSEC_TUNNEL_ENDPOINTS0_Anonymous1_e__Union
    local_v4_address : UInt32
    local_v6_address : UInt8[16]*
  end
  union IPSEC_TUNNEL_ENDPOINTS0_Anonymous2_e__Union
    remote_v4_address : UInt32
    remote_v6_address : UInt8[16]*
  end
  union IPSEC_TUNNEL_ENDPOINT0_Anonymous_e__Union
    v4_address : UInt32
    v6_address : UInt8[16]*
  end
  union IPSEC_TUNNEL_ENDPOINTS2_Anonymous2_e__Union
    remote_v4_address : UInt32
    remote_v6_address : UInt8[16]*
  end
  union IPSEC_TUNNEL_ENDPOINTS2_Anonymous1_e__Union
    local_v4_address : UInt32
    local_v6_address : UInt8[16]*
  end
  union IPSEC_TUNNEL_ENDPOINTS1_Anonymous2_e__Union
    remote_v4_address : UInt32
    remote_v6_address : UInt8[16]*
  end
  union IPSEC_TUNNEL_ENDPOINTS1_Anonymous1_e__Union
    local_v4_address : UInt32
    local_v6_address : UInt8[16]*
  end
  union IPSEC_SA0_Anonymous_e__Union
    ah_information : IPSEC_SA_AUTH_INFORMATION0*
    esp_auth_information : IPSEC_SA_AUTH_INFORMATION0*
    esp_cipher_information : IPSEC_SA_CIPHER_INFORMATION0*
    esp_auth_and_cipher_information : IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0*
    esp_auth_fw_information : IPSEC_SA_AUTH_INFORMATION0*
  end
  union IPSEC_SA_BUNDLE0_Anonymous_e__Union
    peer_v4_private_address : UInt32
  end
  union IPSEC_SA_BUNDLE1_Anonymous_e__Union
    peer_v4_private_address : UInt32
  end
  union IPSEC_TRAFFIC0_Anonymous3_e__Union
    ipsec_filter_id : UInt64
    tunnel_policy_id : UInt64
  end
  union IPSEC_TRAFFIC0_Anonymous1_e__Union
    local_v4_address : UInt32
    local_v6_address : UInt8[16]*
  end
  union IPSEC_TRAFFIC0_Anonymous2_e__Union
    remote_v4_address : UInt32
    remote_v6_address : UInt8[16]*
  end
  union IPSEC_TRAFFIC1_Anonymous2_e__Union
    remote_v4_address : UInt32
    remote_v6_address : UInt8[16]*
  end
  union IPSEC_TRAFFIC1_Anonymous3_e__Union
    ipsec_filter_id : UInt64
    tunnel_policy_id : UInt64
  end
  union IPSEC_TRAFFIC1_Anonymous1_e__Union
    local_v4_address : UInt32
    local_v6_address : UInt8[16]*
  end
  union IPSEC_GETSPI0_Anonymous_e__Union
    inbound_udp_encapsulation : IPSEC_V4_UDP_ENCAPSULATION0*
  end
  union IPSEC_GETSPI1_Anonymous_e__Union
    inbound_udp_encapsulation : IPSEC_V4_UDP_ENCAPSULATION0*
  end
  union IPSEC_SA_DETAILS0_Anonymous_e__Union
    udp_encapsulation : IPSEC_V4_UDP_ENCAPSULATION0*
  end
  union IPSEC_SA_DETAILS1_Anonymous_e__Union
    udp_encapsulation : IPSEC_V4_UDP_ENCAPSULATION0*
  end
  union FWPM_PROVIDER_CONTEXT0_Anonymous_e__Union
    keying_policy : IPSEC_KEYING_POLICY0*
    ike_qm_transport_policy : IPSEC_TRANSPORT_POLICY0*
    ike_qm_tunnel_policy : IPSEC_TUNNEL_POLICY0*
    authip_qm_transport_policy : IPSEC_TRANSPORT_POLICY0*
    authip_qm_tunnel_policy : IPSEC_TUNNEL_POLICY0*
    ike_mm_policy : IKEEXT_POLICY0*
    auth_ip_mm_policy : IKEEXT_POLICY0*
    data_buffer : FWP_BYTE_BLOB*
    classify_options : FWPM_CLASSIFY_OPTIONS0*
  end
  union FWPM_PROVIDER_CONTEXT1_Anonymous_e__Union
    keying_policy : IPSEC_KEYING_POLICY0*
    ike_qm_transport_policy : IPSEC_TRANSPORT_POLICY1*
    ike_qm_tunnel_policy : IPSEC_TUNNEL_POLICY1*
    authip_qm_transport_policy : IPSEC_TRANSPORT_POLICY1*
    authip_qm_tunnel_policy : IPSEC_TUNNEL_POLICY1*
    ike_mm_policy : IKEEXT_POLICY1*
    auth_ip_mm_policy : IKEEXT_POLICY1*
    data_buffer : FWP_BYTE_BLOB*
    classify_options : FWPM_CLASSIFY_OPTIONS0*
    ike_v2_qm_tunnel_policy : IPSEC_TUNNEL_POLICY1*
    ike_v2_mm_policy : IKEEXT_POLICY1*
    idp_options : IPSEC_DOSP_OPTIONS0*
  end
  union FWPM_PROVIDER_CONTEXT2_Anonymous_e__Union
    keying_policy : IPSEC_KEYING_POLICY1*
    ike_qm_transport_policy : IPSEC_TRANSPORT_POLICY2*
    ike_qm_tunnel_policy : IPSEC_TUNNEL_POLICY2*
    authip_qm_transport_policy : IPSEC_TRANSPORT_POLICY2*
    authip_qm_tunnel_policy : IPSEC_TUNNEL_POLICY2*
    ike_mm_policy : IKEEXT_POLICY2*
    auth_ip_mm_policy : IKEEXT_POLICY2*
    data_buffer : FWP_BYTE_BLOB*
    classify_options : FWPM_CLASSIFY_OPTIONS0*
    ike_v2_qm_tunnel_policy : IPSEC_TUNNEL_POLICY2*
    ike_v2_qm_transport_policy : IPSEC_TRANSPORT_POLICY2*
    ike_v2_mm_policy : IKEEXT_POLICY2*
    idp_options : IPSEC_DOSP_OPTIONS0*
  end
  union FWPM_PROVIDER_CONTEXT3__Anonymous_e__Union
    keying_policy : IPSEC_KEYING_POLICY1*
    ike_qm_transport_policy : IPSEC_TRANSPORT_POLICY2*
    ike_qm_tunnel_policy : IPSEC_TUNNEL_POLICY3_*
    authip_qm_transport_policy : IPSEC_TRANSPORT_POLICY2*
    authip_qm_tunnel_policy : IPSEC_TUNNEL_POLICY3_*
    ike_mm_policy : IKEEXT_POLICY2*
    auth_ip_mm_policy : IKEEXT_POLICY2*
    data_buffer : FWP_BYTE_BLOB*
    classify_options : FWPM_CLASSIFY_OPTIONS0*
    ike_v2_qm_tunnel_policy : IPSEC_TUNNEL_POLICY3_*
    ike_v2_qm_transport_policy : IPSEC_TRANSPORT_POLICY2*
    ike_v2_mm_policy : IKEEXT_POLICY2*
    idp_options : IPSEC_DOSP_OPTIONS0*
  end
  union FWPM_ACTION0_Anonymous_e__Union
    filter_type : Guid
    callout_key : Guid
  end
  union FWPM_FILTER0_Anonymous_e__Union
    raw_context : UInt64
    provider_context_key : Guid
  end
  union FWPM_NET_EVENT_HEADER0_Anonymous1_e__Union
    local_addr_v4 : UInt32
    local_addr_v6 : FWP_BYTE_ARRAY16
  end
  union FWPM_NET_EVENT_HEADER0_Anonymous2_e__Union
    remote_addr_v4 : UInt32
    remote_addr_v6 : FWP_BYTE_ARRAY16
  end
  union FWPM_NET_EVENT_HEADER1_Anonymous3_e__Union
    anonymous : FWPM_NET_EVENT_HEADER1_Anonymous3_e__Union_Anonymous_e__Struct
  end
  union FWPM_NET_EVENT_HEADER1_Anonymous3_e__Union_Anonymous_e__Struct_Anonymous_e__Union
    anonymous : FWPM_NET_EVENT_HEADER1_Anonymous3_e__Union_Anonymous_e__Struct_Anonymous_e__Union_Anonymous_e__Struct
  end
  union FWPM_NET_EVENT_HEADER1_Anonymous1_e__Union
    local_addr_v4 : UInt32
    local_addr_v6 : FWP_BYTE_ARRAY16
  end
  union FWPM_NET_EVENT_HEADER1_Anonymous2_e__Union
    remote_addr_v4 : UInt32
    remote_addr_v6 : FWP_BYTE_ARRAY16
  end
  union FWPM_NET_EVENT_HEADER2_Anonymous1_e__Union
    local_addr_v4 : UInt32
    local_addr_v6 : FWP_BYTE_ARRAY16
  end
  union FWPM_NET_EVENT_HEADER2_Anonymous2_e__Union
    remote_addr_v4 : UInt32
    remote_addr_v6 : FWP_BYTE_ARRAY16
  end
  union FWPM_NET_EVENT_HEADER3_Anonymous1_e__Union
    local_addr_v4 : UInt32
    local_addr_v6 : FWP_BYTE_ARRAY16
  end
  union FWPM_NET_EVENT_HEADER3_Anonymous2_e__Union
    remote_addr_v4 : UInt32
    remote_addr_v6 : FWP_BYTE_ARRAY16
  end
  union FWPM_NET_EVENT_IKEEXT_QM_FAILURE0_Anonymous1_e__Union
    local_sub_net : FWP_CONDITION_VALUE0
  end
  union FWPM_NET_EVENT_IKEEXT_QM_FAILURE0_Anonymous2_e__Union
    remote_sub_net : FWP_CONDITION_VALUE0
  end
  union FWPM_NET_EVENT_IKEEXT_QM_FAILURE1__Anonymous1_e__Union
    local_sub_net : FWP_CONDITION_VALUE0
  end
  union FWPM_NET_EVENT_IKEEXT_QM_FAILURE1__Anonymous2_e__Union
    remote_sub_net : FWP_CONDITION_VALUE0
  end
  union FWPM_NET_EVENT_IPSEC_DOSP_DROP0_Anonymous1_e__Union
    public_host_v4_addr : UInt32
    public_host_v6_addr : UInt8[16]*
  end
  union FWPM_NET_EVENT_IPSEC_DOSP_DROP0_Anonymous2_e__Union
    internal_host_v4_addr : UInt32
    internal_host_v6_addr : UInt8[16]*
  end
  union FWPM_NET_EVENT0_Anonymous_e__Union
    ike_mm_failure : FWPM_NET_EVENT_IKEEXT_MM_FAILURE0*
    ike_qm_failure : FWPM_NET_EVENT_IKEEXT_QM_FAILURE0*
    ike_em_failure : FWPM_NET_EVENT_IKEEXT_EM_FAILURE0*
    classify_drop : FWPM_NET_EVENT_CLASSIFY_DROP0*
    ipsec_drop : FWPM_NET_EVENT_IPSEC_KERNEL_DROP0*
    idp_drop : FWPM_NET_EVENT_IPSEC_DOSP_DROP0*
  end
  union FWPM_NET_EVENT1_Anonymous_e__Union
    ike_mm_failure : FWPM_NET_EVENT_IKEEXT_MM_FAILURE1*
    ike_qm_failure : FWPM_NET_EVENT_IKEEXT_QM_FAILURE0*
    ike_em_failure : FWPM_NET_EVENT_IKEEXT_EM_FAILURE1*
    classify_drop : FWPM_NET_EVENT_CLASSIFY_DROP1*
    ipsec_drop : FWPM_NET_EVENT_IPSEC_KERNEL_DROP0*
    idp_drop : FWPM_NET_EVENT_IPSEC_DOSP_DROP0*
  end
  union FWPM_NET_EVENT2_Anonymous_e__Union
    ike_mm_failure : FWPM_NET_EVENT_IKEEXT_MM_FAILURE1*
    ike_qm_failure : FWPM_NET_EVENT_IKEEXT_QM_FAILURE0*
    ike_em_failure : FWPM_NET_EVENT_IKEEXT_EM_FAILURE1*
    classify_drop : FWPM_NET_EVENT_CLASSIFY_DROP2*
    ipsec_drop : FWPM_NET_EVENT_IPSEC_KERNEL_DROP0*
    idp_drop : FWPM_NET_EVENT_IPSEC_DOSP_DROP0*
    classify_allow : FWPM_NET_EVENT_CLASSIFY_ALLOW0*
    capability_drop : FWPM_NET_EVENT_CAPABILITY_DROP0*
    capability_allow : FWPM_NET_EVENT_CAPABILITY_ALLOW0*
    classify_drop_mac : FWPM_NET_EVENT_CLASSIFY_DROP_MAC0*
  end
  union FWPM_NET_EVENT3_Anonymous_e__Union
    ike_mm_failure : FWPM_NET_EVENT_IKEEXT_MM_FAILURE1*
    ike_qm_failure : FWPM_NET_EVENT_IKEEXT_QM_FAILURE0*
    ike_em_failure : FWPM_NET_EVENT_IKEEXT_EM_FAILURE1*
    classify_drop : FWPM_NET_EVENT_CLASSIFY_DROP2*
    ipsec_drop : FWPM_NET_EVENT_IPSEC_KERNEL_DROP0*
    idp_drop : FWPM_NET_EVENT_IPSEC_DOSP_DROP0*
    classify_allow : FWPM_NET_EVENT_CLASSIFY_ALLOW0*
    capability_drop : FWPM_NET_EVENT_CAPABILITY_DROP0*
    capability_allow : FWPM_NET_EVENT_CAPABILITY_ALLOW0*
    classify_drop_mac : FWPM_NET_EVENT_CLASSIFY_DROP_MAC0*
  end
  union FWPM_NET_EVENT4__Anonymous_e__Union
    ike_mm_failure : FWPM_NET_EVENT_IKEEXT_MM_FAILURE2_*
    ike_qm_failure : FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_*
    ike_em_failure : FWPM_NET_EVENT_IKEEXT_EM_FAILURE1*
    classify_drop : FWPM_NET_EVENT_CLASSIFY_DROP2*
    ipsec_drop : FWPM_NET_EVENT_IPSEC_KERNEL_DROP0*
    idp_drop : FWPM_NET_EVENT_IPSEC_DOSP_DROP0*
    classify_allow : FWPM_NET_EVENT_CLASSIFY_ALLOW0*
    capability_drop : FWPM_NET_EVENT_CAPABILITY_DROP0*
    capability_allow : FWPM_NET_EVENT_CAPABILITY_ALLOW0*
    classify_drop_mac : FWPM_NET_EVENT_CLASSIFY_DROP_MAC0*
  end
  union FWPM_NET_EVENT5__Anonymous_e__Union
    ike_mm_failure : FWPM_NET_EVENT_IKEEXT_MM_FAILURE2_*
    ike_qm_failure : FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_*
    ike_em_failure : FWPM_NET_EVENT_IKEEXT_EM_FAILURE1*
    classify_drop : FWPM_NET_EVENT_CLASSIFY_DROP2*
    ipsec_drop : FWPM_NET_EVENT_IPSEC_KERNEL_DROP0*
    idp_drop : FWPM_NET_EVENT_IPSEC_DOSP_DROP0*
    classify_allow : FWPM_NET_EVENT_CLASSIFY_ALLOW0*
    capability_drop : FWPM_NET_EVENT_CAPABILITY_DROP0*
    capability_allow : FWPM_NET_EVENT_CAPABILITY_ALLOW0*
    classify_drop_mac : FWPM_NET_EVENT_CLASSIFY_DROP_MAC0*
    lpm_packet_arrival : FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0_*
  end
  union FWPM_CONNECTION0_Anonymous1_e__Union
    local_v4_address : UInt32
    local_v6_address : UInt8[16]*
  end
  union FWPM_CONNECTION0_Anonymous2_e__Union
    remote_v4_address : UInt32
    remote_v6_address : UInt8[16]*
  end
  union FWPM_VSWITCH_EVENT0_Anonymous_e__Union
    position_info : FWPM_VSWITCH_EVENT0_Anonymous_e__Union_positionInfo_e__Struct
    reorder_info : FWPM_VSWITCH_EVENT0_Anonymous_e__Union_reorderInfo_e__Struct
  end
  union DL_OUI
    byte : UInt8[3]*
    anonymous : DL_OUI_Anonymous_e__Struct
  end
  union DL_EI48
    byte : UInt8[3]*
  end
  union DL_EUI48
    byte : UInt8[6]*
    anonymous : DL_EUI48_Anonymous_e__Struct
  end
  union DL_EI64
    byte : UInt8[5]*
  end
  union DL_EUI64
    byte : UInt8[8]*
    value : UInt64
    anonymous : DL_EUI64_Anonymous_e__Struct
  end
  union DL_EUI64_Anonymous_e__Struct_Anonymous_e__Union
    ei64 : DL_EI64
    anonymous : DL_EUI64_Anonymous_e__Struct_Anonymous_e__Union_Anonymous_e__Struct
  end
  union ETHERNET_HEADER_Anonymous_e__Union
    type : UInt16
    length : UInt16
  end
  union VLAN_TAG_Anonymous_e__Union
    tag : UInt16
    anonymous : VLAN_TAG_Anonymous_e__Union_Anonymous_e__Struct
  end
  union ICMP_MESSAGE_Data_e__Union
    data32 : UInt32[0]*
    data16 : UInt16[2]*
    data8 : UInt8[4]*
  end
  union IPV4_HEADER_Anonymous3_e__Union
    flags_and_offset : UInt16
    anonymous : IPV4_HEADER_Anonymous3_e__Union_Anonymous_e__Struct
  end
  union IPV4_HEADER_Anonymous2_e__Union
    type_of_service_and_ecn_field : UInt8
    anonymous : IPV4_HEADER_Anonymous2_e__Union_Anonymous_e__Struct
  end
  union IPV4_HEADER_Anonymous1_e__Union
    version_and_header_length : UInt8
    anonymous : IPV4_HEADER_Anonymous1_e__Union_Anonymous_e__Struct
  end
  union IPV4_OPTION_HEADER_Anonymous_e__Union
    option_type : UInt8
    anonymous : IPV4_OPTION_HEADER_Anonymous_e__Union_Anonymous_e__Struct
  end
  union IPV4_TIMESTAMP_OPTION_Anonymous_e__Union
    flags_overflow : UInt8
    anonymous : IPV4_TIMESTAMP_OPTION_Anonymous_e__Union_Anonymous_e__Struct
  end
  union IGMP_HEADER_Anonymous1_e__Union
    anonymous : IGMP_HEADER_Anonymous1_e__Union_Anonymous_e__Struct
    version_type : UInt8
  end
  union IGMP_HEADER_Anonymous2_e__Union
    reserved : UInt8
    max_resp_time : UInt8
    code : UInt8
  end
  union IGMPV3_QUERY_HEADER_Anonymous2_e__Union
    queriers_query_interface_code : UInt8
    anonymous : IGMPV3_QUERY_HEADER_Anonymous2_e__Union_Anonymous_e__Struct
  end
  union IGMPV3_QUERY_HEADER_Anonymous1_e__Union
    max_resp_code : UInt8
    anonymous : IGMPV3_QUERY_HEADER_Anonymous1_e__Union_Anonymous_e__Struct
  end
  union IPV6_HEADER_Anonymous_e__Union
    version_class_flow : UInt32
    anonymous : IPV6_HEADER_Anonymous_e__Union_Anonymous_e__Struct
  end
  union IPV6_FRAGMENT_HEADER_Anonymous_e__Union
    anonymous : IPV6_FRAGMENT_HEADER_Anonymous_e__Union_Anonymous_e__Struct
    offset_and_flags : UInt16
  end
  union IPV6_ROUTER_ADVERTISEMENT_FLAGS
    anonymous : IPV6_ROUTER_ADVERTISEMENT_FLAGS_Anonymous_e__Struct
    value : UInt8
  end
  union IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS
    anonymous : IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS_Anonymous_e__Struct
    value : UInt32
  end
  union Nd_opt_prefix_info_Anonymous2_e__Union
    nd_opt_pi_reserved2 : UInt32
    anonymous : Nd_opt_prefix_info_Anonymous2_e__Union_Anonymous_e__Struct
  end
  union Nd_opt_prefix_info_Anonymous1_e__Union
    nd_opt_pi_flags_reserved : UInt8
    flags : Nd_opt_prefix_info_Anonymous1_e__Union_Flags_e__Struct
  end
  union Nd_opt_route_info_Anonymous_e__Union
    nd_opt_ri_flags_reserved : UInt8
    flags : Nd_opt_route_info_Anonymous_e__Union_Flags_e__Struct
  end
  union MLDV2_QUERY_HEADER_Anonymous2_e__Union
    queriers_query_interface_code : UInt8
    anonymous : MLDV2_QUERY_HEADER_Anonymous2_e__Union_Anonymous_e__Struct
  end
  union MLDV2_QUERY_HEADER_Anonymous1_e__Union
    max_resp_code : UInt16
    anonymous : MLDV2_QUERY_HEADER_Anonymous1_e__Union_Anonymous_e__Struct
  end
  union DL_TEREDO_ADDRESS_Anonymous_e__Union
    eui64 : DL_EUI64
    anonymous : DL_TEREDO_ADDRESS_Anonymous_e__Union_Anonymous_e__Struct
  end
  union DL_TEREDO_ADDRESS_PRV_Anonymous_e__Union
    eui64 : DL_EUI64
    anonymous : DL_TEREDO_ADDRESS_PRV_Anonymous_e__Union_Anonymous_e__Struct
  end
  union NPI_MODULEID_Anonymous_e__Union
    guid : Guid
    if_luid : LUID
  end

  struct FWP_BYTE_ARRAY6
    byte_array6 : UInt8[6]*
  end
  struct FWP_BYTE_ARRAY16
    byte_array16 : UInt8[16]*
  end
  struct FWP_BYTE_BLOB
    size : UInt32
    data : UInt8*
  end
  struct FWP_TOKEN_INFORMATION
    sid_count : UInt32
    sids : SID_AND_ATTRIBUTES*
    restricted_sid_count : UInt32
    restricted_sids : SID_AND_ATTRIBUTES*
  end
  struct FWP_VALUE0
    type : FWP_DATA_TYPE
    anonymous : FWP_VALUE0_Anonymous_e__Union
  end
  struct FWP_V4_ADDR_AND_MASK
    addr : UInt32
    mask : UInt32
  end
  struct FWP_V6_ADDR_AND_MASK
    addr : UInt8[16]*
    prefix_length : UInt8
  end
  struct FWP_RANGE0
    value_low : FWP_VALUE0
    value_high : FWP_VALUE0
  end
  struct FWP_CONDITION_VALUE0
    type : FWP_DATA_TYPE
    anonymous : FWP_CONDITION_VALUE0_Anonymous_e__Union
  end
  struct FWPM_DISPLAY_DATA0
    name : LibC::LPWSTR
    description : LibC::LPWSTR
  end
  struct IPSEC_VIRTUAL_IF_TUNNEL_INFO0
    virtual_if_tunnel_id : UInt64
    traffic_selector_id : UInt64
  end
  struct IKEEXT_PRESHARED_KEY_AUTHENTICATION0
    preshared_key : FWP_BYTE_BLOB
  end
  struct IKEEXT_PRESHARED_KEY_AUTHENTICATION1
    preshared_key : FWP_BYTE_BLOB
    flags : IKEEXT_PRESHARED_KEY_AUTHENTICATION_FLAGS
  end
  struct IKEEXT_CERT_ROOT_CONFIG0
    cert_data : FWP_BYTE_BLOB
    flags : IKEEXT_CERT_FLAGS
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION0
    inbound_config_type : IKEEXT_CERT_CONFIG_TYPE
    anonymous1 : IKEEXT_CERTIFICATE_AUTHENTICATION0_Anonymous1_e__Union
    outbound_config_type : IKEEXT_CERT_CONFIG_TYPE
    anonymous2 : IKEEXT_CERTIFICATE_AUTHENTICATION0_Anonymous2_e__Union
    flags : IKEEXT_CERT_AUTH
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION0_Anonymous2_e__Union_Anonymous_e__Struct
    outbound_root_array_size : UInt32
    outbound_root_array : IKEEXT_CERT_ROOT_CONFIG0*
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION0_Anonymous1_e__Union_Anonymous_e__Struct
    inbound_root_array_size : UInt32
    inbound_root_array : IKEEXT_CERT_ROOT_CONFIG0*
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION1
    inbound_config_type : IKEEXT_CERT_CONFIG_TYPE
    anonymous1 : IKEEXT_CERTIFICATE_AUTHENTICATION1_Anonymous1_e__Union
    outbound_config_type : IKEEXT_CERT_CONFIG_TYPE
    anonymous2 : IKEEXT_CERTIFICATE_AUTHENTICATION1_Anonymous2_e__Union
    flags : IKEEXT_CERT_AUTH
    local_cert_location_url : FWP_BYTE_BLOB
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION1_Anonymous2_e__Union_Anonymous_e__Struct
    outbound_root_array_size : UInt32
    outbound_root_array : IKEEXT_CERT_ROOT_CONFIG0*
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION1_Anonymous1_e__Union_Anonymous_e__Struct
    inbound_root_array_size : UInt32
    inbound_root_array : IKEEXT_CERT_ROOT_CONFIG0*
  end
  struct IKEEXT_CERT_EKUS0
    num_eku : UInt32
    eku : PSTR*
  end
  struct IKEEXT_CERT_NAME0
    name_type : IKEEXT_CERT_CRITERIA_NAME_TYPE
    cert_name : LibC::LPWSTR
  end
  struct IKEEXT_CERTIFICATE_CRITERIA0
    cert_data : FWP_BYTE_BLOB
    cert_hash : FWP_BYTE_BLOB
    eku : IKEEXT_CERT_EKUS0*
    name : IKEEXT_CERT_NAME0*
    flags : UInt32
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION2
    inbound_config_type : IKEEXT_CERT_CONFIG_TYPE
    anonymous1 : IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous1_e__Union
    outbound_config_type : IKEEXT_CERT_CONFIG_TYPE
    anonymous2 : IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous2_e__Union
    flags : IKEEXT_CERT_AUTH
    local_cert_location_url : FWP_BYTE_BLOB
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous2_e__Union_Anonymous2_e__Struct
    outbound_enterprise_store_array_size : UInt32
    outbound_enterprise_store_criteria : IKEEXT_CERTIFICATE_CRITERIA0*
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous2_e__Union_Anonymous3_e__Struct
    outbound_root_store_array_size : UInt32
    outbound_trusted_root_store_criteria : IKEEXT_CERTIFICATE_CRITERIA0*
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous2_e__Union_Anonymous1_e__Struct
    outbound_root_array_size : UInt32
    outbound_root_criteria : IKEEXT_CERTIFICATE_CRITERIA0*
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous1_e__Union_Anonymous3_e__Struct
    inbound_root_store_array_size : UInt32
    inbound_trusted_root_store_criteria : IKEEXT_CERTIFICATE_CRITERIA0*
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous1_e__Union_Anonymous1_e__Struct
    inbound_root_array_size : UInt32
    inbound_root_criteria : IKEEXT_CERTIFICATE_CRITERIA0*
  end
  struct IKEEXT_CERTIFICATE_AUTHENTICATION2_Anonymous1_e__Union_Anonymous2_e__Struct
    inbound_enterprise_store_array_size : UInt32
    inbound_enterprise_store_criteria : IKEEXT_CERTIFICATE_CRITERIA0*
  end
  struct IKEEXT_IPV6_CGA_AUTHENTICATION0
    key_container_name : LibC::LPWSTR
    csp_name : LibC::LPWSTR
    csp_type : UInt32
    cga_modifier : FWP_BYTE_ARRAY16
    cga_collision_count : UInt8
  end
  struct IKEEXT_KERBEROS_AUTHENTICATION0
    flags : IKEEXT_KERBEROS_AUTHENTICATION_FLAGS
  end
  struct IKEEXT_KERBEROS_AUTHENTICATION1
    flags : IKEEXT_KERBEROS_AUTHENTICATION_FLAGS
    proxy_server : LibC::LPWSTR
  end
  struct IKEEXT_RESERVED_AUTHENTICATION0
    flags : IKEEXT_RESERVED_AUTHENTICATION_FLAGS
  end
  struct IKEEXT_NTLM_V2_AUTHENTICATION0
    flags : UInt32
  end
  struct IKEEXT_EAP_AUTHENTICATION0
    flags : IKEEXT_EAP_AUTHENTICATION_FLAGS
  end
  struct IKEEXT_AUTHENTICATION_METHOD0
    authentication_method_type : IKEEXT_AUTHENTICATION_METHOD_TYPE
    anonymous : IKEEXT_AUTHENTICATION_METHOD0_Anonymous_e__Union
  end
  struct IKEEXT_AUTHENTICATION_METHOD1
    authentication_method_type : IKEEXT_AUTHENTICATION_METHOD_TYPE
    anonymous : IKEEXT_AUTHENTICATION_METHOD1_Anonymous_e__Union
  end
  struct IKEEXT_AUTHENTICATION_METHOD2
    authentication_method_type : IKEEXT_AUTHENTICATION_METHOD_TYPE
    anonymous : IKEEXT_AUTHENTICATION_METHOD2_Anonymous_e__Union
  end
  struct IKEEXT_CIPHER_ALGORITHM0
    algo_identifier : IKEEXT_CIPHER_TYPE
    key_len : UInt32
    rounds : UInt32
  end
  struct IKEEXT_INTEGRITY_ALGORITHM0
    algo_identifier : IKEEXT_INTEGRITY_TYPE
  end
  struct IKEEXT_PROPOSAL0
    cipher_algorithm : IKEEXT_CIPHER_ALGORITHM0
    integrity_algorithm : IKEEXT_INTEGRITY_ALGORITHM0
    max_lifetime_seconds : UInt32
    dh_group : IKEEXT_DH_GROUP
    quick_mode_limit : UInt32
  end
  struct IKEEXT_POLICY0
    soft_expiration_time : UInt32
    num_authentication_methods : UInt32
    authentication_methods : IKEEXT_AUTHENTICATION_METHOD0*
    initiator_impersonation_type : IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE
    num_ike_proposals : UInt32
    ike_proposals : IKEEXT_PROPOSAL0*
    flags : IKEEXT_POLICY_FLAG
    max_dynamic_filters : UInt32
  end
  struct IKEEXT_POLICY1
    soft_expiration_time : UInt32
    num_authentication_methods : UInt32
    authentication_methods : IKEEXT_AUTHENTICATION_METHOD1*
    initiator_impersonation_type : IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE
    num_ike_proposals : UInt32
    ike_proposals : IKEEXT_PROPOSAL0*
    flags : IKEEXT_POLICY_FLAG
    max_dynamic_filters : UInt32
    retransmit_duration_secs : UInt32
  end
  struct IKEEXT_POLICY2
    soft_expiration_time : UInt32
    num_authentication_methods : UInt32
    authentication_methods : IKEEXT_AUTHENTICATION_METHOD2*
    initiator_impersonation_type : IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE
    num_ike_proposals : UInt32
    ike_proposals : IKEEXT_PROPOSAL0*
    flags : IKEEXT_POLICY_FLAG
    max_dynamic_filters : UInt32
    retransmit_duration_secs : UInt32
  end
  struct IKEEXT_EM_POLICY0
    num_authentication_methods : UInt32
    authentication_methods : IKEEXT_AUTHENTICATION_METHOD0*
    initiator_impersonation_type : IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE
  end
  struct IKEEXT_EM_POLICY1
    num_authentication_methods : UInt32
    authentication_methods : IKEEXT_AUTHENTICATION_METHOD1*
    initiator_impersonation_type : IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE
  end
  struct IKEEXT_EM_POLICY2
    num_authentication_methods : UInt32
    authentication_methods : IKEEXT_AUTHENTICATION_METHOD2*
    initiator_impersonation_type : IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE
  end
  struct IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0
    current_active_main_modes : UInt32
    total_main_modes_started : UInt32
    total_successful_main_modes : UInt32
    total_failed_main_modes : UInt32
    total_responder_main_modes : UInt32
    current_new_responder_main_modes : UInt32
    current_active_quick_modes : UInt32
    total_quick_modes_started : UInt32
    total_successful_quick_modes : UInt32
    total_failed_quick_modes : UInt32
    total_acquires : UInt32
    total_reinit_acquires : UInt32
    current_active_extended_modes : UInt32
    total_extended_modes_started : UInt32
    total_successful_extended_modes : UInt32
    total_failed_extended_modes : UInt32
    total_impersonation_extended_modes : UInt32
    total_impersonation_main_modes : UInt32
  end
  struct IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1
    current_active_main_modes : UInt32
    total_main_modes_started : UInt32
    total_successful_main_modes : UInt32
    total_failed_main_modes : UInt32
    total_responder_main_modes : UInt32
    current_new_responder_main_modes : UInt32
    current_active_quick_modes : UInt32
    total_quick_modes_started : UInt32
    total_successful_quick_modes : UInt32
    total_failed_quick_modes : UInt32
    total_acquires : UInt32
    total_reinit_acquires : UInt32
    current_active_extended_modes : UInt32
    total_extended_modes_started : UInt32
    total_successful_extended_modes : UInt32
    total_failed_extended_modes : UInt32
    total_impersonation_extended_modes : UInt32
    total_impersonation_main_modes : UInt32
  end
  struct IKEEXT_KEYMODULE_STATISTICS0
    v4_statistics : IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0
    v6_statistics : IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0
    error_frequency_table : UInt32[97]*
    main_mode_negotiation_time : UInt32
    quick_mode_negotiation_time : UInt32
    extended_mode_negotiation_time : UInt32
  end
  struct IKEEXT_KEYMODULE_STATISTICS1
    v4_statistics : IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1
    v6_statistics : IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1
    error_frequency_table : UInt32[97]*
    main_mode_negotiation_time : UInt32
    quick_mode_negotiation_time : UInt32
    extended_mode_negotiation_time : UInt32
  end
  struct IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0
    total_socket_receive_failures : UInt32
    total_socket_send_failures : UInt32
  end
  struct IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1
    total_socket_receive_failures : UInt32
    total_socket_send_failures : UInt32
  end
  struct IKEEXT_COMMON_STATISTICS0
    v4_statistics : IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0
    v6_statistics : IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0
    total_packets_received : UInt32
    total_invalid_packets_received : UInt32
    current_queued_workitems : UInt32
  end
  struct IKEEXT_COMMON_STATISTICS1
    v4_statistics : IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1
    v6_statistics : IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1
    total_packets_received : UInt32
    total_invalid_packets_received : UInt32
    current_queued_workitems : UInt32
  end
  struct IKEEXT_STATISTICS0
    ike_statistics : IKEEXT_KEYMODULE_STATISTICS0
    authip_statistics : IKEEXT_KEYMODULE_STATISTICS0
    common_statistics : IKEEXT_COMMON_STATISTICS0
  end
  struct IKEEXT_STATISTICS1
    ike_statistics : IKEEXT_KEYMODULE_STATISTICS1
    authip_statistics : IKEEXT_KEYMODULE_STATISTICS1
    ike_v2_statistics : IKEEXT_KEYMODULE_STATISTICS1
    common_statistics : IKEEXT_COMMON_STATISTICS1
  end
  struct IKEEXT_TRAFFIC0
    ip_version : FWP_IP_VERSION
    anonymous1 : IKEEXT_TRAFFIC0_Anonymous1_e__Union
    anonymous2 : IKEEXT_TRAFFIC0_Anonymous2_e__Union
    auth_ip_filter_id : UInt64
  end
  struct IKEEXT_COOKIE_PAIR0
    initiator : UInt64
    responder : UInt64
  end
  struct IKEEXT_CERTIFICATE_CREDENTIAL0
    subject_name : FWP_BYTE_BLOB
    cert_hash : FWP_BYTE_BLOB
    flags : UInt32
  end
  struct IKEEXT_NAME_CREDENTIAL0
    principal_name : LibC::LPWSTR
  end
  struct IKEEXT_CREDENTIAL0
    authentication_method_type : IKEEXT_AUTHENTICATION_METHOD_TYPE
    impersonation_type : IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE
    anonymous : IKEEXT_CREDENTIAL0_Anonymous_e__Union
  end
  struct IKEEXT_CREDENTIAL_PAIR0
    local_credentials : IKEEXT_CREDENTIAL0
    peer_credentials : IKEEXT_CREDENTIAL0
  end
  struct IKEEXT_CREDENTIALS0
    num_credentials : UInt32
    credentials : IKEEXT_CREDENTIAL_PAIR0*
  end
  struct IKEEXT_SA_DETAILS0
    sa_id : UInt64
    key_module_type : IKEEXT_KEY_MODULE_TYPE
    ip_version : FWP_IP_VERSION
    anonymous : IKEEXT_SA_DETAILS0_Anonymous_e__Union
    ike_traffic : IKEEXT_TRAFFIC0
    ike_proposal : IKEEXT_PROPOSAL0
    cookie_pair : IKEEXT_COOKIE_PAIR0
    ike_credentials : IKEEXT_CREDENTIALS0
    ike_policy_key : Guid
    virtual_if_tunnel_id : UInt64
  end
  struct IKEEXT_CERTIFICATE_CREDENTIAL1
    subject_name : FWP_BYTE_BLOB
    cert_hash : FWP_BYTE_BLOB
    flags : UInt32
    certificate : FWP_BYTE_BLOB
  end
  struct IKEEXT_CREDENTIAL1
    authentication_method_type : IKEEXT_AUTHENTICATION_METHOD_TYPE
    impersonation_type : IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE
    anonymous : IKEEXT_CREDENTIAL1_Anonymous_e__Union
  end
  struct IKEEXT_CREDENTIAL_PAIR1
    local_credentials : IKEEXT_CREDENTIAL1
    peer_credentials : IKEEXT_CREDENTIAL1
  end
  struct IKEEXT_CREDENTIALS1
    num_credentials : UInt32
    credentials : IKEEXT_CREDENTIAL_PAIR1*
  end
  struct IKEEXT_SA_DETAILS1
    sa_id : UInt64
    key_module_type : IKEEXT_KEY_MODULE_TYPE
    ip_version : FWP_IP_VERSION
    anonymous : IKEEXT_SA_DETAILS1_Anonymous_e__Union
    ike_traffic : IKEEXT_TRAFFIC0
    ike_proposal : IKEEXT_PROPOSAL0
    cookie_pair : IKEEXT_COOKIE_PAIR0
    ike_credentials : IKEEXT_CREDENTIALS1
    ike_policy_key : Guid
    virtual_if_tunnel_id : UInt64
    correlation_key : FWP_BYTE_BLOB
  end
  struct IKEEXT_CREDENTIAL2
    authentication_method_type : IKEEXT_AUTHENTICATION_METHOD_TYPE
    impersonation_type : IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE
    anonymous : IKEEXT_CREDENTIAL2_Anonymous_e__Union
  end
  struct IKEEXT_CREDENTIAL_PAIR2
    local_credentials : IKEEXT_CREDENTIAL2
    peer_credentials : IKEEXT_CREDENTIAL2
  end
  struct IKEEXT_CREDENTIALS2
    num_credentials : UInt32
    credentials : IKEEXT_CREDENTIAL_PAIR2*
  end
  struct IKEEXT_SA_DETAILS2
    sa_id : UInt64
    key_module_type : IKEEXT_KEY_MODULE_TYPE
    ip_version : FWP_IP_VERSION
    anonymous : IKEEXT_SA_DETAILS2_Anonymous_e__Union
    ike_traffic : IKEEXT_TRAFFIC0
    ike_proposal : IKEEXT_PROPOSAL0
    cookie_pair : IKEEXT_COOKIE_PAIR0
    ike_credentials : IKEEXT_CREDENTIALS2
    ike_policy_key : Guid
    virtual_if_tunnel_id : UInt64
    correlation_key : FWP_BYTE_BLOB
  end
  struct IKEEXT_SA_ENUM_TEMPLATE0
    local_sub_net : FWP_CONDITION_VALUE0
    remote_sub_net : FWP_CONDITION_VALUE0
    local_main_mode_cert_hash : FWP_BYTE_BLOB
  end
  struct IPSEC_SA_LIFETIME0
    lifetime_seconds : UInt32
    lifetime_kilobytes : UInt32
    lifetime_packets : UInt32
  end
  struct IPSEC_AUTH_TRANSFORM_ID0
    auth_type : IPSEC_AUTH_TYPE
    auth_config : UInt8
  end
  struct IPSEC_AUTH_TRANSFORM0
    auth_transform_id : IPSEC_AUTH_TRANSFORM_ID0
    crypto_module_id : Guid*
  end
  struct IPSEC_CIPHER_TRANSFORM_ID0
    cipher_type : IPSEC_CIPHER_TYPE
    cipher_config : UInt8
  end
  struct IPSEC_CIPHER_TRANSFORM0
    cipher_transform_id : IPSEC_CIPHER_TRANSFORM_ID0
    crypto_module_id : Guid*
  end
  struct IPSEC_AUTH_AND_CIPHER_TRANSFORM0
    auth_transform : IPSEC_AUTH_TRANSFORM0
    cipher_transform : IPSEC_CIPHER_TRANSFORM0
  end
  struct IPSEC_SA_TRANSFORM0
    ipsec_transform_type : IPSEC_TRANSFORM_TYPE
    anonymous : IPSEC_SA_TRANSFORM0_Anonymous_e__Union
  end
  struct IPSEC_PROPOSAL0
    lifetime : IPSEC_SA_LIFETIME0
    num_sa_transforms : UInt32
    sa_transforms : IPSEC_SA_TRANSFORM0*
    pfs_group : IPSEC_PFS_GROUP
  end
  struct IPSEC_SA_IDLE_TIMEOUT0
    idle_timeout_seconds : UInt32
    idle_timeout_seconds_fail_over : UInt32
  end
  struct IPSEC_TRAFFIC_SELECTOR0_
    protocol_id : UInt8
    port_start : UInt16
    port_end : UInt16
    ip_version : FWP_IP_VERSION
    anonymous1 : IPSEC_TRAFFIC_SELECTOR0__Anonymous1_e__Union
    anonymous2 : IPSEC_TRAFFIC_SELECTOR0__Anonymous2_e__Union
  end
  struct IPSEC_TRAFFIC_SELECTOR_POLICY0_
    flags : UInt32
    num_local_traffic_selectors : UInt32
    local_traffic_selectors : IPSEC_TRAFFIC_SELECTOR0_*
    num_remote_traffic_selectors : UInt32
    remote_traffic_selectors : IPSEC_TRAFFIC_SELECTOR0_*
  end
  struct IPSEC_TRANSPORT_POLICY0
    num_ipsec_proposals : UInt32
    ipsec_proposals : IPSEC_PROPOSAL0*
    flags : IPSEC_POLICY_FLAG
    nd_allow_clear_timeout_seconds : UInt32
    sa_idle_timeout : IPSEC_SA_IDLE_TIMEOUT0
    em_policy : IKEEXT_EM_POLICY0*
  end
  struct IPSEC_TRANSPORT_POLICY1
    num_ipsec_proposals : UInt32
    ipsec_proposals : IPSEC_PROPOSAL0*
    flags : IPSEC_POLICY_FLAG
    nd_allow_clear_timeout_seconds : UInt32
    sa_idle_timeout : IPSEC_SA_IDLE_TIMEOUT0
    em_policy : IKEEXT_EM_POLICY1*
  end
  struct IPSEC_TRANSPORT_POLICY2
    num_ipsec_proposals : UInt32
    ipsec_proposals : IPSEC_PROPOSAL0*
    flags : IPSEC_POLICY_FLAG
    nd_allow_clear_timeout_seconds : UInt32
    sa_idle_timeout : IPSEC_SA_IDLE_TIMEOUT0
    em_policy : IKEEXT_EM_POLICY2*
  end
  struct IPSEC_TUNNEL_ENDPOINTS0
    ip_version : FWP_IP_VERSION
    anonymous1 : IPSEC_TUNNEL_ENDPOINTS0_Anonymous1_e__Union
    anonymous2 : IPSEC_TUNNEL_ENDPOINTS0_Anonymous2_e__Union
  end
  struct IPSEC_TUNNEL_ENDPOINT0
    ip_version : FWP_IP_VERSION
    anonymous : IPSEC_TUNNEL_ENDPOINT0_Anonymous_e__Union
  end
  struct IPSEC_TUNNEL_ENDPOINTS2
    ip_version : FWP_IP_VERSION
    anonymous1 : IPSEC_TUNNEL_ENDPOINTS2_Anonymous1_e__Union
    anonymous2 : IPSEC_TUNNEL_ENDPOINTS2_Anonymous2_e__Union
    local_if_luid : UInt64
    remote_fqdn : LibC::LPWSTR
    num_addresses : UInt32
    remote_addresses : IPSEC_TUNNEL_ENDPOINT0*
  end
  struct IPSEC_TUNNEL_ENDPOINTS1
    ip_version : FWP_IP_VERSION
    anonymous1 : IPSEC_TUNNEL_ENDPOINTS1_Anonymous1_e__Union
    anonymous2 : IPSEC_TUNNEL_ENDPOINTS1_Anonymous2_e__Union
    local_if_luid : UInt64
  end
  struct IPSEC_TUNNEL_POLICY0
    flags : IPSEC_POLICY_FLAG
    num_ipsec_proposals : UInt32
    ipsec_proposals : IPSEC_PROPOSAL0*
    tunnel_endpoints : IPSEC_TUNNEL_ENDPOINTS0
    sa_idle_timeout : IPSEC_SA_IDLE_TIMEOUT0
    em_policy : IKEEXT_EM_POLICY0*
  end
  struct IPSEC_TUNNEL_POLICY1
    flags : IPSEC_POLICY_FLAG
    num_ipsec_proposals : UInt32
    ipsec_proposals : IPSEC_PROPOSAL0*
    tunnel_endpoints : IPSEC_TUNNEL_ENDPOINTS1
    sa_idle_timeout : IPSEC_SA_IDLE_TIMEOUT0
    em_policy : IKEEXT_EM_POLICY1*
  end
  struct IPSEC_TUNNEL_POLICY2
    flags : IPSEC_POLICY_FLAG
    num_ipsec_proposals : UInt32
    ipsec_proposals : IPSEC_PROPOSAL0*
    tunnel_endpoints : IPSEC_TUNNEL_ENDPOINTS2
    sa_idle_timeout : IPSEC_SA_IDLE_TIMEOUT0
    em_policy : IKEEXT_EM_POLICY2*
    fwd_path_sa_lifetime : UInt32
  end
  struct IPSEC_TUNNEL_POLICY3_
    flags : UInt32
    num_ipsec_proposals : UInt32
    ipsec_proposals : IPSEC_PROPOSAL0*
    tunnel_endpoints : IPSEC_TUNNEL_ENDPOINTS2
    sa_idle_timeout : IPSEC_SA_IDLE_TIMEOUT0
    em_policy : IKEEXT_EM_POLICY2*
    fwd_path_sa_lifetime : UInt32
    compartment_id : UInt32
    num_traffic_selector_policy : UInt32
    traffic_selector_policies : IPSEC_TRAFFIC_SELECTOR_POLICY0_*
  end
  struct IPSEC_KEYING_POLICY0
    num_key_mods : UInt32
    key_mod_keys : Guid*
  end
  struct IPSEC_KEYING_POLICY1
    num_key_mods : UInt32
    key_mod_keys : Guid*
    flags : UInt32
  end
  struct IPSEC_AGGREGATE_SA_STATISTICS0
    active_sas : UInt32
    pending_sa_negotiations : UInt32
    total_sas_added : UInt32
    total_sas_deleted : UInt32
    successful_rekeys : UInt32
    active_tunnels : UInt32
    offloaded_sas : UInt32
  end
  struct IPSEC_ESP_DROP_PACKET_STATISTICS0
    invalid_spis_on_inbound : UInt32
    decryption_failures_on_inbound : UInt32
    authentication_failures_on_inbound : UInt32
    replay_check_failures_on_inbound : UInt32
    sa_not_initialized_on_inbound : UInt32
  end
  struct IPSEC_AH_DROP_PACKET_STATISTICS0
    invalid_spis_on_inbound : UInt32
    authentication_failures_on_inbound : UInt32
    replay_check_failures_on_inbound : UInt32
    sa_not_initialized_on_inbound : UInt32
  end
  struct IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0
    invalid_spis_on_inbound : UInt32
    decryption_failures_on_inbound : UInt32
    authentication_failures_on_inbound : UInt32
    udp_esp_validation_failures_on_inbound : UInt32
    replay_check_failures_on_inbound : UInt32
    invalid_clear_text_inbound : UInt32
    sa_not_initialized_on_inbound : UInt32
    receive_over_incorrect_sa_inbound : UInt32
    secure_receives_not_matching_filters : UInt32
  end
  struct IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1
    invalid_spis_on_inbound : UInt32
    decryption_failures_on_inbound : UInt32
    authentication_failures_on_inbound : UInt32
    udp_esp_validation_failures_on_inbound : UInt32
    replay_check_failures_on_inbound : UInt32
    invalid_clear_text_inbound : UInt32
    sa_not_initialized_on_inbound : UInt32
    receive_over_incorrect_sa_inbound : UInt32
    secure_receives_not_matching_filters : UInt32
    total_drop_packets_inbound : UInt32
  end
  struct IPSEC_TRAFFIC_STATISTICS0
    encrypted_byte_count : UInt64
    authenticated_ah_byte_count : UInt64
    authenticated_esp_byte_count : UInt64
    transport_byte_count : UInt64
    tunnel_byte_count : UInt64
    offload_byte_count : UInt64
  end
  struct IPSEC_TRAFFIC_STATISTICS1
    encrypted_byte_count : UInt64
    authenticated_ah_byte_count : UInt64
    authenticated_esp_byte_count : UInt64
    transport_byte_count : UInt64
    tunnel_byte_count : UInt64
    offload_byte_count : UInt64
    total_successful_packets : UInt64
  end
  struct IPSEC_STATISTICS0
    aggregate_sa_statistics : IPSEC_AGGREGATE_SA_STATISTICS0
    esp_drop_packet_statistics : IPSEC_ESP_DROP_PACKET_STATISTICS0
    ah_drop_packet_statistics : IPSEC_AH_DROP_PACKET_STATISTICS0
    aggregate_drop_packet_statistics : IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0
    inbound_traffic_statistics : IPSEC_TRAFFIC_STATISTICS0
    outbound_traffic_statistics : IPSEC_TRAFFIC_STATISTICS0
  end
  struct IPSEC_STATISTICS1
    aggregate_sa_statistics : IPSEC_AGGREGATE_SA_STATISTICS0
    esp_drop_packet_statistics : IPSEC_ESP_DROP_PACKET_STATISTICS0
    ah_drop_packet_statistics : IPSEC_AH_DROP_PACKET_STATISTICS0
    aggregate_drop_packet_statistics : IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1
    inbound_traffic_statistics : IPSEC_TRAFFIC_STATISTICS1
    outbound_traffic_statistics : IPSEC_TRAFFIC_STATISTICS1
  end
  struct IPSEC_SA_AUTH_INFORMATION0
    auth_transform : IPSEC_AUTH_TRANSFORM0
    auth_key : FWP_BYTE_BLOB
  end
  struct IPSEC_SA_CIPHER_INFORMATION0
    cipher_transform : IPSEC_CIPHER_TRANSFORM0
    cipher_key : FWP_BYTE_BLOB
  end
  struct IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0
    sa_cipher_information : IPSEC_SA_CIPHER_INFORMATION0
    sa_auth_information : IPSEC_SA_AUTH_INFORMATION0
  end
  struct IPSEC_SA0
    spi : UInt32
    sa_transform_type : IPSEC_TRANSFORM_TYPE
    anonymous : IPSEC_SA0_Anonymous_e__Union
  end
  struct IPSEC_KEYMODULE_STATE0
    key_module_key : Guid
    state_blob : FWP_BYTE_BLOB
  end
  struct IPSEC_TOKEN0
    type : IPSEC_TOKEN_TYPE
    principal : IPSEC_TOKEN_PRINCIPAL
    mode : IPSEC_TOKEN_MODE
    token : UInt64
  end
  struct IPSEC_ID0
    mm_target_name : LibC::LPWSTR
    em_target_name : LibC::LPWSTR
    num_tokens : UInt32
    tokens : IPSEC_TOKEN0*
    explicit_credentials : UInt64
    logon_id : UInt64
  end
  struct IPSEC_SA_BUNDLE0
    flags : IPSEC_SA_BUNDLE_FLAGS
    lifetime : IPSEC_SA_LIFETIME0
    idle_timeout_seconds : UInt32
    nd_allow_clear_timeout_seconds : UInt32
    ipsec_id : IPSEC_ID0*
    nap_context : UInt32
    qm_sa_id : UInt32
    num_s_as : UInt32
    sa_list : IPSEC_SA0*
    key_module_state : IPSEC_KEYMODULE_STATE0*
    ip_version : FWP_IP_VERSION
    anonymous : IPSEC_SA_BUNDLE0_Anonymous_e__Union
    mm_sa_id : UInt64
    pfs_group : IPSEC_PFS_GROUP
  end
  struct IPSEC_SA_BUNDLE1
    flags : IPSEC_SA_BUNDLE_FLAGS
    lifetime : IPSEC_SA_LIFETIME0
    idle_timeout_seconds : UInt32
    nd_allow_clear_timeout_seconds : UInt32
    ipsec_id : IPSEC_ID0*
    nap_context : UInt32
    qm_sa_id : UInt32
    num_s_as : UInt32
    sa_list : IPSEC_SA0*
    key_module_state : IPSEC_KEYMODULE_STATE0*
    ip_version : FWP_IP_VERSION
    anonymous : IPSEC_SA_BUNDLE1_Anonymous_e__Union
    mm_sa_id : UInt64
    pfs_group : IPSEC_PFS_GROUP
    sa_lookup_context : Guid
    qm_filter_id : UInt64
  end
  struct IPSEC_TRAFFIC0
    ip_version : FWP_IP_VERSION
    anonymous1 : IPSEC_TRAFFIC0_Anonymous1_e__Union
    anonymous2 : IPSEC_TRAFFIC0_Anonymous2_e__Union
    traffic_type : IPSEC_TRAFFIC_TYPE
    anonymous3 : IPSEC_TRAFFIC0_Anonymous3_e__Union
    remote_port : UInt16
  end
  struct IPSEC_TRAFFIC1
    ip_version : FWP_IP_VERSION
    anonymous1 : IPSEC_TRAFFIC1_Anonymous1_e__Union
    anonymous2 : IPSEC_TRAFFIC1_Anonymous2_e__Union
    traffic_type : IPSEC_TRAFFIC_TYPE
    anonymous3 : IPSEC_TRAFFIC1_Anonymous3_e__Union
    remote_port : UInt16
    local_port : UInt16
    ip_protocol : UInt8
    local_if_luid : UInt64
    real_if_profile_id : UInt32
  end
  struct IPSEC_V4_UDP_ENCAPSULATION0
    local_udp_encap_port : UInt16
    remote_udp_encap_port : UInt16
  end
  struct IPSEC_GETSPI0
    inbound_ipsec_traffic : IPSEC_TRAFFIC0
    ip_version : FWP_IP_VERSION
    anonymous : IPSEC_GETSPI0_Anonymous_e__Union
    rng_crypto_module_id : Guid*
  end
  struct IPSEC_GETSPI1
    inbound_ipsec_traffic : IPSEC_TRAFFIC1
    ip_version : FWP_IP_VERSION
    anonymous : IPSEC_GETSPI1_Anonymous_e__Union
    rng_crypto_module_id : Guid*
  end
  struct IPSEC_SA_DETAILS0
    ip_version : FWP_IP_VERSION
    sa_direction : FWP_DIRECTION
    traffic : IPSEC_TRAFFIC0
    sa_bundle : IPSEC_SA_BUNDLE0
    anonymous : IPSEC_SA_DETAILS0_Anonymous_e__Union
    transport_filter : FWPM_FILTER0*
  end
  struct IPSEC_SA_DETAILS1
    ip_version : FWP_IP_VERSION
    sa_direction : FWP_DIRECTION
    traffic : IPSEC_TRAFFIC1
    sa_bundle : IPSEC_SA_BUNDLE1
    anonymous : IPSEC_SA_DETAILS1_Anonymous_e__Union
    transport_filter : FWPM_FILTER0*
    virtual_if_tunnel_info : IPSEC_VIRTUAL_IF_TUNNEL_INFO0
  end
  struct IPSEC_SA_CONTEXT0
    sa_context_id : UInt64
    inbound_sa : IPSEC_SA_DETAILS0*
    outbound_sa : IPSEC_SA_DETAILS0*
  end
  struct IPSEC_SA_CONTEXT1
    sa_context_id : UInt64
    inbound_sa : IPSEC_SA_DETAILS1*
    outbound_sa : IPSEC_SA_DETAILS1*
  end
  struct IPSEC_SA_CONTEXT_ENUM_TEMPLATE0
    local_sub_net : FWP_CONDITION_VALUE0
    remote_sub_net : FWP_CONDITION_VALUE0
  end
  struct IPSEC_SA_ENUM_TEMPLATE0
    sa_direction : FWP_DIRECTION
  end
  struct IPSEC_SA_CONTEXT_SUBSCRIPTION0
    enum_template : IPSEC_SA_CONTEXT_ENUM_TEMPLATE0*
    flags : UInt32
    session_key : Guid
  end
  struct IPSEC_SA_CONTEXT_CHANGE0
    change_type : IPSEC_SA_CONTEXT_EVENT_TYPE0
    sa_context_id : UInt64
  end
  struct IPSEC_ADDRESS_INFO0
    num_v4_addresses : UInt32
    v4_addresses : UInt32*
    num_v6_addresses : UInt32
    v6_addresses : FWP_BYTE_ARRAY16*
  end
  struct IPSEC_DOSP_OPTIONS0
    state_idle_timeout_seconds : UInt32
    per_ip_rate_limit_queue_idle_timeout_seconds : UInt32
    ip_v6_i_psec_unauth_dscp : UInt8
    ip_v6_i_psec_unauth_rate_limit_bytes_per_sec : UInt32
    ip_v6_i_psec_unauth_per_ip_rate_limit_bytes_per_sec : UInt32
    ip_v6_i_psec_auth_dscp : UInt8
    ip_v6_i_psec_auth_rate_limit_bytes_per_sec : UInt32
    icmp_v6_dscp : UInt8
    icmp_v6_rate_limit_bytes_per_sec : UInt32
    ip_v6_filter_exempt_dscp : UInt8
    ip_v6_filter_exempt_rate_limit_bytes_per_sec : UInt32
    def_block_exempt_dscp : UInt8
    def_block_exempt_rate_limit_bytes_per_sec : UInt32
    max_state_entries : UInt32
    max_per_ip_rate_limit_queues : UInt32
    flags : IPSEC_DOSP_FLAGS
    num_public_if_luids : UInt32
    public_if_luids : UInt64*
    num_internal_if_luids : UInt32
    internal_if_luids : UInt64*
    public_v6_addr_mask : FWP_V6_ADDR_AND_MASK
    internal_v6_addr_mask : FWP_V6_ADDR_AND_MASK
  end
  struct IPSEC_DOSP_STATISTICS0
    total_state_entries_created : UInt64
    current_state_entries : UInt64
    total_inbound_allowed_i_pv6_i_psec_unauth_pkts : UInt64
    total_inbound_ratelimit_discarded_i_pv6_i_psec_unauth_pkts : UInt64
    total_inbound_per_ip_ratelimit_discarded_i_pv6_i_psec_unauth_pkts : UInt64
    total_inbound_other_discarded_i_pv6_i_psec_unauth_pkts : UInt64
    total_inbound_allowed_i_pv6_i_psec_auth_pkts : UInt64
    total_inbound_ratelimit_discarded_i_pv6_i_psec_auth_pkts : UInt64
    total_inbound_other_discarded_i_pv6_i_psec_auth_pkts : UInt64
    total_inbound_allowed_icm_pv6_pkts : UInt64
    total_inbound_ratelimit_discarded_icm_pv6_pkts : UInt64
    total_inbound_allowed_i_pv6_filter_exempt_pkts : UInt64
    total_inbound_ratelimit_discarded_i_pv6_filter_exempt_pkts : UInt64
    total_inbound_discarded_i_pv6_filter_block_pkts : UInt64
    total_inbound_allowed_def_block_exempt_pkts : UInt64
    total_inbound_ratelimit_discarded_def_block_exempt_pkts : UInt64
    total_inbound_discarded_def_block_pkts : UInt64
    current_inbound_i_pv6_i_psec_unauth_per_ip_rate_limit_queues : UInt64
  end
  struct IPSEC_DOSP_STATE0
    public_host_v6_addr : UInt8[16]*
    internal_host_v6_addr : UInt8[16]*
    total_inbound_i_pv6_i_psec_auth_packets : UInt64
    total_outbound_i_pv6_i_psec_auth_packets : UInt64
    duration_secs : UInt32
  end
  struct IPSEC_DOSP_STATE_ENUM_TEMPLATE0
    public_v6_addr_mask : FWP_V6_ADDR_AND_MASK
    internal_v6_addr_mask : FWP_V6_ADDR_AND_MASK
  end
  struct IPSEC_KEY_MANAGER0
    key_manager_key : Guid
    display_data : FWPM_DISPLAY_DATA0
    flags : UInt32
    key_dictation_timeout_hint : UInt8
  end
  struct FWPM_SESSION0
    session_key : Guid
    display_data : FWPM_DISPLAY_DATA0
    flags : UInt32
    txn_wait_timeout_in_m_sec : UInt32
    process_id : UInt32
    sid : SID*
    username : LibC::LPWSTR
    kernel_mode : LibC::BOOL
  end
  struct FWPM_SESSION_ENUM_TEMPLATE0
    reserved : UInt64
  end
  struct FWPM_PROVIDER0
    provider_key : Guid
    display_data : FWPM_DISPLAY_DATA0
    flags : UInt32
    provider_data : FWP_BYTE_BLOB
    service_name : LibC::LPWSTR
  end
  struct FWPM_PROVIDER_ENUM_TEMPLATE0
    reserved : UInt64
  end
  struct FWPM_PROVIDER_CHANGE0
    change_type : FWPM_CHANGE_TYPE
    provider_key : Guid
  end
  struct FWPM_PROVIDER_SUBSCRIPTION0
    enum_template : FWPM_PROVIDER_ENUM_TEMPLATE0*
    flags : UInt32
    session_key : Guid
  end
  struct FWPM_CLASSIFY_OPTION0
    type : FWP_CLASSIFY_OPTION_TYPE
    value : FWP_VALUE0
  end
  struct FWPM_CLASSIFY_OPTIONS0
    num_options : UInt32
    options : FWPM_CLASSIFY_OPTION0*
  end
  struct FWPM_PROVIDER_CONTEXT0
    provider_context_key : Guid
    display_data : FWPM_DISPLAY_DATA0
    flags : UInt32
    provider_key : Guid*
    provider_data : FWP_BYTE_BLOB
    type : FWPM_PROVIDER_CONTEXT_TYPE
    anonymous : FWPM_PROVIDER_CONTEXT0_Anonymous_e__Union
    provider_context_id : UInt64
  end
  struct FWPM_PROVIDER_CONTEXT1
    provider_context_key : Guid
    display_data : FWPM_DISPLAY_DATA0
    flags : UInt32
    provider_key : Guid*
    provider_data : FWP_BYTE_BLOB
    type : FWPM_PROVIDER_CONTEXT_TYPE
    anonymous : FWPM_PROVIDER_CONTEXT1_Anonymous_e__Union
    provider_context_id : UInt64
  end
  struct FWPM_PROVIDER_CONTEXT2
    provider_context_key : Guid
    display_data : FWPM_DISPLAY_DATA0
    flags : UInt32
    provider_key : Guid*
    provider_data : FWP_BYTE_BLOB
    type : FWPM_PROVIDER_CONTEXT_TYPE
    anonymous : FWPM_PROVIDER_CONTEXT2_Anonymous_e__Union
    provider_context_id : UInt64
  end
  struct FWPM_PROVIDER_CONTEXT3_
    provider_context_key : Guid
    display_data : FWPM_DISPLAY_DATA0
    flags : UInt32
    provider_key : Guid*
    provider_data : FWP_BYTE_BLOB
    type : FWPM_PROVIDER_CONTEXT_TYPE
    anonymous : FWPM_PROVIDER_CONTEXT3__Anonymous_e__Union
    provider_context_id : UInt64
  end
  struct FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0
    provider_key : Guid*
    provider_context_type : FWPM_PROVIDER_CONTEXT_TYPE
  end
  struct FWPM_PROVIDER_CONTEXT_CHANGE0
    change_type : FWPM_CHANGE_TYPE
    provider_context_key : Guid
    provider_context_id : UInt64
  end
  struct FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0
    enum_template : FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0*
    flags : FWPM_SUBSCRIPTION_FLAGS
    session_key : Guid
  end
  struct FWPM_SUBLAYER0
    sub_layer_key : Guid
    display_data : FWPM_DISPLAY_DATA0
    flags : UInt32
    provider_key : Guid*
    provider_data : FWP_BYTE_BLOB
    weight : UInt16
  end
  struct FWPM_SUBLAYER_ENUM_TEMPLATE0
    provider_key : Guid*
  end
  struct FWPM_SUBLAYER_CHANGE0
    change_type : FWPM_CHANGE_TYPE
    sub_layer_key : Guid
  end
  struct FWPM_SUBLAYER_SUBSCRIPTION0
    enum_template : FWPM_SUBLAYER_ENUM_TEMPLATE0*
    flags : FWPM_SUBSCRIPTION_FLAGS
    session_key : Guid
  end
  struct FWPM_FIELD0
    field_key : Guid*
    type : FWPM_FIELD_TYPE
    data_type : FWP_DATA_TYPE
  end
  struct FWPM_LAYER0
    layer_key : Guid
    display_data : FWPM_DISPLAY_DATA0
    flags : UInt32
    num_fields : UInt32
    field : FWPM_FIELD0*
    default_sub_layer_key : Guid
    layer_id : UInt16
  end
  struct FWPM_LAYER_ENUM_TEMPLATE0
    reserved : UInt64
  end
  struct FWPM_CALLOUT0
    callout_key : Guid
    display_data : FWPM_DISPLAY_DATA0
    flags : UInt32
    provider_key : Guid*
    provider_data : FWP_BYTE_BLOB
    applicable_layer : Guid
    callout_id : UInt32
  end
  struct FWPM_CALLOUT_ENUM_TEMPLATE0
    provider_key : Guid*
    layer_key : Guid
  end
  struct FWPM_CALLOUT_CHANGE0
    change_type : FWPM_CHANGE_TYPE
    callout_key : Guid
    callout_id : UInt32
  end
  struct FWPM_CALLOUT_SUBSCRIPTION0
    enum_template : FWPM_CALLOUT_ENUM_TEMPLATE0*
    flags : UInt32
    session_key : Guid
  end
  struct FWPM_ACTION0
    type : UInt32
    anonymous : FWPM_ACTION0_Anonymous_e__Union
  end
  struct FWPM_FILTER_CONDITION0
    field_key : Guid
    match_type : FWP_MATCH_TYPE
    condition_value : FWP_CONDITION_VALUE0
  end
  struct FWPM_FILTER0
    filter_key : Guid
    display_data : FWPM_DISPLAY_DATA0
    flags : FWPM_FILTER_FLAGS
    provider_key : Guid*
    provider_data : FWP_BYTE_BLOB
    layer_key : Guid
    sub_layer_key : Guid
    weight : FWP_VALUE0
    num_filter_conditions : UInt32
    filter_condition : FWPM_FILTER_CONDITION0*
    action : FWPM_ACTION0
    anonymous : FWPM_FILTER0_Anonymous_e__Union
    reserved : Guid*
    filter_id : UInt64
    effective_weight : FWP_VALUE0
  end
  struct FWPM_FILTER_ENUM_TEMPLATE0
    provider_key : Guid*
    layer_key : Guid
    enum_type : FWP_FILTER_ENUM_TYPE
    flags : UInt32
    provider_context_template : FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0*
    num_filter_conditions : UInt32
    filter_condition : FWPM_FILTER_CONDITION0*
    action_mask : UInt32
    callout_key : Guid*
  end
  struct FWPM_FILTER_CHANGE0
    change_type : FWPM_CHANGE_TYPE
    filter_key : Guid
    filter_id : UInt64
  end
  struct FWPM_FILTER_SUBSCRIPTION0
    enum_template : FWPM_FILTER_ENUM_TEMPLATE0*
    flags : UInt32
    session_key : Guid
  end
  struct FWPM_LAYER_STATISTICS0
    layer_id : Guid
    classify_permit_count : UInt32
    classify_block_count : UInt32
    classify_veto_count : UInt32
    num_cache_entries : UInt32
  end
  struct FWPM_STATISTICS0
    num_layer_statistics : UInt32
    layer_statistics : FWPM_LAYER_STATISTICS0*
    inbound_allowed_connections_v4 : UInt32
    inbound_blocked_connections_v4 : UInt32
    outbound_allowed_connections_v4 : UInt32
    outbound_blocked_connections_v4 : UInt32
    inbound_allowed_connections_v6 : UInt32
    inbound_blocked_connections_v6 : UInt32
    outbound_allowed_connections_v6 : UInt32
    outbound_blocked_connections_v6 : UInt32
    inbound_active_connections_v4 : UInt32
    outbound_active_connections_v4 : UInt32
    inbound_active_connections_v6 : UInt32
    outbound_active_connections_v6 : UInt32
    reauth_dir_inbound : UInt64
    reauth_dir_outbound : UInt64
    reauth_family_v4 : UInt64
    reauth_family_v6 : UInt64
    reauth_proto_other : UInt64
    reauth_proto_i_pv4 : UInt64
    reauth_proto_i_pv6 : UInt64
    reauth_proto_icmp : UInt64
    reauth_proto_icmp6 : UInt64
    reauth_proto_udp : UInt64
    reauth_proto_tcp : UInt64
    reauth_reason_policy_change : UInt64
    reauth_reason_new_arrival_interface : UInt64
    reauth_reason_new_next_hop_interface : UInt64
    reauth_reason_profile_crossing : UInt64
    reauth_reason_classify_completion : UInt64
    reauth_reason_ip_sec_properties_changed : UInt64
    reauth_reason_mid_stream_inspection : UInt64
    reauth_reason_socket_property_changed : UInt64
    reauth_reason_new_inbound_m_cast_b_cast_packet : UInt64
    reauth_reason_edp_policy_changed : UInt64
    reauth_reason_proxy_handle_changed : UInt64
  end
  struct FWPM_NET_EVENT_HEADER0
    time_stamp : FILETIME
    flags : UInt32
    ip_version : FWP_IP_VERSION
    ip_protocol : UInt8
    anonymous1 : FWPM_NET_EVENT_HEADER0_Anonymous1_e__Union
    anonymous2 : FWPM_NET_EVENT_HEADER0_Anonymous2_e__Union
    local_port : UInt16
    remote_port : UInt16
    scope_id : UInt32
    app_id : FWP_BYTE_BLOB
    user_id : SID*
  end
  struct FWPM_NET_EVENT_HEADER1
    time_stamp : FILETIME
    flags : UInt32
    ip_version : FWP_IP_VERSION
    ip_protocol : UInt8
    anonymous1 : FWPM_NET_EVENT_HEADER1_Anonymous1_e__Union
    anonymous2 : FWPM_NET_EVENT_HEADER1_Anonymous2_e__Union
    local_port : UInt16
    remote_port : UInt16
    scope_id : UInt32
    app_id : FWP_BYTE_BLOB
    user_id : SID*
    anonymous3 : FWPM_NET_EVENT_HEADER1_Anonymous3_e__Union
  end
  struct FWPM_NET_EVENT_HEADER1_Anonymous3_e__Union_Anonymous_e__Struct
    reserved1 : FWP_AF
    anonymous : FWPM_NET_EVENT_HEADER1_Anonymous3_e__Union_Anonymous_e__Struct_Anonymous_e__Union
  end
  struct FWPM_NET_EVENT_HEADER1_Anonymous3_e__Union_Anonymous_e__Struct_Anonymous_e__Union_Anonymous_e__Struct
    reserved2 : FWP_BYTE_ARRAY6
    reserved3 : FWP_BYTE_ARRAY6
    reserved4 : UInt32
    reserved5 : UInt32
    reserved6 : UInt16
    reserved7 : UInt32
    reserved8 : UInt32
    reserved9 : UInt16
    reserved10 : UInt64
  end
  struct FWPM_NET_EVENT_HEADER2
    time_stamp : FILETIME
    flags : UInt32
    ip_version : FWP_IP_VERSION
    ip_protocol : UInt8
    anonymous1 : FWPM_NET_EVENT_HEADER2_Anonymous1_e__Union
    anonymous2 : FWPM_NET_EVENT_HEADER2_Anonymous2_e__Union
    local_port : UInt16
    remote_port : UInt16
    scope_id : UInt32
    app_id : FWP_BYTE_BLOB
    user_id : SID*
    address_family : FWP_AF
    package_sid : SID*
  end
  struct FWPM_NET_EVENT_HEADER3
    time_stamp : FILETIME
    flags : UInt32
    ip_version : FWP_IP_VERSION
    ip_protocol : UInt8
    anonymous1 : FWPM_NET_EVENT_HEADER3_Anonymous1_e__Union
    anonymous2 : FWPM_NET_EVENT_HEADER3_Anonymous2_e__Union
    local_port : UInt16
    remote_port : UInt16
    scope_id : UInt32
    app_id : FWP_BYTE_BLOB
    user_id : SID*
    address_family : FWP_AF
    package_sid : SID*
    enterprise_id : LibC::LPWSTR
    policy_flags : UInt64
    effective_name : FWP_BYTE_BLOB
  end
  struct FWPM_NET_EVENT_IKEEXT_MM_FAILURE0
    failure_error_code : UInt32
    failure_point : IPSEC_FAILURE_POINT
    flags : UInt32
    keying_module_type : IKEEXT_KEY_MODULE_TYPE
    mm_state : IKEEXT_MM_SA_STATE
    sa_role : IKEEXT_SA_ROLE
    mm_auth_method : IKEEXT_AUTHENTICATION_METHOD_TYPE
    end_cert_hash : UInt8[20]*
    mm_id : UInt64
    mm_filter_id : UInt64
  end
  struct FWPM_NET_EVENT_IKEEXT_MM_FAILURE1
    failure_error_code : UInt32
    failure_point : IPSEC_FAILURE_POINT
    flags : UInt32
    keying_module_type : IKEEXT_KEY_MODULE_TYPE
    mm_state : IKEEXT_MM_SA_STATE
    sa_role : IKEEXT_SA_ROLE
    mm_auth_method : IKEEXT_AUTHENTICATION_METHOD_TYPE
    end_cert_hash : UInt8[20]*
    mm_id : UInt64
    mm_filter_id : UInt64
    local_principal_name_for_auth : LibC::LPWSTR
    remote_principal_name_for_auth : LibC::LPWSTR
    num_local_principal_group_sids : UInt32
    local_principal_group_sids : LibC::LPWSTR*
    num_remote_principal_group_sids : UInt32
    remote_principal_group_sids : LibC::LPWSTR*
  end
  struct FWPM_NET_EVENT_IKEEXT_MM_FAILURE2_
    failure_error_code : UInt32
    failure_point : IPSEC_FAILURE_POINT
    flags : UInt32
    keying_module_type : IKEEXT_KEY_MODULE_TYPE
    mm_state : IKEEXT_MM_SA_STATE
    sa_role : IKEEXT_SA_ROLE
    mm_auth_method : IKEEXT_AUTHENTICATION_METHOD_TYPE
    end_cert_hash : UInt8[20]*
    mm_id : UInt64
    mm_filter_id : UInt64
    local_principal_name_for_auth : LibC::LPWSTR
    remote_principal_name_for_auth : LibC::LPWSTR
    num_local_principal_group_sids : UInt32
    local_principal_group_sids : LibC::LPWSTR*
    num_remote_principal_group_sids : UInt32
    remote_principal_group_sids : LibC::LPWSTR*
    provider_context_key : Guid*
  end
  struct FWPM_NET_EVENT_IKEEXT_QM_FAILURE0
    failure_error_code : UInt32
    failure_point : IPSEC_FAILURE_POINT
    keying_module_type : IKEEXT_KEY_MODULE_TYPE
    qm_state : IKEEXT_QM_SA_STATE
    sa_role : IKEEXT_SA_ROLE
    sa_traffic_type : IPSEC_TRAFFIC_TYPE
    anonymous1 : FWPM_NET_EVENT_IKEEXT_QM_FAILURE0_Anonymous1_e__Union
    anonymous2 : FWPM_NET_EVENT_IKEEXT_QM_FAILURE0_Anonymous2_e__Union
    qm_filter_id : UInt64
  end
  struct FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_
    failure_error_code : UInt32
    failure_point : IPSEC_FAILURE_POINT
    keying_module_type : IKEEXT_KEY_MODULE_TYPE
    qm_state : IKEEXT_QM_SA_STATE
    sa_role : IKEEXT_SA_ROLE
    sa_traffic_type : IPSEC_TRAFFIC_TYPE
    anonymous1 : FWPM_NET_EVENT_IKEEXT_QM_FAILURE1__Anonymous1_e__Union
    anonymous2 : FWPM_NET_EVENT_IKEEXT_QM_FAILURE1__Anonymous2_e__Union
    qm_filter_id : UInt64
    mm_sa_luid : UInt64
    mm_provider_context_key : Guid
  end
  struct FWPM_NET_EVENT_IKEEXT_EM_FAILURE0
    failure_error_code : UInt32
    failure_point : IPSEC_FAILURE_POINT
    flags : UInt32
    em_state : IKEEXT_EM_SA_STATE
    sa_role : IKEEXT_SA_ROLE
    em_auth_method : IKEEXT_AUTHENTICATION_METHOD_TYPE
    end_cert_hash : UInt8[20]*
    mm_id : UInt64
    qm_filter_id : UInt64
  end
  struct FWPM_NET_EVENT_IKEEXT_EM_FAILURE1
    failure_error_code : UInt32
    failure_point : IPSEC_FAILURE_POINT
    flags : UInt32
    em_state : IKEEXT_EM_SA_STATE
    sa_role : IKEEXT_SA_ROLE
    em_auth_method : IKEEXT_AUTHENTICATION_METHOD_TYPE
    end_cert_hash : UInt8[20]*
    mm_id : UInt64
    qm_filter_id : UInt64
    local_principal_name_for_auth : LibC::LPWSTR
    remote_principal_name_for_auth : LibC::LPWSTR
    num_local_principal_group_sids : UInt32
    local_principal_group_sids : LibC::LPWSTR*
    num_remote_principal_group_sids : UInt32
    remote_principal_group_sids : LibC::LPWSTR*
    sa_traffic_type : IPSEC_TRAFFIC_TYPE
  end
  struct FWPM_NET_EVENT_CLASSIFY_DROP0
    filter_id : UInt64
    layer_id : UInt16
  end
  struct FWPM_NET_EVENT_CLASSIFY_DROP1
    filter_id : UInt64
    layer_id : UInt16
    reauth_reason : UInt32
    original_profile : UInt32
    current_profile : UInt32
    ms_fwp_direction : UInt32
    is_loopback : LibC::BOOL
  end
  struct FWPM_NET_EVENT_CLASSIFY_DROP2
    filter_id : UInt64
    layer_id : UInt16
    reauth_reason : UInt32
    original_profile : UInt32
    current_profile : UInt32
    ms_fwp_direction : UInt32
    is_loopback : LibC::BOOL
    v_switch_id : FWP_BYTE_BLOB
    v_switch_source_port : UInt32
    v_switch_destination_port : UInt32
  end
  struct FWPM_NET_EVENT_CLASSIFY_DROP_MAC0
    local_mac_addr : FWP_BYTE_ARRAY6
    remote_mac_addr : FWP_BYTE_ARRAY6
    media_type : UInt32
    if_type : UInt32
    ether_type : UInt16
    ndis_port_number : UInt32
    reserved : UInt32
    vlan_tag : UInt16
    if_luid : UInt64
    filter_id : UInt64
    layer_id : UInt16
    reauth_reason : UInt32
    original_profile : UInt32
    current_profile : UInt32
    ms_fwp_direction : UInt32
    is_loopback : LibC::BOOL
    v_switch_id : FWP_BYTE_BLOB
    v_switch_source_port : UInt32
    v_switch_destination_port : UInt32
  end
  struct FWPM_NET_EVENT_CLASSIFY_ALLOW0
    filter_id : UInt64
    layer_id : UInt16
    reauth_reason : UInt32
    original_profile : UInt32
    current_profile : UInt32
    ms_fwp_direction : UInt32
    is_loopback : LibC::BOOL
  end
  struct FWPM_NET_EVENT_IPSEC_KERNEL_DROP0
    failure_status : Int32
    direction : FWP_DIRECTION
    spi : UInt32
    filter_id : UInt64
    layer_id : UInt16
  end
  struct FWPM_NET_EVENT_IPSEC_DOSP_DROP0
    ip_version : FWP_IP_VERSION
    anonymous1 : FWPM_NET_EVENT_IPSEC_DOSP_DROP0_Anonymous1_e__Union
    anonymous2 : FWPM_NET_EVENT_IPSEC_DOSP_DROP0_Anonymous2_e__Union
    failure_status : Int32
    direction : FWP_DIRECTION
  end
  struct FWPM_NET_EVENT_CAPABILITY_DROP0
    network_capability_id : FWPM_APPC_NETWORK_CAPABILITY_TYPE
    filter_id : UInt64
    is_loopback : LibC::BOOL
  end
  struct FWPM_NET_EVENT_CAPABILITY_ALLOW0
    network_capability_id : FWPM_APPC_NETWORK_CAPABILITY_TYPE
    filter_id : UInt64
    is_loopback : LibC::BOOL
  end
  struct FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0_
    spi : UInt32
  end
  struct FWPM_NET_EVENT0
    header : FWPM_NET_EVENT_HEADER0
    type : FWPM_NET_EVENT_TYPE
    anonymous : FWPM_NET_EVENT0_Anonymous_e__Union
  end
  struct FWPM_NET_EVENT1
    header : FWPM_NET_EVENT_HEADER1
    type : FWPM_NET_EVENT_TYPE
    anonymous : FWPM_NET_EVENT1_Anonymous_e__Union
  end
  struct FWPM_NET_EVENT2
    header : FWPM_NET_EVENT_HEADER2
    type : FWPM_NET_EVENT_TYPE
    anonymous : FWPM_NET_EVENT2_Anonymous_e__Union
  end
  struct FWPM_NET_EVENT3
    header : FWPM_NET_EVENT_HEADER3
    type : FWPM_NET_EVENT_TYPE
    anonymous : FWPM_NET_EVENT3_Anonymous_e__Union
  end
  struct FWPM_NET_EVENT4_
    header : FWPM_NET_EVENT_HEADER3
    type : FWPM_NET_EVENT_TYPE
    anonymous : FWPM_NET_EVENT4__Anonymous_e__Union
  end
  struct FWPM_NET_EVENT5_
    header : FWPM_NET_EVENT_HEADER3
    type : FWPM_NET_EVENT_TYPE
    anonymous : FWPM_NET_EVENT5__Anonymous_e__Union
  end
  struct FWPM_NET_EVENT_ENUM_TEMPLATE0
    start_time : FILETIME
    end_time : FILETIME
    num_filter_conditions : UInt32
    filter_condition : FWPM_FILTER_CONDITION0*
  end
  struct FWPM_NET_EVENT_SUBSCRIPTION0
    enum_template : FWPM_NET_EVENT_ENUM_TEMPLATE0*
    flags : UInt32
    session_key : Guid
  end
  struct FWPM_SYSTEM_PORTS_BY_TYPE0
    type : FWPM_SYSTEM_PORT_TYPE
    num_ports : UInt32
    ports : UInt16*
  end
  struct FWPM_SYSTEM_PORTS0
    num_types : UInt32
    types : FWPM_SYSTEM_PORTS_BY_TYPE0*
  end
  struct FWPM_CONNECTION0
    connection_id : UInt64
    ip_version : FWP_IP_VERSION
    anonymous1 : FWPM_CONNECTION0_Anonymous1_e__Union
    anonymous2 : FWPM_CONNECTION0_Anonymous2_e__Union
    provider_key : Guid*
    ipsec_traffic_mode_type : IPSEC_TRAFFIC_TYPE
    key_module_type : IKEEXT_KEY_MODULE_TYPE
    mm_crypto : IKEEXT_PROPOSAL0
    mm_peer : IKEEXT_CREDENTIAL2
    em_peer : IKEEXT_CREDENTIAL2
    bytes_transferred_in : UInt64
    bytes_transferred_out : UInt64
    bytes_transferred_total : UInt64
    start_sys_time : FILETIME
  end
  struct FWPM_CONNECTION_ENUM_TEMPLATE0
    connection_id : UInt64
    flags : UInt32
  end
  struct FWPM_CONNECTION_SUBSCRIPTION0
    enum_template : FWPM_CONNECTION_ENUM_TEMPLATE0*
    flags : UInt32
    session_key : Guid
  end
  struct FWPM_VSWITCH_EVENT0
    event_type : FWPM_VSWITCH_EVENT_TYPE
    v_switch_id : LibC::LPWSTR
    anonymous : FWPM_VSWITCH_EVENT0_Anonymous_e__Union
  end
  struct FWPM_VSWITCH_EVENT0_Anonymous_e__Union_reorderInfo_e__Struct
    in_required_position : LibC::BOOL
    numv_switch_filter_extensions : UInt32
    v_switch_filter_extensions : LibC::LPWSTR*
  end
  struct FWPM_VSWITCH_EVENT0_Anonymous_e__Union_positionInfo_e__Struct
    numv_switch_filter_extensions : UInt32
    v_switch_filter_extensions : LibC::LPWSTR*
  end
  struct FWPM_VSWITCH_EVENT_SUBSCRIPTION0
    flags : UInt32
    session_key : Guid
  end
  struct IPSEC_KEY_MANAGER_CALLBACKS0
    reserved : Guid
    flags : UInt32
    key_dictation_check : IPSEC_KEY_MANAGER_KEY_DICTATION_CHECK0
    key_dictation : IPSEC_KEY_MANAGER_DICTATE_KEY0
    key_notify : IPSEC_KEY_MANAGER_NOTIFY_KEY0
  end
  struct DL_OUI_Anonymous_e__Struct
    _bitfield : UInt8
  end
  struct DL_EUI48_Anonymous_e__Struct
    oui : DL_OUI
    ei48 : DL_EI48
  end
  struct DL_EUI64_Anonymous_e__Struct
    oui : DL_OUI
    anonymous : DL_EUI64_Anonymous_e__Struct_Anonymous_e__Union
  end
  struct DL_EUI64_Anonymous_e__Struct_Anonymous_e__Union_Anonymous_e__Struct
    type : UInt8
    tse : UInt8
    ei48 : DL_EI48
  end
  struct SNAP_HEADER
    dsap : UInt8
    ssap : UInt8
    control : UInt8
    oui : UInt8[3]*
    type : UInt16
  end
  struct ETHERNET_HEADER
    destination : DL_EUI48
    source : DL_EUI48
    anonymous : ETHERNET_HEADER_Anonymous_e__Union
  end
  struct VLAN_TAG
    anonymous : VLAN_TAG_Anonymous_e__Union
    type : UInt16
  end
  struct VLAN_TAG_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt16
  end
  struct ICMP_HEADER
    type : UInt8
    code : UInt8
    checksum : UInt16
  end
  struct ICMP_MESSAGE
    header : ICMP_HEADER
    data : ICMP_MESSAGE_Data_e__Union
  end
  struct IPV4_HEADER
    anonymous1 : IPV4_HEADER_Anonymous1_e__Union
    anonymous2 : IPV4_HEADER_Anonymous2_e__Union
    total_length : UInt16
    identification : UInt16
    anonymous3 : IPV4_HEADER_Anonymous3_e__Union
    time_to_live : UInt8
    protocol : UInt8
    header_checksum : UInt16
    source_address : IN_ADDR
    destination_address : IN_ADDR
  end
  struct IPV4_HEADER_Anonymous3_e__Union_Anonymous_e__Struct
    _bitfield : UInt16
  end
  struct IPV4_HEADER_Anonymous2_e__Union_Anonymous_e__Struct
    _bitfield : UInt8
  end
  struct IPV4_HEADER_Anonymous1_e__Union_Anonymous_e__Struct
    _bitfield : UInt8
  end
  struct IPV4_OPTION_HEADER
    anonymous : IPV4_OPTION_HEADER_Anonymous_e__Union
    option_length : UInt8
  end
  struct IPV4_OPTION_HEADER_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt8
  end
  struct IPV4_TIMESTAMP_OPTION
    option_header : IPV4_OPTION_HEADER
    pointer : UInt8
    anonymous : IPV4_TIMESTAMP_OPTION_Anonymous_e__Union
  end
  struct IPV4_TIMESTAMP_OPTION_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt8
  end
  struct IPV4_ROUTING_HEADER
    option_header : IPV4_OPTION_HEADER
    pointer : UInt8
  end
  struct ICMPV4_ROUTER_SOLICIT
    rs_header : ICMP_MESSAGE
  end
  struct ICMPV4_ROUTER_ADVERT_HEADER
    ra_header : ICMP_MESSAGE
  end
  struct ICMPV4_ROUTER_ADVERT_ENTRY
    router_advert_addr : IN_ADDR
    preference_level : Int32
  end
  struct ICMPV4_TIMESTAMP_MESSAGE
    header : ICMP_MESSAGE
    originate_timestamp : UInt32
    receive_timestamp : UInt32
    transmit_timestamp : UInt32
  end
  struct ICMPV4_ADDRESS_MASK_MESSAGE
    header : ICMP_MESSAGE
    address_mask : UInt32
  end
  struct ARP_HEADER
    hardware_address_space : UInt16
    protocol_address_space : UInt16
    hardware_address_length : UInt8
    protocol_address_length : UInt8
    opcode : UInt16
    sender_hardware_address : UInt8[0]*
  end
  struct IGMP_HEADER
    anonymous1 : IGMP_HEADER_Anonymous1_e__Union
    anonymous2 : IGMP_HEADER_Anonymous2_e__Union
    checksum : UInt16
    multicast_address : IN_ADDR
  end
  struct IGMP_HEADER_Anonymous1_e__Union_Anonymous_e__Struct
    _bitfield : UInt8
  end
  struct IGMPV3_QUERY_HEADER
    type : UInt8
    anonymous1 : IGMPV3_QUERY_HEADER_Anonymous1_e__Union
    checksum : UInt16
    multicast_address : IN_ADDR
    _bitfield : UInt8
    anonymous2 : IGMPV3_QUERY_HEADER_Anonymous2_e__Union
    source_count : UInt16
  end
  struct IGMPV3_QUERY_HEADER_Anonymous2_e__Union_Anonymous_e__Struct
    _bitfield : UInt8
  end
  struct IGMPV3_QUERY_HEADER_Anonymous1_e__Union_Anonymous_e__Struct
    _bitfield : UInt8
  end
  struct IGMPV3_REPORT_RECORD_HEADER
    type : UInt8
    auxillary_data_length : UInt8
    source_count : UInt16
    multicast_address : IN_ADDR
  end
  struct IGMPV3_REPORT_HEADER
    type : UInt8
    reserved : UInt8
    checksum : UInt16
    reserved2 : UInt16
    record_count : UInt16
  end
  struct IPV6_HEADER
    anonymous : IPV6_HEADER_Anonymous_e__Union
    payload_length : UInt16
    next_header : UInt8
    hop_limit : UInt8
    source_address : IN6_ADDR
    destination_address : IN6_ADDR
  end
  struct IPV6_HEADER_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt32
  end
  struct IPV6_FRAGMENT_HEADER
    next_header : UInt8
    reserved : UInt8
    anonymous : IPV6_FRAGMENT_HEADER_Anonymous_e__Union
    id : UInt32
  end
  struct IPV6_FRAGMENT_HEADER_Anonymous_e__Union_Anonymous_e__Struct
    _bitfield : UInt16
  end
  struct IPV6_EXTENSION_HEADER
    next_header : UInt8
    length : UInt8
  end
  struct IPV6_OPTION_HEADER
    type : UInt8
    data_length : UInt8
  end
  struct IPV6_OPTION_JUMBOGRAM
    header : IPV6_OPTION_HEADER
    jumbogram_length : UInt8[4]*
  end
  struct IPV6_OPTION_ROUTER_ALERT
    header : IPV6_OPTION_HEADER
    value : UInt8[2]*
  end
  struct IPV6_ROUTING_HEADER
    next_header : UInt8
    length : UInt8
    routing_type : UInt8
    segments_left : UInt8
    reserved : UInt8[4]*
  end
  struct Nd_router_solicit
    nd_rs_hdr : ICMP_MESSAGE
  end
  struct Nd_router_advert
    nd_ra_hdr : ICMP_MESSAGE
    nd_ra_reachable : UInt32
    nd_ra_retransmit : UInt32
  end
  struct IPV6_ROUTER_ADVERTISEMENT_FLAGS_Anonymous_e__Struct
    _bitfield : UInt8
  end
  struct Nd_neighbor_solicit
    nd_ns_hdr : ICMP_MESSAGE
    nd_ns_target : IN6_ADDR
  end
  struct Nd_neighbor_advert
    nd_na_hdr : ICMP_MESSAGE
    nd_na_target : IN6_ADDR
  end
  struct IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS_Anonymous_e__Struct
    _bitfield : UInt8
    reserved2 : UInt8[3]*
  end
  struct Nd_redirect
    nd_rd_hdr : ICMP_MESSAGE
    nd_rd_target : IN6_ADDR
    nd_rd_dst : IN6_ADDR
  end
  struct Nd_opt_hdr
    nd_opt_type : UInt8
    nd_opt_len : UInt8
  end
  struct Nd_opt_prefix_info
    nd_opt_pi_type : UInt8
    nd_opt_pi_len : UInt8
    nd_opt_pi_prefix_len : UInt8
    anonymous1 : Nd_opt_prefix_info_Anonymous1_e__Union
    nd_opt_pi_valid_time : UInt32
    nd_opt_pi_preferred_time : UInt32
    anonymous2 : Nd_opt_prefix_info_Anonymous2_e__Union
    nd_opt_pi_prefix : IN6_ADDR
  end
  struct Nd_opt_prefix_info_Anonymous2_e__Union_Anonymous_e__Struct
    nd_opt_pi_reserved3 : UInt8[3]*
    nd_opt_pi_site_prefix_len : UInt8
  end
  struct Nd_opt_prefix_info_Anonymous1_e__Union_Flags_e__Struct
    _bitfield : UInt8
  end
  struct Nd_opt_rd_hdr
    nd_opt_rh_type : UInt8
    nd_opt_rh_len : UInt8
    nd_opt_rh_reserved1 : UInt16
    nd_opt_rh_reserved2 : UInt32
  end
  struct Nd_opt_mtu
    nd_opt_mtu_type : UInt8
    nd_opt_mtu_len : UInt8
    nd_opt_mtu_reserved : UInt16
    nd_opt_mtu_mtu : UInt32
  end
  struct Nd_opt_route_info
    nd_opt_ri_type : UInt8
    nd_opt_ri_len : UInt8
    nd_opt_ri_prefix_len : UInt8
    anonymous : Nd_opt_route_info_Anonymous_e__Union
    nd_opt_ri_route_lifetime : UInt32
    nd_opt_ri_prefix : IN6_ADDR
  end
  struct Nd_opt_route_info_Anonymous_e__Union_Flags_e__Struct
    _bitfield : UInt8
  end
  struct Nd_opt_rdnss
    nd_opt_rdnss_type : UInt8
    nd_opt_rdnss_len : UInt8
    nd_opt_rdnss_reserved : UInt16
    nd_opt_rdnss_lifetime : UInt32
  end
  struct Nd_opt_dnssl
    nd_opt_dnssl_type : UInt8
    nd_opt_dnssl_len : UInt8
    nd_opt_dnssl_reserved : UInt16
    nd_opt_dnssl_lifetime : UInt32
  end
  struct MLD_HEADER
    icmp_header : ICMP_HEADER
    max_resp_time : UInt16
    reserved : UInt16
    multicast_address : IN6_ADDR
  end
  struct MLDV2_QUERY_HEADER
    icmp_header : ICMP_HEADER
    anonymous1 : MLDV2_QUERY_HEADER_Anonymous1_e__Union
    reserved : UInt16
    multicast_address : IN6_ADDR
    _bitfield : UInt8
    anonymous2 : MLDV2_QUERY_HEADER_Anonymous2_e__Union
    source_count : UInt16
  end
  struct MLDV2_QUERY_HEADER_Anonymous2_e__Union_Anonymous_e__Struct
    _bitfield : UInt8
  end
  struct MLDV2_QUERY_HEADER_Anonymous1_e__Union_Anonymous_e__Struct
    _bitfield : UInt16
  end
  struct MLDV2_REPORT_RECORD_HEADER
    type : UInt8
    auxillary_data_length : UInt8
    source_count : UInt16
    multicast_address : IN6_ADDR
  end
  struct MLDV2_REPORT_HEADER
    icmp_header : ICMP_HEADER
    reserved : UInt16
    record_count : UInt16
  end
  struct Tcp_hdr
    th_sport : UInt16
    th_dport : UInt16
    th_seq : UInt32
    th_ack : UInt32
    _bitfield : UInt8
    th_flags : UInt8
    th_win : UInt16
    th_sum : UInt16
    th_urp : UInt16
  end
  struct Tcp_opt_mss
    kind : UInt8
    length : UInt8
    mss : UInt16
  end
  struct Tcp_opt_ws
    kind : UInt8
    length : UInt8
    shift_cnt : UInt8
  end
  struct Tcp_opt_sack_permitted
    kind : UInt8
    length : UInt8
  end
  struct Tcp_opt_sack
    kind : UInt8
    length : UInt8
    block : Tcp_opt_sack_tcp_opt_sack_block[0]*
  end
  struct Tcp_opt_sack_tcp_opt_sack_block
    left : UInt32
    right : UInt32
  end
  struct Tcp_opt_ts
    kind : UInt8
    length : UInt8
    val : UInt32
    ec_r : UInt32
  end
  struct Tcp_opt_unknown
    kind : UInt8
    length : UInt8
  end
  struct Tcp_opt_fastopen
    kind : UInt8
    length : UInt8
    cookie : UInt8[0]*
  end
  struct DL_TUNNEL_ADDRESS
    compartment_id : COMPARTMENT_ID
    scope_id : SCOPE_ID
    ip_address : UInt8[0]*
  end
  struct DL_TEREDO_ADDRESS
    reserved : UInt8[6]*
    anonymous : DL_TEREDO_ADDRESS_Anonymous_e__Union
  end
  struct DL_TEREDO_ADDRESS_Anonymous_e__Union_Anonymous_e__Struct
    flags : UInt16
    mapped_port : UInt16
    mapped_address : IN_ADDR
  end
  struct DL_TEREDO_ADDRESS_PRV
    reserved : UInt8[6]*
    anonymous : DL_TEREDO_ADDRESS_PRV_Anonymous_e__Union
  end
  struct DL_TEREDO_ADDRESS_PRV_Anonymous_e__Union_Anonymous_e__Struct
    flags : UInt16
    mapped_port : UInt16
    mapped_address : IN_ADDR
    local_address : IN_ADDR
    interface_index : UInt32
    local_port : UInt16
    dl_destination : DL_EUI48
  end
  struct IPTLS_METADATA
    sequence_number : UInt64
  end
  struct NPI_MODULEID
    length : UInt16
    type : NPI_MODULEID_TYPE
    anonymous : NPI_MODULEID_Anonymous_e__Union
  end


  # Params # p : Void** [In]
  fun FwpmFreeMemory0(p : Void**)

  # Params # servername : LibC::LPWSTR [In],authnservice : UInt32 [In],authidentity : SEC_WINNT_AUTH_IDENTITY_W* [In],session : FWPM_SESSION0* [In],enginehandle : LibC::HANDLE* [In]
  fun FwpmEngineOpen0(servername : LibC::LPWSTR, authnservice : UInt32, authidentity : SEC_WINNT_AUTH_IDENTITY_W*, session : FWPM_SESSION0*, enginehandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In]
  fun FwpmEngineClose0(enginehandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],option : FWPM_ENGINE_OPTION [In],value : FWP_VALUE0** [In]
  fun FwpmEngineGetOption0(enginehandle : LibC::HANDLE, option : FWPM_ENGINE_OPTION, value : FWP_VALUE0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],option : FWPM_ENGINE_OPTION [In],newvalue : FWP_VALUE0* [In]
  fun FwpmEngineSetOption0(enginehandle : LibC::HANDLE, option : FWPM_ENGINE_OPTION, newvalue : FWP_VALUE0*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun FwpmEngineGetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun FwpmEngineSetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : FWPM_SESSION_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun FwpmSessionCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : FWPM_SESSION_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_SESSION0*** [In],numentriesreturned : UInt32* [In]
  fun FwpmSessionEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_SESSION0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun FwpmSessionDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],flags : UInt32 [In]
  fun FwpmTransactionBegin0(enginehandle : LibC::HANDLE, flags : UInt32) : UInt32

  # Params # enginehandle : LibC::HANDLE [In]
  fun FwpmTransactionCommit0(enginehandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In]
  fun FwpmTransactionAbort0(enginehandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],provider : FWPM_PROVIDER0* [In],sd : SECURITY_DESCRIPTOR* [In]
  fun FwpmProviderAdd0(enginehandle : LibC::HANDLE, provider : FWPM_PROVIDER0*, sd : SECURITY_DESCRIPTOR*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In]
  fun FwpmProviderDeleteByKey0(enginehandle : LibC::HANDLE, key : Guid*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],provider : FWPM_PROVIDER0** [In]
  fun FwpmProviderGetByKey0(enginehandle : LibC::HANDLE, key : Guid*, provider : FWPM_PROVIDER0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : FWPM_PROVIDER_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun FwpmProviderCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : FWPM_PROVIDER_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_PROVIDER0*** [In],numentriesreturned : UInt32* [In]
  fun FwpmProviderEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_PROVIDER0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun FwpmProviderDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun FwpmProviderGetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun FwpmProviderSetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_PROVIDER_SUBSCRIPTION0* [In],callback : FWPM_PROVIDER_CHANGE_CALLBACK0 [In],context : Void* [In],changehandle : LibC::HANDLE* [In]
  fun FwpmProviderSubscribeChanges0(enginehandle : LibC::HANDLE, subscription : FWPM_PROVIDER_SUBSCRIPTION0*, callback : FWPM_PROVIDER_CHANGE_CALLBACK0, context : Void*, changehandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],changehandle : LibC::HANDLE [In]
  fun FwpmProviderUnsubscribeChanges0(enginehandle : LibC::HANDLE, changehandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],entries : FWPM_PROVIDER_SUBSCRIPTION0*** [In],numentries : UInt32* [In]
  fun FwpmProviderSubscriptionsGet0(enginehandle : LibC::HANDLE, entries : FWPM_PROVIDER_SUBSCRIPTION0***, numentries : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],providercontext : FWPM_PROVIDER_CONTEXT0* [In],sd : SECURITY_DESCRIPTOR* [In],id : UInt64* [In]
  fun FwpmProviderContextAdd0(enginehandle : LibC::HANDLE, providercontext : FWPM_PROVIDER_CONTEXT0*, sd : SECURITY_DESCRIPTOR*, id : UInt64*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],providercontext : FWPM_PROVIDER_CONTEXT1* [In],sd : SECURITY_DESCRIPTOR* [In],id : UInt64* [In]
  fun FwpmProviderContextAdd1(enginehandle : LibC::HANDLE, providercontext : FWPM_PROVIDER_CONTEXT1*, sd : SECURITY_DESCRIPTOR*, id : UInt64*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],providercontext : FWPM_PROVIDER_CONTEXT2* [In],sd : SECURITY_DESCRIPTOR* [In],id : UInt64* [In]
  fun FwpmProviderContextAdd2(enginehandle : LibC::HANDLE, providercontext : FWPM_PROVIDER_CONTEXT2*, sd : SECURITY_DESCRIPTOR*, id : UInt64*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],providercontext : FWPM_PROVIDER_CONTEXT3_* [In],sd : SECURITY_DESCRIPTOR* [In],id : UInt64* [In]
  fun FwpmProviderContextAdd3(enginehandle : LibC::HANDLE, providercontext : FWPM_PROVIDER_CONTEXT3_*, sd : SECURITY_DESCRIPTOR*, id : UInt64*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In]
  fun FwpmProviderContextDeleteById0(enginehandle : LibC::HANDLE, id : UInt64) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In]
  fun FwpmProviderContextDeleteByKey0(enginehandle : LibC::HANDLE, key : Guid*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],providercontext : FWPM_PROVIDER_CONTEXT0** [In]
  fun FwpmProviderContextGetById0(enginehandle : LibC::HANDLE, id : UInt64, providercontext : FWPM_PROVIDER_CONTEXT0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],providercontext : FWPM_PROVIDER_CONTEXT1** [In]
  fun FwpmProviderContextGetById1(enginehandle : LibC::HANDLE, id : UInt64, providercontext : FWPM_PROVIDER_CONTEXT1**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],providercontext : FWPM_PROVIDER_CONTEXT2** [In]
  fun FwpmProviderContextGetById2(enginehandle : LibC::HANDLE, id : UInt64, providercontext : FWPM_PROVIDER_CONTEXT2**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],providercontext : FWPM_PROVIDER_CONTEXT3_** [In]
  fun FwpmProviderContextGetById3(enginehandle : LibC::HANDLE, id : UInt64, providercontext : FWPM_PROVIDER_CONTEXT3_**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],providercontext : FWPM_PROVIDER_CONTEXT0** [In]
  fun FwpmProviderContextGetByKey0(enginehandle : LibC::HANDLE, key : Guid*, providercontext : FWPM_PROVIDER_CONTEXT0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],providercontext : FWPM_PROVIDER_CONTEXT1** [In]
  fun FwpmProviderContextGetByKey1(enginehandle : LibC::HANDLE, key : Guid*, providercontext : FWPM_PROVIDER_CONTEXT1**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],providercontext : FWPM_PROVIDER_CONTEXT2** [In]
  fun FwpmProviderContextGetByKey2(enginehandle : LibC::HANDLE, key : Guid*, providercontext : FWPM_PROVIDER_CONTEXT2**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],providercontext : FWPM_PROVIDER_CONTEXT3_** [In]
  fun FwpmProviderContextGetByKey3(enginehandle : LibC::HANDLE, key : Guid*, providercontext : FWPM_PROVIDER_CONTEXT3_**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun FwpmProviderContextCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_PROVIDER_CONTEXT0*** [In],numentriesreturned : UInt32* [In]
  fun FwpmProviderContextEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_PROVIDER_CONTEXT0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_PROVIDER_CONTEXT1*** [In],numentriesreturned : UInt32* [In]
  fun FwpmProviderContextEnum1(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_PROVIDER_CONTEXT1***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_PROVIDER_CONTEXT2*** [In],numentriesreturned : UInt32* [In]
  fun FwpmProviderContextEnum2(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_PROVIDER_CONTEXT2***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_PROVIDER_CONTEXT3_*** [In],numentriesreturned : UInt32* [In]
  fun FwpmProviderContextEnum3(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_PROVIDER_CONTEXT3_***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun FwpmProviderContextDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun FwpmProviderContextGetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun FwpmProviderContextSetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0* [In],callback : FWPM_PROVIDER_CONTEXT_CHANGE_CALLBACK0 [In],context : Void* [In],changehandle : LibC::HANDLE* [In]
  fun FwpmProviderContextSubscribeChanges0(enginehandle : LibC::HANDLE, subscription : FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0*, callback : FWPM_PROVIDER_CONTEXT_CHANGE_CALLBACK0, context : Void*, changehandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],changehandle : LibC::HANDLE [In]
  fun FwpmProviderContextUnsubscribeChanges0(enginehandle : LibC::HANDLE, changehandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],entries : FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0*** [In],numentries : UInt32* [In]
  fun FwpmProviderContextSubscriptionsGet0(enginehandle : LibC::HANDLE, entries : FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0***, numentries : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],sublayer : FWPM_SUBLAYER0* [In],sd : SECURITY_DESCRIPTOR* [In]
  fun FwpmSubLayerAdd0(enginehandle : LibC::HANDLE, sublayer : FWPM_SUBLAYER0*, sd : SECURITY_DESCRIPTOR*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In]
  fun FwpmSubLayerDeleteByKey0(enginehandle : LibC::HANDLE, key : Guid*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],sublayer : FWPM_SUBLAYER0** [In]
  fun FwpmSubLayerGetByKey0(enginehandle : LibC::HANDLE, key : Guid*, sublayer : FWPM_SUBLAYER0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : FWPM_SUBLAYER_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun FwpmSubLayerCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : FWPM_SUBLAYER_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_SUBLAYER0*** [In],numentriesreturned : UInt32* [In]
  fun FwpmSubLayerEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_SUBLAYER0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun FwpmSubLayerDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun FwpmSubLayerGetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun FwpmSubLayerSetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_SUBLAYER_SUBSCRIPTION0* [In],callback : FWPM_SUBLAYER_CHANGE_CALLBACK0 [In],context : Void* [In],changehandle : LibC::HANDLE* [In]
  fun FwpmSubLayerSubscribeChanges0(enginehandle : LibC::HANDLE, subscription : FWPM_SUBLAYER_SUBSCRIPTION0*, callback : FWPM_SUBLAYER_CHANGE_CALLBACK0, context : Void*, changehandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],changehandle : LibC::HANDLE [In]
  fun FwpmSubLayerUnsubscribeChanges0(enginehandle : LibC::HANDLE, changehandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],entries : FWPM_SUBLAYER_SUBSCRIPTION0*** [In],numentries : UInt32* [In]
  fun FwpmSubLayerSubscriptionsGet0(enginehandle : LibC::HANDLE, entries : FWPM_SUBLAYER_SUBSCRIPTION0***, numentries : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt16 [In],layer : FWPM_LAYER0** [In]
  fun FwpmLayerGetById0(enginehandle : LibC::HANDLE, id : UInt16, layer : FWPM_LAYER0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],layer : FWPM_LAYER0** [In]
  fun FwpmLayerGetByKey0(enginehandle : LibC::HANDLE, key : Guid*, layer : FWPM_LAYER0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : FWPM_LAYER_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun FwpmLayerCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : FWPM_LAYER_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_LAYER0*** [In],numentriesreturned : UInt32* [In]
  fun FwpmLayerEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_LAYER0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun FwpmLayerDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun FwpmLayerGetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun FwpmLayerSetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],callout : FWPM_CALLOUT0* [In],sd : SECURITY_DESCRIPTOR* [In],id : UInt32* [In]
  fun FwpmCalloutAdd0(enginehandle : LibC::HANDLE, callout : FWPM_CALLOUT0*, sd : SECURITY_DESCRIPTOR*, id : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt32 [In]
  fun FwpmCalloutDeleteById0(enginehandle : LibC::HANDLE, id : UInt32) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In]
  fun FwpmCalloutDeleteByKey0(enginehandle : LibC::HANDLE, key : Guid*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt32 [In],callout : FWPM_CALLOUT0** [In]
  fun FwpmCalloutGetById0(enginehandle : LibC::HANDLE, id : UInt32, callout : FWPM_CALLOUT0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],callout : FWPM_CALLOUT0** [In]
  fun FwpmCalloutGetByKey0(enginehandle : LibC::HANDLE, key : Guid*, callout : FWPM_CALLOUT0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : FWPM_CALLOUT_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun FwpmCalloutCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : FWPM_CALLOUT_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_CALLOUT0*** [In],numentriesreturned : UInt32* [In]
  fun FwpmCalloutEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_CALLOUT0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun FwpmCalloutDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun FwpmCalloutGetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun FwpmCalloutSetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_CALLOUT_SUBSCRIPTION0* [In],callback : FWPM_CALLOUT_CHANGE_CALLBACK0 [In],context : Void* [In],changehandle : LibC::HANDLE* [In]
  fun FwpmCalloutSubscribeChanges0(enginehandle : LibC::HANDLE, subscription : FWPM_CALLOUT_SUBSCRIPTION0*, callback : FWPM_CALLOUT_CHANGE_CALLBACK0, context : Void*, changehandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],changehandle : LibC::HANDLE [In]
  fun FwpmCalloutUnsubscribeChanges0(enginehandle : LibC::HANDLE, changehandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],entries : FWPM_CALLOUT_SUBSCRIPTION0*** [In],numentries : UInt32* [In]
  fun FwpmCalloutSubscriptionsGet0(enginehandle : LibC::HANDLE, entries : FWPM_CALLOUT_SUBSCRIPTION0***, numentries : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],filter : FWPM_FILTER0* [In],sd : SECURITY_DESCRIPTOR* [In],id : UInt64* [In]
  fun FwpmFilterAdd0(enginehandle : LibC::HANDLE, filter : FWPM_FILTER0*, sd : SECURITY_DESCRIPTOR*, id : UInt64*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In]
  fun FwpmFilterDeleteById0(enginehandle : LibC::HANDLE, id : UInt64) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In]
  fun FwpmFilterDeleteByKey0(enginehandle : LibC::HANDLE, key : Guid*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],filter : FWPM_FILTER0** [In]
  fun FwpmFilterGetById0(enginehandle : LibC::HANDLE, id : UInt64, filter : FWPM_FILTER0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],filter : FWPM_FILTER0** [In]
  fun FwpmFilterGetByKey0(enginehandle : LibC::HANDLE, key : Guid*, filter : FWPM_FILTER0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : FWPM_FILTER_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun FwpmFilterCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : FWPM_FILTER_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_FILTER0*** [In],numentriesreturned : UInt32* [In]
  fun FwpmFilterEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_FILTER0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun FwpmFilterDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun FwpmFilterGetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun FwpmFilterSetSecurityInfoByKey0(enginehandle : LibC::HANDLE, key : Guid*, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_FILTER_SUBSCRIPTION0* [In],callback : FWPM_FILTER_CHANGE_CALLBACK0 [In],context : Void* [In],changehandle : LibC::HANDLE* [In]
  fun FwpmFilterSubscribeChanges0(enginehandle : LibC::HANDLE, subscription : FWPM_FILTER_SUBSCRIPTION0*, callback : FWPM_FILTER_CHANGE_CALLBACK0, context : Void*, changehandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],changehandle : LibC::HANDLE [In]
  fun FwpmFilterUnsubscribeChanges0(enginehandle : LibC::HANDLE, changehandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],entries : FWPM_FILTER_SUBSCRIPTION0*** [In],numentries : UInt32* [In]
  fun FwpmFilterSubscriptionsGet0(enginehandle : LibC::HANDLE, entries : FWPM_FILTER_SUBSCRIPTION0***, numentries : UInt32*) : UInt32

  # Params # filename : LibC::LPWSTR [In],appid : FWP_BYTE_BLOB** [In]
  fun FwpmGetAppIdFromFileName0(filename : LibC::LPWSTR, appid : FWP_BYTE_BLOB**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],flags : UInt32 [In],mainmodepolicy : FWPM_PROVIDER_CONTEXT0* [In],tunnelpolicy : FWPM_PROVIDER_CONTEXT0* [In],numfilterconditions : UInt32 [In],filterconditions : FWPM_FILTER_CONDITION0* [In],sd : SECURITY_DESCRIPTOR* [In]
  fun FwpmIPsecTunnelAdd0(enginehandle : LibC::HANDLE, flags : UInt32, mainmodepolicy : FWPM_PROVIDER_CONTEXT0*, tunnelpolicy : FWPM_PROVIDER_CONTEXT0*, numfilterconditions : UInt32, filterconditions : FWPM_FILTER_CONDITION0*, sd : SECURITY_DESCRIPTOR*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],flags : UInt32 [In],mainmodepolicy : FWPM_PROVIDER_CONTEXT1* [In],tunnelpolicy : FWPM_PROVIDER_CONTEXT1* [In],numfilterconditions : UInt32 [In],filterconditions : FWPM_FILTER_CONDITION0* [In],keymodkey : Guid* [In],sd : SECURITY_DESCRIPTOR* [In]
  fun FwpmIPsecTunnelAdd1(enginehandle : LibC::HANDLE, flags : UInt32, mainmodepolicy : FWPM_PROVIDER_CONTEXT1*, tunnelpolicy : FWPM_PROVIDER_CONTEXT1*, numfilterconditions : UInt32, filterconditions : FWPM_FILTER_CONDITION0*, keymodkey : Guid*, sd : SECURITY_DESCRIPTOR*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],flags : UInt32 [In],mainmodepolicy : FWPM_PROVIDER_CONTEXT2* [In],tunnelpolicy : FWPM_PROVIDER_CONTEXT2* [In],numfilterconditions : UInt32 [In],filterconditions : FWPM_FILTER_CONDITION0* [In],keymodkey : Guid* [In],sd : SECURITY_DESCRIPTOR* [In]
  fun FwpmIPsecTunnelAdd2(enginehandle : LibC::HANDLE, flags : UInt32, mainmodepolicy : FWPM_PROVIDER_CONTEXT2*, tunnelpolicy : FWPM_PROVIDER_CONTEXT2*, numfilterconditions : UInt32, filterconditions : FWPM_FILTER_CONDITION0*, keymodkey : Guid*, sd : SECURITY_DESCRIPTOR*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],flags : UInt32 [In],mainmodepolicy : FWPM_PROVIDER_CONTEXT3_* [In],tunnelpolicy : FWPM_PROVIDER_CONTEXT3_* [In],numfilterconditions : UInt32 [In],filterconditions : FWPM_FILTER_CONDITION0* [In],keymodkey : Guid* [In],sd : SECURITY_DESCRIPTOR* [In]
  fun FwpmIPsecTunnelAdd3(enginehandle : LibC::HANDLE, flags : UInt32, mainmodepolicy : FWPM_PROVIDER_CONTEXT3_*, tunnelpolicy : FWPM_PROVIDER_CONTEXT3_*, numfilterconditions : UInt32, filterconditions : FWPM_FILTER_CONDITION0*, keymodkey : Guid*, sd : SECURITY_DESCRIPTOR*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],key : Guid* [In]
  fun FwpmIPsecTunnelDeleteByKey0(enginehandle : LibC::HANDLE, key : Guid*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],ipsecstatistics : IPSEC_STATISTICS0* [In]
  fun IPsecGetStatistics0(enginehandle : LibC::HANDLE, ipsecstatistics : IPSEC_STATISTICS0*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],ipsecstatistics : IPSEC_STATISTICS1* [In]
  fun IPsecGetStatistics1(enginehandle : LibC::HANDLE, ipsecstatistics : IPSEC_STATISTICS1*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],outboundtraffic : IPSEC_TRAFFIC0* [In],inboundfilterid : UInt64* [In],id : UInt64* [In]
  fun IPsecSaContextCreate0(enginehandle : LibC::HANDLE, outboundtraffic : IPSEC_TRAFFIC0*, inboundfilterid : UInt64*, id : UInt64*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],outboundtraffic : IPSEC_TRAFFIC1* [In],virtualiftunnelinfo : IPSEC_VIRTUAL_IF_TUNNEL_INFO0* [In],inboundfilterid : UInt64* [In],id : UInt64* [In]
  fun IPsecSaContextCreate1(enginehandle : LibC::HANDLE, outboundtraffic : IPSEC_TRAFFIC1*, virtualiftunnelinfo : IPSEC_VIRTUAL_IF_TUNNEL_INFO0*, inboundfilterid : UInt64*, id : UInt64*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In]
  fun IPsecSaContextDeleteById0(enginehandle : LibC::HANDLE, id : UInt64) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],sacontext : IPSEC_SA_CONTEXT0** [In]
  fun IPsecSaContextGetById0(enginehandle : LibC::HANDLE, id : UInt64, sacontext : IPSEC_SA_CONTEXT0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],sacontext : IPSEC_SA_CONTEXT1** [In]
  fun IPsecSaContextGetById1(enginehandle : LibC::HANDLE, id : UInt64, sacontext : IPSEC_SA_CONTEXT1**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],getspi : IPSEC_GETSPI0* [In],inboundspi : UInt32* [In]
  fun IPsecSaContextGetSpi0(enginehandle : LibC::HANDLE, id : UInt64, getspi : IPSEC_GETSPI0*, inboundspi : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],getspi : IPSEC_GETSPI1* [In],inboundspi : UInt32* [In]
  fun IPsecSaContextGetSpi1(enginehandle : LibC::HANDLE, id : UInt64, getspi : IPSEC_GETSPI1*, inboundspi : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],getspi : IPSEC_GETSPI1* [In],inboundspi : UInt32 [In]
  fun IPsecSaContextSetSpi0(enginehandle : LibC::HANDLE, id : UInt64, getspi : IPSEC_GETSPI1*, inboundspi : UInt32) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],inboundbundle : IPSEC_SA_BUNDLE0* [In]
  fun IPsecSaContextAddInbound0(enginehandle : LibC::HANDLE, id : UInt64, inboundbundle : IPSEC_SA_BUNDLE0*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],outboundbundle : IPSEC_SA_BUNDLE0* [In]
  fun IPsecSaContextAddOutbound0(enginehandle : LibC::HANDLE, id : UInt64, outboundbundle : IPSEC_SA_BUNDLE0*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],inboundbundle : IPSEC_SA_BUNDLE1* [In]
  fun IPsecSaContextAddInbound1(enginehandle : LibC::HANDLE, id : UInt64, inboundbundle : IPSEC_SA_BUNDLE1*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],outboundbundle : IPSEC_SA_BUNDLE1* [In]
  fun IPsecSaContextAddOutbound1(enginehandle : LibC::HANDLE, id : UInt64, outboundbundle : IPSEC_SA_BUNDLE1*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In]
  fun IPsecSaContextExpire0(enginehandle : LibC::HANDLE, id : UInt64) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],flags : UInt64 [In],newvalues : IPSEC_SA_CONTEXT1* [In]
  fun IPsecSaContextUpdate0(enginehandle : LibC::HANDLE, flags : UInt64, newvalues : IPSEC_SA_CONTEXT1*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : IPSEC_SA_CONTEXT_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun IPsecSaContextCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : IPSEC_SA_CONTEXT_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : IPSEC_SA_CONTEXT0*** [In],numentriesreturned : UInt32* [In]
  fun IPsecSaContextEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : IPSEC_SA_CONTEXT0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : IPSEC_SA_CONTEXT1*** [In],numentriesreturned : UInt32* [In]
  fun IPsecSaContextEnum1(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : IPSEC_SA_CONTEXT1***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun IPsecSaContextDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : IPSEC_SA_CONTEXT_SUBSCRIPTION0* [In],callback : IPSEC_SA_CONTEXT_CALLBACK0 [In],context : Void* [In],eventshandle : LibC::HANDLE* [In]
  fun IPsecSaContextSubscribe0(enginehandle : LibC::HANDLE, subscription : IPSEC_SA_CONTEXT_SUBSCRIPTION0*, callback : IPSEC_SA_CONTEXT_CALLBACK0, context : Void*, eventshandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],eventshandle : LibC::HANDLE [In]
  fun IPsecSaContextUnsubscribe0(enginehandle : LibC::HANDLE, eventshandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],entries : IPSEC_SA_CONTEXT_SUBSCRIPTION0*** [In],numentries : UInt32* [In]
  fun IPsecSaContextSubscriptionsGet0(enginehandle : LibC::HANDLE, entries : IPSEC_SA_CONTEXT_SUBSCRIPTION0***, numentries : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : IPSEC_SA_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun IPsecSaCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : IPSEC_SA_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : IPSEC_SA_DETAILS0*** [In],numentriesreturned : UInt32* [In]
  fun IPsecSaEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : IPSEC_SA_DETAILS0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : IPSEC_SA_DETAILS1*** [In],numentriesreturned : UInt32* [In]
  fun IPsecSaEnum1(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : IPSEC_SA_DETAILS1***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun IPsecSaDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun IPsecSaDbGetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun IPsecSaDbSetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],idpstatistics : IPSEC_DOSP_STATISTICS0* [In]
  fun IPsecDospGetStatistics0(enginehandle : LibC::HANDLE, idpstatistics : IPSEC_DOSP_STATISTICS0*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : IPSEC_DOSP_STATE_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun IPsecDospStateCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : IPSEC_DOSP_STATE_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : IPSEC_DOSP_STATE0*** [In],numentries : UInt32* [In]
  fun IPsecDospStateEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : IPSEC_DOSP_STATE0***, numentries : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun IPsecDospStateDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun IPsecDospGetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun IPsecDospSetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],keymanager : IPSEC_KEY_MANAGER0* [In],keymanagercallbacks : IPSEC_KEY_MANAGER_CALLBACKS0* [In],keymgmthandle : LibC::HANDLE* [In]
  fun IPsecKeyManagerAddAndRegister0(enginehandle : LibC::HANDLE, keymanager : IPSEC_KEY_MANAGER0*, keymanagercallbacks : IPSEC_KEY_MANAGER_CALLBACKS0*, keymgmthandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],keymgmthandle : LibC::HANDLE [In]
  fun IPsecKeyManagerUnregisterAndDelete0(enginehandle : LibC::HANDLE, keymgmthandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],entries : IPSEC_KEY_MANAGER0*** [In],numentries : UInt32* [In]
  fun IPsecKeyManagersGet0(enginehandle : LibC::HANDLE, entries : IPSEC_KEY_MANAGER0***, numentries : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],reserved : Void* [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun IPsecKeyManagerGetSecurityInfoByKey0(enginehandle : LibC::HANDLE, reserved : Void*, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],reserved : Void* [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun IPsecKeyManagerSetSecurityInfoByKey0(enginehandle : LibC::HANDLE, reserved : Void*, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],ikeextstatistics : IKEEXT_STATISTICS0* [In]
  fun IkeextGetStatistics0(enginehandle : LibC::HANDLE, ikeextstatistics : IKEEXT_STATISTICS0*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],ikeextstatistics : IKEEXT_STATISTICS1* [In]
  fun IkeextGetStatistics1(enginehandle : LibC::HANDLE, ikeextstatistics : IKEEXT_STATISTICS1*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In]
  fun IkeextSaDeleteById0(enginehandle : LibC::HANDLE, id : UInt64) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],sa : IKEEXT_SA_DETAILS0** [In]
  fun IkeextSaGetById0(enginehandle : LibC::HANDLE, id : UInt64, sa : IKEEXT_SA_DETAILS0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],salookupcontext : Guid* [In],sa : IKEEXT_SA_DETAILS1** [In]
  fun IkeextSaGetById1(enginehandle : LibC::HANDLE, id : UInt64, salookupcontext : Guid*, sa : IKEEXT_SA_DETAILS1**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],salookupcontext : Guid* [In],sa : IKEEXT_SA_DETAILS2** [In]
  fun IkeextSaGetById2(enginehandle : LibC::HANDLE, id : UInt64, salookupcontext : Guid*, sa : IKEEXT_SA_DETAILS2**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : IKEEXT_SA_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun IkeextSaCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : IKEEXT_SA_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : IKEEXT_SA_DETAILS0*** [In],numentriesreturned : UInt32* [In]
  fun IkeextSaEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : IKEEXT_SA_DETAILS0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : IKEEXT_SA_DETAILS1*** [In],numentriesreturned : UInt32* [In]
  fun IkeextSaEnum1(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : IKEEXT_SA_DETAILS1***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : IKEEXT_SA_DETAILS2*** [In],numentriesreturned : UInt32* [In]
  fun IkeextSaEnum2(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : IKEEXT_SA_DETAILS2***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun IkeextSaDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun IkeextSaDbGetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun IkeextSaDbSetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : FWPM_NET_EVENT_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun FwpmNetEventCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : FWPM_NET_EVENT_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_NET_EVENT0*** [In],numentriesreturned : UInt32* [In]
  fun FwpmNetEventEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_NET_EVENT0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_NET_EVENT1*** [In],numentriesreturned : UInt32* [In]
  fun FwpmNetEventEnum1(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_NET_EVENT1***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_NET_EVENT2*** [In],numentriesreturned : UInt32* [In]
  fun FwpmNetEventEnum2(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_NET_EVENT2***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_NET_EVENT3*** [In],numentriesreturned : UInt32* [In]
  fun FwpmNetEventEnum3(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_NET_EVENT3***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_NET_EVENT4_*** [In],numentriesreturned : UInt32* [In]
  fun FwpmNetEventEnum4(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_NET_EVENT4_***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_NET_EVENT5_*** [In],numentriesreturned : UInt32* [In]
  fun FwpmNetEventEnum5(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_NET_EVENT5_***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun FwpmNetEventDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun FwpmNetEventsGetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun FwpmNetEventsSetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_NET_EVENT_SUBSCRIPTION0* [In],callback : FWPM_NET_EVENT_CALLBACK0 [In],context : Void* [In],eventshandle : LibC::HANDLE* [In]
  fun FwpmNetEventSubscribe0(enginehandle : LibC::HANDLE, subscription : FWPM_NET_EVENT_SUBSCRIPTION0*, callback : FWPM_NET_EVENT_CALLBACK0, context : Void*, eventshandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],eventshandle : LibC::HANDLE [In]
  fun FwpmNetEventUnsubscribe0(enginehandle : LibC::HANDLE, eventshandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],entries : FWPM_NET_EVENT_SUBSCRIPTION0*** [In],numentries : UInt32* [In]
  fun FwpmNetEventSubscriptionsGet0(enginehandle : LibC::HANDLE, entries : FWPM_NET_EVENT_SUBSCRIPTION0***, numentries : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_NET_EVENT_SUBSCRIPTION0* [In],callback : FWPM_NET_EVENT_CALLBACK1 [In],context : Void* [In],eventshandle : LibC::HANDLE* [In]
  fun FwpmNetEventSubscribe1(enginehandle : LibC::HANDLE, subscription : FWPM_NET_EVENT_SUBSCRIPTION0*, callback : FWPM_NET_EVENT_CALLBACK1, context : Void*, eventshandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_NET_EVENT_SUBSCRIPTION0* [In],callback : FWPM_NET_EVENT_CALLBACK2 [In],context : Void* [In],eventshandle : LibC::HANDLE* [In]
  fun FwpmNetEventSubscribe2(enginehandle : LibC::HANDLE, subscription : FWPM_NET_EVENT_SUBSCRIPTION0*, callback : FWPM_NET_EVENT_CALLBACK2, context : Void*, eventshandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_NET_EVENT_SUBSCRIPTION0* [In],callback : FWPM_NET_EVENT_CALLBACK3 [In],context : Void* [In],eventshandle : LibC::HANDLE* [In]
  fun FwpmNetEventSubscribe3(enginehandle : LibC::HANDLE, subscription : FWPM_NET_EVENT_SUBSCRIPTION0*, callback : FWPM_NET_EVENT_CALLBACK3, context : Void*, eventshandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_NET_EVENT_SUBSCRIPTION0* [In],callback : FWPM_NET_EVENT_CALLBACK4 [In],context : Void* [In],eventshandle : LibC::HANDLE* [In]
  fun FwpmNetEventSubscribe4(enginehandle : LibC::HANDLE, subscription : FWPM_NET_EVENT_SUBSCRIPTION0*, callback : FWPM_NET_EVENT_CALLBACK4, context : Void*, eventshandle : LibC::HANDLE*) : UInt32

  # Params # flags : UInt32 [In],callback : FWPM_DYNAMIC_KEYWORD_CALLBACK0 [In],context : Void* [In],subscriptionhandle : LibC::HANDLE* [In]
  fun FwpmDynamicKeywordSubscribe0(flags : UInt32, callback : FWPM_DYNAMIC_KEYWORD_CALLBACK0, context : Void*, subscriptionhandle : LibC::HANDLE*) : UInt32

  # Params # subscriptionhandle : LibC::HANDLE [In]
  fun FwpmDynamicKeywordUnsubscribe0(subscriptionhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],sysports : FWPM_SYSTEM_PORTS0** [In]
  fun FwpmSystemPortsGet0(enginehandle : LibC::HANDLE, sysports : FWPM_SYSTEM_PORTS0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],reserved : Void* [In],callback : FWPM_SYSTEM_PORTS_CALLBACK0 [In],context : Void* [In],sysportshandle : LibC::HANDLE* [In]
  fun FwpmSystemPortsSubscribe0(enginehandle : LibC::HANDLE, reserved : Void*, callback : FWPM_SYSTEM_PORTS_CALLBACK0, context : Void*, sysportshandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],sysportshandle : LibC::HANDLE [In]
  fun FwpmSystemPortsUnsubscribe0(enginehandle : LibC::HANDLE, sysportshandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],id : UInt64 [In],connection : FWPM_CONNECTION0** [In]
  fun FwpmConnectionGetById0(enginehandle : LibC::HANDLE, id : UInt64, connection : FWPM_CONNECTION0**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In],numentriesrequested : UInt32 [In],entries : FWPM_CONNECTION0*** [In],numentriesreturned : UInt32* [In]
  fun FwpmConnectionEnum0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE, numentriesrequested : UInt32, entries : FWPM_CONNECTION0***, numentriesreturned : UInt32*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumtemplate : FWPM_CONNECTION_ENUM_TEMPLATE0* [In],enumhandle : LibC::HANDLE* [In]
  fun FwpmConnectionCreateEnumHandle0(enginehandle : LibC::HANDLE, enumtemplate : FWPM_CONNECTION_ENUM_TEMPLATE0*, enumhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],enumhandle : LibC::HANDLE [In]
  fun FwpmConnectionDestroyEnumHandle0(enginehandle : LibC::HANDLE, enumhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun FwpmConnectionGetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun FwpmConnectionSetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_CONNECTION_SUBSCRIPTION0* [In],callback : FWPM_CONNECTION_CALLBACK0 [In],context : Void* [In],eventshandle : LibC::HANDLE* [In]
  fun FwpmConnectionSubscribe0(enginehandle : LibC::HANDLE, subscription : FWPM_CONNECTION_SUBSCRIPTION0*, callback : FWPM_CONNECTION_CALLBACK0, context : Void*, eventshandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],eventshandle : LibC::HANDLE [In]
  fun FwpmConnectionUnsubscribe0(enginehandle : LibC::HANDLE, eventshandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscription : FWPM_VSWITCH_EVENT_SUBSCRIPTION0* [In],callback : FWPM_VSWITCH_EVENT_CALLBACK0 [In],context : Void* [In],subscriptionhandle : LibC::HANDLE* [In]
  fun FwpmvSwitchEventSubscribe0(enginehandle : LibC::HANDLE, subscription : FWPM_VSWITCH_EVENT_SUBSCRIPTION0*, callback : FWPM_VSWITCH_EVENT_CALLBACK0, context : Void*, subscriptionhandle : LibC::HANDLE*) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],subscriptionhandle : LibC::HANDLE [In]
  fun FwpmvSwitchEventUnsubscribe0(enginehandle : LibC::HANDLE, subscriptionhandle : LibC::HANDLE) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : PSID* [In],sidgroup : PSID* [In],dacl : ACL** [In],sacl : ACL** [In],securitydescriptor : SECURITY_DESCRIPTOR** [In]
  fun FwpmvSwitchEventsGetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : PSID*, sidgroup : PSID*, dacl : ACL**, sacl : ACL**, securitydescriptor : SECURITY_DESCRIPTOR**) : UInt32

  # Params # enginehandle : LibC::HANDLE [In],securityinfo : UInt32 [In],sidowner : SID* [In],sidgroup : SID* [In],dacl : ACL* [In],sacl : ACL* [In]
  fun FwpmvSwitchEventsSetSecurityInfo0(enginehandle : LibC::HANDLE, securityinfo : UInt32, sidowner : SID*, sidgroup : SID*, dacl : ACL*, sacl : ACL*) : UInt32
end
