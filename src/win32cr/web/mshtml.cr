require "../system/com.cr"
require "../foundation.cr"
require "../system/ole.cr"
require "../graphics/gdi.cr"
require "../ui/input/ime.cr"
require "../graphics/dxgi/common.cr"
require "../system/winrt.cr"
require "../ui/windowsandmessaging.cr"
require "../system/diagnostics/debug.cr"
require "../graphics/directdraw.cr"

{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link("delayimp")]
{% end %}
@[Link("user32")]
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/IGNORE:4199")]
{% end %}
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/DELAYLOAD:msrating.dll")]
@[Link(ldflags: "/DELAYLOAD:imgutil.dll")]
@[Link(ldflags: "/DELAYLOAD:shdocvw.dll")]
{% else %}
@[Link("msrating")]
@[Link("imgutil")]
@[Link("shdocvw")]
{% end %}
lib LibWin32
  DISPID_STYLESHEETSCOLLECTION_NAMED_MAX = 1999999_u32
  DISPID_AMBIENT_OFFLINEIFNOTCONNECTED = -5501_i32
  DISPID_AMBIENT_SILENT = -5502_i32
  SID_SEditCommandTarget = "3050f4b5-98b5-11cf-bb82-00aa00bdce0b"
  CGID_EditStateCommands = "3050f4b6-98b5-11cf-bb82-00aa00bdce0b"
  SID_SHTMLEditHost = "3050f6a0-98b5-11cf-bb82-00aa00bdce0b"
  SID_SHTMLEditServices = "3050f7f9-98b5-11cf-bb82-00aa00bdce0b"
  COOKIEACTION_NONE = 0_u32
  COOKIEACTION_ACCEPT = 1_u32
  COOKIEACTION_REJECT = 2_u32
  COOKIEACTION_DOWNGRADE = 4_u32
  COOKIEACTION_LEASH = 8_u32
  COOKIEACTION_SUPPRESS = 16_u32
  COOKIEACTION_READ = 32_u32
  PRIVACY_URLISTOPLEVEL = 65536_u32
  PRIVACY_URLHASCOMPACTPOLICY = 131072_u32
  PRIVACY_URLHASPOSTDATA = 524288_u32
  PRIVACY_URLHASPOLICYREFLINK = 1048576_u32
  PRIVACY_URLHASPOLICYREFHEADER = 2097152_u32
  PRIVACY_URLHASP3PHEADER = 4194304_u32
  DEBUGCALLBACKNOTIFICATION_TIMEOUT = 1_u32
  DEBUGCALLBACKNOTIFICATION_INTERVAL = 2_u32
  DEBUGCALLBACKNOTIFICATION_IMMEDIATE = 4_u32
  DEBUGCALLBACKNOTIFICATION_ANIMATIONFRAME = 8_u32
  DEBUGCALLBACKNOTIFICATION_DOMEVENT = 16_u32
  DEBUGDOMEVENTPROPAGATIONSTATUS_DEFAULTCANCELED = 1_u32
  DEBUGDOMEVENTPROPAGATIONSTATUS_STOPIMMEDIATEPROPAGATION = 2_u32
  DEBUGDOMEVENTPROPAGATIONSTATUS_STOPPROPAGATION = 4_u32
  DISPID_BEFORENAVIGATE = 100_u32
  DISPID_NAVIGATECOMPLETE = 101_u32
  DISPID_STATUSTEXTCHANGE = 102_u32
  DISPID_QUIT = 103_u32
  DISPID_DOWNLOADCOMPLETE = 104_u32
  DISPID_COMMANDSTATECHANGE = 105_u32
  DISPID_DOWNLOADBEGIN = 106_u32
  DISPID_NEWWINDOW = 107_u32
  DISPID_PROGRESSCHANGE = 108_u32
  DISPID_WINDOWMOVE = 109_u32
  DISPID_WINDOWRESIZE = 110_u32
  DISPID_WINDOWACTIVATE = 111_u32
  DISPID_PROPERTYCHANGE = 112_u32
  DISPID_TITLECHANGE = 113_u32
  DISPID_TITLEICONCHANGE = 114_u32
  DISPID_FRAMEBEFORENAVIGATE = 200_u32
  DISPID_FRAMENAVIGATECOMPLETE = 201_u32
  DISPID_FRAMENEWWINDOW = 204_u32
  DISPID_BEFORENAVIGATE2 = 250_u32
  DISPID_NEWWINDOW2 = 251_u32
  DISPID_NAVIGATECOMPLETE2 = 252_u32
  DISPID_ONQUIT = 253_u32
  DISPID_ONVISIBLE = 254_u32
  DISPID_ONTOOLBAR = 255_u32
  DISPID_ONMENUBAR = 256_u32
  DISPID_ONSTATUSBAR = 257_u32
  DISPID_ONFULLSCREEN = 258_u32
  DISPID_DOCUMENTCOMPLETE = 259_u32
  DISPID_ONTHEATERMODE = 260_u32
  DISPID_ONADDRESSBAR = 261_u32
  DISPID_WINDOWSETRESIZABLE = 262_u32
  DISPID_WINDOWCLOSING = 263_u32
  DISPID_WINDOWSETLEFT = 264_u32
  DISPID_WINDOWSETTOP = 265_u32
  DISPID_WINDOWSETWIDTH = 266_u32
  DISPID_WINDOWSETHEIGHT = 267_u32
  DISPID_CLIENTTOHOSTWINDOW = 268_u32
  DISPID_SETSECURELOCKICON = 269_u32
  DISPID_FILEDOWNLOAD = 270_u32
  DISPID_NAVIGATEERROR = 271_u32
  DISPID_PRIVACYIMPACTEDSTATECHANGE = 272_u32
  DISPID_NEWWINDOW3 = 273_u32
  DISPID_VIEWUPDATE = 281_u32
  DISPID_SETPHISHINGFILTERSTATUS = 282_u32
  DISPID_WINDOWSTATECHANGED = 283_u32
  DISPID_NEWPROCESS = 284_u32
  DISPID_THIRDPARTYURLBLOCKED = 285_u32
  DISPID_REDIRECTXDOMAINBLOCKED = 286_u32
  DISPID_WEBWORKERSTARTED = 288_u32
  DISPID_WEBWORKERFINISHED = 289_u32
  DISPID_BEFORESCRIPTEXECUTE = 290_u32
  DISPID_PRINTTEMPLATEINSTANTIATION = 225_u32
  DISPID_PRINTTEMPLATETEARDOWN = 226_u32
  DISPID_UPDATEPAGESTATUS = 227_u32
  DISPID_WINDOWREGISTERED = 200_u32
  DISPID_WINDOWREVOKED = 201_u32
  DISPID_RESETFIRSTBOOTMODE = 1_u32
  DISPID_RESETSAFEMODE = 2_u32
  DISPID_REFRESHOFFLINEDESKTOP = 3_u32
  DISPID_ADDFAVORITE = 4_u32
  DISPID_ADDCHANNEL = 5_u32
  DISPID_ADDDESKTOPCOMPONENT = 6_u32
  DISPID_ISSUBSCRIBED = 7_u32
  DISPID_NAVIGATEANDFIND = 8_u32
  DISPID_IMPORTEXPORTFAVORITES = 9_u32
  DISPID_AUTOCOMPLETESAVEFORM = 10_u32
  DISPID_AUTOSCAN = 11_u32
  DISPID_AUTOCOMPLETEATTACH = 12_u32
  DISPID_SHOWBROWSERUI = 13_u32
  DISPID_ADDSEARCHPROVIDER = 14_u32
  DISPID_RUNONCESHOWN = 15_u32
  DISPID_SKIPRUNONCE = 16_u32
  DISPID_CUSTOMIZESETTINGS = 17_u32
  DISPID_SQMENABLED = 18_u32
  DISPID_PHISHINGENABLED = 19_u32
  DISPID_BRANDIMAGEURI = 20_u32
  DISPID_SKIPTABSWELCOME = 21_u32
  DISPID_DIAGNOSECONNECTION = 22_u32
  DISPID_CUSTOMIZECLEARTYPE = 23_u32
  DISPID_ISSEARCHPROVIDERINSTALLED = 24_u32
  DISPID_ISSEARCHMIGRATED = 25_u32
  DISPID_DEFAULTSEARCHPROVIDER = 26_u32
  DISPID_RUNONCEREQUIREDSETTINGSCOMPLETE = 27_u32
  DISPID_RUNONCEHASSHOWN = 28_u32
  DISPID_SEARCHGUIDEURL = 29_u32
  DISPID_ADDSERVICE = 30_u32
  DISPID_ISSERVICEINSTALLED = 31_u32
  DISPID_ADDTOFAVORITESBAR = 32_u32
  DISPID_BUILDNEWTABPAGE = 33_u32
  DISPID_SETRECENTLYCLOSEDVISIBLE = 34_u32
  DISPID_SETACTIVITIESVISIBLE = 35_u32
  DISPID_CONTENTDISCOVERYRESET = 36_u32
  DISPID_INPRIVATEFILTERINGENABLED = 37_u32
  DISPID_SUGGESTEDSITESENABLED = 38_u32
  DISPID_ENABLESUGGESTEDSITES = 39_u32
  DISPID_NAVIGATETOSUGGESTEDSITES = 40_u32
  DISPID_SHOWTABSHELP = 41_u32
  DISPID_SHOWINPRIVATEHELP = 42_u32
  DISPID_ISSITEMODE = 43_u32
  DISPID_SETSITEMODEICONOVERLAY = 44_u32
  DISPID_CLEARSITEMODEICONOVERLAY = 45_u32
  DISPID_UPDATETHUMBNAILBUTTON = 46_u32
  DISPID_SETTHUMBNAILBUTTONS = 47_u32
  DISPID_ADDTHUMBNAILBUTTONS = 48_u32
  DISPID_ADDSITEMODE = 49_u32
  DISPID_SETSITEMODEPROPERTIES = 50_u32
  DISPID_SITEMODECREATEJUMPLIST = 51_u32
  DISPID_SITEMODEADDJUMPLISTITEM = 52_u32
  DISPID_SITEMODECLEARJUMPLIST = 53_u32
  DISPID_SITEMODEADDBUTTONSTYLE = 54_u32
  DISPID_SITEMODESHOWBUTTONSTYLE = 55_u32
  DISPID_SITEMODESHOWJUMPLIST = 56_u32
  DISPID_ADDTRACKINGPROTECTIONLIST = 57_u32
  DISPID_SITEMODEACTIVATE = 58_u32
  DISPID_ISSITEMODEFIRSTRUN = 59_u32
  DISPID_TRACKINGPROTECTIONENABLED = 60_u32
  DISPID_ACTIVEXFILTERINGENABLED = 61_u32
  DISPID_PROVISIONNETWORKS = 62_u32
  DISPID_REPORTSAFEURL = 63_u32
  DISPID_SITEMODEREFRESHBADGE = 64_u32
  DISPID_SITEMODECLEARBADGE = 65_u32
  DISPID_DIAGNOSECONNECTIONUILESS = 66_u32
  DISPID_LAUNCHNETWORKCLIENTHELP = 67_u32
  DISPID_CHANGEDEFAULTBROWSER = 68_u32
  DISPID_STOPPERIODICUPDATE = 69_u32
  DISPID_STARTPERIODICUPDATE = 70_u32
  DISPID_CLEARNOTIFICATION = 71_u32
  DISPID_ENABLENOTIFICATIONQUEUE = 72_u32
  DISPID_PINNEDSITESTATE = 73_u32
  DISPID_LAUNCHINTERNETOPTIONS = 74_u32
  DISPID_STARTPERIODICUPDATEBATCH = 75_u32
  DISPID_ENABLENOTIFICATIONQUEUESQUARE = 76_u32
  DISPID_ENABLENOTIFICATIONQUEUEWIDE = 77_u32
  DISPID_ENABLENOTIFICATIONQUEUELARGE = 78_u32
  DISPID_SCHEDULEDTILENOTIFICATION = 79_u32
  DISPID_REMOVESCHEDULEDTILENOTIFICATION = 80_u32
  DISPID_STARTBADGEUPDATE = 81_u32
  DISPID_STOPBADGEUPDATE = 82_u32
  DISPID_ISMETAREFERRERAVAILABLE = 83_u32
  DISPID_SETEXPERIMENTALFLAG = 84_u32
  DISPID_GETEXPERIMENTALFLAG = 85_u32
  DISPID_SETEXPERIMENTALVALUE = 86_u32
  DISPID_GETEXPERIMENTALVALUE = 87_u32
  DISPID_HASNEEDIEAUTOLAUNCHFLAG = 88_u32
  DISPID_GETNEEDIEAUTOLAUNCHFLAG = 89_u32
  DISPID_SETNEEDIEAUTOLAUNCHFLAG = 90_u32
  DISPID_LAUNCHIE = 91_u32
  DISPID_RESETEXPERIMENTALFLAGS = 92_u32
  DISPID_GETCVLISTDATA = 93_u32
  DISPID_GETCVLISTLOCALDATA = 94_u32
  DISPID_GETEMIELISTDATA = 95_u32
  DISPID_GETEMIELISTLOCALDATA = 96_u32
  DISPID_OPENFAVORITESPANE = 97_u32
  DISPID_OPENFAVORITESSETTINGS = 98_u32
  DISPID_LAUNCHINHVSI = 99_u32
  DISPID_GETNEEDHVSIAUTOLAUNCHFLAG = 100_u32
  DISPID_SETNEEDHVSIAUTOLAUNCHFLAG = 101_u32
  DISPID_HASNEEDHVSIAUTOLAUNCHFLAG = 102_u32
  DISPID_GETOSSKU = 103_u32
  DISPID_SETMSDEFAULTS = 104_u32
  DISPID_SHELLUIHELPERLAST = 105_u32
  DISPID_ADVANCEERROR = 10_u32
  DISPID_RETREATERROR = 11_u32
  DISPID_CANADVANCEERROR = 12_u32
  DISPID_CANRETREATERROR = 13_u32
  DISPID_GETERRORLINE = 14_u32
  DISPID_GETERRORCHAR = 15_u32
  DISPID_GETERRORCODE = 16_u32
  DISPID_GETERRORMSG = 17_u32
  DISPID_GETERRORURL = 18_u32
  DISPID_GETDETAILSSTATE = 19_u32
  DISPID_SETDETAILSSTATE = 20_u32
  DISPID_GETPERERRSTATE = 21_u32
  DISPID_SETPERERRSTATE = 22_u32
  DISPID_GETALWAYSSHOWLOCKSTATE = 23_u32
  DISPID_FAVSELECTIONCHANGE = 1_u32
  DISPID_SELECTIONCHANGE = 2_u32
  DISPID_DOUBLECLICK = 3_u32
  DISPID_INITIALIZED = 4_u32
  DISPID_MOVESELECTIONUP = 1_u32
  DISPID_MOVESELECTIONDOWN = 2_u32
  DISPID_RESETSORT = 3_u32
  DISPID_NEWFOLDER = 4_u32
  DISPID_SYNCHRONIZE = 5_u32
  DISPID_IMPORT = 6_u32
  DISPID_EXPORT = 7_u32
  DISPID_INVOKECONTEXTMENU = 8_u32
  DISPID_MOVESELECTIONTO = 9_u32
  DISPID_SUBSCRIPTIONSENABLED = 10_u32
  DISPID_CREATESUBSCRIPTION = 11_u32
  DISPID_DELETESUBSCRIPTION = 12_u32
  DISPID_SETROOT = 13_u32
  DISPID_ENUMOPTIONS = 14_u32
  DISPID_SELECTEDITEM = 15_u32
  DISPID_ROOT = 16_u32
  DISPID_DEPTH = 17_u32
  DISPID_MODE = 18_u32
  DISPID_FLAGS = 19_u32
  DISPID_TVFLAGS = 20_u32
  DISPID_NSCOLUMNS = 21_u32
  DISPID_COUNTVIEWTYPES = 22_u32
  DISPID_SETVIEWTYPE = 23_u32
  DISPID_SELECTEDITEMS = 24_u32
  DISPID_EXPAND = 25_u32
  DISPID_UNSELECTALL = 26_u32
  TF_NAVIGATE = 2142153644_u32
  REGSTR_VAL_SMOOTHSCROLL_DEF = 1_u32
  REGSTR_VAL_USEICM_DEF = 0_u32
  MAX_SEARCH_FORMAT_STRING = 255_u32
  REGSTR_VAL_SECURITYWARNONSEND_DEF = 1_u32
  REGSTR_VAL_SECURITYWARNONSENDALWAYS_DEF = 1_u32
  REGSTR_VAL_SECURITYWARNONVIEW_DEF = 1_u32
  REGSTR_VAL_SECURITYALLOWCOOKIES_DEF = 1_u32
  REGSTR_VAL_SECURITYWARNONZONECROSSING_DEF = 1_u32
  REGSTR_VAL_SECURITYWARNONBADCERTVIEWING_DEF = 1_u32
  REGSTR_VAL_SECURITYWARNONBADCERTSENDING_DEF = 1_u32
  REGSTR_VAL_SECURITYDISABLECACHINGOFSSLPAGES_DEF = 0_u32
  REGSTR_VAL_SECURITYACTIVEX_DEF = 1_u32
  REGSTR_VAL_SECURITYACTICEXSCRIPTS_DEF = 1_u32
  REGSTR_VAL_SECURITYJAVA_DEF = 1_u32
  REGSTR_VAL_JAVAJIT_DEF = 0_u32
  REGSTR_VAL_JAVALOGGING_DEF = 0_u32
  REGSTR_VAL_VISIBLEBANDS_DEF = 7_u32
  TOOLSBAND = 1_u32
  ADDRESSBAND = 2_u32
  LINKSBAND = 4_u32
  REGSTR_VAL_SCHANNELENABLEPROTOCOL_DEF = 1_u32
  IE_USE_OE_PRESENT_HKEY = -2147483646_i32
  IE_USE_OE_MAIL_HKEY = -2147483647_i32
  IE_USE_OE_NEWS_HKEY = -2147483647_i32
  REGSTR_VAL_FONT_SIZE_DEF = 2_u32
  IDM_UNKNOWN = 0_u32
  IDM_ALIGNBOTTOM = 1_u32
  IDM_ALIGNHORIZONTALCENTERS = 2_u32
  IDM_ALIGNLEFT = 3_u32
  IDM_ALIGNRIGHT = 4_u32
  IDM_ALIGNTOGRID = 5_u32
  IDM_ALIGNTOP = 6_u32
  IDM_ALIGNVERTICALCENTERS = 7_u32
  IDM_ARRANGEBOTTOM = 8_u32
  IDM_ARRANGERIGHT = 9_u32
  IDM_BRINGFORWARD = 10_u32
  IDM_BRINGTOFRONT = 11_u32
  IDM_CENTERHORIZONTALLY = 12_u32
  IDM_CENTERVERTICALLY = 13_u32
  IDM_CODE = 14_u32
  IDM_DELETE = 17_u32
  IDM_FONTNAME = 18_u32
  IDM_FONTSIZE = 19_u32
  IDM_GROUP = 20_u32
  IDM_HORIZSPACECONCATENATE = 21_u32
  IDM_HORIZSPACEDECREASE = 22_u32
  IDM_HORIZSPACEINCREASE = 23_u32
  IDM_HORIZSPACEMAKEEQUAL = 24_u32
  IDM_INSERTOBJECT = 25_u32
  IDM_MULTILEVELREDO = 30_u32
  IDM_SENDBACKWARD = 32_u32
  IDM_SENDTOBACK = 33_u32
  IDM_SHOWTABLE = 34_u32
  IDM_SIZETOCONTROL = 35_u32
  IDM_SIZETOCONTROLHEIGHT = 36_u32
  IDM_SIZETOCONTROLWIDTH = 37_u32
  IDM_SIZETOFIT = 38_u32
  IDM_SIZETOGRID = 39_u32
  IDM_SNAPTOGRID = 40_u32
  IDM_TABORDER = 41_u32
  IDM_TOOLBOX = 42_u32
  IDM_MULTILEVELUNDO = 44_u32
  IDM_UNGROUP = 45_u32
  IDM_VERTSPACECONCATENATE = 46_u32
  IDM_VERTSPACEDECREASE = 47_u32
  IDM_VERTSPACEINCREASE = 48_u32
  IDM_VERTSPACEMAKEEQUAL = 49_u32
  IDM_JUSTIFYFULL = 50_u32
  IDM_BACKCOLOR = 51_u32
  IDM_BOLD = 52_u32
  IDM_BORDERCOLOR = 53_u32
  IDM_FLAT = 54_u32
  IDM_FORECOLOR = 55_u32
  IDM_ITALIC = 56_u32
  IDM_JUSTIFYCENTER = 57_u32
  IDM_JUSTIFYGENERAL = 58_u32
  IDM_JUSTIFYLEFT = 59_u32
  IDM_JUSTIFYRIGHT = 60_u32
  IDM_RAISED = 61_u32
  IDM_SUNKEN = 62_u32
  IDM_UNDERLINE = 63_u32
  IDM_CHISELED = 64_u32
  IDM_ETCHED = 65_u32
  IDM_SHADOWED = 66_u32
  IDM_FIND = 67_u32
  IDM_SHOWGRID = 69_u32
  IDM_OBJECTVERBLIST0 = 72_u32
  IDM_OBJECTVERBLIST1 = 73_u32
  IDM_OBJECTVERBLIST2 = 74_u32
  IDM_OBJECTVERBLIST3 = 75_u32
  IDM_OBJECTVERBLIST4 = 76_u32
  IDM_OBJECTVERBLIST5 = 77_u32
  IDM_OBJECTVERBLIST6 = 78_u32
  IDM_OBJECTVERBLIST7 = 79_u32
  IDM_OBJECTVERBLIST8 = 80_u32
  IDM_OBJECTVERBLIST9 = 81_u32
  IDM_OBJECTVERBLISTLAST = 81_u32
  IDM_CONVERTOBJECT = 82_u32
  IDM_CUSTOMCONTROL = 83_u32
  IDM_CUSTOMIZEITEM = 84_u32
  IDM_RENAME = 85_u32
  IDM_IMPORT = 86_u32
  IDM_NEWPAGE = 87_u32
  IDM_MOVE = 88_u32
  IDM_CANCEL = 89_u32
  IDM_FONT = 90_u32
  IDM_STRIKETHROUGH = 91_u32
  IDM_DELETEWORD = 92_u32
  IDM_EXECPRINT = 93_u32
  IDM_JUSTIFYNONE = 94_u32
  IDM_TRISTATEBOLD = 95_u32
  IDM_TRISTATEITALIC = 96_u32
  IDM_TRISTATEUNDERLINE = 97_u32
  IDM_FORWARDDELETE = 98_u32
  IDM_FOLLOW_ANCHOR = 2008_u32
  IDM_INSINPUTIMAGE = 2114_u32
  IDM_INSINPUTBUTTON = 2115_u32
  IDM_INSINPUTRESET = 2116_u32
  IDM_INSINPUTSUBMIT = 2117_u32
  IDM_INSINPUTUPLOAD = 2118_u32
  IDM_INSFIELDSET = 2119_u32
  IDM_PASTEINSERT = 2120_u32
  IDM_REPLACE = 2121_u32
  IDM_EDITSOURCE = 2122_u32
  IDM_BOOKMARK = 2123_u32
  IDM_HYPERLINK = 2124_u32
  IDM_UNLINK = 2125_u32
  IDM_BROWSEMODE = 2126_u32
  IDM_EDITMODE = 2127_u32
  IDM_UNBOOKMARK = 2128_u32
  IDM_TOOLBARS = 2130_u32
  IDM_STATUSBAR = 2131_u32
  IDM_FORMATMARK = 2132_u32
  IDM_TEXTONLY = 2133_u32
  IDM_OPTIONS = 2135_u32
  IDM_FOLLOWLINKC = 2136_u32
  IDM_FOLLOWLINKN = 2137_u32
  IDM_VIEWSOURCE = 2139_u32
  IDM_ZOOMPOPUP = 2140_u32
  IDM_BASELINEFONT1 = 2141_u32
  IDM_BASELINEFONT2 = 2142_u32
  IDM_BASELINEFONT3 = 2143_u32
  IDM_BASELINEFONT4 = 2144_u32
  IDM_BASELINEFONT5 = 2145_u32
  IDM_HORIZONTALLINE = 2150_u32
  IDM_LINEBREAKNORMAL = 2151_u32
  IDM_LINEBREAKLEFT = 2152_u32
  IDM_LINEBREAKRIGHT = 2153_u32
  IDM_LINEBREAKBOTH = 2154_u32
  IDM_NONBREAK = 2155_u32
  IDM_SPECIALCHAR = 2156_u32
  IDM_HTMLSOURCE = 2157_u32
  IDM_IFRAME = 2158_u32
  IDM_HTMLCONTAIN = 2159_u32
  IDM_TEXTBOX = 2161_u32
  IDM_TEXTAREA = 2162_u32
  IDM_CHECKBOX = 2163_u32
  IDM_RADIOBUTTON = 2164_u32
  IDM_DROPDOWNBOX = 2165_u32
  IDM_LISTBOX = 2166_u32
  IDM_BUTTON = 2167_u32
  IDM_IMAGE = 2168_u32
  IDM_OBJECT = 2169_u32
  IDM_1D = 2170_u32
  IDM_IMAGEMAP = 2171_u32
  IDM_FILE = 2172_u32
  IDM_COMMENT = 2173_u32
  IDM_SCRIPT = 2174_u32
  IDM_JAVAAPPLET = 2175_u32
  IDM_PLUGIN = 2176_u32
  IDM_PAGEBREAK = 2177_u32
  IDM_HTMLAREA = 2178_u32
  IDM_PARAGRAPH = 2180_u32
  IDM_FORM = 2181_u32
  IDM_MARQUEE = 2182_u32
  IDM_LIST = 2183_u32
  IDM_ORDERLIST = 2184_u32
  IDM_UNORDERLIST = 2185_u32
  IDM_INDENT = 2186_u32
  IDM_OUTDENT = 2187_u32
  IDM_PREFORMATTED = 2188_u32
  IDM_ADDRESS = 2189_u32
  IDM_BLINK = 2190_u32
  IDM_DIV = 2191_u32
  IDM_TABLEINSERT = 2200_u32
  IDM_RCINSERT = 2201_u32
  IDM_CELLINSERT = 2202_u32
  IDM_CAPTIONINSERT = 2203_u32
  IDM_CELLMERGE = 2204_u32
  IDM_CELLSPLIT = 2205_u32
  IDM_CELLSELECT = 2206_u32
  IDM_ROWSELECT = 2207_u32
  IDM_COLUMNSELECT = 2208_u32
  IDM_TABLESELECT = 2209_u32
  IDM_TABLEPROPERTIES = 2210_u32
  IDM_CELLPROPERTIES = 2211_u32
  IDM_ROWINSERT = 2212_u32
  IDM_COLUMNINSERT = 2213_u32
  IDM_HELP_CONTENT = 2220_u32
  IDM_HELP_ABOUT = 2221_u32
  IDM_HELP_README = 2222_u32
  IDM_REMOVEFORMAT = 2230_u32
  IDM_PAGEINFO = 2231_u32
  IDM_TELETYPE = 2232_u32
  IDM_GETBLOCKFMTS = 2233_u32
  IDM_BLOCKFMT = 2234_u32
  IDM_SHOWHIDE_CODE = 2235_u32
  IDM_TABLE = 2236_u32
  IDM_COPYFORMAT = 2237_u32
  IDM_PASTEFORMAT = 2238_u32
  IDM_GOTO = 2239_u32
  IDM_CHANGEFONT = 2240_u32
  IDM_CHANGEFONTSIZE = 2241_u32
  IDM_CHANGECASE = 2246_u32
  IDM_SHOWSPECIALCHAR = 2249_u32
  IDM_SUBSCRIPT = 2247_u32
  IDM_SUPERSCRIPT = 2248_u32
  IDM_CENTERALIGNPARA = 2250_u32
  IDM_LEFTALIGNPARA = 2251_u32
  IDM_RIGHTALIGNPARA = 2252_u32
  IDM_REMOVEPARAFORMAT = 2253_u32
  IDM_APPLYNORMAL = 2254_u32
  IDM_APPLYHEADING1 = 2255_u32
  IDM_APPLYHEADING2 = 2256_u32
  IDM_APPLYHEADING3 = 2257_u32
  IDM_DOCPROPERTIES = 2260_u32
  IDM_ADDFAVORITES = 2261_u32
  IDM_COPYSHORTCUT = 2262_u32
  IDM_SAVEBACKGROUND = 2263_u32
  IDM_SETWALLPAPER = 2264_u32
  IDM_COPYBACKGROUND = 2265_u32
  IDM_CREATESHORTCUT = 2266_u32
  IDM_PAGE = 2267_u32
  IDM_SAVETARGET = 2268_u32
  IDM_SHOWPICTURE = 2269_u32
  IDM_SAVEPICTURE = 2270_u32
  IDM_DYNSRCPLAY = 2271_u32
  IDM_DYNSRCSTOP = 2272_u32
  IDM_PRINTTARGET = 2273_u32
  IDM_IMGARTPLAY = 2274_u32
  IDM_IMGARTSTOP = 2275_u32
  IDM_IMGARTREWIND = 2276_u32
  IDM_PRINTQUERYJOBSPENDING = 2277_u32
  IDM_SETDESKTOPITEM = 2278_u32
  IDM_CONTEXTMENU = 2280_u32
  IDM_GOBACKWARD = 2282_u32
  IDM_GOFORWARD = 2283_u32
  IDM_PRESTOP = 2284_u32
  IDM_GOTOCLIPBOARDADDRESS = 2285_u32
  IDM_GOTOCLIPBOARDTEXT = 2286_u32
  IDM_MP_MYPICS = 2287_u32
  IDM_MP_EMAILPICTURE = 2288_u32
  IDM_MP_PRINTPICTURE = 2289_u32
  IDM_CREATELINK = 2290_u32
  IDM_COPYCONTENT = 2291_u32
  IDM_LANGUAGE = 2292_u32
  IDM_GETPRINTTEMPLATE = 2295_u32
  IDM_SETPRINTTEMPLATE = 2296_u32
  IDM_TEMPLATE_PAGESETUP = 2298_u32
  IDM_REFRESH = 2300_u32
  IDM_STOPDOWNLOAD = 2301_u32
  IDM_ENABLE_INTERACTION = 2302_u32
  IDM_LAUNCHDEBUGGER = 2310_u32
  IDM_BREAKATNEXT = 2311_u32
  IDM_INSINPUTHIDDEN = 2312_u32
  IDM_INSINPUTPASSWORD = 2313_u32
  IDM_OVERWRITE = 2314_u32
  IDM_PARSECOMPLETE = 2315_u32
  IDM_HTMLEDITMODE = 2316_u32
  IDM_REGISTRYREFRESH = 2317_u32
  IDM_COMPOSESETTINGS = 2318_u32
  IDM_SHOWALLTAGS = 2327_u32
  IDM_SHOWALIGNEDSITETAGS = 2321_u32
  IDM_SHOWSCRIPTTAGS = 2322_u32
  IDM_SHOWSTYLETAGS = 2323_u32
  IDM_SHOWCOMMENTTAGS = 2324_u32
  IDM_SHOWAREATAGS = 2325_u32
  IDM_SHOWUNKNOWNTAGS = 2326_u32
  IDM_SHOWMISCTAGS = 2320_u32
  IDM_SHOWZEROBORDERATDESIGNTIME = 2328_u32
  IDM_AUTODETECT = 2329_u32
  IDM_SCRIPTDEBUGGER = 2330_u32
  IDM_GETBYTESDOWNLOADED = 2331_u32
  IDM_NOACTIVATENORMALOLECONTROLS = 2332_u32
  IDM_NOACTIVATEDESIGNTIMECONTROLS = 2333_u32
  IDM_NOACTIVATEJAVAAPPLETS = 2334_u32
  IDM_NOFIXUPURLSONPASTE = 2335_u32
  IDM_EMPTYGLYPHTABLE = 2336_u32
  IDM_ADDTOGLYPHTABLE = 2337_u32
  IDM_REMOVEFROMGLYPHTABLE = 2338_u32
  IDM_REPLACEGLYPHCONTENTS = 2339_u32
  IDM_SHOWWBRTAGS = 2340_u32
  IDM_PERSISTSTREAMSYNC = 2341_u32
  IDM_SETDIRTY = 2342_u32
  IDM_RUNURLSCRIPT = 2343_u32
  IDM_ZOOMRATIO = 2344_u32
  IDM_GETZOOMNUMERATOR = 2345_u32
  IDM_GETZOOMDENOMINATOR = 2346_u32
  IDM_DIRLTR = 2350_u32
  IDM_DIRRTL = 2351_u32
  IDM_BLOCKDIRLTR = 2352_u32
  IDM_BLOCKDIRRTL = 2353_u32
  IDM_INLINEDIRLTR = 2354_u32
  IDM_INLINEDIRRTL = 2355_u32
  IDM_ISTRUSTEDDLG = 2356_u32
  IDM_INSERTSPAN = 2357_u32
  IDM_LOCALIZEEDITOR = 2358_u32
  IDM_SAVEPRETRANSFORMSOURCE = 2370_u32
  IDM_VIEWPRETRANSFORMSOURCE = 2371_u32
  IDM_SCROLL_HERE = 2380_u32
  IDM_SCROLL_TOP = 2381_u32
  IDM_SCROLL_BOTTOM = 2382_u32
  IDM_SCROLL_PAGEUP = 2383_u32
  IDM_SCROLL_PAGEDOWN = 2384_u32
  IDM_SCROLL_UP = 2385_u32
  IDM_SCROLL_DOWN = 2386_u32
  IDM_SCROLL_LEFTEDGE = 2387_u32
  IDM_SCROLL_RIGHTEDGE = 2388_u32
  IDM_SCROLL_PAGELEFT = 2389_u32
  IDM_SCROLL_PAGERIGHT = 2390_u32
  IDM_SCROLL_LEFT = 2391_u32
  IDM_SCROLL_RIGHT = 2392_u32
  IDM_MULTIPLESELECTION = 2393_u32
  IDM_2D_POSITION = 2394_u32
  IDM_2D_ELEMENT = 2395_u32
  IDM_1D_ELEMENT = 2396_u32
  IDM_ABSOLUTE_POSITION = 2397_u32
  IDM_LIVERESIZE = 2398_u32
  IDM_ATOMICSELECTION = 2399_u32
  IDM_AUTOURLDETECT_MODE = 2400_u32
  IDM_IE50_PASTE = 2401_u32
  IDM_IE50_PASTE_MODE = 2402_u32
  IDM_GETIPRINT = 2403_u32
  IDM_DISABLE_EDITFOCUS_UI = 2404_u32
  IDM_RESPECTVISIBILITY_INDESIGN = 2405_u32
  IDM_CSSEDITING_LEVEL = 2406_u32
  IDM_UI_OUTDENT = 2407_u32
  IDM_UPDATEPAGESTATUS = 2408_u32
  IDM_IME_ENABLE_RECONVERSION = 2409_u32
  IDM_KEEPSELECTION = 2410_u32
  IDM_UNLOADDOCUMENT = 2411_u32
  IDM_OVERRIDE_CURSOR = 2420_u32
  IDM_PEERHITTESTSAMEINEDIT = 2423_u32
  IDM_TRUSTAPPCACHE = 2425_u32
  IDM_BACKGROUNDIMAGECACHE = 2430_u32
  IDM_GETUSERACTIONTIME = 2431_u32
  IDM_BEGINUSERACTION = 2432_u32
  IDM_ENDUSERACTION = 2433_u32
  IDM_SETCUSTOMCURSOR = 2434_u32
  IDM_FOLLOWLINKT = 2435_u32
  IDM_CARETBROWSINGMODE = 2436_u32
  IDM_STYLEMENU_SETNOSTYLE = 2437_u32
  IDM_STYLEMENU_GETNOSTYLE = 2438_u32
  IDM_STYLEMENU_GETPREFSTYLE = 2439_u32
  IDM_STYLEMENU_CHANGESELECTEDSTYLE = 2440_u32
  IDM_MEDIA_PLAYPAUSE = 2441_u32
  IDM_MEDIA_MUTEUNMUTE = 2442_u32
  IDM_MEDIA_PLAY = 2443_u32
  IDM_MEDIA_PAUSE = 2444_u32
  IDM_MEDIA_STOP = 2445_u32
  IDM_MEDIA_FULLSCREEN_TOGGLE = 2446_u32
  IDM_MEDIA_FULLSCREEN_EXIT = 2447_u32
  IDM_MEDIA_VOLUME_UP = 2448_u32
  IDM_MEDIA_VOLUME_DOWN = 2449_u32
  IDM_MEDIA_SEEK_TO_START = 2450_u32
  IDM_MEDIA_SEEK_TO_END = 2451_u32
  IDM_MEDIA_SEEK_FWD_SMALL = 2452_u32
  IDM_MEDIA_SEEK_BACK_SMALL = 2453_u32
  IDM_MEDIA_SEEK_FWD_LARGE = 2454_u32
  IDM_MEDIA_SEEK_BACK_LARGE = 2455_u32
  IDM_MEDIA_RATE_FASTER = 2456_u32
  IDM_MEDIA_RATE_SLOWER = 2457_u32
  IDM_MEDIA_SHOWCONTROLS_TOGGLE = 2458_u32
  IDM_MEDIA_ZOOMMODE_TOGGLE = 2459_u32
  IDM_MEDIA_FRAMESTEP_FWD = 2460_u32
  IDM_MEDIA_FRAMESTEP_BACK = 2461_u32
  IDM_MEDIA_MUTE = 2462_u32
  IDM_MEDIA_UNMUTE = 2463_u32
  IDM_MEDIA_SHOW_AUDIO_ACCESS = 2464_u32
  IDM_MEDIA_SHOW_SUBTITLE_ACCESS = 2465_u32
  IDM_MEDIA_PLAYRATE0 = 2480_u32
  IDM_MEDIA_PLAYRATE1 = 2481_u32
  IDM_MEDIA_PLAYRATE2 = 2482_u32
  IDM_MEDIA_PLAYRATE3 = 2483_u32
  IDM_MEDIA_PLAYRATE4 = 2484_u32
  IDM_MEDIA_PLAYRATE5 = 2485_u32
  IDM_MEDIA_PLAYRATE6 = 2486_u32
  IDM_MEDIA_PLAYRATE7 = 2487_u32
  IDM_MEDIA_PLAYRATE8 = 2488_u32
  IDM_MEDIA_PLAYRATE9 = 2489_u32
  IDM_PASTECONTENTONLY = 2500_u32
  IDM_PASTETEXTONLY = 2501_u32
  IDM_INSERTHTML = 2502_u32
  IDM_DEFAULTBLOCK = 6046_u32
  IDM_MIMECSET__FIRST__ = 3609_u32
  IDM_MIMECSET__LAST__ = 3699_u32
  IDM_MENUEXT_FIRST__ = 3700_u32
  IDM_MENUEXT_LAST__ = 3732_u32
  IDM_MENUEXT_COUNT = 3733_u32
  IDM_ADDCONSOLEMESSAGERECEIVER = 3800_u32
  IDM_REMOVECONSOLEMESSAGERECEIVER = 3801_u32
  IDM_STARTDIAGNOSTICSMODE = 3802_u32
  IDM_GETSCRIPTENGINE = 3803_u32
  IDM_ADDDEBUGCALLBACKRECEIVER = 3804_u32
  IDM_REMOVEDEBUGCALLBACKRECEIVER = 3805_u32
  IDM_DEFAULTPARAGRAPHSEPARATOR = 3900_u32
  IDM_BEGINUNDOUNIT = 3901_u32
  IDM_ENDUNDOUNIT = 3902_u32
  IDM_CLEARUNDO = 3903_u32
  IDM_INSPECTELEMENT = 3904_u32
  IDM_SHAREPICTURE = 3905_u32
  IDM_ENABLE_OBJECT_RESIZING = 3906_u32
  IDM_INSERTTEXT = 3907_u32
  IDM_LAUNCHURICALLBACK = 3908_u32
  IDM_FOLLOWLINKN_INPRIVATE = 3909_u32
  IDM_FOLLOWLINKT_INPRIVATE = 3910_u32
  IDM_FOLLOWLINKEDGE = 3911_u32
  IDM_OPEN = 2000_u32
  IDM_NEW = 2001_u32
  IDM_SAVE = 70_u32
  IDM_SAVEAS = 71_u32
  IDM_SAVECOPYAS = 2002_u32
  IDM_PRINTPREVIEW = 2003_u32
  IDM_SHOWPRINT = 2010_u32
  IDM_SHOWPAGESETUP = 2011_u32
  IDM_PRINT = 27_u32
  IDM_PAGESETUP = 2004_u32
  IDM_SPELL = 2005_u32
  IDM_PASTESPECIAL = 2006_u32
  IDM_CLEARSELECTION = 2007_u32
  IDM_PROPERTIES = 28_u32
  IDM_REDO = 29_u32
  IDM_UNDO = 43_u32
  IDM_SELECTALL = 31_u32
  IDM_ZOOMPERCENT = 50_u32
  IDM_GETZOOM = 68_u32
  IDM_STOP = 2138_u32
  IDM_COPY = 15_u32
  IDM_CUT = 16_u32
  IDM_PASTE = 26_u32
  IDM_SAVEPDF = 99_u32
  IDM_TOGGLEREADINGBAR = 15209_u32
  IDM_ADDPDFHIGHLIGHT = 15210_u32
  IDM_DELETEPDFHIGHLIGHT = 15211_u32
  IDM_ADDPDFNOTE = 15212_u32
  IDM_OPENPDFNOTE = 15213_u32
  IDM_EDITPDFHIGHLIGHT = 15214_u32
  IDM_PINKHIGHLIGHT = 15215_u32
  IDM_BLUEHIGHLIGHT = 15216_u32
  IDM_GREENHIGHLIGHT = 15217_u32
  IDM_YELLOWHIGHLIGHT = 15218_u32
  IDM_NONEHIGHLIGHT = 15219_u32
  IDM_PDFREADALOUD = 15220_u32
  IDM_SHAREPDF = 15221_u32
  IDM_PDFDEFINE = 15222_u32
  CMD_ZOOM_PAGEWIDTH = -1_i32
  CMD_ZOOM_ONEPAGE = -2_i32
  CMD_ZOOM_TWOPAGES = -3_i32
  CMD_ZOOM_SELECTION = -4_i32
  CMD_ZOOM_FIT = -5_i32
  IDM_CONTEXT = 1_u32
  IDM_HWND = 2_u32
  IDM_NEW_TOPLEVELWINDOW = 7050_u32
  IDM_PRESERVEUNDOALWAYS = 6049_u32
  IDM_PERSISTDEFAULTVALUES = 7100_u32
  IDM_PROTECTMETATAGS = 7101_u32
  IDM_GETFRAMEZONE = 6037_u32
  IDM_REFRESH_THIS = 6042_u32
  IDM_MENUEXT_PLACEHOLDER = 6047_u32
  IDM_FIRE_PRINTTEMPLATEUP = 15000_u32
  IDM_FIRE_PRINTTEMPLATEDOWN = 15001_u32
  IDM_SETPRINTHANDLES = 15002_u32
  IDM_CLEARAUTHENTICATIONCACHE = 15003_u32
  IDM_GETUSERINITFLAGS = 15004_u32
  IDM_GETDOCDLGFLAGS = 15005_u32
  IDM_OLEWINDOWSTATECHANGED = 15006_u32
  IDM_ACTIVEXINSTALLSCOPE = 15007_u32
  IDM_SETSESSIONDOCUMENTMODE = 15008_u32
  IDM_GETSESSIONDOCUMENTMODE = 15009_u32
  IDM_SETPROFILINGONSTART = 15010_u32
  IDM_GETPROFILINGONSTART = 15011_u32
  IDM_SETSCRIPTCONSOLE = 15012_u32
  IDM_SETNAVIGATEEVENTSINK = 15013_u32
  IDM_SETDEVTOOLBARCONSOLE = 15016_u32
  IDM_POPSTATEEVENT = 15017_u32
  IDM_SETPARTIALLAYOUTSTATUS = 15021_u32
  IDM_GETPARTIALLAYOUTSTATUS = 15022_u32
  IDM_ADDPARTIALTESTSTEPCOUNT = 15023_u32
  IDM_SETL9QUIRKSEMULATIONENABLED = 15024_u32
  IDM_GETL9QUIRKSEMULATIONENABLED = 15025_u32
  IDM_SETPOINTERLOCKCONSENT = 15026_u32
  IDM_GETDEFAULTZOOMLEVEL = 15027_u32
  IDM_GETELEMENTBOUNDINGBOX = 15028_u32
  IDM_SETGEOLOCATIONCONSENT = 15029_u32
  IDM_ACTIVEXFILTERINGENABLED = 15030_u32
  IDM_SHARE = 15031_u32
  IDM_SHAREAPPCACHEEVENT = 15033_u32
  IDM_GETPRINTMANAGERDOCSOURCE = 15038_u32
  IDM_SETEXTRAHEADERS = 15039_u32
  IDM_SETACCESSIBILITYNAME = 15040_u32
  IDM_UPDATESETTINGSFROMREGISTRY = 15041_u32
  IDM_PERFORMEDITACTIVATION = 15042_u32
  IDM_SETDEFAULTBACKGROUNDCOLOR = 15043_u32
  IDM_GETDEFAULTBACKGROUNDCOLOR = 15044_u32
  IDM_NOTIFYZOOMANDSCROLLANIMATIONEND = 15045_u32
  IDM_NOTIFYCONTEXTMENUDISMISSED = 15046_u32
  IDM_GETPRINTMANAGERDOCSOURCEASYNC = 15047_u32
  IDM_SETPAGEACTIONALLOWEDFLAGS = 15100_u32
  IDM_INVOKEFLIPAHEADTARGET = 15200_u32
  IDM_ENABLEFLIPAHEADTARGET = 15201_u32
  IDM_DEBUGGERDYNAMICATTACH = 15202_u32
  IDM_DEBUGGERDYNAMICDETACH = 15203_u32
  IDM_DEBUGGERDYNAMICATTACHSOURCERUNDOWN = 15204_u32
  IDM_GETDEBUGGERSTATE = 15205_u32
  IDM_SELECTIONSEARCH = 15206_u32
  IDM_SHOWSHAREUI = 15207_u32
  IDM_RUNFLASH = 15208_u32
  DISPID_INTERNAL_CELEMENTCLASSCACHE = 2147483648_u32
  DISPID_HTMLOBJECT = 66036_u32
  DISPID_ELEMENT = 66536_u32
  DISPID_SITE = 67536_u32
  DISPID_OBJECT = 68536_u32
  DISPID_STYLE = 69536_u32
  DISPID_BASE_STYLE = 70036_u32
  DISPID_ATTRS = 70536_u32
  DISPID_EVENTS = 71536_u32
  DISPID_XOBJ_EXPANDO = 72536_u32
  DISPID_XOBJ_ORDINAL = 73536_u32
  DISPID_ACTIVEX_EXPANDO_BASE = 72536_u32
  DISPID_ACTIVEX_EXPANDO_MAX = 73535_u32
  DISPID_OBJECT_ORDINAL_BASE = 73536_u32
  DISPID_OBJECT_ORDINAL_MAX = 74535_u32
  DISPID_COLLECTION_MIN = 1000000_u32
  DISPID_COLLECTION_MAX = 2999999_u32
  DISPID_STYLESHEETSCOLLECTION_NAMED_BASE = 1000000_u32
  DISPID_STYLESHEETSCOLLECTION_ORDINAL_BASE = 2000000_u32
  DISPID_STYLESHEETSCOLLECTION_ORDINAL_MAX = 2999999_u32
  DISPID_EXPANDO_BASE = 3000000_u32
  DISPID_EXPANDO_MAX = 3999999_u32
  DISPID_EVENTHOOK_SENSITIVE_BASE = 4000000_u32
  DISPID_EVENTHOOK_SENSITIVE_MAX = 4499999_u32
  DISPID_EVENTHOOK_INSENSITIVE_BASE = 4500000_u32
  DISPID_EVENTHOOK_INSENSITIVE_MAX = 4999999_u32
  DISPID_PEER_HOLDER_BASE = 5000000_u32
  DISPID_CANVASPIXELARRAY_BASE = 5000000_u32
  DISPID_CANVASPIXELARRAY_MAX = 2000000000_u32
  DISPID_CommonCtrl_FONTNAME = 1_u32
  DISPID_CommonCtrl_FONTSIZE = 2_u32
  DISPID_CommonCtrl_FONTBOLD = 3_u32
  DISPID_CommonCtrl_FONTITAL = 4_u32
  DISPID_CommonCtrl_FONTUNDER = 5_u32
  DISPID_CommonCtrl_FONTSTRIKE = 6_u32
  DISPID_CommonCtrl_FONTWEIGHT = 7_u32
  DISPID_CommonCtrl_FONTCHARSET = 8_u32
  DISPID_CommonCtrl_FONTSUPERSCRIPT = 9_u32
  DISPID_CommonCtrl_FONTSUBSCRIPT = 10_u32
  DISPID_MSDATASRCINTERFACE = -3900_i32
  DISPID_ADVISEDATASRCCHANGEEVENT = -3901_i32
  DISPID_HTMLDLG = 25000_u32
  DISPID_HTMLDLGMODEL = 26000_u32
  DISPID_HTMLPOPUP = 27000_u32
  DISPID_HTMLAPP = 5000_u32
  STDPROPID_XOBJ_NAME = 65536_u32
  STDPROPID_XOBJ_INDEX = 65537_u32
  STDPROPID_IE3XOBJ_OBJECTALIGN = 65537_u32
  STDPROPID_XOBJ_BASEHREF = 65538_u32
  STDPROPID_XOBJ_LEFT = 65539_u32
  STDPROPID_XOBJ_TOP = 65540_u32
  STDPROPID_XOBJ_WIDTH = 65541_u32
  STDPROPID_XOBJ_HEIGHT = 65542_u32
  STDPROPID_XOBJ_VISIBLE = 65543_u32
  STDPROPID_XOBJ_PARENT = 65544_u32
  STDPROPID_XOBJ_DRAGMODE = 65545_u32
  STDPROPID_XOBJ_DRAGICON = 65546_u32
  STDPROPID_XOBJ_TAG = 65547_u32
  STDPROPID_XOBJ_TABSTOP = 65550_u32
  STDPROPID_XOBJ_TABINDEX = 65551_u32
  STDPROPID_XOBJ_HELPCONTEXTID = 65586_u32
  STDPROPID_XOBJ_DEFAULT = 65591_u32
  STDPROPID_XOBJ_CANCEL = 65592_u32
  STDPROPID_XOBJ_LEFTNORUN = 65593_u32
  STDPROPID_XOBJ_TOPNORUN = 65594_u32
  STDPROPID_XOBJ_ALIGNPERSIST = 65596_u32
  STDPROPID_XOBJ_LINKTIMEOUT = 65597_u32
  STDPROPID_XOBJ_LINKTOPIC = 65598_u32
  STDPROPID_XOBJ_LINKITEM = 65599_u32
  STDPROPID_XOBJ_LINKMODE = 65600_u32
  STDPROPID_XOBJ_DATACHANGED = 65601_u32
  STDPROPID_XOBJ_DATAFIELD = 65602_u32
  STDPROPID_XOBJ_DATASOURCE = 65603_u32
  STDPROPID_XOBJ_WHATSTHISHELPID = 65604_u32
  STDPROPID_XOBJ_CONTROLTIPTEXT = 65605_u32
  STDPROPID_XOBJ_STATUSBARTEXT = 65606_u32
  STDPROPID_XOBJ_APPLICATION = 65607_u32
  STDPROPID_XOBJ_BLOCKALIGN = 65608_u32
  STDPROPID_XOBJ_CONTROLALIGN = 65609_u32
  STDPROPID_XOBJ_STYLE = 65610_u32
  STDPROPID_XOBJ_COUNT = 65611_u32
  STDPROPID_XOBJ_DISABLED = 65612_u32
  STDPROPID_XOBJ_RIGHT = 65613_u32
  STDPROPID_XOBJ_BOTTOM = 65614_u32
  STDPROPID_XOBJ_GETSVGDOCUMENT = 65615_u32
  STDDISPID_XOBJ_ONFOCUS = 65537_u32
  STDDISPID_XOBJ_BEFOREUPDATE = 65540_u32
  STDDISPID_XOBJ_AFTERUPDATE = 65541_u32
  STDDISPID_XOBJ_ONROWEXIT = 65542_u32
  STDDISPID_XOBJ_ONROWENTER = 65543_u32
  STDDISPID_XOBJ_ONMOUSEOVER = 65544_u32
  STDDISPID_XOBJ_ONMOUSEOUT = 65545_u32
  STDDISPID_XOBJ_ONHELP = 65546_u32
  STDDISPID_XOBJ_ONDRAGSTART = 65547_u32
  STDDISPID_XOBJ_ONSELECTSTART = 65548_u32
  STDDISPID_XOBJ_ERRORUPDATE = 65549_u32
  STDDISPID_XOBJ_ONDATASETCHANGED = 65550_u32
  STDDISPID_XOBJ_ONDATAAVAILABLE = 65551_u32
  STDDISPID_XOBJ_ONDATASETCOMPLETE = 65552_u32
  STDDISPID_XOBJ_ONFILTER = 65553_u32
  STDDISPID_XOBJ_ONLOSECAPTURE = 65554_u32
  STDDISPID_XOBJ_ONPROPERTYCHANGE = 65555_u32
  STDDISPID_XOBJ_ONDRAG = 65556_u32
  STDDISPID_XOBJ_ONDRAGEND = 65557_u32
  STDDISPID_XOBJ_ONDRAGENTER = 65558_u32
  STDDISPID_XOBJ_ONDRAGOVER = 65559_u32
  STDDISPID_XOBJ_ONDRAGLEAVE = 65560_u32
  STDDISPID_XOBJ_ONDROP = 65561_u32
  STDDISPID_XOBJ_ONCUT = 65562_u32
  STDDISPID_XOBJ_ONCOPY = 65563_u32
  STDDISPID_XOBJ_ONPASTE = 65564_u32
  STDDISPID_XOBJ_ONBEFORECUT = 65565_u32
  STDDISPID_XOBJ_ONBEFORECOPY = 65566_u32
  STDDISPID_XOBJ_ONBEFOREPASTE = 65567_u32
  STDDISPID_XOBJ_ONROWSDELETE = 65568_u32
  STDDISPID_XOBJ_ONROWSINSERTED = 65569_u32
  STDDISPID_XOBJ_ONCELLCHANGE = 65570_u32
  DISPID_NORMAL_FIRST = 1000_u32
  DISPID_IE8_NORMAL_FIRST = 1150_u32
  DISPID_ANCHOR = 1000_u32
  DISPID_BLOCK = 1000_u32
  DISPID_BODY = 2000_u32
  DISPID_BR = 1000_u32
  DISPID_BGSOUND = 1000_u32
  DISPID_DD = 1000_u32
  DISPID_DIR = 1000_u32
  DISPID_DIV = 1000_u32
  DISPID_DL = 1000_u32
  DISPID_DT = 1000_u32
  DISPID_EFONT = 1000_u32
  DISPID_FORM = 1000_u32
  DISPID_HEADER = 1000_u32
  DISPID_HEDELEMS = 1000_u32
  DISPID_HR = 1000_u32
  DISPID_LABEL = 1000_u32
  DISPID_LI = 1000_u32
  DISPID_IMGBASE = 1000_u32
  DISPID_IMG = 2000_u32
  DISPID_INPUTIMAGE = 2000_u32
  DISPID_INPUT = 2000_u32
  DISPID_INPUTTEXTBASE = 3000_u32
  DISPID_INPUTTEXT = 4000_u32
  DISPID_MENU = 1000_u32
  DISPID_OL = 1000_u32
  DISPID_PARA = 1000_u32
  DISPID_SELECT = 1000_u32
  DISPID_SELECTOBJ = 1000_u32
  DISPID_TABLE = 1000_u32
  DISPID_TEXTSITE = 1000_u32
  DISPID_TEXTAREA = 5000_u32
  DISPID_MARQUEE = 6000_u32
  DISPID_RICHTEXT = 7000_u32
  DISPID_BUTTON = 8000_u32
  DISPID_UL = 1000_u32
  DISPID_PHRASE = 1000_u32
  DISPID_UNKNOWNPDL = 1000_u32
  DISPID_COMMENTPDL = 1000_u32
  DISPID_TABLECELL = 2000_u32
  DISPID_RANGE = 1000_u32
  DISPID_SELECTION = 1000_u32
  DISPID_OPTION = 1000_u32
  DISPID_1D = 2000_u32
  DISPID_MAP = 1000_u32
  DISPID_AREA = 1000_u32
  DISPID_PARAM = 1000_u32
  DISPID_TABLESECTION = 1000_u32
  DISPID_TABLEROW = 1000_u32
  DISPID_TABLECOL = 1000_u32
  DISPID_SCRIPT = 1000_u32
  DISPID_STYLESHEET = 1000_u32
  DISPID_STYLERULE = 1000_u32
  DISPID_BASE_STYLERULE = 1100_u32
  DISPID_STYLEPAGE = 1000_u32
  DISPID_STYLESHEETS_COL = 1000_u32
  DISPID_STYLERULES_COL = 1000_u32
  DISPID_STYLEPAGES_COL = 1000_u32
  DISPID_MEDIALIST = 1000_u32
  DISPID_MIMETYPES_COL = 1000_u32
  DISPID_PLUGINS_COL = 1000_u32
  DISPID_2D = 1000_u32
  DISPID_OMWINDOW = 1000_u32
  DISPID_EVENTOBJ = 1000_u32
  DISPID_PERSISTDATA = 1000_u32
  DISPID_OLESITE = 1000_u32
  DISPID_FRAMESET = 1000_u32
  DISPID_LINK = 1000_u32
  DISPID_STYLEELEMENT = 1000_u32
  DISPID_FILTERS = 1000_u32
  DISPID_OMRECT = 1000_u32
  DISPID_DOMATTRIBUTE = 1000_u32
  DISPID_DOMTEXTNODE = 1000_u32
  DISPID_GENERIC = 1000_u32
  DISPID_URN_COLL = 1000_u32
  DISPID_NAMESPACE_COLLECTION = 1000_u32
  DISPID_NAMESPACE = 1000_u32
  DISPID_TAGNAMES_COLLECTION = 1000_u32
  DISPID_XMLHTTPREQUEST = 1000_u32
  DISPID_XMLSERIALIZER = 1000_u32
  DISPID_DOMPARSER = 1000_u32
  DISPID_DOCUMENTCOMPATIBLEINFO_COLLECTION = 1000_u32
  DISPID_DOCUMENTCOMPATIBLEINFO = 1000_u32
  DISPID_XDOMAINREQUEST = 1000_u32
  DISPID_DOMSTORAGEITEM = 1000_u32
  DISPID_DOMSTORAGE = 1000_u32
  DISPID_DOMSTORAGELIST = 1000_u32
  DISPID_RULESAPPLIED = 1000_u32
  DISPID_RULESAPPLIED_COLLECTION = 1000_u32
  DISPID_STYLESHEETRULESAPPLIED_COLLECTION = 1000_u32
  DISPID_PROCESSINGINSTRUCTION = 1000_u32
  DISPID_MSPOINTERPOINT = 1000_u32
  DISPID_WEBSOCKET = 1000_u32
  DISPID_APPLICATIONCACHE = 1000_u32
  DISPID_DOMEVENT = 1000_u32
  DISPID_DOMUIEVENT = 1025_u32
  DISPID_DOMMOUSEEVENT = 1050_u32
  DISPID_DOMMOUSEWHEELEVENT = 1075_u32
  DISPID_DOMWHEELEVENT = 1100_u32
  DISPID_DOMTEXTEVENT = 1125_u32
  DISPID_DOMKEYBOARDEVENT = 1150_u32
  DISPID_DOMCOMPOSITIONEVENT = 1175_u32
  DISPID_DOMCUSTOMEVENT = 1200_u32
  DISPID_DOMMUTATIONEVENT = 1225_u32
  DISPID_DOMFOCUSEVENT = 1250_u32
  DISPID_SVGZOOMEVENT = 1275_u32
  DISPID_DOMSITEMODEEVENT = 1300_u32
  DISPID_DOMMESSAGEEVENT = 1325_u32
  DISPID_DOMSTORAGEEVENT = 1350_u32
  DISPID_DOMBEFOREUNLOADEVENT = 1375_u32
  DISPID_DOMDRAGEVENT = 1400_u32
  DISPID_DOMMSPOINTEREVENT = 1425_u32
  DISPID_DOMMSGESTUREEVENT = 1450_u32
  DISPID_DOMMSTRANSITIONEVENT = 1475_u32
  DISPID_DOMMSANIMATIONEVENT = 1500_u32
  DISPID_DOMMSMANIPULATIONEVENT = 1525_u32
  DISPID_DOMPROGRESSEVENT = 1550_u32
  DISPID_DOMCLOSEEVENT = 1525_u32
  DISPID_HTMLDOCUMENT = 1000_u32
  DISPID_OMDOCUMENT = 1000_u32
  DISPID_DATATRANSFER = 1000_u32
  DISPID_XMLDECL = 1000_u32
  DISPID_DOCFRAG = 1000_u32
  DISPID_ILINEINFO = 1000_u32
  DISPID_IHTMLCOMPUTEDSTYLE = 1000_u32
  DISPID_DOMRANGE = 1000_u32
  DISPID_HTMLSELECTION = 1000_u32
  DISPID_DOMTRAVERSAL = 1000_u32
  DISPID_DOMEXCEPTION = 1000_u32
  DISPID_SVGEXCEPTION = 1000_u32
  DISPID_RANGEEXCEPTION = 1000_u32
  DISPID_EVENTEXCEPTION = 1000_u32
  DISPID_DOCUMENTTYPE = 1000_u32
  DISPID_MEDIA = 1000_u32
  DISPID_MEDIAERROR = 1000_u32
  DISPID_TIMERANGES = 1000_u32
  DISPID_SOURCE = 1000_u32
  DISPID_TRACK = 1000_u32
  DISPID_AUDIO = 1050_u32
  DISPID_VIDEO = 1050_u32
  DISPID_STYLEMEDIA = 1000_u32
  DISPID_PROGRESS = 1000_u32
  DISPID_PLAYTO = 1000_u32
  DISPID_PLAYTODEVICE = 1000_u32
  DISPID_WINDOW = 1_u32
  DISPID_SCREEN = 1000_u32
  DISPID_FRAMESCOLLECTION = 1000_u32
  DISPID_HISTORY = 1_u32
  DISPID_LOCATION = 1_u32
  DISPID_NAVIGATOR = 1_u32
  DISPID_CLIENTCAPS = 1_u32
  DISPID_TEMPLATE_PRINTER = 1_u32
  DISPID_PRINTMANAGER_TEMPLATE_PRINTER = 501_u32
  DISPID_COLLECTION = 1500_u32
  DISPID_OPTIONS_COL = 1500_u32
  DISPID_CHECKBOX = 1000_u32
  DISPID_RADIO = 2000_u32
  DISPID_FRAMESITE = 68536_u32
  DISPID_FRAME = 69536_u32
  DISPID_IFRAME = 69536_u32
  WEBOC_DISPIDBASE = 70536_u32
  WEBOC_DISPIDMAX = 70636_u32
  DISPID_PROTECTEDELEMENT = 1000_u32
  DISPID_DEFAULTS = 1000_u32
  DISPID_MARKUP = 1000_u32
  DISPID_DOMIMPLEMENTATION = 1000_u32
  DISPID_MEDIAQUERY = 1000_u32
  DISPID_HTML5ATTRIBUTESELECTORCI = 1000_u32
  DISPID_SVGMIXINS = 1000_u32
  DISPID_SVGELEMENT = 1030_u32
  DISPID_SVGELEMENT_BASE = 1050_u32
  DISPID_SVGAELEMENT = 1050_u32
  DISPID_SVGALTGLYPHDEFELEMENT = 1050_u32
  DISPID_SVGALTGLYPHELEMENT = 1050_u32
  DISPID_SVGALTGLYPHITEMELEMENT = 1050_u32
  DISPID_SVGANGLE = 1000_u32
  DISPID_SVGANIMATECOLORELEMENT = 1050_u32
  DISPID_SVGANIMATEDANGLE = 1000_u32
  DISPID_SVGANIMATEDBOOLEAN = 1000_u32
  DISPID_SVGANIMATEDENUMERATION = 1000_u32
  DISPID_SVGANIMATEDINTEGER = 1000_u32
  DISPID_SVGANIMATEDLENGTH = 1000_u32
  DISPID_SVGANIMATEDLENGTHLIST = 1000_u32
  DISPID_SVGANIMATEDNUMBER = 1000_u32
  DISPID_SVGANIMATEDNUMBERLIST = 1000_u32
  DISPID_SVGANIMATEDPOINTS = 1000_u32
  DISPID_SVGANIMATEDRECT = 1000_u32
  DISPID_SVGANIMATEDSTRING = 1000_u32
  DISPID_SVGANIMATEELEMENT = 1050_u32
  DISPID_SVGANIMATEMOTIONELEMENT = 1050_u32
  DISPID_SVGANIMATETRANSFORMELEMENT = 1050_u32
  DISPID_SVGCIRCLEELEMENT = 1050_u32
  DISPID_SVGCLIPPATHELEMENT = 1050_u32
  DISPID_SVGCOLOR_PROFILEELEMENT = 1050_u32
  DISPID_SVGCURSORELEMENT = 1050_u32
  DISPID_SVGDEFINITION_SRCELEMENT = 1050_u32
  DISPID_SVGDEFSELEMENT = 1050_u32
  DISPID_SVGDESCELEMENT = 1050_u32
  DISPID_SVGELEMENTINSTANCE = 1000_u32
  DISPID_SVGELEMENTINSTANCELIST = 1000_u32
  DISPID_SVGELLIPSEELEMENT = 1050_u32
  DISPID_SVGFEBLENDELEMENT = 1050_u32
  DISPID_SVGFECOLORMATRIXELEMENT = 1050_u32
  DISPID_SVGFECOMPONENTTRANSFERELEMENT = 1050_u32
  DISPID_SVGCOMPONENTTRANSFERFUNCTIONELEMENT = 1050_u32
  DISPID_SVGFECOMPOSITEELEMENT = 1050_u32
  DISPID_SVGFECONVOLVEMATRIXELEMENT = 1050_u32
  DISPID_SVGFEDIFFUSELIGHTINGELEMENT = 1050_u32
  DISPID_SVGFEDISPLACEMENTMAPELEMENT = 1050_u32
  DISPID_SVGFEDISTANTLIGHTELEMENT = 1050_u32
  DISPID_SVGFEFLOODELEMENT = 1050_u32
  DISPID_SVGFEFUNCAELEMENT = 1050_u32
  DISPID_SVGFEFUNCBELEMENT = 1050_u32
  DISPID_SVGFEFUNCGELEMENT = 1050_u32
  DISPID_SVGFEFUNCRELEMENT = 1050_u32
  DISPID_SVGFEGAUSSIANBLURELEMENT = 1050_u32
  DISPID_SVGFEIMAGEELEMENT = 1050_u32
  DISPID_SVGFEMERGEELEMENT = 1050_u32
  DISPID_SVGFEMERGENODEELEMENT = 1050_u32
  DISPID_SVGFEMORPHOLOGYELEMENT = 1050_u32
  DISPID_SVGFEOFFSETELEMENT = 1050_u32
  DISPID_SVGFEPOINTLIGHTELEMENT = 1050_u32
  DISPID_SVGFESPECULARLIGHTINGELEMENT = 1050_u32
  DISPID_SVGFESPOTLIGHTELEMENT = 1050_u32
  DISPID_SVGFETILEELEMENT = 1050_u32
  DISPID_SVGFETURBULENCEELEMENT = 1050_u32
  DISPID_SVGFILTERELEMENT = 1050_u32
  DISPID_SVGFONT_FACE_FORMATELEMENT = 1050_u32
  DISPID_SVGFONT_FACE_NAMEELEMENT = 1050_u32
  DISPID_SVGFONT_FACE_SRCELEMENT = 1050_u32
  DISPID_SVGFONT_FACE_URIELEMENT = 1050_u32
  DISPID_SVGFONT_FACEELEMENT = 1050_u32
  DISPID_SVGFONTELEMENT = 1050_u32
  DISPID_SVGFOREIGNOBJECTELEMENT = 1050_u32
  DISPID_SVGGELEMENT = 1050_u32
  DISPID_SVGGLYPHELEMENT = 1050_u32
  DISPID_SVGGLYPHREFELEMENT = 1050_u32
  DISPID_SVGGRADIENTELEMENT = 1050_u32
  DISPID_SVGHKERNELEMENT = 1050_u32
  DISPID_SVGIMAGEELEMENT = 1050_u32
  DISPID_SVGLENGTH = 1000_u32
  DISPID_SVGLENGTHLIST = 1000_u32
  DISPID_SVGPRESERVEASPECTRATIO = 1000_u32
  DISPID_SVGANIMATEDPRESERVEASPECTRATIO = 1000_u32
  DISPID_SVGPOINT = 1000_u32
  DISPID_SVGPOINTLIST = 1000_u32
  DISPID_SVGLINEARGRADIENTELEMENT = 1070_u32
  DISPID_SVGLINEELEMENT = 1050_u32
  DISPID_SVGMARKERELEMENT = 1050_u32
  DISPID_SVGMASKELEMENT = 1050_u32
  DISPID_SVGMETADATAELEMENT = 1050_u32
  DISPID_SVGMISSING_GLYPHELEMENT = 1050_u32
  DISPID_SVGMPATHELEMENT = 1050_u32
  DISPID_SVGNUMBER = 1000_u32
  DISPID_SVGNUMBERLIST = 1000_u32
  DISPID_SVGPATHELEMENT = 1050_u32
  DISPID_SVGPATTERNELEMENT = 1050_u32
  DISPID_SVGPOLYGONELEMENT = 1050_u32
  DISPID_SVGPOLYLINEELEMENT = 1050_u32
  DISPID_SVGRADIALGRADIENTELEMENT = 1070_u32
  DISPID_SVGRECT = 1000_u32
  DISPID_SVGRECTELEMENT = 1050_u32
  DISPID_SVGSCRIPTELEMENT = 1050_u32
  DISPID_SVGSETELEMENT = 1050_u32
  DISPID_SVGSTOPELEMENT = 1050_u32
  DISPID_SVGSTRINGLIST = 1000_u32
  DISPID_SVGSTYLEELEMENT = 1050_u32
  DISPID_SVGSVGELEMENT = 1050_u32
  DISPID_SVGSWITCHELEMENT = 1050_u32
  DISPID_SVGSYMBOLELEMENT = 1050_u32
  DISPID_SVGTITLEELEMENT = 1050_u32
  DISPID_SVGTREFELEMENT = 1050_u32
  DISPID_SVGTEXTCONTENTELEMENT = 1050_u32
  DISPID_SVGTEXTCONTENTELEMENT_BASE = 1070_u32
  DISPID_SVGTEXTPOSITIONINGELEMENT = 1070_u32
  DISPID_SVGTEXTPOSITIONINGELEMENT_BASE = 1090_u32
  DISPID_SVGTEXTELEMENT = 1090_u32
  DISPID_SVGTSPANELEMENT = 1090_u32
  DISPID_SVGTEXTPATHELEMENT = 1070_u32
  DISPID_SVGUSEELEMENT = 1050_u32
  DISPID_SVGVIEWELEMENT = 1050_u32
  DISPID_SVGVKERNELEMENT = 1050_u32
  DISPID_SVGMATRIX = 1000_u32
  DISPID_SVGTRANSFORM = 1000_u32
  DISPID_SVGTRANSFORMLIST = 1000_u32
  DISPID_SVGANIMATEDTRANSFORMLIST = 1000_u32
  DISPID_SVGPATHSEG = 1000_u32
  DISPID_SVGPATHSEG_BASE = 1020_u32
  DISPID_SVGPATHSEGLIST = 1000_u32
  DISPID_SVGPATHSEGARCABS = 1020_u32
  DISPID_SVGPATHSEGARCREL = 1020_u32
  DISPID_SVGPATHSEGCLOSEPATH = 1020_u32
  DISPID_SVGPATHSEGMOVETOABS = 1020_u32
  DISPID_SVGPATHSEGMOVETOREL = 1020_u32
  DISPID_SVGPATHSEGLINETOABS = 1020_u32
  DISPID_SVGPATHSEGLINETOREL = 1020_u32
  DISPID_SVGPATHSEGCURVETOCUBICABS = 1020_u32
  DISPID_SVGPATHSEGCURVETOCUBICREL = 1020_u32
  DISPID_SVGPATHSEGCURVETOCUBICSMOOTHABS = 1020_u32
  DISPID_SVGPATHSEGCURVETOCUBICSMOOTHREL = 1020_u32
  DISPID_SVGPATHSEGCURVETOQUADRATICABS = 1020_u32
  DISPID_SVGPATHSEGCURVETOQUADRATICREL = 1020_u32
  DISPID_SVGPATHSEGCURVETOQUADRATICSMOOTHABS = 1020_u32
  DISPID_SVGPATHSEGCURVETOQUADRATICSMOOTHREL = 1020_u32
  DISPID_SVGPATHSEGLINETOHORIZONTALABS = 1020_u32
  DISPID_SVGPATHSEGLINETOHORIZONTALREL = 1020_u32
  DISPID_SVGPATHSEGLINETOVERTICALABS = 1020_u32
  DISPID_SVGPATHSEGLINETOVERTICALREL = 1020_u32
  DISPID_CANVASELEMENT = 1000_u32
  DISPID_CANVASRENDERCONTEXT2D = 1000_u32
  DISPID_CANVASGRADIENT = 1000_u32
  DISPID_CANVASTEXTMETRICS = 1000_u32
  DISPID_CANVASIMAGEDATA = 1000_u32
  DISPID_CANVASPIXELARRAY = 1000_u32
  DISPID_PERFORMANCE = 1000_u32
  DISPID_PERFORMANCENAVIGATION = 1000_u32
  DISPID_PERFORMANCETIMING = 1000_u32
  DISPID_MSHTMLWEBVIEWELEMENT = 1000_u32
  DISPID_WEBGEOLOCATION = 1000_u32
  DISPID_WEBGEOPOSITION = 1000_u32
  DISPID_WEBGEOCOORDINATES = 1000_u32
  DISPID_WEBGEOPOSITION_ERROR = 1000_u32
  DISPID_DATALIST = 1000_u32
  DISPID_IE8_ANCHOR = 1150_u32
  DISPID_IE8_AREA = 1150_u32
  DISPID_IE8_BASE = 1150_u32
  DISPID_IE8_BODY = 1150_u32
  DISPID_IE8_FORM = 1150_u32
  DISPID_IE8_HEAD = 1150_u32
  DISPID_IE8_IMG = 1150_u32
  DISPID_IE8_INPUT = 1150_u32
  DISPID_IE8_LINK = 1150_u32
  DISPID_IE8_MOD = 1150_u32
  DISPID_IE8_SCRIPT = 1150_u32
  DISPID_IE8_ATTR = 1150_u32
  DISPID_IE8_NAMEDNODEMAP = 1150_u32
  DISPID_IE8_COLLECTION = 1150_u32
  DISPID_IE8_PARAM = 1150_u32
  DISPID_IE8_EMBED = 1150_u32
  DISPID_IE8_BLOCK = 1150_u32
  DISPID_IE8_META = 1150_u32
  DISPID_IE8_STYLE = 1150_u32
  DISPID_IE8_SELECT = 1150_u32
  DISPID_IE8_ELEMENTBASE = 66736_u32
  DISPID_IE8_ELEMENTMAX = 66776_u32
  DISPID_IE8_ELEMENT = 66736_u32
  DISPID_IE8_FRAMESITEBASE = 69656_u32
  DISPID_IE8_FRAME = 69656_u32
  DISPID_IE8_IFRAME = 69656_u32
  DISPID_IE8_OBJECTBASE = 68566_u32
  DISPID_IE8_OBJECT = 68566_u32
  DISPID_IE9_ELEMENTBASE = 66786_u32
  DISPID_IE9_ELEMENTMAX = 66821_u32
  DISPID_IE9_ELEMENT = 66786_u32
  DISPID_IE10_ELEMENTBASE = 66822_u32
  DISPID_IE10_ELEMENT = 66822_u32
  DISP10_IE10_XMSARIAFLOWFROM = 66835_u32
  DISPID_WINDOWOBJECT = -5500_i32
  DISPID_PERFORMANCEOBJECT = -5505_i32
  DISPID_LOCATIONOBJECT = -5506_i32
  DISPID_HISTORYOBJECT = -5507_i32
  DISPID_NAVIGATOROBJECT = -5508_i32
  DISPID_SECURITYCTX = -5511_i32
  DISPID_AMBIENT_DLCONTROL = -5512_i32
  DISPID_AMBIENT_USERAGENT = -5513_i32
  DISPID_SECURITYDOMAIN = -5514_i32
  DISPID_DEBUG_ISSECUREPROXY = -5515_i32
  DISPID_DEBUG_TRUSTEDPROXY = -5516_i32
  DISPID_DEBUG_INTERNALWINDOW = -5517_i32
  DISPID_DEBUG_ENABLESECUREPROXYASSERTS = -5518_i32
  DLCTL_DLIMAGES = 16_u32
  DLCTL_VIDEOS = 32_u32
  DLCTL_BGSOUNDS = 64_u32
  DLCTL_NO_SCRIPTS = 128_u32
  DLCTL_NO_JAVA = 256_u32
  DLCTL_NO_RUNACTIVEXCTLS = 512_u32
  DLCTL_NO_DLACTIVEXCTLS = 1024_u32
  DLCTL_DOWNLOADONLY = 2048_u32
  DLCTL_NO_FRAMEDOWNLOAD = 4096_u32
  DLCTL_RESYNCHRONIZE = 8192_u32
  DLCTL_PRAGMA_NO_CACHE = 16384_u32
  DLCTL_NO_BEHAVIORS = 32768_u32
  DLCTL_NO_METACHARSET = 65536_u32
  DLCTL_URL_ENCODING_DISABLE_UTF8 = 131072_u32
  DLCTL_URL_ENCODING_ENABLE_UTF8 = 262144_u32
  DLCTL_NOFRAMES = 524288_u32
  DLCTL_FORCEOFFLINE = 268435456_u32
  DLCTL_NO_CLIENTPULL = 536870912_u32
  DLCTL_SILENT = 1073741824_u32
  DLCTL_OFFLINEIFNOTCONNECTED = 2147483648_u32
  DLCTL_OFFLINE = 2147483648_u32
  DISPID_ONABORT = 1000_u32
  DISPID_ONCHANGE = 1001_u32
  DISPID_ONERROR = 1002_u32
  DISPID_ONLOAD = 1003_u32
  DISPID_ONSELECT = 1006_u32
  DISPID_ONSUBMIT = 1007_u32
  DISPID_ONUNLOAD = 1008_u32
  DISPID_ONBOUNCE = 1009_u32
  DISPID_ONFINISH = 1010_u32
  DISPID_ONSTART = 1011_u32
  DISPID_ONLAYOUT = 1013_u32
  DISPID_ONSCROLL = 1014_u32
  DISPID_ONRESET = 1015_u32
  DISPID_ONRESIZE = 1016_u32
  DISPID_ONBEFOREUNLOAD = 1017_u32
  DISPID_ONCHANGEFOCUS = 1018_u32
  DISPID_ONCHANGEBLUR = 1019_u32
  DISPID_ONPERSIST = 1020_u32
  DISPID_ONPERSISTSAVE = 1021_u32
  DISPID_ONPERSISTLOAD = 1022_u32
  DISPID_ONCONTEXTMENU = 1023_u32
  DISPID_ONBEFOREPRINT = 1024_u32
  DISPID_ONAFTERPRINT = 1025_u32
  DISPID_ONSTOP = 1026_u32
  DISPID_ONBEFOREEDITFOCUS = 1027_u32
  DISPID_ONMOUSEHOVER = 1028_u32
  DISPID_ONCONTENTREADY = 1029_u32
  DISPID_ONLAYOUTCOMPLETE = 1030_u32
  DISPID_ONPAGE = 1031_u32
  DISPID_ONLINKEDOVERFLOW = 1032_u32
  DISPID_ONMOUSEWHEEL = 1033_u32
  DISPID_ONBEFOREDEACTIVATE = 1034_u32
  DISPID_ONMOVE = 1035_u32
  DISPID_ONCONTROLSELECT = 1036_u32
  DISPID_ONSELECTIONCHANGE = 1037_u32
  DISPID_ONMOVESTART = 1038_u32
  DISPID_ONMOVEEND = 1039_u32
  DISPID_ONRESIZESTART = 1040_u32
  DISPID_ONRESIZEEND = 1041_u32
  DISPID_ONMOUSEENTER = 1042_u32
  DISPID_ONMOUSELEAVE = 1043_u32
  DISPID_ONACTIVATE = 1044_u32
  DISPID_ONDEACTIVATE = 1045_u32
  DISPID_ONMULTILAYOUTCLEANUP = 1046_u32
  DISPID_ONBEFOREACTIVATE = 1047_u32
  DISPID_ONFOCUSIN = 1048_u32
  DISPID_ONFOCUSOUT = 1049_u32
  DISPID_ONVALUECHANGE = 1050_u32
  DISPID_ONSELECTADD = 1051_u32
  DISPID_ONSELECTREMOVE = 1052_u32
  DISPID_ONSELECTWITHIN = 1053_u32
  DISPID_ONSYSTEMSCROLLINGSTART = 1054_u32
  DISPID_ONSYSTEMSCROLLINGEND = 1055_u32
  DISPID_ONOBJECTCONTENTSCROLLED = 1056_u32
  DISPID_ONSTORAGE = 1057_u32
  DISPID_ONSTORAGECOMMIT = 1058_u32
  DISPID_ONSHOW = 1059_u32
  DISPID_ONHIDE = 1060_u32
  DISPID_ONALERT = 1061_u32
  DISPID_ONPOPUPMENUSTART = 1062_u32
  DISPID_ONPOPUPMENUEND = 1063_u32
  DISPID_ONONLINE = 1064_u32
  DISPID_ONOFFLINE = 1065_u32
  DISPID_ONHASHCHANGE = 1066_u32
  DISPID_ONMESSAGE = 1067_u32
  DISPID_ONDOMMUTATION = 1068_u32
  DISPID_SVGLOAD = 1069_u32
  DISPID_SVGUNLOAD = 1070_u32
  DISPID_SVGABORT = 1071_u32
  DISPID_SVGERROR = 1072_u32
  DISPID_SVGRESIZE = 1073_u32
  DISPID_SVGSCROLL = 1074_u32
  DISPID_SVGZOOM = 1075_u32
  DISPID_MSPOINTERDOWN = 1076_u32
  DISPID_MSPOINTERMOVE = 1077_u32
  DISPID_MSPOINTERUP = 1078_u32
  DISPID_MSPOINTEROVER = 1079_u32
  DISPID_MSPOINTEROUT = 1080_u32
  DISPID_MSPOINTERCANCEL = 1081_u32
  DISPID_MSPOINTERHOVER = 1082_u32
  DISPID_MSGESTURESTART = 1083_u32
  DISPID_MSGESTURECHANGE = 1084_u32
  DISPID_MSGESTUREEND = 1085_u32
  DISPID_MSGESTUREHOLD = 1086_u32
  DISPID_MSGESTURETAP = 1087_u32
  DISPID_MSGESTUREDOUBLETAP = 1088_u32
  DISPID_MSINERTIASTART = 1089_u32
  DISPID_MSLOSTPOINTERCAPTURE = 1090_u32
  DISPID_MSGOTPOINTERCAPTURE = 1091_u32
  DISPID_MSTRANSITIONSTART = 1092_u32
  DISPID_MSTRANSITIONEND = 1093_u32
  DISPID_MSANIMATIONSTART = 1094_u32
  DISPID_MSANIMATIONEND = 1095_u32
  DISPID_MSANIMATIONITERATION = 1096_u32
  DISPID_MSGESTUREINIT = 1097_u32
  DISPID_MSMANIPULATIONSTATECHANGED = 1098_u32
  DISPID_ONOPEN = 1099_u32
  DISPID_ONCLOSE = 1100_u32
  DISPID_MSPOINTERENTER = 1101_u32
  DISPID_MSPOINTERLEAVE = 1102_u32
  DISPID_MSORIENTATIONCHANGE = 1103_u32
  DISPID_ONDEVICEORIENTATION = 1104_u32
  DISPID_ONDEVICEMOTION = 1105_u32
  DISPID_ONPAGESHOW = 1106_u32
  DISPID_ONPAGEHIDE = 1107_u32
  DISPID_ONCOMPASSNEEDSCALIBRATION = 1108_u32
  DISPID_A_FIRST = 70536_u32
  DISPID_A_MIN = 70536_u32
  DISPID_A_MAX = 71535_u32
  DISPID_A_BACKGROUNDIMAGE = 70537_u32
  DISPID_A_COLOR = 70538_u32
  DISPID_A_TEXTTRANSFORM = 70540_u32
  DISPID_A_NOWRAP = 70541_u32
  DISPID_A_LINEHEIGHT = 70542_u32
  DISPID_A_TEXTINDENT = 70543_u32
  DISPID_A_LETTERSPACING = 70544_u32
  DISPID_A_LANG = 70545_u32
  DISPID_A_OVERFLOW = 70546_u32
  DISPID_A_PADDING = 70547_u32
  DISPID_A_PADDINGTOP = 70548_u32
  DISPID_A_PADDINGRIGHT = 70549_u32
  DISPID_A_PADDINGBOTTOM = 70550_u32
  DISPID_A_PADDINGLEFT = 70551_u32
  DISPID_A_CLEAR = 70552_u32
  DISPID_A_LISTTYPE = 70553_u32
  DISPID_A_FONTFACE = 70554_u32
  DISPID_A_FONTSIZE = 70555_u32
  DISPID_A_TEXTDECORATIONLINETHROUGH = 70556_u32
  DISPID_A_TEXTDECORATIONUNDERLINE = 70557_u32
  DISPID_A_TEXTDECORATIONBLINK = 70558_u32
  DISPID_A_TEXTDECORATIONNONE = 70559_u32
  DISPID_A_FONTSTYLE = 70560_u32
  DISPID_A_FONTVARIANT = 70561_u32
  DISPID_A_BASEFONT = 70562_u32
  DISPID_A_FONTWEIGHT = 70563_u32
  DISPID_A_TABLEBORDERCOLOR = 70564_u32
  DISPID_A_TABLEBORDERCOLORLIGHT = 70565_u32
  DISPID_A_TABLEBORDERCOLORDARK = 70566_u32
  DISPID_A_TABLEVALIGN = 70567_u32
  DISPID_A_BACKGROUND = 70568_u32
  DISPID_A_BACKGROUNDPOSX = 70569_u32
  DISPID_A_BACKGROUNDPOSY = 70570_u32
  DISPID_A_TEXTDECORATION = 70571_u32
  DISPID_A_MARGIN = 70572_u32
  DISPID_A_MARGINTOP = 70573_u32
  DISPID_A_MARGINRIGHT = 70574_u32
  DISPID_A_MARGINBOTTOM = 70575_u32
  DISPID_A_MARGINLEFT = 70576_u32
  DISPID_A_FONT = 70577_u32
  DISPID_A_FONTSIZEKEYWORD = 70578_u32
  DISPID_A_FONTSIZECOMBINE = 70579_u32
  DISPID_A_BACKGROUNDREPEAT = 70580_u32
  DISPID_A_BACKGROUNDATTACHMENT = 70581_u32
  DISPID_A_BACKGROUNDPOSITION = 70582_u32
  DISPID_A_WORDSPACING = 70583_u32
  DISPID_A_VERTICALALIGN = 70584_u32
  DISPID_A_BORDER = 70585_u32
  DISPID_A_BORDERTOP = 70586_u32
  DISPID_A_BORDERRIGHT = 70587_u32
  DISPID_A_BORDERBOTTOM = 70588_u32
  DISPID_A_BORDERLEFT = 70589_u32
  DISPID_A_BORDERCOLOR = 70590_u32
  DISPID_A_BORDERTOPCOLOR = 70591_u32
  DISPID_A_BORDERRIGHTCOLOR = 70592_u32
  DISPID_A_BORDERBOTTOMCOLOR = 70593_u32
  DISPID_A_BORDERLEFTCOLOR = 70594_u32
  DISPID_A_BORDERWIDTH = 70595_u32
  DISPID_A_BORDERTOPWIDTH = 70596_u32
  DISPID_A_BORDERRIGHTWIDTH = 70597_u32
  DISPID_A_BORDERBOTTOMWIDTH = 70598_u32
  DISPID_A_BORDERLEFTWIDTH = 70599_u32
  DISPID_A_BORDERSTYLE = 70600_u32
  DISPID_A_BORDERTOPSTYLE = 70601_u32
  DISPID_A_BORDERRIGHTSTYLE = 70602_u32
  DISPID_A_BORDERBOTTOMSTYLE = 70603_u32
  DISPID_A_BORDERLEFTSTYLE = 70604_u32
  DISPID_A_TEXTDECORATIONOVERLINE = 70605_u32
  DISPID_A_FLOAT = 70606_u32
  DISPID_A_DISPLAY = 70607_u32
  DISPID_A_LISTSTYLETYPE = 70608_u32
  DISPID_A_LISTSTYLEPOSITION = 70609_u32
  DISPID_A_LISTSTYLEIMAGE = 70610_u32
  DISPID_A_LISTSTYLE = 70611_u32
  DISPID_A_WHITESPACE = 70612_u32
  DISPID_A_PAGEBREAKBEFORE = 70613_u32
  DISPID_A_PAGEBREAKAFTER = 70614_u32
  DISPID_A_SCROLL = 70615_u32
  DISPID_A_VISIBILITY = 70616_u32
  DISPID_A_HIDDEN = 70617_u32
  DISPID_A_FILTER = 70618_u32
  DISPID_DEFAULTVALUE = 70619_u32
  DISPID_A_BORDERCOLLAPSE = 70620_u32
  DISPID_A_POSITION = 70626_u32
  DISPID_A_ZINDEX = 70627_u32
  DISPID_A_CLIP = 70628_u32
  DISPID_A_CLIPRECTTOP = 70629_u32
  DISPID_A_CLIPRECTRIGHT = 70630_u32
  DISPID_A_CLIPRECTBOTTOM = 70631_u32
  DISPID_A_CLIPRECTLEFT = 70632_u32
  DISPID_A_FONTFACESRC = 70633_u32
  DISPID_A_TABLELAYOUT = 70634_u32
  DISPID_A_STYLETEXT = 70635_u32
  DISPID_A_LANGUAGE = 70636_u32
  DISPID_A_VALUE = 70637_u32
  DISPID_A_CURSOR = 70638_u32
  DISPID_A_EVENTSINK = 70639_u32
  DISPID_A_PROPNOTIFYSINK = 70640_u32
  DISPID_A_ROWSETNOTIFYSINK = 70641_u32
  DISPID_INTERNAL_INLINESTYLEAA = 70642_u32
  DISPID_INTERNAL_CSTYLEPTRCACHE = 70643_u32
  DISPID_INTERNAL_CRUNTIMESTYLEPTRCACHE = 70644_u32
  DISPID_INTERNAL_INVOKECONTEXT = 70645_u32
  DISPID_A_BGURLIMGCTXCACHEINDEX = 70646_u32
  DISPID_A_LIURLIMGCTXCACHEINDEX = 70647_u32
  DISPID_A_ROWSETASYNCHNOTIFYSINK = 70648_u32
  DISPID_INTERNAL_FILTERPTRCACHE = 70649_u32
  DISPID_A_ROWPOSITIONCHANGESINK = 70650_u32
  DISPID_A_BEHAVIOR = 70651_u32
  DISPID_A_READYSTATE = 70652_u32
  DISPID_A_DIR = 70653_u32
  DISPID_A_UNICODEBIDI = 70654_u32
  DISPID_A_DIRECTION = 70655_u32
  DISPID_A_IMEMODE = 70656_u32
  DISPID_A_RUBYALIGN = 70657_u32
  DISPID_A_RUBYPOSITION = 70658_u32
  DISPID_A_RUBYOVERHANG = 70659_u32
  DISPID_INTERNAL_ONBEHAVIOR_CONTENTREADY = 70660_u32
  DISPID_INTERNAL_ONBEHAVIOR_DOCUMENTREADY = 70661_u32
  DISPID_INTERNAL_CDOMCHILDRENPTRCACHE = 70662_u32
  DISPID_A_LAYOUTGRIDCHAR = 70663_u32
  DISPID_A_LAYOUTGRIDLINE = 70664_u32
  DISPID_A_LAYOUTGRIDMODE = 70665_u32
  DISPID_A_LAYOUTGRIDTYPE = 70666_u32
  DISPID_A_LAYOUTGRID = 70667_u32
  DISPID_A_TEXTAUTOSPACE = 70668_u32
  DISPID_A_LINEBREAK = 70669_u32
  DISPID_A_WORDBREAK = 70670_u32
  DISPID_A_TEXTJUSTIFY = 70671_u32
  DISPID_A_TEXTJUSTIFYTRIM = 70672_u32
  DISPID_A_TEXTKASHIDA = 70673_u32
  DISPID_A_OVERFLOWX = 70675_u32
  DISPID_A_OVERFLOWY = 70676_u32
  DISPID_A_HTCDISPATCHITEM_VALUE = 70677_u32
  DISPID_A_DOCFRAGMENT = 70678_u32
  DISPID_A_HTCDD_ELEMENT = 70679_u32
  DISPID_A_HTCDD_CREATEEVENTOBJECT = 70680_u32
  DISPID_A_URNATOM = 70681_u32
  DISPID_A_UNIQUEPEERNUMBER = 70682_u32
  DISPID_A_ACCELERATOR = 70683_u32
  DISPID_INTERNAL_ONBEHAVIOR_APPLYSTYLE = 70684_u32
  DISPID_INTERNAL_RUNTIMESTYLEAA = 70685_u32
  DISPID_A_HTCDISPATCHITEM_VALUE_SCRIPTSONLY = 70686_u32
  DISPID_A_EXTENDEDTAGDESC = 70687_u32
  DISPID_A_ROTATE = 70688_u32
  DISPID_A_ZOOM = 70689_u32
  DISPID_A_HTCDD_PROTECTEDELEMENT = 70690_u32
  DISPID_A_LAYOUTFLOW = 70691_u32
  DISPID_INTERNAL_FILTERNATIVEINFOPTRCACHE = 70692_u32
  DISPID_A_HTCDD_ISMARKUPSHARED = 70693_u32
  DISPID_A_WORDWRAP = 70694_u32
  DISPID_A_TEXTUNDERLINEPOSITION = 70695_u32
  DISPID_A_HASLAYOUT = 70696_u32
  DISPID_A_MEDIA = 70697_u32
  DISPID_A_EDITABLE = 70698_u32
  DISPID_A_HIDEFOCUS = 70699_u32
  DISPID_INTERNAL_LAYOUTRECTREGISTRYPTRCACHE = 70700_u32
  DISPID_A_HTCDD_DEFAULTS = 70701_u32
  DISPID_A_TEXTLINETHROUGHSTYLE = 70702_u32
  DISPID_A_TEXTUNDERLINESTYLE = 70703_u32
  DISPID_A_TEXTEFFECT = 70704_u32
  DISPID_A_TEXTBACKGROUNDCOLOR = 70705_u32
  DISPID_A_RENDERINGPRIORITY = 70706_u32
  DISPID_INTERNAL_DWNPOSTPTRCACHE = 70707_u32
  DISPID_INTERNAL_CODEPAGESETTINGSPTRCACHE = 70708_u32
  DISPID_INTERNAL_DWNDOCPTRCACHE = 70709_u32
  DISPID_INTERNAL_DATABINDTASKPTRCACHE = 70710_u32
  DISPID_INTERNAL_URLLOCATIONCACHE = 70711_u32
  DISPID_INTERNAL_ARYELEMENTRELEASENOTIFYPTRCACHE = 70712_u32
  DISPID_INTERNAL_PEERFACTORYURLMAPPTRCACHE = 70713_u32
  DISPID_INTERNAL_STMDIRTYPTRCACHE = 70714_u32
  DISPID_INTERNAL_COMPUTEFORMATSTATECACHE = 70715_u32
  DISPID_A_SCROLLBARBASECOLOR = 70716_u32
  DISPID_A_SCROLLBARFACECOLOR = 70717_u32
  DISPID_A_SCROLLBAR3DLIGHTCOLOR = 70718_u32
  DISPID_A_SCROLLBARSHADOWCOLOR = 70719_u32
  DISPID_A_SCROLLBARHIGHLIGHTCOLOR = 70720_u32
  DISPID_A_SCROLLBARDARKSHADOWCOLOR = 70721_u32
  DISPID_A_SCROLLBARARROWCOLOR = 70722_u32
  DISPID_INTERNAL_ONBEHAVIOR_CONTENTSAVE = 70723_u32
  DISPID_A_DEFAULTTEXTSELECTION = 70724_u32
  DISPID_A_TEXTDECORATIONCOLOR = 70725_u32
  DISPID_A_TEXTCOLOR = 70726_u32
  DISPID_A_STYLETEXTDECORATION = 70727_u32
  DISPID_A_WRITINGMODE = 70728_u32
  DISPID_INTERNAL_MEDIA_REFERENCE = 70729_u32
  DISPID_INTERNAL_GENERICCOMPLUSREF = 70730_u32
  DISPID_INTERNAL_FOCUSITEMS = 70731_u32
  DISPID_A_SCROLLBARTRACKCOLOR = 70732_u32
  DISPID_INTERNAL_DWNHEADERCACHE = 70733_u32
  DISPID_A_FROZEN = 70734_u32
  DISPID_A_VIEWINHERITSTYLE = 70735_u32
  DISPID_INTERNAL_FRAMESCOLLECTION = 70736_u32
  DISPID_A_BGURLIMGCTXCACHEINDEX_FLINE = 70737_u32
  DISPID_A_BGURLIMGCTXCACHEINDEX_FLETTER = 70738_u32
  DISPID_A_TEXTALIGNLAST = 70739_u32
  DISPID_A_TEXTKASHIDASPACE = 70740_u32
  DISPID_INTERNAL_FONTHISTORYINDEX = 70741_u32
  DISPID_A_ALLOWTRANSPARENCY = 70742_u32
  DISPID_INTERNAL_URLSEARCHCACHE = 70743_u32
  DISPID_A_ISBLOCK = 70744_u32
  DISPID_A_TEXTOVERFLOW = 70745_u32
  DISPID_INTERNAL_CATTRIBUTECOLLPTRCACHE = 70746_u32
  DISPID_A_MINHEIGHT = 70747_u32
  DISPID_INTERNAL_INVOKECONTEXTDOCUMENT = 70748_u32
  DISPID_A_INTERPOLATION = 70749_u32
  DISPID_A_MAXHEIGHT = 70750_u32
  DISPID_A_MINWIDTH = 70751_u32
  DISPID_A_MAXWIDTH = 70752_u32
  DISPID_INTERNAL_ARYOBJECTRELEASECLEANUPPTRCACHE = 70753_u32
  DISPID_A_CONTENT = 70754_u32
  DISPID_A_CAPTIONSIDE = 70755_u32
  DISPID_A_COUNTERINCREMENT = 70756_u32
  DISPID_A_COUNTERRESET = 70757_u32
  DISPID_A_OUTLINE = 70758_u32
  DISPID_A_OUTLINEWIDTH = 70759_u32
  DISPID_A_OUTLINESTYLE = 70760_u32
  DISPID_A_OUTLINECOLOR = 70761_u32
  DISPID_A_BOXSIZING = 70762_u32
  DISPID_A_BORDERSPACING = 70763_u32
  DISPID_A_ORPHANS = 70764_u32
  DISPID_A_WIDOWS = 70765_u32
  DISPID_A_PAGEBREAKINSIDE = 70766_u32
  DISPID_A_MS_BEHAVIOR = 70767_u32
  DISPID_A_MS_SCROLLBARBASECOLOR = 70768_u32
  DISPID_A_MS_SCROLLBARFACECOLOR = 70769_u32
  DISPID_A_MS_SCROLLBAR3DLIGHTCOLOR = 70770_u32
  DISPID_A_MS_SCROLLBARSHADOWCOLOR = 70771_u32
  DISPID_A_MS_SCROLLBARHIGHLIGHTCOLOR = 70772_u32
  DISPID_A_MS_SCROLLBARDARKSHADOWCOLOR = 70773_u32
  DISPID_A_MS_SCROLLBARARROWCOLOR = 70774_u32
  DISPID_A_MS_SCROLLBARTRACKCOLOR = 70775_u32
  DISPID_A_MS_TEXTALIGNLAST = 70776_u32
  DISPID_A_MS_TEXTOVERFLOW = 70777_u32
  DISPID_A_MS_TEXTUNDERLINEPOSITION = 70778_u32
  DISPID_A_MS_WRITINGMODE = 70779_u32
  DISPID_A_MS_IMEMODE = 70780_u32
  DISPID_A_MS_BACKGROUNDPOSX = 70781_u32
  DISPID_A_MS_BACKGROUNDPOSY = 70782_u32
  DISPID_A_MS_ACCELERATOR = 70783_u32
  DISPID_A_MS_LAYOUTFLOW = 70784_u32
  DISPID_A_MS_ZOOM = 70785_u32
  DISPID_A_EMPTYCELLS = 70786_u32
  DISPID_A_MS_BLOCKPROGRESSION = 70787_u32
  DISPID_A_QUOTES = 70788_u32
  DISPID_INTERNAL_BGURLIMGCTXCACHEINDEX_GCBEFORE = 70789_u32
  DISPID_INTERNAL_BGURLIMGCTXCACHEINDEX_GCAFTER = 70790_u32
  DISPID_INTERNAL_BGURLIMGCTXCACHEINDEX_URLBEFORE = 70791_u32
  DISPID_INTERNAL_BGURLIMGCTXCACHEINDEX_URLAFTER = 70792_u32
  DISPID_AAHEADER = 70793_u32
  DISPID_INTERNAL_GETTERSETTERCOLLECTION = 70794_u32
  DISPID_A_MS_LAYOUTGRIDCHAR = 70795_u32
  DISPID_A_MS_LAYOUTGRIDLINE = 70796_u32
  DISPID_A_MS_LAYOUTGRIDMODE = 70797_u32
  DISPID_A_MS_LAYOUTGRIDTYPE = 70798_u32
  DISPID_A_MS_LAYOUTGRID = 70799_u32
  DISPID_A_MS_LINEBREAK = 70800_u32
  DISPID_A_MS_FILTER = 70801_u32
  DISPID_A_MS_OVERFLOWX = 70802_u32
  DISPID_A_MS_OVERFLOWY = 70803_u32
  DISPID_A_MS_TEXTAUTOSPACE = 70804_u32
  DISPID_A_MS_TEXTJUSTIFY = 70805_u32
  DISPID_A_MS_TEXTKASHIDASPACE = 70806_u32
  DISPID_A_MS_WORDBREAK = 70807_u32
  DISPID_A_MS_WORDWRAP = 70808_u32
  DISPID_INTERNAL_URIBEFOREREDIRECT = 70809_u32
  DISPID_A_ALIGNMENTBASELINE = 70814_u32
  DISPID_A_BASELINESHIFT = 70815_u32
  DISPID_A_DOMINANTBASELINE = 70816_u32
  DISPID_A_FONTSIZEADJUST = 70817_u32
  DISPID_A_FONTSTRETCH = 70818_u32
  DISPID_A_OPACITY = 70819_u32
  DISPID_A_CLIPPATH = 70820_u32
  DISPID_A_CLIPRULE = 70821_u32
  DISPID_A_FILL = 70822_u32
  DISPID_A_FILLOPACITY = 70823_u32
  DISPID_A_FILLRULE = 70824_u32
  DISPID_A_KERNING = 70825_u32
  DISPID_A_MARKER = 70826_u32
  DISPID_A_MARKEREND = 70827_u32
  DISPID_A_MARKERMID = 70828_u32
  DISPID_A_MARKERSTART = 70829_u32
  DISPID_A_MASK = 70830_u32
  DISPID_A_POINTEREVENTS = 70831_u32
  DISPID_A_STOPCOLOR = 70832_u32
  DISPID_A_STOPOPACITY = 70833_u32
  DISPID_A_STROKE = 70834_u32
  DISPID_A_STROKEDASHARRAY = 70835_u32
  DISPID_A_STROKEDASHOFFSET = 70836_u32
  DISPID_A_STROKELINECAP = 70837_u32
  DISPID_A_STROKELINEJOIN = 70838_u32
  DISPID_A_STROKEMITERLIMIT = 70839_u32
  DISPID_A_STROKEOPACITY = 70840_u32
  DISPID_A_STROKEWIDTH = 70841_u32
  DISPID_A_TEXTANCHOR = 70842_u32
  DISPID_A_GLYPHORIENTATIONHORIZONTAL = 70843_u32
  DISPID_A_GLYPHORIENTATIONVERTICAL = 70844_u32
  DISPID_A_CSSFLOAT = 70845_u32
  DISPID_A_BORDERRADIUS = 70846_u32
  DISPID_A_BORDERTOPLEFTRADIUS = 70847_u32
  DISPID_A_BORDERTOPRIGHTRADIUS = 70848_u32
  DISPID_A_BORDERBOTTOMRIGHTRADIUS = 70849_u32
  DISPID_A_BORDERBOTTOMLEFTRADIUS = 70850_u32
  DISPID_A_MS_TRANSFORM = 70851_u32
  DISPID_A_IE9_BACKGROUNDCLIP = 70852_u32
  DISPID_A_IE9_BACKGROUNDORIGIN = 70853_u32
  DISPID_A_IE9_BACKGROUNDSIZE = 70854_u32
  DISPID_A_IE9_BOXSHADOW = 70855_u32
  DISPID_A_MS_TRANSFORMORIGIN = 70861_u32
  DISPID_A_MS_TRANSFORMORIGINX = 70862_u32
  DISPID_A_MS_TRANSFORMORIGINY = 70863_u32
  DISPID_A_MS_TEXTSIZEADJUST = 70864_u32
  DISPID_A_MS_TRANSITIONPROPERTY = 70866_u32
  DISPID_A_MS_TRANSITIONDURATION = 70867_u32
  DISPID_A_MS_TRANSITIONTIMINGFUNCTION = 70868_u32
  DISPID_A_MS_TRANSITIONDELAY = 70869_u32
  DISPID_A_MS_TRANSITION = 70870_u32
  DISPID_A_COLUMNS = 70871_u32
  DISPID_A_COLUMNCOUNT = 70872_u32
  DISPID_A_COLUMNWIDTH = 70873_u32
  DISPID_A_COLUMNGAP = 70874_u32
  DISPID_A_COLUMNFILL = 70875_u32
  DISPID_A_COLUMNSPAN = 70876_u32
  DISPID_A_COLUMNRULE = 70877_u32
  DISPID_A_COLUMNRULESTYLE = 70878_u32
  DISPID_A_COLUMNRULEWIDTH = 70879_u32
  DISPID_A_COLUMNRULECOLOR = 70880_u32
  DISPID_A_BREAKBEFORE = 70881_u32
  DISPID_A_BREAKAFTER = 70882_u32
  DISPID_A_BREAKINSIDE = 70883_u32
  DISPID_A_MS_TRANSFORMORIGINZ = 70884_u32
  DISPID_A_MS_PERSPECTIVE = 70885_u32
  DISPID_A_MS_PERSPECTIVEORIGIN = 70886_u32
  DISPID_A_MS_PERSPECTIVEORIGINX = 70887_u32
  DISPID_A_MS_PERSPECTIVEORIGINY = 70888_u32
  DISPID_A_MS_TRANSFORMSTYLE = 70889_u32
  DISPID_A_MS_BACKFACEVISIBILITY = 70890_u32
  DISPID_A_MS_SCROLLCHAINING = 70891_u32
  DISPID_A_MS_CONTENTZOOMING = 70892_u32
  DISPID_A_MS_CONTENTZOOMSNAPTYPE = 70893_u32
  DISPID_A_MS_SCROLLRAILS = 70894_u32
  DISPID_A_MS_CONTENTZOOMCHAINING = 70895_u32
  DISPID_A_MS_SCROLLSNAPTYPE = 70896_u32
  DISPID_A_MS_CONTENTZOOMLIMIT = 70897_u32
  DISPID_A_MS_CONTENTZOOMSNAP = 70898_u32
  DISPID_A_MS_CONTENTZOOMSNAPPOINTS = 70899_u32
  DISPID_A_MS_CONTENTZOOMFACTOR = 70900_u32
  DISPID_A_MS_CONTENTZOOMLIMITMIN = 70901_u32
  DISPID_A_MS_CONTENTZOOMLIMITMAX = 70902_u32
  DISPID_A_MS_SCROLLSNAPX = 70903_u32
  DISPID_A_MS_SCROLLSNAPY = 70904_u32
  DISPID_A_MS_SCROLLSNAPPOINTSX = 70905_u32
  DISPID_A_MS_SCROLLSNAPPOINTSY = 70906_u32
  DISPID_A_SPELLCHECK = 70907_u32
  DISPID_A_MS_GRIDCOLUMN = 70908_u32
  DISPID_A_MS_GRIDCOLUMNALIGN = 70909_u32
  DISPID_A_MS_GRIDCOLUMNS = 70910_u32
  DISPID_A_MS_GRIDCOLUMNSPAN = 70911_u32
  DISPID_A_MS_GRIDROW = 70913_u32
  DISPID_A_MS_GRIDROWALIGN = 70914_u32
  DISPID_A_MS_GRIDROWS = 70915_u32
  DISPID_A_MS_GRIDROWSPAN = 70916_u32
  DISPID_A_MS_ANIMATIONNAME = 70917_u32
  DISPID_A_MS_ANIMATIONDURATION = 70918_u32
  DISPID_A_MS_ANIMATIONTIMINGFUNCTION = 70919_u32
  DISPID_A_MS_ANIMATIONDELAY = 70920_u32
  DISPID_A_MS_ANIMATIONDIRECTION = 70921_u32
  DISPID_A_MS_ANIMATIONPLAYSTATE = 70922_u32
  DISPID_A_MS_ANIMATIONITERATIONCOUNT = 70923_u32
  DISPID_A_MS_ANIMATION = 70924_u32
  DISPID_A_MS_ANIMATIONFILLMODE = 70925_u32
  DISPID_A_FLOODCOLOR = 70926_u32
  DISPID_A_FLOODOPACITY = 70927_u32
  DISPID_A_COLORINTERPOLATIONFILTERS = 70928_u32
  DISPID_A_LIGHTINGCOLOR = 70929_u32
  DISPID_A_MS_SCROLLLIMITXMIN = 70930_u32
  DISPID_A_MS_SCROLLLIMITYMIN = 70931_u32
  DISPID_A_MS_SCROLLLIMITXMAX = 70932_u32
  DISPID_A_MS_SCROLLLIMITYMAX = 70933_u32
  DISPID_A_MS_SCROLLLIMIT = 70934_u32
  DISPID_A_MS_OVERFLOWSTYLE = 70935_u32
  DISPID_A_TEXTSHADOW = 70936_u32
  DISPID_A_MS_WRAPTHROUGH = 70937_u32
  DISPID_A_MS_FLOWFROM = 70938_u32
  DISPID_A_MS_FLOWINTO = 70939_u32
  DISPID_A_MS_HYPHENS = 70940_u32
  DISPID_A_MS_HYPHENATE_LIMIT_ZONE = 70941_u32
  DISPID_A_MS_HYPHENATE_LIMIT_CHARS = 70942_u32
  DISPID_A_MS_HYPHENATE_LIMIT_LINES = 70943_u32
  DISPID_A_DRAGGABLE = 70944_u32
  DISPID_A_MS_HIGHCONTRASTADJUST = 70945_u32
  DISPID_A_ENABLEBACKGROUND = 70946_u32
  DISPID_A_MS_WRAPMARGIN = 70947_u32
  DISPID_A_MS_WRAPFLOW = 70949_u32
  DISPID_A_MS_FONTFEATURESETTINGS = 70950_u32
  DISPID_A_MS_USERSELECT = 70951_u32
  DISPID_A_MS_TOUCHACTION = 70952_u32
  DISPID_A_CLASSLIST = 70953_u32
  DISPID_A_MS_SCROLLTRANSLATION = 70954_u32
  DISPID_A_MS_FLEX = 70955_u32
  DISPID_A_MS_FLEXPOSITIVE = 70956_u32
  DISPID_A_MS_FLEXNEGATIVE = 70957_u32
  DISPID_A_MS_FLEXPREFERREDSIZE = 70958_u32
  DISPID_A_MS_FLEXFLOW = 70959_u32
  DISPID_A_MS_FLEXDIRECTION = 70960_u32
  DISPID_A_MS_FLEXWRAP = 70961_u32
  DISPID_A_MS_FLEXALIGN = 70962_u32
  DISPID_A_MS_FLEXITEMALIGN = 70963_u32
  DISPID_A_MS_FLEXPACK = 70964_u32
  DISPID_A_MS_FLEXLINEPACK = 70965_u32
  DISPID_A_MS_FLEXORDER = 70966_u32
  DISPID_A_TRANSFORM = 70967_u32
  DISPID_A_TRANSFORMORIGIN = 70968_u32
  DISPID_A_TRANSITIONPROPERTY = 70969_u32
  DISPID_A_TRANSITIONDURATION = 70970_u32
  DISPID_A_TRANSITIONTIMINGFUNCTION = 70971_u32
  DISPID_A_TRANSITIONDELAY = 70972_u32
  DISPID_A_TRANSITION = 70973_u32
  DISPID_A_PERSPECTIVE = 70974_u32
  DISPID_A_PERSPECTIVEORIGIN = 70975_u32
  DISPID_A_TRANSFORMSTYLE = 70976_u32
  DISPID_A_BACKFACEVISIBILITY = 70977_u32
  DISPID_A_ANIMATIONNAME = 70978_u32
  DISPID_A_ANIMATIONDURATION = 70979_u32
  DISPID_A_ANIMATIONTIMINGFUNCTION = 70980_u32
  DISPID_A_ANIMATIONDELAY = 70981_u32
  DISPID_A_ANIMATIONDIRECTION = 70982_u32
  DISPID_A_ANIMATIONPLAYSTATE = 70983_u32
  DISPID_A_ANIMATIONITERATIONCOUNT = 70984_u32
  DISPID_A_ANIMATION = 70985_u32
  DISPID_A_ANIMATIONFILLMODE = 70986_u32
  DISPID_A_FONTFEATURESETTINGS = 70987_u32
  DISPID_A_TRANSFORMORIGINX = 70988_u32
  DISPID_A_TRANSFORMORIGINY = 70989_u32
  DISPID_A_TRANSFORMORIGINZ = 70990_u32
  DISPID_A_PERSPECTIVEORIGINX = 70992_u32
  DISPID_A_PERSPECTIVEORIGINY = 70993_u32
  DISPID_A_MS_TOUCHSELECT = 70994_u32
  DISPID_INTERNAL_ERRORPAGEREFRESHURL = 70995_u32
  DISPID_INTERNAL_ERRORPAGEREASON = 70996_u32
  DISPID_INTERNAL_ERRORPAGEDWNPOST = 70997_u32
  DISPID_A_FLEXDIRECTION = 70998_u32
  DISPID_A_FLEXWRAP = 70999_u32
  DISPID_A_FLEXFLOW = 71000_u32
  DISPID_A_ORDER = 71001_u32
  DISPID_A_FLEX = 71002_u32
  DISPID_A_FLEXGROW = 71003_u32
  DISPID_A_FLEXSHRINK = 71004_u32
  DISPID_A_FLEXBASIS = 71005_u32
  DISPID_A_JUSTIFYCONTENT = 71006_u32
  DISPID_A_ALIGNITEMS = 71007_u32
  DISPID_A_ALIGNSELF = 71008_u32
  DISPID_A_ALIGNCONTENT = 71009_u32
  DISPID_A_BORDERIMAGE = 71010_u32
  DISPID_A_BORDERIMAGESOURCE = 71011_u32
  DISPID_A_BORDERIMAGESLICE = 71012_u32
  DISPID_A_BORDERIMAGEWIDTH = 71013_u32
  DISPID_A_BORDERIMAGEOUTSET = 71014_u32
  DISPID_A_BORDERIMAGEREPEAT = 71015_u32
  DISPID_A_DATASET = 71016_u32
  DISPID_A_MS_IMEALIGN = 71017_u32
  DISPID_A_MS_TEXTCOMBINEHORIZONTAL = 71018_u32
  DISPID_A_TOUCHACTION = 71019_u32
  DISPID_A_WEBKIT_APPEARANCE = 71020_u32
  DISPID_A_WEBKIT_BOXALIGN = 71021_u32
  DISPID_A_WEBKIT_BOXORDINALGROUP = 71022_u32
  DISPID_A_WEBKIT_BOXPACK = 71023_u32
  DISPID_A_WEBKIT_BOXFLEX = 71024_u32
  DISPID_A_WEBKIT_BOXORIENT = 71025_u32
  DISPID_A_WEBKIT_BOXDIRECTION = 71026_u32
  DISPID_A_WEBKIT_ANIMATIONFILLMODE = 71027_u32
  DISPID_A_WEBKIT_TRANSFORM = 71028_u32
  DISPID_A_WEBKIT_BACKGROUNDSIZE = 71029_u32
  DISPID_A_WEBKIT_BACKFACEVISIBILITY = 71030_u32
  DISPID_A_WEBKIT_BOXSIZING = 71031_u32
  DISPID_A_WEBKIT_USERSELECT = 71032_u32
  DISPID_A_WEBKIT_ANIMATION = 71033_u32
  DISPID_A_WEBKIT_TRANSITION = 71034_u32
  DISPID_A_WEBKIT_ANIMATIONNAME = 71035_u32
  DISPID_A_WEBKIT_ANIMATIONDURATION = 71036_u32
  DISPID_A_WEBKIT_ANIMATIONTIMINGFUNCTION = 71037_u32
  DISPID_A_WEBKIT_ANIMATIONDELAY = 71038_u32
  DISPID_A_WEBKIT_ANIMATIONITERATIONCOUNT = 71039_u32
  DISPID_A_WEBKIT_ANIMATIONDIRECTION = 71040_u32
  DISPID_A_WEBKIT_ANIMATIONPLAYSTATE = 71041_u32
  DISPID_A_WEBKIT_TRANSITIONPROPERTY = 71042_u32
  DISPID_A_WEBKIT_TRANSITIONDURATION = 71043_u32
  DISPID_A_WEBKIT_TRANSITIONTIMINGFUNCTION = 71044_u32
  DISPID_A_WEBKIT_TRANSITIONDELAY = 71045_u32
  DISPID_A_WEBKIT_BACKGROUNDATTACHMENT = 71046_u32
  DISPID_A_WEBKIT_BACKGROUNDCOLOR = 71047_u32
  DISPID_A_WEBKIT_BACKGROUNDCLIP = 71048_u32
  DISPID_A_WEBKIT_BACKGROUNDIMAGE = 71049_u32
  DISPID_A_WEBKIT_BACKGROUNDREPEAT = 71050_u32
  DISPID_A_WEBKIT_BACKGROUNDORIGIN = 71051_u32
  DISPID_A_WEBKIT_BACKGROUNDPOSITION = 71052_u32
  DISPID_A_WEBKIT_BACKGROUNDPOSITIONX = 71053_u32
  DISPID_A_WEBKIT_BACKGROUNDPOSITIONY = 71054_u32
  DISPID_A_WEBKIT_BACKGROUND = 71055_u32
  DISPID_A_WEBKIT_TRANSFORMORIGIN = 71056_u32
  DISPID_A_WEBKIT_TRANSFORMORIGINX = 71057_u32
  DISPID_A_WEBKIT_TRANSFORMORIGINY = 71058_u32
  DISPID_A_WEBKIT_TRANSFORMORIGINZ = 71059_u32
  DISPID_A_WEBKIT_TEXTSIZEADJUST = 71060_u32
  DISPID_A_WEBKIT_BORDERIMAGE = 71061_u32
  DISPID_A_WEBKIT_BORDERIMAGESOURCE = 71062_u32
  DISPID_A_WEBKIT_BORDERIMAGESLICE = 71063_u32
  DISPID_A_WEBKIT_BORDERIMAGEWIDTH = 71064_u32
  DISPID_A_WEBKIT_BORDERIMAGEOUTSET = 71065_u32
  DISPID_A_WEBKIT_BORDERIMAGEREPEAT = 71066_u32
  DISPID_INTERNAL_FIRST = 71136_u32
  DISPID_INTERNAL_BACKGROUNDDEFINITION = 71137_u32
  DISPID_A_MEDIAORIENTATION = 71138_u32
  DISPID_A_MEDIAMAXWIDTH = 71139_u32
  DISPID_A_MEDIAMINWIDTH = 71140_u32
  DISPID_A_MEDIAWIDTH = 71141_u32
  DISPID_A_MEDIAMAXHEIGHT = 71142_u32
  DISPID_A_MEDIAMINHEIGHT = 71143_u32
  DISPID_A_MEDIAHEIGHT = 71144_u32
  DISPID_A_MEDIAMAXDEVICEWIDTH = 71145_u32
  DISPID_A_MEDIAMINDEVICEWIDTH = 71146_u32
  DISPID_A_MEDIADEVICEWIDTH = 71147_u32
  DISPID_A_MEDIAMAXDEVICEHEIGHT = 71148_u32
  DISPID_A_MEDIAMINDEVICEHEIGHT = 71149_u32
  DISPID_A_MEDIADEVICEHEIGHT = 71150_u32
  DISPID_A_MEDIAMAXASPECTRATIO = 71151_u32
  DISPID_A_MEDIAMINASPECTRATIO = 71152_u32
  DISPID_A_MEDIAASPECTRATIO = 71153_u32
  DISPID_A_MEDIAMAXDEVICEASPECTRATIO = 71154_u32
  DISPID_A_MEDIAMINDEVICEASPECTRATIO = 71155_u32
  DISPID_A_MEDIADEVICEASPECTRATIO = 71156_u32
  DISPID_A_MEDIAMAXCOLOR = 71157_u32
  DISPID_A_MEDIAMINCOLOR = 71158_u32
  DISPID_A_MEDIACOLOR = 71159_u32
  DISPID_A_MEDIAMAXCOLORINDEX = 71160_u32
  DISPID_A_MEDIAMINCOLORINDEX = 71161_u32
  DISPID_A_MEDIACOLORINDEX = 71162_u32
  DISPID_A_MEDIAMAXMONOCHROME = 71163_u32
  DISPID_A_MEDIAMINMONOCHROME = 71164_u32
  DISPID_A_MEDIAMONOCHROME = 71165_u32
  DISPID_A_MEDIAMAXRESOLUTION = 71166_u32
  DISPID_A_MEDIAMINRESOLUTION = 71167_u32
  DISPID_A_MEDIARESOLUTION = 71168_u32
  DISPID_INTERNAL_CATTRIBUTEPTRCACHE = 71169_u32
  DISPID_INTERNAL_FONTFACEUNICODERANGE = 71170_u32
  DISPID_INTERNAL_TOUCHTARGETHANDLER = 71171_u32
  DISPID_INTERNAL_PAGEFLOWCOLLECTION = 71172_u32
  DISPID_INTERNAL_NAMEDFLOWCOLLECTION = 71173_u32
  DISPID_A_MEDIAMSHIGHCONTRAST = 71174_u32
  DISPID_INTERNAL_A_MS_HYPHENATE_LIMIT_WORDS = 71175_u32
  DISPID_INTERNAL_A_MS_HYPHENATE_LIMIT_BEFORE = 71176_u32
  DISPID_INTERNAL_A_MS_HYPHENATE_LIMIT_AFTER = 71177_u32
  DISPID_A_MEDIAMSVIEWSTATE = 71178_u32
  DISPID_INTERNAL_ARIAATOMIC = 71179_u32
  DISPID_INTERNAL_ARIAAUTOCOMPLETE = 71180_u32
  DISPID_INTERNAL_ARIADROPEFFECT = 71181_u32
  DISPID_INTERNAL_ARIAGRABBED = 71182_u32
  DISPID_INTERNAL_ARIALABEL = 71183_u32
  DISPID_INTERNAL_ARIAMULTILINE = 71184_u32
  DISPID_INTERNAL_ARIAORIENTATION = 71185_u32
  DISPID_INTERNAL_ARIASORT = 71186_u32
  DISPID_INTERNAL_ARIAVALUETEXT = 71187_u32
  DISPID_A_MEDIAGRID = 71188_u32
  DISPID_A_MEDIASCAN = 71189_u32
  DISPID_A_ACCEVENTRECORDID_START = 71190_u32
  DISPID_A_ACCEVENTRECORDID_END = 71209_u32
  DISPID_INTERNAL_REQUIRED = 71210_u32
  DISPID_INTERNAL_CSS_PARSEDARY = 71211_u32
  DISPID_INTERNAL_SOURCELOCATION = 71212_u32
  DISPID_INTERNAL_CSS_TRACEDSTYLES = 71213_u32
  DISPID_A_BDURLIMGCTXCACHEINDEX = 71214_u32
  DISPID_A_MEDIAWEBKITDEVICEPIXELRATIO = 71215_u32
  DISPID_A_MEDIAWEBKITMAXDEVICEPIXELRATIO = 71216_u32
  DISPID_A_MEDIAWEBKITMINDEVICEPIXELRATIO = 71217_u32
  DISPID_SVGSTYLABLE_CLASSNAME_PROP = 1001_u32
  DISPID_SVGLOCATABLE_NEARESTVIEWPORTELEMENT = 1002_u32
  DISPID_SVGLOCATABLE_FARTHESTVIEWPORTELEMENT = 1003_u32
  DISPID_SVGLOCATABLE_GETBBOX = 1004_u32
  DISPID_SVGLOCATABLE_GETCTM = 1005_u32
  DISPID_SVGLOCATABLE_GETSCREENCTM = 1006_u32
  DISPID_SVGLOCATABLE_GETTRANSFORMTOELEMENT = 1007_u32
  DISPID_SVGTRANSFORMABLE_TRANSFORM_ATTR = 1008_u32
  DISPID_SVGTRANSFORMABLE_TRANSFORM_PROP = 1009_u32
  DISPID_SVGTESTS_REQUIREDFEATURES_ATTR = 1010_u32
  DISPID_SVGTESTS_REQUIREDFEATURES_PROP = 1011_u32
  DISPID_SVGTESTS_REQUIREDEXTENSIONS_ATTR = 1012_u32
  DISPID_SVGTESTS_REQUIREDEXTENSIONS_PROP = 1013_u32
  DISPID_SVGTESTS_SYSTEMLANGUAGE_ATTR = 1014_u32
  DISPID_SVGTESTS_SYSTEMLANGUAGE_PROP = 1015_u32
  DISPID_SVGTESTS_HASEXTENSION = 1016_u32
  DISPID_SVGLANGSPACE_XMLLANG = 1017_u32
  DISPID_SVGLANGSPACE_XMLSPACE = 1018_u32
  DISPID_SVGEXTERNALRESOURCESREQUIRED_EXTERNALRESOURCESREQUIRED_ATTR = 1019_u32
  DISPID_SVGEXTERNALRESOURCESREQUIRED_EXTERNALRESOURCESREQUIRED_PROP = 1020_u32
  DISPID_SVGFITTOVIEWBOX_VIEWBOX_ATTR = 1021_u32
  DISPID_SVGFITTOVIEWBOX_VIEWBOX_PROP = 1022_u32
  DISPID_SVGFITTOVIEWBOX_PRESERVEASPECTRATIO_ATTR = 1023_u32
  DISPID_SVGFITTOVIEWBOX_PRESERVEASPECTRATIO_PROP = 1024_u32
  DISPID_SVGZOOMANDPAN_ZOOMANDPAN = 1025_u32
  DISPID_SVGURIREFERENCE_HREF = 1026_u32
  DISPID_EVPROP_ONMOUSEOVER = 71536_u32
  DISPID_EVMETH_ONMOUSEOVER = 65544_u32
  DISPID_EVPROP_ONMOUSEOUT = 71537_u32
  DISPID_EVMETH_ONMOUSEOUT = 65545_u32
  DISPID_EVPROP_ONMOUSEDOWN = 71538_u32
  DISPID_EVMETH_ONMOUSEDOWN = -605_i32
  DISPID_EVPROP_ONMOUSEUP = 71539_u32
  DISPID_EVMETH_ONMOUSEUP = -607_i32
  DISPID_EVPROP_ONMOUSEMOVE = 71540_u32
  DISPID_EVMETH_ONMOUSEMOVE = -606_i32
  DISPID_EVPROP_ONKEYDOWN = 71541_u32
  DISPID_EVMETH_ONKEYDOWN = -602_i32
  DISPID_EVPROP_ONKEYUP = 71542_u32
  DISPID_EVMETH_ONKEYUP = -604_i32
  DISPID_EVPROP_ONKEYPRESS = 71543_u32
  DISPID_EVMETH_ONKEYPRESS = -603_i32
  DISPID_EVPROP_ONCLICK = 71544_u32
  DISPID_EVMETH_ONCLICK = -600_i32
  DISPID_EVPROP_ONDBLCLICK = 71545_u32
  DISPID_EVMETH_ONDBLCLICK = -601_i32
  DISPID_EVPROP_ONSELECT = 71546_u32
  DISPID_EVMETH_ONSELECT = 1006_u32
  DISPID_EVPROP_ONSUBMIT = 71547_u32
  DISPID_EVMETH_ONSUBMIT = 1007_u32
  DISPID_EVPROP_ONRESET = 71548_u32
  DISPID_EVMETH_ONRESET = 1015_u32
  DISPID_EVPROP_ONHELP = 71549_u32
  DISPID_EVMETH_ONHELP = 65546_u32
  DISPID_EVPROP_ONFOCUS = 71550_u32
  DISPID_EVMETH_ONFOCUS = 65537_u32
  DISPID_EVPROP_ONBLUR = 71551_u32
  DISPID_EVPROP_ONROWEXIT = 71554_u32
  DISPID_EVMETH_ONROWEXIT = 65542_u32
  DISPID_EVPROP_ONROWENTER = 71555_u32
  DISPID_EVMETH_ONROWENTER = 65543_u32
  DISPID_EVPROP_ONBOUNCE = 71556_u32
  DISPID_EVMETH_ONBOUNCE = 1009_u32
  DISPID_EVPROP_ONBEFOREUPDATE = 71557_u32
  DISPID_EVMETH_ONBEFOREUPDATE = 65540_u32
  DISPID_EVPROP_ONAFTERUPDATE = 71558_u32
  DISPID_EVMETH_ONAFTERUPDATE = 65541_u32
  DISPID_EVPROP_ONBEFOREDRAGOVER = 71559_u32
  DISPID_EVPROP_ONBEFOREDROPORPASTE = 71560_u32
  DISPID_EVPROP_ONREADYSTATECHANGE = 71561_u32
  DISPID_EVMETH_ONREADYSTATECHANGE = -609_i32
  DISPID_EVPROP_ONFINISH = 71562_u32
  DISPID_EVMETH_ONFINISH = 1010_u32
  DISPID_EVPROP_ONSTART = 71563_u32
  DISPID_EVMETH_ONSTART = 1011_u32
  DISPID_EVPROP_ONABORT = 71564_u32
  DISPID_EVMETH_ONABORT = 1000_u32
  DISPID_EVPROP_ONERROR = 71565_u32
  DISPID_EVMETH_ONERROR = 1002_u32
  DISPID_EVPROP_ONCHANGE = 71566_u32
  DISPID_EVMETH_ONCHANGE = 1001_u32
  DISPID_EVPROP_ONSCROLL = 71567_u32
  DISPID_EVMETH_ONSCROLL = 1014_u32
  DISPID_EVPROP_ONLOAD = 71568_u32
  DISPID_EVMETH_ONLOAD = 1003_u32
  DISPID_EVPROP_ONUNLOAD = 71569_u32
  DISPID_EVMETH_ONUNLOAD = 1008_u32
  DISPID_EVPROP_ONLAYOUT = 71570_u32
  DISPID_EVMETH_ONLAYOUT = 1013_u32
  DISPID_EVPROP_ONDRAGSTART = 71571_u32
  DISPID_EVMETH_ONDRAGSTART = 65547_u32
  DISPID_EVPROP_ONRESIZE = 71572_u32
  DISPID_EVMETH_ONRESIZE = 1016_u32
  DISPID_EVPROP_ONSELECTSTART = 71573_u32
  DISPID_EVMETH_ONSELECTSTART = 65548_u32
  DISPID_EVPROP_ONERRORUPDATE = 71574_u32
  DISPID_EVMETH_ONERRORUPDATE = 65549_u32
  DISPID_EVPROP_ONBEFOREUNLOAD = 71575_u32
  DISPID_EVMETH_ONBEFOREUNLOAD = 1017_u32
  DISPID_EVPROP_ONDATASETCHANGED = 71576_u32
  DISPID_EVMETH_ONDATASETCHANGED = 65550_u32
  DISPID_EVPROP_ONDATAAVAILABLE = 71577_u32
  DISPID_EVMETH_ONDATAAVAILABLE = 65551_u32
  DISPID_EVPROP_ONDATASETCOMPLETE = 71578_u32
  DISPID_EVMETH_ONDATASETCOMPLETE = 65552_u32
  DISPID_EVPROP_ONFILTER = 71579_u32
  DISPID_EVMETH_ONFILTER = 65553_u32
  DISPID_EVPROP_ONCHANGEFOCUS = 71580_u32
  DISPID_EVMETH_ONCHANGEFOCUS = 1018_u32
  DISPID_EVPROP_ONCHANGEBLUR = 71581_u32
  DISPID_EVMETH_ONCHANGEBLUR = 1019_u32
  DISPID_EVPROP_ONLOSECAPTURE = 71582_u32
  DISPID_EVMETH_ONLOSECAPTURE = 65554_u32
  DISPID_EVPROP_ONPROPERTYCHANGE = 71583_u32
  DISPID_EVMETH_ONPROPERTYCHANGE = 65555_u32
  DISPID_EVPROP_ONPERSISTSAVE = 71584_u32
  DISPID_EVMETH_ONPERSISTSAVE = 1021_u32
  DISPID_EVPROP_ONDRAG = 71585_u32
  DISPID_EVMETH_ONDRAG = 65556_u32
  DISPID_EVPROP_ONDRAGEND = 71586_u32
  DISPID_EVMETH_ONDRAGEND = 65557_u32
  DISPID_EVPROP_ONDRAGENTER = 71587_u32
  DISPID_EVMETH_ONDRAGENTER = 65558_u32
  DISPID_EVPROP_ONDRAGOVER = 71588_u32
  DISPID_EVMETH_ONDRAGOVER = 65559_u32
  DISPID_EVPROP_ONDRAGLEAVE = 71589_u32
  DISPID_EVMETH_ONDRAGLEAVE = 65560_u32
  DISPID_EVPROP_ONDROP = 71590_u32
  DISPID_EVMETH_ONDROP = 65561_u32
  DISPID_EVPROP_ONCUT = 71591_u32
  DISPID_EVMETH_ONCUT = 65562_u32
  DISPID_EVPROP_ONCOPY = 71592_u32
  DISPID_EVMETH_ONCOPY = 65563_u32
  DISPID_EVPROP_ONPASTE = 71593_u32
  DISPID_EVMETH_ONPASTE = 65564_u32
  DISPID_EVPROP_ONBEFORECUT = 71594_u32
  DISPID_EVMETH_ONBEFORECUT = 65565_u32
  DISPID_EVPROP_ONBEFORECOPY = 71595_u32
  DISPID_EVMETH_ONBEFORECOPY = 65566_u32
  DISPID_EVPROP_ONBEFOREPASTE = 71596_u32
  DISPID_EVMETH_ONBEFOREPASTE = 65567_u32
  DISPID_EVPROP_ONPERSISTLOAD = 71597_u32
  DISPID_EVMETH_ONPERSISTLOAD = 1022_u32
  DISPID_EVPROP_ONROWSDELETE = 71598_u32
  DISPID_EVMETH_ONROWSDELETE = 65568_u32
  DISPID_EVPROP_ONROWSINSERTED = 71599_u32
  DISPID_EVMETH_ONROWSINSERTED = 65569_u32
  DISPID_EVPROP_ONCELLCHANGE = 71600_u32
  DISPID_EVMETH_ONCELLCHANGE = 65570_u32
  DISPID_EVPROP_ONCONTEXTMENU = 71601_u32
  DISPID_EVMETH_ONCONTEXTMENU = 1023_u32
  DISPID_EVPROP_ONBEFOREPRINT = 71602_u32
  DISPID_EVMETH_ONBEFOREPRINT = 1024_u32
  DISPID_EVPROP_ONAFTERPRINT = 71603_u32
  DISPID_EVMETH_ONAFTERPRINT = 1025_u32
  DISPID_EVPROP_ONSTOP = 71604_u32
  DISPID_EVMETH_ONSTOP = 1026_u32
  DISPID_EVPROP_ONBEFOREEDITFOCUS = 71605_u32
  DISPID_EVMETH_ONBEFOREEDITFOCUS = 1027_u32
  DISPID_EVPROP_ONATTACHEVENT = 71606_u32
  DISPID_EVPROP_ONMOUSEHOVER = 71607_u32
  DISPID_EVMETH_ONMOUSEHOVER = 1028_u32
  DISPID_EVPROP_ONCONTENTREADY = 71608_u32
  DISPID_EVMETH_ONCONTENTREADY = 1029_u32
  DISPID_EVPROP_ONLAYOUTCOMPLETE = 71609_u32
  DISPID_EVMETH_ONLAYOUTCOMPLETE = 1030_u32
  DISPID_EVPROP_ONPAGE = 71610_u32
  DISPID_EVMETH_ONPAGE = 1031_u32
  DISPID_EVPROP_ONLINKEDOVERFLOW = 71611_u32
  DISPID_EVMETH_ONLINKEDOVERFLOW = 1032_u32
  DISPID_EVPROP_ONMOUSEWHEEL = 71612_u32
  DISPID_EVMETH_ONMOUSEWHEEL = 1033_u32
  DISPID_EVPROP_ONBEFOREDEACTIVATE = 71613_u32
  DISPID_EVMETH_ONBEFOREDEACTIVATE = 1034_u32
  DISPID_EVPROP_ONMOVE = 71614_u32
  DISPID_EVMETH_ONMOVE = 1035_u32
  DISPID_EVPROP_ONCONTROLSELECT = 71615_u32
  DISPID_EVMETH_ONCONTROLSELECT = 1036_u32
  DISPID_EVPROP_ONSELECTIONCHANGE = 71616_u32
  DISPID_EVMETH_ONSELECTIONCHANGE = 1037_u32
  DISPID_EVPROP_ONMOVESTART = 71617_u32
  DISPID_EVMETH_ONMOVESTART = 1038_u32
  DISPID_EVPROP_ONMOVEEND = 71618_u32
  DISPID_EVMETH_ONMOVEEND = 1039_u32
  DISPID_EVPROP_ONRESIZESTART = 71619_u32
  DISPID_EVMETH_ONRESIZESTART = 1040_u32
  DISPID_EVPROP_ONRESIZEEND = 71620_u32
  DISPID_EVMETH_ONRESIZEEND = 1041_u32
  DISPID_EVPROP_ONMOUSEENTER = 71621_u32
  DISPID_EVMETH_ONMOUSEENTER = 1042_u32
  DISPID_EVPROP_ONMOUSELEAVE = 71622_u32
  DISPID_EVMETH_ONMOUSELEAVE = 1043_u32
  DISPID_EVPROP_ONACTIVATE = 71623_u32
  DISPID_EVMETH_ONACTIVATE = 1044_u32
  DISPID_EVPROP_ONDEACTIVATE = 71624_u32
  DISPID_EVMETH_ONDEACTIVATE = 1045_u32
  DISPID_EVPROP_ONMULTILAYOUTCLEANUP = 71625_u32
  DISPID_EVMETH_ONMULTILAYOUTCLEANUP = 1046_u32
  DISPID_EVPROP_ONBEFOREACTIVATE = 71626_u32
  DISPID_EVMETH_ONBEFOREACTIVATE = 1047_u32
  DISPID_EVPROP_ONFOCUSIN = 71627_u32
  DISPID_EVMETH_ONFOCUSIN = 1048_u32
  DISPID_EVPROP_ONFOCUSOUT = 71628_u32
  DISPID_EVMETH_ONFOCUSOUT = 1049_u32
  DISPID_EVPROP_ONVALUECHANGE = 71629_u32
  DISPID_EVMETH_ONVALUECHANGE = 1050_u32
  DISPID_EVPROP_ONSELECTADD = 71630_u32
  DISPID_EVMETH_ONSELECTADD = 1051_u32
  DISPID_EVPROP_ONSELECTREMOVE = 71631_u32
  DISPID_EVMETH_ONSELECTREMOVE = 1052_u32
  DISPID_EVPROP_ONSELECTWITHIN = 71632_u32
  DISPID_EVMETH_ONSELECTWITHIN = 1053_u32
  DISPID_EVPROP_ONSYSTEMSCROLLINGSTART = 71633_u32
  DISPID_EVMETH_ONSYSTEMSCROLLINGSTART = 1054_u32
  DISPID_EVPROP_ONSYSTEMSCROLLINGEND = 71634_u32
  DISPID_EVMETH_ONSYSTEMSCROLLINGEND = 1055_u32
  DISPID_EVPROP_ONOBJECTCONTENTSCROLLED = 71635_u32
  DISPID_EVMETH_ONOBJECTCONTENTSCROLLED = 1056_u32
  DISPID_EVPROP_ONSTORAGE = 71636_u32
  DISPID_EVMETH_ONSTORAGE = 1057_u32
  DISPID_EVPROP_ONSTORAGECOMMIT = 71637_u32
  DISPID_EVMETH_ONSTORAGECOMMIT = 1058_u32
  DISPID_EVPROP_ONSHOW = 71638_u32
  DISPID_EVMETH_ONSHOW = 1059_u32
  DISPID_EVPROP_ONHIDE = 71639_u32
  DISPID_EVMETH_ONHIDE = 1060_u32
  DISPID_EVPROP_ONALERT = 71640_u32
  DISPID_EVMETH_ONALERT = 1061_u32
  DISPID_EVPROP_ONPOPUPMENUSTART = 71641_u32
  DISPID_EVMETH_ONPOPUPMENUSTART = 1062_u32
  DISPID_EVPROP_ONPOPUPMENUEND = 71642_u32
  DISPID_EVMETH_ONPOPUPMENUEND = 1063_u32
  DISPID_EVPROP_ONONLINE = 71643_u32
  DISPID_EVMETH_ONONLINE = 1064_u32
  DISPID_EVPROP_ONOFFLINE = 71644_u32
  DISPID_EVMETH_ONOFFLINE = 1065_u32
  DISPID_EVPROP_ONHASHCHANGE = 71645_u32
  DISPID_EVMETH_ONHASHCHANGE = 1066_u32
  DISPID_EVPROP_ONMESSAGE = 71646_u32
  DISPID_EVMETH_ONMESSAGE = 1067_u32
  DISPID_EVPROP_ONDOMMUTATION = 71647_u32
  DISPID_EVMETH_ONDOMMUTATION = 1068_u32
  DISPID_EVPROP_SINKLIMIT = 71647_u32
  DISPID_EVPROP_TIMEOUT = 71648_u32
  DISPID_EVPROP_WHEEL = 71649_u32
  DISPID_EVPROP_SVGLOAD = 71650_u32
  DISPID_EVPROP_SVGUNLOAD = 71651_u32
  DISPID_EVPROP_SVGABORT = 71652_u32
  DISPID_EVPROP_SVGERROR = 71653_u32
  DISPID_EVPROP_SVGRESIZE = 71654_u32
  DISPID_EVPROP_SVGSCROLL = 71655_u32
  DISPID_EVPROP_SVGZOOM = 71656_u32
  DISPID_EVPROP_ONMSTHUMBNAILCLICK = 71657_u32
  DISPID_EVPROP_COMPOSITIONSTART = 71658_u32
  DISPID_EVPROP_COMPOSITIONUPDATE = 71659_u32
  DISPID_EVPROP_COMPOSITIONEND = 71660_u32
  DISPID_EVPROP_DOMATTRMODIFIED = 71661_u32
  DISPID_EVPROP_DOMCONTENTLOADED = 71662_u32
  DISPID_EVPROP_INPUT = 71663_u32
  DISPID_EVPROP_DOMCHARDATAMODIFIED = 71664_u32
  DISPID_EVPROP_TEXTINPUT = 71665_u32
  DISPID_EVPROP_ONMSSITEMODEJUMPLISTITEMREMOVED = 71666_u32
  DISPID_EVPROP_DOMNODEINSERTED = 71667_u32
  DISPID_EVPROP_DOMNODEREMOVED = 71668_u32
  DISPID_EVPROP_DOMSUBTREEMODIFIED = 71669_u32
  DISPID_EVPROP_CANPLAY = 71670_u32
  DISPID_EVPROP_CANPLAYTHROUGH = 71671_u32
  DISPID_EVPROP_DURATIONCHANGE = 71672_u32
  DISPID_EVPROP_EMPTIED = 71673_u32
  DISPID_EVPROP_ENDED = 71674_u32
  DISPID_EVPROP_LOADEDDATA = 71675_u32
  DISPID_EVPROP_LOADEDMETADATA = 71676_u32
  DISPID_EVPROP_LOADSTART = 71677_u32
  DISPID_EVPROP_PAUSE = 71678_u32
  DISPID_EVPROP_PLAY = 71679_u32
  DISPID_EVPROP_PLAYING = 71680_u32
  DISPID_EVPROP_PROGRESS = 71681_u32
  DISPID_EVPROP_RATECHANGE = 71682_u32
  DISPID_EVPROP_SEEKED = 71683_u32
  DISPID_EVPROP_SEEKING = 71684_u32
  DISPID_EVPROP_STALLED = 71685_u32
  DISPID_EVPROP_SUSPEND = 71686_u32
  DISPID_EVPROP_TIMEUPDATE = 71687_u32
  DISPID_EVPROP_VOLUMECHANGE = 71688_u32
  DISPID_EVPROP_WAITING = 71689_u32
  DISPID_EVPROP_ONMSPOINTERDOWN = 71690_u32
  DISPID_EVPROP_ONMSPOINTERMOVE = 71691_u32
  DISPID_EVPROP_ONMSPOINTERUP = 71692_u32
  DISPID_EVPROP_ONMSPOINTEROVER = 71693_u32
  DISPID_EVPROP_ONMSPOINTEROUT = 71694_u32
  DISPID_EVPROP_ONMSPOINTERCANCEL = 71695_u32
  DISPID_EVPROP_ONMSPOINTERHOVER = 71696_u32
  DISPID_EVPROP_MSCONNECT = 71697_u32
  DISPID_EVPROP_MSDISCONNECT = 71698_u32
  DISPID_EVPROP_ONMSGESTURESTART = 71699_u32
  DISPID_EVPROP_ONMSGESTURECHANGE = 71700_u32
  DISPID_EVPROP_ONMSGESTUREEND = 71701_u32
  DISPID_EVPROP_ONMSGESTUREHOLD = 71702_u32
  DISPID_EVPROP_ONMSGESTURETAP = 71703_u32
  DISPID_EVPROP_ONMSGESTUREDOUBLETAP = 71704_u32
  DISPID_EVPROP_ONMSINERTIASTART = 71705_u32
  DISPID_EVPROP_ONMSLOSTPOINTERCAPTURE = 71706_u32
  DISPID_EVPROP_ONMSGOTPOINTERCAPTURE = 71707_u32
  DISPID_EVPROP_ONMSCONTENTZOOM = 71708_u32
  DISPID_EVPROP_ONTRANSITIONSTART = 71709_u32
  DISPID_EVPROP_ONTRANSITIONEND = 71710_u32
  DISPID_EVPROP_ONANIMATIONSTART = 71711_u32
  DISPID_EVPROP_ONANIMATIONEND = 71712_u32
  DISPID_EVPROP_ONANIMATIONITERATION = 71713_u32
  DISPID_EVPROP_ONMSMANIPULATIONSTATECHANGED = 71714_u32
  DISPID_EVPROP_ONOPEN = 71715_u32
  DISPID_EVPROP_ONCLOSE = 71716_u32
  DISPID_EVPROP_CHECKING = 71717_u32
  DISPID_EVPROP_NOUPDATE = 71718_u32
  DISPID_EVPROP_DOWNLOADING = 71719_u32
  DISPID_EVPROP_UPDATEREADY = 71720_u32
  DISPID_EVPROP_CACHED = 71721_u32
  DISPID_EVPROP_OBSOLETE = 71722_u32
  DISPID_EVPROP_LOADEND = 71723_u32
  DISPID_EVPROP_INVALID = 71724_u32
  DISPID_EVPROP_ONSUCCESS = 71725_u32
  DISPID_EVPROP_ONBLOCKED = 71726_u32
  DISPID_EVPROP_ONCOMPLETE = 71727_u32
  DISPID_EVPROP_ONPOPSTATE = 71728_u32
  DISPID_EVPROP_ONCUECHANGE = 71729_u32
  DISPID_EVPROP_ONENTER = 71730_u32
  DISPID_EVPROP_ONEXIT = 71731_u32
  DISPID_EVPROP_VISIBILITYCHANGE = 71732_u32
  DISPID_EVPROP_ONMSREGIONUPDATE = 71733_u32
  DISPID_EVPROP_ONUPGRADENEEDED = 71734_u32
  DISPID_EVPROP_ONMSVIDEOFORMATCHANGED = 71735_u32
  DISPID_EVPROP_ADDTRACK = 71736_u32
  DISPID_EVPROP_ONMSVIDEOFRAMESTEPCOMPLETED = 71737_u32
  DISPID_EVPROP_ONMSHOLDVISUAL = 71738_u32
  DISPID_EVPROP_ONMSVIDEOOPTIMALLAYOUTCHANGED = 71739_u32
  DISPID_EVPROP_ONMSFULLSCREENCHANGE = 71740_u32
  DISPID_EVPROP_ONMSFULLSCREENERROR = 71741_u32
  DISPID_EVPROP_MSELEMENTRESIZE = 71742_u32
  DISPID_EVPROP_ONSOURCEOPEN = 71743_u32
  DISPID_EVPROP_ONSOURCECLOSE = 71744_u32
  DISPID_EVPROP_ONSOURCEENDED = 71745_u32
  DISPID_EVPROP_ONADDSOURCEBUFFER = 71746_u32
  DISPID_EVPROP_ONREMOVESOURCEBUFFER = 71747_u32
  DISPID_EVPROP_ONMSNEEDKEY = 71748_u32
  DISPID_EVPROP_ONMSKEYMESSAGE = 71749_u32
  DISPID_EVPROP_ONMSKEYERROR = 71750_u32
  DISPID_EVPROP_ONMSKEYADDED = 71751_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONDOMCONTENTLOADED = 71752_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONCONTENTLOADING = 71753_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONNAVIGATIONSTARTING = 71754_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONNAVIGATIONCOMPLETED = 71755_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONFRAMEDOMCONTENTLOADED = 71756_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONFRAMECONTENTLOADING = 71757_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONFRAMENAVIGATIONSTARTING = 71758_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONFRAMENAVIGATIONCOMPLETED = 71759_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONSCRIPTNOTIFY = 71760_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONUNVIEWABLECONTENT = 71761_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONUNSAFECONTENTWARNINGDISPLAYING = 71762_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONLONGRUNNINGSCRIPTDETECTED = 71763_u32
  DISPID_EVPROP_WEBGLCONTEXTLOST = 71764_u32
  DISPID_EVPROP_WEBGLCONTEXTRESTORED = 71765_u32
  DISPID_EVPROP_ONUPDATESTART = 71766_u32
  DISPID_EVPROP_ONUPDATE = 71767_u32
  DISPID_EVPROP_ONUPDATEEND = 71768_u32
  DISPID_EVPROP_ONMSPOINTERENTER = 71769_u32
  DISPID_EVPROP_ONMSPOINTERLEAVE = 71770_u32
  DISPID_EVPROP_ONMSSITEPINNED = 71771_u32
  DISPID_EVPROP_MSORIENTATIONCHANGE = 71772_u32
  DISPID_EVPROP_ONDEVICEORIENTATION = 71773_u32
  DISPID_EVPROP_ONDEVICEMOTION = 71774_u32
  DISPID_EVPROP_ONPAGESHOW = 71775_u32
  DISPID_EVPROP_ONPAGEHIDE = 71776_u32
  DISPID_EVPROP_ONMSCANDIDATEWINDOWSHOW = 71777_u32
  DISPID_EVPROP_ONMSCANDIDATEWINDOWUPDATE = 71778_u32
  DISPID_EVPROP_ONMSCANDIDATEWINDOWHIDE = 71779_u32
  DISPID_EVPROP_HTML5ONREADYSTATECHANGE = 71780_u32
  DISPID_EVPROP_REMOVETRACK = 71781_u32
  DISPID_EVPROP_ONCOMPASSNEEDSCALIBRATION = 71782_u32
  DISPID_EVPROP_MSHTMLWEBVIEW_ONCONTAINSFULLSCREENELEMENTCHANGED = 71783_u32
  DISPID_EVPROP_ONTOUCHSTART = 71784_u32
  DISPID_EVPROP_ONTOUCHEND = 71785_u32
  DISPID_EVPROP_ONTOUCHMOVE = 71786_u32
  DISPID_EVPROP_ONTOUCHCANCEL = 71787_u32
  DISPID_EVPROP_ONWEBKITTRANSITIONEND = 71788_u32
  DISPID_EVPROP_ONWEBKITANIMATIONSTART = 71789_u32
  DISPID_EVPROP_ONWEBKITANIMATIONEND = 71790_u32
  DISPID_EVPROP_ONWEBKITANIMATIONITERATION = 71791_u32
  DISPID_EVPROP_WEBGLCONTEXTCREATIONERROR = 71792_u32
  DISPID_EVPROP_ONDOMFOCUSIN = 71793_u32
  DISPID_EVPROP_ONDOMFOCUSOUT = 71794_u32
  DISPID_EVPROP_ORIENTATIONCHANGE = 71795_u32
  DISPID_EVPROPS_COUNT = 260_u32
  DISPID_IHTMLFILTERSCOLLECTION_LENGTH = 1001_u32
  DISPID_IHTMLFILTERSCOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLFILTERSCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLDOMCONSTRUCTOR_CONSTRUCTOR = 66045_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LENGTH = 70037_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_PARENTRULE = 70038_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_GETPROPERTYVALUE = 70039_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_GETPROPERTYPRIORITY = 70040_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_REMOVEPROPERTY = 70041_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_SETPROPERTY = 70042_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_ITEM = 0_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FONTFAMILY = 70554_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FONTSTYLE = 70560_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FONTVARIANT = 70561_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FONTWEIGHT = 70563_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FONTSIZE = 70555_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FONT = 70577_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_COLOR = 70538_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BACKGROUND = 70568_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BACKGROUNDCOLOR = -501_i32
  DISPID_IHTMLCSSSTYLEDECLARATION_BACKGROUNDIMAGE = 70537_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BACKGROUNDREPEAT = 70580_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BACKGROUNDATTACHMENT = 70581_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BACKGROUNDPOSITION = 70582_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BACKGROUNDPOSITIONX = 70569_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BACKGROUNDPOSITIONY = 70570_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_WORDSPACING = 70583_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LETTERSPACING = 70544_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTDECORATION = 70571_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_VERTICALALIGN = 70584_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTTRANSFORM = 70540_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTALIGN = 65608_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTINDENT = 70543_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LINEHEIGHT = 70542_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MARGINTOP = 70573_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MARGINRIGHT = 70574_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MARGINBOTTOM = 70575_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MARGINLEFT = 70576_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MARGIN = 70572_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_PADDINGTOP = 70548_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_PADDINGRIGHT = 70549_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_PADDINGBOTTOM = 70550_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_PADDINGLEFT = 70551_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_PADDING = 70547_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDER = 70585_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERTOP = 70586_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERRIGHT = 70587_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERBOTTOM = 70588_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERLEFT = 70589_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERCOLOR = 70590_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERTOPCOLOR = 70591_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERRIGHTCOLOR = 70592_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERBOTTOMCOLOR = 70593_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERLEFTCOLOR = 70594_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERWIDTH = 70595_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERTOPWIDTH = 70596_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERRIGHTWIDTH = 70597_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERBOTTOMWIDTH = 70598_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERLEFTWIDTH = 70599_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERSTYLE = 70600_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERTOPSTYLE = 70601_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERRIGHTSTYLE = 70602_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERBOTTOMSTYLE = 70603_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERLEFTSTYLE = 70604_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_WIDTH = 65541_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_HEIGHT = 65542_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_STYLEFLOAT = 70606_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CLEAR = 70552_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_DISPLAY = 70607_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_VISIBILITY = 70616_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LISTSTYLETYPE = 70608_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LISTSTYLEPOSITION = 70609_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LISTSTYLEIMAGE = 70610_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LISTSTYLE = 70611_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_WHITESPACE = 70612_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TOP = 65540_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LEFT = 65539_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_ZINDEX = 70627_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_OVERFLOW = 70546_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_PAGEBREAKBEFORE = 70613_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_PAGEBREAKAFTER = 70614_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CSSTEXT = 70635_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CURSOR = 70638_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CLIP = 70628_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FILTER = 70618_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TABLELAYOUT = 70634_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERCOLLAPSE = 70620_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_DIRECTION = 70655_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BEHAVIOR = 70651_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_POSITION = 70626_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_UNICODEBIDI = 70654_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BOTTOM = 65614_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_RIGHT = 65613_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_IMEMODE = 70656_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_RUBYALIGN = 70657_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_RUBYPOSITION = 70658_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_RUBYOVERHANG = 70659_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LAYOUTGRIDCHAR = 70663_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LAYOUTGRIDLINE = 70664_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LAYOUTGRIDMODE = 70665_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LAYOUTGRIDTYPE = 70666_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LAYOUTGRID = 70667_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTAUTOSPACE = 70668_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_WORDBREAK = 70670_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LINEBREAK = 70669_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTJUSTIFY = 70671_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTJUSTIFYTRIM = 70672_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTKASHIDA = 70673_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_OVERFLOWX = 70675_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_OVERFLOWY = 70676_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_ACCELERATOR = 70683_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_LAYOUTFLOW = 70691_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_ZOOM = 70689_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_WORDWRAP = 70694_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTUNDERLINEPOSITION = 70695_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_SCROLLBARBASECOLOR = 70716_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_SCROLLBARFACECOLOR = 70717_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_SCROLLBAR3DLIGHTCOLOR = 70718_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_SCROLLBARSHADOWCOLOR = 70719_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_SCROLLBARHIGHLIGHTCOLOR = 70720_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_SCROLLBARDARKSHADOWCOLOR = 70721_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_SCROLLBARARROWCOLOR = 70722_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_SCROLLBARTRACKCOLOR = 70732_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_WRITINGMODE = 70728_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTALIGNLAST = 70739_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTKASHIDASPACE = 70740_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTOVERFLOW = 70745_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MINHEIGHT = 70747_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MSINTERPOLATIONMODE = 70749_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MAXHEIGHT = 70750_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MINWIDTH = 70751_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MAXWIDTH = 70752_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CONTENT = 70754_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CAPTIONSIDE = 70755_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_COUNTERINCREMENT = 70756_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_COUNTERRESET = 70757_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_OUTLINE = 70758_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_OUTLINEWIDTH = 70759_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_OUTLINESTYLE = 70760_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_OUTLINECOLOR = 70761_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BOXSIZING = 70762_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERSPACING = 70763_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_ORPHANS = 70764_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_WIDOWS = 70765_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_PAGEBREAKINSIDE = 70766_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_EMPTYCELLS = 70786_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MSBLOCKPROGRESSION = 70787_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_QUOTES = 70788_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_ALIGNMENTBASELINE = 70814_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BASELINESHIFT = 70815_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_DOMINANTBASELINE = 70816_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FONTSIZEADJUST = 70817_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FONTSTRETCH = 70818_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_OPACITY = 70819_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CLIPPATH = 70820_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CLIPRULE = 70821_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FILL = 70822_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FILLOPACITY = 70823_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_FILLRULE = 70824_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_KERNING = 70825_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MARKER = 70826_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MARKEREND = 70827_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MARKERMID = 70828_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MARKERSTART = 70829_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MASK = 70830_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_POINTEREVENTS = 70831_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_STOPCOLOR = 70832_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_STOPOPACITY = 70833_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_STROKE = 70834_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_STROKEDASHARRAY = 70835_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_STROKEDASHOFFSET = 70836_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_STROKELINECAP = 70837_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_STROKELINEJOIN = 70838_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_STROKEMITERLIMIT = 70839_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_STROKEOPACITY = 70840_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_STROKEWIDTH = 70841_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_TEXTANCHOR = 70842_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_GLYPHORIENTATIONHORIZONTAL = 70843_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_GLYPHORIENTATIONVERTICAL = 70844_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERRADIUS = 70846_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERTOPLEFTRADIUS = 70847_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERTOPRIGHTRADIUS = 70848_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERBOTTOMRIGHTRADIUS = 70849_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BORDERBOTTOMLEFTRADIUS = 70850_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CLIPTOP = 70629_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CLIPRIGHT = 70630_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CLIPBOTTOM = 70631_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CLIPLEFT = 70632_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_CSSFLOAT = 70845_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BACKGROUNDCLIP = 70852_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BACKGROUNDORIGIN = 70853_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BACKGROUNDSIZE = 70854_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_BOXSHADOW = 70855_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MSTRANSFORM = 70851_u32
  DISPID_IHTMLCSSSTYLEDECLARATION_MSTRANSFORMORIGIN = 70861_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLCHAINING = 70891_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSCONTENTZOOMING = 70892_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSCONTENTZOOMSNAPTYPE = 70893_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLRAILS = 70894_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSCONTENTZOOMCHAINING = 70895_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLSNAPTYPE = 70896_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSCONTENTZOOMLIMIT = 70897_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSCONTENTZOOMSNAP = 70898_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSCONTENTZOOMSNAPPOINTS = 70899_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSCONTENTZOOMLIMITMIN = 70901_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSCONTENTZOOMLIMITMAX = 70902_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLSNAPX = 70903_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLSNAPY = 70904_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLSNAPPOINTSX = 70905_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLSNAPPOINTSY = 70906_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSGRIDCOLUMN = 70908_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSGRIDCOLUMNALIGN = 70909_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSGRIDCOLUMNS = 70910_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSGRIDCOLUMNSPAN = 70911_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSGRIDROW = 70913_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSGRIDROWALIGN = 70914_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSGRIDROWS = 70915_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSGRIDROWSPAN = 70916_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSWRAPTHROUGH = 70937_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSWRAPMARGIN = 70947_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSWRAPFLOW = 70949_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSANIMATIONNAME = 70917_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSANIMATIONDURATION = 70918_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSANIMATIONTIMINGFUNCTION = 70919_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSANIMATIONDELAY = 70920_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSANIMATIONDIRECTION = 70921_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSANIMATIONPLAYSTATE = 70922_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSANIMATIONITERATIONCOUNT = 70923_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSANIMATION = 70924_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSANIMATIONFILLMODE = 70925_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_COLORINTERPOLATIONFILTERS = 70928_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_COLUMNCOUNT = 70872_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_COLUMNWIDTH = 70873_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_COLUMNGAP = 70874_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_COLUMNFILL = 70875_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_COLUMNSPAN = 70876_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_COLUMNS = 70871_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_COLUMNRULE = 70877_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_COLUMNRULECOLOR = 70880_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_COLUMNRULESTYLE = 70878_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_COLUMNRULEWIDTH = 70879_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_BREAKBEFORE = 70881_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_BREAKAFTER = 70882_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_BREAKINSIDE = 70883_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_FLOODCOLOR = 70926_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_FLOODOPACITY = 70927_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_LIGHTINGCOLOR = 70929_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLLIMITXMIN = 70930_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLLIMITYMIN = 70931_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLLIMITXMAX = 70932_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLLIMITYMAX = 70933_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLLIMIT = 70934_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_TEXTSHADOW = 70936_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLOWFROM = 70938_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLOWINTO = 70939_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSHYPHENS = 70940_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSHYPHENATELIMITZONE = 70941_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSHYPHENATELIMITCHARS = 70942_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSHYPHENATELIMITLINES = 70943_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSHIGHCONTRASTADJUST = 70945_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_ENABLEBACKGROUND = 70946_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFONTFEATURESETTINGS = 70950_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSUSERSELECT = 70951_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSOVERFLOWSTYLE = 70935_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSTRANSFORMSTYLE = 70889_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSBACKFACEVISIBILITY = 70890_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSPERSPECTIVE = 70885_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSPERSPECTIVEORIGIN = 70886_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSTRANSITIONPROPERTY = 70866_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSTRANSITIONDURATION = 70867_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSTRANSITIONTIMINGFUNCTION = 70868_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSTRANSITIONDELAY = 70869_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSTRANSITION = 70870_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSTOUCHACTION = 70952_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSSCROLLTRANSLATION = 70954_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEX = 70955_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEXPOSITIVE = 70956_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEXNEGATIVE = 70957_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEXPREFERREDSIZE = 70958_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEXFLOW = 70959_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEXDIRECTION = 70960_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEXWRAP = 70961_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEXALIGN = 70962_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEXITEMALIGN = 70963_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEXPACK = 70964_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEXLINEPACK = 70965_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSFLEXORDER = 70966_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_MSTOUCHSELECT = 70994_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_TRANSFORM = 70967_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_TRANSFORMORIGIN = 70968_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_TRANSFORMSTYLE = 70976_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_BACKFACEVISIBILITY = 70977_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_PERSPECTIVE = 70974_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_PERSPECTIVEORIGIN = 70975_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_TRANSITIONPROPERTY = 70969_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_TRANSITIONDURATION = 70970_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_TRANSITIONTIMINGFUNCTION = 70971_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_TRANSITIONDELAY = 70972_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_TRANSITION = 70973_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_FONTFEATURESETTINGS = 70987_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_ANIMATIONNAME = 70978_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_ANIMATIONDURATION = 70979_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_ANIMATIONTIMINGFUNCTION = 70980_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_ANIMATIONDELAY = 70981_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_ANIMATIONDIRECTION = 70982_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_ANIMATIONPLAYSTATE = 70983_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_ANIMATIONITERATIONCOUNT = 70984_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_ANIMATION = 70985_u32
  DISPID_IHTMLCSSSTYLEDECLARATION2_ANIMATIONFILLMODE = 70986_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_FLEX = 71002_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_FLEXDIRECTION = 70998_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_FLEXWRAP = 70999_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_FLEXFLOW = 71000_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_FLEXGROW = 71003_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_FLEXSHRINK = 71004_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_FLEXBASIS = 71005_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_JUSTIFYCONTENT = 71006_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_ALIGNITEMS = 71007_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_ALIGNSELF = 71008_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_ALIGNCONTENT = 71009_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_BORDERIMAGE = 71010_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_BORDERIMAGESOURCE = 71011_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_BORDERIMAGESLICE = 71012_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_BORDERIMAGEWIDTH = 71013_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_BORDERIMAGEOUTSET = 71014_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_BORDERIMAGEREPEAT = 71015_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_MSIMEALIGN = 71017_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_MSTEXTCOMBINEHORIZONTAL = 71018_u32
  DISPID_IHTMLCSSSTYLEDECLARATION3_TOUCHACTION = 71019_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITAPPEARANCE = 71020_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITUSERSELECT = 71032_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBOXALIGN = 71021_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBOXORDINALGROUP = 71022_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBOXPACK = 71023_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBOXFLEX = 71024_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBOXORIENT = 71025_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBOXDIRECTION = 71026_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITTRANSFORM = 71028_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKGROUNDSIZE = 71029_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKFACEVISIBILITY = 71030_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITANIMATION = 71033_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITTRANSITION = 71034_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITANIMATIONNAME = 71035_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITANIMATIONDURATION = 71036_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITANIMATIONTIMINGFUNCTION = 71037_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITANIMATIONDELAY = 71038_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITANIMATIONITERATIONCOUNT = 71039_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITANIMATIONDIRECTION = 71040_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITANIMATIONPLAYSTATE = 71041_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITTRANSITIONPROPERTY = 71042_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITTRANSITIONDURATION = 71043_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITTRANSITIONTIMINGFUNCTION = 71044_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITTRANSITIONDELAY = 71045_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKGROUNDATTACHMENT = 71046_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKGROUNDCOLOR = 71047_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKGROUNDCLIP = 71048_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKGROUNDIMAGE = 71049_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKGROUNDREPEAT = 71050_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKGROUNDORIGIN = 71051_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKGROUNDPOSITION = 71052_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKGROUNDPOSITIONX = 71053_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKGROUNDPOSITIONY = 71054_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBACKGROUND = 71055_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITTRANSFORMORIGIN = 71056_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_MSTEXTSIZEADJUST = 70864_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITTEXTSIZEADJUST = 71060_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBORDERIMAGE = 71061_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBORDERIMAGESOURCE = 71062_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBORDERIMAGESLICE = 71063_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBORDERIMAGEWIDTH = 71064_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBORDERIMAGEOUTSET = 71065_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBORDERIMAGEREPEAT = 71066_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITBOXSIZING = 71031_u32
  DISPID_IHTMLCSSSTYLEDECLARATION4_WEBKITANIMATIONFILLMODE = 71027_u32
  DISPID_IHTMLSTYLEENABLED_MSGETPROPERTYENABLED = 70043_u32
  DISPID_IHTMLSTYLEENABLED_MSPUTPROPERTYENABLED = 70044_u32
  DISPID_IHTMLSTYLE_FONTFAMILY = 70554_u32
  DISPID_IHTMLSTYLE_FONTSTYLE = 70560_u32
  DISPID_IHTMLSTYLE_FONTVARIANT = 70561_u32
  DISPID_IHTMLSTYLE_FONTWEIGHT = 70563_u32
  DISPID_IHTMLSTYLE_FONTSIZE = 70555_u32
  DISPID_IHTMLSTYLE_FONT = 70577_u32
  DISPID_IHTMLSTYLE_COLOR = 70538_u32
  DISPID_IHTMLSTYLE_BACKGROUND = 70568_u32
  DISPID_IHTMLSTYLE_BACKGROUNDCOLOR = -501_i32
  DISPID_IHTMLSTYLE_BACKGROUNDIMAGE = 70537_u32
  DISPID_IHTMLSTYLE_BACKGROUNDREPEAT = 70580_u32
  DISPID_IHTMLSTYLE_BACKGROUNDATTACHMENT = 70581_u32
  DISPID_IHTMLSTYLE_BACKGROUNDPOSITION = 70582_u32
  DISPID_IHTMLSTYLE_BACKGROUNDPOSITIONX = 70569_u32
  DISPID_IHTMLSTYLE_BACKGROUNDPOSITIONY = 70570_u32
  DISPID_IHTMLSTYLE_WORDSPACING = 70583_u32
  DISPID_IHTMLSTYLE_LETTERSPACING = 70544_u32
  DISPID_IHTMLSTYLE_TEXTDECORATION = 70571_u32
  DISPID_IHTMLSTYLE_TEXTDECORATIONNONE = 70559_u32
  DISPID_IHTMLSTYLE_TEXTDECORATIONUNDERLINE = 70557_u32
  DISPID_IHTMLSTYLE_TEXTDECORATIONOVERLINE = 70605_u32
  DISPID_IHTMLSTYLE_TEXTDECORATIONLINETHROUGH = 70556_u32
  DISPID_IHTMLSTYLE_TEXTDECORATIONBLINK = 70558_u32
  DISPID_IHTMLSTYLE_VERTICALALIGN = 70584_u32
  DISPID_IHTMLSTYLE_TEXTTRANSFORM = 70540_u32
  DISPID_IHTMLSTYLE_TEXTALIGN = 65608_u32
  DISPID_IHTMLSTYLE_TEXTINDENT = 70543_u32
  DISPID_IHTMLSTYLE_LINEHEIGHT = 70542_u32
  DISPID_IHTMLSTYLE_MARGINTOP = 70573_u32
  DISPID_IHTMLSTYLE_MARGINRIGHT = 70574_u32
  DISPID_IHTMLSTYLE_MARGINBOTTOM = 70575_u32
  DISPID_IHTMLSTYLE_MARGINLEFT = 70576_u32
  DISPID_IHTMLSTYLE_MARGIN = 70572_u32
  DISPID_IHTMLSTYLE_PADDINGTOP = 70548_u32
  DISPID_IHTMLSTYLE_PADDINGRIGHT = 70549_u32
  DISPID_IHTMLSTYLE_PADDINGBOTTOM = 70550_u32
  DISPID_IHTMLSTYLE_PADDINGLEFT = 70551_u32
  DISPID_IHTMLSTYLE_PADDING = 70547_u32
  DISPID_IHTMLSTYLE_BORDER = 70585_u32
  DISPID_IHTMLSTYLE_BORDERTOP = 70586_u32
  DISPID_IHTMLSTYLE_BORDERRIGHT = 70587_u32
  DISPID_IHTMLSTYLE_BORDERBOTTOM = 70588_u32
  DISPID_IHTMLSTYLE_BORDERLEFT = 70589_u32
  DISPID_IHTMLSTYLE_BORDERCOLOR = 70590_u32
  DISPID_IHTMLSTYLE_BORDERTOPCOLOR = 70591_u32
  DISPID_IHTMLSTYLE_BORDERRIGHTCOLOR = 70592_u32
  DISPID_IHTMLSTYLE_BORDERBOTTOMCOLOR = 70593_u32
  DISPID_IHTMLSTYLE_BORDERLEFTCOLOR = 70594_u32
  DISPID_IHTMLSTYLE_BORDERWIDTH = 70595_u32
  DISPID_IHTMLSTYLE_BORDERTOPWIDTH = 70596_u32
  DISPID_IHTMLSTYLE_BORDERRIGHTWIDTH = 70597_u32
  DISPID_IHTMLSTYLE_BORDERBOTTOMWIDTH = 70598_u32
  DISPID_IHTMLSTYLE_BORDERLEFTWIDTH = 70599_u32
  DISPID_IHTMLSTYLE_BORDERSTYLE = 70600_u32
  DISPID_IHTMLSTYLE_BORDERTOPSTYLE = 70601_u32
  DISPID_IHTMLSTYLE_BORDERRIGHTSTYLE = 70602_u32
  DISPID_IHTMLSTYLE_BORDERBOTTOMSTYLE = 70603_u32
  DISPID_IHTMLSTYLE_BORDERLEFTSTYLE = 70604_u32
  DISPID_IHTMLSTYLE_WIDTH = 65541_u32
  DISPID_IHTMLSTYLE_HEIGHT = 65542_u32
  DISPID_IHTMLSTYLE_STYLEFLOAT = 70606_u32
  DISPID_IHTMLSTYLE_CLEAR = 70552_u32
  DISPID_IHTMLSTYLE_DISPLAY = 70607_u32
  DISPID_IHTMLSTYLE_VISIBILITY = 70616_u32
  DISPID_IHTMLSTYLE_LISTSTYLETYPE = 70608_u32
  DISPID_IHTMLSTYLE_LISTSTYLEPOSITION = 70609_u32
  DISPID_IHTMLSTYLE_LISTSTYLEIMAGE = 70610_u32
  DISPID_IHTMLSTYLE_LISTSTYLE = 70611_u32
  DISPID_IHTMLSTYLE_WHITESPACE = 70612_u32
  DISPID_IHTMLSTYLE_TOP = 65540_u32
  DISPID_IHTMLSTYLE_LEFT = 65539_u32
  DISPID_IHTMLSTYLE_POSITION = 70626_u32
  DISPID_IHTMLSTYLE_ZINDEX = 70627_u32
  DISPID_IHTMLSTYLE_OVERFLOW = 70546_u32
  DISPID_IHTMLSTYLE_PAGEBREAKBEFORE = 70613_u32
  DISPID_IHTMLSTYLE_PAGEBREAKAFTER = 70614_u32
  DISPID_IHTMLSTYLE_CSSTEXT = 70635_u32
  DISPID_IHTMLSTYLE_PIXELTOP = 69536_u32
  DISPID_IHTMLSTYLE_PIXELLEFT = 69537_u32
  DISPID_IHTMLSTYLE_PIXELWIDTH = 69538_u32
  DISPID_IHTMLSTYLE_PIXELHEIGHT = 69539_u32
  DISPID_IHTMLSTYLE_POSTOP = 69540_u32
  DISPID_IHTMLSTYLE_POSLEFT = 69541_u32
  DISPID_IHTMLSTYLE_POSWIDTH = 69542_u32
  DISPID_IHTMLSTYLE_POSHEIGHT = 69543_u32
  DISPID_IHTMLSTYLE_CURSOR = 70638_u32
  DISPID_IHTMLSTYLE_CLIP = 70628_u32
  DISPID_IHTMLSTYLE_FILTER = 70618_u32
  DISPID_IHTMLSTYLE_SETATTRIBUTE = 66037_u32
  DISPID_IHTMLSTYLE_GETATTRIBUTE = 66038_u32
  DISPID_IHTMLSTYLE_REMOVEATTRIBUTE = 66039_u32
  DISPID_IHTMLSTYLE_TOSTRING = 69544_u32
  DISPID_IHTMLSTYLE2_TABLELAYOUT = 70634_u32
  DISPID_IHTMLSTYLE2_BORDERCOLLAPSE = 70620_u32
  DISPID_IHTMLSTYLE2_DIRECTION = 70655_u32
  DISPID_IHTMLSTYLE2_BEHAVIOR = 70651_u32
  DISPID_IHTMLSTYLE2_SETEXPRESSION = 66040_u32
  DISPID_IHTMLSTYLE2_GETEXPRESSION = 66041_u32
  DISPID_IHTMLSTYLE2_REMOVEEXPRESSION = 66042_u32
  DISPID_IHTMLSTYLE2_POSITION = 70626_u32
  DISPID_IHTMLSTYLE2_UNICODEBIDI = 70654_u32
  DISPID_IHTMLSTYLE2_BOTTOM = 65614_u32
  DISPID_IHTMLSTYLE2_RIGHT = 65613_u32
  DISPID_IHTMLSTYLE2_PIXELBOTTOM = 69545_u32
  DISPID_IHTMLSTYLE2_PIXELRIGHT = 69546_u32
  DISPID_IHTMLSTYLE2_POSBOTTOM = 69547_u32
  DISPID_IHTMLSTYLE2_POSRIGHT = 69548_u32
  DISPID_IHTMLSTYLE2_IMEMODE = 70656_u32
  DISPID_IHTMLSTYLE2_RUBYALIGN = 70657_u32
  DISPID_IHTMLSTYLE2_RUBYPOSITION = 70658_u32
  DISPID_IHTMLSTYLE2_RUBYOVERHANG = 70659_u32
  DISPID_IHTMLSTYLE2_LAYOUTGRIDCHAR = 70663_u32
  DISPID_IHTMLSTYLE2_LAYOUTGRIDLINE = 70664_u32
  DISPID_IHTMLSTYLE2_LAYOUTGRIDMODE = 70665_u32
  DISPID_IHTMLSTYLE2_LAYOUTGRIDTYPE = 70666_u32
  DISPID_IHTMLSTYLE2_LAYOUTGRID = 70667_u32
  DISPID_IHTMLSTYLE2_WORDBREAK = 70670_u32
  DISPID_IHTMLSTYLE2_LINEBREAK = 70669_u32
  DISPID_IHTMLSTYLE2_TEXTJUSTIFY = 70671_u32
  DISPID_IHTMLSTYLE2_TEXTJUSTIFYTRIM = 70672_u32
  DISPID_IHTMLSTYLE2_TEXTKASHIDA = 70673_u32
  DISPID_IHTMLSTYLE2_TEXTAUTOSPACE = 70668_u32
  DISPID_IHTMLSTYLE2_OVERFLOWX = 70675_u32
  DISPID_IHTMLSTYLE2_OVERFLOWY = 70676_u32
  DISPID_IHTMLSTYLE2_ACCELERATOR = 70683_u32
  DISPID_IHTMLSTYLE3_LAYOUTFLOW = 70691_u32
  DISPID_IHTMLSTYLE3_ZOOM = 70689_u32
  DISPID_IHTMLSTYLE3_WORDWRAP = 70694_u32
  DISPID_IHTMLSTYLE3_TEXTUNDERLINEPOSITION = 70695_u32
  DISPID_IHTMLSTYLE3_SCROLLBARBASECOLOR = 70716_u32
  DISPID_IHTMLSTYLE3_SCROLLBARFACECOLOR = 70717_u32
  DISPID_IHTMLSTYLE3_SCROLLBAR3DLIGHTCOLOR = 70718_u32
  DISPID_IHTMLSTYLE3_SCROLLBARSHADOWCOLOR = 70719_u32
  DISPID_IHTMLSTYLE3_SCROLLBARHIGHLIGHTCOLOR = 70720_u32
  DISPID_IHTMLSTYLE3_SCROLLBARDARKSHADOWCOLOR = 70721_u32
  DISPID_IHTMLSTYLE3_SCROLLBARARROWCOLOR = 70722_u32
  DISPID_IHTMLSTYLE3_SCROLLBARTRACKCOLOR = 70732_u32
  DISPID_IHTMLSTYLE3_WRITINGMODE = 70728_u32
  DISPID_IHTMLSTYLE3_TEXTALIGNLAST = 70739_u32
  DISPID_IHTMLSTYLE3_TEXTKASHIDASPACE = 70740_u32
  DISPID_IHTMLSTYLE4_TEXTOVERFLOW = 70745_u32
  DISPID_IHTMLSTYLE4_MINHEIGHT = 70747_u32
  DISPID_IHTMLSTYLE5_MSINTERPOLATIONMODE = 70749_u32
  DISPID_IHTMLSTYLE5_MAXHEIGHT = 70750_u32
  DISPID_IHTMLSTYLE5_MINWIDTH = 70751_u32
  DISPID_IHTMLSTYLE5_MAXWIDTH = 70752_u32
  DISPID_IHTMLSTYLE6_CONTENT = 70754_u32
  DISPID_IHTMLSTYLE6_CAPTIONSIDE = 70755_u32
  DISPID_IHTMLSTYLE6_COUNTERINCREMENT = 70756_u32
  DISPID_IHTMLSTYLE6_COUNTERRESET = 70757_u32
  DISPID_IHTMLSTYLE6_OUTLINE = 70758_u32
  DISPID_IHTMLSTYLE6_OUTLINEWIDTH = 70759_u32
  DISPID_IHTMLSTYLE6_OUTLINESTYLE = 70760_u32
  DISPID_IHTMLSTYLE6_OUTLINECOLOR = 70761_u32
  DISPID_IHTMLSTYLE6_BOXSIZING = 70762_u32
  DISPID_IHTMLSTYLE6_BORDERSPACING = 70763_u32
  DISPID_IHTMLSTYLE6_ORPHANS = 70764_u32
  DISPID_IHTMLSTYLE6_WIDOWS = 70765_u32
  DISPID_IHTMLSTYLE6_PAGEBREAKINSIDE = 70766_u32
  DISPID_IHTMLSTYLE6_EMPTYCELLS = 70786_u32
  DISPID_IHTMLSTYLE6_MSBLOCKPROGRESSION = 70787_u32
  DISPID_IHTMLSTYLE6_QUOTES = 70788_u32
  DISPID_IHTMLRULESTYLE_FONTFAMILY = 70554_u32
  DISPID_IHTMLRULESTYLE_FONTSTYLE = 70560_u32
  DISPID_IHTMLRULESTYLE_FONTVARIANT = 70561_u32
  DISPID_IHTMLRULESTYLE_FONTWEIGHT = 70563_u32
  DISPID_IHTMLRULESTYLE_FONTSIZE = 70555_u32
  DISPID_IHTMLRULESTYLE_FONT = 70577_u32
  DISPID_IHTMLRULESTYLE_COLOR = 70538_u32
  DISPID_IHTMLRULESTYLE_BACKGROUND = 70568_u32
  DISPID_IHTMLRULESTYLE_BACKGROUNDCOLOR = -501_i32
  DISPID_IHTMLRULESTYLE_BACKGROUNDIMAGE = 70537_u32
  DISPID_IHTMLRULESTYLE_BACKGROUNDREPEAT = 70580_u32
  DISPID_IHTMLRULESTYLE_BACKGROUNDATTACHMENT = 70581_u32
  DISPID_IHTMLRULESTYLE_BACKGROUNDPOSITION = 70582_u32
  DISPID_IHTMLRULESTYLE_BACKGROUNDPOSITIONX = 70569_u32
  DISPID_IHTMLRULESTYLE_BACKGROUNDPOSITIONY = 70570_u32
  DISPID_IHTMLRULESTYLE_WORDSPACING = 70583_u32
  DISPID_IHTMLRULESTYLE_LETTERSPACING = 70544_u32
  DISPID_IHTMLRULESTYLE_TEXTDECORATION = 70571_u32
  DISPID_IHTMLRULESTYLE_TEXTDECORATIONNONE = 70559_u32
  DISPID_IHTMLRULESTYLE_TEXTDECORATIONUNDERLINE = 70557_u32
  DISPID_IHTMLRULESTYLE_TEXTDECORATIONOVERLINE = 70605_u32
  DISPID_IHTMLRULESTYLE_TEXTDECORATIONLINETHROUGH = 70556_u32
  DISPID_IHTMLRULESTYLE_TEXTDECORATIONBLINK = 70558_u32
  DISPID_IHTMLRULESTYLE_VERTICALALIGN = 70584_u32
  DISPID_IHTMLRULESTYLE_TEXTTRANSFORM = 70540_u32
  DISPID_IHTMLRULESTYLE_TEXTALIGN = 65608_u32
  DISPID_IHTMLRULESTYLE_TEXTINDENT = 70543_u32
  DISPID_IHTMLRULESTYLE_LINEHEIGHT = 70542_u32
  DISPID_IHTMLRULESTYLE_MARGINTOP = 70573_u32
  DISPID_IHTMLRULESTYLE_MARGINRIGHT = 70574_u32
  DISPID_IHTMLRULESTYLE_MARGINBOTTOM = 70575_u32
  DISPID_IHTMLRULESTYLE_MARGINLEFT = 70576_u32
  DISPID_IHTMLRULESTYLE_MARGIN = 70572_u32
  DISPID_IHTMLRULESTYLE_PADDINGTOP = 70548_u32
  DISPID_IHTMLRULESTYLE_PADDINGRIGHT = 70549_u32
  DISPID_IHTMLRULESTYLE_PADDINGBOTTOM = 70550_u32
  DISPID_IHTMLRULESTYLE_PADDINGLEFT = 70551_u32
  DISPID_IHTMLRULESTYLE_PADDING = 70547_u32
  DISPID_IHTMLRULESTYLE_BORDER = 70585_u32
  DISPID_IHTMLRULESTYLE_BORDERTOP = 70586_u32
  DISPID_IHTMLRULESTYLE_BORDERRIGHT = 70587_u32
  DISPID_IHTMLRULESTYLE_BORDERBOTTOM = 70588_u32
  DISPID_IHTMLRULESTYLE_BORDERLEFT = 70589_u32
  DISPID_IHTMLRULESTYLE_BORDERCOLOR = 70590_u32
  DISPID_IHTMLRULESTYLE_BORDERTOPCOLOR = 70591_u32
  DISPID_IHTMLRULESTYLE_BORDERRIGHTCOLOR = 70592_u32
  DISPID_IHTMLRULESTYLE_BORDERBOTTOMCOLOR = 70593_u32
  DISPID_IHTMLRULESTYLE_BORDERLEFTCOLOR = 70594_u32
  DISPID_IHTMLRULESTYLE_BORDERWIDTH = 70595_u32
  DISPID_IHTMLRULESTYLE_BORDERTOPWIDTH = 70596_u32
  DISPID_IHTMLRULESTYLE_BORDERRIGHTWIDTH = 70597_u32
  DISPID_IHTMLRULESTYLE_BORDERBOTTOMWIDTH = 70598_u32
  DISPID_IHTMLRULESTYLE_BORDERLEFTWIDTH = 70599_u32
  DISPID_IHTMLRULESTYLE_BORDERSTYLE = 70600_u32
  DISPID_IHTMLRULESTYLE_BORDERTOPSTYLE = 70601_u32
  DISPID_IHTMLRULESTYLE_BORDERRIGHTSTYLE = 70602_u32
  DISPID_IHTMLRULESTYLE_BORDERBOTTOMSTYLE = 70603_u32
  DISPID_IHTMLRULESTYLE_BORDERLEFTSTYLE = 70604_u32
  DISPID_IHTMLRULESTYLE_WIDTH = 65541_u32
  DISPID_IHTMLRULESTYLE_HEIGHT = 65542_u32
  DISPID_IHTMLRULESTYLE_STYLEFLOAT = 70606_u32
  DISPID_IHTMLRULESTYLE_CLEAR = 70552_u32
  DISPID_IHTMLRULESTYLE_DISPLAY = 70607_u32
  DISPID_IHTMLRULESTYLE_VISIBILITY = 70616_u32
  DISPID_IHTMLRULESTYLE_LISTSTYLETYPE = 70608_u32
  DISPID_IHTMLRULESTYLE_LISTSTYLEPOSITION = 70609_u32
  DISPID_IHTMLRULESTYLE_LISTSTYLEIMAGE = 70610_u32
  DISPID_IHTMLRULESTYLE_LISTSTYLE = 70611_u32
  DISPID_IHTMLRULESTYLE_WHITESPACE = 70612_u32
  DISPID_IHTMLRULESTYLE_TOP = 65540_u32
  DISPID_IHTMLRULESTYLE_LEFT = 65539_u32
  DISPID_IHTMLRULESTYLE_POSITION = 70626_u32
  DISPID_IHTMLRULESTYLE_ZINDEX = 70627_u32
  DISPID_IHTMLRULESTYLE_OVERFLOW = 70546_u32
  DISPID_IHTMLRULESTYLE_PAGEBREAKBEFORE = 70613_u32
  DISPID_IHTMLRULESTYLE_PAGEBREAKAFTER = 70614_u32
  DISPID_IHTMLRULESTYLE_CSSTEXT = 70635_u32
  DISPID_IHTMLRULESTYLE_CURSOR = 70638_u32
  DISPID_IHTMLRULESTYLE_CLIP = 70628_u32
  DISPID_IHTMLRULESTYLE_FILTER = 70618_u32
  DISPID_IHTMLRULESTYLE_SETATTRIBUTE = 66037_u32
  DISPID_IHTMLRULESTYLE_GETATTRIBUTE = 66038_u32
  DISPID_IHTMLRULESTYLE_REMOVEATTRIBUTE = 66039_u32
  DISPID_IHTMLRULESTYLE2_TABLELAYOUT = 70634_u32
  DISPID_IHTMLRULESTYLE2_BORDERCOLLAPSE = 70620_u32
  DISPID_IHTMLRULESTYLE2_DIRECTION = 70655_u32
  DISPID_IHTMLRULESTYLE2_BEHAVIOR = 70651_u32
  DISPID_IHTMLRULESTYLE2_POSITION = 70626_u32
  DISPID_IHTMLRULESTYLE2_UNICODEBIDI = 70654_u32
  DISPID_IHTMLRULESTYLE2_BOTTOM = 65614_u32
  DISPID_IHTMLRULESTYLE2_RIGHT = 65613_u32
  DISPID_IHTMLRULESTYLE2_PIXELBOTTOM = 69545_u32
  DISPID_IHTMLRULESTYLE2_PIXELRIGHT = 69546_u32
  DISPID_IHTMLRULESTYLE2_POSBOTTOM = 69547_u32
  DISPID_IHTMLRULESTYLE2_POSRIGHT = 69548_u32
  DISPID_IHTMLRULESTYLE2_IMEMODE = 70656_u32
  DISPID_IHTMLRULESTYLE2_RUBYALIGN = 70657_u32
  DISPID_IHTMLRULESTYLE2_RUBYPOSITION = 70658_u32
  DISPID_IHTMLRULESTYLE2_RUBYOVERHANG = 70659_u32
  DISPID_IHTMLRULESTYLE2_LAYOUTGRIDCHAR = 70663_u32
  DISPID_IHTMLRULESTYLE2_LAYOUTGRIDLINE = 70664_u32
  DISPID_IHTMLRULESTYLE2_LAYOUTGRIDMODE = 70665_u32
  DISPID_IHTMLRULESTYLE2_LAYOUTGRIDTYPE = 70666_u32
  DISPID_IHTMLRULESTYLE2_LAYOUTGRID = 70667_u32
  DISPID_IHTMLRULESTYLE2_TEXTAUTOSPACE = 70668_u32
  DISPID_IHTMLRULESTYLE2_WORDBREAK = 70670_u32
  DISPID_IHTMLRULESTYLE2_LINEBREAK = 70669_u32
  DISPID_IHTMLRULESTYLE2_TEXTJUSTIFY = 70671_u32
  DISPID_IHTMLRULESTYLE2_TEXTJUSTIFYTRIM = 70672_u32
  DISPID_IHTMLRULESTYLE2_TEXTKASHIDA = 70673_u32
  DISPID_IHTMLRULESTYLE2_OVERFLOWX = 70675_u32
  DISPID_IHTMLRULESTYLE2_OVERFLOWY = 70676_u32
  DISPID_IHTMLRULESTYLE2_ACCELERATOR = 70683_u32
  DISPID_IHTMLRULESTYLE3_LAYOUTFLOW = 70691_u32
  DISPID_IHTMLRULESTYLE3_ZOOM = 70689_u32
  DISPID_IHTMLRULESTYLE3_WORDWRAP = 70694_u32
  DISPID_IHTMLRULESTYLE3_TEXTUNDERLINEPOSITION = 70695_u32
  DISPID_IHTMLRULESTYLE3_SCROLLBARBASECOLOR = 70716_u32
  DISPID_IHTMLRULESTYLE3_SCROLLBARFACECOLOR = 70717_u32
  DISPID_IHTMLRULESTYLE3_SCROLLBAR3DLIGHTCOLOR = 70718_u32
  DISPID_IHTMLRULESTYLE3_SCROLLBARSHADOWCOLOR = 70719_u32
  DISPID_IHTMLRULESTYLE3_SCROLLBARHIGHLIGHTCOLOR = 70720_u32
  DISPID_IHTMLRULESTYLE3_SCROLLBARDARKSHADOWCOLOR = 70721_u32
  DISPID_IHTMLRULESTYLE3_SCROLLBARARROWCOLOR = 70722_u32
  DISPID_IHTMLRULESTYLE3_SCROLLBARTRACKCOLOR = 70732_u32
  DISPID_IHTMLRULESTYLE3_WRITINGMODE = 70728_u32
  DISPID_IHTMLRULESTYLE3_TEXTALIGNLAST = 70739_u32
  DISPID_IHTMLRULESTYLE3_TEXTKASHIDASPACE = 70740_u32
  DISPID_IHTMLRULESTYLE4_TEXTOVERFLOW = 70745_u32
  DISPID_IHTMLRULESTYLE4_MINHEIGHT = 70747_u32
  DISPID_IHTMLRULESTYLE5_MSINTERPOLATIONMODE = 70749_u32
  DISPID_IHTMLRULESTYLE5_MAXHEIGHT = 70750_u32
  DISPID_IHTMLRULESTYLE5_MINWIDTH = 70751_u32
  DISPID_IHTMLRULESTYLE5_MAXWIDTH = 70752_u32
  DISPID_IHTMLRULESTYLE6_CONTENT = 70754_u32
  DISPID_IHTMLRULESTYLE6_CAPTIONSIDE = 70755_u32
  DISPID_IHTMLRULESTYLE6_COUNTERINCREMENT = 70756_u32
  DISPID_IHTMLRULESTYLE6_COUNTERRESET = 70757_u32
  DISPID_IHTMLRULESTYLE6_OUTLINE = 70758_u32
  DISPID_IHTMLRULESTYLE6_OUTLINEWIDTH = 70759_u32
  DISPID_IHTMLRULESTYLE6_OUTLINESTYLE = 70760_u32
  DISPID_IHTMLRULESTYLE6_OUTLINECOLOR = 70761_u32
  DISPID_IHTMLRULESTYLE6_BOXSIZING = 70762_u32
  DISPID_IHTMLRULESTYLE6_BORDERSPACING = 70763_u32
  DISPID_IHTMLRULESTYLE6_ORPHANS = 70764_u32
  DISPID_IHTMLRULESTYLE6_WIDOWS = 70765_u32
  DISPID_IHTMLRULESTYLE6_PAGEBREAKINSIDE = 70766_u32
  DISPID_IHTMLRULESTYLE6_EMPTYCELLS = 70786_u32
  DISPID_IHTMLRULESTYLE6_MSBLOCKPROGRESSION = 70787_u32
  DISPID_IHTMLRULESTYLE6_QUOTES = 70788_u32
  DISPID_IHTMLCSSRULE_TYPE = 1101_u32
  DISPID_IHTMLCSSRULE_CSSTEXT = 1102_u32
  DISPID_IHTMLCSSRULE_PARENTRULE = 1103_u32
  DISPID_IHTMLCSSRULE_PARENTSTYLESHEET = 1104_u32
  DISPID_IHTMLCSSIMPORTRULE_HREF = 1001_u32
  DISPID_IHTMLCSSIMPORTRULE_MEDIA = 1002_u32
  DISPID_IHTMLCSSIMPORTRULE_STYLESHEET = 1003_u32
  DISPID_IHTMLCSSMEDIARULE_MEDIA = 1001_u32
  DISPID_IHTMLCSSMEDIARULE_CSSRULES = 1002_u32
  DISPID_IHTMLCSSMEDIARULE_INSERTRULE = 1003_u32
  DISPID_IHTMLCSSMEDIARULE_DELETERULE = 1004_u32
  DISPID_IHTMLCSSMEDIALIST_MEDIATEXT = 1001_u32
  DISPID_IHTMLCSSMEDIALIST_LENGTH = 1002_u32
  DISPID_IHTMLCSSMEDIALIST_ITEM = 1003_u32
  DISPID_IHTMLCSSMEDIALIST_APPENDMEDIUM = 1004_u32
  DISPID_IHTMLCSSMEDIALIST_DELETEMEDIUM = 1005_u32
  DISPID_IHTMLCSSNAMESPACERULE_NAMESPACEURI = 1001_u32
  DISPID_IHTMLCSSNAMESPACERULE_PREFIX = 1002_u32
  DISPID_IHTMLMSCSSKEYFRAMERULE_KEYTEXT = 1001_u32
  DISPID_IHTMLMSCSSKEYFRAMERULE_STYLE = 1002_u32
  DISPID_IHTMLMSCSSKEYFRAMESRULE_NAME = 1001_u32
  DISPID_IHTMLMSCSSKEYFRAMESRULE_CSSRULES = 1002_u32
  DISPID_IHTMLMSCSSKEYFRAMESRULE_APPENDRULE = 1003_u32
  DISPID_IHTMLMSCSSKEYFRAMESRULE_DELETERULE = 1004_u32
  DISPID_IHTMLMSCSSKEYFRAMESRULE_FINDRULE = 1005_u32
  DISPID_IHTMLRENDERSTYLE_TEXTLINETHROUGHSTYLE = 70702_u32
  DISPID_IHTMLRENDERSTYLE_TEXTUNDERLINESTYLE = 70703_u32
  DISPID_IHTMLRENDERSTYLE_TEXTEFFECT = 70704_u32
  DISPID_IHTMLRENDERSTYLE_TEXTCOLOR = 70726_u32
  DISPID_IHTMLRENDERSTYLE_TEXTBACKGROUNDCOLOR = 70705_u32
  DISPID_IHTMLRENDERSTYLE_TEXTDECORATIONCOLOR = 70725_u32
  DISPID_IHTMLRENDERSTYLE_RENDERINGPRIORITY = 70706_u32
  DISPID_IHTMLRENDERSTYLE_DEFAULTTEXTSELECTION = 70724_u32
  DISPID_IHTMLRENDERSTYLE_TEXTDECORATION = 70727_u32
  DISPID_IHTMLCURRENTSTYLE_POSITION = 70626_u32
  DISPID_IHTMLCURRENTSTYLE_STYLEFLOAT = 70606_u32
  DISPID_IHTMLCURRENTSTYLE_COLOR = 70538_u32
  DISPID_IHTMLCURRENTSTYLE_BACKGROUNDCOLOR = -501_i32
  DISPID_IHTMLCURRENTSTYLE_FONTFAMILY = 70554_u32
  DISPID_IHTMLCURRENTSTYLE_FONTSTYLE = 70560_u32
  DISPID_IHTMLCURRENTSTYLE_FONTVARIANT = 70561_u32
  DISPID_IHTMLCURRENTSTYLE_FONTWEIGHT = 70563_u32
  DISPID_IHTMLCURRENTSTYLE_FONTSIZE = 70555_u32
  DISPID_IHTMLCURRENTSTYLE_BACKGROUNDIMAGE = 70537_u32
  DISPID_IHTMLCURRENTSTYLE_BACKGROUNDPOSITIONX = 70569_u32
  DISPID_IHTMLCURRENTSTYLE_BACKGROUNDPOSITIONY = 70570_u32
  DISPID_IHTMLCURRENTSTYLE_BACKGROUNDREPEAT = 70580_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERLEFTCOLOR = 70594_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERTOPCOLOR = 70591_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERRIGHTCOLOR = 70592_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERBOTTOMCOLOR = 70593_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERTOPSTYLE = 70601_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERRIGHTSTYLE = 70602_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERBOTTOMSTYLE = 70603_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERLEFTSTYLE = 70604_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERTOPWIDTH = 70596_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERRIGHTWIDTH = 70597_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERBOTTOMWIDTH = 70598_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERLEFTWIDTH = 70599_u32
  DISPID_IHTMLCURRENTSTYLE_LEFT = 65539_u32
  DISPID_IHTMLCURRENTSTYLE_TOP = 65540_u32
  DISPID_IHTMLCURRENTSTYLE_WIDTH = 65541_u32
  DISPID_IHTMLCURRENTSTYLE_HEIGHT = 65542_u32
  DISPID_IHTMLCURRENTSTYLE_PADDINGLEFT = 70551_u32
  DISPID_IHTMLCURRENTSTYLE_PADDINGTOP = 70548_u32
  DISPID_IHTMLCURRENTSTYLE_PADDINGRIGHT = 70549_u32
  DISPID_IHTMLCURRENTSTYLE_PADDINGBOTTOM = 70550_u32
  DISPID_IHTMLCURRENTSTYLE_TEXTALIGN = 65608_u32
  DISPID_IHTMLCURRENTSTYLE_TEXTDECORATION = 70571_u32
  DISPID_IHTMLCURRENTSTYLE_DISPLAY = 70607_u32
  DISPID_IHTMLCURRENTSTYLE_VISIBILITY = 70616_u32
  DISPID_IHTMLCURRENTSTYLE_ZINDEX = 70627_u32
  DISPID_IHTMLCURRENTSTYLE_LETTERSPACING = 70544_u32
  DISPID_IHTMLCURRENTSTYLE_LINEHEIGHT = 70542_u32
  DISPID_IHTMLCURRENTSTYLE_TEXTINDENT = 70543_u32
  DISPID_IHTMLCURRENTSTYLE_VERTICALALIGN = 70584_u32
  DISPID_IHTMLCURRENTSTYLE_BACKGROUNDATTACHMENT = 70581_u32
  DISPID_IHTMLCURRENTSTYLE_MARGINTOP = 70573_u32
  DISPID_IHTMLCURRENTSTYLE_MARGINRIGHT = 70574_u32
  DISPID_IHTMLCURRENTSTYLE_MARGINBOTTOM = 70575_u32
  DISPID_IHTMLCURRENTSTYLE_MARGINLEFT = 70576_u32
  DISPID_IHTMLCURRENTSTYLE_CLEAR = 70552_u32
  DISPID_IHTMLCURRENTSTYLE_LISTSTYLETYPE = 70608_u32
  DISPID_IHTMLCURRENTSTYLE_LISTSTYLEPOSITION = 70609_u32
  DISPID_IHTMLCURRENTSTYLE_LISTSTYLEIMAGE = 70610_u32
  DISPID_IHTMLCURRENTSTYLE_CLIPTOP = 70629_u32
  DISPID_IHTMLCURRENTSTYLE_CLIPRIGHT = 70630_u32
  DISPID_IHTMLCURRENTSTYLE_CLIPBOTTOM = 70631_u32
  DISPID_IHTMLCURRENTSTYLE_CLIPLEFT = 70632_u32
  DISPID_IHTMLCURRENTSTYLE_OVERFLOW = 70546_u32
  DISPID_IHTMLCURRENTSTYLE_PAGEBREAKBEFORE = 70613_u32
  DISPID_IHTMLCURRENTSTYLE_PAGEBREAKAFTER = 70614_u32
  DISPID_IHTMLCURRENTSTYLE_CURSOR = 70638_u32
  DISPID_IHTMLCURRENTSTYLE_TABLELAYOUT = 70634_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERCOLLAPSE = 70620_u32
  DISPID_IHTMLCURRENTSTYLE_DIRECTION = 70655_u32
  DISPID_IHTMLCURRENTSTYLE_BEHAVIOR = 70651_u32
  DISPID_IHTMLCURRENTSTYLE_GETATTRIBUTE = 66038_u32
  DISPID_IHTMLCURRENTSTYLE_UNICODEBIDI = 70654_u32
  DISPID_IHTMLCURRENTSTYLE_RIGHT = 65613_u32
  DISPID_IHTMLCURRENTSTYLE_BOTTOM = 65614_u32
  DISPID_IHTMLCURRENTSTYLE_IMEMODE = 70656_u32
  DISPID_IHTMLCURRENTSTYLE_RUBYALIGN = 70657_u32
  DISPID_IHTMLCURRENTSTYLE_RUBYPOSITION = 70658_u32
  DISPID_IHTMLCURRENTSTYLE_RUBYOVERHANG = 70659_u32
  DISPID_IHTMLCURRENTSTYLE_TEXTAUTOSPACE = 70668_u32
  DISPID_IHTMLCURRENTSTYLE_LINEBREAK = 70669_u32
  DISPID_IHTMLCURRENTSTYLE_WORDBREAK = 70670_u32
  DISPID_IHTMLCURRENTSTYLE_TEXTJUSTIFY = 70671_u32
  DISPID_IHTMLCURRENTSTYLE_TEXTJUSTIFYTRIM = 70672_u32
  DISPID_IHTMLCURRENTSTYLE_TEXTKASHIDA = 70673_u32
  DISPID_IHTMLCURRENTSTYLE_BLOCKDIRECTION = 70653_u32
  DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDCHAR = 70663_u32
  DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDLINE = 70664_u32
  DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDMODE = 70665_u32
  DISPID_IHTMLCURRENTSTYLE_LAYOUTGRIDTYPE = 70666_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERSTYLE = 70600_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERCOLOR = 70590_u32
  DISPID_IHTMLCURRENTSTYLE_BORDERWIDTH = 70595_u32
  DISPID_IHTMLCURRENTSTYLE_PADDING = 70547_u32
  DISPID_IHTMLCURRENTSTYLE_MARGIN = 70572_u32
  DISPID_IHTMLCURRENTSTYLE_ACCELERATOR = 70683_u32
  DISPID_IHTMLCURRENTSTYLE_OVERFLOWX = 70675_u32
  DISPID_IHTMLCURRENTSTYLE_OVERFLOWY = 70676_u32
  DISPID_IHTMLCURRENTSTYLE_TEXTTRANSFORM = 70540_u32
  DISPID_IHTMLCURRENTSTYLE2_LAYOUTFLOW = 70691_u32
  DISPID_IHTMLCURRENTSTYLE2_WORDWRAP = 70694_u32
  DISPID_IHTMLCURRENTSTYLE2_TEXTUNDERLINEPOSITION = 70695_u32
  DISPID_IHTMLCURRENTSTYLE2_HASLAYOUT = 70696_u32
  DISPID_IHTMLCURRENTSTYLE2_SCROLLBARBASECOLOR = 70716_u32
  DISPID_IHTMLCURRENTSTYLE2_SCROLLBARFACECOLOR = 70717_u32
  DISPID_IHTMLCURRENTSTYLE2_SCROLLBAR3DLIGHTCOLOR = 70718_u32
  DISPID_IHTMLCURRENTSTYLE2_SCROLLBARSHADOWCOLOR = 70719_u32
  DISPID_IHTMLCURRENTSTYLE2_SCROLLBARHIGHLIGHTCOLOR = 70720_u32
  DISPID_IHTMLCURRENTSTYLE2_SCROLLBARDARKSHADOWCOLOR = 70721_u32
  DISPID_IHTMLCURRENTSTYLE2_SCROLLBARARROWCOLOR = 70722_u32
  DISPID_IHTMLCURRENTSTYLE2_SCROLLBARTRACKCOLOR = 70732_u32
  DISPID_IHTMLCURRENTSTYLE2_WRITINGMODE = 70728_u32
  DISPID_IHTMLCURRENTSTYLE2_ZOOM = 70689_u32
  DISPID_IHTMLCURRENTSTYLE2_FILTER = 70618_u32
  DISPID_IHTMLCURRENTSTYLE2_TEXTALIGNLAST = 70739_u32
  DISPID_IHTMLCURRENTSTYLE2_TEXTKASHIDASPACE = 70740_u32
  DISPID_IHTMLCURRENTSTYLE2_ISBLOCK = 70744_u32
  DISPID_IHTMLCURRENTSTYLE3_TEXTOVERFLOW = 70745_u32
  DISPID_IHTMLCURRENTSTYLE3_MINHEIGHT = 70747_u32
  DISPID_IHTMLCURRENTSTYLE3_WORDSPACING = 70583_u32
  DISPID_IHTMLCURRENTSTYLE3_WHITESPACE = 70612_u32
  DISPID_IHTMLCURRENTSTYLE4_MSINTERPOLATIONMODE = 70749_u32
  DISPID_IHTMLCURRENTSTYLE4_MAXHEIGHT = 70750_u32
  DISPID_IHTMLCURRENTSTYLE4_MINWIDTH = 70751_u32
  DISPID_IHTMLCURRENTSTYLE4_MAXWIDTH = 70752_u32
  DISPID_IHTMLCURRENTSTYLE5_CAPTIONSIDE = 70755_u32
  DISPID_IHTMLCURRENTSTYLE5_OUTLINE = 70758_u32
  DISPID_IHTMLCURRENTSTYLE5_OUTLINEWIDTH = 70759_u32
  DISPID_IHTMLCURRENTSTYLE5_OUTLINESTYLE = 70760_u32
  DISPID_IHTMLCURRENTSTYLE5_OUTLINECOLOR = 70761_u32
  DISPID_IHTMLCURRENTSTYLE5_BOXSIZING = 70762_u32
  DISPID_IHTMLCURRENTSTYLE5_BORDERSPACING = 70763_u32
  DISPID_IHTMLCURRENTSTYLE5_ORPHANS = 70764_u32
  DISPID_IHTMLCURRENTSTYLE5_WIDOWS = 70765_u32
  DISPID_IHTMLCURRENTSTYLE5_PAGEBREAKINSIDE = 70766_u32
  DISPID_IHTMLCURRENTSTYLE5_EMPTYCELLS = 70786_u32
  DISPID_IHTMLCURRENTSTYLE5_MSBLOCKPROGRESSION = 70787_u32
  DISPID_IHTMLCURRENTSTYLE5_QUOTES = 70788_u32
  DISPID_IHTMLRECT_LEFT = 1001_u32
  DISPID_IHTMLRECT_TOP = 1002_u32
  DISPID_IHTMLRECT_RIGHT = 1003_u32
  DISPID_IHTMLRECT_BOTTOM = 1004_u32
  DISPID_IHTMLRECT2_WIDTH = 1005_u32
  DISPID_IHTMLRECT2_HEIGHT = 1006_u32
  DISPID_IHTMLRECTCOLLECTION_LENGTH = 1500_u32
  DISPID_IHTMLRECTCOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLRECTCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLDOMNODE_NODETYPE = 66582_u32
  DISPID_IHTMLDOMNODE_PARENTNODE = 66583_u32
  DISPID_IHTMLDOMNODE_HASCHILDNODES = 66584_u32
  DISPID_IHTMLDOMNODE_CHILDNODES = 66585_u32
  DISPID_IHTMLDOMNODE_ATTRIBUTES = 66586_u32
  DISPID_IHTMLDOMNODE_INSERTBEFORE = 66587_u32
  DISPID_IHTMLDOMNODE_REMOVECHILD = 66588_u32
  DISPID_IHTMLDOMNODE_REPLACECHILD = 66589_u32
  DISPID_IHTMLDOMNODE_CLONENODE = 66597_u32
  DISPID_IHTMLDOMNODE_REMOVENODE = 66602_u32
  DISPID_IHTMLDOMNODE_SWAPNODE = 66604_u32
  DISPID_IHTMLDOMNODE_REPLACENODE = 66603_u32
  DISPID_IHTMLDOMNODE_APPENDCHILD = 66609_u32
  DISPID_IHTMLDOMNODE_NODENAME = 66610_u32
  DISPID_IHTMLDOMNODE_NODEVALUE = 66611_u32
  DISPID_IHTMLDOMNODE_FIRSTCHILD = 66612_u32
  DISPID_IHTMLDOMNODE_LASTCHILD = 66613_u32
  DISPID_IHTMLDOMNODE_PREVIOUSSIBLING = 66614_u32
  DISPID_IHTMLDOMNODE_NEXTSIBLING = 66615_u32
  DISPID_IHTMLDOMNODE2_OWNERDOCUMENT = 66649_u32
  DISPID_IHTMLDOMNODE3_PREFIX = 66656_u32
  DISPID_IHTMLDOMNODE3_LOCALNAME = 66654_u32
  DISPID_IHTMLDOMNODE3_NAMESPACEURI = 66655_u32
  DISPID_IHTMLDOMNODE3_TEXTCONTENT = 66663_u32
  DISPID_IHTMLDOMNODE3_ISEQUALNODE = 66657_u32
  DISPID_IHTMLDOMNODE3_LOOKUPNAMESPACEURI = 66658_u32
  DISPID_IHTMLDOMNODE3_LOOKUPPREFIX = 66659_u32
  DISPID_IHTMLDOMNODE3_ISDEFAULTNAMESPACE = 66660_u32
  DISPID_IHTMLDOMNODE3_IE9_APPENDCHILD = 66804_u32
  DISPID_IHTMLDOMNODE3_IE9_INSERTBEFORE = 66805_u32
  DISPID_IHTMLDOMNODE3_IE9_REMOVECHILD = 66806_u32
  DISPID_IHTMLDOMNODE3_IE9_REPLACECHILD = 66807_u32
  DISPID_IHTMLDOMNODE3_ISSAMENODE = 66661_u32
  DISPID_IHTMLDOMNODE3_COMPAREDOCUMENTPOSITION = 66662_u32
  DISPID_IHTMLDOMNODE3_ISSUPPORTED = 66813_u32
  DISPID_IHTMLDOMATTRIBUTE_NODENAME = 1000_u32
  DISPID_IHTMLDOMATTRIBUTE_NODEVALUE = 1002_u32
  DISPID_IHTMLDOMATTRIBUTE_SPECIFIED = 1001_u32
  DISPID_IHTMLDOMATTRIBUTE2_NAME = 1003_u32
  DISPID_IHTMLDOMATTRIBUTE2_VALUE = 1004_u32
  DISPID_IHTMLDOMATTRIBUTE2_EXPANDO = 1005_u32
  DISPID_IHTMLDOMATTRIBUTE2_NODETYPE = 1006_u32
  DISPID_IHTMLDOMATTRIBUTE2_PARENTNODE = 1007_u32
  DISPID_IHTMLDOMATTRIBUTE2_CHILDNODES = 1008_u32
  DISPID_IHTMLDOMATTRIBUTE2_FIRSTCHILD = 1009_u32
  DISPID_IHTMLDOMATTRIBUTE2_LASTCHILD = 1010_u32
  DISPID_IHTMLDOMATTRIBUTE2_PREVIOUSSIBLING = 1011_u32
  DISPID_IHTMLDOMATTRIBUTE2_NEXTSIBLING = 1012_u32
  DISPID_IHTMLDOMATTRIBUTE2_ATTRIBUTES = 1013_u32
  DISPID_IHTMLDOMATTRIBUTE2_OWNERDOCUMENT = 1014_u32
  DISPID_IHTMLDOMATTRIBUTE2_INSERTBEFORE = 1015_u32
  DISPID_IHTMLDOMATTRIBUTE2_REPLACECHILD = 1016_u32
  DISPID_IHTMLDOMATTRIBUTE2_REMOVECHILD = 1017_u32
  DISPID_IHTMLDOMATTRIBUTE2_APPENDCHILD = 1018_u32
  DISPID_IHTMLDOMATTRIBUTE2_HASCHILDNODES = 1019_u32
  DISPID_IHTMLDOMATTRIBUTE2_CLONENODE = 1020_u32
  DISPID_IHTMLDOMATTRIBUTE3_IE8_NODEVALUE = 1153_u32
  DISPID_IHTMLDOMATTRIBUTE3_IE8_VALUE = 1154_u32
  DISPID_IHTMLDOMATTRIBUTE3_IE8_SPECIFIED = 1150_u32
  DISPID_IHTMLDOMATTRIBUTE3_OWNERELEMENT = 1151_u32
  DISPID_IHTMLDOMATTRIBUTE4_IE9_NODEVALUE = 1159_u32
  DISPID_IHTMLDOMATTRIBUTE4_IE9_NODENAME = 1160_u32
  DISPID_IHTMLDOMATTRIBUTE4_IE9_NAME = 1161_u32
  DISPID_IHTMLDOMATTRIBUTE4_IE9_VALUE = 1162_u32
  DISPID_IHTMLDOMATTRIBUTE4_IE9_FIRSTCHILD = 1163_u32
  DISPID_IHTMLDOMATTRIBUTE4_IE9_LASTCHILD = 1164_u32
  DISPID_IHTMLDOMATTRIBUTE4_IE9_CHILDNODES = 1165_u32
  DISPID_IHTMLDOMATTRIBUTE4_HASATTRIBUTES = 1166_u32
  DISPID_IHTMLDOMATTRIBUTE4_IE9_HASCHILDNODES = 1167_u32
  DISPID_IHTMLDOMATTRIBUTE4_NORMALIZE = 1170_u32
  DISPID_IHTMLDOMATTRIBUTE4_IE9_SPECIFIED = 1171_u32
  DISPID_IHTMLDOMTEXTNODE_DATA = 1000_u32
  DISPID_IHTMLDOMTEXTNODE_TOSTRING = 1001_u32
  DISPID_IHTMLDOMTEXTNODE_LENGTH = 1002_u32
  DISPID_IHTMLDOMTEXTNODE_SPLITTEXT = 1003_u32
  DISPID_IHTMLDOMTEXTNODE2_SUBSTRINGDATA = 1004_u32
  DISPID_IHTMLDOMTEXTNODE2_APPENDDATA = 1005_u32
  DISPID_IHTMLDOMTEXTNODE2_INSERTDATA = 1006_u32
  DISPID_IHTMLDOMTEXTNODE2_DELETEDATA = 1007_u32
  DISPID_IHTMLDOMTEXTNODE2_REPLACEDATA = 1008_u32
  DISPID_IHTMLDOMTEXTNODE3_IE9_SUBSTRINGDATA = 1010_u32
  DISPID_IHTMLDOMTEXTNODE3_IE9_INSERTDATA = 1011_u32
  DISPID_IHTMLDOMTEXTNODE3_IE9_DELETEDATA = 1012_u32
  DISPID_IHTMLDOMTEXTNODE3_IE9_REPLACEDATA = 1013_u32
  DISPID_IHTMLDOMTEXTNODE3_IE9_SPLITTEXT = 1009_u32
  DISPID_IHTMLDOMTEXTNODE3_WHOLETEXT = 1014_u32
  DISPID_IHTMLDOMTEXTNODE3_REPLACEWHOLETEXT = 1015_u32
  DISPID_IHTMLDOMTEXTNODE3_HASATTRIBUTES = 1017_u32
  DISPID_IHTMLDOMTEXTNODE3_NORMALIZE = 1019_u32
  DISPID_IHTMLDOMIMPLEMENTATION_HASFEATURE = 1000_u32
  DISPID_IHTMLDOMIMPLEMENTATION2_CREATEDOCUMENTTYPE = 1001_u32
  DISPID_IHTMLDOMIMPLEMENTATION2_CREATEDOCUMENT = 1002_u32
  DISPID_IHTMLDOMIMPLEMENTATION2_CREATEHTMLDOCUMENT = 1003_u32
  DISPID_IHTMLDOMIMPLEMENTATION2_IE9_HASFEATURE = 1004_u32
  DISPID_IHTMLATTRIBUTECOLLECTION_LENGTH = 1500_u32
  DISPID_IHTMLATTRIBUTECOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLATTRIBUTECOLLECTION_ITEM = 0_u32
  DISPID_IHTMLATTRIBUTECOLLECTION2_GETNAMEDITEM = 1501_u32
  DISPID_IHTMLATTRIBUTECOLLECTION2_SETNAMEDITEM = 1502_u32
  DISPID_IHTMLATTRIBUTECOLLECTION2_REMOVENAMEDITEM = 1503_u32
  DISPID_IHTMLATTRIBUTECOLLECTION3_IE8_GETNAMEDITEM = 1150_u32
  DISPID_IHTMLATTRIBUTECOLLECTION3_IE8_SETNAMEDITEM = 1151_u32
  DISPID_IHTMLATTRIBUTECOLLECTION3_IE8_REMOVENAMEDITEM = 1152_u32
  DISPID_IHTMLATTRIBUTECOLLECTION3_IE8_ITEM = 1154_u32
  DISPID_IHTMLATTRIBUTECOLLECTION3_IE8_LENGTH = 1153_u32
  DISPID_IHTMLATTRIBUTECOLLECTION4_GETNAMEDITEMNS = 1155_u32
  DISPID_IHTMLATTRIBUTECOLLECTION4_SETNAMEDITEMNS = 1156_u32
  DISPID_IHTMLATTRIBUTECOLLECTION4_REMOVENAMEDITEMNS = 1157_u32
  DISPID_IHTMLATTRIBUTECOLLECTION4_IE9_GETNAMEDITEM = 1158_u32
  DISPID_IHTMLATTRIBUTECOLLECTION4_IE9_SETNAMEDITEM = 1159_u32
  DISPID_IHTMLATTRIBUTECOLLECTION4_IE9_REMOVENAMEDITEM = 1160_u32
  DISPID_IHTMLATTRIBUTECOLLECTION4_IE9_ITEM = 1161_u32
  DISPID_IHTMLATTRIBUTECOLLECTION4_IE9_LENGTH = 1162_u32
  DISPID_IHTMLDOMCHILDRENCOLLECTION_LENGTH = 1500_u32
  DISPID_IHTMLDOMCHILDRENCOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLDOMCHILDRENCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLDOMCHILDRENCOLLECTION2_IE9_ITEM = 1_u32
  DISPID_IHTMLELEMENT_SETATTRIBUTE = 66037_u32
  DISPID_IHTMLELEMENT_GETATTRIBUTE = 66038_u32
  DISPID_IHTMLELEMENT_REMOVEATTRIBUTE = 66039_u32
  DISPID_IHTMLELEMENT_CLASSNAME = 66537_u32
  DISPID_IHTMLELEMENT_ID = 66538_u32
  DISPID_IHTMLELEMENT_TAGNAME = 66540_u32
  DISPID_IHTMLELEMENT_PARENTELEMENT = 65544_u32
  DISPID_IHTMLELEMENT_STYLE = 65610_u32
  DISPID_IHTMLELEMENT_ONHELP = 71549_u32
  DISPID_IHTMLELEMENT_ONCLICK = 71544_u32
  DISPID_IHTMLELEMENT_ONDBLCLICK = 71545_u32
  DISPID_IHTMLELEMENT_ONKEYDOWN = 71541_u32
  DISPID_IHTMLELEMENT_ONKEYUP = 71542_u32
  DISPID_IHTMLELEMENT_ONKEYPRESS = 71543_u32
  DISPID_IHTMLELEMENT_ONMOUSEOUT = 71537_u32
  DISPID_IHTMLELEMENT_ONMOUSEOVER = 71536_u32
  DISPID_IHTMLELEMENT_ONMOUSEMOVE = 71540_u32
  DISPID_IHTMLELEMENT_ONMOUSEDOWN = 71538_u32
  DISPID_IHTMLELEMENT_ONMOUSEUP = 71539_u32
  DISPID_IHTMLELEMENT_DOCUMENT = 66554_u32
  DISPID_IHTMLELEMENT_TITLE = 65605_u32
  DISPID_IHTMLELEMENT_LANGUAGE = 70636_u32
  DISPID_IHTMLELEMENT_ONSELECTSTART = 71573_u32
  DISPID_IHTMLELEMENT_SCROLLINTOVIEW = 66555_u32
  DISPID_IHTMLELEMENT_CONTAINS = 66556_u32
  DISPID_IHTMLELEMENT_SOURCEINDEX = 66560_u32
  DISPID_IHTMLELEMENT_RECORDNUMBER = 66561_u32
  DISPID_IHTMLELEMENT_LANG = 70545_u32
  DISPID_IHTMLELEMENT_OFFSETLEFT = 66544_u32
  DISPID_IHTMLELEMENT_OFFSETTOP = 66545_u32
  DISPID_IHTMLELEMENT_OFFSETWIDTH = 66546_u32
  DISPID_IHTMLELEMENT_OFFSETHEIGHT = 66547_u32
  DISPID_IHTMLELEMENT_OFFSETPARENT = 66548_u32
  DISPID_IHTMLELEMENT_INNERHTML = 66562_u32
  DISPID_IHTMLELEMENT_INNERTEXT = 66563_u32
  DISPID_IHTMLELEMENT_OUTERHTML = 66564_u32
  DISPID_IHTMLELEMENT_OUTERTEXT = 66565_u32
  DISPID_IHTMLELEMENT_INSERTADJACENTHTML = 66566_u32
  DISPID_IHTMLELEMENT_INSERTADJACENTTEXT = 66567_u32
  DISPID_IHTMLELEMENT_PARENTTEXTEDIT = 66568_u32
  DISPID_IHTMLELEMENT_ISTEXTEDIT = 66570_u32
  DISPID_IHTMLELEMENT_CLICK = 66569_u32
  DISPID_IHTMLELEMENT_FILTERS = 66571_u32
  DISPID_IHTMLELEMENT_ONDRAGSTART = 71571_u32
  DISPID_IHTMLELEMENT_TOSTRING = 66572_u32
  DISPID_IHTMLELEMENT_ONBEFOREUPDATE = 71557_u32
  DISPID_IHTMLELEMENT_ONAFTERUPDATE = 71558_u32
  DISPID_IHTMLELEMENT_ONERRORUPDATE = 71574_u32
  DISPID_IHTMLELEMENT_ONROWEXIT = 71554_u32
  DISPID_IHTMLELEMENT_ONROWENTER = 71555_u32
  DISPID_IHTMLELEMENT_ONDATASETCHANGED = 71576_u32
  DISPID_IHTMLELEMENT_ONDATAAVAILABLE = 71577_u32
  DISPID_IHTMLELEMENT_ONDATASETCOMPLETE = 71578_u32
  DISPID_IHTMLELEMENT_ONFILTERCHANGE = 71579_u32
  DISPID_IHTMLELEMENT_CHILDREN = 66573_u32
  DISPID_IHTMLELEMENT_ALL = 66574_u32
  DISPID_IHTMLELEMENT2_SCOPENAME = 66575_u32
  DISPID_IHTMLELEMENT2_SETCAPTURE = 66576_u32
  DISPID_IHTMLELEMENT2_RELEASECAPTURE = 66577_u32
  DISPID_IHTMLELEMENT2_ONLOSECAPTURE = 71582_u32
  DISPID_IHTMLELEMENT2_COMPONENTFROMPOINT = 66578_u32
  DISPID_IHTMLELEMENT2_DOSCROLL = 66579_u32
  DISPID_IHTMLELEMENT2_ONSCROLL = 71567_u32
  DISPID_IHTMLELEMENT2_ONDRAG = 71585_u32
  DISPID_IHTMLELEMENT2_ONDRAGEND = 71586_u32
  DISPID_IHTMLELEMENT2_ONDRAGENTER = 71587_u32
  DISPID_IHTMLELEMENT2_ONDRAGOVER = 71588_u32
  DISPID_IHTMLELEMENT2_ONDRAGLEAVE = 71589_u32
  DISPID_IHTMLELEMENT2_ONDROP = 71590_u32
  DISPID_IHTMLELEMENT2_ONBEFORECUT = 71594_u32
  DISPID_IHTMLELEMENT2_ONCUT = 71591_u32
  DISPID_IHTMLELEMENT2_ONBEFORECOPY = 71595_u32
  DISPID_IHTMLELEMENT2_ONCOPY = 71592_u32
  DISPID_IHTMLELEMENT2_ONBEFOREPASTE = 71596_u32
  DISPID_IHTMLELEMENT2_ONPASTE = 71593_u32
  DISPID_IHTMLELEMENT2_CURRENTSTYLE = 66543_u32
  DISPID_IHTMLELEMENT2_ONPROPERTYCHANGE = 71583_u32
  DISPID_IHTMLELEMENT2_GETCLIENTRECTS = 66580_u32
  DISPID_IHTMLELEMENT2_GETBOUNDINGCLIENTRECT = 66581_u32
  DISPID_IHTMLELEMENT2_SETEXPRESSION = 66040_u32
  DISPID_IHTMLELEMENT2_GETEXPRESSION = 66041_u32
  DISPID_IHTMLELEMENT2_REMOVEEXPRESSION = 66042_u32
  DISPID_IHTMLELEMENT2_TABINDEX = 65551_u32
  DISPID_IHTMLELEMENT2_FOCUS = 67536_u32
  DISPID_IHTMLELEMENT2_ACCESSKEY = 67541_u32
  DISPID_IHTMLELEMENT2_ONBLUR = 71551_u32
  DISPID_IHTMLELEMENT2_ONFOCUS = 71550_u32
  DISPID_IHTMLELEMENT2_ONRESIZE = 71572_u32
  DISPID_IHTMLELEMENT2_BLUR = 67538_u32
  DISPID_IHTMLELEMENT2_ADDFILTER = 67553_u32
  DISPID_IHTMLELEMENT2_REMOVEFILTER = 67554_u32
  DISPID_IHTMLELEMENT2_CLIENTHEIGHT = 67555_u32
  DISPID_IHTMLELEMENT2_CLIENTWIDTH = 67556_u32
  DISPID_IHTMLELEMENT2_CLIENTTOP = 67557_u32
  DISPID_IHTMLELEMENT2_CLIENTLEFT = 67558_u32
  DISPID_IHTMLELEMENT2_ATTACHEVENT = 66043_u32
  DISPID_IHTMLELEMENT2_DETACHEVENT = 66044_u32
  DISPID_IHTMLELEMENT2_READYSTATE = 70652_u32
  DISPID_IHTMLELEMENT2_ONREADYSTATECHANGE = 71561_u32
  DISPID_IHTMLELEMENT2_ONROWSDELETE = 71598_u32
  DISPID_IHTMLELEMENT2_ONROWSINSERTED = 71599_u32
  DISPID_IHTMLELEMENT2_ONCELLCHANGE = 71600_u32
  DISPID_IHTMLELEMENT2_DIR = 70653_u32
  DISPID_IHTMLELEMENT2_CREATECONTROLRANGE = 66592_u32
  DISPID_IHTMLELEMENT2_SCROLLHEIGHT = 66593_u32
  DISPID_IHTMLELEMENT2_SCROLLWIDTH = 66594_u32
  DISPID_IHTMLELEMENT2_SCROLLTOP = 66595_u32
  DISPID_IHTMLELEMENT2_SCROLLLEFT = 66596_u32
  DISPID_IHTMLELEMENT2_CLEARATTRIBUTES = 66598_u32
  DISPID_IHTMLELEMENT2_MERGEATTRIBUTES = 66599_u32
  DISPID_IHTMLELEMENT2_ONCONTEXTMENU = 71601_u32
  DISPID_IHTMLELEMENT2_INSERTADJACENTELEMENT = 66605_u32
  DISPID_IHTMLELEMENT2_APPLYELEMENT = 66601_u32
  DISPID_IHTMLELEMENT2_GETADJACENTTEXT = 66606_u32
  DISPID_IHTMLELEMENT2_REPLACEADJACENTTEXT = 66607_u32
  DISPID_IHTMLELEMENT2_CANHAVECHILDREN = 66608_u32
  DISPID_IHTMLELEMENT2_ADDBEHAVIOR = 66616_u32
  DISPID_IHTMLELEMENT2_REMOVEBEHAVIOR = 66617_u32
  DISPID_IHTMLELEMENT2_RUNTIMESTYLE = 66600_u32
  DISPID_IHTMLELEMENT2_BEHAVIORURNS = 66618_u32
  DISPID_IHTMLELEMENT2_TAGURN = 66619_u32
  DISPID_IHTMLELEMENT2_ONBEFOREEDITFOCUS = 71605_u32
  DISPID_IHTMLELEMENT2_READYSTATEVALUE = 66620_u32
  DISPID_IHTMLELEMENT2_GETELEMENTSBYTAGNAME = 66621_u32
  DISPID_IHTMLELEMENT3_MERGEATTRIBUTES = 66632_u32
  DISPID_IHTMLELEMENT3_ISMULTILINE = 66633_u32
  DISPID_IHTMLELEMENT3_CANHAVEHTML = 66634_u32
  DISPID_IHTMLELEMENT3_ONLAYOUTCOMPLETE = 71609_u32
  DISPID_IHTMLELEMENT3_ONPAGE = 71610_u32
  DISPID_IHTMLELEMENT3_INFLATEBLOCK = 66636_u32
  DISPID_IHTMLELEMENT3_ONBEFOREDEACTIVATE = 71613_u32
  DISPID_IHTMLELEMENT3_SETACTIVE = 66637_u32
  DISPID_IHTMLELEMENT3_CONTENTEDITABLE = 70698_u32
  DISPID_IHTMLELEMENT3_ISCONTENTEDITABLE = 66638_u32
  DISPID_IHTMLELEMENT3_HIDEFOCUS = 70699_u32
  DISPID_IHTMLELEMENT3_DISABLED = 65612_u32
  DISPID_IHTMLELEMENT3_ISDISABLED = 66641_u32
  DISPID_IHTMLELEMENT3_ONMOVE = 71614_u32
  DISPID_IHTMLELEMENT3_ONCONTROLSELECT = 71615_u32
  DISPID_IHTMLELEMENT3_FIREEVENT = 66642_u32
  DISPID_IHTMLELEMENT3_ONRESIZESTART = 71619_u32
  DISPID_IHTMLELEMENT3_ONRESIZEEND = 71620_u32
  DISPID_IHTMLELEMENT3_ONMOVESTART = 71617_u32
  DISPID_IHTMLELEMENT3_ONMOVEEND = 71618_u32
  DISPID_IHTMLELEMENT3_ONMOUSEENTER = 71621_u32
  DISPID_IHTMLELEMENT3_ONMOUSELEAVE = 71622_u32
  DISPID_IHTMLELEMENT3_ONACTIVATE = 71623_u32
  DISPID_IHTMLELEMENT3_ONDEACTIVATE = 71624_u32
  DISPID_IHTMLELEMENT3_DRAGDROP = 66643_u32
  DISPID_IHTMLELEMENT3_GLYPHMODE = 66644_u32
  DISPID_IHTMLELEMENT4_ONMOUSEWHEEL = 71612_u32
  DISPID_IHTMLELEMENT4_NORMALIZE = 66648_u32
  DISPID_IHTMLELEMENT4_GETATTRIBUTENODE = 66645_u32
  DISPID_IHTMLELEMENT4_SETATTRIBUTENODE = 66646_u32
  DISPID_IHTMLELEMENT4_REMOVEATTRIBUTENODE = 66647_u32
  DISPID_IHTMLELEMENT4_ONBEFOREACTIVATE = 71626_u32
  DISPID_IHTMLELEMENT4_ONFOCUSIN = 71627_u32
  DISPID_IHTMLELEMENT4_ONFOCUSOUT = 71628_u32
  DISPID_IELEMENTSELECTOR_QUERYSELECTOR = 66650_u32
  DISPID_IELEMENTSELECTOR_QUERYSELECTORALL = 66651_u32
  DISPID_IHTMLUNIQUENAME_UNIQUENUMBER = 66590_u32
  DISPID_IHTMLUNIQUENAME_UNIQUEID = 66591_u32
  DISPID_IHTMLELEMENT5_IE8_GETATTRIBUTENODE = 66736_u32
  DISPID_IHTMLELEMENT5_IE8_SETATTRIBUTENODE = 66737_u32
  DISPID_IHTMLELEMENT5_IE8_REMOVEATTRIBUTENODE = 66738_u32
  DISPID_IHTMLELEMENT5_HASATTRIBUTE = 66739_u32
  DISPID_IHTMLELEMENT5_ROLE = 66740_u32
  DISPID_IHTMLELEMENT5_ARIABUSY = 66741_u32
  DISPID_IHTMLELEMENT5_ARIACHECKED = 66742_u32
  DISPID_IHTMLELEMENT5_ARIADISABLED = 66743_u32
  DISPID_IHTMLELEMENT5_ARIAEXPANDED = 66744_u32
  DISPID_IHTMLELEMENT5_ARIAHASPOPUP = 66745_u32
  DISPID_IHTMLELEMENT5_ARIAHIDDEN = 66746_u32
  DISPID_IHTMLELEMENT5_ARIAINVALID = 66747_u32
  DISPID_IHTMLELEMENT5_ARIAMULTISELECTABLE = 66748_u32
  DISPID_IHTMLELEMENT5_ARIAPRESSED = 66749_u32
  DISPID_IHTMLELEMENT5_ARIAREADONLY = 66750_u32
  DISPID_IHTMLELEMENT5_ARIAREQUIRED = 66751_u32
  DISPID_IHTMLELEMENT5_ARIASECRET = 66752_u32
  DISPID_IHTMLELEMENT5_ARIASELECTED = 66753_u32
  DISPID_IHTMLELEMENT5_IE8_GETATTRIBUTE = 66754_u32
  DISPID_IHTMLELEMENT5_IE8_SETATTRIBUTE = 66755_u32
  DISPID_IHTMLELEMENT5_IE8_REMOVEATTRIBUTE = 66756_u32
  DISPID_IHTMLELEMENT5_IE8_ATTRIBUTES = 66757_u32
  DISPID_IHTMLELEMENT5_ARIAVALUENOW = 66758_u32
  DISPID_IHTMLELEMENT5_ARIAPOSINSET = 66759_u32
  DISPID_IHTMLELEMENT5_ARIASETSIZE = 66760_u32
  DISPID_IHTMLELEMENT5_ARIALEVEL = 66761_u32
  DISPID_IHTMLELEMENT5_ARIAVALUEMIN = 66762_u32
  DISPID_IHTMLELEMENT5_ARIAVALUEMAX = 66763_u32
  DISPID_IHTMLELEMENT5_ARIACONTROLS = 66764_u32
  DISPID_IHTMLELEMENT5_ARIADESCRIBEDBY = 66765_u32
  DISPID_IHTMLELEMENT5_ARIAFLOWTO = 66766_u32
  DISPID_IHTMLELEMENT5_ARIALABELLEDBY = 66767_u32
  DISPID_IHTMLELEMENT5_ARIAACTIVEDESCENDANT = 66768_u32
  DISPID_IHTMLELEMENT5_ARIAOWNS = 66769_u32
  DISPID_IHTMLELEMENT5_HASATTRIBUTES = 66770_u32
  DISPID_IHTMLELEMENT5_ARIALIVE = 66771_u32
  DISPID_IHTMLELEMENT5_ARIARELEVANT = 66772_u32
  DISPID_IHTMLELEMENT6_GETATTRIBUTENS = 66789_u32
  DISPID_IHTMLELEMENT6_SETATTRIBUTENS = 66790_u32
  DISPID_IHTMLELEMENT6_REMOVEATTRIBUTENS = 66791_u32
  DISPID_IHTMLELEMENT6_GETATTRIBUTENODENS = 66786_u32
  DISPID_IHTMLELEMENT6_SETATTRIBUTENODENS = 66787_u32
  DISPID_IHTMLELEMENT6_HASATTRIBUTENS = 66788_u32
  DISPID_IHTMLELEMENT6_IE9_GETATTRIBUTE = 66796_u32
  DISPID_IHTMLELEMENT6_IE9_SETATTRIBUTE = 66797_u32
  DISPID_IHTMLELEMENT6_IE9_REMOVEATTRIBUTE = 66798_u32
  DISPID_IHTMLELEMENT6_IE9_GETATTRIBUTENODE = 66792_u32
  DISPID_IHTMLELEMENT6_IE9_SETATTRIBUTENODE = 66793_u32
  DISPID_IHTMLELEMENT6_IE9_REMOVEATTRIBUTENODE = 66794_u32
  DISPID_IHTMLELEMENT6_IE9_HASATTRIBUTE = 66795_u32
  DISPID_IHTMLELEMENT6_GETELEMENTSBYTAGNAMENS = 66799_u32
  DISPID_IHTMLELEMENT6_IE9_TAGNAME = 66801_u32
  DISPID_IHTMLELEMENT6_IE9_NODENAME = 66802_u32
  DISPID_IHTMLELEMENT6_GETELEMENTSBYCLASSNAME = 66803_u32
  DISPID_IHTMLELEMENT6_MSMATCHESSELECTOR = 66814_u32
  DISPID_IHTMLELEMENT6_ONABORT = 71564_u32
  DISPID_IHTMLELEMENT6_ONCANPLAY = 71670_u32
  DISPID_IHTMLELEMENT6_ONCANPLAYTHROUGH = 71671_u32
  DISPID_IHTMLELEMENT6_ONCHANGE = 71566_u32
  DISPID_IHTMLELEMENT6_ONDURATIONCHANGE = 71672_u32
  DISPID_IHTMLELEMENT6_ONEMPTIED = 71673_u32
  DISPID_IHTMLELEMENT6_ONENDED = 71674_u32
  DISPID_IHTMLELEMENT6_ONERROR = 71565_u32
  DISPID_IHTMLELEMENT6_ONINPUT = 71663_u32
  DISPID_IHTMLELEMENT6_ONLOAD = 71568_u32
  DISPID_IHTMLELEMENT6_ONLOADEDDATA = 71675_u32
  DISPID_IHTMLELEMENT6_ONLOADEDMETADATA = 71676_u32
  DISPID_IHTMLELEMENT6_ONLOADSTART = 71677_u32
  DISPID_IHTMLELEMENT6_ONPAUSE = 71678_u32
  DISPID_IHTMLELEMENT6_ONPLAY = 71679_u32
  DISPID_IHTMLELEMENT6_ONPLAYING = 71680_u32
  DISPID_IHTMLELEMENT6_ONPROGRESS = 71681_u32
  DISPID_IHTMLELEMENT6_ONRATECHANGE = 71682_u32
  DISPID_IHTMLELEMENT6_ONRESET = 71548_u32
  DISPID_IHTMLELEMENT6_ONSEEKED = 71683_u32
  DISPID_IHTMLELEMENT6_ONSEEKING = 71684_u32
  DISPID_IHTMLELEMENT6_ONSELECT = 71546_u32
  DISPID_IHTMLELEMENT6_ONSTALLED = 71685_u32
  DISPID_IHTMLELEMENT6_ONSUBMIT = 71547_u32
  DISPID_IHTMLELEMENT6_ONSUSPEND = 71686_u32
  DISPID_IHTMLELEMENT6_ONTIMEUPDATE = 71687_u32
  DISPID_IHTMLELEMENT6_ONVOLUMECHANGE = 71688_u32
  DISPID_IHTMLELEMENT6_ONWAITING = 71689_u32
  DISPID_IHTMLELEMENT6_IE9_HASATTRIBUTES = 66815_u32
  DISPID_IHTMLELEMENT7_ONMSPOINTERDOWN = 71690_u32
  DISPID_IHTMLELEMENT7_ONMSPOINTERMOVE = 71691_u32
  DISPID_IHTMLELEMENT7_ONMSPOINTERUP = 71692_u32
  DISPID_IHTMLELEMENT7_ONMSPOINTEROVER = 71693_u32
  DISPID_IHTMLELEMENT7_ONMSPOINTEROUT = 71694_u32
  DISPID_IHTMLELEMENT7_ONMSPOINTERCANCEL = 71695_u32
  DISPID_IHTMLELEMENT7_ONMSPOINTERHOVER = 71696_u32
  DISPID_IHTMLELEMENT7_ONMSLOSTPOINTERCAPTURE = 71706_u32
  DISPID_IHTMLELEMENT7_ONMSGOTPOINTERCAPTURE = 71707_u32
  DISPID_IHTMLELEMENT7_ONMSGESTURESTART = 71699_u32
  DISPID_IHTMLELEMENT7_ONMSGESTURECHANGE = 71700_u32
  DISPID_IHTMLELEMENT7_ONMSGESTUREEND = 71701_u32
  DISPID_IHTMLELEMENT7_ONMSGESTUREHOLD = 71702_u32
  DISPID_IHTMLELEMENT7_ONMSGESTURETAP = 71703_u32
  DISPID_IHTMLELEMENT7_ONMSGESTUREDOUBLETAP = 71704_u32
  DISPID_IHTMLELEMENT7_ONMSINERTIASTART = 71705_u32
  DISPID_IHTMLELEMENT7_MSSETPOINTERCAPTURE = 66822_u32
  DISPID_IHTMLELEMENT7_MSRELEASEPOINTERCAPTURE = 66823_u32
  DISPID_IHTMLELEMENT7_ONMSTRANSITIONSTART = 71709_u32
  DISPID_IHTMLELEMENT7_ONMSTRANSITIONEND = 71710_u32
  DISPID_IHTMLELEMENT7_ONMSANIMATIONSTART = 71711_u32
  DISPID_IHTMLELEMENT7_ONMSANIMATIONEND = 71712_u32
  DISPID_IHTMLELEMENT7_ONMSANIMATIONITERATION = 71713_u32
  DISPID_IHTMLELEMENT7_ONINVALID = 71724_u32
  DISPID_IHTMLELEMENT7_XMSACCELERATORKEY = 66834_u32
  DISPID_IHTMLELEMENT7_SPELLCHECK = 70907_u32
  DISPID_IHTMLELEMENT7_ONMSMANIPULATIONSTATECHANGED = 71714_u32
  DISPID_IHTMLELEMENT7_ONCUECHANGE = 71729_u32
  DISPID_IHTMLELEMENTAPPLIEDSTYLES_MSGETRULESAPPLIED = 66652_u32
  DISPID_IHTMLELEMENTAPPLIEDSTYLES_MSGETRULESAPPLIEDWITHANCESTOR = 66653_u32
  DISPID_IELEMENTTRAVERSAL_FIRSTELEMENTCHILD = 66808_u32
  DISPID_IELEMENTTRAVERSAL_LASTELEMENTCHILD = 66809_u32
  DISPID_IELEMENTTRAVERSAL_PREVIOUSELEMENTSIBLING = 66810_u32
  DISPID_IELEMENTTRAVERSAL_NEXTELEMENTSIBLING = 66811_u32
  DISPID_IELEMENTTRAVERSAL_CHILDELEMENTCOUNT = 66812_u32
  DISPID_IHTMLDATABINDING_DATAFLD = 66557_u32
  DISPID_IHTMLDATABINDING_DATASRC = 66558_u32
  DISPID_IHTMLDATABINDING_DATAFORMATAS = 66559_u32
  DISPID_HTMLELEMENTEVENTS4_ONABORT = 1000_u32
  DISPID_HTMLELEMENTEVENTS4_ONCHANGE = 1001_u32
  DISPID_HTMLELEMENTEVENTS4_ONERROR = 1002_u32
  DISPID_HTMLELEMENTEVENTS4_ONLOAD = 1003_u32
  DISPID_HTMLELEMENTEVENTS4_ONRESET = 1015_u32
  DISPID_HTMLELEMENTEVENTS4_ONSELECT = 1006_u32
  DISPID_HTMLELEMENTEVENTS4_ONSUBMIT = 1007_u32
  DISPID_HTMLELEMENTEVENTS4_ONMSCONTENTZOOM = 71708_u32
  DISPID_HTMLELEMENTEVENTS3_ONONLINE = 1064_u32
  DISPID_HTMLELEMENTEVENTS3_ONOFFLINE = 1065_u32
  DISPID_HTMLELEMENTEVENTS2_ONHELP = 65546_u32
  DISPID_HTMLELEMENTEVENTS2_ONCLICK = -600_i32
  DISPID_HTMLELEMENTEVENTS2_ONDBLCLICK = -601_i32
  DISPID_HTMLELEMENTEVENTS2_ONKEYPRESS = -603_i32
  DISPID_HTMLELEMENTEVENTS2_ONKEYDOWN = -602_i32
  DISPID_HTMLELEMENTEVENTS2_ONKEYUP = -604_i32
  DISPID_HTMLELEMENTEVENTS2_ONMOUSEOUT = 65545_u32
  DISPID_HTMLELEMENTEVENTS2_ONMOUSEOVER = 65544_u32
  DISPID_HTMLELEMENTEVENTS2_ONMOUSEMOVE = -606_i32
  DISPID_HTMLELEMENTEVENTS2_ONMOUSEDOWN = -605_i32
  DISPID_HTMLELEMENTEVENTS2_ONMOUSEUP = -607_i32
  DISPID_HTMLELEMENTEVENTS2_ONSELECTSTART = 65548_u32
  DISPID_HTMLELEMENTEVENTS2_ONFILTERCHANGE = 65553_u32
  DISPID_HTMLELEMENTEVENTS2_ONDRAGSTART = 65547_u32
  DISPID_HTMLELEMENTEVENTS2_ONBEFOREUPDATE = 65540_u32
  DISPID_HTMLELEMENTEVENTS2_ONAFTERUPDATE = 65541_u32
  DISPID_HTMLELEMENTEVENTS2_ONERRORUPDATE = 65549_u32
  DISPID_HTMLELEMENTEVENTS2_ONROWEXIT = 65542_u32
  DISPID_HTMLELEMENTEVENTS2_ONROWENTER = 65543_u32
  DISPID_HTMLELEMENTEVENTS2_ONDATASETCHANGED = 65550_u32
  DISPID_HTMLELEMENTEVENTS2_ONDATAAVAILABLE = 65551_u32
  DISPID_HTMLELEMENTEVENTS2_ONDATASETCOMPLETE = 65552_u32
  DISPID_HTMLELEMENTEVENTS2_ONLOSECAPTURE = 65554_u32
  DISPID_HTMLELEMENTEVENTS2_ONPROPERTYCHANGE = 65555_u32
  DISPID_HTMLELEMENTEVENTS2_ONSCROLL = 1014_u32
  DISPID_HTMLELEMENTEVENTS2_ONFOCUS = 65537_u32
  DISPID_HTMLELEMENTEVENTS2_ONRESIZE = 1016_u32
  DISPID_HTMLELEMENTEVENTS2_ONDRAG = 65556_u32
  DISPID_HTMLELEMENTEVENTS2_ONDRAGEND = 65557_u32
  DISPID_HTMLELEMENTEVENTS2_ONDRAGENTER = 65558_u32
  DISPID_HTMLELEMENTEVENTS2_ONDRAGOVER = 65559_u32
  DISPID_HTMLELEMENTEVENTS2_ONDRAGLEAVE = 65560_u32
  DISPID_HTMLELEMENTEVENTS2_ONDROP = 65561_u32
  DISPID_HTMLELEMENTEVENTS2_ONBEFORECUT = 65565_u32
  DISPID_HTMLELEMENTEVENTS2_ONCUT = 65562_u32
  DISPID_HTMLELEMENTEVENTS2_ONBEFORECOPY = 65566_u32
  DISPID_HTMLELEMENTEVENTS2_ONCOPY = 65563_u32
  DISPID_HTMLELEMENTEVENTS2_ONBEFOREPASTE = 65567_u32
  DISPID_HTMLELEMENTEVENTS2_ONPASTE = 65564_u32
  DISPID_HTMLELEMENTEVENTS2_ONCONTEXTMENU = 1023_u32
  DISPID_HTMLELEMENTEVENTS2_ONROWSDELETE = 65568_u32
  DISPID_HTMLELEMENTEVENTS2_ONROWSINSERTED = 65569_u32
  DISPID_HTMLELEMENTEVENTS2_ONCELLCHANGE = 65570_u32
  DISPID_HTMLELEMENTEVENTS2_ONREADYSTATECHANGE = -609_i32
  DISPID_HTMLELEMENTEVENTS2_ONLAYOUTCOMPLETE = 1030_u32
  DISPID_HTMLELEMENTEVENTS2_ONPAGE = 1031_u32
  DISPID_HTMLELEMENTEVENTS2_ONMOUSEENTER = 1042_u32
  DISPID_HTMLELEMENTEVENTS2_ONMOUSELEAVE = 1043_u32
  DISPID_HTMLELEMENTEVENTS2_ONACTIVATE = 1044_u32
  DISPID_HTMLELEMENTEVENTS2_ONDEACTIVATE = 1045_u32
  DISPID_HTMLELEMENTEVENTS2_ONBEFOREDEACTIVATE = 1034_u32
  DISPID_HTMLELEMENTEVENTS2_ONBEFOREACTIVATE = 1047_u32
  DISPID_HTMLELEMENTEVENTS2_ONFOCUSIN = 1048_u32
  DISPID_HTMLELEMENTEVENTS2_ONFOCUSOUT = 1049_u32
  DISPID_HTMLELEMENTEVENTS2_ONMOVE = 1035_u32
  DISPID_HTMLELEMENTEVENTS2_ONCONTROLSELECT = 1036_u32
  DISPID_HTMLELEMENTEVENTS2_ONMOVESTART = 1038_u32
  DISPID_HTMLELEMENTEVENTS2_ONMOVEEND = 1039_u32
  DISPID_HTMLELEMENTEVENTS2_ONRESIZESTART = 1040_u32
  DISPID_HTMLELEMENTEVENTS2_ONRESIZEEND = 1041_u32
  DISPID_HTMLELEMENTEVENTS2_ONMOUSEWHEEL = 1033_u32
  DISPID_HTMLELEMENTEVENTS_ONHELP = 65546_u32
  DISPID_HTMLELEMENTEVENTS_ONCLICK = -600_i32
  DISPID_HTMLELEMENTEVENTS_ONDBLCLICK = -601_i32
  DISPID_HTMLELEMENTEVENTS_ONKEYPRESS = -603_i32
  DISPID_HTMLELEMENTEVENTS_ONKEYDOWN = -602_i32
  DISPID_HTMLELEMENTEVENTS_ONKEYUP = -604_i32
  DISPID_HTMLELEMENTEVENTS_ONMOUSEOUT = 65545_u32
  DISPID_HTMLELEMENTEVENTS_ONMOUSEOVER = 65544_u32
  DISPID_HTMLELEMENTEVENTS_ONMOUSEMOVE = -606_i32
  DISPID_HTMLELEMENTEVENTS_ONMOUSEDOWN = -605_i32
  DISPID_HTMLELEMENTEVENTS_ONMOUSEUP = -607_i32
  DISPID_HTMLELEMENTEVENTS_ONSELECTSTART = 65548_u32
  DISPID_HTMLELEMENTEVENTS_ONFILTERCHANGE = 65553_u32
  DISPID_HTMLELEMENTEVENTS_ONDRAGSTART = 65547_u32
  DISPID_HTMLELEMENTEVENTS_ONBEFOREUPDATE = 65540_u32
  DISPID_HTMLELEMENTEVENTS_ONAFTERUPDATE = 65541_u32
  DISPID_HTMLELEMENTEVENTS_ONERRORUPDATE = 65549_u32
  DISPID_HTMLELEMENTEVENTS_ONROWEXIT = 65542_u32
  DISPID_HTMLELEMENTEVENTS_ONROWENTER = 65543_u32
  DISPID_HTMLELEMENTEVENTS_ONDATASETCHANGED = 65550_u32
  DISPID_HTMLELEMENTEVENTS_ONDATAAVAILABLE = 65551_u32
  DISPID_HTMLELEMENTEVENTS_ONDATASETCOMPLETE = 65552_u32
  DISPID_HTMLELEMENTEVENTS_ONLOSECAPTURE = 65554_u32
  DISPID_HTMLELEMENTEVENTS_ONPROPERTYCHANGE = 65555_u32
  DISPID_HTMLELEMENTEVENTS_ONSCROLL = 1014_u32
  DISPID_HTMLELEMENTEVENTS_ONFOCUS = 65537_u32
  DISPID_HTMLELEMENTEVENTS_ONRESIZE = 1016_u32
  DISPID_HTMLELEMENTEVENTS_ONDRAG = 65556_u32
  DISPID_HTMLELEMENTEVENTS_ONDRAGEND = 65557_u32
  DISPID_HTMLELEMENTEVENTS_ONDRAGENTER = 65558_u32
  DISPID_HTMLELEMENTEVENTS_ONDRAGOVER = 65559_u32
  DISPID_HTMLELEMENTEVENTS_ONDRAGLEAVE = 65560_u32
  DISPID_HTMLELEMENTEVENTS_ONDROP = 65561_u32
  DISPID_HTMLELEMENTEVENTS_ONBEFORECUT = 65565_u32
  DISPID_HTMLELEMENTEVENTS_ONCUT = 65562_u32
  DISPID_HTMLELEMENTEVENTS_ONBEFORECOPY = 65566_u32
  DISPID_HTMLELEMENTEVENTS_ONCOPY = 65563_u32
  DISPID_HTMLELEMENTEVENTS_ONBEFOREPASTE = 65567_u32
  DISPID_HTMLELEMENTEVENTS_ONPASTE = 65564_u32
  DISPID_HTMLELEMENTEVENTS_ONCONTEXTMENU = 1023_u32
  DISPID_HTMLELEMENTEVENTS_ONROWSDELETE = 65568_u32
  DISPID_HTMLELEMENTEVENTS_ONROWSINSERTED = 65569_u32
  DISPID_HTMLELEMENTEVENTS_ONCELLCHANGE = 65570_u32
  DISPID_HTMLELEMENTEVENTS_ONREADYSTATECHANGE = -609_i32
  DISPID_HTMLELEMENTEVENTS_ONBEFOREEDITFOCUS = 1027_u32
  DISPID_HTMLELEMENTEVENTS_ONLAYOUTCOMPLETE = 1030_u32
  DISPID_HTMLELEMENTEVENTS_ONPAGE = 1031_u32
  DISPID_HTMLELEMENTEVENTS_ONBEFOREDEACTIVATE = 1034_u32
  DISPID_HTMLELEMENTEVENTS_ONBEFOREACTIVATE = 1047_u32
  DISPID_HTMLELEMENTEVENTS_ONMOVE = 1035_u32
  DISPID_HTMLELEMENTEVENTS_ONCONTROLSELECT = 1036_u32
  DISPID_HTMLELEMENTEVENTS_ONMOVESTART = 1038_u32
  DISPID_HTMLELEMENTEVENTS_ONMOVEEND = 1039_u32
  DISPID_HTMLELEMENTEVENTS_ONRESIZESTART = 1040_u32
  DISPID_HTMLELEMENTEVENTS_ONRESIZEEND = 1041_u32
  DISPID_HTMLELEMENTEVENTS_ONMOUSEENTER = 1042_u32
  DISPID_HTMLELEMENTEVENTS_ONMOUSELEAVE = 1043_u32
  DISPID_HTMLELEMENTEVENTS_ONMOUSEWHEEL = 1033_u32
  DISPID_HTMLELEMENTEVENTS_ONACTIVATE = 1044_u32
  DISPID_HTMLELEMENTEVENTS_ONDEACTIVATE = 1045_u32
  DISPID_HTMLELEMENTEVENTS_ONFOCUSIN = 1048_u32
  DISPID_HTMLELEMENTEVENTS_ONFOCUSOUT = 1049_u32
  DISPID_IHTMLELEMENTDEFAULTS_STYLE = 1001_u32
  DISPID_IHTMLELEMENTDEFAULTS_TABSTOP = 1002_u32
  DISPID_IHTMLELEMENTDEFAULTS_VIEWINHERITSTYLE = 70735_u32
  DISPID_IHTMLELEMENTDEFAULTS_VIEWMASTERTAB = 1006_u32
  DISPID_IHTMLELEMENTDEFAULTS_SCROLLSEGMENTX = 1003_u32
  DISPID_IHTMLELEMENTDEFAULTS_SCROLLSEGMENTY = 1004_u32
  DISPID_IHTMLELEMENTDEFAULTS_ISMULTILINE = 1008_u32
  DISPID_IHTMLELEMENTDEFAULTS_CONTENTEDITABLE = 70698_u32
  DISPID_IHTMLELEMENTDEFAULTS_CANHAVEHTML = 1009_u32
  DISPID_IHTMLELEMENTDEFAULTS_VIEWLINK = 1011_u32
  DISPID_IHTMLELEMENTDEFAULTS_FROZEN = 70734_u32
  DISPID_IHTCDEFAULTDISPATCH_ELEMENT = 70679_u32
  DISPID_IHTCDEFAULTDISPATCH_CREATEEVENTOBJECT = 70680_u32
  DISPID_IHTCDEFAULTDISPATCH_DEFAULTS = 70701_u32
  DISPID_IHTCDEFAULTDISPATCH_DOCUMENT = 70678_u32
  DISPID_IHTCPROPERTYBEHAVIOR_FIRECHANGE = 66036_u32
  DISPID_IHTCPROPERTYBEHAVIOR_VALUE = 70677_u32
  DISPID_IHTCEVENTBEHAVIOR_FIRE = 66036_u32
  DISPID_IHTCATTACHBEHAVIOR_FIREEVENT = 0_u32
  DISPID_IHTCATTACHBEHAVIOR_DETACHEVENT = 66036_u32
  DISPID_IHTCATTACHBEHAVIOR2_FIREEVENT = 0_u32
  DISPID_IHTCDESCBEHAVIOR_URN = 66036_u32
  DISPID_IHTCDESCBEHAVIOR_NAME = 66037_u32
  DISPID_IHTMLURNCOLLECTION_LENGTH = 1001_u32
  DISPID_IHTMLURNCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLGENERICELEMENT_RECORDSET = 1001_u32
  DISPID_IHTMLGENERICELEMENT_NAMEDRECORDSET = 1002_u32
  DISPID_IHTMLSTYLESHEETRULE_SELECTORTEXT = 1001_u32
  DISPID_IHTMLSTYLESHEETRULE_STYLE = 65610_u32
  DISPID_IHTMLSTYLESHEETRULE_READONLY = 1002_u32
  DISPID_IHTMLSTYLESHEETRULEAPPLIED_MSSPECIFICITY = 1003_u32
  DISPID_IHTMLSTYLESHEETRULEAPPLIED_MSGETSPECIFICITY = 1004_u32
  DISPID_IHTMLSTYLESHEETRULE2_IE9_SELECTORTEXT = 1005_u32
  DISPID_IHTMLSTYLESHEETRULESCOLLECTION_LENGTH = 1001_u32
  DISPID_IHTMLSTYLESHEETRULESCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLSTYLESHEETRULESCOLLECTION2_IE9_LENGTH = 1003_u32
  DISPID_IHTMLSTYLESHEETRULESCOLLECTION2_IE9_ITEM = 1002_u32
  DISPID_IHTMLSTYLESHEETPAGE_SELECTOR = 1001_u32
  DISPID_IHTMLSTYLESHEETPAGE_PSEUDOCLASS = 1002_u32
  DISPID_IHTMLSTYLESHEETPAGE2_SELECTORTEXT = 1003_u32
  DISPID_IHTMLSTYLESHEETPAGE2_STYLE = 65610_u32
  DISPID_IHTMLSTYLESHEETPAGESCOLLECTION_LENGTH = 1001_u32
  DISPID_IHTMLSTYLESHEETPAGESCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLSTYLESHEET_TITLE = 1001_u32
  DISPID_IHTMLSTYLESHEET_PARENTSTYLESHEET = 1002_u32
  DISPID_IHTMLSTYLESHEET_OWNINGELEMENT = 1003_u32
  DISPID_IHTMLSTYLESHEET_DISABLED = 65612_u32
  DISPID_IHTMLSTYLESHEET_READONLY = 1004_u32
  DISPID_IHTMLSTYLESHEET_IMPORTS = 1005_u32
  DISPID_IHTMLSTYLESHEET_HREF = 1006_u32
  DISPID_IHTMLSTYLESHEET_TYPE = 1007_u32
  DISPID_IHTMLSTYLESHEET_ID = 1008_u32
  DISPID_IHTMLSTYLESHEET_ADDIMPORT = 1009_u32
  DISPID_IHTMLSTYLESHEET_ADDRULE = 1010_u32
  DISPID_IHTMLSTYLESHEET_REMOVEIMPORT = 1011_u32
  DISPID_IHTMLSTYLESHEET_REMOVERULE = 1012_u32
  DISPID_IHTMLSTYLESHEET_MEDIA = 1013_u32
  DISPID_IHTMLSTYLESHEET_CSSTEXT = 1014_u32
  DISPID_IHTMLSTYLESHEET_RULES = 1015_u32
  DISPID_IHTMLSTYLESHEET2_PAGES = 1016_u32
  DISPID_IHTMLSTYLESHEET2_ADDPAGERULE = 1017_u32
  DISPID_IHTMLSTYLESHEET3_IE8_HREF = 1150_u32
  DISPID_IHTMLSTYLESHEET3_ISALTERNATE = 1151_u32
  DISPID_IHTMLSTYLESHEET3_ISPREFALTERNATE = 1152_u32
  DISPID_IHTMLSTYLESHEET4_IE9_TYPE = 1153_u32
  DISPID_IHTMLSTYLESHEET4_IE9_HREF = 1154_u32
  DISPID_IHTMLSTYLESHEET4_IE9_TITLE = 1155_u32
  DISPID_IHTMLSTYLESHEET4_OWNERNODE = 1156_u32
  DISPID_IHTMLSTYLESHEET4_OWNERRULE = 1157_u32
  DISPID_IHTMLSTYLESHEET4_CSSRULES = 1158_u32
  DISPID_IHTMLSTYLESHEET4_IE9_MEDIA = 1159_u32
  DISPID_IHTMLSTYLESHEET4_INSERTRULE = 1160_u32
  DISPID_IHTMLSTYLESHEET4_DELETERULE = 1161_u32
  DISPID_IHTMLSTYLESHEETSCOLLECTION_LENGTH = 1001_u32
  DISPID_IHTMLSTYLESHEETSCOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLSTYLESHEETSCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLSTYLESHEETSCOLLECTION2_IE9_ITEM = 1002_u32
  DISPID_IHTMLLINKELEMENT_HREF = 1005_u32
  DISPID_IHTMLLINKELEMENT_REL = 1006_u32
  DISPID_IHTMLLINKELEMENT_REV = 1007_u32
  DISPID_IHTMLLINKELEMENT_TYPE = 1008_u32
  DISPID_IHTMLLINKELEMENT_READYSTATE = 70652_u32
  DISPID_IHTMLLINKELEMENT_ONREADYSTATECHANGE = 71561_u32
  DISPID_IHTMLLINKELEMENT_ONLOAD = 71568_u32
  DISPID_IHTMLLINKELEMENT_ONERROR = 71565_u32
  DISPID_IHTMLLINKELEMENT_STYLESHEET = 1014_u32
  DISPID_IHTMLLINKELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLLINKELEMENT_MEDIA = 1016_u32
  DISPID_IHTMLLINKELEMENT2_TARGET = 1017_u32
  DISPID_IHTMLLINKELEMENT3_CHARSET = 1018_u32
  DISPID_IHTMLLINKELEMENT3_HREFLANG = 1019_u32
  DISPID_IHTMLLINKELEMENT4_IE8_HREF = 1150_u32
  DISPID_IHTMLLINKELEMENT5_SHEET = 1020_u32
  DISPID_HTMLLINKELEMENTEVENTS2_ONLOAD = 1003_u32
  DISPID_HTMLLINKELEMENTEVENTS2_ONERROR = 1002_u32
  DISPID_HTMLLINKELEMENTEVENTS_ONLOAD = 1003_u32
  DISPID_HTMLLINKELEMENTEVENTS_ONERROR = 1002_u32
  DISPID_IHTMLTXTRANGE_HTMLTEXT = 1003_u32
  DISPID_IHTMLTXTRANGE_TEXT = 1004_u32
  DISPID_IHTMLTXTRANGE_PARENTELEMENT = 1006_u32
  DISPID_IHTMLTXTRANGE_DUPLICATE = 1008_u32
  DISPID_IHTMLTXTRANGE_INRANGE = 1010_u32
  DISPID_IHTMLTXTRANGE_ISEQUAL = 1011_u32
  DISPID_IHTMLTXTRANGE_SCROLLINTOVIEW = 1012_u32
  DISPID_IHTMLTXTRANGE_COLLAPSE = 1013_u32
  DISPID_IHTMLTXTRANGE_EXPAND = 1014_u32
  DISPID_IHTMLTXTRANGE_MOVE = 1015_u32
  DISPID_IHTMLTXTRANGE_MOVESTART = 1016_u32
  DISPID_IHTMLTXTRANGE_MOVEEND = 1017_u32
  DISPID_IHTMLTXTRANGE_SELECT = 1024_u32
  DISPID_IHTMLTXTRANGE_PASTEHTML = 1026_u32
  DISPID_IHTMLTXTRANGE_MOVETOELEMENTTEXT = 1001_u32
  DISPID_IHTMLTXTRANGE_SETENDPOINT = 1025_u32
  DISPID_IHTMLTXTRANGE_COMPAREENDPOINTS = 1018_u32
  DISPID_IHTMLTXTRANGE_FINDTEXT = 1019_u32
  DISPID_IHTMLTXTRANGE_MOVETOPOINT = 1020_u32
  DISPID_IHTMLTXTRANGE_GETBOOKMARK = 1021_u32
  DISPID_IHTMLTXTRANGE_MOVETOBOOKMARK = 1009_u32
  DISPID_IHTMLTXTRANGE_QUERYCOMMANDSUPPORTED = 1027_u32
  DISPID_IHTMLTXTRANGE_QUERYCOMMANDENABLED = 1028_u32
  DISPID_IHTMLTXTRANGE_QUERYCOMMANDSTATE = 1029_u32
  DISPID_IHTMLTXTRANGE_QUERYCOMMANDINDETERM = 1030_u32
  DISPID_IHTMLTXTRANGE_QUERYCOMMANDTEXT = 1031_u32
  DISPID_IHTMLTXTRANGE_QUERYCOMMANDVALUE = 1032_u32
  DISPID_IHTMLTXTRANGE_EXECCOMMAND = 1033_u32
  DISPID_IHTMLTXTRANGE_EXECCOMMANDSHOWHELP = 1034_u32
  DISPID_IHTMLTEXTRANGEMETRICS_OFFSETTOP = 1035_u32
  DISPID_IHTMLTEXTRANGEMETRICS_OFFSETLEFT = 1036_u32
  DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGTOP = 1037_u32
  DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGLEFT = 1038_u32
  DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGWIDTH = 1039_u32
  DISPID_IHTMLTEXTRANGEMETRICS_BOUNDINGHEIGHT = 1040_u32
  DISPID_IHTMLTEXTRANGEMETRICS2_GETCLIENTRECTS = 1041_u32
  DISPID_IHTMLTEXTRANGEMETRICS2_GETBOUNDINGCLIENTRECT = 1042_u32
  DISPID_IHTMLTXTRANGECOLLECTION_LENGTH = 1500_u32
  DISPID_IHTMLTXTRANGECOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLTXTRANGECOLLECTION_ITEM = 0_u32
  DISPID_IHTMLDOMRANGE_STARTCONTAINER = 1001_u32
  DISPID_IHTMLDOMRANGE_STARTOFFSET = 1002_u32
  DISPID_IHTMLDOMRANGE_ENDCONTAINER = 1003_u32
  DISPID_IHTMLDOMRANGE_ENDOFFSET = 1004_u32
  DISPID_IHTMLDOMRANGE_COLLAPSED = 1005_u32
  DISPID_IHTMLDOMRANGE_COMMONANCESTORCONTAINER = 1006_u32
  DISPID_IHTMLDOMRANGE_SETSTART = 1007_u32
  DISPID_IHTMLDOMRANGE_SETEND = 1008_u32
  DISPID_IHTMLDOMRANGE_SETSTARTBEFORE = 1009_u32
  DISPID_IHTMLDOMRANGE_SETSTARTAFTER = 1010_u32
  DISPID_IHTMLDOMRANGE_SETENDBEFORE = 1011_u32
  DISPID_IHTMLDOMRANGE_SETENDAFTER = 1012_u32
  DISPID_IHTMLDOMRANGE_COLLAPSE = 1013_u32
  DISPID_IHTMLDOMRANGE_SELECTNODE = 1014_u32
  DISPID_IHTMLDOMRANGE_SELECTNODECONTENTS = 1015_u32
  DISPID_IHTMLDOMRANGE_COMPAREBOUNDARYPOINTS = 1016_u32
  DISPID_IHTMLDOMRANGE_DELETECONTENTS = 1017_u32
  DISPID_IHTMLDOMRANGE_EXTRACTCONTENTS = 1018_u32
  DISPID_IHTMLDOMRANGE_CLONECONTENTS = 1019_u32
  DISPID_IHTMLDOMRANGE_INSERTNODE = 1020_u32
  DISPID_IHTMLDOMRANGE_SURROUNDCONTENTS = 1021_u32
  DISPID_IHTMLDOMRANGE_CLONERANGE = 1022_u32
  DISPID_IHTMLDOMRANGE_TOSTRING = 1023_u32
  DISPID_IHTMLDOMRANGE_DETACH = 1024_u32
  DISPID_IHTMLDOMRANGE_GETCLIENTRECTS = 1025_u32
  DISPID_IHTMLDOMRANGE_GETBOUNDINGCLIENTRECT = 1026_u32
  DISPID_IHTMLFORMELEMENT_ACTION = 1001_u32
  DISPID_IHTMLFORMELEMENT_DIR = 70653_u32
  DISPID_IHTMLFORMELEMENT_ENCODING = 1003_u32
  DISPID_IHTMLFORMELEMENT_METHOD = 1004_u32
  DISPID_IHTMLFORMELEMENT_ELEMENTS = 1005_u32
  DISPID_IHTMLFORMELEMENT_TARGET = 1006_u32
  DISPID_IHTMLFORMELEMENT_NAME = 65536_u32
  DISPID_IHTMLFORMELEMENT_ONSUBMIT = 71547_u32
  DISPID_IHTMLFORMELEMENT_ONRESET = 71548_u32
  DISPID_IHTMLFORMELEMENT_SUBMIT = 1009_u32
  DISPID_IHTMLFORMELEMENT_RESET = 1010_u32
  DISPID_IHTMLFORMELEMENT_LENGTH = 1500_u32
  DISPID_IHTMLFORMELEMENT__NEWENUM = -4_i32
  DISPID_IHTMLFORMELEMENT_ITEM = 0_u32
  DISPID_IHTMLFORMELEMENT_TAGS = 1502_u32
  DISPID_IHTMLFORMELEMENT2_ACCEPTCHARSET = 1011_u32
  DISPID_IHTMLFORMELEMENT2_URNS = 1505_u32
  DISPID_IHTMLFORMELEMENT3_NAMEDITEM = 1506_u32
  DISPID_IHTMLSUBMITDATA_APPENDNAMEVALUEPAIR = 1012_u32
  DISPID_IHTMLSUBMITDATA_APPENDNAMEFILEPAIR = 1013_u32
  DISPID_IHTMLSUBMITDATA_APPENDITEMSEPARATOR = 1014_u32
  DISPID_IHTMLFORMELEMENT4_IE8_ACTION = 1150_u32
  DISPID_HTMLFORMELEMENTEVENTS2_ONSUBMIT = 1007_u32
  DISPID_HTMLFORMELEMENTEVENTS2_ONRESET = 1015_u32
  DISPID_HTMLFORMELEMENTEVENTS_ONSUBMIT = 1007_u32
  DISPID_HTMLFORMELEMENTEVENTS_ONRESET = 1015_u32
  DISPID_IHTMLCONTROLELEMENT_TABINDEX = 65551_u32
  DISPID_IHTMLCONTROLELEMENT_FOCUS = 67536_u32
  DISPID_IHTMLCONTROLELEMENT_ACCESSKEY = 67541_u32
  DISPID_IHTMLCONTROLELEMENT_ONBLUR = 71551_u32
  DISPID_IHTMLCONTROLELEMENT_ONFOCUS = 71550_u32
  DISPID_IHTMLCONTROLELEMENT_ONRESIZE = 71572_u32
  DISPID_IHTMLCONTROLELEMENT_BLUR = 67538_u32
  DISPID_IHTMLCONTROLELEMENT_ADDFILTER = 67553_u32
  DISPID_IHTMLCONTROLELEMENT_REMOVEFILTER = 67554_u32
  DISPID_IHTMLCONTROLELEMENT_CLIENTHEIGHT = 67555_u32
  DISPID_IHTMLCONTROLELEMENT_CLIENTWIDTH = 67556_u32
  DISPID_IHTMLCONTROLELEMENT_CLIENTTOP = 67557_u32
  DISPID_IHTMLCONTROLELEMENT_CLIENTLEFT = 67558_u32
  DISPID_IHTMLTEXTCONTAINER_CREATECONTROLRANGE = 1001_u32
  DISPID_IHTMLTEXTCONTAINER_SCROLLHEIGHT = 1002_u32
  DISPID_IHTMLTEXTCONTAINER_SCROLLWIDTH = 1003_u32
  DISPID_IHTMLTEXTCONTAINER_SCROLLTOP = 1004_u32
  DISPID_IHTMLTEXTCONTAINER_SCROLLLEFT = 1005_u32
  DISPID_IHTMLTEXTCONTAINER_ONSCROLL = 71567_u32
  DISPID_HTMLTEXTCONTAINEREVENTS2_ONCHANGE = 1001_u32
  DISPID_HTMLTEXTCONTAINEREVENTS2_ONSELECT = 1006_u32
  DISPID_HTMLTEXTCONTAINEREVENTS_ONCHANGE = 1001_u32
  DISPID_HTMLTEXTCONTAINEREVENTS_ONSELECT = 1006_u32
  DISPID_IHTMLCONTROLRANGE_SELECT = 1002_u32
  DISPID_IHTMLCONTROLRANGE_ADD = 1003_u32
  DISPID_IHTMLCONTROLRANGE_REMOVE = 1004_u32
  DISPID_IHTMLCONTROLRANGE_ITEM = 0_u32
  DISPID_IHTMLCONTROLRANGE_SCROLLINTOVIEW = 1006_u32
  DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDSUPPORTED = 1007_u32
  DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDENABLED = 1008_u32
  DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDSTATE = 1009_u32
  DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDINDETERM = 1010_u32
  DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDTEXT = 1011_u32
  DISPID_IHTMLCONTROLRANGE_QUERYCOMMANDVALUE = 1012_u32
  DISPID_IHTMLCONTROLRANGE_EXECCOMMAND = 1013_u32
  DISPID_IHTMLCONTROLRANGE_EXECCOMMANDSHOWHELP = 1014_u32
  DISPID_IHTMLCONTROLRANGE_COMMONPARENTELEMENT = 1015_u32
  DISPID_IHTMLCONTROLRANGE_LENGTH = 1005_u32
  DISPID_IHTMLCONTROLRANGE2_ADDELEMENT = 1016_u32
  DISPID_IHTMLIMGELEMENT_ISMAP = 2002_u32
  DISPID_IHTMLIMGELEMENT_USEMAP = 2008_u32
  DISPID_IHTMLIMGELEMENT_MIMETYPE = 2010_u32
  DISPID_IHTMLIMGELEMENT_FILESIZE = 2011_u32
  DISPID_IHTMLIMGELEMENT_FILECREATEDDATE = 2012_u32
  DISPID_IHTMLIMGELEMENT_FILEMODIFIEDDATE = 2013_u32
  DISPID_IHTMLIMGELEMENT_FILEUPDATEDDATE = 2014_u32
  DISPID_IHTMLIMGELEMENT_PROTOCOL = 2015_u32
  DISPID_IHTMLIMGELEMENT_HREF = 2016_u32
  DISPID_IHTMLIMGELEMENT_NAMEPROP = 2017_u32
  DISPID_IHTMLIMGELEMENT_BORDER = 1004_u32
  DISPID_IHTMLIMGELEMENT_VSPACE = 1005_u32
  DISPID_IHTMLIMGELEMENT_HSPACE = 1006_u32
  DISPID_IHTMLIMGELEMENT_ALT = 1002_u32
  DISPID_IHTMLIMGELEMENT_SRC = 1003_u32
  DISPID_IHTMLIMGELEMENT_LOWSRC = 1007_u32
  DISPID_IHTMLIMGELEMENT_VRML = 1008_u32
  DISPID_IHTMLIMGELEMENT_DYNSRC = 1009_u32
  DISPID_IHTMLIMGELEMENT_READYSTATE = 70652_u32
  DISPID_IHTMLIMGELEMENT_COMPLETE = 1010_u32
  DISPID_IHTMLIMGELEMENT_LOOP = 1011_u32
  DISPID_IHTMLIMGELEMENT_ALIGN = 65609_u32
  DISPID_IHTMLIMGELEMENT_ONLOAD = 71568_u32
  DISPID_IHTMLIMGELEMENT_ONERROR = 71565_u32
  DISPID_IHTMLIMGELEMENT_ONABORT = 71564_u32
  DISPID_IHTMLIMGELEMENT_NAME = 65536_u32
  DISPID_IHTMLIMGELEMENT_WIDTH = 65541_u32
  DISPID_IHTMLIMGELEMENT_HEIGHT = 65542_u32
  DISPID_IHTMLIMGELEMENT_START = 1013_u32
  DISPID_IHTMLIMGELEMENT2_LONGDESC = 2019_u32
  DISPID_IHTMLIMGELEMENT3_IE8_LONGDESC = 1151_u32
  DISPID_IHTMLIMGELEMENT3_IE8_VRML = 1152_u32
  DISPID_IHTMLIMGELEMENT3_IE8_LOWSRC = 1153_u32
  DISPID_IHTMLIMGELEMENT3_IE8_DYNSRC = 1154_u32
  DISPID_IHTMLIMGELEMENT4_NATURALWIDTH = 1155_u32
  DISPID_IHTMLIMGELEMENT4_NATURALHEIGHT = 1156_u32
  DISPID_IHTMLMSIMGELEMENT_MSPLAYTODISABLED = 1157_u32
  DISPID_IHTMLMSIMGELEMENT_MSPLAYTOPRIMARY = 1158_u32
  DISPID_IHTMLIMAGEELEMENTFACTORY_CREATE = 0_u32
  DISPID_HTMLIMGEVENTS2_ONLOAD = 1003_u32
  DISPID_HTMLIMGEVENTS2_ONERROR = 1002_u32
  DISPID_HTMLIMGEVENTS2_ONABORT = 1000_u32
  DISPID_HTMLIMGEVENTS_ONLOAD = 1003_u32
  DISPID_HTMLIMGEVENTS_ONERROR = 1002_u32
  DISPID_HTMLIMGEVENTS_ONABORT = 1000_u32
  DISPID_IHTMLBODYELEMENT_BACKGROUND = 70537_u32
  DISPID_IHTMLBODYELEMENT_BGPROPERTIES = 70581_u32
  DISPID_IHTMLBODYELEMENT_LEFTMARGIN = 70576_u32
  DISPID_IHTMLBODYELEMENT_TOPMARGIN = 70573_u32
  DISPID_IHTMLBODYELEMENT_RIGHTMARGIN = 70574_u32
  DISPID_IHTMLBODYELEMENT_BOTTOMMARGIN = 70575_u32
  DISPID_IHTMLBODYELEMENT_NOWRAP = 70541_u32
  DISPID_IHTMLBODYELEMENT_BGCOLOR = -501_i32
  DISPID_IHTMLBODYELEMENT_TEXT = 70538_u32
  DISPID_IHTMLBODYELEMENT_LINK = 2010_u32
  DISPID_IHTMLBODYELEMENT_VLINK = 2012_u32
  DISPID_IHTMLBODYELEMENT_ALINK = 2011_u32
  DISPID_IHTMLBODYELEMENT_ONLOAD = 71568_u32
  DISPID_IHTMLBODYELEMENT_ONUNLOAD = 71569_u32
  DISPID_IHTMLBODYELEMENT_SCROLL = 70615_u32
  DISPID_IHTMLBODYELEMENT_ONSELECT = 71546_u32
  DISPID_IHTMLBODYELEMENT_ONBEFOREUNLOAD = 71575_u32
  DISPID_IHTMLBODYELEMENT_CREATETEXTRANGE = 2013_u32
  DISPID_IHTMLBODYELEMENT2_ONBEFOREPRINT = 71602_u32
  DISPID_IHTMLBODYELEMENT2_ONAFTERPRINT = 71603_u32
  DISPID_IHTMLBODYELEMENT3_IE8_BACKGROUND = 1150_u32
  DISPID_IHTMLBODYELEMENT3_ONONLINE = 71643_u32
  DISPID_IHTMLBODYELEMENT3_ONOFFLINE = 71644_u32
  DISPID_IHTMLBODYELEMENT3_ONHASHCHANGE = 71645_u32
  DISPID_IHTMLBODYELEMENT4_ONMESSAGE = 71646_u32
  DISPID_IHTMLBODYELEMENT4_ONSTORAGE = 71636_u32
  DISPID_IHTMLBODYELEMENT5_ONPOPSTATE = 71728_u32
  DISPID_IHTMLFONTELEMENT_COLOR = 70538_u32
  DISPID_IHTMLFONTELEMENT_FACE = 70554_u32
  DISPID_IHTMLFONTELEMENT_SIZE = 70555_u32
  DISPID_IHTMLANCHORELEMENT_HREF = 0_u32
  DISPID_IHTMLANCHORELEMENT_TARGET = 1003_u32
  DISPID_IHTMLANCHORELEMENT_REL = 1005_u32
  DISPID_IHTMLANCHORELEMENT_REV = 1006_u32
  DISPID_IHTMLANCHORELEMENT_URN = 1007_u32
  DISPID_IHTMLANCHORELEMENT_METHODS = 1008_u32
  DISPID_IHTMLANCHORELEMENT_NAME = 65536_u32
  DISPID_IHTMLANCHORELEMENT_HOST = 1012_u32
  DISPID_IHTMLANCHORELEMENT_HOSTNAME = 1013_u32
  DISPID_IHTMLANCHORELEMENT_PATHNAME = 1014_u32
  DISPID_IHTMLANCHORELEMENT_PORT = 1015_u32
  DISPID_IHTMLANCHORELEMENT_PROTOCOL = 1016_u32
  DISPID_IHTMLANCHORELEMENT_SEARCH = 1017_u32
  DISPID_IHTMLANCHORELEMENT_HASH = 1018_u32
  DISPID_IHTMLANCHORELEMENT_ONBLUR = 71551_u32
  DISPID_IHTMLANCHORELEMENT_ONFOCUS = 71550_u32
  DISPID_IHTMLANCHORELEMENT_ACCESSKEY = 67541_u32
  DISPID_IHTMLANCHORELEMENT_PROTOCOLLONG = 1031_u32
  DISPID_IHTMLANCHORELEMENT_MIMETYPE = 1030_u32
  DISPID_IHTMLANCHORELEMENT_NAMEPROP = 1032_u32
  DISPID_IHTMLANCHORELEMENT_TABINDEX = 65551_u32
  DISPID_IHTMLANCHORELEMENT_FOCUS = 67536_u32
  DISPID_IHTMLANCHORELEMENT_BLUR = 67538_u32
  DISPID_IHTMLANCHORELEMENT2_CHARSET = 1023_u32
  DISPID_IHTMLANCHORELEMENT2_COORDS = 1024_u32
  DISPID_IHTMLANCHORELEMENT2_HREFLANG = 1025_u32
  DISPID_IHTMLANCHORELEMENT2_SHAPE = 1026_u32
  DISPID_IHTMLANCHORELEMENT2_TYPE = 1027_u32
  DISPID_IHTMLANCHORELEMENT3_IE8_SHAPE = 1151_u32
  DISPID_IHTMLANCHORELEMENT3_IE8_COORDS = 1152_u32
  DISPID_IHTMLANCHORELEMENT3_IE8_HREF = 1153_u32
  DISPID_IHTMLLABELELEMENT_HTMLFOR = 1000_u32
  DISPID_IHTMLLABELELEMENT_ACCESSKEY = 67541_u32
  DISPID_IHTMLLABELELEMENT2_FORM = 1002_u32
  DISPID_IHTMLLISTELEMENT2_COMPACT = 1001_u32
  DISPID_IHTMLULISTELEMENT_COMPACT = 1001_u32
  DISPID_IHTMLULISTELEMENT_TYPE = 70553_u32
  DISPID_IHTMLOLISTELEMENT_COMPACT = 1001_u32
  DISPID_IHTMLOLISTELEMENT_START = 1003_u32
  DISPID_IHTMLOLISTELEMENT_TYPE = 70553_u32
  DISPID_IHTMLLIELEMENT_TYPE = 70553_u32
  DISPID_IHTMLLIELEMENT_VALUE = 1001_u32
  DISPID_IHTMLBLOCKELEMENT_CLEAR = 70552_u32
  DISPID_IHTMLBLOCKELEMENT2_CITE = 1001_u32
  DISPID_IHTMLBLOCKELEMENT2_WIDTH = 1002_u32
  DISPID_IHTMLBLOCKELEMENT3_IE8_CITE = 1150_u32
  DISPID_IHTMLDIVELEMENT_ALIGN = 65608_u32
  DISPID_IHTMLDIVELEMENT_NOWRAP = 70541_u32
  DISPID_IHTMLDDELEMENT_NOWRAP = 70541_u32
  DISPID_IHTMLDTELEMENT_NOWRAP = 70541_u32
  DISPID_IHTMLBRELEMENT_CLEAR = 70552_u32
  DISPID_IHTMLDLISTELEMENT_COMPACT = 1001_u32
  DISPID_IHTMLHRELEMENT_ALIGN = 65608_u32
  DISPID_IHTMLHRELEMENT_COLOR = 70538_u32
  DISPID_IHTMLHRELEMENT_NOSHADE = 1001_u32
  DISPID_IHTMLHRELEMENT_WIDTH = 65541_u32
  DISPID_IHTMLHRELEMENT_SIZE = 65542_u32
  DISPID_IHTMLPARAELEMENT_ALIGN = 65608_u32
  DISPID_IHTMLELEMENTCOLLECTION_TOSTRING = 1501_u32
  DISPID_IHTMLELEMENTCOLLECTION_LENGTH = 1500_u32
  DISPID_IHTMLELEMENTCOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLELEMENTCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLELEMENTCOLLECTION_TAGS = 1502_u32
  DISPID_IHTMLELEMENTCOLLECTION2_URNS = 1505_u32
  DISPID_IHTMLELEMENTCOLLECTION3_NAMEDITEM = 1506_u32
  DISPID_IHTMLELEMENTCOLLECTION4_IE8_LENGTH = 1150_u32
  DISPID_IHTMLELEMENTCOLLECTION4_IE8_ITEM = 1152_u32
  DISPID_IHTMLELEMENTCOLLECTION4_IE8_NAMEDITEM = 1153_u32
  DISPID_IHTMLHEADERELEMENT_ALIGN = 65608_u32
  DISPID_IHTMLSELECTELEMENT_SIZE = 1002_u32
  DISPID_IHTMLSELECTELEMENT_MULTIPLE = 1003_u32
  DISPID_IHTMLSELECTELEMENT_NAME = 65536_u32
  DISPID_IHTMLSELECTELEMENT_OPTIONS = 1005_u32
  DISPID_IHTMLSELECTELEMENT_ONCHANGE = 71566_u32
  DISPID_IHTMLSELECTELEMENT_SELECTEDINDEX = 1010_u32
  DISPID_IHTMLSELECTELEMENT_TYPE = 1012_u32
  DISPID_IHTMLSELECTELEMENT_VALUE = 1011_u32
  DISPID_IHTMLSELECTELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLSELECTELEMENT_FORM = 67540_u32
  DISPID_IHTMLSELECTELEMENT_ADD = 1503_u32
  DISPID_IHTMLSELECTELEMENT_REMOVE = 1504_u32
  DISPID_IHTMLSELECTELEMENT_LENGTH = 1500_u32
  DISPID_IHTMLSELECTELEMENT__NEWENUM = -4_i32
  DISPID_IHTMLSELECTELEMENT_ITEM = 0_u32
  DISPID_IHTMLSELECTELEMENT_TAGS = 1502_u32
  DISPID_IHTMLSELECTELEMENT2_URNS = 1505_u32
  DISPID_IHTMLSELECTELEMENT4_NAMEDITEM = 1506_u32
  DISPID_IHTMLSELECTELEMENT5_IE8_ADD = 1150_u32
  DISPID_IHTMLSELECTELEMENT6_IE9_ADD = 1151_u32
  DISPID_IHTMLSELECTELEMENT6_IE9_VALUE = 1152_u32
  DISPID_HTMLSELECTELEMENTEVENTS2_ONCHANGE = 1001_u32
  DISPID_HTMLSELECTELEMENTEVENTS_ONCHANGE = 1001_u32
  DISPID_IHTMLSELECTIONOBJECT_CREATERANGE = 1001_u32
  DISPID_IHTMLSELECTIONOBJECT_EMPTY = 1002_u32
  DISPID_IHTMLSELECTIONOBJECT_CLEAR = 1003_u32
  DISPID_IHTMLSELECTIONOBJECT_TYPE = 1004_u32
  DISPID_IHTMLSELECTIONOBJECT2_CREATERANGECOLLECTION = 1005_u32
  DISPID_IHTMLSELECTIONOBJECT2_TYPEDETAIL = 1006_u32
  DISPID_IHTMLSELECTION_ANCHORNODE = 1001_u32
  DISPID_IHTMLSELECTION_ANCHOROFFSET = 1002_u32
  DISPID_IHTMLSELECTION_FOCUSNODE = 1003_u32
  DISPID_IHTMLSELECTION_FOCUSOFFSET = 1004_u32
  DISPID_IHTMLSELECTION_ISCOLLAPSED = 1005_u32
  DISPID_IHTMLSELECTION_COLLAPSE = 1006_u32
  DISPID_IHTMLSELECTION_COLLAPSETOSTART = 1007_u32
  DISPID_IHTMLSELECTION_COLLAPSETOEND = 1008_u32
  DISPID_IHTMLSELECTION_SELECTALLCHILDREN = 1009_u32
  DISPID_IHTMLSELECTION_DELETEFROMDOCUMENT = 1010_u32
  DISPID_IHTMLSELECTION_RANGECOUNT = 1011_u32
  DISPID_IHTMLSELECTION_GETRANGEAT = 1012_u32
  DISPID_IHTMLSELECTION_ADDRANGE = 1013_u32
  DISPID_IHTMLSELECTION_REMOVERANGE = 1014_u32
  DISPID_IHTMLSELECTION_REMOVEALLRANGES = 1015_u32
  DISPID_IHTMLSELECTION_TOSTRING = 1016_u32
  DISPID_IHTMLOPTIONELEMENT_SELECTED = 1001_u32
  DISPID_IHTMLOPTIONELEMENT_VALUE = 1002_u32
  DISPID_IHTMLOPTIONELEMENT_DEFAULTSELECTED = 1003_u32
  DISPID_IHTMLOPTIONELEMENT_INDEX = 1005_u32
  DISPID_IHTMLOPTIONELEMENT_TEXT = 1004_u32
  DISPID_IHTMLOPTIONELEMENT_FORM = 1006_u32
  DISPID_IHTMLOPTIONELEMENT3_LABEL = 1007_u32
  DISPID_IHTMLOPTIONELEMENT4_IE9_VALUE = 1008_u32
  DISPID_IHTMLOPTIONELEMENTFACTORY_CREATE = 0_u32
  DISPID_IHTMLINPUTELEMENT_TYPE = 2000_u32
  DISPID_IHTMLINPUTELEMENT_VALUE = 70637_u32
  DISPID_IHTMLINPUTELEMENT_NAME = 65536_u32
  DISPID_IHTMLINPUTELEMENT_STATUS = 2001_u32
  DISPID_IHTMLINPUTELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLINPUTELEMENT_FORM = 67540_u32
  DISPID_IHTMLINPUTELEMENT_SIZE = 2002_u32
  DISPID_IHTMLINPUTELEMENT_MAXLENGTH = 2003_u32
  DISPID_IHTMLINPUTELEMENT_SELECT = 2004_u32
  DISPID_IHTMLINPUTELEMENT_ONCHANGE = 71566_u32
  DISPID_IHTMLINPUTELEMENT_ONSELECT = 71546_u32
  DISPID_IHTMLINPUTELEMENT_DEFAULTVALUE = 70619_u32
  DISPID_IHTMLINPUTELEMENT_READONLY = 2005_u32
  DISPID_IHTMLINPUTELEMENT_CREATETEXTRANGE = 2006_u32
  DISPID_IHTMLINPUTELEMENT_INDETERMINATE = 2007_u32
  DISPID_IHTMLINPUTELEMENT_DEFAULTCHECKED = 2008_u32
  DISPID_IHTMLINPUTELEMENT_CHECKED = 2009_u32
  DISPID_IHTMLINPUTELEMENT_BORDER = 2012_u32
  DISPID_IHTMLINPUTELEMENT_VSPACE = 2013_u32
  DISPID_IHTMLINPUTELEMENT_HSPACE = 2014_u32
  DISPID_IHTMLINPUTELEMENT_ALT = 2010_u32
  DISPID_IHTMLINPUTELEMENT_SRC = 2011_u32
  DISPID_IHTMLINPUTELEMENT_LOWSRC = 2015_u32
  DISPID_IHTMLINPUTELEMENT_VRML = 2016_u32
  DISPID_IHTMLINPUTELEMENT_DYNSRC = 2017_u32
  DISPID_IHTMLINPUTELEMENT_READYSTATE = 70652_u32
  DISPID_IHTMLINPUTELEMENT_COMPLETE = 2018_u32
  DISPID_IHTMLINPUTELEMENT_LOOP = 2019_u32
  DISPID_IHTMLINPUTELEMENT_ALIGN = 65609_u32
  DISPID_IHTMLINPUTELEMENT_ONLOAD = 71568_u32
  DISPID_IHTMLINPUTELEMENT_ONERROR = 71565_u32
  DISPID_IHTMLINPUTELEMENT_ONABORT = 71564_u32
  DISPID_IHTMLINPUTELEMENT_WIDTH = 65541_u32
  DISPID_IHTMLINPUTELEMENT_HEIGHT = 65542_u32
  DISPID_IHTMLINPUTELEMENT_START = 2020_u32
  DISPID_IHTMLINPUTELEMENT2_ACCEPT = 2022_u32
  DISPID_IHTMLINPUTELEMENT2_USEMAP = 2023_u32
  DISPID_IHTMLINPUTELEMENT3_IE8_SRC = 1150_u32
  DISPID_IHTMLINPUTELEMENT3_IE8_LOWSRC = 1151_u32
  DISPID_IHTMLINPUTELEMENT3_IE8_VRML = 1152_u32
  DISPID_IHTMLINPUTELEMENT3_IE8_DYNSRC = 1153_u32
  DISPID_IHTMLINPUTBUTTONELEMENT_TYPE = 2000_u32
  DISPID_IHTMLINPUTBUTTONELEMENT_VALUE = 70637_u32
  DISPID_IHTMLINPUTBUTTONELEMENT_NAME = 65536_u32
  DISPID_IHTMLINPUTBUTTONELEMENT_STATUS = 2021_u32
  DISPID_IHTMLINPUTBUTTONELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLINPUTBUTTONELEMENT_FORM = 67540_u32
  DISPID_IHTMLINPUTBUTTONELEMENT_CREATETEXTRANGE = 2006_u32
  DISPID_IHTMLINPUTHIDDENELEMENT_TYPE = 2000_u32
  DISPID_IHTMLINPUTHIDDENELEMENT_VALUE = 70637_u32
  DISPID_IHTMLINPUTHIDDENELEMENT_NAME = 65536_u32
  DISPID_IHTMLINPUTHIDDENELEMENT_STATUS = 2021_u32
  DISPID_IHTMLINPUTHIDDENELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLINPUTHIDDENELEMENT_FORM = 67540_u32
  DISPID_IHTMLINPUTHIDDENELEMENT_CREATETEXTRANGE = 2006_u32
  DISPID_IHTMLINPUTTEXTELEMENT_TYPE = 2000_u32
  DISPID_IHTMLINPUTTEXTELEMENT_VALUE = 70637_u32
  DISPID_IHTMLINPUTTEXTELEMENT_NAME = 65536_u32
  DISPID_IHTMLINPUTTEXTELEMENT_STATUS = 2021_u32
  DISPID_IHTMLINPUTTEXTELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLINPUTTEXTELEMENT_FORM = 67540_u32
  DISPID_IHTMLINPUTTEXTELEMENT_DEFAULTVALUE = 70619_u32
  DISPID_IHTMLINPUTTEXTELEMENT_SIZE = 2002_u32
  DISPID_IHTMLINPUTTEXTELEMENT_MAXLENGTH = 2003_u32
  DISPID_IHTMLINPUTTEXTELEMENT_SELECT = 2004_u32
  DISPID_IHTMLINPUTTEXTELEMENT_ONCHANGE = 71566_u32
  DISPID_IHTMLINPUTTEXTELEMENT_ONSELECT = 71546_u32
  DISPID_IHTMLINPUTTEXTELEMENT_READONLY = 2005_u32
  DISPID_IHTMLINPUTTEXTELEMENT_CREATETEXTRANGE = 2006_u32
  DISPID_IHTMLINPUTTEXTELEMENT2_SELECTIONSTART = 2025_u32
  DISPID_IHTMLINPUTTEXTELEMENT2_SELECTIONEND = 2026_u32
  DISPID_IHTMLINPUTTEXTELEMENT2_SETSELECTIONRANGE = 2027_u32
  DISPID_IHTMLINPUTFILEELEMENT_TYPE = 2000_u32
  DISPID_IHTMLINPUTFILEELEMENT_NAME = 65536_u32
  DISPID_IHTMLINPUTFILEELEMENT_STATUS = 2021_u32
  DISPID_IHTMLINPUTFILEELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLINPUTFILEELEMENT_FORM = 67540_u32
  DISPID_IHTMLINPUTFILEELEMENT_SIZE = 2002_u32
  DISPID_IHTMLINPUTFILEELEMENT_MAXLENGTH = 2003_u32
  DISPID_IHTMLINPUTFILEELEMENT_SELECT = 2004_u32
  DISPID_IHTMLINPUTFILEELEMENT_ONCHANGE = 71566_u32
  DISPID_IHTMLINPUTFILEELEMENT_ONSELECT = 71546_u32
  DISPID_IHTMLINPUTFILEELEMENT_VALUE = 70637_u32
  DISPID_IHTMLOPTIONBUTTONELEMENT_VALUE = 70637_u32
  DISPID_IHTMLOPTIONBUTTONELEMENT_TYPE = 2000_u32
  DISPID_IHTMLOPTIONBUTTONELEMENT_NAME = 65536_u32
  DISPID_IHTMLOPTIONBUTTONELEMENT_CHECKED = 2009_u32
  DISPID_IHTMLOPTIONBUTTONELEMENT_DEFAULTCHECKED = 2008_u32
  DISPID_IHTMLOPTIONBUTTONELEMENT_ONCHANGE = 71566_u32
  DISPID_IHTMLOPTIONBUTTONELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLOPTIONBUTTONELEMENT_STATUS = 2001_u32
  DISPID_IHTMLOPTIONBUTTONELEMENT_INDETERMINATE = 2007_u32
  DISPID_IHTMLOPTIONBUTTONELEMENT_FORM = 67540_u32
  DISPID_IHTMLINPUTIMAGE_TYPE = 2000_u32
  DISPID_IHTMLINPUTIMAGE_DISABLED = 65612_u32
  DISPID_IHTMLINPUTIMAGE_BORDER = 2012_u32
  DISPID_IHTMLINPUTIMAGE_VSPACE = 2013_u32
  DISPID_IHTMLINPUTIMAGE_HSPACE = 2014_u32
  DISPID_IHTMLINPUTIMAGE_ALT = 2010_u32
  DISPID_IHTMLINPUTIMAGE_SRC = 2011_u32
  DISPID_IHTMLINPUTIMAGE_LOWSRC = 2015_u32
  DISPID_IHTMLINPUTIMAGE_VRML = 2016_u32
  DISPID_IHTMLINPUTIMAGE_DYNSRC = 2017_u32
  DISPID_IHTMLINPUTIMAGE_READYSTATE = 70652_u32
  DISPID_IHTMLINPUTIMAGE_COMPLETE = 2018_u32
  DISPID_IHTMLINPUTIMAGE_LOOP = 2019_u32
  DISPID_IHTMLINPUTIMAGE_ALIGN = 65609_u32
  DISPID_IHTMLINPUTIMAGE_ONLOAD = 71568_u32
  DISPID_IHTMLINPUTIMAGE_ONERROR = 71565_u32
  DISPID_IHTMLINPUTIMAGE_ONABORT = 71564_u32
  DISPID_IHTMLINPUTIMAGE_NAME = 65536_u32
  DISPID_IHTMLINPUTIMAGE_WIDTH = 65541_u32
  DISPID_IHTMLINPUTIMAGE_HEIGHT = 65542_u32
  DISPID_IHTMLINPUTIMAGE_START = 2020_u32
  DISPID_IHTMLINPUTRANGEELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLINPUTRANGEELEMENT_TYPE = 2000_u32
  DISPID_IHTMLINPUTRANGEELEMENT_ALT = 2010_u32
  DISPID_IHTMLINPUTRANGEELEMENT_NAME = 65536_u32
  DISPID_IHTMLINPUTRANGEELEMENT_VALUE = 70637_u32
  DISPID_IHTMLINPUTRANGEELEMENT_MIN = 2028_u32
  DISPID_IHTMLINPUTRANGEELEMENT_MAX = 2029_u32
  DISPID_IHTMLINPUTRANGEELEMENT_STEP = 2030_u32
  DISPID_IHTMLINPUTRANGEELEMENT_VALUEASNUMBER = 2031_u32
  DISPID_IHTMLINPUTRANGEELEMENT_STEPUP = 2033_u32
  DISPID_IHTMLINPUTRANGEELEMENT_STEPDOWN = 2032_u32
  DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONCHANGE = 1001_u32
  DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONSELECT = 1006_u32
  DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONLOAD = 1003_u32
  DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONERROR = 1002_u32
  DISPID_HTMLINPUTTEXTELEMENTEVENTS2_ONABORT = 1000_u32
  DISPID_HTMLINPUTIMAGEEVENTS2_ONLOAD = 1003_u32
  DISPID_HTMLINPUTIMAGEEVENTS2_ONERROR = 1002_u32
  DISPID_HTMLINPUTIMAGEEVENTS2_ONABORT = 1000_u32
  DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONCHANGE = 1001_u32
  DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONSELECT = 1006_u32
  DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONLOAD = 1003_u32
  DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONERROR = 1002_u32
  DISPID_HTMLINPUTTEXTELEMENTEVENTS_ONABORT = 1000_u32
  DISPID_HTMLINPUTIMAGEEVENTS_ONLOAD = 1003_u32
  DISPID_HTMLINPUTIMAGEEVENTS_ONERROR = 1002_u32
  DISPID_HTMLINPUTIMAGEEVENTS_ONABORT = 1000_u32
  DISPID_IHTMLTEXTAREAELEMENT_TYPE = 2000_u32
  DISPID_IHTMLTEXTAREAELEMENT_VALUE = 70637_u32
  DISPID_IHTMLTEXTAREAELEMENT_NAME = 65536_u32
  DISPID_IHTMLTEXTAREAELEMENT_STATUS = 2001_u32
  DISPID_IHTMLTEXTAREAELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLTEXTAREAELEMENT_FORM = 67540_u32
  DISPID_IHTMLTEXTAREAELEMENT_DEFAULTVALUE = 70619_u32
  DISPID_IHTMLTEXTAREAELEMENT_SELECT = 7005_u32
  DISPID_IHTMLTEXTAREAELEMENT_ONCHANGE = 71566_u32
  DISPID_IHTMLTEXTAREAELEMENT_ONSELECT = 71546_u32
  DISPID_IHTMLTEXTAREAELEMENT_READONLY = 7004_u32
  DISPID_IHTMLTEXTAREAELEMENT_ROWS = 7001_u32
  DISPID_IHTMLTEXTAREAELEMENT_COLS = 7002_u32
  DISPID_IHTMLTEXTAREAELEMENT_WRAP = 7003_u32
  DISPID_IHTMLTEXTAREAELEMENT_CREATETEXTRANGE = 7006_u32
  DISPID_IHTMLTEXTAREAELEMENT2_SELECTIONSTART = 7007_u32
  DISPID_IHTMLTEXTAREAELEMENT2_SELECTIONEND = 7008_u32
  DISPID_IHTMLTEXTAREAELEMENT2_SETSELECTIONRANGE = 7009_u32
  DISPID_IHTMLBUTTONELEMENT_TYPE = 2000_u32
  DISPID_IHTMLBUTTONELEMENT_VALUE = 70637_u32
  DISPID_IHTMLBUTTONELEMENT_NAME = 65536_u32
  DISPID_IHTMLBUTTONELEMENT_STATUS = 8001_u32
  DISPID_IHTMLBUTTONELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLBUTTONELEMENT_FORM = 67540_u32
  DISPID_IHTMLBUTTONELEMENT_CREATETEXTRANGE = 8002_u32
  DISPID_IHTMLBUTTONELEMENT2_IE9_TYPE = 8003_u32
  DISPID_IHTMLMARQUEEELEMENT_BGCOLOR = -501_i32
  DISPID_IHTMLMARQUEEELEMENT_SCROLLDELAY = 6000_u32
  DISPID_IHTMLMARQUEEELEMENT_DIRECTION = 6001_u32
  DISPID_IHTMLMARQUEEELEMENT_BEHAVIOR = 6002_u32
  DISPID_IHTMLMARQUEEELEMENT_SCROLLAMOUNT = 6003_u32
  DISPID_IHTMLMARQUEEELEMENT_LOOP = 6004_u32
  DISPID_IHTMLMARQUEEELEMENT_VSPACE = 6005_u32
  DISPID_IHTMLMARQUEEELEMENT_HSPACE = 6006_u32
  DISPID_IHTMLMARQUEEELEMENT_ONFINISH = 71562_u32
  DISPID_IHTMLMARQUEEELEMENT_ONSTART = 71563_u32
  DISPID_IHTMLMARQUEEELEMENT_ONBOUNCE = 71556_u32
  DISPID_IHTMLMARQUEEELEMENT_WIDTH = 65541_u32
  DISPID_IHTMLMARQUEEELEMENT_HEIGHT = 65542_u32
  DISPID_IHTMLMARQUEEELEMENT_TRUESPEED = 6007_u32
  DISPID_IHTMLMARQUEEELEMENT_START = 6010_u32
  DISPID_IHTMLMARQUEEELEMENT_STOP = 6011_u32
  DISPID_HTMLMARQUEEELEMENTEVENTS2_ONBOUNCE = 1009_u32
  DISPID_HTMLMARQUEEELEMENTEVENTS2_ONFINISH = 1010_u32
  DISPID_HTMLMARQUEEELEMENTEVENTS2_ONSTART = 1011_u32
  DISPID_HTMLMARQUEEELEMENTEVENTS_ONBOUNCE = 1009_u32
  DISPID_HTMLMARQUEEELEMENTEVENTS_ONFINISH = 1010_u32
  DISPID_HTMLMARQUEEELEMENTEVENTS_ONSTART = 1011_u32
  DISPID_IHTMLHTMLELEMENT_VERSION = 1001_u32
  DISPID_IHTMLHEADELEMENT_PROFILE = 1001_u32
  DISPID_IHTMLHEADELEMENT2_IE8_PROFILE = 1150_u32
  DISPID_IHTMLTITLEELEMENT_TEXT = 70637_u32
  DISPID_IHTMLMETAELEMENT_HTTPEQUIV = 1001_u32
  DISPID_IHTMLMETAELEMENT_CONTENT = 1002_u32
  DISPID_IHTMLMETAELEMENT_NAME = 65536_u32
  DISPID_IHTMLMETAELEMENT_URL = 1003_u32
  DISPID_IHTMLMETAELEMENT_CHARSET = 1013_u32
  DISPID_IHTMLMETAELEMENT2_SCHEME = 1020_u32
  DISPID_IHTMLMETAELEMENT3_IE8_URL = 1150_u32
  DISPID_IHTMLBASEELEMENT_HREF = 1003_u32
  DISPID_IHTMLBASEELEMENT_TARGET = 1004_u32
  DISPID_IHTMLBASEELEMENT2_IE8_HREF = 1150_u32
  DISPID_IHTMLISINDEXELEMENT_PROMPT = 1010_u32
  DISPID_IHTMLISINDEXELEMENT_ACTION = 1011_u32
  DISPID_IHTMLISINDEXELEMENT2_FORM = 1012_u32
  DISPID_IHTMLNEXTIDELEMENT_N = 1012_u32
  DISPID_IHTMLBASEFONTELEMENT_COLOR = 70538_u32
  DISPID_IHTMLBASEFONTELEMENT_FACE = 70554_u32
  DISPID_IHTMLBASEFONTELEMENT_SIZE = 70562_u32
  DISPID_IOMHISTORY_LENGTH = 1_u32
  DISPID_IOMHISTORY_BACK = 2_u32
  DISPID_IOMHISTORY_FORWARD = 3_u32
  DISPID_IOMHISTORY_GO = 4_u32
  DISPID_IHTMLOPSPROFILE_ADDREQUEST = 1_u32
  DISPID_IHTMLOPSPROFILE_CLEARREQUEST = 2_u32
  DISPID_IHTMLOPSPROFILE_DOREQUEST = 3_u32
  DISPID_IHTMLOPSPROFILE_GETATTRIBUTE = 4_u32
  DISPID_IHTMLOPSPROFILE_SETATTRIBUTE = 5_u32
  DISPID_IHTMLOPSPROFILE_COMMITCHANGES = 6_u32
  DISPID_IHTMLOPSPROFILE_ADDREADREQUEST = 7_u32
  DISPID_IHTMLOPSPROFILE_DOREADREQUEST = 8_u32
  DISPID_IHTMLOPSPROFILE_DOWRITEREQUEST = 9_u32
  DISPID_IOMNAVIGATOR_APPCODENAME = 1_u32
  DISPID_IOMNAVIGATOR_APPNAME = 2_u32
  DISPID_IOMNAVIGATOR_APPVERSION = 3_u32
  DISPID_IOMNAVIGATOR_USERAGENT = 4_u32
  DISPID_IOMNAVIGATOR_JAVAENABLED = 5_u32
  DISPID_IOMNAVIGATOR_TAINTENABLED = 6_u32
  DISPID_IOMNAVIGATOR_MIMETYPES = 7_u32
  DISPID_IOMNAVIGATOR_PLUGINS = 8_u32
  DISPID_IOMNAVIGATOR_COOKIEENABLED = 9_u32
  DISPID_IOMNAVIGATOR_OPSPROFILE = 10_u32
  DISPID_IOMNAVIGATOR_TOSTRING = 11_u32
  DISPID_IOMNAVIGATOR_CPUCLASS = 12_u32
  DISPID_IOMNAVIGATOR_SYSTEMLANGUAGE = 13_u32
  DISPID_IOMNAVIGATOR_BROWSERLANGUAGE = 14_u32
  DISPID_IOMNAVIGATOR_USERLANGUAGE = 15_u32
  DISPID_IOMNAVIGATOR_PLATFORM = 16_u32
  DISPID_IOMNAVIGATOR_APPMINORVERSION = 17_u32
  DISPID_IOMNAVIGATOR_CONNECTIONSPEED = 18_u32
  DISPID_IOMNAVIGATOR_ONLINE = 19_u32
  DISPID_IOMNAVIGATOR_USERPROFILE = 20_u32
  DISPID_INAVIGATORGEOLOCATION_GEOLOCATION = 21_u32
  DISPID_INAVIGATORDONOTTRACK_MSDONOTTRACK = 22_u32
  DISPID_IHTMLLOCATION_HREF = 0_u32
  DISPID_IHTMLLOCATION_PROTOCOL = 1_u32
  DISPID_IHTMLLOCATION_HOST = 2_u32
  DISPID_IHTMLLOCATION_HOSTNAME = 3_u32
  DISPID_IHTMLLOCATION_PORT = 4_u32
  DISPID_IHTMLLOCATION_PATHNAME = 5_u32
  DISPID_IHTMLLOCATION_SEARCH = 6_u32
  DISPID_IHTMLLOCATION_HASH = 7_u32
  DISPID_IHTMLLOCATION_RELOAD = 8_u32
  DISPID_IHTMLLOCATION_REPLACE = 9_u32
  DISPID_IHTMLLOCATION_ASSIGN = 10_u32
  DISPID_IHTMLLOCATION_TOSTRING = 11_u32
  DISPID_IHTMLMIMETYPESCOLLECTION_LENGTH = 1_u32
  DISPID_IHTMLPLUGINSCOLLECTION_LENGTH = 1_u32
  DISPID_IHTMLPLUGINSCOLLECTION_REFRESH = 2_u32
  DISPID_IHTMLBOOKMARKCOLLECTION_LENGTH = 1501_u32
  DISPID_IHTMLBOOKMARKCOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLBOOKMARKCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLDATATRANSFER_SETDATA = 1001_u32
  DISPID_IHTMLDATATRANSFER_GETDATA = 1002_u32
  DISPID_IHTMLDATATRANSFER_CLEARDATA = 1003_u32
  DISPID_IHTMLDATATRANSFER_DROPEFFECT = 1004_u32
  DISPID_IHTMLDATATRANSFER_EFFECTALLOWED = 1005_u32
  DISPID_IHTMLEVENTOBJ_SRCELEMENT = 1001_u32
  DISPID_IHTMLEVENTOBJ_ALTKEY = 1002_u32
  DISPID_IHTMLEVENTOBJ_CTRLKEY = 1003_u32
  DISPID_IHTMLEVENTOBJ_SHIFTKEY = 1004_u32
  DISPID_IHTMLEVENTOBJ_RETURNVALUE = 1007_u32
  DISPID_IHTMLEVENTOBJ_CANCELBUBBLE = 1008_u32
  DISPID_IHTMLEVENTOBJ_FROMELEMENT = 1009_u32
  DISPID_IHTMLEVENTOBJ_TOELEMENT = 1010_u32
  DISPID_IHTMLEVENTOBJ_KEYCODE = 1011_u32
  DISPID_IHTMLEVENTOBJ_BUTTON = 1012_u32
  DISPID_IHTMLEVENTOBJ_TYPE = 1013_u32
  DISPID_IHTMLEVENTOBJ_QUALIFIER = 1014_u32
  DISPID_IHTMLEVENTOBJ_REASON = 1015_u32
  DISPID_IHTMLEVENTOBJ_X = 1005_u32
  DISPID_IHTMLEVENTOBJ_Y = 1006_u32
  DISPID_IHTMLEVENTOBJ_CLIENTX = 1020_u32
  DISPID_IHTMLEVENTOBJ_CLIENTY = 1021_u32
  DISPID_IHTMLEVENTOBJ_OFFSETX = 1022_u32
  DISPID_IHTMLEVENTOBJ_OFFSETY = 1023_u32
  DISPID_IHTMLEVENTOBJ_SCREENX = 1024_u32
  DISPID_IHTMLEVENTOBJ_SCREENY = 1025_u32
  DISPID_IHTMLEVENTOBJ_SRCFILTER = 1026_u32
  DISPID_IHTMLEVENTOBJ2_SETATTRIBUTE = 66037_u32
  DISPID_IHTMLEVENTOBJ2_GETATTRIBUTE = 66038_u32
  DISPID_IHTMLEVENTOBJ2_REMOVEATTRIBUTE = 66039_u32
  DISPID_IHTMLEVENTOBJ2_PROPERTYNAME = 1027_u32
  DISPID_IHTMLEVENTOBJ2_BOOKMARKS = 1031_u32
  DISPID_IHTMLEVENTOBJ2_RECORDSET = 1032_u32
  DISPID_IHTMLEVENTOBJ2_DATAFLD = 1033_u32
  DISPID_IHTMLEVENTOBJ2_BOUNDELEMENTS = 1034_u32
  DISPID_IHTMLEVENTOBJ2_REPEAT = 1035_u32
  DISPID_IHTMLEVENTOBJ2_SRCURN = 1036_u32
  DISPID_IHTMLEVENTOBJ2_SRCELEMENT = 1001_u32
  DISPID_IHTMLEVENTOBJ2_ALTKEY = 1002_u32
  DISPID_IHTMLEVENTOBJ2_CTRLKEY = 1003_u32
  DISPID_IHTMLEVENTOBJ2_SHIFTKEY = 1004_u32
  DISPID_IHTMLEVENTOBJ2_FROMELEMENT = 1009_u32
  DISPID_IHTMLEVENTOBJ2_TOELEMENT = 1010_u32
  DISPID_IHTMLEVENTOBJ2_BUTTON = 1012_u32
  DISPID_IHTMLEVENTOBJ2_TYPE = 1013_u32
  DISPID_IHTMLEVENTOBJ2_QUALIFIER = 1014_u32
  DISPID_IHTMLEVENTOBJ2_REASON = 1015_u32
  DISPID_IHTMLEVENTOBJ2_X = 1005_u32
  DISPID_IHTMLEVENTOBJ2_Y = 1006_u32
  DISPID_IHTMLEVENTOBJ2_CLIENTX = 1020_u32
  DISPID_IHTMLEVENTOBJ2_CLIENTY = 1021_u32
  DISPID_IHTMLEVENTOBJ2_OFFSETX = 1022_u32
  DISPID_IHTMLEVENTOBJ2_OFFSETY = 1023_u32
  DISPID_IHTMLEVENTOBJ2_SCREENX = 1024_u32
  DISPID_IHTMLEVENTOBJ2_SCREENY = 1025_u32
  DISPID_IHTMLEVENTOBJ2_SRCFILTER = 1026_u32
  DISPID_IHTMLEVENTOBJ2_DATATRANSFER = 1037_u32
  DISPID_IHTMLEVENTOBJ3_CONTENTOVERFLOW = 1038_u32
  DISPID_IHTMLEVENTOBJ3_SHIFTLEFT = 1039_u32
  DISPID_IHTMLEVENTOBJ3_ALTLEFT = 1040_u32
  DISPID_IHTMLEVENTOBJ3_CTRLLEFT = 1041_u32
  DISPID_IHTMLEVENTOBJ3_IMECOMPOSITIONCHANGE = 1042_u32
  DISPID_IHTMLEVENTOBJ3_IMENOTIFYCOMMAND = 1043_u32
  DISPID_IHTMLEVENTOBJ3_IMENOTIFYDATA = 1044_u32
  DISPID_IHTMLEVENTOBJ3_IMEREQUEST = 1046_u32
  DISPID_IHTMLEVENTOBJ3_IMEREQUESTDATA = 1047_u32
  DISPID_IHTMLEVENTOBJ3_KEYBOARDLAYOUT = 1045_u32
  DISPID_IHTMLEVENTOBJ3_BEHAVIORCOOKIE = 1048_u32
  DISPID_IHTMLEVENTOBJ3_BEHAVIORPART = 1049_u32
  DISPID_IHTMLEVENTOBJ3_NEXTPAGE = 1050_u32
  DISPID_IHTMLEVENTOBJ4_WHEELDELTA = 1051_u32
  DISPID_IHTMLEVENTOBJ5_URL = 1052_u32
  DISPID_IHTMLEVENTOBJ5_DATA = 1054_u32
  DISPID_IHTMLEVENTOBJ5_SOURCE = 1055_u32
  DISPID_IHTMLEVENTOBJ5_ORIGIN = 1053_u32
  DISPID_IHTMLEVENTOBJ5_ISSESSION = 1056_u32
  DISPID_IHTMLEVENTOBJ6_ACTIONURL = 1058_u32
  DISPID_IHTMLEVENTOBJ6_BUTTONID = 1057_u32
  DISPID_IHTMLSTYLEMEDIA_TYPE = 1001_u32
  DISPID_IHTMLSTYLEMEDIA_MATCHMEDIUM = 1002_u32
  DISPID_IHTMLFRAMESCOLLECTION2_ITEM = 0_u32
  DISPID_IHTMLFRAMESCOLLECTION2_LENGTH = 1001_u32
  DISPID_IHTMLSCREEN_COLORDEPTH = 1001_u32
  DISPID_IHTMLSCREEN_BUFFERDEPTH = 1002_u32
  DISPID_IHTMLSCREEN_WIDTH = 1003_u32
  DISPID_IHTMLSCREEN_HEIGHT = 1004_u32
  DISPID_IHTMLSCREEN_UPDATEINTERVAL = 1005_u32
  DISPID_IHTMLSCREEN_AVAILHEIGHT = 1006_u32
  DISPID_IHTMLSCREEN_AVAILWIDTH = 1007_u32
  DISPID_IHTMLSCREEN_FONTSMOOTHINGENABLED = 1008_u32
  DISPID_IHTMLSCREEN2_LOGICALXDPI = 1009_u32
  DISPID_IHTMLSCREEN2_LOGICALYDPI = 1010_u32
  DISPID_IHTMLSCREEN2_DEVICEXDPI = 1011_u32
  DISPID_IHTMLSCREEN2_DEVICEYDPI = 1012_u32
  DISPID_IHTMLSCREEN3_SYSTEMXDPI = 1013_u32
  DISPID_IHTMLSCREEN3_SYSTEMYDPI = 1014_u32
  DISPID_IHTMLSCREEN4_PIXELDEPTH = 1015_u32
  DISPID_IHTMLWINDOW2_FRAMES = 1100_u32
  DISPID_IHTMLWINDOW2_DEFAULTSTATUS = 1101_u32
  DISPID_IHTMLWINDOW2_STATUS = 1102_u32
  DISPID_IHTMLWINDOW2_SETTIMEOUT = 1172_u32
  DISPID_IHTMLWINDOW2_CLEARTIMEOUT = 1104_u32
  DISPID_IHTMLWINDOW2_ALERT = 1105_u32
  DISPID_IHTMLWINDOW2_CONFIRM = 1110_u32
  DISPID_IHTMLWINDOW2_PROMPT = 1111_u32
  DISPID_IHTMLWINDOW2_IMAGE = 1125_u32
  DISPID_IHTMLWINDOW2_LOCATION = 14_u32
  DISPID_IHTMLWINDOW2_HISTORY = 2_u32
  DISPID_IHTMLWINDOW2_CLOSE = 3_u32
  DISPID_IHTMLWINDOW2_OPENER = 4_u32
  DISPID_IHTMLWINDOW2_NAVIGATOR = 5_u32
  DISPID_IHTMLWINDOW2_NAME = 11_u32
  DISPID_IHTMLWINDOW2_PARENT = 12_u32
  DISPID_IHTMLWINDOW2_OPEN = 13_u32
  DISPID_IHTMLWINDOW2_SELF = 20_u32
  DISPID_IHTMLWINDOW2_TOP = 21_u32
  DISPID_IHTMLWINDOW2_WINDOW = 22_u32
  DISPID_IHTMLWINDOW2_NAVIGATE = 25_u32
  DISPID_IHTMLWINDOW2_ONFOCUS = 71550_u32
  DISPID_IHTMLWINDOW2_ONBLUR = 71551_u32
  DISPID_IHTMLWINDOW2_ONLOAD = 71568_u32
  DISPID_IHTMLWINDOW2_ONBEFOREUNLOAD = 71575_u32
  DISPID_IHTMLWINDOW2_ONUNLOAD = 71569_u32
  DISPID_IHTMLWINDOW2_ONHELP = 71549_u32
  DISPID_IHTMLWINDOW2_ONERROR = 71565_u32
  DISPID_IHTMLWINDOW2_ONRESIZE = 71572_u32
  DISPID_IHTMLWINDOW2_ONSCROLL = 71567_u32
  DISPID_IHTMLWINDOW2_DOCUMENT = 1151_u32
  DISPID_IHTMLWINDOW2_EVENT = 1152_u32
  DISPID_IHTMLWINDOW2__NEWENUM = 1153_u32
  DISPID_IHTMLWINDOW2_SHOWMODALDIALOG = 1154_u32
  DISPID_IHTMLWINDOW2_SHOWHELP = 1155_u32
  DISPID_IHTMLWINDOW2_SCREEN = 1156_u32
  DISPID_IHTMLWINDOW2_OPTION = 1157_u32
  DISPID_IHTMLWINDOW2_FOCUS = 1158_u32
  DISPID_IHTMLWINDOW2_CLOSED = 23_u32
  DISPID_IHTMLWINDOW2_BLUR = 1159_u32
  DISPID_IHTMLWINDOW2_SCROLL = 1160_u32
  DISPID_IHTMLWINDOW2_CLIENTINFORMATION = 1161_u32
  DISPID_IHTMLWINDOW2_SETINTERVAL = 1173_u32
  DISPID_IHTMLWINDOW2_CLEARINTERVAL = 1163_u32
  DISPID_IHTMLWINDOW2_OFFSCREENBUFFERING = 1164_u32
  DISPID_IHTMLWINDOW2_EXECSCRIPT = 1165_u32
  DISPID_IHTMLWINDOW2_TOSTRING = 1166_u32
  DISPID_IHTMLWINDOW2_SCROLLBY = 1167_u32
  DISPID_IHTMLWINDOW2_SCROLLTO = 1168_u32
  DISPID_IHTMLWINDOW2_MOVETO = 6_u32
  DISPID_IHTMLWINDOW2_MOVEBY = 7_u32
  DISPID_IHTMLWINDOW2_RESIZETO = 9_u32
  DISPID_IHTMLWINDOW2_RESIZEBY = 8_u32
  DISPID_IHTMLWINDOW2_EXTERNAL = 1169_u32
  DISPID_IHTMLWINDOW3_SCREENLEFT = 1170_u32
  DISPID_IHTMLWINDOW3_SCREENTOP = 1171_u32
  DISPID_IHTMLWINDOW3_ATTACHEVENT = 66043_u32
  DISPID_IHTMLWINDOW3_DETACHEVENT = 66044_u32
  DISPID_IHTMLWINDOW3_SETTIMEOUT = 1103_u32
  DISPID_IHTMLWINDOW3_SETINTERVAL = 1162_u32
  DISPID_IHTMLWINDOW3_PRINT = 1174_u32
  DISPID_IHTMLWINDOW3_ONBEFOREPRINT = 71602_u32
  DISPID_IHTMLWINDOW3_ONAFTERPRINT = 71603_u32
  DISPID_IHTMLWINDOW3_CLIPBOARDDATA = 1175_u32
  DISPID_IHTMLWINDOW3_SHOWMODELESSDIALOG = 1176_u32
  DISPID_IHTMLWINDOW4_CREATEPOPUP = 1180_u32
  DISPID_IHTMLWINDOW4_FRAMEELEMENT = 1181_u32
  DISPID_IHTMLWINDOW5_XMLHTTPREQUEST = 1190_u32
  DISPID_IHTMLWINDOW6_XDOMAINREQUEST = 1191_u32
  DISPID_IHTMLWINDOW6_SESSIONSTORAGE = 1192_u32
  DISPID_IHTMLWINDOW6_LOCALSTORAGE = 1193_u32
  DISPID_IHTMLWINDOW6_ONHASHCHANGE = 71645_u32
  DISPID_IHTMLWINDOW6_MAXCONNECTIONSPERSERVER = 1194_u32
  DISPID_IHTMLWINDOW6_POSTMESSAGE = 1196_u32
  DISPID_IHTMLWINDOW6_TOSTATICHTML = 1197_u32
  DISPID_IHTMLWINDOW6_ONMESSAGE = 71646_u32
  DISPID_IHTMLWINDOW6_MSWRITEPROFILERMARK = 1198_u32
  DISPID_IHTMLWINDOW7_GETSELECTION = 1199_u32
  DISPID_IHTMLWINDOW7_GETCOMPUTEDSTYLE = 1200_u32
  DISPID_IHTMLWINDOW7_STYLEMEDIA = 1202_u32
  DISPID_IHTMLWINDOW7_PERFORMANCE = 1203_u32
  DISPID_IHTMLWINDOW7_INNERWIDTH = 1204_u32
  DISPID_IHTMLWINDOW7_INNERHEIGHT = 1205_u32
  DISPID_IHTMLWINDOW7_PAGEXOFFSET = 1206_u32
  DISPID_IHTMLWINDOW7_PAGEYOFFSET = 1207_u32
  DISPID_IHTMLWINDOW7_SCREENX = 1208_u32
  DISPID_IHTMLWINDOW7_SCREENY = 1209_u32
  DISPID_IHTMLWINDOW7_OUTERWIDTH = 1210_u32
  DISPID_IHTMLWINDOW7_OUTERHEIGHT = 1211_u32
  DISPID_IHTMLWINDOW7_ONABORT = 71564_u32
  DISPID_IHTMLWINDOW7_ONCANPLAY = 71670_u32
  DISPID_IHTMLWINDOW7_ONCANPLAYTHROUGH = 71671_u32
  DISPID_IHTMLWINDOW7_ONCHANGE = 71566_u32
  DISPID_IHTMLWINDOW7_ONCLICK = 71544_u32
  DISPID_IHTMLWINDOW7_ONCONTEXTMENU = 71601_u32
  DISPID_IHTMLWINDOW7_ONDBLCLICK = 71545_u32
  DISPID_IHTMLWINDOW7_ONDRAG = 71585_u32
  DISPID_IHTMLWINDOW7_ONDRAGEND = 71586_u32
  DISPID_IHTMLWINDOW7_ONDRAGENTER = 71587_u32
  DISPID_IHTMLWINDOW7_ONDRAGLEAVE = 71589_u32
  DISPID_IHTMLWINDOW7_ONDRAGOVER = 71588_u32
  DISPID_IHTMLWINDOW7_ONDRAGSTART = 71571_u32
  DISPID_IHTMLWINDOW7_ONDROP = 71590_u32
  DISPID_IHTMLWINDOW7_ONDURATIONCHANGE = 71672_u32
  DISPID_IHTMLWINDOW7_ONFOCUSIN = 71627_u32
  DISPID_IHTMLWINDOW7_ONFOCUSOUT = 71628_u32
  DISPID_IHTMLWINDOW7_ONINPUT = 71663_u32
  DISPID_IHTMLWINDOW7_ONEMPTIED = 71673_u32
  DISPID_IHTMLWINDOW7_ONENDED = 71674_u32
  DISPID_IHTMLWINDOW7_ONKEYDOWN = 71541_u32
  DISPID_IHTMLWINDOW7_ONKEYPRESS = 71543_u32
  DISPID_IHTMLWINDOW7_ONKEYUP = 71542_u32
  DISPID_IHTMLWINDOW7_ONLOADEDDATA = 71675_u32
  DISPID_IHTMLWINDOW7_ONLOADEDMETADATA = 71676_u32
  DISPID_IHTMLWINDOW7_ONLOADSTART = 71677_u32
  DISPID_IHTMLWINDOW7_ONMOUSEDOWN = 71538_u32
  DISPID_IHTMLWINDOW7_ONMOUSEENTER = 71621_u32
  DISPID_IHTMLWINDOW7_ONMOUSELEAVE = 71622_u32
  DISPID_IHTMLWINDOW7_ONMOUSEMOVE = 71540_u32
  DISPID_IHTMLWINDOW7_ONMOUSEOUT = 71537_u32
  DISPID_IHTMLWINDOW7_ONMOUSEOVER = 71536_u32
  DISPID_IHTMLWINDOW7_ONMOUSEUP = 71539_u32
  DISPID_IHTMLWINDOW7_ONMOUSEWHEEL = 71612_u32
  DISPID_IHTMLWINDOW7_ONOFFLINE = 71644_u32
  DISPID_IHTMLWINDOW7_ONONLINE = 71643_u32
  DISPID_IHTMLWINDOW7_ONPROGRESS = 71681_u32
  DISPID_IHTMLWINDOW7_ONRATECHANGE = 71682_u32
  DISPID_IHTMLWINDOW7_ONREADYSTATECHANGE = 71561_u32
  DISPID_IHTMLWINDOW7_ONRESET = 71548_u32
  DISPID_IHTMLWINDOW7_ONSEEKED = 71683_u32
  DISPID_IHTMLWINDOW7_ONSEEKING = 71684_u32
  DISPID_IHTMLWINDOW7_ONSELECT = 71546_u32
  DISPID_IHTMLWINDOW7_ONSTALLED = 71685_u32
  DISPID_IHTMLWINDOW7_ONSTORAGE = 71636_u32
  DISPID_IHTMLWINDOW7_ONSUBMIT = 71547_u32
  DISPID_IHTMLWINDOW7_ONSUSPEND = 71686_u32
  DISPID_IHTMLWINDOW7_ONTIMEUPDATE = 71687_u32
  DISPID_IHTMLWINDOW7_ONPAUSE = 71678_u32
  DISPID_IHTMLWINDOW7_ONPLAY = 71679_u32
  DISPID_IHTMLWINDOW7_ONPLAYING = 71680_u32
  DISPID_IHTMLWINDOW7_ONVOLUMECHANGE = 71688_u32
  DISPID_IHTMLWINDOW7_ONWAITING = 71689_u32
  DISPID_IHTMLWINDOW8_ONMSPOINTERDOWN = 71690_u32
  DISPID_IHTMLWINDOW8_ONMSPOINTERMOVE = 71691_u32
  DISPID_IHTMLWINDOW8_ONMSPOINTERUP = 71692_u32
  DISPID_IHTMLWINDOW8_ONMSPOINTEROVER = 71693_u32
  DISPID_IHTMLWINDOW8_ONMSPOINTEROUT = 71694_u32
  DISPID_IHTMLWINDOW8_ONMSPOINTERCANCEL = 71695_u32
  DISPID_IHTMLWINDOW8_ONMSPOINTERHOVER = 71696_u32
  DISPID_IHTMLWINDOW8_ONMSGESTURESTART = 71699_u32
  DISPID_IHTMLWINDOW8_ONMSGESTURECHANGE = 71700_u32
  DISPID_IHTMLWINDOW8_ONMSGESTUREEND = 71701_u32
  DISPID_IHTMLWINDOW8_ONMSGESTUREHOLD = 71702_u32
  DISPID_IHTMLWINDOW8_ONMSGESTURETAP = 71703_u32
  DISPID_IHTMLWINDOW8_ONMSGESTUREDOUBLETAP = 71704_u32
  DISPID_IHTMLWINDOW8_ONMSINERTIASTART = 71705_u32
  DISPID_IHTMLWINDOW8_APPLICATIONCACHE = 1213_u32
  DISPID_IHTMLWINDOW8_ONPOPSTATE = 71728_u32
  DISPID_HTMLWINDOWEVENTS3_ONHASHCHANGE = 1066_u32
  DISPID_HTMLWINDOWEVENTS3_ONMESSAGE = 1067_u32
  DISPID_HTMLWINDOWEVENTS2_ONLOAD = 1003_u32
  DISPID_HTMLWINDOWEVENTS2_ONUNLOAD = 1008_u32
  DISPID_HTMLWINDOWEVENTS2_ONHELP = 65546_u32
  DISPID_HTMLWINDOWEVENTS2_ONFOCUS = 65537_u32
  DISPID_HTMLWINDOWEVENTS2_ONERROR = 1002_u32
  DISPID_HTMLWINDOWEVENTS2_ONRESIZE = 1016_u32
  DISPID_HTMLWINDOWEVENTS2_ONSCROLL = 1014_u32
  DISPID_HTMLWINDOWEVENTS2_ONBEFOREUNLOAD = 1017_u32
  DISPID_HTMLWINDOWEVENTS2_ONBEFOREPRINT = 1024_u32
  DISPID_HTMLWINDOWEVENTS2_ONAFTERPRINT = 1025_u32
  DISPID_HTMLWINDOWEVENTS_ONLOAD = 1003_u32
  DISPID_HTMLWINDOWEVENTS_ONUNLOAD = 1008_u32
  DISPID_HTMLWINDOWEVENTS_ONHELP = 65546_u32
  DISPID_HTMLWINDOWEVENTS_ONFOCUS = 65537_u32
  DISPID_HTMLWINDOWEVENTS_ONERROR = 1002_u32
  DISPID_HTMLWINDOWEVENTS_ONRESIZE = 1016_u32
  DISPID_HTMLWINDOWEVENTS_ONSCROLL = 1014_u32
  DISPID_HTMLWINDOWEVENTS_ONBEFOREUNLOAD = 1017_u32
  DISPID_HTMLWINDOWEVENTS_ONBEFOREPRINT = 1024_u32
  DISPID_HTMLWINDOWEVENTS_ONAFTERPRINT = 1025_u32
  DISPID_IHTMLDOCUMENTCOMPATIBLEINFO_USERAGENT = 1001_u32
  DISPID_IHTMLDOCUMENTCOMPATIBLEINFO_VERSION = 1002_u32
  DISPID_IHTMLDOCUMENTCOMPATIBLEINFOCOLLECTION_LENGTH = 1001_u32
  DISPID_IHTMLDOCUMENTCOMPATIBLEINFOCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLDOCUMENT_SCRIPT = 1001_u32
  DISPID_IHTMLDOCUMENT2_ALL = 1003_u32
  DISPID_IHTMLDOCUMENT2_BODY = 1004_u32
  DISPID_IHTMLDOCUMENT2_ACTIVEELEMENT = 1005_u32
  DISPID_IHTMLDOCUMENT2_IMAGES = 1011_u32
  DISPID_IHTMLDOCUMENT2_APPLETS = 1008_u32
  DISPID_IHTMLDOCUMENT2_LINKS = 1009_u32
  DISPID_IHTMLDOCUMENT2_FORMS = 1010_u32
  DISPID_IHTMLDOCUMENT2_ANCHORS = 1007_u32
  DISPID_IHTMLDOCUMENT2_TITLE = 1012_u32
  DISPID_IHTMLDOCUMENT2_SCRIPTS = 1013_u32
  DISPID_IHTMLDOCUMENT2_DESIGNMODE = 1014_u32
  DISPID_IHTMLDOCUMENT2_SELECTION = 1017_u32
  DISPID_IHTMLDOCUMENT2_READYSTATE = 1018_u32
  DISPID_IHTMLDOCUMENT2_FRAMES = 1019_u32
  DISPID_IHTMLDOCUMENT2_EMBEDS = 1015_u32
  DISPID_IHTMLDOCUMENT2_PLUGINS = 1021_u32
  DISPID_IHTMLDOCUMENT2_ALINKCOLOR = 1022_u32
  DISPID_IHTMLDOCUMENT2_BGCOLOR = -501_i32
  DISPID_IHTMLDOCUMENT2_FGCOLOR = 70538_u32
  DISPID_IHTMLDOCUMENT2_LINKCOLOR = 1024_u32
  DISPID_IHTMLDOCUMENT2_VLINKCOLOR = 1023_u32
  DISPID_IHTMLDOCUMENT2_REFERRER = 1027_u32
  DISPID_IHTMLDOCUMENT2_LOCATION = 1026_u32
  DISPID_IHTMLDOCUMENT2_LASTMODIFIED = 1028_u32
  DISPID_IHTMLDOCUMENT2_URL = 1025_u32
  DISPID_IHTMLDOCUMENT2_DOMAIN = 1029_u32
  DISPID_IHTMLDOCUMENT2_COOKIE = 1030_u32
  DISPID_IHTMLDOCUMENT2_EXPANDO = 1031_u32
  DISPID_IHTMLDOCUMENT2_CHARSET = 1032_u32
  DISPID_IHTMLDOCUMENT2_DEFAULTCHARSET = 1033_u32
  DISPID_IHTMLDOCUMENT2_MIMETYPE = 1041_u32
  DISPID_IHTMLDOCUMENT2_FILESIZE = 1042_u32
  DISPID_IHTMLDOCUMENT2_FILECREATEDDATE = 1043_u32
  DISPID_IHTMLDOCUMENT2_FILEMODIFIEDDATE = 1044_u32
  DISPID_IHTMLDOCUMENT2_FILEUPDATEDDATE = 1045_u32
  DISPID_IHTMLDOCUMENT2_SECURITY = 1046_u32
  DISPID_IHTMLDOCUMENT2_PROTOCOL = 1047_u32
  DISPID_IHTMLDOCUMENT2_NAMEPROP = 1048_u32
  DISPID_IHTMLDOCUMENT2_WRITE = 1054_u32
  DISPID_IHTMLDOCUMENT2_WRITELN = 1055_u32
  DISPID_IHTMLDOCUMENT2_OPEN = 1056_u32
  DISPID_IHTMLDOCUMENT2_CLOSE = 1057_u32
  DISPID_IHTMLDOCUMENT2_CLEAR = 1058_u32
  DISPID_IHTMLDOCUMENT2_QUERYCOMMANDSUPPORTED = 1059_u32
  DISPID_IHTMLDOCUMENT2_QUERYCOMMANDENABLED = 1060_u32
  DISPID_IHTMLDOCUMENT2_QUERYCOMMANDSTATE = 1061_u32
  DISPID_IHTMLDOCUMENT2_QUERYCOMMANDINDETERM = 1062_u32
  DISPID_IHTMLDOCUMENT2_QUERYCOMMANDTEXT = 1063_u32
  DISPID_IHTMLDOCUMENT2_QUERYCOMMANDVALUE = 1064_u32
  DISPID_IHTMLDOCUMENT2_EXECCOMMAND = 1065_u32
  DISPID_IHTMLDOCUMENT2_EXECCOMMANDSHOWHELP = 1066_u32
  DISPID_IHTMLDOCUMENT2_CREATEELEMENT = 1067_u32
  DISPID_IHTMLDOCUMENT2_ONHELP = 71549_u32
  DISPID_IHTMLDOCUMENT2_ONCLICK = 71544_u32
  DISPID_IHTMLDOCUMENT2_ONDBLCLICK = 71545_u32
  DISPID_IHTMLDOCUMENT2_ONKEYUP = 71542_u32
  DISPID_IHTMLDOCUMENT2_ONKEYDOWN = 71541_u32
  DISPID_IHTMLDOCUMENT2_ONKEYPRESS = 71543_u32
  DISPID_IHTMLDOCUMENT2_ONMOUSEUP = 71539_u32
  DISPID_IHTMLDOCUMENT2_ONMOUSEDOWN = 71538_u32
  DISPID_IHTMLDOCUMENT2_ONMOUSEMOVE = 71540_u32
  DISPID_IHTMLDOCUMENT2_ONMOUSEOUT = 71537_u32
  DISPID_IHTMLDOCUMENT2_ONMOUSEOVER = 71536_u32
  DISPID_IHTMLDOCUMENT2_ONREADYSTATECHANGE = 71561_u32
  DISPID_IHTMLDOCUMENT2_ONAFTERUPDATE = 71558_u32
  DISPID_IHTMLDOCUMENT2_ONROWEXIT = 71554_u32
  DISPID_IHTMLDOCUMENT2_ONROWENTER = 71555_u32
  DISPID_IHTMLDOCUMENT2_ONDRAGSTART = 71571_u32
  DISPID_IHTMLDOCUMENT2_ONSELECTSTART = 71573_u32
  DISPID_IHTMLDOCUMENT2_ELEMENTFROMPOINT = 1068_u32
  DISPID_IHTMLDOCUMENT2_PARENTWINDOW = 1034_u32
  DISPID_IHTMLDOCUMENT2_STYLESHEETS = 1069_u32
  DISPID_IHTMLDOCUMENT2_ONBEFOREUPDATE = 71557_u32
  DISPID_IHTMLDOCUMENT2_ONERRORUPDATE = 71574_u32
  DISPID_IHTMLDOCUMENT2_TOSTRING = 1070_u32
  DISPID_IHTMLDOCUMENT2_CREATESTYLESHEET = 1071_u32
  DISPID_IHTMLDOCUMENT3_RELEASECAPTURE = 1072_u32
  DISPID_IHTMLDOCUMENT3_RECALC = 1073_u32
  DISPID_IHTMLDOCUMENT3_CREATETEXTNODE = 1074_u32
  DISPID_IHTMLDOCUMENT3_DOCUMENTELEMENT = 1075_u32
  DISPID_IHTMLDOCUMENT3_UNIQUEID = 1077_u32
  DISPID_IHTMLDOCUMENT3_ATTACHEVENT = 66043_u32
  DISPID_IHTMLDOCUMENT3_DETACHEVENT = 66044_u32
  DISPID_IHTMLDOCUMENT3_ONROWSDELETE = 71598_u32
  DISPID_IHTMLDOCUMENT3_ONROWSINSERTED = 71599_u32
  DISPID_IHTMLDOCUMENT3_ONCELLCHANGE = 71600_u32
  DISPID_IHTMLDOCUMENT3_ONDATASETCHANGED = 71576_u32
  DISPID_IHTMLDOCUMENT3_ONDATAAVAILABLE = 71577_u32
  DISPID_IHTMLDOCUMENT3_ONDATASETCOMPLETE = 71578_u32
  DISPID_IHTMLDOCUMENT3_ONPROPERTYCHANGE = 71583_u32
  DISPID_IHTMLDOCUMENT3_DIR = 70653_u32
  DISPID_IHTMLDOCUMENT3_ONCONTEXTMENU = 71601_u32
  DISPID_IHTMLDOCUMENT3_ONSTOP = 71604_u32
  DISPID_IHTMLDOCUMENT3_CREATEDOCUMENTFRAGMENT = 1076_u32
  DISPID_IHTMLDOCUMENT3_PARENTDOCUMENT = 1078_u32
  DISPID_IHTMLDOCUMENT3_ENABLEDOWNLOAD = 1079_u32
  DISPID_IHTMLDOCUMENT3_BASEURL = 1080_u32
  DISPID_IHTMLDOCUMENT3_CHILDNODES = 66585_u32
  DISPID_IHTMLDOCUMENT3_INHERITSTYLESHEETS = 1082_u32
  DISPID_IHTMLDOCUMENT3_ONBEFOREEDITFOCUS = 71605_u32
  DISPID_IHTMLDOCUMENT3_GETELEMENTSBYNAME = 1086_u32
  DISPID_IHTMLDOCUMENT3_GETELEMENTBYID = 1088_u32
  DISPID_IHTMLDOCUMENT3_GETELEMENTSBYTAGNAME = 1087_u32
  DISPID_IHTMLDOCUMENT4_FOCUS = 1089_u32
  DISPID_IHTMLDOCUMENT4_HASFOCUS = 1090_u32
  DISPID_IHTMLDOCUMENT4_ONSELECTIONCHANGE = 71616_u32
  DISPID_IHTMLDOCUMENT4_NAMESPACES = 1091_u32
  DISPID_IHTMLDOCUMENT4_CREATEDOCUMENTFROMURL = 1092_u32
  DISPID_IHTMLDOCUMENT4_MEDIA = 1093_u32
  DISPID_IHTMLDOCUMENT4_CREATEEVENTOBJECT = 1094_u32
  DISPID_IHTMLDOCUMENT4_FIREEVENT = 1095_u32
  DISPID_IHTMLDOCUMENT4_CREATERENDERSTYLE = 1096_u32
  DISPID_IHTMLDOCUMENT4_ONCONTROLSELECT = 71615_u32
  DISPID_IHTMLDOCUMENT4_URLUNENCODED = 1097_u32
  DISPID_IHTMLDOCUMENT5_ONMOUSEWHEEL = 71612_u32
  DISPID_IHTMLDOCUMENT5_DOCTYPE = 1098_u32
  DISPID_IHTMLDOCUMENT5_IMPLEMENTATION = 1099_u32
  DISPID_IHTMLDOCUMENT5_CREATEATTRIBUTE = 1100_u32
  DISPID_IHTMLDOCUMENT5_CREATECOMMENT = 1101_u32
  DISPID_IHTMLDOCUMENT5_ONFOCUSIN = 71627_u32
  DISPID_IHTMLDOCUMENT5_ONFOCUSOUT = 71628_u32
  DISPID_IHTMLDOCUMENT5_ONACTIVATE = 71623_u32
  DISPID_IHTMLDOCUMENT5_ONDEACTIVATE = 71624_u32
  DISPID_IHTMLDOCUMENT5_ONBEFOREACTIVATE = 71626_u32
  DISPID_IHTMLDOCUMENT5_ONBEFOREDEACTIVATE = 71613_u32
  DISPID_IHTMLDOCUMENT5_COMPATMODE = 1102_u32
  DISPID_IHTMLDOCUMENT6_COMPATIBLE = 1103_u32
  DISPID_IHTMLDOCUMENT6_DOCUMENTMODE = 1104_u32
  DISPID_IHTMLDOCUMENT6_ONSTORAGE = 71636_u32
  DISPID_IHTMLDOCUMENT6_ONSTORAGECOMMIT = 71637_u32
  DISPID_IHTMLDOCUMENT6_IE8_GETELEMENTBYID = 1107_u32
  DISPID_IHTMLDOCUMENT6_UPDATESETTINGS = 1109_u32
  DISPID_IHTMLDOCUMENT7_DEFAULTVIEW = 1110_u32
  DISPID_IHTMLDOCUMENT7_CREATECDATASECTION = 1123_u32
  DISPID_IHTMLDOCUMENT7_GETSELECTION = 1112_u32
  DISPID_IHTMLDOCUMENT7_GETELEMENTSBYTAGNAMENS = 1113_u32
  DISPID_IHTMLDOCUMENT7_CREATEELEMENTNS = 1114_u32
  DISPID_IHTMLDOCUMENT7_CREATEATTRIBUTENS = 1115_u32
  DISPID_IHTMLDOCUMENT7_ONMSTHUMBNAILCLICK = 71657_u32
  DISPID_IHTMLDOCUMENT7_CHARACTERSET = 1117_u32
  DISPID_IHTMLDOCUMENT7_IE9_CREATEELEMENT = 1118_u32
  DISPID_IHTMLDOCUMENT7_IE9_CREATEATTRIBUTE = 1119_u32
  DISPID_IHTMLDOCUMENT7_GETELEMENTSBYCLASSNAME = 1120_u32
  DISPID_IHTMLDOCUMENT7_CREATEPROCESSINGINSTRUCTION = 1124_u32
  DISPID_IHTMLDOCUMENT7_ADOPTNODE = 1125_u32
  DISPID_IHTMLDOCUMENT7_ONMSSITEMODEJUMPLISTITEMREMOVED = 71666_u32
  DISPID_IHTMLDOCUMENT7_IE9_ALL = 1126_u32
  DISPID_IHTMLDOCUMENT7_INPUTENCODING = 1127_u32
  DISPID_IHTMLDOCUMENT7_XMLENCODING = 1128_u32
  DISPID_IHTMLDOCUMENT7_XMLSTANDALONE = 1129_u32
  DISPID_IHTMLDOCUMENT7_XMLVERSION = 1130_u32
  DISPID_IHTMLDOCUMENT7_HASATTRIBUTES = 1132_u32
  DISPID_IHTMLDOCUMENT7_ONABORT = 71564_u32
  DISPID_IHTMLDOCUMENT7_ONBLUR = 71551_u32
  DISPID_IHTMLDOCUMENT7_ONCANPLAY = 71670_u32
  DISPID_IHTMLDOCUMENT7_ONCANPLAYTHROUGH = 71671_u32
  DISPID_IHTMLDOCUMENT7_ONCHANGE = 71566_u32
  DISPID_IHTMLDOCUMENT7_ONDRAG = 71585_u32
  DISPID_IHTMLDOCUMENT7_ONDRAGEND = 71586_u32
  DISPID_IHTMLDOCUMENT7_ONDRAGENTER = 71587_u32
  DISPID_IHTMLDOCUMENT7_ONDRAGLEAVE = 71589_u32
  DISPID_IHTMLDOCUMENT7_ONDRAGOVER = 71588_u32
  DISPID_IHTMLDOCUMENT7_ONDROP = 71590_u32
  DISPID_IHTMLDOCUMENT7_ONDURATIONCHANGE = 71672_u32
  DISPID_IHTMLDOCUMENT7_ONEMPTIED = 71673_u32
  DISPID_IHTMLDOCUMENT7_ONENDED = 71674_u32
  DISPID_IHTMLDOCUMENT7_ONERROR = 71565_u32
  DISPID_IHTMLDOCUMENT7_ONFOCUS = 71550_u32
  DISPID_IHTMLDOCUMENT7_ONINPUT = 71663_u32
  DISPID_IHTMLDOCUMENT7_ONLOAD = 71568_u32
  DISPID_IHTMLDOCUMENT7_ONLOADEDDATA = 71675_u32
  DISPID_IHTMLDOCUMENT7_ONLOADEDMETADATA = 71676_u32
  DISPID_IHTMLDOCUMENT7_ONLOADSTART = 71677_u32
  DISPID_IHTMLDOCUMENT7_ONPAUSE = 71678_u32
  DISPID_IHTMLDOCUMENT7_ONPLAY = 71679_u32
  DISPID_IHTMLDOCUMENT7_ONPLAYING = 71680_u32
  DISPID_IHTMLDOCUMENT7_ONPROGRESS = 71681_u32
  DISPID_IHTMLDOCUMENT7_ONRATECHANGE = 71682_u32
  DISPID_IHTMLDOCUMENT7_ONRESET = 71548_u32
  DISPID_IHTMLDOCUMENT7_ONSCROLL = 71567_u32
  DISPID_IHTMLDOCUMENT7_ONSEEKED = 71683_u32
  DISPID_IHTMLDOCUMENT7_ONSEEKING = 71684_u32
  DISPID_IHTMLDOCUMENT7_ONSELECT = 71546_u32
  DISPID_IHTMLDOCUMENT7_ONSTALLED = 71685_u32
  DISPID_IHTMLDOCUMENT7_ONSUBMIT = 71547_u32
  DISPID_IHTMLDOCUMENT7_ONSUSPEND = 71686_u32
  DISPID_IHTMLDOCUMENT7_ONTIMEUPDATE = 71687_u32
  DISPID_IHTMLDOCUMENT7_ONVOLUMECHANGE = 71688_u32
  DISPID_IHTMLDOCUMENT7_ONWAITING = 71689_u32
  DISPID_IHTMLDOCUMENT7_NORMALIZE = 1134_u32
  DISPID_IHTMLDOCUMENT7_IMPORTNODE = 1135_u32
  DISPID_IHTMLDOCUMENT7_IE9_PARENTWINDOW = 1136_u32
  DISPID_IHTMLDOCUMENT7_IE9_BODY = 1137_u32
  DISPID_IHTMLDOCUMENT7_HEAD = 1138_u32
  DISPID_IHTMLDOCUMENT8_ONMSCONTENTZOOM = 71708_u32
  DISPID_IHTMLDOCUMENT8_ONMSPOINTERDOWN = 71690_u32
  DISPID_IHTMLDOCUMENT8_ONMSPOINTERMOVE = 71691_u32
  DISPID_IHTMLDOCUMENT8_ONMSPOINTERUP = 71692_u32
  DISPID_IHTMLDOCUMENT8_ONMSPOINTEROVER = 71693_u32
  DISPID_IHTMLDOCUMENT8_ONMSPOINTEROUT = 71694_u32
  DISPID_IHTMLDOCUMENT8_ONMSPOINTERCANCEL = 71695_u32
  DISPID_IHTMLDOCUMENT8_ONMSPOINTERHOVER = 71696_u32
  DISPID_IHTMLDOCUMENT8_ONMSGESTURESTART = 71699_u32
  DISPID_IHTMLDOCUMENT8_ONMSGESTURECHANGE = 71700_u32
  DISPID_IHTMLDOCUMENT8_ONMSGESTUREEND = 71701_u32
  DISPID_IHTMLDOCUMENT8_ONMSGESTUREHOLD = 71702_u32
  DISPID_IHTMLDOCUMENT8_ONMSGESTURETAP = 71703_u32
  DISPID_IHTMLDOCUMENT8_ONMSGESTUREDOUBLETAP = 71704_u32
  DISPID_IHTMLDOCUMENT8_ONMSINERTIASTART = 71705_u32
  DISPID_IHTMLDOCUMENT8_ELEMENTSFROMPOINT = 1139_u32
  DISPID_IHTMLDOCUMENT8_ELEMENTSFROMRECT = 1140_u32
  DISPID_IHTMLDOCUMENT8_ONMSMANIPULATIONSTATECHANGED = 71714_u32
  DISPID_IHTMLDOCUMENT8_MSCAPSLOCKWARNINGOFF = 1141_u32
  DISPID_IDOCUMENTEVENT_CREATEEVENT = 1108_u32
  DISPID_IDOCUMENTRANGE_CREATERANGE = 1111_u32
  DISPID_IDOCUMENTSELECTOR_QUERYSELECTOR = 1105_u32
  DISPID_IDOCUMENTSELECTOR_QUERYSELECTORALL = 1106_u32
  DISPID_IDOCUMENTTRAVERSAL_CREATENODEITERATOR = 1121_u32
  DISPID_IDOCUMENTTRAVERSAL_CREATETREEWALKER = 1122_u32
  DISPID_HTMLDOCUMENTEVENTS4_ONMSTHUMBNAILCLICK = 71657_u32
  DISPID_HTMLDOCUMENTEVENTS4_ONMSSITEMODEJUMPLISTITEMREMOVED = 71666_u32
  DISPID_HTMLDOCUMENTEVENTS3_ONSTORAGE = 1057_u32
  DISPID_HTMLDOCUMENTEVENTS3_ONSTORAGECOMMIT = 1058_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONHELP = 65546_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONCLICK = -600_i32
  DISPID_HTMLDOCUMENTEVENTS2_ONDBLCLICK = -601_i32
  DISPID_HTMLDOCUMENTEVENTS2_ONKEYDOWN = -602_i32
  DISPID_HTMLDOCUMENTEVENTS2_ONKEYUP = -604_i32
  DISPID_HTMLDOCUMENTEVENTS2_ONKEYPRESS = -603_i32
  DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEDOWN = -605_i32
  DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEMOVE = -606_i32
  DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEUP = -607_i32
  DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEOUT = 65545_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEOVER = 65544_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONREADYSTATECHANGE = -609_i32
  DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREUPDATE = 65540_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONAFTERUPDATE = 65541_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONROWEXIT = 65542_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONROWENTER = 65543_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONDRAGSTART = 65547_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONSELECTSTART = 65548_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONERRORUPDATE = 65549_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONCONTEXTMENU = 1023_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONSTOP = 1026_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONROWSDELETE = 65568_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONROWSINSERTED = 65569_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONCELLCHANGE = 65570_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONPROPERTYCHANGE = 65555_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONDATASETCHANGED = 65550_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONDATAAVAILABLE = 65551_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONDATASETCOMPLETE = 65552_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREEDITFOCUS = 1027_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONSELECTIONCHANGE = 1037_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONCONTROLSELECT = 1036_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONMOUSEWHEEL = 1033_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONFOCUSIN = 1048_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONFOCUSOUT = 1049_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONACTIVATE = 1044_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONDEACTIVATE = 1045_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREACTIVATE = 1047_u32
  DISPID_HTMLDOCUMENTEVENTS2_ONBEFOREDEACTIVATE = 1034_u32
  DISPID_HTMLDOCUMENTEVENTS_ONHELP = 65546_u32
  DISPID_HTMLDOCUMENTEVENTS_ONCLICK = -600_i32
  DISPID_HTMLDOCUMENTEVENTS_ONDBLCLICK = -601_i32
  DISPID_HTMLDOCUMENTEVENTS_ONKEYDOWN = -602_i32
  DISPID_HTMLDOCUMENTEVENTS_ONKEYUP = -604_i32
  DISPID_HTMLDOCUMENTEVENTS_ONKEYPRESS = -603_i32
  DISPID_HTMLDOCUMENTEVENTS_ONMOUSEDOWN = -605_i32
  DISPID_HTMLDOCUMENTEVENTS_ONMOUSEMOVE = -606_i32
  DISPID_HTMLDOCUMENTEVENTS_ONMOUSEUP = -607_i32
  DISPID_HTMLDOCUMENTEVENTS_ONMOUSEOUT = 65545_u32
  DISPID_HTMLDOCUMENTEVENTS_ONMOUSEOVER = 65544_u32
  DISPID_HTMLDOCUMENTEVENTS_ONREADYSTATECHANGE = -609_i32
  DISPID_HTMLDOCUMENTEVENTS_ONBEFOREUPDATE = 65540_u32
  DISPID_HTMLDOCUMENTEVENTS_ONAFTERUPDATE = 65541_u32
  DISPID_HTMLDOCUMENTEVENTS_ONROWEXIT = 65542_u32
  DISPID_HTMLDOCUMENTEVENTS_ONROWENTER = 65543_u32
  DISPID_HTMLDOCUMENTEVENTS_ONDRAGSTART = 65547_u32
  DISPID_HTMLDOCUMENTEVENTS_ONSELECTSTART = 65548_u32
  DISPID_HTMLDOCUMENTEVENTS_ONERRORUPDATE = 65549_u32
  DISPID_HTMLDOCUMENTEVENTS_ONCONTEXTMENU = 1023_u32
  DISPID_HTMLDOCUMENTEVENTS_ONSTOP = 1026_u32
  DISPID_HTMLDOCUMENTEVENTS_ONROWSDELETE = 65568_u32
  DISPID_HTMLDOCUMENTEVENTS_ONROWSINSERTED = 65569_u32
  DISPID_HTMLDOCUMENTEVENTS_ONCELLCHANGE = 65570_u32
  DISPID_HTMLDOCUMENTEVENTS_ONPROPERTYCHANGE = 65555_u32
  DISPID_HTMLDOCUMENTEVENTS_ONDATASETCHANGED = 65550_u32
  DISPID_HTMLDOCUMENTEVENTS_ONDATAAVAILABLE = 65551_u32
  DISPID_HTMLDOCUMENTEVENTS_ONDATASETCOMPLETE = 65552_u32
  DISPID_HTMLDOCUMENTEVENTS_ONBEFOREEDITFOCUS = 1027_u32
  DISPID_HTMLDOCUMENTEVENTS_ONSELECTIONCHANGE = 1037_u32
  DISPID_HTMLDOCUMENTEVENTS_ONCONTROLSELECT = 1036_u32
  DISPID_HTMLDOCUMENTEVENTS_ONMOUSEWHEEL = 1033_u32
  DISPID_HTMLDOCUMENTEVENTS_ONFOCUSIN = 1048_u32
  DISPID_HTMLDOCUMENTEVENTS_ONFOCUSOUT = 1049_u32
  DISPID_HTMLDOCUMENTEVENTS_ONACTIVATE = 1044_u32
  DISPID_HTMLDOCUMENTEVENTS_ONDEACTIVATE = 1045_u32
  DISPID_HTMLDOCUMENTEVENTS_ONBEFOREACTIVATE = 1047_u32
  DISPID_HTMLDOCUMENTEVENTS_ONBEFOREDEACTIVATE = 1034_u32
  DISPID_IWEBBRIDGE_URL = 1_u32
  DISPID_IWEBBRIDGE_SCROLLBAR = 2_u32
  DISPID_IWEBBRIDGE_EMBED = 3_u32
  DISPID_IWEBBRIDGE_EVENT = 1152_u32
  DISPID_IWEBBRIDGE_READYSTATE = -525_i32
  DISPID_IWEBBRIDGE_ABOUTBOX = -552_i32
  DISPID_IWBSCRIPTCONTROL_RAISEEVENT = 1_u32
  DISPID_IWBSCRIPTCONTROL_BUBBLEEVENT = 2_u32
  DISPID_IWBSCRIPTCONTROL_SETCONTEXTMENU = 3_u32
  DISPID_IWBSCRIPTCONTROL_SELECTABLECONTENT = 4_u32
  DISPID_IWBSCRIPTCONTROL_FROZEN = 5_u32
  DISPID_IWBSCRIPTCONTROL_SCROLLBAR = 7_u32
  DISPID_IWBSCRIPTCONTROL_VERSION = 8_u32
  DISPID_IWBSCRIPTCONTROL_VISIBILITY = 9_u32
  DISPID_IWBSCRIPTCONTROL_ONVISIBILITYCHANGE = 10_u32
  DISPID_DWEBBRIDGEEVENTS_ONSCRIPTLETEVENT = 1_u32
  DISPID_DWEBBRIDGEEVENTS_ONREADYSTATECHANGE = -609_i32
  DISPID_DWEBBRIDGEEVENTS_ONCLICK = -600_i32
  DISPID_DWEBBRIDGEEVENTS_ONDBLCLICK = -601_i32
  DISPID_DWEBBRIDGEEVENTS_ONKEYDOWN = -602_i32
  DISPID_DWEBBRIDGEEVENTS_ONKEYUP = -604_i32
  DISPID_DWEBBRIDGEEVENTS_ONKEYPRESS = -603_i32
  DISPID_DWEBBRIDGEEVENTS_ONMOUSEDOWN = -605_i32
  DISPID_DWEBBRIDGEEVENTS_ONMOUSEMOVE = -606_i32
  DISPID_DWEBBRIDGEEVENTS_ONMOUSEUP = -607_i32
  DISPID_IHTMLEMBEDELEMENT_HIDDEN = 68546_u32
  DISPID_IHTMLEMBEDELEMENT_PALETTE = 68540_u32
  DISPID_IHTMLEMBEDELEMENT_PLUGINSPAGE = 68541_u32
  DISPID_IHTMLEMBEDELEMENT_SRC = 68542_u32
  DISPID_IHTMLEMBEDELEMENT_UNITS = 68544_u32
  DISPID_IHTMLEMBEDELEMENT_NAME = 65536_u32
  DISPID_IHTMLEMBEDELEMENT_WIDTH = 65541_u32
  DISPID_IHTMLEMBEDELEMENT_HEIGHT = 65542_u32
  DISPID_IHTMLEMBEDELEMENT2_IE8_SRC = 1150_u32
  DISPID_IHTMLEMBEDELEMENT2_IE8_PLUGINSPAGE = 1151_u32
  DISPID_IHTMLAREASCOLLECTION_LENGTH = 1500_u32
  DISPID_IHTMLAREASCOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLAREASCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLAREASCOLLECTION_TAGS = 1502_u32
  DISPID_IHTMLAREASCOLLECTION_ADD = 1503_u32
  DISPID_IHTMLAREASCOLLECTION_REMOVE = 1504_u32
  DISPID_IHTMLAREASCOLLECTION2_URNS = 1505_u32
  DISPID_IHTMLAREASCOLLECTION3_NAMEDITEM = 1506_u32
  DISPID_IHTMLAREASCOLLECTION4_IE8_LENGTH = 1150_u32
  DISPID_IHTMLAREASCOLLECTION4_IE8_ITEM = 1152_u32
  DISPID_IHTMLAREASCOLLECTION4_IE8_NAMEDITEM = 1153_u32
  DISPID_IHTMLMAPELEMENT_AREAS = 1002_u32
  DISPID_IHTMLMAPELEMENT_NAME = 65536_u32
  DISPID_IHTMLAREAELEMENT_SHAPE = 1001_u32
  DISPID_IHTMLAREAELEMENT_COORDS = 1002_u32
  DISPID_IHTMLAREAELEMENT_HREF = 0_u32
  DISPID_IHTMLAREAELEMENT_TARGET = 1004_u32
  DISPID_IHTMLAREAELEMENT_ALT = 1005_u32
  DISPID_IHTMLAREAELEMENT_NOHREF = 1006_u32
  DISPID_IHTMLAREAELEMENT_HOST = 1007_u32
  DISPID_IHTMLAREAELEMENT_HOSTNAME = 1008_u32
  DISPID_IHTMLAREAELEMENT_PATHNAME = 1009_u32
  DISPID_IHTMLAREAELEMENT_PORT = 1010_u32
  DISPID_IHTMLAREAELEMENT_PROTOCOL = 1011_u32
  DISPID_IHTMLAREAELEMENT_SEARCH = 1012_u32
  DISPID_IHTMLAREAELEMENT_HASH = 1013_u32
  DISPID_IHTMLAREAELEMENT_ONBLUR = 71551_u32
  DISPID_IHTMLAREAELEMENT_ONFOCUS = 71550_u32
  DISPID_IHTMLAREAELEMENT_TABINDEX = 65551_u32
  DISPID_IHTMLAREAELEMENT_FOCUS = 67536_u32
  DISPID_IHTMLAREAELEMENT_BLUR = 67538_u32
  DISPID_IHTMLAREAELEMENT2_IE8_SHAPE = 1151_u32
  DISPID_IHTMLAREAELEMENT2_IE8_COORDS = 1152_u32
  DISPID_IHTMLAREAELEMENT2_IE8_HREF = 1153_u32
  DISPID_IHTMLTABLECAPTION_ALIGN = 65608_u32
  DISPID_IHTMLTABLECAPTION_VALIGN = 70567_u32
  DISPID_IHTMLCOMMENTELEMENT_TEXT = 1001_u32
  DISPID_IHTMLCOMMENTELEMENT_ATOMIC = 1002_u32
  DISPID_IHTMLCOMMENTELEMENT2_DATA = 1003_u32
  DISPID_IHTMLCOMMENTELEMENT2_LENGTH = 1004_u32
  DISPID_IHTMLCOMMENTELEMENT2_SUBSTRINGDATA = 1005_u32
  DISPID_IHTMLCOMMENTELEMENT2_APPENDDATA = 1006_u32
  DISPID_IHTMLCOMMENTELEMENT2_INSERTDATA = 1007_u32
  DISPID_IHTMLCOMMENTELEMENT2_DELETEDATA = 1008_u32
  DISPID_IHTMLCOMMENTELEMENT2_REPLACEDATA = 1009_u32
  DISPID_IHTMLCOMMENTELEMENT3_IE9_SUBSTRINGDATA = 1010_u32
  DISPID_IHTMLCOMMENTELEMENT3_IE9_INSERTDATA = 1011_u32
  DISPID_IHTMLCOMMENTELEMENT3_IE9_DELETEDATA = 1012_u32
  DISPID_IHTMLCOMMENTELEMENT3_IE9_REPLACEDATA = 1013_u32
  DISPID_IHTMLPHRASEELEMENT2_CITE = 1001_u32
  DISPID_IHTMLPHRASEELEMENT2_DATETIME = 1002_u32
  DISPID_IHTMLPHRASEELEMENT3_IE8_CITE = 1150_u32
  DISPID_IHTMLTABLE_COLS = 1001_u32
  DISPID_IHTMLTABLE_BORDER = 1002_u32
  DISPID_IHTMLTABLE_FRAME = 1004_u32
  DISPID_IHTMLTABLE_RULES = 1003_u32
  DISPID_IHTMLTABLE_CELLSPACING = 1005_u32
  DISPID_IHTMLTABLE_CELLPADDING = 1006_u32
  DISPID_IHTMLTABLE_BACKGROUND = 70537_u32
  DISPID_IHTMLTABLE_BGCOLOR = -501_i32
  DISPID_IHTMLTABLE_BORDERCOLOR = 70564_u32
  DISPID_IHTMLTABLE_BORDERCOLORLIGHT = 70565_u32
  DISPID_IHTMLTABLE_BORDERCOLORDARK = 70566_u32
  DISPID_IHTMLTABLE_ALIGN = 65609_u32
  DISPID_IHTMLTABLE_REFRESH = 1015_u32
  DISPID_IHTMLTABLE_ROWS = 1016_u32
  DISPID_IHTMLTABLE_WIDTH = 65541_u32
  DISPID_IHTMLTABLE_HEIGHT = 65542_u32
  DISPID_IHTMLTABLE_DATAPAGESIZE = 1017_u32
  DISPID_IHTMLTABLE_NEXTPAGE = 1018_u32
  DISPID_IHTMLTABLE_PREVIOUSPAGE = 1019_u32
  DISPID_IHTMLTABLE_THEAD = 1020_u32
  DISPID_IHTMLTABLE_TFOOT = 1021_u32
  DISPID_IHTMLTABLE_TBODIES = 1024_u32
  DISPID_IHTMLTABLE_CAPTION = 1025_u32
  DISPID_IHTMLTABLE_CREATETHEAD = 1026_u32
  DISPID_IHTMLTABLE_DELETETHEAD = 1027_u32
  DISPID_IHTMLTABLE_CREATETFOOT = 1028_u32
  DISPID_IHTMLTABLE_DELETETFOOT = 1029_u32
  DISPID_IHTMLTABLE_CREATECAPTION = 1030_u32
  DISPID_IHTMLTABLE_DELETECAPTION = 1031_u32
  DISPID_IHTMLTABLE_INSERTROW = 1032_u32
  DISPID_IHTMLTABLE_DELETEROW = 1033_u32
  DISPID_IHTMLTABLE_READYSTATE = 70652_u32
  DISPID_IHTMLTABLE_ONREADYSTATECHANGE = 71561_u32
  DISPID_IHTMLTABLE2_FIRSTPAGE = 1035_u32
  DISPID_IHTMLTABLE2_LASTPAGE = 1036_u32
  DISPID_IHTMLTABLE2_CELLS = 1037_u32
  DISPID_IHTMLTABLE2_MOVEROW = 1038_u32
  DISPID_IHTMLTABLE3_SUMMARY = 1039_u32
  DISPID_IHTMLTABLE4_IE9_THEAD = 1040_u32
  DISPID_IHTMLTABLE4_IE9_TFOOT = 1041_u32
  DISPID_IHTMLTABLE4_IE9_CAPTION = 1042_u32
  DISPID_IHTMLTABLE4_IE9_INSERTROW = 1043_u32
  DISPID_IHTMLTABLE4_IE9_DELETEROW = 1044_u32
  DISPID_IHTMLTABLE4_CREATETBODY = 1045_u32
  DISPID_IHTMLTABLECOL_SPAN = 1001_u32
  DISPID_IHTMLTABLECOL_WIDTH = 65541_u32
  DISPID_IHTMLTABLECOL_ALIGN = 65608_u32
  DISPID_IHTMLTABLECOL_VALIGN = 70567_u32
  DISPID_IHTMLTABLECOL2_CH = 1002_u32
  DISPID_IHTMLTABLECOL2_CHOFF = 1003_u32
  DISPID_IHTMLTABLECOL3_IE9_CH = 1004_u32
  DISPID_IHTMLTABLECOL3_IE9_CHOFF = 1005_u32
  DISPID_IHTMLTABLESECTION_ALIGN = 65608_u32
  DISPID_IHTMLTABLESECTION_VALIGN = 70567_u32
  DISPID_IHTMLTABLESECTION_BGCOLOR = -501_i32
  DISPID_IHTMLTABLESECTION_ROWS = 1000_u32
  DISPID_IHTMLTABLESECTION_INSERTROW = 1001_u32
  DISPID_IHTMLTABLESECTION_DELETEROW = 1002_u32
  DISPID_IHTMLTABLESECTION2_MOVEROW = 1003_u32
  DISPID_IHTMLTABLESECTION3_CH = 1004_u32
  DISPID_IHTMLTABLESECTION3_CHOFF = 1005_u32
  DISPID_IHTMLTABLESECTION4_IE9_CH = 1006_u32
  DISPID_IHTMLTABLESECTION4_IE9_CHOFF = 1007_u32
  DISPID_IHTMLTABLESECTION4_IE9_INSERTROW = 1008_u32
  DISPID_IHTMLTABLESECTION4_IE9_DELETEROW = 1009_u32
  DISPID_IHTMLTABLEROW_ALIGN = 65608_u32
  DISPID_IHTMLTABLEROW_VALIGN = 70567_u32
  DISPID_IHTMLTABLEROW_BGCOLOR = -501_i32
  DISPID_IHTMLTABLEROW_BORDERCOLOR = 70564_u32
  DISPID_IHTMLTABLEROW_BORDERCOLORLIGHT = 70565_u32
  DISPID_IHTMLTABLEROW_BORDERCOLORDARK = 70566_u32
  DISPID_IHTMLTABLEROW_ROWINDEX = 1000_u32
  DISPID_IHTMLTABLEROW_SECTIONROWINDEX = 1001_u32
  DISPID_IHTMLTABLEROW_CELLS = 1002_u32
  DISPID_IHTMLTABLEROW_INSERTCELL = 1003_u32
  DISPID_IHTMLTABLEROW_DELETECELL = 1004_u32
  DISPID_IHTMLTABLEROW2_HEIGHT = 65542_u32
  DISPID_IHTMLTABLEROW3_CH = 1009_u32
  DISPID_IHTMLTABLEROW3_CHOFF = 1010_u32
  DISPID_IHTMLTABLEROW4_IE9_CH = 1011_u32
  DISPID_IHTMLTABLEROW4_IE9_CHOFF = 1012_u32
  DISPID_IHTMLTABLEROW4_IE9_INSERTCELL = 1013_u32
  DISPID_IHTMLTABLEROW4_IE9_DELETECELL = 1014_u32
  DISPID_IHTMLTABLEROWMETRICS_CLIENTHEIGHT = 67555_u32
  DISPID_IHTMLTABLEROWMETRICS_CLIENTWIDTH = 67556_u32
  DISPID_IHTMLTABLEROWMETRICS_CLIENTTOP = 67557_u32
  DISPID_IHTMLTABLEROWMETRICS_CLIENTLEFT = 67558_u32
  DISPID_IHTMLTABLECELL_ROWSPAN = 2001_u32
  DISPID_IHTMLTABLECELL_COLSPAN = 2002_u32
  DISPID_IHTMLTABLECELL_ALIGN = 65608_u32
  DISPID_IHTMLTABLECELL_VALIGN = 70567_u32
  DISPID_IHTMLTABLECELL_BGCOLOR = -501_i32
  DISPID_IHTMLTABLECELL_NOWRAP = 70541_u32
  DISPID_IHTMLTABLECELL_BACKGROUND = 70537_u32
  DISPID_IHTMLTABLECELL_BORDERCOLOR = 70564_u32
  DISPID_IHTMLTABLECELL_BORDERCOLORLIGHT = 70565_u32
  DISPID_IHTMLTABLECELL_BORDERCOLORDARK = 70566_u32
  DISPID_IHTMLTABLECELL_WIDTH = 65541_u32
  DISPID_IHTMLTABLECELL_HEIGHT = 65542_u32
  DISPID_IHTMLTABLECELL_CELLINDEX = 2003_u32
  DISPID_IHTMLTABLECELL2_ABBR = 2004_u32
  DISPID_IHTMLTABLECELL2_AXIS = 2005_u32
  DISPID_IHTMLTABLECELL2_CH = 2006_u32
  DISPID_IHTMLTABLECELL2_CHOFF = 2007_u32
  DISPID_IHTMLTABLECELL2_HEADERS = 2008_u32
  DISPID_IHTMLTABLECELL2_SCOPE = 2009_u32
  DISPID_IHTMLTABLECELL3_IE9_CH = 2010_u32
  DISPID_IHTMLTABLECELL3_IE9_CHOFF = 2011_u32
  DISPID_IHTMLSCRIPTELEMENT_SRC = 1001_u32
  DISPID_IHTMLSCRIPTELEMENT_HTMLFOR = 1004_u32
  DISPID_IHTMLSCRIPTELEMENT_EVENT = 1005_u32
  DISPID_IHTMLSCRIPTELEMENT_TEXT = 1006_u32
  DISPID_IHTMLSCRIPTELEMENT_DEFER = 1007_u32
  DISPID_IHTMLSCRIPTELEMENT_READYSTATE = 70652_u32
  DISPID_IHTMLSCRIPTELEMENT_ONERROR = 71565_u32
  DISPID_IHTMLSCRIPTELEMENT_TYPE = 1009_u32
  DISPID_IHTMLSCRIPTELEMENT2_CHARSET = 1010_u32
  DISPID_IHTMLSCRIPTELEMENT3_IE8_SRC = 1150_u32
  DISPID_IHTMLSCRIPTELEMENT4_USEDCHARSET = 1011_u32
  DISPID_HTMLSCRIPTEVENTS2_ONERROR = 1002_u32
  DISPID_HTMLSCRIPTEVENTS_ONERROR = 1002_u32
  DISPID_IHTMLOBJECTELEMENT_OBJECT = 68537_u32
  DISPID_IHTMLOBJECTELEMENT_CLASSID = 68538_u32
  DISPID_IHTMLOBJECTELEMENT_DATA = 68539_u32
  DISPID_IHTMLOBJECTELEMENT_RECORDSET = 68541_u32
  DISPID_IHTMLOBJECTELEMENT_ALIGN = 65609_u32
  DISPID_IHTMLOBJECTELEMENT_NAME = 65536_u32
  DISPID_IHTMLOBJECTELEMENT_CODEBASE = 68542_u32
  DISPID_IHTMLOBJECTELEMENT_CODETYPE = 68543_u32
  DISPID_IHTMLOBJECTELEMENT_CODE = 68544_u32
  DISPID_IHTMLOBJECTELEMENT_BASEHREF = 65538_u32
  DISPID_IHTMLOBJECTELEMENT_TYPE = 68545_u32
  DISPID_IHTMLOBJECTELEMENT_FORM = 67540_u32
  DISPID_IHTMLOBJECTELEMENT_WIDTH = 65541_u32
  DISPID_IHTMLOBJECTELEMENT_HEIGHT = 65542_u32
  DISPID_IHTMLOBJECTELEMENT_READYSTATE = 68546_u32
  DISPID_IHTMLOBJECTELEMENT_ONREADYSTATECHANGE = 71561_u32
  DISPID_IHTMLOBJECTELEMENT_ONERROR = 71565_u32
  DISPID_IHTMLOBJECTELEMENT_ALTHTML = 68547_u32
  DISPID_IHTMLOBJECTELEMENT_VSPACE = 68548_u32
  DISPID_IHTMLOBJECTELEMENT_HSPACE = 68549_u32
  DISPID_IHTMLOBJECTELEMENT2_NAMEDRECORDSET = 68550_u32
  DISPID_IHTMLOBJECTELEMENT2_CLASSID = 68538_u32
  DISPID_IHTMLOBJECTELEMENT2_DATA = 68539_u32
  DISPID_IHTMLOBJECTELEMENT3_ARCHIVE = 68551_u32
  DISPID_IHTMLOBJECTELEMENT3_ALT = 68552_u32
  DISPID_IHTMLOBJECTELEMENT3_DECLARE = 68553_u32
  DISPID_IHTMLOBJECTELEMENT3_STANDBY = 68554_u32
  DISPID_IHTMLOBJECTELEMENT3_BORDER = 68555_u32
  DISPID_IHTMLOBJECTELEMENT3_USEMAP = 68556_u32
  DISPID_IHTMLOBJECTELEMENT4_CONTENTDOCUMENT = 68566_u32
  DISPID_IHTMLOBJECTELEMENT4_IE8_CODEBASE = 68567_u32
  DISPID_IHTMLOBJECTELEMENT4_IE8_DATA = 68568_u32
  DISPID_IHTMLOBJECTELEMENT5_IE9_OBJECT = 68569_u32
  DISPID_IHTMLPARAMELEMENT_NAME = 1001_u32
  DISPID_IHTMLPARAMELEMENT_VALUE = 1002_u32
  DISPID_IHTMLPARAMELEMENT_TYPE = 1003_u32
  DISPID_IHTMLPARAMELEMENT_VALUETYPE = 1004_u32
  DISPID_IHTMLPARAMELEMENT2_NAME = 1001_u32
  DISPID_IHTMLPARAMELEMENT2_TYPE = 1003_u32
  DISPID_IHTMLPARAMELEMENT2_VALUE = 1002_u32
  DISPID_IHTMLPARAMELEMENT2_IE8_VALUETYPE = 1150_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONBEFOREUPDATE = 65540_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONAFTERUPDATE = 65541_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONERRORUPDATE = 65549_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWEXIT = 65542_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWENTER = 65543_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONDATASETCHANGED = 65550_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONDATAAVAILABLE = 65551_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONDATASETCOMPLETE = 65552_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONERROR = 65555_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWSDELETE = 65568_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONROWSINSERTED = 65569_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONCELLCHANGE = 65570_u32
  DISPID_HTMLOBJECTELEMENTEVENTS2_ONREADYSTATECHANGE = 65556_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONBEFOREUPDATE = 65540_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONAFTERUPDATE = 65541_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONERRORUPDATE = 65549_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONROWEXIT = 65542_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONROWENTER = 65543_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONDATASETCHANGED = 65550_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONDATAAVAILABLE = 65551_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONDATASETCOMPLETE = 65552_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONERROR = 65555_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONROWSDELETE = 65568_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONROWSINSERTED = 65569_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONCELLCHANGE = 65570_u32
  DISPID_HTMLOBJECTELEMENTEVENTS_ONREADYSTATECHANGE = 65556_u32
  DISPID_IHTMLFRAMEBASE_SRC = 68536_u32
  DISPID_IHTMLFRAMEBASE_NAME = 65536_u32
  DISPID_IHTMLFRAMEBASE_BORDER = 68538_u32
  DISPID_IHTMLFRAMEBASE_FRAMEBORDER = 68539_u32
  DISPID_IHTMLFRAMEBASE_FRAMESPACING = 68540_u32
  DISPID_IHTMLFRAMEBASE_MARGINWIDTH = 68541_u32
  DISPID_IHTMLFRAMEBASE_MARGINHEIGHT = 68542_u32
  DISPID_IHTMLFRAMEBASE_NORESIZE = 68543_u32
  DISPID_IHTMLFRAMEBASE_SCROLLING = 68544_u32
  DISPID_IHTMLFRAMEBASE2_CONTENTWINDOW = 68545_u32
  DISPID_IHTMLFRAMEBASE2_ONLOAD = 71568_u32
  DISPID_IHTMLFRAMEBASE2_ONREADYSTATECHANGE = 71561_u32
  DISPID_IHTMLFRAMEBASE2_READYSTATE = 70652_u32
  DISPID_IHTMLFRAMEBASE2_ALLOWTRANSPARENCY = 70742_u32
  DISPID_IHTMLFRAMEBASE3_LONGDESC = 68546_u32
  DISPID_HTMLFRAMESITEEVENTS2_ONLOAD = 1003_u32
  DISPID_HTMLFRAMESITEEVENTS_ONLOAD = 1003_u32
  DISPID_IHTMLFRAMEELEMENT_BORDERCOLOR = 69537_u32
  DISPID_IHTMLFRAMEELEMENT2_HEIGHT = 65542_u32
  DISPID_IHTMLFRAMEELEMENT2_WIDTH = 65541_u32
  DISPID_IHTMLFRAMEELEMENT3_CONTENTDOCUMENT = 69656_u32
  DISPID_IHTMLFRAMEELEMENT3_IE8_SRC = 69657_u32
  DISPID_IHTMLFRAMEELEMENT3_IE8_LONGDESC = 69658_u32
  DISPID_IHTMLFRAMEELEMENT3_IE8_FRAMEBORDER = 69659_u32
  DISPID_IHTMLIFRAMEELEMENT_VSPACE = 69537_u32
  DISPID_IHTMLIFRAMEELEMENT_HSPACE = 69538_u32
  DISPID_IHTMLIFRAMEELEMENT_ALIGN = 65609_u32
  DISPID_IHTMLIFRAMEELEMENT2_HEIGHT = 65542_u32
  DISPID_IHTMLIFRAMEELEMENT2_WIDTH = 65541_u32
  DISPID_IHTMLIFRAMEELEMENT3_CONTENTDOCUMENT = 69656_u32
  DISPID_IHTMLIFRAMEELEMENT3_IE8_SRC = 69657_u32
  DISPID_IHTMLIFRAMEELEMENT3_IE8_LONGDESC = 69658_u32
  DISPID_IHTMLIFRAMEELEMENT3_IE8_FRAMEBORDER = 69659_u32
  DISPID_IHTMLDIVPOSITION_ALIGN = 65609_u32
  DISPID_IHTMLFIELDSETELEMENT_ALIGN = 65609_u32
  DISPID_IHTMLFIELDSETELEMENT2_FORM = 67540_u32
  DISPID_IHTMLLEGENDELEMENT_ALIGN = 65609_u32
  DISPID_IHTMLLEGENDELEMENT2_FORM = 67540_u32
  DISPID_IHTMLSPANFLOW_ALIGN = 65609_u32
  DISPID_IHTMLFRAMESETELEMENT_ROWS = 1000_u32
  DISPID_IHTMLFRAMESETELEMENT_COLS = 1001_u32
  DISPID_IHTMLFRAMESETELEMENT_BORDER = 1002_u32
  DISPID_IHTMLFRAMESETELEMENT_BORDERCOLOR = 1003_u32
  DISPID_IHTMLFRAMESETELEMENT_FRAMEBORDER = 1004_u32
  DISPID_IHTMLFRAMESETELEMENT_FRAMESPACING = 1005_u32
  DISPID_IHTMLFRAMESETELEMENT_NAME = 65536_u32
  DISPID_IHTMLFRAMESETELEMENT_ONLOAD = 71568_u32
  DISPID_IHTMLFRAMESETELEMENT_ONUNLOAD = 71569_u32
  DISPID_IHTMLFRAMESETELEMENT_ONBEFOREUNLOAD = 71575_u32
  DISPID_IHTMLFRAMESETELEMENT2_ONBEFOREPRINT = 71602_u32
  DISPID_IHTMLFRAMESETELEMENT2_ONAFTERPRINT = 71603_u32
  DISPID_IHTMLFRAMESETELEMENT3_ONHASHCHANGE = 71645_u32
  DISPID_IHTMLFRAMESETELEMENT3_ONMESSAGE = 71646_u32
  DISPID_IHTMLFRAMESETELEMENT3_ONOFFLINE = 71644_u32
  DISPID_IHTMLFRAMESETELEMENT3_ONONLINE = 71643_u32
  DISPID_IHTMLFRAMESETELEMENT3_ONSTORAGE = 71636_u32
  DISPID_IHTMLBGSOUND_SRC = 1001_u32
  DISPID_IHTMLBGSOUND_LOOP = 1002_u32
  DISPID_IHTMLBGSOUND_VOLUME = 1003_u32
  DISPID_IHTMLBGSOUND_BALANCE = 1004_u32
  DISPID_IHTMLFONTNAMESCOLLECTION_LENGTH = 1501_u32
  DISPID_IHTMLFONTNAMESCOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLFONTNAMESCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLFONTSIZESCOLLECTION_LENGTH = 1502_u32
  DISPID_IHTMLFONTSIZESCOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLFONTSIZESCOLLECTION_FORFONT = 1503_u32
  DISPID_IHTMLFONTSIZESCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLOPTIONSHOLDER_DOCUMENT = 1503_u32
  DISPID_IHTMLOPTIONSHOLDER_FONTS = 1504_u32
  DISPID_IHTMLOPTIONSHOLDER_EXECARG = 1505_u32
  DISPID_IHTMLOPTIONSHOLDER_ERRORLINE = 1506_u32
  DISPID_IHTMLOPTIONSHOLDER_ERRORCHARACTER = 1507_u32
  DISPID_IHTMLOPTIONSHOLDER_ERRORCODE = 1508_u32
  DISPID_IHTMLOPTIONSHOLDER_ERRORMESSAGE = 1509_u32
  DISPID_IHTMLOPTIONSHOLDER_ERRORDEBUG = 1510_u32
  DISPID_IHTMLOPTIONSHOLDER_UNSECUREDWINDOWOFDOCUMENT = 1511_u32
  DISPID_IHTMLOPTIONSHOLDER_FINDTEXT = 1512_u32
  DISPID_IHTMLOPTIONSHOLDER_ANYTHINGAFTERFRAMESET = 1513_u32
  DISPID_IHTMLOPTIONSHOLDER_SIZES = 1514_u32
  DISPID_IHTMLOPTIONSHOLDER_OPENFILEDLG = 1515_u32
  DISPID_IHTMLOPTIONSHOLDER_SAVEFILEDLG = 1516_u32
  DISPID_IHTMLOPTIONSHOLDER_CHOOSECOLORDLG = 1517_u32
  DISPID_IHTMLOPTIONSHOLDER_SHOWSECURITYINFO = 1518_u32
  DISPID_IHTMLOPTIONSHOLDER_ISAPARTMENTMODEL = 1519_u32
  DISPID_IHTMLOPTIONSHOLDER_GETCHARSET = 1520_u32
  DISPID_IHTMLOPTIONSHOLDER_SECURECONNECTIONINFO = 1521_u32
  DISPID_IHTMLSTYLEELEMENT_TYPE = 1002_u32
  DISPID_IHTMLSTYLEELEMENT_READYSTATE = 70652_u32
  DISPID_IHTMLSTYLEELEMENT_ONREADYSTATECHANGE = 71561_u32
  DISPID_IHTMLSTYLEELEMENT_ONLOAD = 71568_u32
  DISPID_IHTMLSTYLEELEMENT_ONERROR = 71565_u32
  DISPID_IHTMLSTYLEELEMENT_STYLESHEET = 1004_u32
  DISPID_IHTMLSTYLEELEMENT_DISABLED = 65612_u32
  DISPID_IHTMLSTYLEELEMENT_MEDIA = 1006_u32
  DISPID_IHTMLSTYLEELEMENT2_SHEET = 1007_u32
  DISPID_HTMLSTYLEELEMENTEVENTS2_ONLOAD = 1003_u32
  DISPID_HTMLSTYLEELEMENTEVENTS2_ONERROR = 1002_u32
  DISPID_HTMLSTYLEELEMENTEVENTS_ONLOAD = 1003_u32
  DISPID_HTMLSTYLEELEMENTEVENTS_ONERROR = 1002_u32
  DISPID_IHTMLSTYLEFONTFACE_FONTSRC = 70633_u32
  DISPID_IHTMLSTYLEFONTFACE2_STYLE = 65610_u32
  DISPID_IHTMLXDOMAINREQUEST_RESPONSETEXT = 1003_u32
  DISPID_IHTMLXDOMAINREQUEST_TIMEOUT = 1004_u32
  DISPID_IHTMLXDOMAINREQUEST_CONTENTTYPE = 1005_u32
  DISPID_IHTMLXDOMAINREQUEST_ONPROGRESS = 1006_u32
  DISPID_IHTMLXDOMAINREQUEST_ONERROR = 71565_u32
  DISPID_IHTMLXDOMAINREQUEST_ONTIMEOUT = 71648_u32
  DISPID_IHTMLXDOMAINREQUEST_ONLOAD = 71568_u32
  DISPID_IHTMLXDOMAINREQUEST_ABORT = 1010_u32
  DISPID_IHTMLXDOMAINREQUEST_OPEN = 1011_u32
  DISPID_IHTMLXDOMAINREQUEST_SEND = 1012_u32
  DISPID_IHTMLXDOMAINREQUESTFACTORY_CREATE = 0_u32
  DISPID_IHTMLSTORAGE_LENGTH = 1001_u32
  DISPID_IHTMLSTORAGE_REMAININGSPACE = 1002_u32
  DISPID_IHTMLSTORAGE_KEY = 1006_u32
  DISPID_IHTMLSTORAGE_GETITEM = 1003_u32
  DISPID_IHTMLSTORAGE_SETITEM = 1004_u32
  DISPID_IHTMLSTORAGE_REMOVEITEM = 1005_u32
  DISPID_IHTMLSTORAGE_CLEAR = 1007_u32
  DISPID_IHTMLSTORAGE2_IE9_SETITEM = 1008_u32
  DISPID_IEVENTTARGET_ADDEVENTLISTENER = 66046_u32
  DISPID_IEVENTTARGET_REMOVEEVENTLISTENER = 66047_u32
  DISPID_IEVENTTARGET_DISPATCHEVENT = 66048_u32
  DISPID_IDOMEVENT_BUBBLES = 1001_u32
  DISPID_IDOMEVENT_CANCELABLE = 1002_u32
  DISPID_IDOMEVENT_CURRENTTARGET = 1003_u32
  DISPID_IDOMEVENT_DEFAULTPREVENTED = 1004_u32
  DISPID_IDOMEVENT_EVENTPHASE = 1005_u32
  DISPID_IDOMEVENT_TARGET = 1006_u32
  DISPID_IDOMEVENT_TIMESTAMP = 1007_u32
  DISPID_IDOMEVENT_TYPE = 1008_u32
  DISPID_IDOMEVENT_INITEVENT = 1009_u32
  DISPID_IDOMEVENT_PREVENTDEFAULT = 1010_u32
  DISPID_IDOMEVENT_STOPPROPAGATION = 1011_u32
  DISPID_IDOMEVENT_STOPIMMEDIATEPROPAGATION = 1012_u32
  DISPID_IDOMEVENT_ISTRUSTED = 1013_u32
  DISPID_IDOMEVENT_CANCELBUBBLE = 1014_u32
  DISPID_IDOMEVENT_SRCELEMENT = 1015_u32
  DISPID_IDOMUIEVENT_VIEW = 1026_u32
  DISPID_IDOMUIEVENT_DETAIL = 1027_u32
  DISPID_IDOMUIEVENT_INITUIEVENT = 1028_u32
  DISPID_IDOMMOUSEEVENT_SCREENX = 1051_u32
  DISPID_IDOMMOUSEEVENT_SCREENY = 1052_u32
  DISPID_IDOMMOUSEEVENT_CLIENTX = 1053_u32
  DISPID_IDOMMOUSEEVENT_CLIENTY = 1054_u32
  DISPID_IDOMMOUSEEVENT_CTRLKEY = 1055_u32
  DISPID_IDOMMOUSEEVENT_SHIFTKEY = 1056_u32
  DISPID_IDOMMOUSEEVENT_ALTKEY = 1057_u32
  DISPID_IDOMMOUSEEVENT_METAKEY = 1058_u32
  DISPID_IDOMMOUSEEVENT_BUTTON = 1059_u32
  DISPID_IDOMMOUSEEVENT_RELATEDTARGET = 1060_u32
  DISPID_IDOMMOUSEEVENT_INITMOUSEEVENT = 1061_u32
  DISPID_IDOMMOUSEEVENT_GETMODIFIERSTATE = 1062_u32
  DISPID_IDOMMOUSEEVENT_BUTTONS = 1063_u32
  DISPID_IDOMMOUSEEVENT_FROMELEMENT = 1064_u32
  DISPID_IDOMMOUSEEVENT_TOELEMENT = 1065_u32
  DISPID_IDOMMOUSEEVENT_X = 1066_u32
  DISPID_IDOMMOUSEEVENT_Y = 1067_u32
  DISPID_IDOMMOUSEEVENT_OFFSETX = 1068_u32
  DISPID_IDOMMOUSEEVENT_OFFSETY = 1069_u32
  DISPID_IDOMMOUSEEVENT_PAGEX = 1070_u32
  DISPID_IDOMMOUSEEVENT_PAGEY = 1071_u32
  DISPID_IDOMMOUSEEVENT_LAYERX = 1072_u32
  DISPID_IDOMMOUSEEVENT_LAYERY = 1073_u32
  DISPID_IDOMMOUSEEVENT_WHICH = 1074_u32
  DISPID_IDOMDRAGEVENT_DATATRANSFER = 1401_u32
  DISPID_IDOMDRAGEVENT_INITDRAGEVENT = 1402_u32
  DISPID_IDOMMOUSEWHEELEVENT_WHEELDELTA = 1076_u32
  DISPID_IDOMMOUSEWHEELEVENT_INITMOUSEWHEELEVENT = 1077_u32
  DISPID_IDOMWHEELEVENT_DELTAX = 1101_u32
  DISPID_IDOMWHEELEVENT_DELTAY = 1102_u32
  DISPID_IDOMWHEELEVENT_DELTAZ = 1103_u32
  DISPID_IDOMWHEELEVENT_DELTAMODE = 1104_u32
  DISPID_IDOMWHEELEVENT_INITWHEELEVENT = 1105_u32
  DISPID_IDOMTEXTEVENT_DATA = 1126_u32
  DISPID_IDOMTEXTEVENT_INPUTMETHOD = 1127_u32
  DISPID_IDOMTEXTEVENT_INITTEXTEVENT = 1128_u32
  DISPID_IDOMTEXTEVENT_LOCALE = 1129_u32
  DISPID_IDOMKEYBOARDEVENT_KEY = 1151_u32
  DISPID_IDOMKEYBOARDEVENT_LOCATION = 1152_u32
  DISPID_IDOMKEYBOARDEVENT_CTRLKEY = 1153_u32
  DISPID_IDOMKEYBOARDEVENT_SHIFTKEY = 1154_u32
  DISPID_IDOMKEYBOARDEVENT_ALTKEY = 1155_u32
  DISPID_IDOMKEYBOARDEVENT_METAKEY = 1156_u32
  DISPID_IDOMKEYBOARDEVENT_REPEAT = 1157_u32
  DISPID_IDOMKEYBOARDEVENT_GETMODIFIERSTATE = 1158_u32
  DISPID_IDOMKEYBOARDEVENT_INITKEYBOARDEVENT = 1159_u32
  DISPID_IDOMKEYBOARDEVENT_KEYCODE = 1160_u32
  DISPID_IDOMKEYBOARDEVENT_CHARCODE = 1161_u32
  DISPID_IDOMKEYBOARDEVENT_WHICH = 1162_u32
  DISPID_IDOMKEYBOARDEVENT_IE9_CHAR = 1163_u32
  DISPID_IDOMKEYBOARDEVENT_LOCALE = 1164_u32
  DISPID_IDOMCOMPOSITIONEVENT_DATA = 1176_u32
  DISPID_IDOMCOMPOSITIONEVENT_INITCOMPOSITIONEVENT = 1177_u32
  DISPID_IDOMCOMPOSITIONEVENT_LOCALE = 1178_u32
  DISPID_IDOMMUTATIONEVENT_RELATEDNODE = 1226_u32
  DISPID_IDOMMUTATIONEVENT_PREVVALUE = 1227_u32
  DISPID_IDOMMUTATIONEVENT_NEWVALUE = 1228_u32
  DISPID_IDOMMUTATIONEVENT_ATTRNAME = 1229_u32
  DISPID_IDOMMUTATIONEVENT_ATTRCHANGE = 1230_u32
  DISPID_IDOMMUTATIONEVENT_INITMUTATIONEVENT = 1231_u32
  DISPID_IDOMBEFOREUNLOADEVENT_RETURNVALUE = 1376_u32
  DISPID_IDOMFOCUSEVENT_RELATEDTARGET = 1251_u32
  DISPID_IDOMFOCUSEVENT_INITFOCUSEVENT = 1252_u32
  DISPID_IDOMCUSTOMEVENT_DETAIL = 1201_u32
  DISPID_IDOMCUSTOMEVENT_INITCUSTOMEVENT = 1202_u32
  DISPID_ICANVASGRADIENT_ADDCOLORSTOP = 1000_u32
  DISPID_ICANVASTEXTMETRICS_WIDTH = 1000_u32
  DISPID_ICANVASIMAGEDATA_WIDTH = 1000_u32
  DISPID_ICANVASIMAGEDATA_HEIGHT = 1001_u32
  DISPID_ICANVASIMAGEDATA_DATA = 1002_u32
  DISPID_ICANVASPIXELARRAY_LENGTH = 1000_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_CANVAS = 1000_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_RESTORE = 1001_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_SAVE = 1002_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_ROTATE = 1003_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_SCALE = 1004_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_SETTRANSFORM = 1005_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_TRANSFORM = 1006_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_TRANSLATE = 1007_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_GLOBALALPHA = 1008_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_GLOBALCOMPOSITEOPERATION = 1009_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_FILLSTYLE = 1010_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_STROKESTYLE = 1011_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_CREATELINEARGRADIENT = 1012_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_CREATERADIALGRADIENT = 1013_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_CREATEPATTERN = 1014_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_LINECAP = 1015_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_LINEJOIN = 1016_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_LINEWIDTH = 1017_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_MITERLIMIT = 1018_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_SHADOWBLUR = 1019_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_SHADOWCOLOR = 1020_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_SHADOWOFFSETX = 1021_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_SHADOWOFFSETY = 1022_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_CLEARRECT = 1023_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_FILLRECT = 1024_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_STROKERECT = 1025_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_ARC = 1026_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_ARCTO = 1027_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_BEGINPATH = 1028_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_BEZIERCURVETO = 1029_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_CLIP = 1030_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_CLOSEPATH = 1031_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_FILL = 1032_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_LINETO = 1033_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_MOVETO = 1034_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_QUADRATICCURVETO = 1035_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_RECT = 1036_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_STROKE = 1037_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_ISPOINTINPATH = 1038_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_FONT = 1039_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_TEXTALIGN = 1040_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_TEXTBASELINE = 1041_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_FILLTEXT = 1042_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_MEASURETEXT = 1043_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_STROKETEXT = 1044_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_DRAWIMAGE = 1045_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_CREATEIMAGEDATA = 1046_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_GETIMAGEDATA = 1047_u32
  DISPID_ICANVASRENDERINGCONTEXT2D_PUTIMAGEDATA = 1048_u32
  DISPID_IHTMLCANVASELEMENT_WIDTH = 65541_u32
  DISPID_IHTMLCANVASELEMENT_HEIGHT = 65542_u32
  DISPID_IHTMLCANVASELEMENT_GETCONTEXT = 1001_u32
  DISPID_IHTMLCANVASELEMENT_TODATAURL = 1002_u32
  DISPID_IDOMPROGRESSEVENT_LENGTHCOMPUTABLE = 1551_u32
  DISPID_IDOMPROGRESSEVENT_LOADED = 1552_u32
  DISPID_IDOMPROGRESSEVENT_TOTAL = 1553_u32
  DISPID_IDOMPROGRESSEVENT_INITPROGRESSEVENT = 1554_u32
  DISPID_IDOMMESSAGEEVENT_DATA = 1326_u32
  DISPID_IDOMMESSAGEEVENT_ORIGIN = 1327_u32
  DISPID_IDOMMESSAGEEVENT_SOURCE = 1328_u32
  DISPID_IDOMMESSAGEEVENT_INITMESSAGEEVENT = 1329_u32
  DISPID_IDOMSITEMODEEVENT_BUTTONID = 1301_u32
  DISPID_IDOMSITEMODEEVENT_ACTIONURL = 1302_u32
  DISPID_IDOMSTORAGEEVENT_KEY = 1351_u32
  DISPID_IDOMSTORAGEEVENT_OLDVALUE = 1352_u32
  DISPID_IDOMSTORAGEEVENT_NEWVALUE = 1353_u32
  DISPID_IDOMSTORAGEEVENT_URL = 1354_u32
  DISPID_IDOMSTORAGEEVENT_STORAGEAREA = 1355_u32
  DISPID_IDOMSTORAGEEVENT_INITSTORAGEEVENT = 1356_u32
  DISPID_IHTMLXMLHTTPREQUEST_READYSTATE = 1002_u32
  DISPID_IHTMLXMLHTTPREQUEST_RESPONSEBODY = 1003_u32
  DISPID_IHTMLXMLHTTPREQUEST_RESPONSETEXT = 1004_u32
  DISPID_IHTMLXMLHTTPREQUEST_RESPONSEXML = 1005_u32
  DISPID_IHTMLXMLHTTPREQUEST_STATUS = 1006_u32
  DISPID_IHTMLXMLHTTPREQUEST_STATUSTEXT = 1007_u32
  DISPID_IHTMLXMLHTTPREQUEST_ONREADYSTATECHANGE = 71561_u32
  DISPID_IHTMLXMLHTTPREQUEST_ABORT = 1009_u32
  DISPID_IHTMLXMLHTTPREQUEST_OPEN = 1010_u32
  DISPID_IHTMLXMLHTTPREQUEST_SEND = 1011_u32
  DISPID_IHTMLXMLHTTPREQUEST_GETALLRESPONSEHEADERS = 1012_u32
  DISPID_IHTMLXMLHTTPREQUEST_GETRESPONSEHEADER = 1013_u32
  DISPID_IHTMLXMLHTTPREQUEST_SETREQUESTHEADER = 1014_u32
  DISPID_IHTMLXMLHTTPREQUEST2_TIMEOUT = 1015_u32
  DISPID_IHTMLXMLHTTPREQUEST2_ONTIMEOUT = 71648_u32
  DISPID_IHTMLXMLHTTPREQUESTFACTORY_CREATE = 0_u32
  DISPID_HTMLXMLHTTPREQUESTEVENTS_ONTIMEOUT = 1016_u32
  DISPID_HTMLXMLHTTPREQUESTEVENTS_ONREADYSTATECHANGE = 1008_u32
  DISPID_ISVGANGLE_UNITTYPE = 1000_u32
  DISPID_ISVGANGLE_VALUE = 1001_u32
  DISPID_ISVGANGLE_VALUEINSPECIFIEDUNITS = 1002_u32
  DISPID_ISVGANGLE_VALUEASSTRING = 1003_u32
  DISPID_ISVGANGLE_NEWVALUESPECIFIEDUNITS = 1004_u32
  DISPID_ISVGANGLE_CONVERTTOSPECIFIEDUNITS = 1005_u32
  DISPID_ISVGSTYLABLE_CLASSNAME = 1001_u32
  DISPID_ISVGLOCATABLE_NEARESTVIEWPORTELEMENT = 1002_u32
  DISPID_ISVGLOCATABLE_FARTHESTVIEWPORTELEMENT = 1003_u32
  DISPID_ISVGLOCATABLE_GETBBOX = 1004_u32
  DISPID_ISVGLOCATABLE_GETCTM = 1005_u32
  DISPID_ISVGLOCATABLE_GETSCREENCTM = 1006_u32
  DISPID_ISVGLOCATABLE_GETTRANSFORMTOELEMENT = 1007_u32
  DISPID_ISVGTRANSFORMABLE_TRANSFORM = 1009_u32
  DISPID_ISVGTESTS_REQUIREDFEATURES = 1011_u32
  DISPID_ISVGTESTS_REQUIREDEXTENSIONS = 1013_u32
  DISPID_ISVGTESTS_SYSTEMLANGUAGE = 1015_u32
  DISPID_ISVGTESTS_HASEXTENSION = 1016_u32
  DISPID_ISVGLANGSPACE_XMLLANG = 1017_u32
  DISPID_ISVGLANGSPACE_XMLSPACE = 1018_u32
  DISPID_ISVGEXTERNALRESOURCESREQUIRED_EXTERNALRESOURCESREQUIRED = 1020_u32
  DISPID_ISVGFITTOVIEWBOX_VIEWBOX = 1022_u32
  DISPID_ISVGFITTOVIEWBOX_PRESERVEASPECTRATIO = 1024_u32
  DISPID_ISVGZOOMANDPAN_ZOOMANDPAN = 1025_u32
  DISPID_ISVGURIREFERENCE_HREF = 1026_u32
  DISPID_ISVGANIMATEDANGLE_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDANGLE_ANIMVAL = 1001_u32
  DISPID_ISVGANIMATEDTRANSFORMLIST_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDTRANSFORMLIST_ANIMVAL = 1001_u32
  DISPID_ISVGANIMATEDBOOLEAN_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDBOOLEAN_ANIMVAL = 1001_u32
  DISPID_ISVGANIMATEDENUMERATION_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDENUMERATION_ANIMVAL = 1001_u32
  DISPID_ISVGANIMATEDINTEGER_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDINTEGER_ANIMVAL = 1001_u32
  DISPID_ISVGANIMATEDLENGTH_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDLENGTH_ANIMVAL = 1001_u32
  DISPID_ISVGANIMATEDLENGTHLIST_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDLENGTHLIST_ANIMVAL = 1001_u32
  DISPID_ISVGANIMATEDNUMBER_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDNUMBER_ANIMVAL = 1001_u32
  DISPID_ISVGANIMATEDNUMBERLIST_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDNUMBERLIST_ANIMVAL = 1001_u32
  DISPID_ISVGANIMATEDRECT_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDRECT_ANIMVAL = 1001_u32
  DISPID_ISVGANIMATEDSTRING_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDSTRING_ANIMVAL = 1001_u32
  DISPID_ISVGCLIPPATHELEMENT_CLIPPATHUNITS = 1051_u32
  DISPID_ISVGDOCUMENT_ROOTELEMENT = 1116_u32
  DISPID_IGETSVGDOCUMENT_GETSVGDOCUMENT = 65615_u32
  DISPID_ISVGELEMENT_XMLBASE = 1032_u32
  DISPID_ISVGELEMENT_OWNERSVGELEMENT = 1033_u32
  DISPID_ISVGELEMENT_VIEWPORTELEMENT = 1034_u32
  DISPID_ISVGELEMENT_FOCUSABLE = 1036_u32
  DISPID_ISVGLENGTH_UNITTYPE = 1000_u32
  DISPID_ISVGLENGTH_VALUE = 1001_u32
  DISPID_ISVGLENGTH_VALUEINSPECIFIEDUNITS = 1002_u32
  DISPID_ISVGLENGTH_VALUEASSTRING = 1003_u32
  DISPID_ISVGLENGTH_NEWVALUESPECIFIEDUNITS = 1004_u32
  DISPID_ISVGLENGTH_CONVERTTOSPECIFIEDUNITS = 1005_u32
  DISPID_ISVGLENGTHLIST_NUMBEROFITEMS = 1000_u32
  DISPID_ISVGLENGTHLIST_CLEAR = 1001_u32
  DISPID_ISVGLENGTHLIST_INITIALIZE = 1002_u32
  DISPID_ISVGLENGTHLIST_GETITEM = 1003_u32
  DISPID_ISVGLENGTHLIST_INSERTITEMBEFORE = 1004_u32
  DISPID_ISVGLENGTHLIST_REPLACEITEM = 1005_u32
  DISPID_ISVGLENGTHLIST_REMOVEITEM = 1006_u32
  DISPID_ISVGLENGTHLIST_APPENDITEM = 1007_u32
  DISPID_ISVGMATRIX_A = 1000_u32
  DISPID_ISVGMATRIX_B = 1001_u32
  DISPID_ISVGMATRIX_C = 1002_u32
  DISPID_ISVGMATRIX_D = 1003_u32
  DISPID_ISVGMATRIX_E = 1004_u32
  DISPID_ISVGMATRIX_F = 1005_u32
  DISPID_ISVGMATRIX_MULTIPLY = 1006_u32
  DISPID_ISVGMATRIX_INVERSE = 1007_u32
  DISPID_ISVGMATRIX_TRANSLATE = 1008_u32
  DISPID_ISVGMATRIX_SCALE = 1009_u32
  DISPID_ISVGMATRIX_SCALENONUNIFORM = 1010_u32
  DISPID_ISVGMATRIX_ROTATE = 1011_u32
  DISPID_ISVGMATRIX_ROTATEFROMVECTOR = 1012_u32
  DISPID_ISVGMATRIX_FLIPX = 1013_u32
  DISPID_ISVGMATRIX_FLIPY = 1014_u32
  DISPID_ISVGMATRIX_SKEWX = 1015_u32
  DISPID_ISVGMATRIX_SKEWY = 1016_u32
  DISPID_ISVGNUMBER_VALUE = 1000_u32
  DISPID_ISVGNUMBERLIST_NUMBEROFITEMS = 1000_u32
  DISPID_ISVGNUMBERLIST_CLEAR = 1001_u32
  DISPID_ISVGNUMBERLIST_INITIALIZE = 1002_u32
  DISPID_ISVGNUMBERLIST_GETITEM = 1003_u32
  DISPID_ISVGNUMBERLIST_INSERTITEMBEFORE = 1004_u32
  DISPID_ISVGNUMBERLIST_REPLACEITEM = 1005_u32
  DISPID_ISVGNUMBERLIST_REMOVEITEM = 1006_u32
  DISPID_ISVGNUMBERLIST_APPENDITEM = 1007_u32
  DISPID_ISVGPATTERNELEMENT_PATTERNUNITS = 1051_u32
  DISPID_ISVGPATTERNELEMENT_PATTERNCONTENTUNITS = 1053_u32
  DISPID_ISVGPATTERNELEMENT_PATTERNTRANSFORM = 1055_u32
  DISPID_ISVGPATTERNELEMENT_X = 1057_u32
  DISPID_ISVGPATTERNELEMENT_Y = 1059_u32
  DISPID_ISVGPATTERNELEMENT_WIDTH = 1061_u32
  DISPID_ISVGPATTERNELEMENT_HEIGHT = 1063_u32
  DISPID_ISVGPATHSEG_PATHSEGTYPE = 1000_u32
  DISPID_ISVGPATHSEG_PATHSEGTYPEASLETTER = 1001_u32
  DISPID_ISVGPATHSEGARCABS_X = 1020_u32
  DISPID_ISVGPATHSEGARCABS_Y = 1021_u32
  DISPID_ISVGPATHSEGARCABS_R1 = 1022_u32
  DISPID_ISVGPATHSEGARCABS_R2 = 1023_u32
  DISPID_ISVGPATHSEGARCABS_ANGLE = 1024_u32
  DISPID_ISVGPATHSEGARCABS_LARGEARCFLAG = 1025_u32
  DISPID_ISVGPATHSEGARCABS_SWEEPFLAG = 1026_u32
  DISPID_ISVGPATHSEGARCREL_X = 1020_u32
  DISPID_ISVGPATHSEGARCREL_Y = 1021_u32
  DISPID_ISVGPATHSEGARCREL_R1 = 1022_u32
  DISPID_ISVGPATHSEGARCREL_R2 = 1023_u32
  DISPID_ISVGPATHSEGARCREL_ANGLE = 1024_u32
  DISPID_ISVGPATHSEGARCREL_LARGEARCFLAG = 1025_u32
  DISPID_ISVGPATHSEGARCREL_SWEEPFLAG = 1026_u32
  DISPID_ISVGPATHSEGMOVETOABS_X = 1020_u32
  DISPID_ISVGPATHSEGMOVETOABS_Y = 1021_u32
  DISPID_ISVGPATHSEGMOVETOREL_X = 1020_u32
  DISPID_ISVGPATHSEGMOVETOREL_Y = 1021_u32
  DISPID_ISVGPATHSEGLINETOABS_X = 1020_u32
  DISPID_ISVGPATHSEGLINETOABS_Y = 1021_u32
  DISPID_ISVGPATHSEGLINETOREL_X = 1020_u32
  DISPID_ISVGPATHSEGLINETOREL_Y = 1021_u32
  DISPID_ISVGPATHSEGCURVETOCUBICABS_X = 1020_u32
  DISPID_ISVGPATHSEGCURVETOCUBICABS_Y = 1021_u32
  DISPID_ISVGPATHSEGCURVETOCUBICABS_X1 = 1022_u32
  DISPID_ISVGPATHSEGCURVETOCUBICABS_Y1 = 1023_u32
  DISPID_ISVGPATHSEGCURVETOCUBICABS_X2 = 1024_u32
  DISPID_ISVGPATHSEGCURVETOCUBICABS_Y2 = 1025_u32
  DISPID_ISVGPATHSEGCURVETOCUBICREL_X = 1020_u32
  DISPID_ISVGPATHSEGCURVETOCUBICREL_Y = 1021_u32
  DISPID_ISVGPATHSEGCURVETOCUBICREL_X1 = 1022_u32
  DISPID_ISVGPATHSEGCURVETOCUBICREL_Y1 = 1023_u32
  DISPID_ISVGPATHSEGCURVETOCUBICREL_X2 = 1024_u32
  DISPID_ISVGPATHSEGCURVETOCUBICREL_Y2 = 1025_u32
  DISPID_ISVGPATHSEGCURVETOCUBICSMOOTHABS_X = 1020_u32
  DISPID_ISVGPATHSEGCURVETOCUBICSMOOTHABS_Y = 1021_u32
  DISPID_ISVGPATHSEGCURVETOCUBICSMOOTHABS_X2 = 1022_u32
  DISPID_ISVGPATHSEGCURVETOCUBICSMOOTHABS_Y2 = 1023_u32
  DISPID_ISVGPATHSEGCURVETOCUBICSMOOTHREL_X = 1020_u32
  DISPID_ISVGPATHSEGCURVETOCUBICSMOOTHREL_Y = 1021_u32
  DISPID_ISVGPATHSEGCURVETOCUBICSMOOTHREL_X2 = 1022_u32
  DISPID_ISVGPATHSEGCURVETOCUBICSMOOTHREL_Y2 = 1023_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICABS_X = 1020_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICABS_Y = 1021_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICABS_X1 = 1022_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICABS_Y1 = 1023_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICREL_X = 1020_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICREL_Y = 1021_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICREL_X1 = 1022_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICREL_Y1 = 1023_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICSMOOTHABS_X = 1020_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICSMOOTHABS_Y = 1021_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICSMOOTHREL_X = 1020_u32
  DISPID_ISVGPATHSEGCURVETOQUADRATICSMOOTHREL_Y = 1021_u32
  DISPID_ISVGPATHSEGLINETOHORIZONTALABS_X = 1020_u32
  DISPID_ISVGPATHSEGLINETOHORIZONTALREL_X = 1020_u32
  DISPID_ISVGPATHSEGLINETOVERTICALABS_Y = 1020_u32
  DISPID_ISVGPATHSEGLINETOVERTICALREL_Y = 1020_u32
  DISPID_ISVGPATHSEGLIST_NUMBEROFITEMS = 1000_u32
  DISPID_ISVGPATHSEGLIST_CLEAR = 1001_u32
  DISPID_ISVGPATHSEGLIST_INITIALIZE = 1002_u32
  DISPID_ISVGPATHSEGLIST_GETITEM = 1003_u32
  DISPID_ISVGPATHSEGLIST_INSERTITEMBEFORE = 1004_u32
  DISPID_ISVGPATHSEGLIST_REPLACEITEM = 1005_u32
  DISPID_ISVGPATHSEGLIST_REMOVEITEM = 1006_u32
  DISPID_ISVGPATHSEGLIST_APPENDITEM = 1007_u32
  DISPID_ISVGPOINT_X = 1000_u32
  DISPID_ISVGPOINT_Y = 1001_u32
  DISPID_ISVGPOINT_MATRIXTRANSFORM = 1002_u32
  DISPID_ISVGPOINTLIST_NUMBEROFITEMS = 1000_u32
  DISPID_ISVGPOINTLIST_CLEAR = 1001_u32
  DISPID_ISVGPOINTLIST_INITIALIZE = 1002_u32
  DISPID_ISVGPOINTLIST_GETITEM = 1003_u32
  DISPID_ISVGPOINTLIST_INSERTITEMBEFORE = 1004_u32
  DISPID_ISVGPOINTLIST_REPLACEITEM = 1005_u32
  DISPID_ISVGPOINTLIST_REMOVEITEM = 1006_u32
  DISPID_ISVGPOINTLIST_APPENDITEM = 1007_u32
  DISPID_ISVGRECT_X = 1000_u32
  DISPID_ISVGRECT_Y = 1001_u32
  DISPID_ISVGRECT_WIDTH = 1002_u32
  DISPID_ISVGRECT_HEIGHT = 1003_u32
  DISPID_ISVGSTRINGLIST_NUMBEROFITEMS = 1000_u32
  DISPID_ISVGSTRINGLIST_CLEAR = 1001_u32
  DISPID_ISVGSTRINGLIST_INITIALIZE = 1002_u32
  DISPID_ISVGSTRINGLIST_GETITEM = 1003_u32
  DISPID_ISVGSTRINGLIST_INSERTITEMBEFORE = 1004_u32
  DISPID_ISVGSTRINGLIST_REPLACEITEM = 1005_u32
  DISPID_ISVGSTRINGLIST_REMOVEITEM = 1006_u32
  DISPID_ISVGSTRINGLIST_APPENDITEM = 1007_u32
  DISPID_ISVGTRANSFORM_TYPE = 1000_u32
  DISPID_ISVGTRANSFORM_MATRIX = 1001_u32
  DISPID_ISVGTRANSFORM_ANGLE = 1002_u32
  DISPID_ISVGTRANSFORM_SETMATRIX = 1003_u32
  DISPID_ISVGTRANSFORM_SETTRANSLATE = 1004_u32
  DISPID_ISVGTRANSFORM_SETSCALE = 1005_u32
  DISPID_ISVGTRANSFORM_SETROTATE = 1006_u32
  DISPID_ISVGTRANSFORM_SETSKEWX = 1007_u32
  DISPID_ISVGTRANSFORM_SETSKEWY = 1008_u32
  DISPID_ISVGSVGELEMENT_X = 1052_u32
  DISPID_ISVGSVGELEMENT_Y = 1054_u32
  DISPID_ISVGSVGELEMENT_WIDTH = 1056_u32
  DISPID_ISVGSVGELEMENT_HEIGHT = 1058_u32
  DISPID_ISVGSVGELEMENT_CONTENTSCRIPTTYPE = 1059_u32
  DISPID_ISVGSVGELEMENT_CONTENTSTYLETYPE = 1060_u32
  DISPID_ISVGSVGELEMENT_VIEWPORT = 1061_u32
  DISPID_ISVGSVGELEMENT_PIXELUNITTOMILLIMETERX = 1062_u32
  DISPID_ISVGSVGELEMENT_PIXELUNITTOMILLIMETERY = 1063_u32
  DISPID_ISVGSVGELEMENT_SCREENPIXELTOMILLIMETERX = 1064_u32
  DISPID_ISVGSVGELEMENT_SCREENPIXELTOMILLIMETERY = 1065_u32
  DISPID_ISVGSVGELEMENT_USECURRENTVIEW = 1066_u32
  DISPID_ISVGSVGELEMENT_CURRENTVIEW = 1067_u32
  DISPID_ISVGSVGELEMENT_CURRENTSCALE = 1068_u32
  DISPID_ISVGSVGELEMENT_CURRENTTRANSLATE = 1069_u32
  DISPID_ISVGSVGELEMENT_SUSPENDREDRAW = 1070_u32
  DISPID_ISVGSVGELEMENT_UNSUSPENDREDRAW = 1071_u32
  DISPID_ISVGSVGELEMENT_UNSUSPENDREDRAWALL = 1072_u32
  DISPID_ISVGSVGELEMENT_FORCEREDRAW = 1073_u32
  DISPID_ISVGSVGELEMENT_PAUSEANIMATIONS = 1074_u32
  DISPID_ISVGSVGELEMENT_UNPAUSEANIMATIONS = 1075_u32
  DISPID_ISVGSVGELEMENT_ANIMATIONSPAUSED = 1076_u32
  DISPID_ISVGSVGELEMENT_GETCURRENTTIME = 1077_u32
  DISPID_ISVGSVGELEMENT_SETCURRENTTIME = 1078_u32
  DISPID_ISVGSVGELEMENT_GETINTERSECTIONLIST = 1079_u32
  DISPID_ISVGSVGELEMENT_GETENCLOSURELIST = 1080_u32
  DISPID_ISVGSVGELEMENT_CHECKINTERSECTION = 1081_u32
  DISPID_ISVGSVGELEMENT_CHECKENCLOSURE = 1082_u32
  DISPID_ISVGSVGELEMENT_DESELECTALL = 1083_u32
  DISPID_ISVGSVGELEMENT_CREATESVGNUMBER = 1084_u32
  DISPID_ISVGSVGELEMENT_CREATESVGLENGTH = 1085_u32
  DISPID_ISVGSVGELEMENT_CREATESVGANGLE = 1086_u32
  DISPID_ISVGSVGELEMENT_CREATESVGPOINT = 1087_u32
  DISPID_ISVGSVGELEMENT_CREATESVGMATRIX = 1088_u32
  DISPID_ISVGSVGELEMENT_CREATESVGRECT = 1089_u32
  DISPID_ISVGSVGELEMENT_CREATESVGTRANSFORM = 1090_u32
  DISPID_ISVGSVGELEMENT_CREATESVGTRANSFORMFROMMATRIX = 1091_u32
  DISPID_ISVGSVGELEMENT_GETELEMENTBYID = 1092_u32
  DISPID_ISVGUSEELEMENT_X = 1052_u32
  DISPID_ISVGUSEELEMENT_Y = 1054_u32
  DISPID_ISVGUSEELEMENT_WIDTH = 1056_u32
  DISPID_ISVGUSEELEMENT_HEIGHT = 1058_u32
  DISPID_ISVGUSEELEMENT_INSTANCEROOT = 1059_u32
  DISPID_ISVGUSEELEMENT_ANIMATEDINSTANCEROOT = 1060_u32
  DISPID_IHTMLSTYLESHEETRULESAPPLIEDCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLSTYLESHEETRULESAPPLIEDCOLLECTION_LENGTH = 1001_u32
  DISPID_IHTMLSTYLESHEETRULESAPPLIEDCOLLECTION_PROPERTYAPPLIEDBY = 1002_u32
  DISPID_IHTMLSTYLESHEETRULESAPPLIEDCOLLECTION_PROPERTYAPPLIEDTRACE = 1004_u32
  DISPID_IHTMLSTYLESHEETRULESAPPLIEDCOLLECTION_PROPERTYAPPLIEDTRACELENGTH = 1005_u32
  DISPID_IRULESAPPLIED_ELEMENT = 1001_u32
  DISPID_IRULESAPPLIED_INLINESTYLES = 1002_u32
  DISPID_IRULESAPPLIED_APPLIEDRULES = 1003_u32
  DISPID_IRULESAPPLIED_PROPERTYISINLINE = 1004_u32
  DISPID_IRULESAPPLIED_PROPERTYISINHERITABLE = 1005_u32
  DISPID_IRULESAPPLIED_HASINHERITABLEPROPERTY = 1006_u32
  DISPID_IRULESAPPLIEDCOLLECTION_ITEM = 0_u32
  DISPID_IRULESAPPLIEDCOLLECTION_LENGTH = 1001_u32
  DISPID_IRULESAPPLIEDCOLLECTION_ELEMENT = 1002_u32
  DISPID_IRULESAPPLIEDCOLLECTION_PROPERTYINHERITEDFROM = 1003_u32
  DISPID_IRULESAPPLIEDCOLLECTION_PROPERTYCOUNT = 1004_u32
  DISPID_IRULESAPPLIEDCOLLECTION_PROPERTY = 1005_u32
  DISPID_IRULESAPPLIEDCOLLECTION_PROPERTYINHERITEDTRACE = 1006_u32
  DISPID_IRULESAPPLIEDCOLLECTION_PROPERTYINHERITEDTRACELENGTH = 1007_u32
  DISPID_ISVGTRANSFORMLIST_NUMBEROFITEMS = 1000_u32
  DISPID_ISVGTRANSFORMLIST_CLEAR = 1001_u32
  DISPID_ISVGTRANSFORMLIST_INITIALIZE = 1002_u32
  DISPID_ISVGTRANSFORMLIST_GETITEM = 1003_u32
  DISPID_ISVGTRANSFORMLIST_INSERTITEMBEFORE = 1004_u32
  DISPID_ISVGTRANSFORMLIST_REPLACEITEM = 1005_u32
  DISPID_ISVGTRANSFORMLIST_REMOVEITEM = 1006_u32
  DISPID_ISVGTRANSFORMLIST_APPENDITEM = 1007_u32
  DISPID_ISVGTRANSFORMLIST_CREATESVGTRANSFORMFROMMATRIX = 1008_u32
  DISPID_ISVGTRANSFORMLIST_CONSOLIDATE = 1009_u32
  DISPID_ISVGANIMATEDPOINTS_POINTS = 1050_u32
  DISPID_ISVGANIMATEDPOINTS_ANIMATEDPOINTS = 1052_u32
  DISPID_ISVGCIRCLEELEMENT_CX = 1052_u32
  DISPID_ISVGCIRCLEELEMENT_CY = 1054_u32
  DISPID_ISVGCIRCLEELEMENT_R = 1056_u32
  DISPID_ISVGELLIPSEELEMENT_CX = 1052_u32
  DISPID_ISVGELLIPSEELEMENT_CY = 1054_u32
  DISPID_ISVGELLIPSEELEMENT_RX = 1056_u32
  DISPID_ISVGELLIPSEELEMENT_RY = 1058_u32
  DISPID_ISVGLINEELEMENT_X1 = 1052_u32
  DISPID_ISVGLINEELEMENT_Y1 = 1054_u32
  DISPID_ISVGLINEELEMENT_X2 = 1056_u32
  DISPID_ISVGLINEELEMENT_Y2 = 1058_u32
  DISPID_ISVGRECTELEMENT_X = 1052_u32
  DISPID_ISVGRECTELEMENT_Y = 1054_u32
  DISPID_ISVGRECTELEMENT_WIDTH = 1056_u32
  DISPID_ISVGRECTELEMENT_HEIGHT = 1058_u32
  DISPID_ISVGRECTELEMENT_RX = 1060_u32
  DISPID_ISVGRECTELEMENT_RY = 1062_u32
  DISPID_ISVGANIMATEDPATHDATA_PATHSEGLIST = 1052_u32
  DISPID_ISVGANIMATEDPATHDATA_NORMALIZEDPATHSEGLIST = 1076_u32
  DISPID_ISVGANIMATEDPATHDATA_ANIMATEDPATHSEGLIST = 1077_u32
  DISPID_ISVGANIMATEDPATHDATA_ANIMATEDNORMALIZEDPATHSEGLIST = 1078_u32
  DISPID_ISVGPATHELEMENT_PATHLENGTH = 1053_u32
  DISPID_ISVGPATHELEMENT_GETTOTALLENGTH = 1073_u32
  DISPID_ISVGPATHELEMENT_GETPOINTATLENGTH = 1074_u32
  DISPID_ISVGPATHELEMENT_GETPATHSEGATLENGTH = 1075_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGCLOSEPATH = 1054_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGMOVETOABS = 1055_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGMOVETOREL = 1056_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGLINETOABS = 1057_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGLINETOREL = 1058_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGCURVETOCUBICABS = 1059_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGCURVETOCUBICREL = 1060_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGCURVETOQUADRATICABS = 1061_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGCURVETOQUADRATICREL = 1062_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGARCABS = 1063_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGARCREL = 1064_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGLINETOHORIZONTALABS = 1065_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGLINETOHORIZONTALREL = 1066_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGLINETOVERTICALABS = 1067_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGLINETOVERTICALREL = 1068_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGCURVETOCUBICSMOOTHABS = 1069_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGCURVETOCUBICSMOOTHREL = 1070_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGCURVETOQUADRATICSMOOTHABS = 1071_u32
  DISPID_ISVGPATHELEMENT_CREATESVGPATHSEGCURVETOQUADRATICSMOOTHREL = 1072_u32
  DISPID_ISVGPRESERVEASPECTRATIO_ALIGN = 1000_u32
  DISPID_ISVGPRESERVEASPECTRATIO_MEETORSLICE = 1001_u32
  DISPID_ISVGANIMATEDPRESERVEASPECTRATIO_BASEVAL = 1000_u32
  DISPID_ISVGANIMATEDPRESERVEASPECTRATIO_ANIMVAL = 1001_u32
  DISPID_ISVGIMAGEELEMENT_X = 1051_u32
  DISPID_ISVGIMAGEELEMENT_Y = 1053_u32
  DISPID_ISVGIMAGEELEMENT_WIDTH = 1055_u32
  DISPID_ISVGIMAGEELEMENT_HEIGHT = 1057_u32
  DISPID_ISVGSTOPELEMENT_OFFSET = 1051_u32
  DISPID_ISVGGRADIENTELEMENT_GRADIENTUNITS = 1051_u32
  DISPID_ISVGGRADIENTELEMENT_GRADIENTTRANSFORM = 1053_u32
  DISPID_ISVGGRADIENTELEMENT_SPREADMETHOD = 1055_u32
  DISPID_ISVGLINEARGRADIENTELEMENT_X1 = 1071_u32
  DISPID_ISVGLINEARGRADIENTELEMENT_Y1 = 1073_u32
  DISPID_ISVGLINEARGRADIENTELEMENT_X2 = 1075_u32
  DISPID_ISVGLINEARGRADIENTELEMENT_Y2 = 1077_u32
  DISPID_ISVGRADIALGRADIENTELEMENT_CX = 1071_u32
  DISPID_ISVGRADIALGRADIENTELEMENT_CY = 1073_u32
  DISPID_ISVGRADIALGRADIENTELEMENT_R = 1075_u32
  DISPID_ISVGRADIALGRADIENTELEMENT_FX = 1077_u32
  DISPID_ISVGRADIALGRADIENTELEMENT_FY = 1079_u32
  DISPID_ISVGMASKELEMENT_MASKUNITS = 1051_u32
  DISPID_ISVGMASKELEMENT_MASKCONTENTUNITS = 1053_u32
  DISPID_ISVGMASKELEMENT_X = 1055_u32
  DISPID_ISVGMASKELEMENT_Y = 1057_u32
  DISPID_ISVGMASKELEMENT_WIDTH = 1059_u32
  DISPID_ISVGMASKELEMENT_HEIGHT = 1061_u32
  DISPID_ISVGMARKERELEMENT_REFX = 1051_u32
  DISPID_ISVGMARKERELEMENT_REFY = 1053_u32
  DISPID_ISVGMARKERELEMENT_MARKERUNITS = 1055_u32
  DISPID_ISVGMARKERELEMENT_MARKERWIDTH = 1057_u32
  DISPID_ISVGMARKERELEMENT_MARKERHEIGHT = 1059_u32
  DISPID_ISVGMARKERELEMENT_ORIENTTYPE = 1061_u32
  DISPID_ISVGMARKERELEMENT_ORIENTANGLE = 1062_u32
  DISPID_ISVGMARKERELEMENT_SETORIENTTOAUTO = 1063_u32
  DISPID_ISVGMARKERELEMENT_SETORIENTTOANGLE = 1064_u32
  DISPID_ISVGZOOMEVENT_ZOOMRECTSCREEN = 1276_u32
  DISPID_ISVGZOOMEVENT_PREVIOUSSCALE = 1277_u32
  DISPID_ISVGZOOMEVENT_PREVIOUSTRANSLATE = 1278_u32
  DISPID_ISVGZOOMEVENT_NEWSCALE = 1279_u32
  DISPID_ISVGZOOMEVENT_NEWTRANSLATE = 1280_u32
  DISPID_ISVGAELEMENT_TARGET = 1052_u32
  DISPID_ISVGVIEWELEMENT_VIEWTARGET = 1052_u32
  DISPID_IHTMLMEDIAERROR_CODE = 1000_u32
  DISPID_IHTMLTIMERANGES_LENGTH = 1000_u32
  DISPID_IHTMLTIMERANGES_START = 1001_u32
  DISPID_IHTMLTIMERANGES_END = 1002_u32
  DISPID_IHTMLTIMERANGES2_STARTDOUBLE = 1003_u32
  DISPID_IHTMLTIMERANGES2_ENDDOUBLE = 1004_u32
  DISPID_IHTMLMEDIAELEMENT_ERROR = 1000_u32
  DISPID_IHTMLMEDIAELEMENT_SRC = 1001_u32
  DISPID_IHTMLMEDIAELEMENT_CURRENTSRC = 1002_u32
  DISPID_IHTMLMEDIAELEMENT_NETWORKSTATE = 1003_u32
  DISPID_IHTMLMEDIAELEMENT_PRELOAD = 1004_u32
  DISPID_IHTMLMEDIAELEMENT_BUFFERED = 1005_u32
  DISPID_IHTMLMEDIAELEMENT_LOAD = 1006_u32
  DISPID_IHTMLMEDIAELEMENT_CANPLAYTYPE = 1007_u32
  DISPID_IHTMLMEDIAELEMENT_SEEKING = 1009_u32
  DISPID_IHTMLMEDIAELEMENT_CURRENTTIME = 1010_u32
  DISPID_IHTMLMEDIAELEMENT_INITIALTIME = 1011_u32
  DISPID_IHTMLMEDIAELEMENT_DURATION = 1012_u32
  DISPID_IHTMLMEDIAELEMENT_PAUSED = 1013_u32
  DISPID_IHTMLMEDIAELEMENT_DEFAULTPLAYBACKRATE = 1014_u32
  DISPID_IHTMLMEDIAELEMENT_PLAYBACKRATE = 1015_u32
  DISPID_IHTMLMEDIAELEMENT_PLAYED = 1016_u32
  DISPID_IHTMLMEDIAELEMENT_SEEKABLE = 1017_u32
  DISPID_IHTMLMEDIAELEMENT_ENDED = 1018_u32
  DISPID_IHTMLMEDIAELEMENT_AUTOPLAY = 1019_u32
  DISPID_IHTMLMEDIAELEMENT_LOOP = 1020_u32
  DISPID_IHTMLMEDIAELEMENT_PLAY = 1021_u32
  DISPID_IHTMLMEDIAELEMENT_PAUSE = 1022_u32
  DISPID_IHTMLMEDIAELEMENT_CONTROLS = 1023_u32
  DISPID_IHTMLMEDIAELEMENT_VOLUME = 1024_u32
  DISPID_IHTMLMEDIAELEMENT_MUTED = 1025_u32
  DISPID_IHTMLMEDIAELEMENT_AUTOBUFFER = 1026_u32
  DISPID_IHTMLMEDIAELEMENT2_CURRENTTIMEDOUBLE = 1027_u32
  DISPID_IHTMLMEDIAELEMENT2_INITIALTIMEDOUBLE = 1028_u32
  DISPID_IHTMLMEDIAELEMENT2_DURATIONDOUBLE = 1029_u32
  DISPID_IHTMLMEDIAELEMENT2_DEFAULTPLAYBACKRATEDOUBLE = 1030_u32
  DISPID_IHTMLMEDIAELEMENT2_PLAYBACKRATEDOUBLE = 1031_u32
  DISPID_IHTMLMEDIAELEMENT2_VOLUMEDOUBLE = 1032_u32
  DISPID_IHTMLMSMEDIAELEMENT_MSPLAYTODISABLED = 1033_u32
  DISPID_IHTMLMSMEDIAELEMENT_MSPLAYTOPRIMARY = 1034_u32
  DISPID_IHTMLSOURCEELEMENT_SRC = 1000_u32
  DISPID_IHTMLSOURCEELEMENT_TYPE = 1001_u32
  DISPID_IHTMLSOURCEELEMENT_MEDIA = 1002_u32
  DISPID_IHTMLVIDEOELEMENT_WIDTH = 65541_u32
  DISPID_IHTMLVIDEOELEMENT_HEIGHT = 65542_u32
  DISPID_IHTMLVIDEOELEMENT_VIDEOWIDTH = 1050_u32
  DISPID_IHTMLVIDEOELEMENT_VIDEOHEIGHT = 1051_u32
  DISPID_IHTMLVIDEOELEMENT_POSTER = 1052_u32
  DISPID_IHTMLAUDIOELEMENTFACTORY_CREATE = 0_u32
  DISPID_ISVGELEMENTINSTANCE_CORRESPONDINGELEMENT = 1000_u32
  DISPID_ISVGELEMENTINSTANCE_CORRESPONDINGUSEELEMENT = 1001_u32
  DISPID_ISVGELEMENTINSTANCE_PARENTNODE = 1002_u32
  DISPID_ISVGELEMENTINSTANCE_CHILDNODES = 1003_u32
  DISPID_ISVGELEMENTINSTANCE_FIRSTCHILD = 1004_u32
  DISPID_ISVGELEMENTINSTANCE_LASTCHILD = 1005_u32
  DISPID_ISVGELEMENTINSTANCE_PREVIOUSSIBLING = 1006_u32
  DISPID_ISVGELEMENTINSTANCE_NEXTSIBLING = 1007_u32
  DISPID_ISVGELEMENTINSTANCELIST_LENGTH = 1000_u32
  DISPID_ISVGELEMENTINSTANCELIST_ITEM = 1001_u32
  DISPID_IDOMEXCEPTION_CODE = 1000_u32
  DISPID_IDOMEXCEPTION_MESSAGE = 1001_u32
  DISPID_IRANGEEXCEPTION_CODE = 1000_u32
  DISPID_IRANGEEXCEPTION_MESSAGE = 1001_u32
  DISPID_ISVGEXCEPTION_CODE = 1000_u32
  DISPID_ISVGEXCEPTION_MESSAGE = 1001_u32
  DISPID_IEVENTEXCEPTION_CODE = 1000_u32
  DISPID_IEVENTEXCEPTION_MESSAGE = 1001_u32
  DISPID_ISVGSCRIPTELEMENT_TYPE = 1052_u32
  DISPID_ISVGSTYLEELEMENT_TYPE = 1051_u32
  DISPID_ISVGSTYLEELEMENT_MEDIA = 1052_u32
  DISPID_ISVGTEXTCONTENTELEMENT_TEXTLENGTH = 1053_u32
  DISPID_ISVGTEXTCONTENTELEMENT_LENGTHADJUST = 1051_u32
  DISPID_ISVGTEXTCONTENTELEMENT_GETNUMBEROFCHARS = 1054_u32
  DISPID_ISVGTEXTCONTENTELEMENT_GETCOMPUTEDTEXTLENGTH = 1055_u32
  DISPID_ISVGTEXTCONTENTELEMENT_GETSUBSTRINGLENGTH = 1056_u32
  DISPID_ISVGTEXTCONTENTELEMENT_GETSTARTPOSITIONOFCHAR = 1057_u32
  DISPID_ISVGTEXTCONTENTELEMENT_GETENDPOSITIONOFCHAR = 1058_u32
  DISPID_ISVGTEXTCONTENTELEMENT_GETEXTENTOFCHAR = 1059_u32
  DISPID_ISVGTEXTCONTENTELEMENT_GETROTATIONOFCHAR = 1060_u32
  DISPID_ISVGTEXTCONTENTELEMENT_GETCHARNUMATPOSITION = 1061_u32
  DISPID_ISVGTEXTCONTENTELEMENT_SELECTSUBSTRING = 1062_u32
  DISPID_ISVGTEXTPOSITIONINGELEMENT_X = 1071_u32
  DISPID_ISVGTEXTPOSITIONINGELEMENT_Y = 1073_u32
  DISPID_ISVGTEXTPOSITIONINGELEMENT_DX = 1075_u32
  DISPID_ISVGTEXTPOSITIONINGELEMENT_DY = 1077_u32
  DISPID_ISVGTEXTPOSITIONINGELEMENT_ROTATE = 1079_u32
  DISPID_IDOMDOCUMENTTYPE_NAME = 1000_u32
  DISPID_IDOMDOCUMENTTYPE_ENTITIES = 1001_u32
  DISPID_IDOMDOCUMENTTYPE_NOTATIONS = 1002_u32
  DISPID_IDOMDOCUMENTTYPE_PUBLICID = 1003_u32
  DISPID_IDOMDOCUMENTTYPE_SYSTEMID = 1004_u32
  DISPID_IDOMDOCUMENTTYPE_INTERNALSUBSET = 1005_u32
  DISPID_IDOMNODEITERATOR_ROOT = 1000_u32
  DISPID_IDOMNODEITERATOR_WHATTOSHOW = 1001_u32
  DISPID_IDOMNODEITERATOR_FILTER = 1002_u32
  DISPID_IDOMNODEITERATOR_EXPANDENTITYREFERENCES = 1003_u32
  DISPID_IDOMNODEITERATOR_NEXTNODE = 1010_u32
  DISPID_IDOMNODEITERATOR_PREVIOUSNODE = 1011_u32
  DISPID_IDOMNODEITERATOR_DETACH = 1012_u32
  DISPID_IDOMTREEWALKER_ROOT = 1000_u32
  DISPID_IDOMTREEWALKER_WHATTOSHOW = 1001_u32
  DISPID_IDOMTREEWALKER_FILTER = 1002_u32
  DISPID_IDOMTREEWALKER_EXPANDENTITYREFERENCES = 1003_u32
  DISPID_IDOMTREEWALKER_CURRENTNODE = 1020_u32
  DISPID_IDOMTREEWALKER_PARENTNODE = 1021_u32
  DISPID_IDOMTREEWALKER_FIRSTCHILD = 1022_u32
  DISPID_IDOMTREEWALKER_LASTCHILD = 1023_u32
  DISPID_IDOMTREEWALKER_PREVIOUSSIBLING = 1024_u32
  DISPID_IDOMTREEWALKER_NEXTSIBLING = 1025_u32
  DISPID_IDOMTREEWALKER_PREVIOUSNODE = 1026_u32
  DISPID_IDOMTREEWALKER_NEXTNODE = 1027_u32
  DISPID_IDOMPROCESSINGINSTRUCTION_TARGET = 1000_u32
  DISPID_IDOMPROCESSINGINSTRUCTION_DATA = 1001_u32
  DISPID_IHTMLPERFORMANCE_NAVIGATION = 1000_u32
  DISPID_IHTMLPERFORMANCE_TIMING = 1001_u32
  DISPID_IHTMLPERFORMANCE_TOSTRING = 1002_u32
  DISPID_IHTMLPERFORMANCE_TOJSON = 1003_u32
  DISPID_IHTMLPERFORMANCENAVIGATION_TYPE = 1000_u32
  DISPID_IHTMLPERFORMANCENAVIGATION_REDIRECTCOUNT = 1001_u32
  DISPID_IHTMLPERFORMANCENAVIGATION_TOSTRING = 1002_u32
  DISPID_IHTMLPERFORMANCENAVIGATION_TOJSON = 1003_u32
  DISPID_IHTMLPERFORMANCETIMING_NAVIGATIONSTART = 1000_u32
  DISPID_IHTMLPERFORMANCETIMING_UNLOADEVENTSTART = 1001_u32
  DISPID_IHTMLPERFORMANCETIMING_UNLOADEVENTEND = 1002_u32
  DISPID_IHTMLPERFORMANCETIMING_REDIRECTSTART = 1003_u32
  DISPID_IHTMLPERFORMANCETIMING_REDIRECTEND = 1004_u32
  DISPID_IHTMLPERFORMANCETIMING_FETCHSTART = 1005_u32
  DISPID_IHTMLPERFORMANCETIMING_DOMAINLOOKUPSTART = 1006_u32
  DISPID_IHTMLPERFORMANCETIMING_DOMAINLOOKUPEND = 1007_u32
  DISPID_IHTMLPERFORMANCETIMING_CONNECTSTART = 1008_u32
  DISPID_IHTMLPERFORMANCETIMING_CONNECTEND = 1009_u32
  DISPID_IHTMLPERFORMANCETIMING_REQUESTSTART = 1010_u32
  DISPID_IHTMLPERFORMANCETIMING_RESPONSESTART = 1011_u32
  DISPID_IHTMLPERFORMANCETIMING_RESPONSEEND = 1012_u32
  DISPID_IHTMLPERFORMANCETIMING_DOMLOADING = 1013_u32
  DISPID_IHTMLPERFORMANCETIMING_DOMINTERACTIVE = 1014_u32
  DISPID_IHTMLPERFORMANCETIMING_DOMCONTENTLOADEDEVENTSTART = 1015_u32
  DISPID_IHTMLPERFORMANCETIMING_DOMCONTENTLOADEDEVENTEND = 1016_u32
  DISPID_IHTMLPERFORMANCETIMING_DOMCOMPLETE = 1017_u32
  DISPID_IHTMLPERFORMANCETIMING_LOADEVENTSTART = 1018_u32
  DISPID_IHTMLPERFORMANCETIMING_LOADEVENTEND = 1019_u32
  DISPID_IHTMLPERFORMANCETIMING_MSFIRSTPAINT = 1020_u32
  DISPID_IHTMLPERFORMANCETIMING_TOSTRING = 1021_u32
  DISPID_IHTMLPERFORMANCETIMING_TOJSON = 1022_u32
  DISPID_ITEMPLATEPRINTER_STARTDOC = 1_u32
  DISPID_ITEMPLATEPRINTER_STOPDOC = 2_u32
  DISPID_ITEMPLATEPRINTER_PRINTBLANKPAGE = 3_u32
  DISPID_ITEMPLATEPRINTER_PRINTPAGE = 4_u32
  DISPID_ITEMPLATEPRINTER_ENSUREPRINTDIALOGDEFAULTS = 5_u32
  DISPID_ITEMPLATEPRINTER_SHOWPRINTDIALOG = 6_u32
  DISPID_ITEMPLATEPRINTER_SHOWPAGESETUPDIALOG = 7_u32
  DISPID_ITEMPLATEPRINTER_PRINTNONNATIVE = 8_u32
  DISPID_ITEMPLATEPRINTER_PRINTNONNATIVEFRAMES = 9_u32
  DISPID_ITEMPLATEPRINTER_FRAMESETDOCUMENT = 10_u32
  DISPID_ITEMPLATEPRINTER_FRAMEACTIVE = 11_u32
  DISPID_ITEMPLATEPRINTER_FRAMEASSHOWN = 12_u32
  DISPID_ITEMPLATEPRINTER_SELECTION = 13_u32
  DISPID_ITEMPLATEPRINTER_SELECTEDPAGES = 14_u32
  DISPID_ITEMPLATEPRINTER_CURRENTPAGE = 15_u32
  DISPID_ITEMPLATEPRINTER_CURRENTPAGEAVAIL = 16_u32
  DISPID_ITEMPLATEPRINTER_COLLATE = 17_u32
  DISPID_ITEMPLATEPRINTER_DUPLEX = 18_u32
  DISPID_ITEMPLATEPRINTER_COPIES = 19_u32
  DISPID_ITEMPLATEPRINTER_PAGEFROM = 20_u32
  DISPID_ITEMPLATEPRINTER_PAGETO = 21_u32
  DISPID_ITEMPLATEPRINTER_TABLEOFLINKS = 22_u32
  DISPID_ITEMPLATEPRINTER_ALLLINKEDDOCUMENTS = 23_u32
  DISPID_ITEMPLATEPRINTER_HEADER = 24_u32
  DISPID_ITEMPLATEPRINTER_FOOTER = 25_u32
  DISPID_ITEMPLATEPRINTER_MARGINLEFT = 26_u32
  DISPID_ITEMPLATEPRINTER_MARGINRIGHT = 27_u32
  DISPID_ITEMPLATEPRINTER_MARGINTOP = 28_u32
  DISPID_ITEMPLATEPRINTER_MARGINBOTTOM = 29_u32
  DISPID_ITEMPLATEPRINTER_PAGEWIDTH = 30_u32
  DISPID_ITEMPLATEPRINTER_PAGEHEIGHT = 31_u32
  DISPID_ITEMPLATEPRINTER_UNPRINTABLELEFT = 32_u32
  DISPID_ITEMPLATEPRINTER_UNPRINTABLETOP = 33_u32
  DISPID_ITEMPLATEPRINTER_UNPRINTABLERIGHT = 34_u32
  DISPID_ITEMPLATEPRINTER_UNPRINTABLEBOTTOM = 35_u32
  DISPID_ITEMPLATEPRINTER_UPDATEPAGESTATUS = 36_u32
  DISPID_ITEMPLATEPRINTER2_SELECTIONENABLED = 37_u32
  DISPID_ITEMPLATEPRINTER2_FRAMEACTIVEENABLED = 38_u32
  DISPID_ITEMPLATEPRINTER2_ORIENTATION = 39_u32
  DISPID_ITEMPLATEPRINTER2_USEPRINTERCOPYCOLLATE = 40_u32
  DISPID_ITEMPLATEPRINTER2_DEVICESUPPORTS = 41_u32
  DISPID_ITEMPLATEPRINTER3_HEADERFOOTERFONT = 42_u32
  DISPID_ITEMPLATEPRINTER3_GETPAGEMARGINTOP = 43_u32
  DISPID_ITEMPLATEPRINTER3_GETPAGEMARGINRIGHT = 44_u32
  DISPID_ITEMPLATEPRINTER3_GETPAGEMARGINBOTTOM = 45_u32
  DISPID_ITEMPLATEPRINTER3_GETPAGEMARGINLEFT = 46_u32
  DISPID_ITEMPLATEPRINTER3_GETPAGEMARGINTOPIMPORTANT = 47_u32
  DISPID_ITEMPLATEPRINTER3_GETPAGEMARGINRIGHTIMPORTANT = 48_u32
  DISPID_ITEMPLATEPRINTER3_GETPAGEMARGINBOTTOMIMPORTANT = 49_u32
  DISPID_ITEMPLATEPRINTER3_GETPAGEMARGINLEFTIMPORTANT = 50_u32
  DISPID_IPRINTMANAGERTEMPLATEPRINTER_STARTPRINT = 501_u32
  DISPID_IPRINTMANAGERTEMPLATEPRINTER_DRAWPREVIEWPAGE = 502_u32
  DISPID_IPRINTMANAGERTEMPLATEPRINTER_SETPAGECOUNT = 503_u32
  DISPID_IPRINTMANAGERTEMPLATEPRINTER_INVALIDATEPREVIEW = 504_u32
  DISPID_IPRINTMANAGERTEMPLATEPRINTER_GETPRINTTASKOPTIONVALUE = 505_u32
  DISPID_IPRINTMANAGERTEMPLATEPRINTER_ENDPRINT = 506_u32
  DISPID_IPRINTMANAGERTEMPLATEPRINTER2_SHOWHEADERFOOTER = 507_u32
  DISPID_IPRINTMANAGERTEMPLATEPRINTER2_SHRINKTOFIT = 508_u32
  DISPID_IPRINTMANAGERTEMPLATEPRINTER2_PERCENTSCALE = 509_u32
  DISPID_ISVGTEXTPATHELEMENT_STARTOFFSET = 1071_u32
  DISPID_ISVGTEXTPATHELEMENT_METHOD = 1073_u32
  DISPID_ISVGTEXTPATHELEMENT_SPACING = 1075_u32
  DISPID_IDOMXMLSERIALIZER_SERIALIZETOSTRING = 1000_u32
  DISPID_IDOMPARSER_PARSEFROMSTRING = 1000_u32
  DISPID_IDOMXMLSERIALIZERFACTORY_CREATE = 0_u32
  DISPID_IDOMPARSERFACTORY_CREATE = 0_u32
  DISPID_IHTMLPROGRESSELEMENT_VALUE = 0_u32
  DISPID_IHTMLPROGRESSELEMENT_MAX = 1000_u32
  DISPID_IHTMLPROGRESSELEMENT_POSITION = 1001_u32
  DISPID_IHTMLPROGRESSELEMENT_FORM = 67540_u32
  DISPID_IDOMMSTRANSITIONEVENT_PROPERTYNAME = 1476_u32
  DISPID_IDOMMSTRANSITIONEVENT_ELAPSEDTIME = 1477_u32
  DISPID_IDOMMSTRANSITIONEVENT_INITMSTRANSITIONEVENT = 1478_u32
  DISPID_IDOMMSANIMATIONEVENT_ANIMATIONNAME = 1501_u32
  DISPID_IDOMMSANIMATIONEVENT_ELAPSEDTIME = 1502_u32
  DISPID_IDOMMSANIMATIONEVENT_INITMSANIMATIONEVENT = 1503_u32
  DISPID_IWEBGEOLOCATION_GETCURRENTPOSITION = 1001_u32
  DISPID_IWEBGEOLOCATION_WATCHPOSITION = 1002_u32
  DISPID_IWEBGEOLOCATION_CLEARWATCH = 1003_u32
  DISPID_IWEBGEOCOORDINATES_LATITUDE = 1001_u32
  DISPID_IWEBGEOCOORDINATES_LONGITUDE = 1002_u32
  DISPID_IWEBGEOCOORDINATES_ALTITUDE = 1003_u32
  DISPID_IWEBGEOCOORDINATES_ACCURACY = 1004_u32
  DISPID_IWEBGEOCOORDINATES_ALTITUDEACCURACY = 1005_u32
  DISPID_IWEBGEOCOORDINATES_HEADING = 1006_u32
  DISPID_IWEBGEOCOORDINATES_SPEED = 1007_u32
  DISPID_IWEBGEOPOSITIONERROR_CODE = 1001_u32
  DISPID_IWEBGEOPOSITIONERROR_MESSAGE = 1002_u32
  DISPID_IWEBGEOPOSITION_COORDS = 1001_u32
  DISPID_IWEBGEOPOSITION_TIMESTAMP = 1002_u32
  DISPID_ICLIENTCAPS_JAVAENABLED = 1_u32
  DISPID_ICLIENTCAPS_COOKIEENABLED = 2_u32
  DISPID_ICLIENTCAPS_CPUCLASS = 3_u32
  DISPID_ICLIENTCAPS_SYSTEMLANGUAGE = 4_u32
  DISPID_ICLIENTCAPS_USERLANGUAGE = 5_u32
  DISPID_ICLIENTCAPS_PLATFORM = 6_u32
  DISPID_ICLIENTCAPS_CONNECTIONSPEED = 7_u32
  DISPID_ICLIENTCAPS_ONLINE = 8_u32
  DISPID_ICLIENTCAPS_COLORDEPTH = 9_u32
  DISPID_ICLIENTCAPS_BUFFERDEPTH = 10_u32
  DISPID_ICLIENTCAPS_WIDTH = 11_u32
  DISPID_ICLIENTCAPS_HEIGHT = 12_u32
  DISPID_ICLIENTCAPS_AVAILHEIGHT = 13_u32
  DISPID_ICLIENTCAPS_AVAILWIDTH = 14_u32
  DISPID_ICLIENTCAPS_CONNECTIONTYPE = 15_u32
  DISPID_ICLIENTCAPS_ISCOMPONENTINSTALLED = 16_u32
  DISPID_ICLIENTCAPS_GETCOMPONENTVERSION = 17_u32
  DISPID_ICLIENTCAPS_COMPAREVERSIONS = 18_u32
  DISPID_ICLIENTCAPS_ADDCOMPONENTREQUEST = 19_u32
  DISPID_ICLIENTCAPS_DOCOMPONENTREQUEST = 20_u32
  DISPID_ICLIENTCAPS_CLEARCOMPONENTREQUEST = 21_u32
  DISPID_IDOMMSMANIPULATIONEVENT_LASTSTATE = 1526_u32
  DISPID_IDOMMSMANIPULATIONEVENT_CURRENTSTATE = 1527_u32
  DISPID_IDOMMSMANIPULATIONEVENT_INITMSMANIPULATIONEVENT = 1528_u32
  DISPID_IDOMCLOSEEVENT_WASCLEAN = 1526_u32
  DISPID_IDOMCLOSEEVENT_INITCLOSEEVENT = 1529_u32
  DISPID_IHTMLAPPLICATIONCACHE_STATUS = 1001_u32
  DISPID_IHTMLAPPLICATIONCACHE_ONCHECKING = 71717_u32
  DISPID_IHTMLAPPLICATIONCACHE_ONERROR = 71565_u32
  DISPID_IHTMLAPPLICATIONCACHE_ONNOUPDATE = 71718_u32
  DISPID_IHTMLAPPLICATIONCACHE_ONDOWNLOADING = 71719_u32
  DISPID_IHTMLAPPLICATIONCACHE_ONPROGRESS = 71681_u32
  DISPID_IHTMLAPPLICATIONCACHE_ONUPDATEREADY = 71720_u32
  DISPID_IHTMLAPPLICATIONCACHE_ONCACHED = 71721_u32
  DISPID_IHTMLAPPLICATIONCACHE_ONOBSOLETE = 71722_u32
  DISPID_IHTMLAPPLICATIONCACHE_UPDATE = 1002_u32
  DISPID_IHTMLAPPLICATIONCACHE_SWAPCACHE = 1003_u32
  DISPID_IHTMLAPPLICATIONCACHE_ABORT = 1004_u32
  DISPID_ILINEINFO_X = 1001_u32
  DISPID_ILINEINFO_BASELINE = 1002_u32
  DISPID_ILINEINFO_TEXTDESCENT = 1003_u32
  DISPID_ILINEINFO_TEXTHEIGHT = 1004_u32
  DISPID_ILINEINFO_LINEDIRECTION = 1005_u32
  DISPID_IHTMLCOMPUTEDSTYLE_BOLD = 1001_u32
  DISPID_IHTMLCOMPUTEDSTYLE_ITALIC = 1002_u32
  DISPID_IHTMLCOMPUTEDSTYLE_UNDERLINE = 1003_u32
  DISPID_IHTMLCOMPUTEDSTYLE_OVERLINE = 1004_u32
  DISPID_IHTMLCOMPUTEDSTYLE_STRIKEOUT = 1005_u32
  DISPID_IHTMLCOMPUTEDSTYLE_SUBSCRIPT = 1006_u32
  DISPID_IHTMLCOMPUTEDSTYLE_SUPERSCRIPT = 1007_u32
  DISPID_IHTMLCOMPUTEDSTYLE_EXPLICITFACE = 1008_u32
  DISPID_IHTMLCOMPUTEDSTYLE_FONTWEIGHT = 1009_u32
  DISPID_IHTMLCOMPUTEDSTYLE_FONTSIZE = 1010_u32
  DISPID_IHTMLCOMPUTEDSTYLE_FONTNAME = 1011_u32
  DISPID_IHTMLCOMPUTEDSTYLE_HASBGCOLOR = 1012_u32
  DISPID_IHTMLCOMPUTEDSTYLE_TEXTCOLOR = 1013_u32
  DISPID_IHTMLCOMPUTEDSTYLE_BACKGROUNDCOLOR = 1014_u32
  DISPID_IHTMLCOMPUTEDSTYLE_PREFORMATTED = 1015_u32
  DISPID_IHTMLCOMPUTEDSTYLE_DIRECTION = 1016_u32
  DISPID_IHTMLCOMPUTEDSTYLE_BLOCKDIRECTION = 1017_u32
  DISPID_IHTMLCOMPUTEDSTYLE_OL = 1018_u32
  DISPID_IHTMLDLGSAFEHELPER_CHOOSECOLORDLG = 1_u32
  DISPID_IHTMLDLGSAFEHELPER_GETCHARSET = 2_u32
  DISPID_IHTMLDLGSAFEHELPER_FONTS = 3_u32
  DISPID_IHTMLDLGSAFEHELPER_BLOCKFORMATS = 4_u32
  DISPID_IBLOCKFORMATS__NEWENUM = -4_i32
  DISPID_IBLOCKFORMATS_COUNT = 1_u32
  DISPID_IBLOCKFORMATS_ITEM = 0_u32
  DISPID_IFONTNAMES__NEWENUM = -4_i32
  DISPID_IFONTNAMES_COUNT = 1_u32
  DISPID_IFONTNAMES_ITEM = 0_u32
  DISPID_IHTMLNAMESPACE_NAME = 1000_u32
  DISPID_IHTMLNAMESPACE_URN = 1001_u32
  DISPID_IHTMLNAMESPACE_TAGNAMES = 1002_u32
  DISPID_IHTMLNAMESPACE_READYSTATE = 70652_u32
  DISPID_IHTMLNAMESPACE_ONREADYSTATECHANGE = 71561_u32
  DISPID_IHTMLNAMESPACE_DOIMPORT = 1003_u32
  DISPID_IHTMLNAMESPACE_ATTACHEVENT = 66043_u32
  DISPID_IHTMLNAMESPACE_DETACHEVENT = 66044_u32
  DISPID_IHTMLNAMESPACECOLLECTION_LENGTH = 1000_u32
  DISPID_IHTMLNAMESPACECOLLECTION_ITEM = 0_u32
  DISPID_IHTMLNAMESPACECOLLECTION_ADD = 1001_u32
  DISPID_HTMLNAMESPACEEVENTS_ONREADYSTATECHANGE = -609_i32
  DISPID_IHTMLIPRINTCOLLECTION_LENGTH = 1501_u32
  DISPID_IHTMLIPRINTCOLLECTION__NEWENUM = -4_i32
  DISPID_IHTMLIPRINTCOLLECTION_ITEM = 0_u32
  DISPID_IHTMLDIALOG_DIALOGTOP = 65540_u32
  DISPID_IHTMLDIALOG_DIALOGLEFT = 65539_u32
  DISPID_IHTMLDIALOG_DIALOGWIDTH = 65541_u32
  DISPID_IHTMLDIALOG_DIALOGHEIGHT = 65542_u32
  DISPID_IHTMLDIALOG_DIALOGARGUMENTS = 25000_u32
  DISPID_IHTMLDIALOG_MENUARGUMENTS = 25013_u32
  DISPID_IHTMLDIALOG_RETURNVALUE = 25001_u32
  DISPID_IHTMLDIALOG_CLOSE = 25011_u32
  DISPID_IHTMLDIALOG_TOSTRING = 25012_u32
  DISPID_IHTMLDIALOG2_STATUS = 25014_u32
  DISPID_IHTMLDIALOG2_RESIZABLE = 25015_u32
  DISPID_IHTMLDIALOG3_UNADORNED = 25016_u32
  DISPID_IHTMLDIALOG3_DIALOGHIDE = 25007_u32
  DISPID_IHTMLMODELESSINIT_PARAMETERS = 25000_u32
  DISPID_IHTMLMODELESSINIT_OPTIONSTRING = 25001_u32
  DISPID_IHTMLMODELESSINIT_MONIKER = 25006_u32
  DISPID_IHTMLMODELESSINIT_DOCUMENT = 25007_u32
  DISPID_IHTMLPOPUP_SHOW = 27001_u32
  DISPID_IHTMLPOPUP_HIDE = 27002_u32
  DISPID_IHTMLPOPUP_DOCUMENT = 27003_u32
  DISPID_IHTMLPOPUP_ISOPEN = 27004_u32
  DISPID_IHTMLAPPBEHAVIOR_APPLICATIONNAME = 5000_u32
  DISPID_IHTMLAPPBEHAVIOR_VERSION = 5001_u32
  DISPID_IHTMLAPPBEHAVIOR_ICON = 5002_u32
  DISPID_IHTMLAPPBEHAVIOR_SINGLEINSTANCE = 5003_u32
  DISPID_IHTMLAPPBEHAVIOR_MINIMIZEBUTTON = 5005_u32
  DISPID_IHTMLAPPBEHAVIOR_MAXIMIZEBUTTON = 5006_u32
  DISPID_IHTMLAPPBEHAVIOR_BORDER = 5007_u32
  DISPID_IHTMLAPPBEHAVIOR_BORDERSTYLE = 5008_u32
  DISPID_IHTMLAPPBEHAVIOR_SYSMENU = 5009_u32
  DISPID_IHTMLAPPBEHAVIOR_CAPTION = 5010_u32
  DISPID_IHTMLAPPBEHAVIOR_WINDOWSTATE = 5011_u32
  DISPID_IHTMLAPPBEHAVIOR_SHOWINTASKBAR = 5012_u32
  DISPID_IHTMLAPPBEHAVIOR_COMMANDLINE = 5013_u32
  DISPID_IHTMLAPPBEHAVIOR2_CONTEXTMENU = 5014_u32
  DISPID_IHTMLAPPBEHAVIOR2_INNERBORDER = 5015_u32
  DISPID_IHTMLAPPBEHAVIOR2_SCROLL = 5016_u32
  DISPID_IHTMLAPPBEHAVIOR2_SCROLLFLAT = 5017_u32
  DISPID_IHTMLAPPBEHAVIOR2_SELECTION = 5018_u32
  DISPID_IHTMLAPPBEHAVIOR3_NAVIGABLE = 5019_u32
  DISPID_IHTMLTXTRANGEINTERNAL_GET_VISIBLETEXT = 1050_u32
  DISPID_IE9EVENTS_ABORT = 1000_u32
  DISPID_IE9EVENTS_ACTIVATE = 1044_u32
  DISPID_IE9EVENTS_AFTERPRINT = 1025_u32
  DISPID_IE9EVENTS_BEFOREACTIVATE = 1047_u32
  DISPID_IE9EVENTS_BEFOREDEACTIVATE = 1034_u32
  DISPID_IE9EVENTS_BEFOREUNLOAD = 1017_u32
  DISPID_IE9EVENTS_BEFOREPRINT = 1024_u32
  DISPID_IE9EVENTS_BOUNCE = 1009_u32
  DISPID_IE9EVENTS_CHANGE = 1001_u32
  DISPID_IE9EVENTS_CLICK = -600_i32
  DISPID_IE9EVENTS_COMPLETE = 71727_u32
  DISPID_IE9EVENTS_CONTEXTMENU = 1023_u32
  DISPID_IE9EVENTS_DEACTIVATE = 1045_u32
  DISPID_IE9EVENTS_DOMCONTENTLOADED = 71662_u32
  DISPID_IE9EVENTS_SUCCESS = 71725_u32
  DISPID_IE9EVENTS_ERROR = 1002_u32
  DISPID_IE9EVENTS_FINISH = 1010_u32
  DISPID_IE9EVENTS_FOCUS = 65537_u32
  DISPID_IE9EVENTS_FOCUSIN = 1048_u32
  DISPID_IE9EVENTS_FOCUSOUT = 1049_u32
  DISPID_IE9EVENTS_HASHCHANGE = 1066_u32
  DISPID_IE9EVENTS_HELP = 65546_u32
  DISPID_IE9EVENTS_INPUT = 71663_u32
  DISPID_IE9EVENTS_LOAD = 1003_u32
  DISPID_IE9EVENTS_KEYDOWN = -602_i32
  DISPID_IE9EVENTS_KEYPRESS = -603_i32
  DISPID_IE9EVENTS_KEYUP = -604_i32
  DISPID_IE9EVENTS_MESSAGE = 1067_u32
  DISPID_IE9EVENTS_ONLINE = 1064_u32
  DISPID_IE9EVENTS_OFFLINE = 1065_u32
  DISPID_IE9EVENTS_READYSTATECHANGE = -609_i32
  DISPID_IE9EVENTS_RESET = 1015_u32
  DISPID_IE9EVENTS_RESIZE = 1016_u32
  DISPID_IE9EVENTS_SCROLL = 1014_u32
  DISPID_IE9EVENTS_SELECT = 1006_u32
  DISPID_IE9EVENTS_SELECTIONCHANGE = 1037_u32
  DISPID_IE9EVENTS_SELECTSTART = 65548_u32
  DISPID_IE9EVENTS_START = 1011_u32
  DISPID_IE9EVENTS_STOP = 1026_u32
  DISPID_IE9EVENTS_STORAGE = 1057_u32
  DISPID_IE9EVENTS_STORAGECOMMIT = 1058_u32
  DISPID_IE9EVENTS_SUBMIT = 1007_u32
  DISPID_IE9EVENTS_TEXTINPUT = 71665_u32
  DISPID_IE9EVENTS_TIMEOUT = 0_u32
  DISPID_IE9EVENTS_UNLOAD = 1008_u32
  DISPID_IE9EVENTS_WHEEL = 71649_u32
  DISPID_IE9EVENTS_DBLCLICK = -601_i32
  DISPID_IE9EVENTS_MOUSEDOWN = -605_i32
  DISPID_IE9EVENTS_MOUSEENTER = 1042_u32
  DISPID_IE9EVENTS_MOUSELEAVE = 1043_u32
  DISPID_IE9EVENTS_MOUSEMOVE = -606_i32
  DISPID_IE9EVENTS_MOUSEOUT = 65545_u32
  DISPID_IE9EVENTS_MOUSEOVER = 65544_u32
  DISPID_IE9EVENTS_MOUSEUP = -607_i32
  DISPID_IE9EVENTS_MOUSEWHEEL = 1033_u32
  DISPID_IE9EVENTS_BEFORECOPY = 65566_u32
  DISPID_IE9EVENTS_BEFORECUT = 65565_u32
  DISPID_IE9EVENTS_BEFOREPASTE = 65567_u32
  DISPID_IE9EVENTS_COPY = 65563_u32
  DISPID_IE9EVENTS_CUT = 65562_u32
  DISPID_IE9EVENTS_DRAG = 65556_u32
  DISPID_IE9EVENTS_DRAGEND = 65557_u32
  DISPID_IE9EVENTS_DRAGENTER = 65558_u32
  DISPID_IE9EVENTS_DRAGLEAVE = 65560_u32
  DISPID_IE9EVENTS_DRAGOVER = 65559_u32
  DISPID_IE9EVENTS_DRAGSTART = 65547_u32
  DISPID_IE9EVENTS_DROP = 65561_u32
  DISPID_IE9EVENTS_PASTE = 65564_u32
  DISPID_IE9EVENTS_MSBEFOREEDITFOCUS = 1027_u32
  DISPID_IE9EVENTS_MSCONTROLSELECT = 1036_u32
  DISPID_IE9EVENTS_MSCONTROLRESIZESTART = 1040_u32
  DISPID_IE9EVENTS_MSCONTROLRESIZEEND = 1041_u32
  DISPID_IE9EVENTS_COMPOSITIONSTART = 71658_u32
  DISPID_IE9EVENTS_COMPOSITIONUPDATE = 71659_u32
  DISPID_IE9EVENTS_COMPOSITIONEND = 71660_u32
  DISPID_IE9EVENTS_DOMATTRMODIFIED = 71661_u32
  DISPID_IE9EVENTS_DOMCHARACTERDATAMODIFIED = 71664_u32
  DISPID_IE9EVENTS_DOMNODEINSERTED = 71667_u32
  DISPID_IE9EVENTS_DOMNODEREMOVED = 71668_u32
  DISPID_IE9EVENTS_DOMSUBTREEMODIFIED = 71669_u32
  DISPID_IE9EVENTS_SVGLOAD = 71650_u32
  DISPID_IE9EVENTS_SVGUNLOAD = 71651_u32
  DISPID_IE9EVENTS_SVGABORT = 71652_u32
  DISPID_IE9EVENTS_SVGERROR = 71653_u32
  DISPID_IE9EVENTS_SVGRESIZE = 71654_u32
  DISPID_IE9EVENTS_SVGSCROLL = 71655_u32
  DISPID_IE9EVENTS_SVGZOOM = 71656_u32
  DISPID_IE9EVENTS_MSTHUMBNAILCLICK = 71657_u32
  DISPID_IE9EVENTS_MSSITEMODEJUMPLISTITEMREMOVED = 71666_u32
  DISPID_IE9EVENTS_CANPLAY = 71670_u32
  DISPID_IE9EVENTS_CANPLAYTHROUGH = 71671_u32
  DISPID_IE9EVENTS_DURATIONCHANGE = 71672_u32
  DISPID_IE9EVENTS_EMPTIED = 71673_u32
  DISPID_IE9EVENTS_ENDED = 71674_u32
  DISPID_IE9EVENTS_LOADEDDATA = 71675_u32
  DISPID_IE9EVENTS_LOADEDMETADATA = 71676_u32
  DISPID_IE9EVENTS_LOADSTART = 71677_u32
  DISPID_IE9EVENTS_PAUSE = 71678_u32
  DISPID_IE9EVENTS_PLAY = 71679_u32
  DISPID_IE9EVENTS_PLAYING = 71680_u32
  DISPID_IE9EVENTS_PROGRESS = 71681_u32
  DISPID_IE9EVENTS_RATECHANGE = 71682_u32
  DISPID_IE9EVENTS_SEEKED = 71683_u32
  DISPID_IE9EVENTS_SEEKING = 71684_u32
  DISPID_IE9EVENTS_STALLED = 71685_u32
  DISPID_IE9EVENTS_SUSPEND = 71686_u32
  DISPID_IE9EVENTS_TIMEUPDATE = 71687_u32
  DISPID_IE9EVENTS_VOLUMECHANGE = 71688_u32
  DISPID_IE9EVENTS_WAITING = 71689_u32
  DISPID_IE9EVENTS_BLOCKED = 71726_u32
  DISPID_IE9EVENTS_UPGRADENEEDED = 71734_u32
  DISPID_IE9EVENTS_CUECHANGE = 71729_u32
  DISPID_IE9EVENTS_ENTER = 71730_u32
  DISPID_IE9EVENTS_EXIT = 71731_u32
  DISPID_IE9EVENTS_ADDTRACK = 71736_u32
  DISPID_IE9EVENTS_REMOVETRACK = 71781_u32
  DISPID_IE9EVENTS_MSPOINTERDOWN = 71690_u32
  DISPID_IE9EVENTS_MSPOINTERMOVE = 71691_u32
  DISPID_IE9EVENTS_MSPOINTERUP = 71692_u32
  DISPID_IE9EVENTS_MSPOINTEROVER = 71693_u32
  DISPID_IE9EVENTS_MSPOINTEROUT = 71694_u32
  DISPID_IE9EVENTS_MSPOINTERCANCEL = 71695_u32
  DISPID_IE9EVENTS_MSPOINTERHOVER = 71696_u32
  DISPID_IE9EVENTS_MSLOSTPOINTERCAPTURE = 71706_u32
  DISPID_IE9EVENTS_MSGOTPOINTERCAPTURE = 71707_u32
  DISPID_IE9EVENTS_MSPOINTERENTER = 71769_u32
  DISPID_IE9EVENTS_MSPOINTERLEAVE = 71770_u32
  DISPID_IE9EVENTS_TOUCHSTART = 71784_u32
  DISPID_IE9EVENTS_TOUCHEND = 71785_u32
  DISPID_IE9EVENTS_TOUCHMOVE = 71786_u32
  DISPID_IE9EVENTS_TOUCHCANCEL = 71787_u32
  DISPID_IE9EVENTS_MSGESTURESTART = 71699_u32
  DISPID_IE9EVENTS_MSGESTURECHANGE = 71700_u32
  DISPID_IE9EVENTS_MSGESTUREEND = 71701_u32
  DISPID_IE9EVENTS_MSGESTUREHOLD = 71702_u32
  DISPID_IE9EVENTS_MSGESTURETAP = 71703_u32
  DISPID_IE9EVENTS_MSGESTUREDOUBLETAP = 71704_u32
  DISPID_IE9EVENTS_MSINERTIASTART = 71705_u32
  DISPID_IE9EVENTS_MSCONTENTZOOM = 71708_u32
  DISPID_IE9EVENTS_MSHOLDVISUAL = 71738_u32
  DISPID_IE9EVENTS_TRANSITIONSTART = 71709_u32
  DISPID_IE9EVENTS_TRANSITIONEND = 71710_u32
  DISPID_IE9EVENTS_ANIMATIONSTART = 71711_u32
  DISPID_IE9EVENTS_ANIMATIONEND = 71712_u32
  DISPID_IE9EVENTS_ANIMATIONITERATION = 71713_u32
  DISPID_IE9EVENTS_MSMANIPULATIONSTATECHANGED = 71714_u32
  DISPID_IE9EVENTS_CHECKING = 71717_u32
  DISPID_IE9EVENTS_NOUPDATE = 71718_u32
  DISPID_IE9EVENTS_DOWNLOADING = 71719_u32
  DISPID_IE9EVENTS_UPDATEREADY = 71720_u32
  DISPID_IE9EVENTS_CACHED = 71721_u32
  DISPID_IE9EVENTS_OBSOLETE = 71722_u32
  DISPID_IE9EVENTS_INVALID = 71724_u32
  DISPID_IE9EVENTS_OPEN = 71715_u32
  DISPID_IE9EVENTS_CLOSE = 71716_u32
  DISPID_IE9EVENTS_LOADEND = 71723_u32
  DISPID_IE9EVENTS_POPSTATE = 71728_u32
  DISPID_IE9EVENTS_VISIBILITYCHANGE = 71732_u32
  DISPID_IE9EVENTS_MSREGIONUPDATE = 71733_u32
  DISPID_IE9EVENTS_MSVIDEOFORMATCHANGED = 71735_u32
  DISPID_IE9EVENTS_MSVIDEOFRAMESTEPCOMPLETED = 71737_u32
  DISPID_IE9EVENTS_MSVIDEOOPTIMALLAYOUTCHANGED = 71739_u32
  DISPID_IE9EVENTS_MSFULLSCREENCHANGE = 71740_u32
  DISPID_IE9EVENTS_MSFULLSCREENERROR = 71741_u32
  DISPID_IE9EVENTS_MSELEMENTRESIZE = 71742_u32
  DISPID_IE9EVENTS_SOURCEOPEN = 71743_u32
  DISPID_IE9EVENTS_SOURCEENDED = 71745_u32
  DISPID_IE9EVENTS_SOURCECLOSE = 71744_u32
  DISPID_IE9EVENTS_ADDSOURCEBUFFER = 71746_u32
  DISPID_IE9EVENTS_REMOVESOURCEBUFFER = 71747_u32
  DISPID_IE9EVENTS_UPDATESTART = 71766_u32
  DISPID_IE9EVENTS_UPDATE = 71767_u32
  DISPID_IE9EVENTS_UPDATEEND = 71768_u32
  DISPID_IE9EVENTS_MSNEEDKEY = 71748_u32
  DISPID_IE9EVENTS_MSKEYMESSAGE = 71749_u32
  DISPID_IE9EVENTS_MSKEYERROR = 71750_u32
  DISPID_IE9EVENTS_MSKEYADDED = 71751_u32
  DISPID_IE9EVENTS_MSWEBVIEWDOMCONTENTLOADED = 71752_u32
  DISPID_IE9EVENTS_MSWEBVIEWCONTENTLOADING = 71753_u32
  DISPID_IE9EVENTS_MSWEBVIEWNAVIGATIONSTARTING = 71754_u32
  DISPID_IE9EVENTS_MSWEBVIEWNAVIGATIONCOMPLETED = 71755_u32
  DISPID_IE9EVENTS_MSWEBVIEWFRAMEDOMCONTENTLOADED = 71756_u32
  DISPID_IE9EVENTS_MSWEBVIEWFRAMECONTENTLOADING = 71757_u32
  DISPID_IE9EVENTS_MSWEBVIEWFRAMENAVIGATIONSTARTING = 71758_u32
  DISPID_IE9EVENTS_MSWEBVIEWFRAMENAVIGATIONCOMPLETED = 71759_u32
  DISPID_IE9EVENTS_MSWEBVIEWSCRIPTNOTIFY = 71760_u32
  DISPID_IE9EVENTS_MSWEBVIEWLONGRUNNINGSCRIPTDETECTED = 71763_u32
  DISPID_IE9EVENTS_MSWEBVIEWUNVIEWABLECONTENTIDENTIFIED = 71761_u32
  DISPID_IE9EVENTS_MSWEBVIEWUNSAFECONTENTWARNINGDISPLAYING = 71762_u32
  DISPID_IE9EVENTS_MSWEBVIEWCONTAINSFULLSCREENELEMENTCHANGED = 71783_u32
  DISPID_IE9EVENTS_WEBGLCONTEXTLOST = 71764_u32
  DISPID_IE9EVENTS_WEBGLCONTEXTRESTORED = 71765_u32
  DISPID_IE9EVENTS_WEBGLCONTEXTCREATIONERROR = 71792_u32
  DISPID_IE9EVENTS_MSSITEPINNED = 71771_u32
  DISPID_IE9EVENTS_MSORIENTATIONCHANGE = 71772_u32
  DISPID_IE9EVENTS_ORIENTATIONCHANGE = 71795_u32
  DISPID_IE9EVENTS_DEVICEORIENTATION = 71773_u32
  DISPID_IE9EVENTS_DEVICEMOTION = 71774_u32
  DISPID_IE9EVENTS_COMPASSNEEDSCALIBRATION = 71782_u32
  DISPID_IE9EVENTS_PAGESHOW = 71775_u32
  DISPID_IE9EVENTS_PAGEHIDE = 71776_u32
  DISPID_IE9EVENTS_MSCANDIDATEWINDOWSHOW = 71777_u32
  DISPID_IE9EVENTS_MSCANDIDATEWINDOWUPDATE = 71778_u32
  DISPID_IE9EVENTS_MSCANDIDATEWINDOWHIDE = 71779_u32
  CONTEXT_MENU_DEFAULT = 0_u32
  CONTEXT_MENU_IMAGE = 1_u32
  CONTEXT_MENU_CONTROL = 2_u32
  CONTEXT_MENU_TABLE = 3_u32
  CONTEXT_MENU_TEXTSELECT = 4_u32
  CONTEXT_MENU_ANCHOR = 5_u32
  CONTEXT_MENU_UNKNOWN = 6_u32
  CONTEXT_MENU_IMGDYNSRC = 7_u32
  CONTEXT_MENU_DEBUG = 8_u32
  CONTEXT_MENU_VSCROLL = 9_u32
  CONTEXT_MENU_HSCROLL = 10_u32
  CONTEXT_MENU_MEDIA = 11_u32
  CONTEXT_MENU_ENTITY = 12_u32
  CONTEXT_MENU_PDF = 13_u32
  CONTEXT_MENU_DISABLEDFLASH = 14_u32
  MENUEXT_SHOWDIALOG = 1_u32
  HTMLDLG_NOUI = 16_u32
  HTMLDLG_MODAL = 32_u32
  HTMLDLG_MODELESS = 64_u32
  HTMLDLG_PRINT_TEMPLATE = 128_u32
  HTMLDLG_VERIFY = 256_u32
  HTMLDLG_ALLOW_UNKNOWN_THREAD = 512_u32
  PRINT_DONTBOTHERUSER = 1_u32
  PRINT_WAITFORCOMPLETION = 2_u32
  CMDID_SCRIPTSITE_URL = 0_u32
  CMDID_SCRIPTSITE_HTMLDLGTRUST = 1_u32
  CMDID_SCRIPTSITE_SECSTATE = 2_u32
  CMDID_SCRIPTSITE_SID = 3_u32
  CMDID_SCRIPTSITE_TRUSTEDDOC = 4_u32
  CMDID_SCRIPTSITE_SECURITY_WINDOW = 5_u32
  CMDID_SCRIPTSITE_NAMESPACE = 6_u32
  CMDID_SCRIPTSITE_IURI = 7_u32
  CMDID_HOSTCONTEXT_URL = 8_u32
  CMDID_SCRIPTSITE_ALLOWRECOVERY = 9_u32
  CMDID_SCRIPTSITE_BASEIURI = 10_u32
  CGID_DocHostCommandHandler = "f38bc242-b950-11d1-8918-00c04fc2c836"
  IECMDID_CLEAR_AUTOCOMPLETE_FOR_FORMS = 0_u32
  IECMDID_SETID_AUTOCOMPLETE_FOR_FORMS = 1_u32
  IECMDID_BEFORENAVIGATE_GETSHELLBROWSE = 2_u32
  IECMDID_BEFORENAVIGATE_DOEXTERNALBROWSE = 3_u32
  IECMDID_BEFORENAVIGATE_GETIDLIST = 4_u32
  IECMDID_SET_INVOKE_DEFAULT_BROWSER_ON_NEW_WINDOW = 5_u32
  IECMDID_GET_INVOKE_DEFAULT_BROWSER_ON_NEW_WINDOW = 6_u32
  IECMDID_ARG_CLEAR_FORMS_ALL = 0_u32
  IECMDID_ARG_CLEAR_FORMS_ALL_BUT_PASSWORDS = 1_u32
  IECMDID_ARG_CLEAR_FORMS_PASSWORDS_ONLY = 2_u32
  CATID_MSOfficeAntiVirus = "56ffcc30-d398-11d0-b2ae-00a0c908fa49"
  STATURL_QUERYFLAG_ISCACHED = 65536_u32
  STATURL_QUERYFLAG_NOURL = 131072_u32
  STATURL_QUERYFLAG_NOTITLE = 262144_u32
  STATURL_QUERYFLAG_TOPLEVEL = 524288_u32
  STATURLFLAG_ISCACHED = 1_u32
  STATURLFLAG_ISTOPLEVEL = 2_u32
  SURFACE_LOCK_EXCLUSIVE = 1_u32
  SURFACE_LOCK_ALLOW_DISCARD = 2_u32
  SURFACE_LOCK_WAIT = 4_u32
  E_SURFACE_NOSURFACE = -2147434496_i32
  E_SURFACE_UNKNOWN_FORMAT = -2147434495_i32
  E_SURFACE_NOTMYPOINTER = -2147434494_i32
  E_SURFACE_DISCARDED = -2147434493_i32
  E_SURFACE_NODC = -2147434492_i32
  E_SURFACE_NOTMYDC = -2147434491_i32
  S_SURFACE_DISCARDED = 49155_i32
  COLOR_NO_TRANSPARENT = 4294967295_u32
  IMGDECODE_EVENT_PROGRESS = 1_u32
  IMGDECODE_EVENT_PALETTE = 2_u32
  IMGDECODE_EVENT_BEGINBITS = 4_u32
  IMGDECODE_EVENT_BITSCOMPLETE = 8_u32
  IMGDECODE_EVENT_USEDDRAW = 16_u32
  IMGDECODE_HINT_TOPDOWN = 1_u32
  IMGDECODE_HINT_BOTTOMUP = 2_u32
  IMGDECODE_HINT_FULLWIDTH = 4_u32
  MAPMIME_DEFAULT = 0_u32
  MAPMIME_CLSID = 1_u32
  MAPMIME_DISABLE = 2_u32
  MAPMIME_DEFAULT_ALWAYS = 3_u32
  TIMERMODE_NORMAL = 0_u32
  TIMERMODE_VISIBILITYAWARE = 1_u32
  CLSID_HTMLCSSStyleDeclaration = LibC::GUID.new(0x30510741_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStyle = LibC::GUID.new(0x3050f285_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLRuleStyle = LibC::GUID.new(0x3050f3d0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLCSSRule = LibC::GUID.new(0x305106ef_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLCSSImportRule = LibC::GUID.new(0x305106f0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLCSSMediaRule = LibC::GUID.new(0x305106f1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLCSSMediaList = LibC::GUID.new(0x30510732_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLCSSNamespaceRule = LibC::GUID.new(0x305106f2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLMSCSSKeyframeRule = LibC::GUID.new(0x3051080e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLMSCSSKeyframesRule = LibC::GUID.new(0x3051080f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLRenderStyle = LibC::GUID.new(0x3050f6aa_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLCurrentStyle = LibC::GUID.new(0x3050f3dc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDOMAttribute = LibC::GUID.new(0x3050f4b2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDOMTextNode = LibC::GUID.new(0x3050f4ba_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDOMImplementation = LibC::GUID.new(0x3050f80e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLAttributeCollection = LibC::GUID.new(0x3050f4cc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_StaticNodeList = LibC::GUID.new(0x30510467_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMChildrenCollection = LibC::GUID.new(0x3050f5aa_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDefaults = LibC::GUID.new(0x3050f6c8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTCDefaultDispatch = LibC::GUID.new(0x3050f4fc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTCPropertyBehavior = LibC::GUID.new(0x3050f5de_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTCMethodBehavior = LibC::GUID.new(0x3050f630_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTCEventBehavior = LibC::GUID.new(0x3050f4fe_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTCAttachBehavior = LibC::GUID.new(0x3050f5f5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTCDescBehavior = LibC::GUID.new(0x3050f5dd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLUrnCollection = LibC::GUID.new(0x3050f580_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLGenericElement = LibC::GUID.new(0x3050f4b8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStyleSheetRule = LibC::GUID.new(0x3050f3ce_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStyleSheetRulesCollection = LibC::GUID.new(0x3050f3cd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStyleSheetPage = LibC::GUID.new(0x3050f7ef_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStyleSheetPagesCollection = LibC::GUID.new(0x3050f7f1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStyleSheet = LibC::GUID.new(0x3050f2e4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStyleSheetsCollection = LibC::GUID.new(0x3050f37f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLLinkElement = LibC::GUID.new(0x3050f277_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDOMRange = LibC::GUID.new(0x305106c3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLFormElement = LibC::GUID.new(0x3050f251_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLTextElement = LibC::GUID.new(0x3050f26a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLImg = LibC::GUID.new(0x3050f241_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLImageElementFactory = LibC::GUID.new(0x3050f38f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLBody = LibC::GUID.new(0x3050f24a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLFontElement = LibC::GUID.new(0x3050f27b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLAnchorElement = LibC::GUID.new(0x3050f248_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLLabelElement = LibC::GUID.new(0x3050f32b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLListElement = LibC::GUID.new(0x3050f272_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLUListElement = LibC::GUID.new(0x3050f269_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLOListElement = LibC::GUID.new(0x3050f270_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLLIElement = LibC::GUID.new(0x3050f273_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLBlockElement = LibC::GUID.new(0x3050f281_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDivElement = LibC::GUID.new(0x3050f27e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDDElement = LibC::GUID.new(0x3050f27f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDTElement = LibC::GUID.new(0x3050f27c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLBRElement = LibC::GUID.new(0x3050f280_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDListElement = LibC::GUID.new(0x3050f27d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLHRElement = LibC::GUID.new(0x3050f252_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLParaElement = LibC::GUID.new(0x3050f26f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLElementCollection = LibC::GUID.new(0x3050f4cb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLHeaderElement = LibC::GUID.new(0x3050f27a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLSelectElement = LibC::GUID.new(0x3050f245_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLWndSelectElement = LibC::GUID.new(0x3050f2cf_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLOptionElement = LibC::GUID.new(0x3050f24d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLOptionElementFactory = LibC::GUID.new(0x3050f38d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLWndOptionElement = LibC::GUID.new(0x3050f2d0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLInputElement = LibC::GUID.new(0x3050f5d8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLTextAreaElement = LibC::GUID.new(0x3050f2ac_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLRichtextElement = LibC::GUID.new(0x3050f2df_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLButtonElement = LibC::GUID.new(0x3050f2c6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLMarqueeElement = LibC::GUID.new(0x3050f2b9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLHtmlElement = LibC::GUID.new(0x3050f491_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLHeadElement = LibC::GUID.new(0x3050f493_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLTitleElement = LibC::GUID.new(0x3050f284_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLMetaElement = LibC::GUID.new(0x3050f275_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLBaseElement = LibC::GUID.new(0x3050f276_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLIsIndexElement = LibC::GUID.new(0x3050f278_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLNextIdElement = LibC::GUID.new(0x3050f279_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLBaseFontElement = LibC::GUID.new(0x3050f282_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLUnknownElement = LibC::GUID.new(0x3050f268_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLHistory = LibC::GUID.new(0xfeceaaa3_u32, 0x8405_u16, 0x11cf_u16, StaticArray[0x8b_u8, 0xa1_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x47_u8, 0x6d_u8, 0xa6_u8])
  CLSID_COpsProfile = LibC::GUID.new(0x3050f402_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLNavigator = LibC::GUID.new(0xfeceaaa6_u32, 0x8405_u16, 0x11cf_u16, StaticArray[0x8b_u8, 0xa1_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x47_u8, 0x6d_u8, 0xa6_u8])
  CLSID_HTMLLocation = LibC::GUID.new(0x163bb1e1_u32, 0x6e00_u16, 0x11cf_u16, StaticArray[0x83_u8, 0x7a_u8, 0x48_u8, 0xdc_u8, 0x4_u8, 0xc1_u8, 0x0_u8, 0x0_u8])
  CLSID_CMimeTypes = LibC::GUID.new(0x3050f3fe_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CPlugins = LibC::GUID.new(0x3050f3ff_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CEventObj = LibC::GUID.new(0x3050f48a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStyleMedia = LibC::GUID.new(0x3051074c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_FramesCollection = LibC::GUID.new(0x3050f7f6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLScreen = LibC::GUID.new(0x3050f35d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLWindow2 = LibC::GUID.new(0xd48a6ec6_u32, 0x6a4a_u16, 0x11cf_u16, StaticArray[0x94_u8, 0xa7_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
  CLSID_HTMLWindowProxy = LibC::GUID.new(0x3050f391_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDocumentCompatibleInfo = LibC::GUID.new(0x3051041b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDocumentCompatibleInfoCollection = LibC::GUID.new(0x30510419_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDocument = LibC::GUID.new(0x25336920_u32, 0x3f9_u16, 0x11cf_u16, StaticArray[0x8f_u8, 0xd0_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x68_u8, 0x6f_u8, 0x13_u8])
  CLSID_Scriptlet = LibC::GUID.new(0xae24fdae_u32, 0x3c6_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x76_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0x44_u8, 0xf3_u8, 0x89_u8])
  CLSID_HTMLEmbed = LibC::GUID.new(0x3050f25d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLAreasCollection = LibC::GUID.new(0x3050f4ca_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLMapElement = LibC::GUID.new(0x3050f271_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLAreaElement = LibC::GUID.new(0x3050f283_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLTableCaption = LibC::GUID.new(0x3050f2ec_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLCommentElement = LibC::GUID.new(0x3050f317_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLPhraseElement = LibC::GUID.new(0x3050f26e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLSpanElement = LibC::GUID.new(0x3050f3f5_u32, 0x98b4_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLTable = LibC::GUID.new(0x3050f26b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLTableCol = LibC::GUID.new(0x3050f26c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLTableSection = LibC::GUID.new(0x3050f2e9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLTableRow = LibC::GUID.new(0x3050f26d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLTableCell = LibC::GUID.new(0x3050f246_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLScriptElement = LibC::GUID.new(0x3050f28c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLNoShowElement = LibC::GUID.new(0x3050f38b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLObjectElement = LibC::GUID.new(0x3050f24e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLParamElement = LibC::GUID.new(0x3050f83e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLFrameBase = LibC::GUID.new(0x3050f312_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLFrameElement = LibC::GUID.new(0x3050f314_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLIFrame = LibC::GUID.new(0x3050f316_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDivPosition = LibC::GUID.new(0x3050f249_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLFieldSetElement = LibC::GUID.new(0x3050f3e8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLLegendElement = LibC::GUID.new(0x3050f3e9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLSpanFlow = LibC::GUID.new(0x3050f3e6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLFrameSetSite = LibC::GUID.new(0x3050f31a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLBGsound = LibC::GUID.new(0x3050f370_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStyleElement = LibC::GUID.new(0x3050f37d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStyleFontFace = LibC::GUID.new(0x3050f3d4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_XDomainRequest = LibC::GUID.new(0x30510455_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_XDomainRequestFactory = LibC::GUID.new(0x30510457_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStorage = LibC::GUID.new(0x30510475_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMEvent = LibC::GUID.new(0x305104bb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMUIEvent = LibC::GUID.new(0x305106cb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMMouseEvent = LibC::GUID.new(0x305106cf_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMDragEvent = LibC::GUID.new(0x30510762_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMMouseWheelEvent = LibC::GUID.new(0x305106d1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMWheelEvent = LibC::GUID.new(0x305106d3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMTextEvent = LibC::GUID.new(0x305106d5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMKeyboardEvent = LibC::GUID.new(0x305106d7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMCompositionEvent = LibC::GUID.new(0x305106d9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMMutationEvent = LibC::GUID.new(0x305106db_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMBeforeUnloadEvent = LibC::GUID.new(0x30510764_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMFocusEvent = LibC::GUID.new(0x305106cd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMCustomEvent = LibC::GUID.new(0x305106df_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CanvasGradient = LibC::GUID.new(0x30510715_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CanvasPattern = LibC::GUID.new(0x30510717_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CanvasTextMetrics = LibC::GUID.new(0x30510719_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CanvasImageData = LibC::GUID.new(0x3051071b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CanvasRenderingContext2D = LibC::GUID.new(0x30510700_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLCanvasElement = LibC::GUID.new(0x305106e5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMProgressEvent = LibC::GUID.new(0x3051071f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMMessageEvent = LibC::GUID.new(0x30510721_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMSiteModeEvent = LibC::GUID.new(0x30510766_u32, 0x98b6_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMStorageEvent = LibC::GUID.new(0x30510723_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_XMLHttpRequestEventTarget = LibC::GUID.new(0x30510831_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLXMLHttpRequest = LibC::GUID.new(0x3051040b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLXMLHttpRequestFactory = LibC::GUID.new(0x3051040d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAngle = LibC::GUID.new(0x30510584_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedAngle = LibC::GUID.new(0x305105e4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedTransformList = LibC::GUID.new(0x305105b1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedBoolean = LibC::GUID.new(0x3051058b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedEnumeration = LibC::GUID.new(0x3051058e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedInteger = LibC::GUID.new(0x3051058f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedLength = LibC::GUID.new(0x30510581_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedLengthList = LibC::GUID.new(0x30510582_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedNumber = LibC::GUID.new(0x30510588_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedNumberList = LibC::GUID.new(0x3051058a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedRect = LibC::GUID.new(0x30510586_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedString = LibC::GUID.new(0x3051058c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGClipPathElement = LibC::GUID.new(0x305105e6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGElement = LibC::GUID.new(0x30510564_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGLength = LibC::GUID.new(0x3051057e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGLengthList = LibC::GUID.new(0x30510580_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGMatrix = LibC::GUID.new(0x305105ae_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGNumber = LibC::GUID.new(0x30510587_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGNumberList = LibC::GUID.new(0x30510589_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPatternElement = LibC::GUID.new(0x305105d4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSeg = LibC::GUID.new(0x305105b3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegArcAbs = LibC::GUID.new(0x305105bb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegArcRel = LibC::GUID.new(0x305105bc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegClosePath = LibC::GUID.new(0x305105bd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegMovetoAbs = LibC::GUID.new(0x305105cc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegMovetoRel = LibC::GUID.new(0x305105cd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegLinetoAbs = LibC::GUID.new(0x305105c6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegLinetoRel = LibC::GUID.new(0x305105c9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegCurvetoCubicAbs = LibC::GUID.new(0x305105be_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegCurvetoCubicRel = LibC::GUID.new(0x305105bf_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegCurvetoCubicSmoothAbs = LibC::GUID.new(0x305105c0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegCurvetoCubicSmoothRel = LibC::GUID.new(0x305105c1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegCurvetoQuadraticAbs = LibC::GUID.new(0x305105c2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegCurvetoQuadraticRel = LibC::GUID.new(0x305105c3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegCurvetoQuadraticSmoothAbs = LibC::GUID.new(0x305105c4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegCurvetoQuadraticSmoothRel = LibC::GUID.new(0x305105c5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegLinetoHorizontalAbs = LibC::GUID.new(0x305105c7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegLinetoHorizontalRel = LibC::GUID.new(0x305105c8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegLinetoVerticalAbs = LibC::GUID.new(0x305105ca_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegLinetoVerticalRel = LibC::GUID.new(0x305105cb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathSegList = LibC::GUID.new(0x305105b4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPoint = LibC::GUID.new(0x305105ba_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPointList = LibC::GUID.new(0x305105b9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGRect = LibC::GUID.new(0x30510583_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGStringList = LibC::GUID.new(0x3051058d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGTransform = LibC::GUID.new(0x305105af_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGSVGElement = LibC::GUID.new(0x30510574_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGUseElement = LibC::GUID.new(0x30510590_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLStyleSheetRulesAppliedCollection = LibC::GUID.new(0xeb36f845_u32, 0x2395_u16, 0x4719_u16, StaticArray[0xb8_u8, 0x5c_u8, 0xd0_u8, 0xd8_u8, 0xe_u8, 0x18_u8, 0x4b_u8, 0xd9_u8])
  CLSID_RulesApplied = LibC::GUID.new(0x7c803920_u32, 0x7a53_u16, 0x4d26_u16, StaticArray[0x98_u8, 0xac_u8, 0xfd_u8, 0xd2_u8, 0x3e_u8, 0x6b_u8, 0x9e_u8, 0x1_u8])
  CLSID_RulesAppliedCollection = LibC::GUID.new(0x671926ee_u32, 0xc3cf_u16, 0x40af_u16, StaticArray[0xbe_u8, 0x8f_u8, 0x1c_u8, 0xba_u8, 0xee_u8, 0x64_u8, 0x86_u8, 0xe8_u8])
  CLSID_HTMLW3CComputedStyle = LibC::GUID.new(0x305106c8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGTransformList = LibC::GUID.new(0x305105b0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGCircleElement = LibC::GUID.new(0x30510578_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGEllipseElement = LibC::GUID.new(0x30510579_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGLineElement = LibC::GUID.new(0x3051057a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGRectElement = LibC::GUID.new(0x30510577_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPolygonElement = LibC::GUID.new(0x3051057b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPolylineElement = LibC::GUID.new(0x3051057c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGGElement = LibC::GUID.new(0x3051056f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGSymbolElement = LibC::GUID.new(0x30510571_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGDefsElement = LibC::GUID.new(0x30510570_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPathElement = LibC::GUID.new(0x305105b2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGPreserveAspectRatio = LibC::GUID.new(0x305105d0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGTextElement = LibC::GUID.new(0x305105df_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAnimatedPreserveAspectRatio = LibC::GUID.new(0x305105ce_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGImageElement = LibC::GUID.new(0x305105cf_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGStopElement = LibC::GUID.new(0x305105d5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGGradientElement = LibC::GUID.new(0x305105d6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGLinearGradientElement = LibC::GUID.new(0x305105d2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGRadialGradientElement = LibC::GUID.new(0x305105d3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGMaskElement = LibC::GUID.new(0x305105e7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGMarkerElement = LibC::GUID.new(0x305105de_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGZoomEvent = LibC::GUID.new(0x305105d9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGAElement = LibC::GUID.new(0x305105db_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGViewElement = LibC::GUID.new(0x305105dc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLMediaError = LibC::GUID.new(0x3051070a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLTimeRanges = LibC::GUID.new(0x3051070b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLMediaElement = LibC::GUID.new(0x3051070c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLSourceElement = LibC::GUID.new(0x3051070d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLAudioElement = LibC::GUID.new(0x3051070e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLAudioElementFactory = LibC::GUID.new(0x305107ec_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLVideoElement = LibC::GUID.new(0x3051070f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGSwitchElement = LibC::GUID.new(0x305105d8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGDescElement = LibC::GUID.new(0x30510572_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGTitleElement = LibC::GUID.new(0x30510573_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGMetadataElement = LibC::GUID.new(0x305105d7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGElementInstance = LibC::GUID.new(0x30510575_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGElementInstanceList = LibC::GUID.new(0x30510576_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMException = LibC::GUID.new(0x3051072c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_RangeException = LibC::GUID.new(0x3051072e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGException = LibC::GUID.new(0x30510730_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_EventException = LibC::GUID.new(0x3051073b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGScriptElement = LibC::GUID.new(0x305105e1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGStyleElement = LibC::GUID.new(0x305105d1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGTextContentElement = LibC::GUID.new(0x305105dd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGTextPositioningElement = LibC::GUID.new(0x305105e0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMDocumentType = LibC::GUID.new(0x30510739_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_NodeIterator = LibC::GUID.new(0x30510745_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_TreeWalker = LibC::GUID.new(0x30510747_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMProcessingInstruction = LibC::GUID.new(0x30510743_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLPerformance = LibC::GUID.new(0x3051074f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLPerformanceNavigation = LibC::GUID.new(0x30510751_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLPerformanceTiming = LibC::GUID.new(0x30510753_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_SVGTSpanElement = LibC::GUID.new(0x305105e2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CTemplatePrinter = LibC::GUID.new(0x3050f6b3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CPrintManagerTemplatePrinter = LibC::GUID.new(0x63619f54_u32, 0x9d71_u16, 0x4c23_u16, StaticArray[0xa0_u8, 0x8d_u8, 0x50_u8, 0xd7_u8, 0xf1_u8, 0x8d_u8, 0xb2_u8, 0xe9_u8])
  CLSID_SVGTextPathElement = LibC::GUID.new(0x305105eb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_XMLSerializer = LibC::GUID.new(0x3051077e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMParser = LibC::GUID.new(0x30510782_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDOMXmlSerializerFactory = LibC::GUID.new(0x30510780_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMParserFactory = LibC::GUID.new(0x30510784_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLSemanticElement = LibC::GUID.new(0x305107b0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLProgressElement = LibC::GUID.new(0x3050f2d5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMMSTransitionEvent = LibC::GUID.new(0x305107b6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMMSAnimationEvent = LibC::GUID.new(0x305107b8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_WebGeolocation = LibC::GUID.new(0x305107c6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_WebGeocoordinates = LibC::GUID.new(0x305107c8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_WebGeopositionError = LibC::GUID.new(0x305107ca_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_WebGeoposition = LibC::GUID.new(0x305107ce_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CClientCaps = LibC::GUID.new(0x7e8bc44e_u32, 0xaeff_u16, 0x11d1_u16, StaticArray[0x89_u8, 0xc2_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0xbf_u8, 0xc4_u8])
  CLSID_DOMMSManipulationEvent = LibC::GUID.new(0x30510817_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_DOMCloseEvent = LibC::GUID.new(0x30510800_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_ApplicationCache = LibC::GUID.new(0x30510829_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HtmlDlgSafeHelper = LibC::GUID.new(0x3050f819_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_BlockFormats = LibC::GUID.new(0x3050f831_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_FontNames = LibC::GUID.new(0x3050f83a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLNamespace = LibC::GUID.new(0x3050f6bc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLNamespaceCollection = LibC::GUID.new(0x3050f6b9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_ThreadDialogProcParam = LibC::GUID.new(0x3050f5eb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLDialog = LibC::GUID.new(0x3050f28a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLPopup = LibC::GUID.new(0x3050f667_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLAppBehavior = LibC::GUID.new(0x3050f5cb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_OldHTMLDocument = LibC::GUID.new(0xd48a6ec9_u32, 0x6a4a_u16, 0x11cf_u16, StaticArray[0x94_u8, 0xa7_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
  CLSID_OldHTMLFormElement = LibC::GUID.new(0xd04d285_u32, 0x6bec_u16, 0x11cf_u16, StaticArray[0x8b_u8, 0x97_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x47_u8, 0x6d_u8, 0xa6_u8])
  CLSID_HTMLInputButtonElement = LibC::GUID.new(0x3050f2b4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLInputTextElement = LibC::GUID.new(0x3050f2ab_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLInputFileElement = LibC::GUID.new(0x3050f2ae_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLOptionButtonElement = LibC::GUID.new(0x3050f2be_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HTMLInputImage = LibC::GUID.new(0x3050f2c4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_HomePageSetting = LibC::GUID.new(0x374cede0_u32, 0x873a_u16, 0x4c4f_u16, StaticArray[0xbc_u8, 0x86_u8, 0xbc_u8, 0xc8_u8, 0xcf_u8, 0x51_u8, 0x16_u8, 0xa3_u8])
  CLSID_InternetExplorerManager = LibC::GUID.new(0xdf4fcc34_u32, 0x67a_u16, 0x4e0a_u16, StaticArray[0x83_u8, 0x52_u8, 0x4a_u8, 0x1a_u8, 0x50_u8, 0x95_u8, 0x34_u8, 0x6e_u8])
  CLSID_IEWebDriverManager = LibC::GUID.new(0x90314af2_u32, 0x5250_u16, 0x47b3_u16, StaticArray[0x89_u8, 0xd8_u8, 0x62_u8, 0x95_u8, 0xfc_u8, 0x23_u8, 0xbc_u8, 0x22_u8])
  CLSID_PeerFactory = LibC::GUID.new(0x3050f4cf_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_IntelliForms = LibC::GUID.new(0x613ab92e_u32, 0x16bf_u16, 0x11d2_u16, StaticArray[0xbc_u8, 0xa5_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x29_u8, 0xdb_u8])
  CLSID_HomePage = LibC::GUID.new(0x766bf2ae_u32, 0xd650_u16, 0x11d1_u16, StaticArray[0x98_u8, 0x11_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x1d_u8, 0x2e_u8])
  CLSID_CPersistUserData = LibC::GUID.new(0x3050f48e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CPersistDataPeer = LibC::GUID.new(0x3050f487_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CPersistShortcut = LibC::GUID.new(0x3050f4c6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CPersistHistory = LibC::GUID.new(0x3050f4c8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CPersistSnapshot = LibC::GUID.new(0x3050f4c9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CDownloadBehavior = LibC::GUID.new(0x3050f5be_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_wfolders = LibC::GUID.new(0xbae31f9a_u32, 0x1b81_u16, 0x11d2_u16, StaticArray[0xa9_u8, 0x7a_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xcb_u8, 0x2_u8])
  CLSID_AnchorClick = LibC::GUID.new(0x13d5413c_u32, 0x33b9_u16, 0x11d2_u16, StaticArray[0x95_u8, 0xa7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xcb_u8, 0x2_u8])
  CLSID_CLayoutRect = LibC::GUID.new(0x3050f664_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CDeviceRect = LibC::GUID.new(0x3050f6d4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_CHeaderFooter = LibC::GUID.new(0x3050f6cd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  CLSID_OpenServiceManager = LibC::GUID.new(0x98870b6_u32, 0x39ea_u16, 0x480b_u16, StaticArray[0xb8_u8, 0xb5_u8, 0xdd_u8, 0x1_u8, 0x67_u8, 0xc4_u8, 0xdb_u8, 0x59_u8])
  CLSID_OpenServiceActivityManager = LibC::GUID.new(0xc5efd803_u32, 0x50f8_u16, 0x43cd_u16, StaticArray[0x9a_u8, 0xb8_u8, 0xaa_u8, 0xfc_u8, 0x13_u8, 0x94_u8, 0xc9_u8, 0xe0_u8])
  CLSID_CoDitherToRGB8 = LibC::GUID.new(0xa860ce50_u32, 0x3910_u16, 0x11d0_u16, StaticArray[0x86_u8, 0xfc_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x13_u8, 0xf7_u8, 0x50_u8])
  CLSID_CoSniffStream = LibC::GUID.new(0x6a01fda0_u32, 0x30df_u16, 0x11d0_u16, StaticArray[0xb7_u8, 0x24_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x6c_u8, 0x1a_u8, 0x1_u8])
  CLSID_CoMapMIMEToCLSID = LibC::GUID.new(0x30c3b080_u32, 0x30fb_u16, 0x11d0_u16, StaticArray[0xb7_u8, 0x24_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x6c_u8, 0x1a_u8, 0x1_u8])

  type HTMLPersistEvents = Void
  type LayoutRectEvents = Void
  type HostDialogHelper = Void

  alias SHOWHTMLDIALOGFN = Proc(LibC::HANDLE, IMoniker, VARIANT*, LibC::LPWSTR, VARIANT*, HRESULT)
  alias SHOWHTMLDIALOGEXFN = Proc(LibC::HANDLE, IMoniker, UInt32, VARIANT*, LibC::LPWSTR, VARIANT*, HRESULT)
  alias SHOWMODELESSHTMLDIALOGFN = Proc(LibC::HANDLE, IMoniker, VARIANT*, VARIANT*, IHTMLWindow2*, HRESULT)
  alias IEREGISTERXMLNSFN = Proc(LibC::LPWSTR, Guid, LibC::BOOL, HRESULT)
  alias IEISXMLNSREGISTEREDFN = Proc(LibC::LPWSTR, Guid*, HRESULT)


  enum Htmldesignmode : Int32
    Htmldesignmodeinherit = -2
    Htmldesignmodeon = -1
    Htmldesignmodeoff = 0
    Htmldesignmode_max = 2147483647
  end

  enum Htmlzorder : Int32
    Htmlzorderfront = 0
    Htmlzorderback = 1
    Htmlzorder_max = 2147483647
  end

  enum Htmlclear : Int32
    Htmlclearnotset = 0
    Htmlclearall = 1
    Htmlclearleft = 2
    Htmlclearright = 3
    Htmlclearboth = 4
    Htmlclearnone = 5
    Htmlclear_max = 2147483647
  end

  enum Htmlcontrolalign : Int32
    Htmlcontrolalignnotset = 0
    Htmlcontrolalignleft = 1
    Htmlcontrolaligncenter = 2
    Htmlcontrolalignright = 3
    Htmlcontrolaligntexttop = 4
    Htmlcontrolalignabsmiddle = 5
    Htmlcontrolalignbaseline = 6
    Htmlcontrolalignabsbottom = 7
    Htmlcontrolalignbottom = 8
    Htmlcontrolalignmiddle = 9
    Htmlcontrolaligntop = 10
    Htmlcontrolalign_max = 2147483647
  end

  enum Htmlblockalign : Int32
    Htmlblockalignnotset = 0
    Htmlblockalignleft = 1
    Htmlblockaligncenter = 2
    Htmlblockalignright = 3
    Htmlblockalignjustify = 4
    Htmlblockalign_max = 2147483647
  end

  enum Htmlreadystate : Int32
    Htmlreadystateuninitialized = 0
    Htmlreadystateloading = 1
    Htmlreadystateloaded = 2
    Htmlreadystateinteractive = 3
    Htmlreadystatecomplete = 4
    Htmlreadystate_max = 2147483647
  end

  enum Htmlloop : Int32
    Htmllooploopinfinite = -1
    Htmlloop_max = 2147483647
  end

  enum Mediatype : Int32
    Mediatypenotset = 0
    Mediatypeall = 511
    Mediatypeaural = 1
    Mediatypebraille = 2
    Mediatypeembossed = 4
    Mediatypehandheld = 8
    Mediatypeprint = 16
    Mediatypeprojection = 32
    Mediatypescreen = 64
    Mediatypetty = 128
    Mediatypetv = 256
    Mediatype_max = 2147483647
  end

  enum DomConstructor : Int32
    DomConstructorObject = 0
    DomConstructorAttr = 1
    DomConstructorBehaviorUrnsCollection = 2
    DomConstructorBookmarkCollection = 3
    DomConstructorCompatibleInfo = 4
    DomConstructorCompatibleInfoCollection = 5
    DomConstructorControlRangeCollection = 6
    DomConstructorCSSCurrentStyleDeclaration = 7
    DomConstructorCSSRuleList = 8
    DomConstructorCSSRuleStyleDeclaration = 9
    DomConstructorCSSStyleDeclaration = 10
    DomConstructorCSSStyleRule = 11
    DomConstructorCSSStyleSheet = 12
    DomConstructorDataTransfer = 13
    DomConstructorDOMImplementation = 14
    DomConstructorElement = 15
    DomConstructorEvent = 16
    DomConstructorHistory = 17
    DomConstructorHTCElementBehaviorDefaults = 18
    DomConstructorHTMLAnchorElement = 19
    DomConstructorHTMLAreaElement = 20
    DomConstructorHTMLAreasCollection = 21
    DomConstructorHTMLBaseElement = 22
    DomConstructorHTMLBaseFontElement = 23
    DomConstructorHTMLBGSoundElement = 24
    DomConstructorHTMLBlockElement = 25
    DomConstructorHTMLBodyElement = 26
    DomConstructorHTMLBRElement = 27
    DomConstructorHTMLButtonElement = 28
    DomConstructorHTMLCollection = 29
    DomConstructorHTMLCommentElement = 30
    DomConstructorHTMLDDElement = 31
    DomConstructorHTMLDivElement = 32
    DomConstructorHTMLDocument = 33
    DomConstructorHTMLDListElement = 34
    DomConstructorHTMLDTElement = 35
    DomConstructorHTMLEmbedElement = 36
    DomConstructorHTMLFieldSetElement = 37
    DomConstructorHTMLFontElement = 38
    DomConstructorHTMLFormElement = 39
    DomConstructorHTMLFrameElement = 40
    DomConstructorHTMLFrameSetElement = 41
    DomConstructorHTMLGenericElement = 42
    DomConstructorHTMLHeadElement = 43
    DomConstructorHTMLHeadingElement = 44
    DomConstructorHTMLHRElement = 45
    DomConstructorHTMLHtmlElement = 46
    DomConstructorHTMLIFrameElement = 47
    DomConstructorHTMLImageElement = 48
    DomConstructorHTMLInputElement = 49
    DomConstructorHTMLIsIndexElement = 50
    DomConstructorHTMLLabelElement = 51
    DomConstructorHTMLLegendElement = 52
    DomConstructorHTMLLIElement = 53
    DomConstructorHTMLLinkElement = 54
    DomConstructorHTMLMapElement = 55
    DomConstructorHTMLMarqueeElement = 56
    DomConstructorHTMLMetaElement = 57
    DomConstructorHTMLModelessDialog = 58
    DomConstructorHTMLNamespaceInfo = 59
    DomConstructorHTMLNamespaceInfoCollection = 60
    DomConstructorHTMLNextIdElement = 61
    DomConstructorHTMLNoShowElement = 62
    DomConstructorHTMLObjectElement = 63
    DomConstructorHTMLOListElement = 64
    DomConstructorHTMLOptionElement = 65
    DomConstructorHTMLParagraphElement = 66
    DomConstructorHTMLParamElement = 67
    DomConstructorHTMLPhraseElement = 68
    DomConstructorHTMLPluginsCollection = 69
    DomConstructorHTMLPopup = 70
    DomConstructorHTMLScriptElement = 71
    DomConstructorHTMLSelectElement = 72
    DomConstructorHTMLSpanElement = 73
    DomConstructorHTMLStyleElement = 74
    DomConstructorHTMLTableCaptionElement = 75
    DomConstructorHTMLTableCellElement = 76
    DomConstructorHTMLTableColElement = 77
    DomConstructorHTMLTableElement = 78
    DomConstructorHTMLTableRowElement = 79
    DomConstructorHTMLTableSectionElement = 80
    DomConstructorHTMLTextAreaElement = 81
    DomConstructorHTMLTextElement = 82
    DomConstructorHTMLTitleElement = 83
    DomConstructorHTMLUListElement = 84
    DomConstructorHTMLUnknownElement = 85
    DomConstructorImage = 86
    DomConstructorLocation = 87
    DomConstructorNamedNodeMap = 88
    DomConstructorNavigator = 89
    DomConstructorNodeList = 90
    DomConstructorOption = 91
    DomConstructorScreen = 92
    DomConstructorSelection = 93
    DomConstructorStaticNodeList = 94
    DomConstructorStorage = 95
    DomConstructorStyleSheetList = 96
    DomConstructorStyleSheetPage = 97
    DomConstructorStyleSheetPageList = 98
    DomConstructorText = 99
    DomConstructorTextRange = 100
    DomConstructorTextRangeCollection = 101
    DomConstructorTextRectangle = 102
    DomConstructorTextRectangleList = 103
    DomConstructorWindow = 104
    DomConstructorXDomainRequest = 105
    DomConstructorXMLHttpRequest = 106
    DomConstructorMax = 107
    DomConstructor_Max = 2147483647
  end

  enum Styletexttransform : Int32
    Styletexttransformnotset = 0
    Styletexttransformcapitalize = 1
    Styletexttransformlowercase = 2
    Styletexttransformuppercase = 3
    Styletexttransformnone = 4
    Styletexttransform_max = 2147483647
  end

  enum Styledatarepeat : Int32
    Styledatarepeatnone = 0
    Styledatarepeatinner = 1
    Styledatarepeat_max = 2147483647
  end

  enum Styleoverflow : Int32
    Styleoverflownotset = 0
    Styleoverflowauto = 1
    Styleoverflowhidden = 2
    Styleoverflowvisible = 3
    Styleoverflowscroll = 4
    Styleoverflow_max = 2147483647
  end

  enum Stylemsoverflowstyle : Int32
    Stylemsoverflowstylenotset = 0
    Stylemsoverflowstyleauto = 1
    Stylemsoverflowstylenone = 2
    Stylemsoverflowstylescrollbar = 3
    Stylemsoverflowstylemsautohidingscrollbar = 4
    Stylemsoverflowstyle_max = 2147483647
  end

  enum Styletablelayout : Int32
    Styletablelayoutnotset = 0
    Styletablelayoutauto = 1
    Styletablelayoutfixed = 2
    Styletablelayout_max = 2147483647
  end

  enum Stylebordercollapse : Int32
    Stylebordercollapsenotset = 0
    Stylebordercollapseseparate = 1
    Stylebordercollapsecollapse = 2
    Stylebordercollapse_max = 2147483647
  end

  enum Stylecaptionside : Int32
    Stylecaptionsidenotset = 0
    Stylecaptionsidetop = 1
    Stylecaptionsidebottom = 2
    Stylecaptionsideleft = 3
    Stylecaptionsideright = 4
    Stylecaptionside_max = 2147483647
  end

  enum Styleemptycells : Int32
    Styleemptycellsnotset = 0
    Styleemptycellsshow = 1
    Styleemptycellshide = 2
    Styleemptycells_max = 2147483647
  end

  enum Stylefontstyle : Int32
    Stylefontstylenotset = 0
    Stylefontstyleitalic = 1
    Stylefontstyleoblique = 2
    Stylefontstylenormal = 3
    Stylefontstyle_max = 2147483647
  end

  enum Stylefontvariant : Int32
    Stylefontvariantnotset = 0
    Stylefontvariantsmallcaps = 1
    Stylefontvariantnormal = 2
    Stylefontvariant_max = 2147483647
  end

  enum Stylebackgroundrepeat : Int32
    Stylebackgroundrepeatrepeat = 0
    Stylebackgroundrepeatrepeatx = 1
    Stylebackgroundrepeatrepeaty = 2
    Stylebackgroundrepeatnorepeat = 3
    Stylebackgroundrepeatnotset = 4
    Stylebackgroundrepeat_max = 2147483647
  end

  enum Stylebackgroundattachment : Int32
    Stylebackgroundattachmentfixed = 0
    Stylebackgroundattachmentscroll = 1
    Stylebackgroundattachmentnotset = 2
    Stylebackgroundattachment_max = 2147483647
  end

  enum Stylebackgroundattachment3 : Int32
    Stylebackgroundattachment3fixed = 0
    Stylebackgroundattachment3scroll = 1
    Stylebackgroundattachment3local = 2
    Stylebackgroundattachment3notset = 3
    Stylebackgroundattachment3_max = 2147483647
  end

  enum Stylebackgroundclip : Int32
    Stylebackgroundclipborderbox = 0
    Stylebackgroundclippaddingbox = 1
    Stylebackgroundclipcontentbox = 2
    Stylebackgroundclipnotset = 3
    Stylebackgroundclip_max = 2147483647
  end

  enum Stylebackgroundorigin : Int32
    Stylebackgroundoriginborderbox = 0
    Stylebackgroundoriginpaddingbox = 1
    Stylebackgroundorigincontentbox = 2
    Stylebackgroundoriginnotset = 3
    Stylebackgroundorigin_max = 2147483647
  end

  enum Styleverticalalign : Int32
    Styleverticalalignauto = 0
    Styleverticalalignbaseline = 1
    Styleverticalalignsub = 2
    Styleverticalalignsuper = 3
    Styleverticalaligntop = 4
    Styleverticalaligntexttop = 5
    Styleverticalalignmiddle = 6
    Styleverticalalignbottom = 7
    Styleverticalaligntextbottom = 8
    Styleverticalaligninherit = 9
    Styleverticalalignnotset = 10
    Styleverticalalign_max = 2147483647
  end

  enum Stylefontweight : Int32
    Stylefontweightnotset = 0
    Stylefontweight100 = 1
    Stylefontweight200 = 2
    Stylefontweight300 = 3
    Stylefontweight400 = 4
    Stylefontweight500 = 5
    Stylefontweight600 = 6
    Stylefontweight700 = 7
    Stylefontweight800 = 8
    Stylefontweight900 = 9
    Stylefontweightnormal = 10
    Stylefontweightbold = 11
    Stylefontweightbolder = 12
    Stylefontweightlighter = 13
    Stylefontweight_max = 2147483647
  end

  enum Stylefontsize : Int32
    Stylefontsizexxsmall = 0
    Stylefontsizexsmall = 1
    Stylefontsizesmall = 2
    Stylefontsizemedium = 3
    Stylefontsizelarge = 4
    Stylefontsizexlarge = 5
    Stylefontsizexxlarge = 6
    Stylefontsizesmaller = 7
    Stylefontsizelarger = 8
    Stylefontsize_max = 2147483647
  end

  enum Stylezindex : Int32
    Stylezindexauto = -2147483647
    Stylezindex_max = 2147483647
  end

  enum Stylewidowsorphans : Int32
    Stylewidowsorphansnotset = -2147483647
    Stylewidowsorphans_max = 2147483647
  end

  enum Styleauto : Int32
    Styleautoauto = 0
    Styleauto_max = 2147483647
  end

  enum Stylenone : Int32
    Stylenonenone = 0
    Stylenone_max = 2147483647
  end

  enum Stylenormal : Int32
    Stylenormalnormal = 0
    Stylenormal_max = 2147483647
  end

  enum Styleborderwidth : Int32
    Styleborderwidththin = 0
    Styleborderwidthmedium = 1
    Styleborderwidththick = 2
    Styleborderwidth_max = 2147483647
  end

  enum Styleposition : Int32
    Stylepositionnotset = 0
    Stylepositionstatic = 1
    Stylepositionrelative = 2
    Stylepositionabsolute = 3
    Stylepositionfixed = 4
    Stylepositionmspage = 5
    Stylepositionmsdevicefixed = 6
    Styleposition_max = 2147483647
  end

  enum Styleborderstyle : Int32
    Styleborderstylenotset = 0
    Styleborderstyledotted = 1
    Styleborderstyledashed = 2
    Styleborderstylesolid = 3
    Styleborderstyledouble = 4
    Styleborderstylegroove = 5
    Styleborderstyleridge = 6
    Styleborderstyleinset = 7
    Styleborderstyleoutset = 8
    Styleborderstylewindowinset = 9
    Styleborderstylenone = 10
    Styleborderstylehidden = 11
    Styleborderstyle_max = 2147483647
  end

  enum Styleoutlinestyle : Int32
    Styleoutlinestylenotset = 0
    Styleoutlinestyledotted = 1
    Styleoutlinestyledashed = 2
    Styleoutlinestylesolid = 3
    Styleoutlinestyledouble = 4
    Styleoutlinestylegroove = 5
    Styleoutlinestyleridge = 6
    Styleoutlinestyleinset = 7
    Styleoutlinestyleoutset = 8
    Styleoutlinestylewindowinset = 9
    Styleoutlinestylenone = 10
    Styleoutlinestyle_max = 2147483647
  end

  enum Stylestylefloat : Int32
    Stylestylefloatnotset = 0
    Stylestylefloatleft = 1
    Stylestylefloatright = 2
    Stylestylefloatnone = 3
    Stylestylefloat_max = 2147483647
  end

  enum Styledisplay : Int32
    Styledisplaynotset = 0
    Styledisplayblock = 1
    Styledisplayinline = 2
    Styledisplaylistitem = 3
    Styledisplaynone = 4
    Styledisplaytableheadergroup = 5
    Styledisplaytablefootergroup = 6
    Styledisplayinlineblock = 7
    Styledisplaytable = 8
    Styledisplayinlinetable = 9
    Styledisplaytablerow = 10
    Styledisplaytablerowgroup = 11
    Styledisplaytablecolumn = 12
    Styledisplaytablecolumngroup = 13
    Styledisplaytablecell = 14
    Styledisplaytablecaption = 15
    Styledisplayrunin = 16
    Styledisplayruby = 17
    Styledisplayrubybase = 18
    Styledisplayrubytext = 19
    Styledisplayrubybasecontainer = 20
    Styledisplayrubytextcontainer = 21
    Styledisplaymsflexbox = 22
    Styledisplaymsinlineflexbox = 23
    Styledisplaymsgrid = 24
    Styledisplaymsinlinegrid = 25
    Styledisplayflex = 26
    Styledisplayinlineflex = 27
    Styledisplaywebkitbox = 28
    Styledisplaywebkitinlinebox = 29
    Styledisplay_max = 2147483647
  end

  enum Stylevisibility : Int32
    Stylevisibilitynotset = 0
    Stylevisibilityinherit = 1
    Stylevisibilityvisible = 2
    Stylevisibilityhidden = 3
    Stylevisibilitycollapse = 4
    Stylevisibility_max = 2147483647
  end

  enum Styleliststyletype : Int32
    Styleliststyletypenotset = 0
    Styleliststyletypedisc = 1
    Styleliststyletypecircle = 2
    Styleliststyletypesquare = 3
    Styleliststyletypedecimal = 4
    Styleliststyletypelowerroman = 5
    Styleliststyletypeupperroman = 6
    Styleliststyletypeloweralpha = 7
    Styleliststyletypeupperalpha = 8
    Styleliststyletypenone = 9
    Styleliststyletypedecimalleadingzero = 10
    Styleliststyletypegeorgian = 11
    Styleliststyletypearmenian = 12
    Styleliststyletypeupperlatin = 13
    Styleliststyletypelowerlatin = 14
    Styleliststyletypeuppergreek = 15
    Styleliststyletypelowergreek = 16
    Styleliststyletype_max = 2147483647
  end

  enum Styleliststyleposition : Int32
    Styleliststylepositionnotset = 0
    Styleliststylepositioninside = 1
    Styleliststylepositionoutside = 2
    Styleliststyleposition_max = 2147483647
  end

  enum Stylewhitespace : Int32
    Stylewhitespacenotset = 0
    Stylewhitespacenormal = 1
    Stylewhitespacepre = 2
    Stylewhitespacenowrap = 3
    Stylewhitespacepreline = 4
    Stylewhitespaceprewrap = 5
    Stylewhitespace_max = 2147483647
  end

  enum Stylepagebreak : Int32
    Stylepagebreaknotset = 0
    Stylepagebreakauto = 1
    Stylepagebreakalways = 2
    Stylepagebreakleft = 3
    Stylepagebreakright = 4
    Stylepagebreakavoid = 5
    Stylepagebreak_max = 2147483647
  end

  enum Stylepagebreakinside : Int32
    Stylepagebreakinsidenotset = 0
    Stylepagebreakinsideauto = 1
    Stylepagebreakinsideavoid = 2
    Stylepagebreakinside_max = 2147483647
  end

  enum Stylecursor : Int32
    Stylecursorauto = 0
    Stylecursorcrosshair = 1
    Stylecursordefault = 2
    Stylecursorhand = 3
    Stylecursormove = 4
    Stylecursore_resize = 5
    Stylecursorne_resize = 6
    Stylecursornw_resize = 7
    Stylecursorn_resize = 8
    Stylecursorse_resize = 9
    Stylecursorsw_resize = 10
    Stylecursors_resize = 11
    Stylecursorw_resize = 12
    Stylecursortext = 13
    Stylecursorwait = 14
    Stylecursorhelp = 15
    Stylecursorpointer = 16
    Stylecursorprogress = 17
    Stylecursornot_allowed = 18
    Stylecursorno_drop = 19
    Stylecursorvertical_text = 20
    Stylecursorall_scroll = 21
    Stylecursorcol_resize = 22
    Stylecursorrow_resize = 23
    Stylecursornone = 24
    Stylecursorcontext_menu = 25
    Stylecursorew_resize = 26
    Stylecursorns_resize = 27
    Stylecursornesw_resize = 28
    Stylecursornwse_resize = 29
    Stylecursorcell = 30
    Stylecursorcopy = 31
    Stylecursoralias = 32
    Stylecursorcustom = 33
    Stylecursornotset = 34
    Stylecursor_max = 2147483647
  end

  enum Styledir : Int32
    Styledirnotset = 0
    Styledirlefttoright = 1
    Styledirrighttoleft = 2
    Styledirinherit = 3
    Styledir_max = 2147483647
  end

  enum Stylebidi : Int32
    Stylebidinotset = 0
    Stylebidinormal = 1
    Stylebidiembed = 2
    Stylebidioverride = 3
    Stylebidiinherit = 4
    Stylebidi_max = 2147483647
  end

  enum Styleimemode : Int32
    Styleimemodeauto = 0
    Styleimemodeactive = 1
    Styleimemodeinactive = 2
    Styleimemodedisabled = 3
    Styleimemodenotset = 4
    Styleimemode_max = 2147483647
  end

  enum Stylerubyalign : Int32
    Stylerubyalignnotset = 0
    Stylerubyalignauto = 1
    Stylerubyalignleft = 2
    Stylerubyaligncenter = 3
    Stylerubyalignright = 4
    Stylerubyaligndistributeletter = 5
    Stylerubyaligndistributespace = 6
    Stylerubyalignlineedge = 7
    Stylerubyalign_max = 2147483647
  end

  enum Stylerubyposition : Int32
    Stylerubypositionnotset = 0
    Stylerubypositionabove = 1
    Stylerubypositioninline = 2
    Stylerubyposition_max = 2147483647
  end

  enum Stylerubyoverhang : Int32
    Stylerubyoverhangnotset = 0
    Stylerubyoverhangauto = 1
    Stylerubyoverhangwhitespace = 2
    Stylerubyoverhangnone = 3
    Stylerubyoverhang_max = 2147483647
  end

  enum Stylelayoutgridchar : Int32
    Stylelayoutgridcharnotset = 0
    Stylelayoutgridcharauto = 1
    Stylelayoutgridcharnone = 2
    Stylelayoutgridchar_max = 2147483647
  end

  enum Stylelayoutgridline : Int32
    Stylelayoutgridlinenotset = 0
    Stylelayoutgridlineauto = 1
    Stylelayoutgridlinenone = 2
    Stylelayoutgridline_max = 2147483647
  end

  enum Stylelayoutgridmode : Int32
    Stylelayoutgridmodenotset = 0
    Stylelayoutgridmodechar = 1
    Stylelayoutgridmodeline = 2
    Stylelayoutgridmodeboth = 3
    Stylelayoutgridmodenone = 4
    Stylelayoutgridmode_max = 2147483647
  end

  enum Stylelayoutgridtype : Int32
    Stylelayoutgridtypenotset = 0
    Stylelayoutgridtypeloose = 1
    Stylelayoutgridtypestrict = 2
    Stylelayoutgridtypefixed = 3
    Stylelayoutgridtype_max = 2147483647
  end

  enum Stylelinebreak : Int32
    Stylelinebreaknotset = 0
    Stylelinebreaknormal = 1
    Stylelinebreakstrict = 2
    Stylelinebreak_max = 2147483647
  end

  enum Stylewordbreak : Int32
    Stylewordbreaknotset = 0
    Stylewordbreaknormal = 1
    Stylewordbreakbreakall = 2
    Stylewordbreakkeepall = 3
    Stylewordbreak_max = 2147483647
  end

  enum Stylewordwrap : Int32
    Stylewordwrapnotset = 0
    Stylewordwrapoff = 1
    Stylewordwrapon = 2
    Stylewordwrap_max = 2147483647
  end

  enum Styletextjustify : Int32
    Styletextjustifynotset = 0
    Styletextjustifyinterword = 1
    Styletextjustifynewspaper = 2
    Styletextjustifydistribute = 3
    Styletextjustifydistributealllines = 4
    Styletextjustifyinterideograph = 5
    Styletextjustifyintercluster = 6
    Styletextjustifykashida = 7
    Styletextjustifyauto = 8
    Styletextjustify_max = 2147483647
  end

  enum Styletextalignlast : Int32
    Styletextalignlastnotset = 0
    Styletextalignlastleft = 1
    Styletextalignlastcenter = 2
    Styletextalignlastright = 3
    Styletextalignlastjustify = 4
    Styletextalignlastauto = 5
    Styletextalignlast_max = 2147483647
  end

  enum Styletextjustifytrim : Int32
    Styletextjustifytrimnotset = 0
    Styletextjustifytrimnone = 1
    Styletextjustifytrimpunctuation = 2
    Styletextjustifytrimpunctandkana = 3
    Styletextjustifytrim_max = 2147483647
  end

  enum Styleaccelerator : Int32
    Styleacceleratorfalse = 0
    Styleacceleratortrue = 1
    Styleaccelerator_max = 2147483647
  end

  enum Stylelayoutflow : Int32
    Stylelayoutflowhorizontal = 0
    Stylelayoutflowverticalideographic = 1
    Stylelayoutflownotset = 2
    Stylelayoutflow_max = 2147483647
  end

  enum Styleblockprogression : Int32
    Styleblockprogressiontb = 0
    Styleblockprogressionrl = 1
    Styleblockprogressionbt = 2
    Styleblockprogressionlr = 3
    Styleblockprogressionnotset = 4
    Styleblockprogression_max = 2147483647
  end

  enum Stylewritingmode : Int32
    Stylewritingmodelrtb = 0
    Stylewritingmodetbrl = 1
    Stylewritingmoderltb = 2
    Stylewritingmodebtrl = 3
    Stylewritingmodenotset = 4
    Stylewritingmodetblr = 5
    Stylewritingmodebtlr = 6
    Stylewritingmodelrbt = 7
    Stylewritingmoderlbt = 8
    Stylewritingmodelr = 9
    Stylewritingmoderl = 10
    Stylewritingmodetb = 11
    Stylewritingmode_max = 2147483647
  end

  enum Stylebool : Int32
    Styleboolfalse = 0
    Stylebooltrue = 1
    Stylebool_max = 2147483647
  end

  enum Styletextunderlineposition : Int32
    Styletextunderlinepositionbelow = 0
    Styletextunderlinepositionabove = 1
    Styletextunderlinepositionauto = 2
    Styletextunderlinepositionnotset = 3
    Styletextunderlineposition_max = 2147483647
  end

  enum Styletextoverflow : Int32
    Styletextoverflowclip = 0
    Styletextoverflowellipsis = 1
    Styletextoverflownotset = 2
    Styletextoverflow_max = 2147483647
  end

  enum Styleinterpolation : Int32
    Styleinterpolationnotset = 0
    Styleinterpolationnn = 1
    Styleinterpolationbch = 2
    Styleinterpolation_max = 2147483647
  end

  enum Styleboxsizing : Int32
    Styleboxsizingnotset = 0
    Styleboxsizingcontentbox = 1
    Styleboxsizingborderbox = 2
    Styleboxsizing_max = 2147483647
  end

  enum Styleflex : Int32
    Styleflexnone = 0
    Styleflexnotset = 1
    Styleflex_max = 2147483647
  end

  enum Styleflexbasis : Int32
    Styleflexbasisauto = 0
    Styleflexbasisnotset = 1
    Styleflexbasis_max = 2147483647
  end

  enum Styleflexdirection : Int32
    Styleflexdirectionrow = 0
    Styleflexdirectionrowreverse = 1
    Styleflexdirectioncolumn = 2
    Styleflexdirectioncolumnreverse = 3
    Styleflexdirectionnotset = 4
    Styleflexdirection_max = 2147483647
  end

  enum Stylewebkitboxorient : Int32
    Stylewebkitboxorienthorizontal = 0
    Stylewebkitboxorientinlineaxis = 1
    Stylewebkitboxorientvertical = 2
    Stylewebkitboxorientblockaxis = 3
    Stylewebkitboxorientnotset = 4
    Stylewebkitboxorient_max = 2147483647
  end

  enum Stylewebkitboxdirection : Int32
    Stylewebkitboxdirectionnormal = 0
    Stylewebkitboxdirectionreverse = 1
    Stylewebkitboxdirectionnotset = 2
    Stylewebkitboxdirection_max = 2147483647
  end

  enum Styleflexwrap : Int32
    Styleflexwrapnowrap = 0
    Styleflexwrapwrap = 1
    Styleflexwrapwrapreverse = 2
    Styleflexwrapnotset = 3
    Styleflexwrap_max = 2147483647
  end

  enum Stylealignitems : Int32
    Stylealignitemsflexstart = 0
    Stylealignitemsflexend = 1
    Stylealignitemscenter = 2
    Stylealignitemsbaseline = 3
    Stylealignitemsstretch = 4
    Stylealignitemsnotset = 5
    Stylealignitems_max = 2147483647
  end

  enum Stylemsflexalign : Int32
    Stylemsflexalignstart = 0
    Stylemsflexalignend = 1
    Stylemsflexaligncenter = 2
    Stylemsflexalignbaseline = 3
    Stylemsflexalignstretch = 4
    Stylemsflexalignnotset = 5
    Stylemsflexalign_max = 2147483647
  end

  enum Stylemsflexitemalign : Int32
    Stylemsflexitemalignstart = 0
    Stylemsflexitemalignend = 1
    Stylemsflexitemaligncenter = 2
    Stylemsflexitemalignbaseline = 3
    Stylemsflexitemalignstretch = 4
    Stylemsflexitemalignauto = 5
    Stylemsflexitemalignnotset = 6
    Stylemsflexitemalign_max = 2147483647
  end

  enum Stylealignself : Int32
    Stylealignselfflexstart = 0
    Stylealignselfflexend = 1
    Stylealignselfcenter = 2
    Stylealignselfbaseline = 3
    Stylealignselfstretch = 4
    Stylealignselfauto = 5
    Stylealignselfnotset = 6
    Stylealignself_max = 2147483647
  end

  enum Stylejustifycontent : Int32
    Stylejustifycontentflexstart = 0
    Stylejustifycontentflexend = 1
    Stylejustifycontentcenter = 2
    Stylejustifycontentspacebetween = 3
    Stylejustifycontentspacearound = 4
    Stylejustifycontentnotset = 5
    Stylejustifycontent_max = 2147483647
  end

  enum Stylemsflexpack : Int32
    Stylemsflexpackstart = 0
    Stylemsflexpackend = 1
    Stylemsflexpackcenter = 2
    Stylemsflexpackjustify = 3
    Stylemsflexpackdistribute = 4
    Stylemsflexpacknotset = 5
    Stylemsflexpack_max = 2147483647
  end

  enum Stylewebkitboxpack : Int32
    Stylewebkitboxpackstart = 0
    Stylewebkitboxpackend = 1
    Stylewebkitboxpackcenter = 2
    Stylewebkitboxpackjustify = 3
    Stylewebkitboxpacknotset = 5
    Stylewebkitboxpack_max = 2147483647
  end

  enum Stylemsflexlinepack : Int32
    Stylemsflexlinepackstart = 0
    Stylemsflexlinepackend = 1
    Stylemsflexlinepackcenter = 2
    Stylemsflexlinepackjustify = 3
    Stylemsflexlinepackdistribute = 4
    Stylemsflexlinepackstretch = 5
    Stylemsflexlinepacknotset = 6
    Stylemsflexlinepack_max = 2147483647
  end

  enum Stylealigncontent : Int32
    Stylealigncontentflexstart = 0
    Stylealigncontentflexend = 1
    Stylealigncontentcenter = 2
    Stylealigncontentspacebetween = 3
    Stylealigncontentspacearound = 4
    Stylealigncontentstretch = 5
    Stylealigncontentnotset = 6
    Stylealigncontent_max = 2147483647
  end

  enum Stylecolumnfill : Int32
    Stylecolumnfillauto = 0
    Stylecolumnfillbalance = 1
    Stylecolumnfillnotset = 2
    Stylecolumnfill_max = 2147483647
  end

  enum Stylecolumnspan : Int32
    Stylecolumnspannone = 0
    Stylecolumnspanall = 1
    Stylecolumnspanone = 2
    Stylecolumnspannotset = 3
    Stylecolumnspan_max = 2147483647
  end

  enum Stylebreak : Int32
    Stylebreaknotset = 0
    Stylebreakauto = 1
    Stylebreakalways = 2
    Stylebreakavoid = 3
    Stylebreakleft = 4
    Stylebreakright = 5
    Stylebreakpage = 6
    Stylebreakcolumn = 7
    Stylebreakavoidpage = 8
    Stylebreakavoidcolumn = 9
    Stylebreak_max = 2147483647
  end

  enum Stylebreakinside : Int32
    Stylebreakinsidenotset = 0
    Stylebreakinsideauto = 1
    Stylebreakinsideavoid = 2
    Stylebreakinsideavoidpage = 3
    Stylebreakinsideavoidcolumn = 4
    Stylebreakinside_max = 2147483647
  end

  enum Stylemsscrollchaining : Int32
    Stylemsscrollchainingnotset = 0
    Stylemsscrollchainingnone = 1
    Stylemsscrollchainingchained = 2
    Stylemsscrollchaining_max = 2147483647
  end

  enum Stylemscontentzooming : Int32
    Stylemscontentzoomingnotset = 0
    Stylemscontentzoomingnone = 1
    Stylemscontentzoomingzoom = 2
    Stylemscontentzooming_max = 2147483647
  end

  enum Stylemscontentzoomsnaptype : Int32
    Stylemscontentzoomsnaptypenotset = 0
    Stylemscontentzoomsnaptypenone = 1
    Stylemscontentzoomsnaptypemandatory = 2
    Stylemscontentzoomsnaptypeproximity = 3
    Stylemscontentzoomsnaptype_max = 2147483647
  end

  enum Stylemsscrollrails : Int32
    Stylemsscrollrailsnotset = 0
    Stylemsscrollrailsnone = 1
    Stylemsscrollrailsrailed = 2
    Stylemsscrollrails_max = 2147483647
  end

  enum Stylemscontentzoomchaining : Int32
    Stylemscontentzoomchainingnotset = 0
    Stylemscontentzoomchainingnone = 1
    Stylemscontentzoomchainingchained = 2
    Stylemscontentzoomchaining_max = 2147483647
  end

  enum Stylemsscrollsnaptype : Int32
    Stylemsscrollsnaptypenotset = 0
    Stylemsscrollsnaptypenone = 1
    Stylemsscrollsnaptypemandatory = 2
    Stylemsscrollsnaptypeproximity = 3
    Stylemsscrollsnaptype_max = 2147483647
  end

  enum Stylegridcolumn : Int32
    Stylegridcolumnnotset = 0
    Stylegridcolumn_max = 2147483647
  end

  enum Stylegridcolumnalign : Int32
    Stylegridcolumnaligncenter = 0
    Stylegridcolumnalignend = 1
    Stylegridcolumnalignstart = 2
    Stylegridcolumnalignstretch = 3
    Stylegridcolumnalignnotset = 4
    Stylegridcolumnalign_max = 2147483647
  end

  enum Stylegridcolumnspan : Int32
    Stylegridcolumnspannotset = 0
    Stylegridcolumnspan_max = 2147483647
  end

  enum Stylegridrow : Int32
    Stylegridrownotset = 0
    Stylegridrow_max = 2147483647
  end

  enum Stylegridrowalign : Int32
    Stylegridrowaligncenter = 0
    Stylegridrowalignend = 1
    Stylegridrowalignstart = 2
    Stylegridrowalignstretch = 3
    Stylegridrowalignnotset = 4
    Stylegridrowalign_max = 2147483647
  end

  enum Stylegridrowspan : Int32
    Stylegridrowspannotset = 0
    Stylegridrowspan_max = 2147483647
  end

  enum Stylewrapthrough : Int32
    Stylewrapthroughnotset = 0
    Stylewrapthroughwrap = 1
    Stylewrapthroughnone = 2
    Stylewrapthrough_max = 2147483647
  end

  enum Stylewrapflow : Int32
    Stylewrapflownotset = 0
    Stylewrapflowauto = 1
    Stylewrapflowboth = 2
    Stylewrapflowstart = 3
    Stylewrapflowend = 4
    Stylewrapflowclear = 5
    Stylewrapflowminimum = 6
    Stylewrapflowmaximum = 7
    Stylewrapflow_max = 2147483647
  end

  enum Stylealignmentbaseline : Int32
    Stylealignmentbaselinenotset = 0
    Stylealignmentbaselineafteredge = 1
    Stylealignmentbaselinealphabetic = 2
    Stylealignmentbaselineauto = 3
    Stylealignmentbaselinebaseline = 4
    Stylealignmentbaselinebeforeedge = 5
    Stylealignmentbaselinecentral = 6
    Stylealignmentbaselinehanging = 7
    Stylealignmentbaselinemathematical = 8
    Stylealignmentbaselinemiddle = 9
    Stylealignmentbaselinetextafteredge = 10
    Stylealignmentbaselinetextbeforeedge = 11
    Stylealignmentbaselineideographic = 12
    Stylealignmentbaseline_max = 2147483647
  end

  enum Stylebaselineshift : Int32
    Stylebaselineshiftbaseline = 0
    Stylebaselineshiftsub = 1
    Stylebaselineshiftsuper = 2
    Stylebaselineshift_max = 2147483647
  end

  enum Stylecliprule : Int32
    Stylecliprulenotset = 0
    Stylecliprulenonzero = 1
    Styleclipruleevenodd = 2
    Stylecliprule_max = 2147483647
  end

  enum Styledominantbaseline : Int32
    Styledominantbaselinenotset = 0
    Styledominantbaselinealphabetic = 1
    Styledominantbaselineauto = 2
    Styledominantbaselinecentral = 3
    Styledominantbaselinehanging = 4
    Styledominantbaselineideographic = 5
    Styledominantbaselinemathematical = 6
    Styledominantbaselinemiddle = 7
    Styledominantbaselinenochange = 8
    Styledominantbaselineresetsize = 9
    Styledominantbaselinetextafteredge = 10
    Styledominantbaselinetextbeforeedge = 11
    Styledominantbaselineusescript = 12
    Styledominantbaseline_max = 2147483647
  end

  enum Stylefillrule : Int32
    Stylefillrulenotset = 0
    Stylefillrulenonzero = 1
    Stylefillruleevenodd = 2
    Stylefillrule_max = 2147483647
  end

  enum Stylefontstretch : Int32
    Stylefontstretchnotset = 0
    Stylefontstretchwider = 1
    Stylefontstretchnarrower = 2
    Stylefontstretchultracondensed = 3
    Stylefontstretchextracondensed = 4
    Stylefontstretchcondensed = 5
    Stylefontstretchsemicondensed = 6
    Stylefontstretchnormal = 7
    Stylefontstretchsemiexpanded = 8
    Stylefontstretchexpanded = 9
    Stylefontstretchextraexpanded = 10
    Stylefontstretchultraexpanded = 11
    Stylefontstretch_max = 2147483647
  end

  enum Stylepointerevents : Int32
    Stylepointereventsnotset = 0
    Stylepointereventsvisiblepainted = 1
    Stylepointereventsvisiblefill = 2
    Stylepointereventsvisiblestroke = 3
    Stylepointereventsvisible = 4
    Stylepointereventspainted = 5
    Stylepointereventsfill = 6
    Stylepointereventsstroke = 7
    Stylepointereventsall = 8
    Stylepointereventsnone = 9
    Stylepointereventsinitial = 10
    Stylepointereventsauto = 11
    Stylepointerevents_max = 2147483647
  end

  enum Styleenablebackground : Int32
    Styleenablebackgroundnotset = 0
    Styleenablebackgroundaccumulate = 1
    Styleenablebackgroundnew = 2
    Styleenablebackgroundinherit = 3
    Styleenablebackground_max = 2147483647
  end

  enum Stylestrokelinecap : Int32
    Stylestrokelinecapnotset = 0
    Stylestrokelinecapbutt = 1
    Stylestrokelinecapround = 2
    Stylestrokelinecapsquare = 3
    Stylestrokelinecap_max = 2147483647
  end

  enum Stylestrokelinejoin : Int32
    Stylestrokelinejoinnotset = 0
    Stylestrokelinejoinmiter = 1
    Stylestrokelinejoinround = 2
    Stylestrokelinejoinbevel = 3
    Stylestrokelinejoin_max = 2147483647
  end

  enum Styletextanchor : Int32
    Styletextanchornotset = 0
    Styletextanchorstart = 1
    Styletextanchormiddle = 2
    Styletextanchorend = 3
    Styletextanchor_max = 2147483647
  end

  enum Styleattrtype : Int32
    Styleattrtypestring = 0
    Styleattrtypecolor = 1
    Styleattrtypeurl = 2
    Styleattrtypeinteger = 3
    Styleattrtypenumber = 4
    Styleattrtypelength = 5
    Styleattrtypepx = 6
    Styleattrtypeem = 7
    Styleattrtypeex = 8
    Styleattrtypein = 9
    Styleattrtypecm = 10
    Styleattrtypemm = 11
    Styleattrtypept = 12
    Styleattrtypepc = 13
    Styleattrtyperem = 14
    Styleattrtypech = 15
    Styleattrtypevh = 16
    Styleattrtypevw = 17
    Styleattrtypevmin = 18
    Styleattrtypepercentage = 19
    Styleattrtypeangle = 20
    Styleattrtypedeg = 21
    Styleattrtyperad = 22
    Styleattrtypegrad = 23
    Styleattrtypetime = 24
    Styleattrtypes = 25
    Styleattrtypems = 26
    Styleattrtype_max = 2147483647
  end

  enum Styleinitialcolor : Int32
    Styleinitialcolornoinitial = 0
    Styleinitialcolorcolorproperty = 1
    Styleinitialcolortransparent = 2
    Styleinitialcolorinvert = 3
    Styleinitialcolor_max = 2147483647
  end

  enum Styleinitialstring : Int32
    Styleinitialstringnoinitial = 0
    Styleinitialstringnone = 1
    Styleinitialstringauto = 2
    Styleinitialstringnormal = 3
    Styleinitialstring_max = 2147483647
  end

  enum Styletransformoriginx : Int32
    Styletransformoriginxnotset = 0
    Styletransformoriginxleft = 1
    Styletransformoriginxcenter = 2
    Styletransformoriginxright = 3
    Styletransformoriginx_max = 2147483647
  end

  enum Styletransformoriginy : Int32
    Styletransformoriginynotset = 0
    Styletransformoriginytop = 1
    Styletransformoriginycenter = 2
    Styletransformoriginybottom = 3
    Styletransformoriginy_max = 2147483647
  end

  enum Styleperspectiveoriginx : Int32
    Styleperspectiveoriginxnotset = 0
    Styleperspectiveoriginxleft = 1
    Styleperspectiveoriginxcenter = 2
    Styleperspectiveoriginxright = 3
    Styleperspectiveoriginx_max = 2147483647
  end

  enum Styleperspectiveoriginy : Int32
    Styleperspectiveoriginynotset = 0
    Styleperspectiveoriginytop = 1
    Styleperspectiveoriginycenter = 2
    Styleperspectiveoriginybottom = 3
    Styleperspectiveoriginy_max = 2147483647
  end

  enum Styletransformstyle : Int32
    Styletransformstyleflat = 0
    Styletransformstylepreserve3d = 1
    Styletransformstylenotset = 2
    Styletransformstyle_max = 2147483647
  end

  enum Stylebackfacevisibility : Int32
    Stylebackfacevisibilityvisible = 0
    Stylebackfacevisibilityhidden = 1
    Stylebackfacevisibilitynotset = 2
    Stylebackfacevisibility_max = 2147483647
  end

  enum Styletextsizeadjust : Int32
    Styletextsizeadjustnone = 0
    Styletextsizeadjustauto = 1
    Styletextsizeadjust_max = 2147483647
  end

  enum Stylecolorinterpolationfilters : Int32
    Stylecolorinterpolationfiltersauto = 0
    Stylecolorinterpolationfilterssrgb = 1
    Stylecolorinterpolationfilterslinearrgb = 2
    Stylecolorinterpolationfiltersnotset = 3
    Stylecolorinterpolationfilters_max = 2147483647
  end

  enum Stylehyphens : Int32
    Stylehyphensnone = 0
    Stylehyphensmanual = 1
    Stylehyphensauto = 2
    Stylehyphensnotset = 3
    Stylehyphens_max = 2147483647
  end

  enum Stylehyphenatelimitlines : Int32
    Stylehyphenatelimitlinesnolimit = 0
    Stylehyphenatelimitlines_max = 2147483647
  end

  enum Stylemsanimationplaystate : Int32
    Stylemsanimationplaystaterunning = 0
    Stylemsanimationplaystatepaused = 1
    Stylemsanimationplaystatenotset = 2
    Stylemsanimationplaystate_max = 2147483647
  end

  enum Stylemsanimationdirection : Int32
    Stylemsanimationdirectionnormal = 0
    Stylemsanimationdirectionalternate = 1
    Stylemsanimationdirectionreverse = 2
    Stylemsanimationdirectionalternatereverse = 3
    Stylemsanimationdirectionnotset = 4
    Stylemsanimationdirection_max = 2147483647
  end

  enum Stylemsanimationfillmode : Int32
    Stylemsanimationfillmodenone = 0
    Stylemsanimationfillmodeforwards = 1
    Stylemsanimationfillmodebackwards = 2
    Stylemsanimationfillmodeboth = 3
    Stylemsanimationfillmodenotset = 4
    Stylemsanimationfillmode_max = 2147483647
  end

  enum Stylemshighcontrastadjust : Int32
    Stylemshighcontrastadjustnotset = 0
    Stylemshighcontrastadjustauto = 1
    Stylemshighcontrastadjustnone = 2
    Stylemshighcontrastadjust_max = 2147483647
  end

  enum Stylemsuserselect : Int32
    Stylemsuserselectauto = 0
    Stylemsuserselecttext = 1
    Stylemsuserselectelement = 2
    Stylemsuserselectnone = 3
    Stylemsuserselectnotset = 4
    Stylemsuserselect_max = 2147483647
  end

  enum Stylemstouchaction : Int32
    Stylemstouchactionnotset = -1
    Stylemstouchactionnone = 0
    Stylemstouchactionauto = 1
    Stylemstouchactionmanipulation = 2
    Stylemstouchactiondoubletapzoom = 4
    Stylemstouchactionpanx = 8
    Stylemstouchactionpany = 16
    Stylemstouchactionpinchzoom = 32
    Stylemstouchactioncrossslidex = 64
    Stylemstouchactioncrossslidey = 128
    Stylemstouchaction_max = 2147483647
  end

  enum Stylemstouchselect : Int32
    Stylemstouchselectgrippers = 0
    Stylemstouchselectnone = 1
    Stylemstouchselectnotset = 2
    Stylemstouchselect_max = 2147483647
  end

  enum Stylemsscrolltranslation : Int32
    Stylemsscrolltranslationnotset = 0
    Stylemsscrolltranslationnone = 1
    Stylemsscrolltranslationvtoh = 2
    Stylemsscrolltranslation_max = 2147483647
  end

  enum Styleborderimagerepeat : Int32
    Styleborderimagerepeatstretch = 0
    Styleborderimagerepeatrepeat = 1
    Styleborderimagerepeatround = 2
    Styleborderimagerepeatspace = 3
    Styleborderimagerepeatnotset = 4
    Styleborderimagerepeat_max = 2147483647
  end

  enum Styleborderimageslicefill : Int32
    Styleborderimageslicefillnotset = 0
    Styleborderimageslicefillfill = 1
    Styleborderimageslicefill_max = 2147483647
  end

  enum Stylemsimealign : Int32
    Stylemsimealignauto = 0
    Stylemsimealignafter = 1
    Stylemsimealignnotset = 2
    Stylemsimealign_max = 2147483647
  end

  enum Stylemstextcombinehorizontal : Int32
    Stylemstextcombinehorizontalnone = 0
    Stylemstextcombinehorizontalall = 1
    Stylemstextcombinehorizontaldigits = 2
    Stylemstextcombinehorizontalnotset = 3
    Stylemstextcombinehorizontal_max = 2147483647
  end

  enum Stylewebkitappearance : Int32
    Stylewebkitappearancenone = 0
    Stylewebkitappearancecapslockindicator = 1
    Stylewebkitappearancebutton = 2
    Stylewebkitappearancebuttonbevel = 3
    Stylewebkitappearancecaret = 4
    Stylewebkitappearancecheckbox = 5
    Stylewebkitappearancedefaultbutton = 6
    Stylewebkitappearancelistbox = 7
    Stylewebkitappearancelistitem = 8
    Stylewebkitappearancemediafullscreenbutton = 9
    Stylewebkitappearancemediamutebutton = 10
    Stylewebkitappearancemediaplaybutton = 11
    Stylewebkitappearancemediaseekbackbutton = 12
    Stylewebkitappearancemediaseekforwardbutton = 13
    Stylewebkitappearancemediaslider = 14
    Stylewebkitappearancemediasliderthumb = 15
    Stylewebkitappearancemenulist = 16
    Stylewebkitappearancemenulistbutton = 17
    Stylewebkitappearancemenulisttext = 18
    Stylewebkitappearancemenulisttextfield = 19
    Stylewebkitappearancepushbutton = 20
    Stylewebkitappearanceradio = 21
    Stylewebkitappearancesearchfield = 22
    Stylewebkitappearancesearchfieldcancelbutton = 23
    Stylewebkitappearancesearchfielddecoration = 24
    Stylewebkitappearancesearchfieldresultsbutton = 25
    Stylewebkitappearancesearchfieldresultsdecoration = 26
    Stylewebkitappearancesliderhorizontal = 27
    Stylewebkitappearanceslidervertical = 28
    Stylewebkitappearancesliderthumbhorizontal = 29
    Stylewebkitappearancesliderthumbvertical = 30
    Stylewebkitappearancesquarebutton = 31
    Stylewebkitappearancetextarea = 32
    Stylewebkitappearancetextfield = 33
    Stylewebkitappearancenotset = 34
    Stylewebkitappearance_max = 2147483647
  end

  enum Styleviewportsize : Int32
    Styleviewportsizeauto = 0
    Styleviewportsizedevicewidth = 1
    Styleviewportsizedeviceheight = 2
    Styleviewportsize_max = 2147483647
  end

  enum Styleuserzoom : Int32
    Styleuserzoomnotset = 0
    Styleuserzoomzoom = 1
    Styleuserzoomfixed = 2
    Styleuserzoom_max = 2147483647
  end

  enum Styletextlinethroughstyle : Int32
    Styletextlinethroughstyleundefined = 0
    Styletextlinethroughstylesingle = 1
    Styletextlinethroughstyledouble = 2
    Styletextlinethroughstyle_max = 2147483647
  end

  enum Styletextunderlinestyle : Int32
    Styletextunderlinestyleundefined = 0
    Styletextunderlinestylesingle = 1
    Styletextunderlinestyledouble = 2
    Styletextunderlinestylewords = 3
    Styletextunderlinestyledotted = 4
    Styletextunderlinestylethick = 5
    Styletextunderlinestyledash = 6
    Styletextunderlinestyledotdash = 7
    Styletextunderlinestyledotdotdash = 8
    Styletextunderlinestylewave = 9
    Styletextunderlinestylesingleaccounting = 10
    Styletextunderlinestyledoubleaccounting = 11
    Styletextunderlinestylethickdash = 12
    Styletextunderlinestyle_max = 2147483647
  end

  enum Styletexteffect : Int32
    Styletexteffectnone = 0
    Styletexteffectemboss = 1
    Styletexteffectengrave = 2
    Styletexteffectoutline = 3
    Styletexteffect_max = 2147483647
  end

  enum Styledefaulttextselection : Int32
    Styledefaulttextselectionfalse = 0
    Styledefaulttextselectiontrue = 1
    Styledefaulttextselection_max = 2147483647
  end

  enum Styletextdecoration : Int32
    Styletextdecorationnone = 0
    Styletextdecorationunderline = 1
    Styletextdecorationoverline = 2
    Styletextdecorationlinethrough = 3
    Styletextdecorationblink = 4
    Styletextdecoration_max = 2147483647
  end

  enum Textdecoration : Int32
    Textdecorationnone = 0
    Textdecorationunderline = 1
    Textdecorationoverline = 2
    Textdecorationlinethrough = 3
    Textdecorationblink = 4
    Textdecoration_max = 2147483647
  end

  enum Htmllisttype : Int32
    Htmllisttypenotset = 0
    Htmllisttypelargealpha = 1
    Htmllisttypesmallalpha = 2
    Htmllisttypelargeroman = 3
    Htmllisttypesmallroman = 4
    Htmllisttypenumbers = 5
    Htmllisttypedisc = 6
    Htmllisttypecircle = 7
    Htmllisttypesquare = 8
    Htmllisttype_max = 2147483647
  end

  enum Htmlmethod : Int32
    Htmlmethodnotset = 0
    Htmlmethodget = 1
    Htmlmethodpost = 2
    Htmlmethod_max = 2147483647
  end

  enum Htmlwrap : Int32
    Htmlwrapoff = 1
    Htmlwrapsoft = 2
    Htmlwraphard = 3
    Htmlwrap_max = 2147483647
  end

  enum Htmldir : Int32
    Htmldirnotset = 0
    Htmldirlefttoright = 1
    Htmldirrighttoleft = 2
    Htmldir_max = 2147483647
  end

  enum Htmleditable : Int32
    Htmleditableinherit = 0
    Htmleditabletrue = 1
    Htmleditablefalse = 2
    Htmleditable_max = 2147483647
  end

  enum Htmlinput : Int32
    Htmlinputnotset = 0
    Htmlinputbutton = 1
    Htmlinputcheckbox = 2
    Htmlinputfile = 3
    Htmlinputhidden = 4
    Htmlinputimage = 5
    Htmlinputpassword = 6
    Htmlinputradio = 7
    Htmlinputreset = 8
    Htmlinputselectone = 9
    Htmlinputselectmultiple = 10
    Htmlinputsubmit = 11
    Htmlinputtext = 12
    Htmlinputtextarea = 13
    Htmlinputrichtext = 14
    Htmlinputrange = 15
    Htmlinputurl = 16
    Htmlinputemail = 17
    Htmlinputnumber = 18
    Htmlinputtel = 19
    Htmlinputsearch = 20
    Htmlinput_max = 2147483647
  end

  enum Htmlspellcheck : Int32
    Htmlspellchecknotset = 0
    Htmlspellchecktrue = 1
    Htmlspellcheckfalse = 2
    Htmlspellcheckdefault = 3
    Htmlspellcheck_max = 2147483647
  end

  enum Htmlencoding : Int32
    Htmlencodingurl = 0
    Htmlencodingmultipart = 1
    Htmlencodingtext = 2
    Htmlencoding_max = 2147483647
  end

  enum Htmladjacency : Int32
    Htmladjacencybeforebegin = 1
    Htmladjacencyafterbegin = 2
    Htmladjacencybeforeend = 3
    Htmladjacencyafterend = 4
    Htmladjacency_max = 2147483647
  end

  enum Htmltabindex : Int32
    Htmltabindexnotset = -32768
    Htmltabindex_max = 2147483647
  end

  enum Htmlcomponent : Int32
    Htmlcomponentclient = 0
    Htmlcomponentsbleft = 1
    Htmlcomponentsbpageleft = 2
    Htmlcomponentsbhthumb = 3
    Htmlcomponentsbpageright = 4
    Htmlcomponentsbright = 5
    Htmlcomponentsbup = 6
    Htmlcomponentsbpageup = 7
    Htmlcomponentsbvthumb = 8
    Htmlcomponentsbpagedown = 9
    Htmlcomponentsbdown = 10
    Htmlcomponentsbleft2 = 11
    Htmlcomponentsbpageleft2 = 12
    Htmlcomponentsbright2 = 13
    Htmlcomponentsbpageright2 = 14
    Htmlcomponentsbup2 = 15
    Htmlcomponentsbpageup2 = 16
    Htmlcomponentsbdown2 = 17
    Htmlcomponentsbpagedown2 = 18
    Htmlcomponentsbtop = 19
    Htmlcomponentsbbottom = 20
    Htmlcomponentoutside = 21
    Htmlcomponentghtopleft = 22
    Htmlcomponentghleft = 23
    Htmlcomponentghtop = 24
    Htmlcomponentghbottomleft = 25
    Htmlcomponentghtopright = 26
    Htmlcomponentghbottom = 27
    Htmlcomponentghright = 28
    Htmlcomponentghbottomright = 29
    Htmlcomponent_max = 2147483647
  end

  enum Htmlapplylocation : Int32
    Htmlapplylocationinside = 0
    Htmlapplylocationoutside = 1
    Htmlapplylocation_max = 2147483647
  end

  enum Htmlglyphmode : Int32
    Htmlglyphmodenone = 0
    Htmlglyphmodebegin = 1
    Htmlglyphmodeend = 2
    Htmlglyphmodeboth = 3
    Htmlglyphmode_max = 2147483647
  end

  enum Htmldraggable : Int32
    Htmldraggableauto = 0
    Htmldraggabletrue = 1
    Htmldraggablefalse = 2
    Htmldraggable_max = 2147483647
  end

  enum Htmlunit : Int32
    Htmlunitcharacter = 1
    Htmlunitword = 2
    Htmlunitsentence = 3
    Htmlunittextedit = 6
    Htmlunit_max = 2147483647
  end

  enum Htmlendpoints : Int32
    Htmlendpointsstarttostart = 1
    Htmlendpointsstarttoend = 2
    Htmlendpointsendtostart = 3
    Htmlendpointsendtoend = 4
    Htmlendpoints_max = 2147483647
  end

  enum Htmldirection : Int32
    Htmldirectionforward = 99999
    Htmldirectionbackward = -99999
    Htmldirection_max = 2147483647
  end

  enum Htmlstart : Int32
    Htmlstartfileopen = 0
    Htmlstartmouseover = 1
    Htmlstart_max = 2147483647
  end

  enum Bodyscroll : Int32
    Bodyscrollyes = 1
    Bodyscrollno = 2
    Bodyscrollauto = 4
    Bodyscrolldefault = 3
    Bodyscroll_max = 2147483647
  end

  enum Htmlselecttype : Int32
    Htmlselecttypeselectone = 1
    Htmlselecttypeselectmultiple = 2
    Htmlselecttype_max = 2147483647
  end

  enum Htmlselectexflag : Int32
    Htmlselectexflagnone = 0
    Htmlselectexflaghideselectionindesign = 1
    Htmlselectexflag_max = 2147483647
  end

  enum Htmlselection : Int32
    Htmlselectionnone = 0
    Htmlselectiontext = 1
    Htmlselectioncontrol = 2
    Htmlselectiontable = 3
    Htmlselection_max = 2147483647
  end

  enum Htmlmarqueebehavior : Int32
    Htmlmarqueebehaviorscroll = 1
    Htmlmarqueebehaviorslide = 2
    Htmlmarqueebehavioralternate = 3
    Htmlmarqueebehavior_max = 2147483647
  end

  enum Htmlmarqueedirection : Int32
    Htmlmarqueedirectionleft = 1
    Htmlmarqueedirectionright = 3
    Htmlmarqueedirectionup = 5
    Htmlmarqueedirectiondown = 7
    Htmlmarqueedirection_max = 2147483647
  end

  enum Htmlpersiststate : Int32
    Htmlpersiststatenormal = 0
    Htmlpersiststatefavorite = 1
    Htmlpersiststatehistory = 2
    Htmlpersiststatesnapshot = 3
    Htmlpersiststateuserdata = 4
    Htmlpersiststate_max = 2147483647
  end

  enum Htmldropeffect : Int32
    Htmldropeffectcopy = 0
    Htmldropeffectlink = 1
    Htmldropeffectmove = 2
    Htmldropeffectnone = 3
    Htmldropeffect_max = 2147483647
  end

  enum Htmleffectallowed : Int32
    Htmleffectallowedcopy = 0
    Htmleffectallowedlink = 1
    Htmleffectallowedmove = 2
    Htmleffectallowedcopylink = 3
    Htmleffectallowedcopymove = 4
    Htmleffectallowedlinkmove = 5
    Htmleffectallowedall = 6
    Htmleffectallowednone = 7
    Htmleffectalloweduninitialized = 8
    Htmleffectallowed_max = 2147483647
  end

  enum Htmlcompatmode : Int32
    Htmlcompatmodebackcompat = 0
    Htmlcompatmodecss1compat = 1
    Htmlcompatmode_max = 2147483647
  end

  enum BoolValue : Int32
    True = 1
    False = 0
    BoolValue_Max = 2147483647
  end

  enum Htmlcaptionalign : Int32
    Htmlcaptionalignnotset = 0
    Htmlcaptionalignleft = 1
    Htmlcaptionaligncenter = 2
    Htmlcaptionalignright = 3
    Htmlcaptionalignjustify = 4
    Htmlcaptionaligntop = 5
    Htmlcaptionalignbottom = 6
    Htmlcaptionalign_max = 2147483647
  end

  enum Htmlcaptionvalign : Int32
    Htmlcaptionvalignnotset = 0
    Htmlcaptionvaligntop = 1
    Htmlcaptionvalignbottom = 2
    Htmlcaptionvalign_max = 2147483647
  end

  enum Htmlframe : Int32
    Htmlframenotset = 0
    Htmlframevoid = 1
    Htmlframeabove = 2
    Htmlframebelow = 3
    Htmlframehsides = 4
    Htmlframelhs = 5
    Htmlframerhs = 6
    Htmlframevsides = 7
    Htmlframebox = 8
    Htmlframeborder = 9
    Htmlframe_max = 2147483647
  end

  enum Htmlrules : Int32
    Htmlrulesnotset = 0
    Htmlrulesnone = 1
    Htmlrulesgroups = 2
    Htmlrulesrows = 3
    Htmlrulescols = 4
    Htmlrulesall = 5
    Htmlrules_max = 2147483647
  end

  enum Htmlcellalign : Int32
    Htmlcellalignnotset = 0
    Htmlcellalignleft = 1
    Htmlcellaligncenter = 2
    Htmlcellalignright = 3
    Htmlcellalignmiddle = 2
    Htmlcellalign_max = 2147483647
  end

  enum Htmlcellvalign : Int32
    Htmlcellvalignnotset = 0
    Htmlcellvaligntop = 1
    Htmlcellvalignmiddle = 2
    Htmlcellvalignbottom = 3
    Htmlcellvalignbaseline = 4
    Htmlcellvaligncenter = 2
    Htmlcellvalign_max = 2147483647
  end

  enum Framescrolling : Int32
    Framescrollingyes = 1
    Framescrollingno = 2
    Framescrollingauto = 4
    Framescrolling_max = 2147483647
  end

  enum Sandboxallow : Int32
    Sandboxallowscripts = 0
    Sandboxallowsameorigin = 1
    Sandboxallowtopnavigation = 2
    Sandboxallowforms = 3
    Sandboxallowpopups = 4
    Sandboxallow_max = 2147483647
  end

  enum Svgangletype : Int32
    SVG_ANGLETYPE_UNKNOWN = 0
    SVG_ANGLETYPE_UNSPECIFIED = 1
    SVG_ANGLETYPE_DEG = 2
    SVG_ANGLETYPE_RAD = 3
    SVG_ANGLETYPE_GRAD = 4
    Svgangletype_max = 2147483647
  end

  enum Svgexternalresourcesrequired : Int32
    Svgexternalresourcesrequiredfalse = 0
    Svgexternalresourcesrequiredtrue = 1
    Svgexternalresourcesrequired_max = 2147483647
  end

  enum Svgfocusable : Int32
    Svgfocusablenotset = 0
    Svgfocusableauto = 1
    Svgfocusabletrue = 2
    Svgfocusablefalse = 3
    Svgfocusable_max = 2147483647
  end

  enum Svglengthtype : Int32
    SVG_LENGTHTYPE_UNKNOWN = 0
    SVG_LENGTHTYPE_NUMBER = 1
    SVG_LENGTHTYPE_PERCENTAGE = 2
    SVG_LENGTHTYPE_EMS = 3
    SVG_LENGTHTYPE_EXS = 4
    SVG_LENGTHTYPE_PX = 5
    SVG_LENGTHTYPE_CM = 6
    SVG_LENGTHTYPE_MM = 7
    SVG_LENGTHTYPE_IN = 8
    SVG_LENGTHTYPE_PT = 9
    SVG_LENGTHTYPE_PC = 10
    Svglengthtype_max = 2147483647
  end

  enum Svgpathsegtype : Int32
    PATHSEG_UNKNOWN = 0
    PATHSEG_CLOSEPATH = 1
    PATHSEG_MOVETO_ABS = 2
    PATHSEG_MOVETO_REL = 3
    PATHSEG_LINETO_ABS = 4
    PATHSEG_LINETO_REL = 5
    PATHSEG_CURVETO_CUBIC_ABS = 6
    PATHSEG_CURVETO_CUBIC_REL = 7
    PATHSEG_CURVETO_QUADRATIC_ABS = 8
    PATHSEG_CURVETO_QUADRATIC_REL = 9
    PATHSEG_ARC_ABS = 10
    PATHSEG_ARC_REL = 11
    PATHSEG_LINETO_HORIZONTAL_ABS = 12
    PATHSEG_LINETO_HORIZONTAL_REL = 13
    PATHSEG_LINETO_VERTICAL_ABS = 14
    PATHSEG_LINETO_VERTICAL_REL = 15
    PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16
    PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17
    PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18
    PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19
    Svgpathsegtype_max = 2147483647
  end

  enum Svgtransformtype : Int32
    SVG_TRANSFORM_UNKNOWN = 0
    SVG_TRANSFORM_MATRIX = 1
    SVG_TRANSFORM_TRANSLATE = 2
    SVG_TRANSFORM_SCALE = 3
    SVG_TRANSFORM_ROTATE = 4
    SVG_TRANSFORM_SKEWX = 5
    SVG_TRANSFORM_SKEWY = 6
    Svgtransformtype_max = 2147483647
  end

  enum Svgpreserveaspectratioaligntype : Int32
    SVG_PRESERVEASPECTRATIO_UNKNOWN = 0
    SVG_PRESERVEASPECTRATIO_NONE = 1
    SVG_PRESERVEASPECTRATIO_XMINYMIN = 2
    SVG_PRESERVEASPECTRATIO_XMIDYMIN = 3
    SVG_PRESERVEASPECTRATIO_XMAXYMIN = 4
    SVG_PRESERVEASPECTRATIO_XMINYMID = 5
    SVG_PRESERVEASPECTRATIO_XMIDYMID = 6
    SVG_PRESERVEASPECTRATIO_XMAXYMID = 7
    SVG_PRESERVEASPECTRATIO_XMINYMAX = 8
    SVG_PRESERVEASPECTRATIO_XMIDYMAX = 9
    SVG_PRESERVEASPECTRATIO_XMAXYMAX = 10
    Svgpreserveaspectratioaligntype_max = 2147483647
  end

  enum Svgpreserveaspectmeetorslicetype : Int32
    SVG_MEETORSLICE_UNKNOWN = 0
    SVG_MEETORSLICE_MEET = 1
    SVG_MEETORSLICE_SLICE = 2
    Svgpreserveaspectmeetorslicetype_max = 2147483647
  end

  enum Svgunittypes : Int32
    SVG_UNITTYPE_UNKNOWN = 0
    SVG_UNITTYPE_USERSPACEONUSE = 1
    SVG_UNITTYPE_OBJECTBOUNDINGBOX = 2
    Svgunittypes_max = 2147483647
  end

  enum Svgspreadmethod : Int32
    SVG_SPREADMETHOD_UNKNOWN = 0
    SVG_SPREADMETHOD_PAD = 1
    SVG_SPREADMETHOD_REFLECT = 2
    SVG_SPREADMETHOD_REPEAT = 3
    Svgspreadmethod_max = 2147483647
  end

  enum Svgfeblendmode : Int32
    SVG_FEBLEND_MODE_UNKNOWN = 0
    SVG_FEBLEND_MODE_NORMAL = 1
    SVG_FEBLEND_MODE_MULTIPLY = 2
    SVG_FEBLEND_MODE_SCREEN = 3
    SVG_FEBLEND_MODE_DARKEN = 4
    SVG_FEBLEND_MODE_LIGHTEN = 5
    Svgfeblendmode_max = 2147483647
  end

  enum Svgfecolormatrixtype : Int32
    SVG_FECOLORMATRIX_TYPE_UNKNOWN = 0
    SVG_FECOLORMATRIX_TYPE_MATRIX = 1
    SVG_FECOLORMATRIX_TYPE_SATURATE = 2
    SVG_FECOLORMATRIX_TYPE_HUEROTATE = 3
    SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA = 4
    Svgfecolormatrixtype_max = 2147483647
  end

  enum Svgfecomponenttransfertype : Int32
    SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN = 0
    SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY = 1
    SVG_FECOMPONENTTRANSFER_TYPE_TABLE = 2
    SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE = 3
    SVG_FECOMPONENTTRANSFER_TYPE_LINEAR = 4
    SVG_FECOMPONENTTRANSFER_TYPE_GAMMA = 5
    Svgfecomponenttransfertype_max = 2147483647
  end

  enum Svgfecompositeoperator : Int32
    SVG_FECOMPOSITE_OPERATOR_UNKNOWN = 0
    SVG_FECOMPOSITE_OPERATOR_OVER = 1
    SVG_FECOMPOSITE_OPERATOR_IN = 2
    SVG_FECOMPOSITE_OPERATOR_OUT = 3
    SVG_FECOMPOSITE_OPERATOR_ATOP = 4
    SVG_FECOMPOSITE_OPERATOR_XOR = 5
    SVG_FECOMPOSITE_OPERATOR_ARITHMETIC = 6
    Svgfecompositeoperator_max = 2147483647
  end

  enum Svgedgemode : Int32
    SVG_EDGEMODE_UNKNOWN = 0
    SVG_EDGEMODE_DUPLICATE = 1
    SVG_EDGEMODE_WRAP = 2
    SVG_EDGEMODE_NONE = 3
    Svgedgemode_max = 2147483647
  end

  enum Svgpreservealpha : Int32
    SVG_PRESERVEALPHA_FALSE = 0
    SVG_PRESERVEALPHA_TRUE = 1
    Svgpreservealpha_max = 2147483647
  end

  enum Svgchannel : Int32
    SVG_CHANNEL_UNKNOWN = 0
    SVG_CHANNEL_R = 1
    SVG_CHANNEL_G = 2
    SVG_CHANNEL_B = 3
    SVG_CHANNEL_A = 4
    Svgchannel_max = 2147483647
  end

  enum Svgmorphologyoperator : Int32
    SVG_MORPHOLOGY_OPERATOR_UNKNOWN = 0
    SVG_MORPHOLOGY_OPERATOR_ERODE = 1
    SVG_MORPHOLOGY_OPERATOR_DILATE = 2
    Svgmorphologyoperator_max = 2147483647
  end

  enum Svgturbulencetype : Int32
    SVG_TURBULENCE_TYPE_UNKNOWN = 0
    SVG_TURBULENCE_TYPE_FACTALNOISE = 1
    SVG_TURBULENCE_TYPE_TURBULENCE = 2
    Svgturbulencetype_max = 2147483647
  end

  enum Svgstitchtype : Int32
    SVG_STITCHTYPE_UNKNOWN = 0
    SVG_STITCHTYPE_STITCH = 1
    SVG_STITCHTYPE_NOSTITCH = 2
    Svgstitchtype_max = 2147483647
  end

  enum Svgmarkerunits : Int32
    SVG_MARKERUNITS_UNKNOWN = 0
    SVG_MARKERUNITS_USERSPACEONUSE = 1
    SVG_MARKERUNITS_STROKEWIDTH = 2
    Svgmarkerunits_max = 2147483647
  end

  enum Svgmarkerorient : Int32
    SVG_MARKER_ORIENT_UNKNOWN = 0
    SVG_MARKER_ORIENT_AUTO = 1
    SVG_MARKER_ORIENT_ANGLE = 2
    Svgmarkerorient_max = 2147483647
  end

  enum Svgmarkerorientattribute : Int32
    Svgmarkerorientattributeauto = 0
    Svgmarkerorientattribute_max = 2147483647
  end

  enum Htmlmedianetworkstate : Int32
    Htmlmedianetworkstateempty = 0
    Htmlmedianetworkstateidle = 1
    Htmlmedianetworkstateloading = 2
    Htmlmedianetworkstatenosource = 3
    Htmlmedianetworkstate_max = 2147483647
  end

  enum Htmlmediareadystate : Int32
    Htmlmediareadystatehavenothing = 0
    Htmlmediareadystatehavemetadata = 1
    Htmlmediareadystatehavecurrentdata = 2
    Htmlmediareadystatehavefuturedata = 3
    Htmlmediareadystatehaveenoughdata = 4
    Htmlmediareadystate_max = 2147483647
  end

  enum Htmlmediaerr : Int32
    Htmlmediaerraborted = 0
    Htmlmediaerrnetwork = 1
    Htmlmediaerrdecode = 2
    Htmlmediaerrsrcnotsupported = 3
    Htmlmediaerr_max = 2147483647
  end

  enum Lengthadjust : Int32
    LENGTHADJUST_UNKNOWN = 0
    LENGTHADJUST_SPACING = 1
    LENGTHADJUST_SPACINGANDGLYPHS = 2
    Lengthadjust_max = 2147483647
  end

  enum Textpathmethodtype : Int32
    TEXTPATH_METHODTYPE_UNKNOWN = 0
    TEXTPATH_METHODTYPE_ALIGN = 1
    TEXTPATH_METHODTYPE_STRETCH = 2
    Textpathmethodtype_max = 2147483647
  end

  enum Textpathspacingtype : Int32
    TEXTPATH_SPACINGTYPE_UNKNOWN = 0
    TEXTPATH_SPACINGTYPE_AUTO = 1
    TEXTPATH_SPACINGTYPE_EXACT = 2
    Textpathspacingtype_max = 2147483647
  end

  enum ELEMENT_CORNER : Int32
    ELEMENT_CORNER_NONE = 0
    ELEMENT_CORNER_TOP = 1
    ELEMENT_CORNER_LEFT = 2
    ELEMENT_CORNER_BOTTOM = 3
    ELEMENT_CORNER_RIGHT = 4
    ELEMENT_CORNER_TOPLEFT = 5
    ELEMENT_CORNER_TOPRIGHT = 6
    ELEMENT_CORNER_BOTTOMLEFT = 7
    ELEMENT_CORNER_BOTTOMRIGHT = 8
    ELEMENT_CORNER_Max = 2147483647
  end

  enum SECUREURLHOSTVALIDATE_FLAGS : Int32
    SUHV_PROMPTBEFORENO = 1
    SUHV_SILENTYES = 2
    SUHV_UNSECURESOURCE = 4
    SECUREURLHOSTVALIDATE_FLAGS_Max = 2147483647
  end

  enum POINTER_GRAVITY : Int32
    POINTER_GRAVITY_Left = 0
    POINTER_GRAVITY_Right = 1
    POINTER_GRAVITY_Max = 2147483647
  end

  enum ELEMENT_ADJACENCY : Int32
    ELEM_ADJ_BeforeBegin = 0
    ELEM_ADJ_AfterBegin = 1
    ELEM_ADJ_BeforeEnd = 2
    ELEM_ADJ_AfterEnd = 3
    ELEMENT_ADJACENCY_Max = 2147483647
  end

  enum MARKUP_CONTEXT_TYPE : Int32
    CONTEXT_TYPE_None = 0
    CONTEXT_TYPE_Text = 1
    CONTEXT_TYPE_EnterScope = 2
    CONTEXT_TYPE_ExitScope = 3
    CONTEXT_TYPE_NoScope = 4
    MARKUP_CONTEXT_TYPE_Max = 2147483647
  end

  enum FINDTEXT_FLAGS : Int32
    FINDTEXT_BACKWARDS = 1
    FINDTEXT_WHOLEWORD = 2
    FINDTEXT_MATCHCASE = 4
    FINDTEXT_RAW = 131072
    FINDTEXT_MATCHREPEATEDWHITESPACE = 262144
    FINDTEXT_MATCHDIAC = 536870912
    FINDTEXT_MATCHKASHIDA = 1073741824
    FINDTEXT_MATCHALEFHAMZA = -2147483648
    FINDTEXT_FLAGS_Max = 2147483647
  end

  enum MOVEUNIT_ACTION : Int32
    MOVEUNIT_PREVCHAR = 0
    MOVEUNIT_NEXTCHAR = 1
    MOVEUNIT_PREVCLUSTERBEGIN = 2
    MOVEUNIT_NEXTCLUSTERBEGIN = 3
    MOVEUNIT_PREVCLUSTEREND = 4
    MOVEUNIT_NEXTCLUSTEREND = 5
    MOVEUNIT_PREVWORDBEGIN = 6
    MOVEUNIT_NEXTWORDBEGIN = 7
    MOVEUNIT_PREVWORDEND = 8
    MOVEUNIT_NEXTWORDEND = 9
    MOVEUNIT_PREVPROOFWORD = 10
    MOVEUNIT_NEXTPROOFWORD = 11
    MOVEUNIT_NEXTURLBEGIN = 12
    MOVEUNIT_PREVURLBEGIN = 13
    MOVEUNIT_NEXTURLEND = 14
    MOVEUNIT_PREVURLEND = 15
    MOVEUNIT_PREVSENTENCE = 16
    MOVEUNIT_NEXTSENTENCE = 17
    MOVEUNIT_PREVBLOCK = 18
    MOVEUNIT_NEXTBLOCK = 19
    MOVEUNIT_ACTION_Max = 2147483647
  end

  enum PARSE_FLAGS : Int32
    PARSE_ABSOLUTIFYIE40URLS = 1
    PARSE_DISABLEVML = 2
    PARSE_FLAGS_Max = 2147483647
  end

  enum ELEMENT_TAG_ID : Int32
    TAGID_NULL = 0
    TAGID_UNKNOWN = 1
    TAGID_A = 2
    TAGID_ACRONYM = 3
    TAGID_ADDRESS = 4
    TAGID_APPLET = 5
    TAGID_AREA = 6
    TAGID_B = 7
    TAGID_BASE = 8
    TAGID_BASEFONT = 9
    TAGID_BDO = 10
    TAGID_BGSOUND = 11
    TAGID_BIG = 12
    TAGID_BLINK = 13
    TAGID_BLOCKQUOTE = 14
    TAGID_BODY = 15
    TAGID_BR = 16
    TAGID_BUTTON = 17
    TAGID_CAPTION = 18
    TAGID_CENTER = 19
    TAGID_CITE = 20
    TAGID_CODE = 21
    TAGID_COL = 22
    TAGID_COLGROUP = 23
    TAGID_COMMENT = 24
    TAGID_COMMENT_RAW = 25
    TAGID_DD = 26
    TAGID_DEL = 27
    TAGID_DFN = 28
    TAGID_DIR = 29
    TAGID_DIV = 30
    TAGID_DL = 31
    TAGID_DT = 32
    TAGID_EM = 33
    TAGID_EMBED = 34
    TAGID_FIELDSET = 35
    TAGID_FONT = 36
    TAGID_FORM = 37
    TAGID_FRAME = 38
    TAGID_FRAMESET = 39
    TAGID_GENERIC = 40
    TAGID_H1 = 41
    TAGID_H2 = 42
    TAGID_H3 = 43
    TAGID_H4 = 44
    TAGID_H5 = 45
    TAGID_H6 = 46
    TAGID_HEAD = 47
    TAGID_HR = 48
    TAGID_HTML = 49
    TAGID_I = 50
    TAGID_IFRAME = 51
    TAGID_IMG = 52
    TAGID_INPUT = 53
    TAGID_INS = 54
    TAGID_KBD = 55
    TAGID_LABEL = 56
    TAGID_LEGEND = 57
    TAGID_LI = 58
    TAGID_LINK = 59
    TAGID_LISTING = 60
    TAGID_MAP = 61
    TAGID_MARQUEE = 62
    TAGID_MENU = 63
    TAGID_META = 64
    TAGID_NEXTID = 65
    TAGID_NOBR = 66
    TAGID_NOEMBED = 67
    TAGID_NOFRAMES = 68
    TAGID_NOSCRIPT = 69
    TAGID_OBJECT = 70
    TAGID_OL = 71
    TAGID_OPTION = 72
    TAGID_P = 73
    TAGID_PARAM = 74
    TAGID_PLAINTEXT = 75
    TAGID_PRE = 76
    TAGID_Q = 77
    TAGID_RP = 78
    TAGID_RT = 79
    TAGID_RUBY = 80
    TAGID_S = 81
    TAGID_SAMP = 82
    TAGID_SCRIPT = 83
    TAGID_SELECT = 84
    TAGID_SMALL = 85
    TAGID_SPAN = 86
    TAGID_STRIKE = 87
    TAGID_STRONG = 88
    TAGID_STYLE = 89
    TAGID_SUB = 90
    TAGID_SUP = 91
    TAGID_TABLE = 92
    TAGID_TBODY = 93
    TAGID_TC = 94
    TAGID_TD = 95
    TAGID_TEXTAREA = 96
    TAGID_TFOOT = 97
    TAGID_TH = 98
    TAGID_THEAD = 99
    TAGID_TITLE = 100
    TAGID_TR = 101
    TAGID_TT = 102
    TAGID_U = 103
    TAGID_UL = 104
    TAGID_VAR = 105
    TAGID_WBR = 106
    TAGID_XMP = 107
    TAGID_ROOT = 108
    TAGID_OPTGROUP = 109
    TAGID_ABBR = 110
    TAGID_SVG_A = 111
    TAGID_SVG_ALTGLYPH = 112
    TAGID_SVG_ALTGLYPHDEF = 113
    TAGID_SVG_ALTGLYPHITEM = 114
    TAGID_SVG_ANIMATE = 115
    TAGID_SVG_ANIMATECOLOR = 116
    TAGID_SVG_ANIMATEMOTION = 117
    TAGID_SVG_ANIMATETRANSFORM = 118
    TAGID_SVG_CIRCLE = 119
    TAGID_SVG_CLIPPATH = 120
    TAGID_SVG_COLOR_PROFILE = 121
    TAGID_SVG_CURSOR = 122
    TAGID_SVG_DEFINITION_SRC = 123
    TAGID_SVG_DEFS = 124
    TAGID_SVG_DESC = 125
    TAGID_SVG_ELLIPSE = 126
    TAGID_SVG_FEBLEND = 127
    TAGID_SVG_FECOLORMATRIX = 128
    TAGID_SVG_FECOMPONENTTRANSFER = 129
    TAGID_SVG_FECOMPOSITE = 130
    TAGID_SVG_FECONVOLVEMATRIX = 131
    TAGID_SVG_FEDIFFUSELIGHTING = 132
    TAGID_SVG_FEDISPLACEMENTMAP = 133
    TAGID_SVG_FEDISTANTLIGHT = 134
    TAGID_SVG_FEFLOOD = 135
    TAGID_SVG_FEFUNCA = 136
    TAGID_SVG_FEFUNCB = 137
    TAGID_SVG_FEFUNCG = 138
    TAGID_SVG_FEFUNCR = 139
    TAGID_SVG_FEGAUSSIANBLUR = 140
    TAGID_SVG_FEIMAGE = 141
    TAGID_SVG_FEMERGE = 142
    TAGID_SVG_FEMERGENODE = 143
    TAGID_SVG_FEMORPHOLOGY = 144
    TAGID_SVG_FEOFFSET = 145
    TAGID_SVG_FEPOINTLIGHT = 146
    TAGID_SVG_FESPECULARLIGHTING = 147
    TAGID_SVG_FESPOTLIGHT = 148
    TAGID_SVG_FETILE = 149
    TAGID_SVG_FETURBULENCE = 150
    TAGID_SVG_FILTER = 151
    TAGID_SVG_FONT = 152
    TAGID_SVG_FONT_FACE = 153
    TAGID_SVG_FONT_FACE_FORMAT = 154
    TAGID_SVG_FONT_FACE_NAME = 155
    TAGID_SVG_FONT_FACE_SRC = 156
    TAGID_SVG_FONT_FACE_URI = 157
    TAGID_SVG_FOREIGNOBJECT = 158
    TAGID_SVG_G = 159
    TAGID_SVG_GLYPH = 160
    TAGID_SVG_GLYPHREF = 161
    TAGID_SVG_HKERN = 162
    TAGID_SVG_IMAGE = 163
    TAGID_SVG_LINE = 164
    TAGID_SVG_LINEARGRADIENT = 165
    TAGID_SVG_MARKER = 166
    TAGID_SVG_MASK = 167
    TAGID_SVG_METADATA = 168
    TAGID_SVG_MISSING_GLYPH = 169
    TAGID_SVG_MPATH = 170
    TAGID_SVG_PATH = 171
    TAGID_SVG_PATTERN = 172
    TAGID_SVG_POLYGON = 173
    TAGID_SVG_POLYLINE = 174
    TAGID_SVG_RADIALGRADIENT = 175
    TAGID_SVG_RECT = 176
    TAGID_SVG_SCRIPT = 177
    TAGID_SVG_SET = 178
    TAGID_SVG_STOP = 179
    TAGID_SVG_STYLE = 180
    TAGID_SVG_SVG = 181
    TAGID_SVG_SWITCH = 182
    TAGID_SVG_SYMBOL = 183
    TAGID_SVG_TEXT = 184
    TAGID_SVG_TEXTPATH = 185
    TAGID_SVG_TITLE = 186
    TAGID_SVG_TREF = 187
    TAGID_SVG_TSPAN = 188
    TAGID_SVG_USE = 189
    TAGID_SVG_VIEW = 190
    TAGID_SVG_VKERN = 191
    TAGID_AUDIO = 192
    TAGID_SOURCE = 193
    TAGID_VIDEO = 194
    TAGID_CANVAS = 195
    TAGID_DOCTYPE = 196
    TAGID_KEYGEN = 197
    TAGID_PROCESSINGINSTRUCTION = 198
    TAGID_ARTICLE = 199
    TAGID_ASIDE = 200
    TAGID_FIGCAPTION = 201
    TAGID_FIGURE = 202
    TAGID_FOOTER = 203
    TAGID_HEADER = 204
    TAGID_HGROUP = 205
    TAGID_MARK = 206
    TAGID_NAV = 207
    TAGID_SECTION = 208
    TAGID_PROGRESS = 209
    TAGID_MATHML_ANNOTATION_XML = 210
    TAGID_MATHML_MATH = 211
    TAGID_MATHML_MI = 212
    TAGID_MATHML_MN = 213
    TAGID_MATHML_MO = 214
    TAGID_MATHML_MS = 215
    TAGID_MATHML_MTEXT = 216
    TAGID_DATALIST = 217
    TAGID_TRACK = 218
    TAGID_ISINDEX = 219
    TAGID_COMMAND = 220
    TAGID_DETAILS = 221
    TAGID_SUMMARY = 222
    TAGID_X_MS_WEBVIEW = 223
    TAGID_COUNT = 224
    TAGID_LAST_PREDEFINED = 10000
    ELEMENT_TAG_ID_Max = 2147483647
  end

  enum SELECTION_TYPE : Int32
    SELECTION_TYPE_None = 0
    SELECTION_TYPE_Caret = 1
    SELECTION_TYPE_Text = 2
    SELECTION_TYPE_Control = 3
    SELECTION_TYPE_Max = 2147483647
  end

  enum SAVE_SEGMENTS_FLAGS : Int32
    SAVE_SEGMENTS_NoIE4SelectionCompat = 1
    SAVE_SEGMENTS_FLAGS_Max = 2147483647
  end

  enum CARET_DIRECTION : Int32
    CARET_DIRECTION_INDETERMINATE = 0
    CARET_DIRECTION_SAME = 1
    CARET_DIRECTION_BACKWARD = 2
    CARET_DIRECTION_FORWARD = 3
    CARET_DIRECTION_Max = 2147483647
  end

  enum LINE_DIRECTION : Int32
    LINE_DIRECTION_RightToLeft = 1
    LINE_DIRECTION_LeftToRight = 2
    LINE_DIRECTION_Max = 2147483647
  end

  enum HT_OPTIONS : Int32
    HT_OPT_AllowAfterEOL = 1
    HT_OPTIONS_Max = 2147483647
  end

  enum HT_RESULTS : Int32
    HT_RESULTS_Glyph = 1
    HT_RESULTS_Max = 2147483647
  end

  enum DISPLAY_MOVEUNIT : Int32
    DISPLAY_MOVEUNIT_PreviousLine = 1
    DISPLAY_MOVEUNIT_NextLine = 2
    DISPLAY_MOVEUNIT_CurrentLineStart = 3
    DISPLAY_MOVEUNIT_CurrentLineEnd = 4
    DISPLAY_MOVEUNIT_TopOfWindow = 5
    DISPLAY_MOVEUNIT_BottomOfWindow = 6
    DISPLAY_MOVEUNIT_Max = 2147483647
  end

  enum DISPLAY_GRAVITY : Int32
    DISPLAY_GRAVITY_PreviousLine = 1
    DISPLAY_GRAVITY_NextLine = 2
    DISPLAY_GRAVITY_Max = 2147483647
  end

  enum DISPLAY_BREAK : Int32
    DISPLAY_BREAK_None = 0
    DISPLAY_BREAK_Block = 1
    DISPLAY_BREAK_Break = 2
    DISPLAY_BREAK_Max = 2147483647
  end

  enum COORD_SYSTEM : Int32
    COORD_SYSTEM_GLOBAL = 0
    COORD_SYSTEM_PARENT = 1
    COORD_SYSTEM_CONTAINER = 2
    COORD_SYSTEM_CONTENT = 3
    COORD_SYSTEM_FRAME = 4
    COORD_SYSTEM_CLIENT = 5
    COORD_SYSTEM_Max = 2147483647
  end

  enum DEV_CONSOLE_MESSAGE_LEVEL : Int32
    DCML_INFORMATIONAL = 0
    DCML_WARNING = 1
    DCML_ERROR = 2
    DEV_CONSOLE_MESSAGE_LEVEL_Max = 2147483647
  end

  enum DOM_EVENT_PHASE : Int32
    DEP_CAPTURING_PHASE = 1
    DEP_AT_TARGET = 2
    DEP_BUBBLING_PHASE = 3
    DOM_EVENT_PHASE_Max = 2147483647
  end

  enum SCRIPT_TIMER_TYPE : Int32
    STT_TIMEOUT = 0
    STT_INTERVAL = 1
    STT_IMMEDIATE = 2
    STT_ANIMATION_FRAME = 3
    SCRIPT_TIMER_TYPE_Max = 2147483647
  end

  enum HTML_PAINTER : Int32
    HTMLPAINTER_OPAQUE = 1
    HTMLPAINTER_TRANSPARENT = 2
    HTMLPAINTER_ALPHA = 4
    HTMLPAINTER_COMPLEX = 8
    HTMLPAINTER_OVERLAY = 16
    HTMLPAINTER_HITTEST = 32
    HTMLPAINTER_SURFACE = 256
    HTMLPAINTER_3DSURFACE = 512
    HTMLPAINTER_NOBAND = 1024
    HTMLPAINTER_NODC = 4096
    HTMLPAINTER_NOPHYSICALCLIP = 8192
    HTMLPAINTER_NOSAVEDC = 16384
    HTMLPAINTER_SUPPORTS_XFORM = 32768
    HTMLPAINTER_EXPAND = 65536
    HTMLPAINTER_NOSCROLLBITS = 131072
    HTML_PAINTER_Max = 2147483647
  end

  enum HTML_PAINT_ZORDER : Int32
    HTMLPAINT_ZORDER_NONE = 0
    HTMLPAINT_ZORDER_REPLACE_ALL = 1
    HTMLPAINT_ZORDER_REPLACE_CONTENT = 2
    HTMLPAINT_ZORDER_REPLACE_BACKGROUND = 3
    HTMLPAINT_ZORDER_BELOW_CONTENT = 4
    HTMLPAINT_ZORDER_BELOW_FLOW = 5
    HTMLPAINT_ZORDER_ABOVE_FLOW = 6
    HTMLPAINT_ZORDER_ABOVE_CONTENT = 7
    HTMLPAINT_ZORDER_WINDOW_TOP = 8
    HTML_PAINT_ZORDER_Max = 2147483647
  end

  enum HTML_PAINT_DRAW_FLAGS : Int32
    HTMLPAINT_DRAW_UPDATEREGION = 1
    HTMLPAINT_DRAW_USE_XFORM = 2
    HTML_PAINT_DRAW_FLAGS_Max = 2147483647
  end

  enum HTML_PAINT_EVENT_FLAGS : Int32
    HTMLPAINT_EVENT_TARGET = 1
    HTMLPAINT_EVENT_SETCURSOR = 2
    HTML_PAINT_EVENT_FLAGS_Max = 2147483647
  end

  enum HTML_PAINT_DRAW_INFO_FLAGS : Int32
    HTMLPAINT_DRAWINFO_VIEWPORT = 1
    HTMLPAINT_DRAWINFO_UPDATEREGION = 2
    HTMLPAINT_DRAWINFO_XFORM = 4
    HTML_PAINT_DRAW_INFO_FLAGS_Max = 2147483647
  end

  enum HTMLDlgFlag : Int32
    HTMLDlgFlagNo = 0
    HTMLDlgFlagOff = 0
    HTMLDlgFlag0 = 0
    HTMLDlgFlagYes = 1
    HTMLDlgFlagOn = 1
    HTMLDlgFlag1 = 1
    HTMLDlgFlagNotSet = -1
    HTMLDlgFlag_Max = 2147483647
  end

  enum HTMLDlgBorder : Int32
    HTMLDlgBorderThin = 0
    HTMLDlgBorderThick = 262144
    HTMLDlgBorder_Max = 2147483647
  end

  enum HTMLDlgEdge : Int32
    HTMLDlgEdgeSunken = 0
    HTMLDlgEdgeRaised = 16
    HTMLDlgEdge_Max = 2147483647
  end

  enum HTMLDlgCenter : Int32
    HTMLDlgCenterNo = 0
    HTMLDlgCenterOff = 0
    HTMLDlgCenter0 = 0
    HTMLDlgCenterYes = 1
    HTMLDlgCenterOn = 1
    HTMLDlgCenter1 = 1
    HTMLDlgCenterParent = 1
    HTMLDlgCenterDesktop = 2
    HTMLDlgCenter_Max = 2147483647
  end

  enum HTMLAppFlag : Int32
    HTMLAppFlagNo = 0
    HTMLAppFlagOff = 0
    HTMLAppFlag0 = 0
    HTMLAppFlagYes = 1
    HTMLAppFlagOn = 1
    HTMLAppFlag1 = 1
    HTMLAppFlag_Max = 2147483647
  end

  enum HTMLMinimizeFlag : Int32
    HTMLMinimizeFlagNo = 0
    HTMLMinimizeFlagYes = 131072
    HTMLMinimizeFlag_Max = 2147483647
  end

  enum HTMLMaximizeFlag : Int32
    HTMLMaximizeFlagNo = 0
    HTMLMaximizeFlagYes = 65536
    HTMLMaximizeFlag_Max = 2147483647
  end

  enum HTMLCaptionFlag : Int32
    HTMLCaptionFlagNo = 0
    HTMLCaptionFlagYes = 12582912
    HTMLCaptionFlag_Max = 2147483647
  end

  enum HTMLSysMenuFlag : Int32
    HTMLSysMenuFlagNo = 0
    HTMLSysMenuFlagYes = 524288
    HTMLSysMenuFlag_Max = 2147483647
  end

  enum HTMLBorder : Int32
    HTMLBorderNone = 0
    HTMLBorderThick = 262144
    HTMLBorderDialog = 4194304
    HTMLBorderThin = 8388608
    HTMLBorder_Max = 2147483647
  end

  enum HTMLBorderStyle : Int32
    HTMLBorderStyleNormal = 0
    HTMLBorderStyleRaised = 256
    HTMLBorderStyleSunken = 512
    HTMLBorderStylecombined = 768
    HTMLBorderStyleStatic = 131072
    HTMLBorderStyle_Max = 2147483647
  end

  enum HTMLWindowState : Int32
    HTMLWindowStateNormal = 1
    HTMLWindowStateMaximize = 3
    HTMLWindowStateMinimize = 6
    HTMLWindowState_Max = 2147483647
  end

  enum BEHAVIOR_EVENT : Int32
    BEHAVIOREVENT_FIRST = 0
    BEHAVIOREVENT_CONTENTREADY = 0
    BEHAVIOREVENT_DOCUMENTREADY = 1
    BEHAVIOREVENT_APPLYSTYLE = 2
    BEHAVIOREVENT_DOCUMENTCONTEXTCHANGE = 3
    BEHAVIOREVENT_CONTENTSAVE = 4
    BEHAVIOREVENT_LAST = 4
    BEHAVIOR_EVENT_Max = 2147483647
  end

  enum BEHAVIOR_EVENT_FLAGS : Int32
    BEHAVIOREVENTFLAGS_BUBBLE = 1
    BEHAVIOREVENTFLAGS_STANDARDADDITIVE = 2
    BEHAVIOR_EVENT_FLAGS_Max = 2147483647
  end

  enum BEHAVIOR_RENDER_INFO : Int32
    BEHAVIORRENDERINFO_BEFOREBACKGROUND = 1
    BEHAVIORRENDERINFO_AFTERBACKGROUND = 2
    BEHAVIORRENDERINFO_BEFORECONTENT = 4
    BEHAVIORRENDERINFO_AFTERCONTENT = 8
    BEHAVIORRENDERINFO_AFTERFOREGROUND = 32
    BEHAVIORRENDERINFO_ABOVECONTENT = 40
    BEHAVIORRENDERINFO_ALLLAYERS = 255
    BEHAVIORRENDERINFO_DISABLEBACKGROUND = 256
    BEHAVIORRENDERINFO_DISABLENEGATIVEZ = 512
    BEHAVIORRENDERINFO_DISABLECONTENT = 1024
    BEHAVIORRENDERINFO_DISABLEPOSITIVEZ = 2048
    BEHAVIORRENDERINFO_DISABLEALLLAYERS = 3840
    BEHAVIORRENDERINFO_HITTESTING = 4096
    BEHAVIORRENDERINFO_SURFACE = 1048576
    BEHAVIORRENDERINFO_3DSURFACE = 2097152
    BEHAVIOR_RENDER_INFO_Max = 2147483647
  end

  enum BEHAVIOR_RELATION : Int32
    BEHAVIOR_FIRSTRELATION = 0
    BEHAVIOR_SAMEELEMENT = 0
    BEHAVIOR_PARENT = 1
    BEHAVIOR_CHILD = 2
    BEHAVIOR_SIBLING = 3
    BEHAVIOR_LASTRELATION = 3
    BEHAVIOR_RELATION_Max = 2147483647
  end

  enum BEHAVIOR_LAYOUT_INFO : Int32
    BEHAVIORLAYOUTINFO_FULLDELEGATION = 1
    BEHAVIORLAYOUTINFO_MODIFYNATURAL = 2
    BEHAVIORLAYOUTINFO_MAPSIZE = 4
    BEHAVIOR_LAYOUT_INFO_Max = 2147483647
  end

  enum BEHAVIOR_LAYOUT_MODE : Int32
    BEHAVIORLAYOUTMODE_NATURAL = 1
    BEHAVIORLAYOUTMODE_MINWIDTH = 2
    BEHAVIORLAYOUTMODE_MAXWIDTH = 4
    BEHAVIORLAYOUTMODE_MEDIA_RESOLUTION = 16384
    BEHAVIORLAYOUTMODE_FINAL_PERCENT = 32768
    BEHAVIOR_LAYOUT_MODE_Max = 2147483647
  end

  enum ELEMENTDESCRIPTOR_FLAGS : Int32
    ELEMENTDESCRIPTORFLAGS_LITERAL = 1
    ELEMENTDESCRIPTORFLAGS_NESTED_LITERAL = 2
    ELEMENTDESCRIPTOR_FLAGS_Max = 2147483647
  end

  enum ELEMENTNAMESPACE_FLAGS : Int32
    ELEMENTNAMESPACEFLAGS_ALLOWANYTAG = 1
    ELEMENTNAMESPACEFLAGS_QUERYFORUNKNOWNTAGS = 2
    ELEMENTNAMESPACE_FLAGS_Max = 2147483647
  end

  enum VIEW_OBJECT_ALPHA_MODE : Int32
    VIEW_OBJECT_ALPHA_MODE_IGNORE = 0
    VIEW_OBJECT_ALPHA_MODE_PREMULTIPLIED = 1
    VIEW_OBJECT_ALPHA_MODE_Max = 2147483647
  end

  enum VIEW_OBJECT_COMPOSITION_MODE : Int32
    VIEW_OBJECT_COMPOSITION_MODE_LEGACY = 0
    VIEW_OBJECT_COMPOSITION_MODE_SURFACEPRESENTER = 1
    VIEW_OBJECT_COMPOSITION_MODE_Max = 2147483647
  end

  enum ExtensionValidationContexts : Int32
    ExtensionValidationContextNone = 0
    ExtensionValidationContextDynamic = 1
    ExtensionValidationContextParsed = 2
  end

  enum ExtensionValidationResults : Int32
    ExtensionValidationResultNone = 0
    ExtensionValidationResultDoNotInstantiate = 1
    ExtensionValidationResultArrestPageLoad = 2
  end

  enum MIDL_ITargetFrame2_0001 : Int32
    FINDFRAME_NONE = 0
    FINDFRAME_JUSTTESTEXISTENCE = 1
    FINDFRAME_INTERNAL = -2147483648
  end

  enum MIDL_ITargetFrame2_0002 : Int32
    FRAMEOPTIONS_SCROLL_YES = 1
    FRAMEOPTIONS_SCROLL_NO = 2
    FRAMEOPTIONS_SCROLL_AUTO = 4
    FRAMEOPTIONS_NORESIZE = 8
    FRAMEOPTIONS_NO3DBORDER = 16
    FRAMEOPTIONS_DESKTOP = 32
    FRAMEOPTIONS_BROWSERBAND = 64
  end

  enum MIDL_ITargetFrame_0001 : Int32
    NAVIGATEFRAME_FL_RECORD = 1
    NAVIGATEFRAME_FL_POST = 2
    NAVIGATEFRAME_FL_NO_DOC_CACHE = 4
    NAVIGATEFRAME_FL_NO_IMAGE_CACHE = 8
    NAVIGATEFRAME_FL_AUTH_FAIL_CACHE_OK = 16
    NAVIGATEFRAME_FL_SENDING_FROM_FORM = 32
    NAVIGATEFRAME_FL_REALLY_SENDING_FROM_FORM = 64
  end

  enum MediaActivityNotifyType : Int32
    MediaPlayback = 0
    MediaRecording = 1
    MediaCasting = 2
  end

  enum SCROLLABLECONTEXTMENU_PLACEMENT : Int32
    SCMP_TOP = 0
    SCMP_BOTTOM = 1
    SCMP_LEFT = 2
    SCMP_RIGHT = 3
    SCMP_FULL = 4
  end

  enum INTERNETEXPLORERCONFIGURATION : Int32
    INTERNETEXPLORERCONFIGURATION_HOST = 1
    INTERNETEXPLORERCONFIGURATION_WEB_DRIVER = 2
    INTERNETEXPLORERCONFIGURATION_WEB_DRIVER_EDGE = 4
  end

  enum IELAUNCHOPTION_FLAGS : Int32
    IELAUNCHOPTION_SCRIPTDEBUG = 1
    IELAUNCHOPTION_FORCE_COMPAT = 2
    IELAUNCHOPTION_FORCE_EDGE = 4
    IELAUNCHOPTION_LOCK_ENGINE = 8
  end

  enum DOCHOSTUITYPE : Int32
    DOCHOSTUITYPE_BROWSE = 0
    DOCHOSTUITYPE_AUTHOR = 1
  end

  enum DOCHOSTUIDBLCLK : Int32
    DOCHOSTUIDBLCLK_DEFAULT = 0
    DOCHOSTUIDBLCLK_SHOWPROPERTIES = 1
    DOCHOSTUIDBLCLK_SHOWCODE = 2
  end

  enum DOCHOSTUIFLAG : Int32
    DOCHOSTUIFLAG_DIALOG = 1
    DOCHOSTUIFLAG_DISABLE_HELP_MENU = 2
    DOCHOSTUIFLAG_NO3DBORDER = 4
    DOCHOSTUIFLAG_SCROLL_NO = 8
    DOCHOSTUIFLAG_DISABLE_SCRIPT_INACTIVE = 16
    DOCHOSTUIFLAG_OPENNEWWIN = 32
    DOCHOSTUIFLAG_DISABLE_OFFSCREEN = 64
    DOCHOSTUIFLAG_FLAT_SCROLLBAR = 128
    DOCHOSTUIFLAG_DIV_BLOCKDEFAULT = 256
    DOCHOSTUIFLAG_ACTIVATE_CLIENTHIT_ONLY = 512
    DOCHOSTUIFLAG_OVERRIDEBEHAVIORFACTORY = 1024
    DOCHOSTUIFLAG_CODEPAGELINKEDFONTS = 2048
    DOCHOSTUIFLAG_URL_ENCODING_DISABLE_UTF8 = 4096
    DOCHOSTUIFLAG_URL_ENCODING_ENABLE_UTF8 = 8192
    DOCHOSTUIFLAG_ENABLE_FORMS_AUTOCOMPLETE = 16384
    DOCHOSTUIFLAG_ENABLE_INPLACE_NAVIGATION = 65536
    DOCHOSTUIFLAG_IME_ENABLE_RECONVERSION = 131072
    DOCHOSTUIFLAG_THEME = 262144
    DOCHOSTUIFLAG_NOTHEME = 524288
    DOCHOSTUIFLAG_NOPICS = 1048576
    DOCHOSTUIFLAG_NO3DOUTERBORDER = 2097152
    DOCHOSTUIFLAG_DISABLE_EDIT_NS_FIXUP = 4194304
    DOCHOSTUIFLAG_LOCAL_MACHINE_ACCESS_CHECK = 8388608
    DOCHOSTUIFLAG_DISABLE_UNTRUSTEDPROTOCOL = 16777216
    DOCHOSTUIFLAG_HOST_NAVIGATES = 33554432
    DOCHOSTUIFLAG_ENABLE_REDIRECT_NOTIFICATION = 67108864
    DOCHOSTUIFLAG_USE_WINDOWLESS_SELECTCONTROL = 134217728
    DOCHOSTUIFLAG_USE_WINDOWED_SELECTCONTROL = 268435456
    DOCHOSTUIFLAG_ENABLE_ACTIVEX_INACTIVATE_MODE = 536870912
    DOCHOSTUIFLAG_DPI_AWARE = 1073741824
  end

  enum OpenServiceErrors : Int32
    OS_E_NOTFOUND = -2147287038
    OS_E_NOTSUPPORTED = -2147467231
    OS_E_CANCELLED = -2147471631
    OS_E_GPDISABLED = -1072886820
  end

  enum OpenServiceActivityContentType : Int32
    ActivityContentNone = -1
    ActivityContentDocument = 0
    ActivityContentSelection = 1
    ActivityContentLink = 2
    ActivityContentCount = 3
  end

  enum ADDURL_FLAG : Int32
    ADDURL_FIRST = 0
    ADDURL_ADDTOHISTORYANDCACHE = 0
    ADDURL_ADDTOCACHE = 1
    ADDURL_Max = 2147483647
  end

  struct HTML_PAINTER_INFO
    l_flags : Int32
    l_z_order : Int32
    iid_draw_object : Guid
    rc_expand : RECT
  end
  struct HTML_PAINT_XFORM
    e_m11 : Float32
    e_m12 : Float32
    e_m21 : Float32
    e_m22 : Float32
    e_dx : Float32
    e_dy : Float32
  end
  struct HTML_PAINT_DRAW_INFO
    rc_viewport : RECT
    hrgn_update : HRGN
    xform : HTML_PAINT_XFORM
  end
  struct Tagnavigatedata
    ul_target : UInt32
    ul_url : UInt32
    ul_ref_url : UInt32
    ul_post_data : UInt32
    dw_flags : UInt32
  end
  struct IELAUNCHURLINFO
    cb_size : UInt32
    dw_creation_flags : UInt32
    dw_launch_option_flags : UInt32
  end
  struct DOCHOSTUIINFO
    cb_size : UInt32
    dw_flags : UInt32
    dw_double_click : UInt32
    pch_host_css : LibC::LPWSTR
    pch_host_ns : LibC::LPWSTR
  end
  struct STATURL
    cb_size : UInt32
    pwcs_url : LibC::LPWSTR
    pwcs_title : LibC::LPWSTR
    ft_last_visited : FILETIME
    ft_last_updated : FILETIME
    ft_expires : FILETIME
    dw_flags : UInt32
  end


  struct IHTMLFiltersCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
  end

  IHTMLFiltersCollection_GUID = "3050f3ee-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFiltersCollection = LibC::GUID.new(0x3050f3ee_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFiltersCollection
    lpVtbl : IHTMLFiltersCollectionVTbl*
  end

  struct IIE70DispatchExVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_disp_id : UInt64
    invoke_ex : UInt64
    delete_member_by_name : UInt64
    delete_member_by_disp_id : UInt64
    get_member_properties : UInt64
    get_member_name : UInt64
    get_next_disp_id : UInt64
    get_name_space_parent : UInt64
  end

  IIE70DispatchEx_GUID = "3051046b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IIE70DispatchEx = LibC::GUID.new(0x3051046b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IIE70DispatchEx
    lpVtbl : IIE70DispatchExVTbl*
  end

  struct IIE80DispatchExVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_disp_id : UInt64
    invoke_ex : UInt64
    delete_member_by_name : UInt64
    delete_member_by_disp_id : UInt64
    get_member_properties : UInt64
    get_member_name : UInt64
    get_next_disp_id : UInt64
    get_name_space_parent : UInt64
  end

  IIE80DispatchEx_GUID = "3051046c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IIE80DispatchEx = LibC::GUID.new(0x3051046c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IIE80DispatchEx
    lpVtbl : IIE80DispatchExVTbl*
  end

  struct IHTMLEventObjVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_src_element : UInt64
    get_alt_key : UInt64
    get_ctrl_key : UInt64
    get_shift_key : UInt64
    put_return_value : UInt64
    get_return_value : UInt64
    put_cancel_bubble : UInt64
    get_cancel_bubble : UInt64
    get_from_element : UInt64
    get_to_element : UInt64
    put_key_code : UInt64
    get_key_code : UInt64
    get_button : UInt64
    get_type : UInt64
    get_qualifier : UInt64
    get_reason : UInt64
    get_x : UInt64
    get_y : UInt64
    get_client_x : UInt64
    get_client_y : UInt64
    get_offset_x : UInt64
    get_offset_y : UInt64
    get_screen_x : UInt64
    get_screen_y : UInt64
    get_src_filter : UInt64
  end

  IHTMLEventObj_GUID = "3050f32d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEventObj = LibC::GUID.new(0x3050f32d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEventObj
    lpVtbl : IHTMLEventObjVTbl*
  end

  struct IElementBehaviorSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_element : UInt64
    register_notification : UInt64
  end

  IElementBehaviorSite_GUID = "3050f427-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorSite = LibC::GUID.new(0x3050f427_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorSite
    lpVtbl : IElementBehaviorSiteVTbl*
  end

  struct IElementBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    init : UInt64
    notify : UInt64
    detach : UInt64
  end

  IElementBehavior_GUID = "3050f425-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehavior = LibC::GUID.new(0x3050f425_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehavior
    lpVtbl : IElementBehaviorVTbl*
  end

  struct IElementBehaviorFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    find_behavior : UInt64
  end

  IElementBehaviorFactory_GUID = "3050f429-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorFactory = LibC::GUID.new(0x3050f429_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorFactory
    lpVtbl : IElementBehaviorFactoryVTbl*
  end

  struct IElementBehaviorSiteOMVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    register_event : UInt64
    get_event_cookie : UInt64
    fire_event : UInt64
    create_event_object : UInt64
    register_name : UInt64
    register_urn : UInt64
  end

  IElementBehaviorSiteOM_GUID = "3050f489-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorSiteOM = LibC::GUID.new(0x3050f489_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorSiteOM
    lpVtbl : IElementBehaviorSiteOMVTbl*
  end

  struct IElementBehaviorRenderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    draw : UInt64
    get_render_info : UInt64
    hit_test_point : UInt64
  end

  IElementBehaviorRender_GUID = "3050f4aa-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorRender = LibC::GUID.new(0x3050f4aa_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorRender
    lpVtbl : IElementBehaviorRenderVTbl*
  end

  struct IElementBehaviorSiteRenderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    invalidate : UInt64
    invalidate_render_info : UInt64
    invalidate_style : UInt64
  end

  IElementBehaviorSiteRender_GUID = "3050f4a7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorSiteRender = LibC::GUID.new(0x3050f4a7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorSiteRender
    lpVtbl : IElementBehaviorSiteRenderVTbl*
  end

  struct IDOMEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_bubbles : UInt64
    get_cancelable : UInt64
    get_current_target : UInt64
    get_default_prevented : UInt64
    get_event_phase : UInt64
    get_target : UInt64
    get_time_stamp : UInt64
    get_type : UInt64
    init_event : UInt64
    prevent_default : UInt64
    stop_propagation : UInt64
    stop_immediate_propagation : UInt64
    get_is_trusted : UInt64
    put_cancel_bubble : UInt64
    get_cancel_bubble : UInt64
    get_src_element : UInt64
  end

  IDOMEvent_GUID = "305104ba-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMEvent = LibC::GUID.new(0x305104ba_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMEvent
    lpVtbl : IDOMEventVTbl*
  end

  struct IHTMLDOMConstructorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_constructor : UInt64
    lookup_getter : UInt64
    lookup_setter : UInt64
    define_getter : UInt64
    define_setter : UInt64
  end

  IHTMLDOMConstructor_GUID = "3051049b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMConstructor = LibC::GUID.new(0x3051049b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMConstructor
    lpVtbl : IHTMLDOMConstructorVTbl*
  end

  struct IHTMLStyleSheetRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_selector_text : UInt64
    get_selector_text : UInt64
    get_style : UInt64
    get_read_only : UInt64
  end

  IHTMLStyleSheetRule_GUID = "3050f357-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheetRule = LibC::GUID.new(0x3050f357_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheetRule
    lpVtbl : IHTMLStyleSheetRuleVTbl*
  end

  struct IHTMLCSSStyleDeclarationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get_parent_rule : UInt64
    get_property_value : UInt64
    get_property_priority : UInt64
    remove_property : UInt64
    set_property : UInt64
    item : UInt64
    put_font_family : UInt64
    get_font_family : UInt64
    put_font_style : UInt64
    get_font_style : UInt64
    put_font_variant : UInt64
    get_font_variant : UInt64
    put_font_weight : UInt64
    get_font_weight : UInt64
    put_font_size : UInt64
    get_font_size : UInt64
    put_font : UInt64
    get_font : UInt64
    put_color : UInt64
    get_color : UInt64
    put_background : UInt64
    get_background : UInt64
    put_background_color : UInt64
    get_background_color : UInt64
    put_background_image : UInt64
    get_background_image : UInt64
    put_background_repeat : UInt64
    get_background_repeat : UInt64
    put_background_attachment : UInt64
    get_background_attachment : UInt64
    put_background_position : UInt64
    get_background_position : UInt64
    put_background_position_x : UInt64
    get_background_position_x : UInt64
    put_background_position_y : UInt64
    get_background_position_y : UInt64
    put_word_spacing : UInt64
    get_word_spacing : UInt64
    put_letter_spacing : UInt64
    get_letter_spacing : UInt64
    put_text_decoration : UInt64
    get_text_decoration : UInt64
    put_vertical_align : UInt64
    get_vertical_align : UInt64
    put_text_transform : UInt64
    get_text_transform : UInt64
    put_text_align : UInt64
    get_text_align : UInt64
    put_text_indent : UInt64
    get_text_indent : UInt64
    put_line_height : UInt64
    get_line_height : UInt64
    put_margin_top : UInt64
    get_margin_top : UInt64
    put_margin_right : UInt64
    get_margin_right : UInt64
    put_margin_bottom : UInt64
    get_margin_bottom : UInt64
    put_margin_left : UInt64
    get_margin_left : UInt64
    put_margin : UInt64
    get_margin : UInt64
    put_padding_top : UInt64
    get_padding_top : UInt64
    put_padding_right : UInt64
    get_padding_right : UInt64
    put_padding_bottom : UInt64
    get_padding_bottom : UInt64
    put_padding_left : UInt64
    get_padding_left : UInt64
    put_padding : UInt64
    get_padding : UInt64
    put_border : UInt64
    get_border : UInt64
    put_border_top : UInt64
    get_border_top : UInt64
    put_border_right : UInt64
    get_border_right : UInt64
    put_border_bottom : UInt64
    get_border_bottom : UInt64
    put_border_left : UInt64
    get_border_left : UInt64
    put_border_color : UInt64
    get_border_color : UInt64
    put_border_top_color : UInt64
    get_border_top_color : UInt64
    put_border_right_color : UInt64
    get_border_right_color : UInt64
    put_border_bottom_color : UInt64
    get_border_bottom_color : UInt64
    put_border_left_color : UInt64
    get_border_left_color : UInt64
    put_border_width : UInt64
    get_border_width : UInt64
    put_border_top_width : UInt64
    get_border_top_width : UInt64
    put_border_right_width : UInt64
    get_border_right_width : UInt64
    put_border_bottom_width : UInt64
    get_border_bottom_width : UInt64
    put_border_left_width : UInt64
    get_border_left_width : UInt64
    put_border_style : UInt64
    get_border_style : UInt64
    put_border_top_style : UInt64
    get_border_top_style : UInt64
    put_border_right_style : UInt64
    get_border_right_style : UInt64
    put_border_bottom_style : UInt64
    get_border_bottom_style : UInt64
    put_border_left_style : UInt64
    get_border_left_style : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    put_style_float : UInt64
    get_style_float : UInt64
    put_clear : UInt64
    get_clear : UInt64
    put_display : UInt64
    get_display : UInt64
    put_visibility : UInt64
    get_visibility : UInt64
    put_list_style_type : UInt64
    get_list_style_type : UInt64
    put_list_style_position : UInt64
    get_list_style_position : UInt64
    put_list_style_image : UInt64
    get_list_style_image : UInt64
    put_list_style : UInt64
    get_list_style : UInt64
    put_white_space : UInt64
    get_white_space : UInt64
    put_top : UInt64
    get_top : UInt64
    put_left : UInt64
    get_left : UInt64
    put_z_index : UInt64
    get_z_index : UInt64
    put_overflow : UInt64
    get_overflow : UInt64
    put_page_break_before : UInt64
    get_page_break_before : UInt64
    put_page_break_after : UInt64
    get_page_break_after : UInt64
    put_css_text : UInt64
    get_css_text : UInt64
    put_cursor : UInt64
    get_cursor : UInt64
    put_clip : UInt64
    get_clip : UInt64
    put_filter : UInt64
    get_filter : UInt64
    put_table_layout : UInt64
    get_table_layout : UInt64
    put_border_collapse : UInt64
    get_border_collapse : UInt64
    put_direction : UInt64
    get_direction : UInt64
    put_behavior : UInt64
    get_behavior : UInt64
    put_position : UInt64
    get_position : UInt64
    put_unicode_bidi : UInt64
    get_unicode_bidi : UInt64
    put_bottom : UInt64
    get_bottom : UInt64
    put_right : UInt64
    get_right : UInt64
    put_ime_mode : UInt64
    get_ime_mode : UInt64
    put_ruby_align : UInt64
    get_ruby_align : UInt64
    put_ruby_position : UInt64
    get_ruby_position : UInt64
    put_ruby_overhang : UInt64
    get_ruby_overhang : UInt64
    put_layout_grid_char : UInt64
    get_layout_grid_char : UInt64
    put_layout_grid_line : UInt64
    get_layout_grid_line : UInt64
    put_layout_grid_mode : UInt64
    get_layout_grid_mode : UInt64
    put_layout_grid_type : UInt64
    get_layout_grid_type : UInt64
    put_layout_grid : UInt64
    get_layout_grid : UInt64
    put_text_autospace : UInt64
    get_text_autospace : UInt64
    put_word_break : UInt64
    get_word_break : UInt64
    put_line_break : UInt64
    get_line_break : UInt64
    put_text_justify : UInt64
    get_text_justify : UInt64
    put_text_justify_trim : UInt64
    get_text_justify_trim : UInt64
    put_text_kashida : UInt64
    get_text_kashida : UInt64
    put_overflow_x : UInt64
    get_overflow_x : UInt64
    put_overflow_y : UInt64
    get_overflow_y : UInt64
    put_accelerator : UInt64
    get_accelerator : UInt64
    put_layout_flow : UInt64
    get_layout_flow : UInt64
    put_zoom : UInt64
    get_zoom : UInt64
    put_word_wrap : UInt64
    get_word_wrap : UInt64
    put_text_underline_position : UInt64
    get_text_underline_position : UInt64
    put_scrollbar_base_color : UInt64
    get_scrollbar_base_color : UInt64
    put_scrollbar_face_color : UInt64
    get_scrollbar_face_color : UInt64
    put_scrollbar3d_light_color : UInt64
    get_scrollbar3d_light_color : UInt64
    put_scrollbar_shadow_color : UInt64
    get_scrollbar_shadow_color : UInt64
    put_scrollbar_highlight_color : UInt64
    get_scrollbar_highlight_color : UInt64
    put_scrollbar_dark_shadow_color : UInt64
    get_scrollbar_dark_shadow_color : UInt64
    put_scrollbar_arrow_color : UInt64
    get_scrollbar_arrow_color : UInt64
    put_scrollbar_track_color : UInt64
    get_scrollbar_track_color : UInt64
    put_writing_mode : UInt64
    get_writing_mode : UInt64
    put_text_align_last : UInt64
    get_text_align_last : UInt64
    put_text_kashida_space : UInt64
    get_text_kashida_space : UInt64
    put_text_overflow : UInt64
    get_text_overflow : UInt64
    put_min_height : UInt64
    get_min_height : UInt64
    put_ms_interpolation_mode : UInt64
    get_ms_interpolation_mode : UInt64
    put_max_height : UInt64
    get_max_height : UInt64
    put_min_width : UInt64
    get_min_width : UInt64
    put_max_width : UInt64
    get_max_width : UInt64
    put_content : UInt64
    get_content : UInt64
    put_caption_side : UInt64
    get_caption_side : UInt64
    put_counter_increment : UInt64
    get_counter_increment : UInt64
    put_counter_reset : UInt64
    get_counter_reset : UInt64
    put_outline : UInt64
    get_outline : UInt64
    put_outline_width : UInt64
    get_outline_width : UInt64
    put_outline_style : UInt64
    get_outline_style : UInt64
    put_outline_color : UInt64
    get_outline_color : UInt64
    put_box_sizing : UInt64
    get_box_sizing : UInt64
    put_border_spacing : UInt64
    get_border_spacing : UInt64
    put_orphans : UInt64
    get_orphans : UInt64
    put_widows : UInt64
    get_widows : UInt64
    put_page_break_inside : UInt64
    get_page_break_inside : UInt64
    put_empty_cells : UInt64
    get_empty_cells : UInt64
    put_ms_block_progression : UInt64
    get_ms_block_progression : UInt64
    put_quotes : UInt64
    get_quotes : UInt64
    put_alignment_baseline : UInt64
    get_alignment_baseline : UInt64
    put_baseline_shift : UInt64
    get_baseline_shift : UInt64
    put_dominant_baseline : UInt64
    get_dominant_baseline : UInt64
    put_font_size_adjust : UInt64
    get_font_size_adjust : UInt64
    put_font_stretch : UInt64
    get_font_stretch : UInt64
    put_opacity : UInt64
    get_opacity : UInt64
    put_clip_path : UInt64
    get_clip_path : UInt64
    put_clip_rule : UInt64
    get_clip_rule : UInt64
    put_fill : UInt64
    get_fill : UInt64
    put_fill_opacity : UInt64
    get_fill_opacity : UInt64
    put_fill_rule : UInt64
    get_fill_rule : UInt64
    put_kerning : UInt64
    get_kerning : UInt64
    put_marker : UInt64
    get_marker : UInt64
    put_marker_end : UInt64
    get_marker_end : UInt64
    put_marker_mid : UInt64
    get_marker_mid : UInt64
    put_marker_start : UInt64
    get_marker_start : UInt64
    put_mask : UInt64
    get_mask : UInt64
    put_pointer_events : UInt64
    get_pointer_events : UInt64
    put_stop_color : UInt64
    get_stop_color : UInt64
    put_stop_opacity : UInt64
    get_stop_opacity : UInt64
    put_stroke : UInt64
    get_stroke : UInt64
    put_stroke_dasharray : UInt64
    get_stroke_dasharray : UInt64
    put_stroke_dashoffset : UInt64
    get_stroke_dashoffset : UInt64
    put_stroke_linecap : UInt64
    get_stroke_linecap : UInt64
    put_stroke_linejoin : UInt64
    get_stroke_linejoin : UInt64
    put_stroke_miterlimit : UInt64
    get_stroke_miterlimit : UInt64
    put_stroke_opacity : UInt64
    get_stroke_opacity : UInt64
    put_stroke_width : UInt64
    get_stroke_width : UInt64
    put_text_anchor : UInt64
    get_text_anchor : UInt64
    put_glyph_orientation_horizontal : UInt64
    get_glyph_orientation_horizontal : UInt64
    put_glyph_orientation_vertical : UInt64
    get_glyph_orientation_vertical : UInt64
    put_border_radius : UInt64
    get_border_radius : UInt64
    put_border_top_left_radius : UInt64
    get_border_top_left_radius : UInt64
    put_border_top_right_radius : UInt64
    get_border_top_right_radius : UInt64
    put_border_bottom_right_radius : UInt64
    get_border_bottom_right_radius : UInt64
    put_border_bottom_left_radius : UInt64
    get_border_bottom_left_radius : UInt64
    put_clip_top : UInt64
    get_clip_top : UInt64
    put_clip_right : UInt64
    get_clip_right : UInt64
    get_clip_bottom : UInt64
    put_clip_left : UInt64
    get_clip_left : UInt64
    put_css_float : UInt64
    get_css_float : UInt64
    put_background_clip : UInt64
    get_background_clip : UInt64
    put_background_origin : UInt64
    get_background_origin : UInt64
    put_background_size : UInt64
    get_background_size : UInt64
    put_box_shadow : UInt64
    get_box_shadow : UInt64
    put_ms_transform : UInt64
    get_ms_transform : UInt64
    put_ms_transform_origin : UInt64
    get_ms_transform_origin : UInt64
  end

  IHTMLCSSStyleDeclaration_GUID = "30510740-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCSSStyleDeclaration = LibC::GUID.new(0x30510740_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCSSStyleDeclaration
    lpVtbl : IHTMLCSSStyleDeclarationVTbl*
  end

  struct IHTMLCSSStyleDeclaration2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ms_scroll_chaining : UInt64
    get_ms_scroll_chaining : UInt64
    put_ms_content_zooming : UInt64
    get_ms_content_zooming : UInt64
    put_ms_content_zoom_snap_type : UInt64
    get_ms_content_zoom_snap_type : UInt64
    put_ms_scroll_rails : UInt64
    get_ms_scroll_rails : UInt64
    put_ms_content_zoom_chaining : UInt64
    get_ms_content_zoom_chaining : UInt64
    put_ms_scroll_snap_type : UInt64
    get_ms_scroll_snap_type : UInt64
    put_ms_content_zoom_limit : UInt64
    get_ms_content_zoom_limit : UInt64
    put_ms_content_zoom_snap : UInt64
    get_ms_content_zoom_snap : UInt64
    put_ms_content_zoom_snap_points : UInt64
    get_ms_content_zoom_snap_points : UInt64
    put_ms_content_zoom_limit_min : UInt64
    get_ms_content_zoom_limit_min : UInt64
    put_ms_content_zoom_limit_max : UInt64
    get_ms_content_zoom_limit_max : UInt64
    put_ms_scroll_snap_x : UInt64
    get_ms_scroll_snap_x : UInt64
    put_ms_scroll_snap_y : UInt64
    get_ms_scroll_snap_y : UInt64
    put_ms_scroll_snap_points_x : UInt64
    get_ms_scroll_snap_points_x : UInt64
    put_ms_scroll_snap_points_y : UInt64
    get_ms_scroll_snap_points_y : UInt64
    put_ms_grid_column : UInt64
    get_ms_grid_column : UInt64
    put_ms_grid_column_align : UInt64
    get_ms_grid_column_align : UInt64
    put_ms_grid_columns : UInt64
    get_ms_grid_columns : UInt64
    put_ms_grid_column_span : UInt64
    get_ms_grid_column_span : UInt64
    put_ms_grid_row : UInt64
    get_ms_grid_row : UInt64
    put_ms_grid_row_align : UInt64
    get_ms_grid_row_align : UInt64
    put_ms_grid_rows : UInt64
    get_ms_grid_rows : UInt64
    put_ms_grid_row_span : UInt64
    get_ms_grid_row_span : UInt64
    put_ms_wrap_through : UInt64
    get_ms_wrap_through : UInt64
    put_ms_wrap_margin : UInt64
    get_ms_wrap_margin : UInt64
    put_ms_wrap_flow : UInt64
    get_ms_wrap_flow : UInt64
    put_ms_animation_name : UInt64
    get_ms_animation_name : UInt64
    put_ms_animation_duration : UInt64
    get_ms_animation_duration : UInt64
    put_ms_animation_timing_function : UInt64
    get_ms_animation_timing_function : UInt64
    put_ms_animation_delay : UInt64
    get_ms_animation_delay : UInt64
    put_ms_animation_direction : UInt64
    get_ms_animation_direction : UInt64
    put_ms_animation_play_state : UInt64
    get_ms_animation_play_state : UInt64
    put_ms_animation_iteration_count : UInt64
    get_ms_animation_iteration_count : UInt64
    put_ms_animation : UInt64
    get_ms_animation : UInt64
    put_ms_animation_fill_mode : UInt64
    get_ms_animation_fill_mode : UInt64
    put_color_interpolation_filters : UInt64
    get_color_interpolation_filters : UInt64
    put_column_count : UInt64
    get_column_count : UInt64
    put_column_width : UInt64
    get_column_width : UInt64
    put_column_gap : UInt64
    get_column_gap : UInt64
    put_column_fill : UInt64
    get_column_fill : UInt64
    put_column_span : UInt64
    get_column_span : UInt64
    put_columns : UInt64
    get_columns : UInt64
    put_column_rule : UInt64
    get_column_rule : UInt64
    put_column_rule_color : UInt64
    get_column_rule_color : UInt64
    put_column_rule_style : UInt64
    get_column_rule_style : UInt64
    put_column_rule_width : UInt64
    get_column_rule_width : UInt64
    put_break_before : UInt64
    get_break_before : UInt64
    put_break_after : UInt64
    get_break_after : UInt64
    put_break_inside : UInt64
    get_break_inside : UInt64
    put_flood_color : UInt64
    get_flood_color : UInt64
    put_flood_opacity : UInt64
    get_flood_opacity : UInt64
    put_lighting_color : UInt64
    get_lighting_color : UInt64
    put_ms_scroll_limit_x_min : UInt64
    get_ms_scroll_limit_x_min : UInt64
    put_ms_scroll_limit_y_min : UInt64
    get_ms_scroll_limit_y_min : UInt64
    put_ms_scroll_limit_x_max : UInt64
    get_ms_scroll_limit_x_max : UInt64
    put_ms_scroll_limit_y_max : UInt64
    get_ms_scroll_limit_y_max : UInt64
    put_ms_scroll_limit : UInt64
    get_ms_scroll_limit : UInt64
    put_text_shadow : UInt64
    get_text_shadow : UInt64
    put_ms_flow_from : UInt64
    get_ms_flow_from : UInt64
    put_ms_flow_into : UInt64
    get_ms_flow_into : UInt64
    put_ms_hyphens : UInt64
    get_ms_hyphens : UInt64
    put_ms_hyphenate_limit_zone : UInt64
    get_ms_hyphenate_limit_zone : UInt64
    put_ms_hyphenate_limit_chars : UInt64
    get_ms_hyphenate_limit_chars : UInt64
    put_ms_hyphenate_limit_lines : UInt64
    get_ms_hyphenate_limit_lines : UInt64
    put_ms_high_contrast_adjust : UInt64
    get_ms_high_contrast_adjust : UInt64
    put_enable_background : UInt64
    get_enable_background : UInt64
    put_ms_font_feature_settings : UInt64
    get_ms_font_feature_settings : UInt64
    put_ms_user_select : UInt64
    get_ms_user_select : UInt64
    put_ms_overflow_style : UInt64
    get_ms_overflow_style : UInt64
    put_ms_transform_style : UInt64
    get_ms_transform_style : UInt64
    put_ms_backface_visibility : UInt64
    get_ms_backface_visibility : UInt64
    put_ms_perspective : UInt64
    get_ms_perspective : UInt64
    put_ms_perspective_origin : UInt64
    get_ms_perspective_origin : UInt64
    put_ms_transition_property : UInt64
    get_ms_transition_property : UInt64
    put_ms_transition_duration : UInt64
    get_ms_transition_duration : UInt64
    put_ms_transition_timing_function : UInt64
    get_ms_transition_timing_function : UInt64
    put_ms_transition_delay : UInt64
    get_ms_transition_delay : UInt64
    put_ms_transition : UInt64
    get_ms_transition : UInt64
    put_ms_touch_action : UInt64
    get_ms_touch_action : UInt64
    put_ms_scroll_translation : UInt64
    get_ms_scroll_translation : UInt64
    put_ms_flex : UInt64
    get_ms_flex : UInt64
    put_ms_flex_positive : UInt64
    get_ms_flex_positive : UInt64
    put_ms_flex_negative : UInt64
    get_ms_flex_negative : UInt64
    put_ms_flex_preferred_size : UInt64
    get_ms_flex_preferred_size : UInt64
    put_ms_flex_flow : UInt64
    get_ms_flex_flow : UInt64
    put_ms_flex_direction : UInt64
    get_ms_flex_direction : UInt64
    put_ms_flex_wrap : UInt64
    get_ms_flex_wrap : UInt64
    put_ms_flex_align : UInt64
    get_ms_flex_align : UInt64
    put_ms_flex_item_align : UInt64
    get_ms_flex_item_align : UInt64
    put_ms_flex_pack : UInt64
    get_ms_flex_pack : UInt64
    put_ms_flex_line_pack : UInt64
    get_ms_flex_line_pack : UInt64
    put_ms_flex_order : UInt64
    get_ms_flex_order : UInt64
    put_ms_touch_select : UInt64
    get_ms_touch_select : UInt64
    put_transform : UInt64
    get_transform : UInt64
    put_transform_origin : UInt64
    get_transform_origin : UInt64
    put_transform_style : UInt64
    get_transform_style : UInt64
    put_backface_visibility : UInt64
    get_backface_visibility : UInt64
    put_perspective : UInt64
    get_perspective : UInt64
    put_perspective_origin : UInt64
    get_perspective_origin : UInt64
    put_transition_property : UInt64
    get_transition_property : UInt64
    put_transition_duration : UInt64
    get_transition_duration : UInt64
    put_transition_timing_function : UInt64
    get_transition_timing_function : UInt64
    put_transition_delay : UInt64
    get_transition_delay : UInt64
    put_transition : UInt64
    get_transition : UInt64
    put_font_feature_settings : UInt64
    get_font_feature_settings : UInt64
    put_animation_name : UInt64
    get_animation_name : UInt64
    put_animation_duration : UInt64
    get_animation_duration : UInt64
    put_animation_timing_function : UInt64
    get_animation_timing_function : UInt64
    put_animation_delay : UInt64
    get_animation_delay : UInt64
    put_animation_direction : UInt64
    get_animation_direction : UInt64
    put_animation_play_state : UInt64
    get_animation_play_state : UInt64
    put_animation_iteration_count : UInt64
    get_animation_iteration_count : UInt64
    put_animation : UInt64
    get_animation : UInt64
    put_animation_fill_mode : UInt64
    get_animation_fill_mode : UInt64
  end

  IHTMLCSSStyleDeclaration2_GUID = "305107d1-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCSSStyleDeclaration2 = LibC::GUID.new(0x305107d1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCSSStyleDeclaration2
    lpVtbl : IHTMLCSSStyleDeclaration2VTbl*
  end

  struct IHTMLCSSStyleDeclaration3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_flex : UInt64
    get_flex : UInt64
    put_flex_direction : UInt64
    get_flex_direction : UInt64
    put_flex_wrap : UInt64
    get_flex_wrap : UInt64
    put_flex_flow : UInt64
    get_flex_flow : UInt64
    put_flex_grow : UInt64
    get_flex_grow : UInt64
    put_flex_shrink : UInt64
    get_flex_shrink : UInt64
    put_flex_basis : UInt64
    get_flex_basis : UInt64
    put_justify_content : UInt64
    get_justify_content : UInt64
    put_align_items : UInt64
    get_align_items : UInt64
    put_align_self : UInt64
    get_align_self : UInt64
    put_align_content : UInt64
    get_align_content : UInt64
    put_border_image : UInt64
    get_border_image : UInt64
    put_border_image_source : UInt64
    get_border_image_source : UInt64
    put_border_image_slice : UInt64
    get_border_image_slice : UInt64
    put_border_image_width : UInt64
    get_border_image_width : UInt64
    put_border_image_outset : UInt64
    get_border_image_outset : UInt64
    put_border_image_repeat : UInt64
    get_border_image_repeat : UInt64
    put_ms_ime_align : UInt64
    get_ms_ime_align : UInt64
    put_ms_text_combine_horizontal : UInt64
    get_ms_text_combine_horizontal : UInt64
    put_touch_action : UInt64
    get_touch_action : UInt64
  end

  IHTMLCSSStyleDeclaration3_GUID = "3051085c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCSSStyleDeclaration3 = LibC::GUID.new(0x3051085c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCSSStyleDeclaration3
    lpVtbl : IHTMLCSSStyleDeclaration3VTbl*
  end

  struct IHTMLCSSStyleDeclaration4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_webkit_appearance : UInt64
    get_webkit_appearance : UInt64
    put_webkit_user_select : UInt64
    get_webkit_user_select : UInt64
    put_webkit_box_align : UInt64
    get_webkit_box_align : UInt64
    put_webkit_box_ordinal_group : UInt64
    get_webkit_box_ordinal_group : UInt64
    put_webkit_box_pack : UInt64
    get_webkit_box_pack : UInt64
    put_webkit_box_flex : UInt64
    get_webkit_box_flex : UInt64
    put_webkit_box_orient : UInt64
    get_webkit_box_orient : UInt64
    put_webkit_box_direction : UInt64
    get_webkit_box_direction : UInt64
    put_webkit_transform : UInt64
    get_webkit_transform : UInt64
    put_webkit_background_size : UInt64
    get_webkit_background_size : UInt64
    put_webkit_backface_visibility : UInt64
    get_webkit_backface_visibility : UInt64
    put_webkit_animation : UInt64
    get_webkit_animation : UInt64
    put_webkit_transition : UInt64
    get_webkit_transition : UInt64
    put_webkit_animation_name : UInt64
    get_webkit_animation_name : UInt64
    put_webkit_animation_duration : UInt64
    get_webkit_animation_duration : UInt64
    put_webkit_animation_timing_function : UInt64
    get_webkit_animation_timing_function : UInt64
    put_webkit_animation_delay : UInt64
    get_webkit_animation_delay : UInt64
    put_webkit_animation_iteration_count : UInt64
    get_webkit_animation_iteration_count : UInt64
    put_webkit_animation_direction : UInt64
    get_webkit_animation_direction : UInt64
    put_webkit_animation_play_state : UInt64
    get_webkit_animation_play_state : UInt64
    put_webkit_transition_property : UInt64
    get_webkit_transition_property : UInt64
    put_webkit_transition_duration : UInt64
    get_webkit_transition_duration : UInt64
    put_webkit_transition_timing_function : UInt64
    get_webkit_transition_timing_function : UInt64
    put_webkit_transition_delay : UInt64
    get_webkit_transition_delay : UInt64
    put_webkit_background_attachment : UInt64
    get_webkit_background_attachment : UInt64
    put_webkit_background_color : UInt64
    get_webkit_background_color : UInt64
    put_webkit_background_clip : UInt64
    get_webkit_background_clip : UInt64
    put_webkit_background_image : UInt64
    get_webkit_background_image : UInt64
    put_webkit_background_repeat : UInt64
    get_webkit_background_repeat : UInt64
    put_webkit_background_origin : UInt64
    get_webkit_background_origin : UInt64
    put_webkit_background_position : UInt64
    get_webkit_background_position : UInt64
    put_webkit_background_position_x : UInt64
    get_webkit_background_position_x : UInt64
    put_webkit_background_position_y : UInt64
    get_webkit_background_position_y : UInt64
    put_webkit_background : UInt64
    get_webkit_background : UInt64
    put_webkit_transform_origin : UInt64
    get_webkit_transform_origin : UInt64
    put_ms_text_size_adjust : UInt64
    get_ms_text_size_adjust : UInt64
    put_webkit_text_size_adjust : UInt64
    get_webkit_text_size_adjust : UInt64
    put_webkit_border_image : UInt64
    get_webkit_border_image : UInt64
    put_webkit_border_image_source : UInt64
    get_webkit_border_image_source : UInt64
    put_webkit_border_image_slice : UInt64
    get_webkit_border_image_slice : UInt64
    put_webkit_border_image_width : UInt64
    get_webkit_border_image_width : UInt64
    put_webkit_border_image_outset : UInt64
    get_webkit_border_image_outset : UInt64
    put_webkit_border_image_repeat : UInt64
    get_webkit_border_image_repeat : UInt64
    put_webkit_box_sizing : UInt64
    get_webkit_box_sizing : UInt64
    put_webkit_animation_fill_mode : UInt64
    get_webkit_animation_fill_mode : UInt64
  end

  IHTMLCSSStyleDeclaration4_GUID = "d6100f3b-27c8-4132-afea-f0e4b1e00060"
  IID_IHTMLCSSStyleDeclaration4 = LibC::GUID.new(0xd6100f3b_u32, 0x27c8_u16, 0x4132_u16, StaticArray[0xaf_u8, 0xea_u8, 0xf0_u8, 0xe4_u8, 0xb1_u8, 0xe0_u8, 0x0_u8, 0x60_u8])
  struct IHTMLCSSStyleDeclaration4
    lpVtbl : IHTMLCSSStyleDeclaration4VTbl*
  end

  struct IHTMLStyleEnabledVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    ms_get_property_enabled : UInt64
    ms_put_property_enabled : UInt64
  end

  IHTMLStyleEnabled_GUID = "305104c2-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleEnabled = LibC::GUID.new(0x305104c2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleEnabled
    lpVtbl : IHTMLStyleEnabledVTbl*
  end

  struct DispHTMLCSSStyleDeclarationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLCSSStyleDeclaration_GUID = "3059009a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLCSSStyleDeclaration = LibC::GUID.new(0x3059009a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLCSSStyleDeclaration
    lpVtbl : DispHTMLCSSStyleDeclarationVTbl*
  end

  struct IHTMLStyleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_font_family : UInt64
    get_font_family : UInt64
    put_font_style : UInt64
    get_font_style : UInt64
    put_font_variant : UInt64
    get_font_variant : UInt64
    put_font_weight : UInt64
    get_font_weight : UInt64
    put_font_size : UInt64
    get_font_size : UInt64
    put_font : UInt64
    get_font : UInt64
    put_color : UInt64
    get_color : UInt64
    put_background : UInt64
    get_background : UInt64
    put_background_color : UInt64
    get_background_color : UInt64
    put_background_image : UInt64
    get_background_image : UInt64
    put_background_repeat : UInt64
    get_background_repeat : UInt64
    put_background_attachment : UInt64
    get_background_attachment : UInt64
    put_background_position : UInt64
    get_background_position : UInt64
    put_background_position_x : UInt64
    get_background_position_x : UInt64
    put_background_position_y : UInt64
    get_background_position_y : UInt64
    put_word_spacing : UInt64
    get_word_spacing : UInt64
    put_letter_spacing : UInt64
    get_letter_spacing : UInt64
    put_text_decoration : UInt64
    get_text_decoration : UInt64
    put_text_decoration_none : UInt64
    get_text_decoration_none : UInt64
    put_text_decoration_underline : UInt64
    get_text_decoration_underline : UInt64
    put_text_decoration_overline : UInt64
    get_text_decoration_overline : UInt64
    put_text_decoration_line_through : UInt64
    get_text_decoration_line_through : UInt64
    put_text_decoration_blink : UInt64
    get_text_decoration_blink : UInt64
    put_vertical_align : UInt64
    get_vertical_align : UInt64
    put_text_transform : UInt64
    get_text_transform : UInt64
    put_text_align : UInt64
    get_text_align : UInt64
    put_text_indent : UInt64
    get_text_indent : UInt64
    put_line_height : UInt64
    get_line_height : UInt64
    put_margin_top : UInt64
    get_margin_top : UInt64
    put_margin_right : UInt64
    get_margin_right : UInt64
    put_margin_bottom : UInt64
    get_margin_bottom : UInt64
    put_margin_left : UInt64
    get_margin_left : UInt64
    put_margin : UInt64
    get_margin : UInt64
    put_padding_top : UInt64
    get_padding_top : UInt64
    put_padding_right : UInt64
    get_padding_right : UInt64
    put_padding_bottom : UInt64
    get_padding_bottom : UInt64
    put_padding_left : UInt64
    get_padding_left : UInt64
    put_padding : UInt64
    get_padding : UInt64
    put_border : UInt64
    get_border : UInt64
    put_border_top : UInt64
    get_border_top : UInt64
    put_border_right : UInt64
    get_border_right : UInt64
    put_border_bottom : UInt64
    get_border_bottom : UInt64
    put_border_left : UInt64
    get_border_left : UInt64
    put_border_color : UInt64
    get_border_color : UInt64
    put_border_top_color : UInt64
    get_border_top_color : UInt64
    put_border_right_color : UInt64
    get_border_right_color : UInt64
    put_border_bottom_color : UInt64
    get_border_bottom_color : UInt64
    put_border_left_color : UInt64
    get_border_left_color : UInt64
    put_border_width : UInt64
    get_border_width : UInt64
    put_border_top_width : UInt64
    get_border_top_width : UInt64
    put_border_right_width : UInt64
    get_border_right_width : UInt64
    put_border_bottom_width : UInt64
    get_border_bottom_width : UInt64
    put_border_left_width : UInt64
    get_border_left_width : UInt64
    put_border_style : UInt64
    get_border_style : UInt64
    put_border_top_style : UInt64
    get_border_top_style : UInt64
    put_border_right_style : UInt64
    get_border_right_style : UInt64
    put_border_bottom_style : UInt64
    get_border_bottom_style : UInt64
    put_border_left_style : UInt64
    get_border_left_style : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    put_style_float : UInt64
    get_style_float : UInt64
    put_clear : UInt64
    get_clear : UInt64
    put_display : UInt64
    get_display : UInt64
    put_visibility : UInt64
    get_visibility : UInt64
    put_list_style_type : UInt64
    get_list_style_type : UInt64
    put_list_style_position : UInt64
    get_list_style_position : UInt64
    put_list_style_image : UInt64
    get_list_style_image : UInt64
    put_list_style : UInt64
    get_list_style : UInt64
    put_white_space : UInt64
    get_white_space : UInt64
    put_top : UInt64
    get_top : UInt64
    put_left : UInt64
    get_left : UInt64
    get_position : UInt64
    put_z_index : UInt64
    get_z_index : UInt64
    put_overflow : UInt64
    get_overflow : UInt64
    put_page_break_before : UInt64
    get_page_break_before : UInt64
    put_page_break_after : UInt64
    get_page_break_after : UInt64
    put_css_text : UInt64
    get_css_text : UInt64
    put_pixel_top : UInt64
    get_pixel_top : UInt64
    put_pixel_left : UInt64
    get_pixel_left : UInt64
    put_pixel_width : UInt64
    get_pixel_width : UInt64
    put_pixel_height : UInt64
    get_pixel_height : UInt64
    put_pos_top : UInt64
    get_pos_top : UInt64
    put_pos_left : UInt64
    get_pos_left : UInt64
    put_pos_width : UInt64
    get_pos_width : UInt64
    put_pos_height : UInt64
    get_pos_height : UInt64
    put_cursor : UInt64
    get_cursor : UInt64
    put_clip : UInt64
    get_clip : UInt64
    put_filter : UInt64
    get_filter : UInt64
    set_attribute : UInt64
    get_attribute : UInt64
    remove_attribute : UInt64
    to_string : UInt64
  end

  IHTMLStyle_GUID = "3050f25e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyle = LibC::GUID.new(0x3050f25e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyle
    lpVtbl : IHTMLStyleVTbl*
  end

  struct IHTMLStyle2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_table_layout : UInt64
    get_table_layout : UInt64
    put_border_collapse : UInt64
    get_border_collapse : UInt64
    put_direction : UInt64
    get_direction : UInt64
    put_behavior : UInt64
    get_behavior : UInt64
    set_expression : UInt64
    get_expression : UInt64
    remove_expression : UInt64
    put_position : UInt64
    get_position : UInt64
    put_unicode_bidi : UInt64
    get_unicode_bidi : UInt64
    put_bottom : UInt64
    get_bottom : UInt64
    put_right : UInt64
    get_right : UInt64
    put_pixel_bottom : UInt64
    get_pixel_bottom : UInt64
    put_pixel_right : UInt64
    get_pixel_right : UInt64
    put_pos_bottom : UInt64
    get_pos_bottom : UInt64
    put_pos_right : UInt64
    get_pos_right : UInt64
    put_ime_mode : UInt64
    get_ime_mode : UInt64
    put_ruby_align : UInt64
    get_ruby_align : UInt64
    put_ruby_position : UInt64
    get_ruby_position : UInt64
    put_ruby_overhang : UInt64
    get_ruby_overhang : UInt64
    put_layout_grid_char : UInt64
    get_layout_grid_char : UInt64
    put_layout_grid_line : UInt64
    get_layout_grid_line : UInt64
    put_layout_grid_mode : UInt64
    get_layout_grid_mode : UInt64
    put_layout_grid_type : UInt64
    get_layout_grid_type : UInt64
    put_layout_grid : UInt64
    get_layout_grid : UInt64
    put_word_break : UInt64
    get_word_break : UInt64
    put_line_break : UInt64
    get_line_break : UInt64
    put_text_justify : UInt64
    get_text_justify : UInt64
    put_text_justify_trim : UInt64
    get_text_justify_trim : UInt64
    put_text_kashida : UInt64
    get_text_kashida : UInt64
    put_text_autospace : UInt64
    get_text_autospace : UInt64
    put_overflow_x : UInt64
    get_overflow_x : UInt64
    put_overflow_y : UInt64
    get_overflow_y : UInt64
    put_accelerator : UInt64
    get_accelerator : UInt64
  end

  IHTMLStyle2_GUID = "3050f4a2-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyle2 = LibC::GUID.new(0x3050f4a2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyle2
    lpVtbl : IHTMLStyle2VTbl*
  end

  struct IHTMLStyle3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_layout_flow : UInt64
    get_layout_flow : UInt64
    put_zoom : UInt64
    get_zoom : UInt64
    put_word_wrap : UInt64
    get_word_wrap : UInt64
    put_text_underline_position : UInt64
    get_text_underline_position : UInt64
    put_scrollbar_base_color : UInt64
    get_scrollbar_base_color : UInt64
    put_scrollbar_face_color : UInt64
    get_scrollbar_face_color : UInt64
    put_scrollbar3d_light_color : UInt64
    get_scrollbar3d_light_color : UInt64
    put_scrollbar_shadow_color : UInt64
    get_scrollbar_shadow_color : UInt64
    put_scrollbar_highlight_color : UInt64
    get_scrollbar_highlight_color : UInt64
    put_scrollbar_dark_shadow_color : UInt64
    get_scrollbar_dark_shadow_color : UInt64
    put_scrollbar_arrow_color : UInt64
    get_scrollbar_arrow_color : UInt64
    put_scrollbar_track_color : UInt64
    get_scrollbar_track_color : UInt64
    put_writing_mode : UInt64
    get_writing_mode : UInt64
    put_text_align_last : UInt64
    get_text_align_last : UInt64
    put_text_kashida_space : UInt64
    get_text_kashida_space : UInt64
  end

  IHTMLStyle3_GUID = "3050f656-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyle3 = LibC::GUID.new(0x3050f656_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyle3
    lpVtbl : IHTMLStyle3VTbl*
  end

  struct IHTMLStyle4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_text_overflow : UInt64
    get_text_overflow : UInt64
    put_min_height : UInt64
    get_min_height : UInt64
  end

  IHTMLStyle4_GUID = "3050f816-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyle4 = LibC::GUID.new(0x3050f816_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyle4
    lpVtbl : IHTMLStyle4VTbl*
  end

  struct IHTMLStyle5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ms_interpolation_mode : UInt64
    get_ms_interpolation_mode : UInt64
    put_max_height : UInt64
    get_max_height : UInt64
    put_min_width : UInt64
    get_min_width : UInt64
    put_max_width : UInt64
    get_max_width : UInt64
  end

  IHTMLStyle5_GUID = "3050f33a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyle5 = LibC::GUID.new(0x3050f33a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyle5
    lpVtbl : IHTMLStyle5VTbl*
  end

  struct IHTMLStyle6VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_content : UInt64
    get_content : UInt64
    put_caption_side : UInt64
    get_caption_side : UInt64
    put_counter_increment : UInt64
    get_counter_increment : UInt64
    put_counter_reset : UInt64
    get_counter_reset : UInt64
    put_outline : UInt64
    get_outline : UInt64
    put_outline_width : UInt64
    get_outline_width : UInt64
    put_outline_style : UInt64
    get_outline_style : UInt64
    put_outline_color : UInt64
    get_outline_color : UInt64
    put_box_sizing : UInt64
    get_box_sizing : UInt64
    put_border_spacing : UInt64
    get_border_spacing : UInt64
    put_orphans : UInt64
    get_orphans : UInt64
    put_widows : UInt64
    get_widows : UInt64
    put_page_break_inside : UInt64
    get_page_break_inside : UInt64
    put_empty_cells : UInt64
    get_empty_cells : UInt64
    put_ms_block_progression : UInt64
    get_ms_block_progression : UInt64
    put_quotes : UInt64
    get_quotes : UInt64
  end

  IHTMLStyle6_GUID = "30510480-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyle6 = LibC::GUID.new(0x30510480_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyle6
    lpVtbl : IHTMLStyle6VTbl*
  end

  struct IHTMLRuleStyleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_font_family : UInt64
    get_font_family : UInt64
    put_font_style : UInt64
    get_font_style : UInt64
    put_font_variant : UInt64
    get_font_variant : UInt64
    put_font_weight : UInt64
    get_font_weight : UInt64
    put_font_size : UInt64
    get_font_size : UInt64
    put_font : UInt64
    get_font : UInt64
    put_color : UInt64
    get_color : UInt64
    put_background : UInt64
    get_background : UInt64
    put_background_color : UInt64
    get_background_color : UInt64
    put_background_image : UInt64
    get_background_image : UInt64
    put_background_repeat : UInt64
    get_background_repeat : UInt64
    put_background_attachment : UInt64
    get_background_attachment : UInt64
    put_background_position : UInt64
    get_background_position : UInt64
    put_background_position_x : UInt64
    get_background_position_x : UInt64
    put_background_position_y : UInt64
    get_background_position_y : UInt64
    put_word_spacing : UInt64
    get_word_spacing : UInt64
    put_letter_spacing : UInt64
    get_letter_spacing : UInt64
    put_text_decoration : UInt64
    get_text_decoration : UInt64
    put_text_decoration_none : UInt64
    get_text_decoration_none : UInt64
    put_text_decoration_underline : UInt64
    get_text_decoration_underline : UInt64
    put_text_decoration_overline : UInt64
    get_text_decoration_overline : UInt64
    put_text_decoration_line_through : UInt64
    get_text_decoration_line_through : UInt64
    put_text_decoration_blink : UInt64
    get_text_decoration_blink : UInt64
    put_vertical_align : UInt64
    get_vertical_align : UInt64
    put_text_transform : UInt64
    get_text_transform : UInt64
    put_text_align : UInt64
    get_text_align : UInt64
    put_text_indent : UInt64
    get_text_indent : UInt64
    put_line_height : UInt64
    get_line_height : UInt64
    put_margin_top : UInt64
    get_margin_top : UInt64
    put_margin_right : UInt64
    get_margin_right : UInt64
    put_margin_bottom : UInt64
    get_margin_bottom : UInt64
    put_margin_left : UInt64
    get_margin_left : UInt64
    put_margin : UInt64
    get_margin : UInt64
    put_padding_top : UInt64
    get_padding_top : UInt64
    put_padding_right : UInt64
    get_padding_right : UInt64
    put_padding_bottom : UInt64
    get_padding_bottom : UInt64
    put_padding_left : UInt64
    get_padding_left : UInt64
    put_padding : UInt64
    get_padding : UInt64
    put_border : UInt64
    get_border : UInt64
    put_border_top : UInt64
    get_border_top : UInt64
    put_border_right : UInt64
    get_border_right : UInt64
    put_border_bottom : UInt64
    get_border_bottom : UInt64
    put_border_left : UInt64
    get_border_left : UInt64
    put_border_color : UInt64
    get_border_color : UInt64
    put_border_top_color : UInt64
    get_border_top_color : UInt64
    put_border_right_color : UInt64
    get_border_right_color : UInt64
    put_border_bottom_color : UInt64
    get_border_bottom_color : UInt64
    put_border_left_color : UInt64
    get_border_left_color : UInt64
    put_border_width : UInt64
    get_border_width : UInt64
    put_border_top_width : UInt64
    get_border_top_width : UInt64
    put_border_right_width : UInt64
    get_border_right_width : UInt64
    put_border_bottom_width : UInt64
    get_border_bottom_width : UInt64
    put_border_left_width : UInt64
    get_border_left_width : UInt64
    put_border_style : UInt64
    get_border_style : UInt64
    put_border_top_style : UInt64
    get_border_top_style : UInt64
    put_border_right_style : UInt64
    get_border_right_style : UInt64
    put_border_bottom_style : UInt64
    get_border_bottom_style : UInt64
    put_border_left_style : UInt64
    get_border_left_style : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    put_style_float : UInt64
    get_style_float : UInt64
    put_clear : UInt64
    get_clear : UInt64
    put_display : UInt64
    get_display : UInt64
    put_visibility : UInt64
    get_visibility : UInt64
    put_list_style_type : UInt64
    get_list_style_type : UInt64
    put_list_style_position : UInt64
    get_list_style_position : UInt64
    put_list_style_image : UInt64
    get_list_style_image : UInt64
    put_list_style : UInt64
    get_list_style : UInt64
    put_white_space : UInt64
    get_white_space : UInt64
    put_top : UInt64
    get_top : UInt64
    put_left : UInt64
    get_left : UInt64
    get_position : UInt64
    put_z_index : UInt64
    get_z_index : UInt64
    put_overflow : UInt64
    get_overflow : UInt64
    put_page_break_before : UInt64
    get_page_break_before : UInt64
    put_page_break_after : UInt64
    get_page_break_after : UInt64
    put_css_text : UInt64
    get_css_text : UInt64
    put_cursor : UInt64
    get_cursor : UInt64
    put_clip : UInt64
    get_clip : UInt64
    put_filter : UInt64
    get_filter : UInt64
    set_attribute : UInt64
    get_attribute : UInt64
    remove_attribute : UInt64
  end

  IHTMLRuleStyle_GUID = "3050f3cf-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLRuleStyle = LibC::GUID.new(0x3050f3cf_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLRuleStyle
    lpVtbl : IHTMLRuleStyleVTbl*
  end

  struct IHTMLRuleStyle2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_table_layout : UInt64
    get_table_layout : UInt64
    put_border_collapse : UInt64
    get_border_collapse : UInt64
    put_direction : UInt64
    get_direction : UInt64
    put_behavior : UInt64
    get_behavior : UInt64
    put_position : UInt64
    get_position : UInt64
    put_unicode_bidi : UInt64
    get_unicode_bidi : UInt64
    put_bottom : UInt64
    get_bottom : UInt64
    put_right : UInt64
    get_right : UInt64
    put_pixel_bottom : UInt64
    get_pixel_bottom : UInt64
    put_pixel_right : UInt64
    get_pixel_right : UInt64
    put_pos_bottom : UInt64
    get_pos_bottom : UInt64
    put_pos_right : UInt64
    get_pos_right : UInt64
    put_ime_mode : UInt64
    get_ime_mode : UInt64
    put_ruby_align : UInt64
    get_ruby_align : UInt64
    put_ruby_position : UInt64
    get_ruby_position : UInt64
    put_ruby_overhang : UInt64
    get_ruby_overhang : UInt64
    put_layout_grid_char : UInt64
    get_layout_grid_char : UInt64
    put_layout_grid_line : UInt64
    get_layout_grid_line : UInt64
    put_layout_grid_mode : UInt64
    get_layout_grid_mode : UInt64
    put_layout_grid_type : UInt64
    get_layout_grid_type : UInt64
    put_layout_grid : UInt64
    get_layout_grid : UInt64
    put_text_autospace : UInt64
    get_text_autospace : UInt64
    put_word_break : UInt64
    get_word_break : UInt64
    put_line_break : UInt64
    get_line_break : UInt64
    put_text_justify : UInt64
    get_text_justify : UInt64
    put_text_justify_trim : UInt64
    get_text_justify_trim : UInt64
    put_text_kashida : UInt64
    get_text_kashida : UInt64
    put_overflow_x : UInt64
    get_overflow_x : UInt64
    put_overflow_y : UInt64
    get_overflow_y : UInt64
    put_accelerator : UInt64
    get_accelerator : UInt64
  end

  IHTMLRuleStyle2_GUID = "3050f4ac-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLRuleStyle2 = LibC::GUID.new(0x3050f4ac_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLRuleStyle2
    lpVtbl : IHTMLRuleStyle2VTbl*
  end

  struct IHTMLRuleStyle3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_layout_flow : UInt64
    get_layout_flow : UInt64
    put_zoom : UInt64
    get_zoom : UInt64
    put_word_wrap : UInt64
    get_word_wrap : UInt64
    put_text_underline_position : UInt64
    get_text_underline_position : UInt64
    put_scrollbar_base_color : UInt64
    get_scrollbar_base_color : UInt64
    put_scrollbar_face_color : UInt64
    get_scrollbar_face_color : UInt64
    put_scrollbar3d_light_color : UInt64
    get_scrollbar3d_light_color : UInt64
    put_scrollbar_shadow_color : UInt64
    get_scrollbar_shadow_color : UInt64
    put_scrollbar_highlight_color : UInt64
    get_scrollbar_highlight_color : UInt64
    put_scrollbar_dark_shadow_color : UInt64
    get_scrollbar_dark_shadow_color : UInt64
    put_scrollbar_arrow_color : UInt64
    get_scrollbar_arrow_color : UInt64
    put_scrollbar_track_color : UInt64
    get_scrollbar_track_color : UInt64
    put_writing_mode : UInt64
    get_writing_mode : UInt64
    put_text_align_last : UInt64
    get_text_align_last : UInt64
    put_text_kashida_space : UInt64
    get_text_kashida_space : UInt64
  end

  IHTMLRuleStyle3_GUID = "3050f657-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLRuleStyle3 = LibC::GUID.new(0x3050f657_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLRuleStyle3
    lpVtbl : IHTMLRuleStyle3VTbl*
  end

  struct IHTMLRuleStyle4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_text_overflow : UInt64
    get_text_overflow : UInt64
    put_min_height : UInt64
    get_min_height : UInt64
  end

  IHTMLRuleStyle4_GUID = "3050f817-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLRuleStyle4 = LibC::GUID.new(0x3050f817_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLRuleStyle4
    lpVtbl : IHTMLRuleStyle4VTbl*
  end

  struct IHTMLRuleStyle5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ms_interpolation_mode : UInt64
    get_ms_interpolation_mode : UInt64
    put_max_height : UInt64
    get_max_height : UInt64
    put_min_width : UInt64
    get_min_width : UInt64
    put_max_width : UInt64
    get_max_width : UInt64
  end

  IHTMLRuleStyle5_GUID = "3050f335-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLRuleStyle5 = LibC::GUID.new(0x3050f335_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLRuleStyle5
    lpVtbl : IHTMLRuleStyle5VTbl*
  end

  struct IHTMLRuleStyle6VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_content : UInt64
    get_content : UInt64
    put_caption_side : UInt64
    get_caption_side : UInt64
    put_counter_increment : UInt64
    get_counter_increment : UInt64
    put_counter_reset : UInt64
    get_counter_reset : UInt64
    put_outline : UInt64
    get_outline : UInt64
    put_outline_width : UInt64
    get_outline_width : UInt64
    put_outline_style : UInt64
    get_outline_style : UInt64
    put_outline_color : UInt64
    get_outline_color : UInt64
    put_box_sizing : UInt64
    get_box_sizing : UInt64
    put_border_spacing : UInt64
    get_border_spacing : UInt64
    put_orphans : UInt64
    get_orphans : UInt64
    put_widows : UInt64
    get_widows : UInt64
    put_page_break_inside : UInt64
    get_page_break_inside : UInt64
    put_empty_cells : UInt64
    get_empty_cells : UInt64
    put_ms_block_progression : UInt64
    get_ms_block_progression : UInt64
    put_quotes : UInt64
    get_quotes : UInt64
  end

  IHTMLRuleStyle6_GUID = "30510471-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLRuleStyle6 = LibC::GUID.new(0x30510471_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLRuleStyle6
    lpVtbl : IHTMLRuleStyle6VTbl*
  end

  struct DispHTMLStyleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStyle_GUID = "3050f55a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStyle = LibC::GUID.new(0x3050f55a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStyle
    lpVtbl : DispHTMLStyleVTbl*
  end

  struct DispHTMLRuleStyleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLRuleStyle_GUID = "3050f55c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLRuleStyle = LibC::GUID.new(0x3050f55c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLRuleStyle
    lpVtbl : DispHTMLRuleStyleVTbl*
  end

  struct IHTMLStyleSheetRulesCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    item : UInt64
  end

  IHTMLStyleSheetRulesCollection_GUID = "3050f2e5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheetRulesCollection = LibC::GUID.new(0x3050f2e5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheetRulesCollection
    lpVtbl : IHTMLStyleSheetRulesCollectionVTbl*
  end

  struct IHTMLStyleSheetVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_title : UInt64
    get_title : UInt64
    get_parent_style_sheet : UInt64
    get_owning_element : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    get_read_only : UInt64
    get_imports : UInt64
    put_href : UInt64
    get_href : UInt64
    get_type : UInt64
    get_id : UInt64
    add_import : UInt64
    add_rule : UInt64
    remove_import : UInt64
    remove_rule : UInt64
    put_media : UInt64
    get_media : UInt64
    put_css_text : UInt64
    get_css_text : UInt64
    get_rules : UInt64
  end

  IHTMLStyleSheet_GUID = "3050f2e3-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheet = LibC::GUID.new(0x3050f2e3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheet
    lpVtbl : IHTMLStyleSheetVTbl*
  end

  struct IHTMLCSSRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_type : UInt64
    put_css_text : UInt64
    get_css_text : UInt64
    get_parent_rule : UInt64
    get_parent_style_sheet : UInt64
  end

  IHTMLCSSRule_GUID = "305106e9-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCSSRule = LibC::GUID.new(0x305106e9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCSSRule
    lpVtbl : IHTMLCSSRuleVTbl*
  end

  struct IHTMLCSSImportRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_href : UInt64
    put_media : UInt64
    get_media : UInt64
    get_style_sheet : UInt64
  end

  IHTMLCSSImportRule_GUID = "305106ea-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCSSImportRule = LibC::GUID.new(0x305106ea_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCSSImportRule
    lpVtbl : IHTMLCSSImportRuleVTbl*
  end

  struct IHTMLCSSMediaRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_media : UInt64
    get_media : UInt64
    get_css_rules : UInt64
    insert_rule : UInt64
    delete_rule : UInt64
  end

  IHTMLCSSMediaRule_GUID = "305106eb-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCSSMediaRule = LibC::GUID.new(0x305106eb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCSSMediaRule
    lpVtbl : IHTMLCSSMediaRuleVTbl*
  end

  struct IHTMLCSSMediaListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_media_text : UInt64
    get_media_text : UInt64
    get_length : UInt64
    item : UInt64
    append_medium : UInt64
    delete_medium : UInt64
  end

  IHTMLCSSMediaList_GUID = "30510731-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCSSMediaList = LibC::GUID.new(0x30510731_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCSSMediaList
    lpVtbl : IHTMLCSSMediaListVTbl*
  end

  struct IHTMLCSSNamespaceRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_namespace_uri : UInt64
    get_prefix : UInt64
  end

  IHTMLCSSNamespaceRule_GUID = "305106ee-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCSSNamespaceRule = LibC::GUID.new(0x305106ee_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCSSNamespaceRule
    lpVtbl : IHTMLCSSNamespaceRuleVTbl*
  end

  struct IHTMLMSCSSKeyframeRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_key_text : UInt64
    get_key_text : UInt64
    get_style : UInt64
  end

  IHTMLMSCSSKeyframeRule_GUID = "3051080c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMSCSSKeyframeRule = LibC::GUID.new(0x3051080c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMSCSSKeyframeRule
    lpVtbl : IHTMLMSCSSKeyframeRuleVTbl*
  end

  struct IHTMLMSCSSKeyframesRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_name : UInt64
    get_name : UInt64
    get_css_rules : UInt64
    append_rule : UInt64
    delete_rule : UInt64
    find_rule : UInt64
  end

  IHTMLMSCSSKeyframesRule_GUID = "3051080d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMSCSSKeyframesRule = LibC::GUID.new(0x3051080d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMSCSSKeyframesRule
    lpVtbl : IHTMLMSCSSKeyframesRuleVTbl*
  end

  struct DispHTMLCSSRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLCSSRule_GUID = "3059007d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLCSSRule = LibC::GUID.new(0x3059007d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLCSSRule
    lpVtbl : DispHTMLCSSRuleVTbl*
  end

  struct DispHTMLCSSImportRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLCSSImportRule_GUID = "3059007e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLCSSImportRule = LibC::GUID.new(0x3059007e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLCSSImportRule
    lpVtbl : DispHTMLCSSImportRuleVTbl*
  end

  struct DispHTMLCSSMediaRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLCSSMediaRule_GUID = "3059007f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLCSSMediaRule = LibC::GUID.new(0x3059007f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLCSSMediaRule
    lpVtbl : DispHTMLCSSMediaRuleVTbl*
  end

  struct DispHTMLCSSMediaListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLCSSMediaList_GUID = "30590097-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLCSSMediaList = LibC::GUID.new(0x30590097_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLCSSMediaList
    lpVtbl : DispHTMLCSSMediaListVTbl*
  end

  struct DispHTMLCSSNamespaceRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLCSSNamespaceRule_GUID = "30590080-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLCSSNamespaceRule = LibC::GUID.new(0x30590080_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLCSSNamespaceRule
    lpVtbl : DispHTMLCSSNamespaceRuleVTbl*
  end

  struct DispHTMLMSCSSKeyframeRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLMSCSSKeyframeRule_GUID = "305900de-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLMSCSSKeyframeRule = LibC::GUID.new(0x305900de_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLMSCSSKeyframeRule
    lpVtbl : DispHTMLMSCSSKeyframeRuleVTbl*
  end

  struct DispHTMLMSCSSKeyframesRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLMSCSSKeyframesRule_GUID = "305900df-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLMSCSSKeyframesRule = LibC::GUID.new(0x305900df_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLMSCSSKeyframesRule
    lpVtbl : DispHTMLMSCSSKeyframesRuleVTbl*
  end

  struct IHTMLRenderStyleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_text_line_through_style : UInt64
    get_text_line_through_style : UInt64
    put_text_underline_style : UInt64
    get_text_underline_style : UInt64
    put_text_effect : UInt64
    get_text_effect : UInt64
    put_text_color : UInt64
    get_text_color : UInt64
    put_text_background_color : UInt64
    get_text_background_color : UInt64
    put_text_decoration_color : UInt64
    get_text_decoration_color : UInt64
    put_rendering_priority : UInt64
    get_rendering_priority : UInt64
    put_default_text_selection : UInt64
    get_default_text_selection : UInt64
    put_text_decoration : UInt64
    get_text_decoration : UInt64
  end

  IHTMLRenderStyle_GUID = "3050f6ae-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLRenderStyle = LibC::GUID.new(0x3050f6ae_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLRenderStyle
    lpVtbl : IHTMLRenderStyleVTbl*
  end

  struct DispHTMLRenderStyleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLRenderStyle_GUID = "3050f58b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLRenderStyle = LibC::GUID.new(0x3050f58b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLRenderStyle
    lpVtbl : DispHTMLRenderStyleVTbl*
  end

  struct IHTMLCurrentStyleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_position : UInt64
    get_style_float : UInt64
    get_color : UInt64
    get_background_color : UInt64
    get_font_family : UInt64
    get_font_style : UInt64
    get_font_variant : UInt64
    get_font_weight : UInt64
    get_font_size : UInt64
    get_background_image : UInt64
    get_background_position_x : UInt64
    get_background_position_y : UInt64
    get_background_repeat : UInt64
    get_border_left_color : UInt64
    get_border_top_color : UInt64
    get_border_right_color : UInt64
    get_border_bottom_color : UInt64
    get_border_top_style : UInt64
    get_border_right_style : UInt64
    get_border_bottom_style : UInt64
    get_border_left_style : UInt64
    get_border_top_width : UInt64
    get_border_right_width : UInt64
    get_border_bottom_width : UInt64
    get_border_left_width : UInt64
    get_left : UInt64
    get_top : UInt64
    get_width : UInt64
    get_height : UInt64
    get_padding_left : UInt64
    get_padding_top : UInt64
    get_padding_right : UInt64
    get_padding_bottom : UInt64
    get_text_align : UInt64
    get_text_decoration : UInt64
    get_display : UInt64
    get_visibility : UInt64
    get_z_index : UInt64
    get_letter_spacing : UInt64
    get_line_height : UInt64
    get_text_indent : UInt64
    get_vertical_align : UInt64
    get_background_attachment : UInt64
    get_margin_top : UInt64
    get_margin_right : UInt64
    get_margin_bottom : UInt64
    get_margin_left : UInt64
    get_clear : UInt64
    get_list_style_type : UInt64
    get_list_style_position : UInt64
    get_list_style_image : UInt64
    get_clip_top : UInt64
    get_clip_right : UInt64
    get_clip_bottom : UInt64
    get_clip_left : UInt64
    get_overflow : UInt64
    get_page_break_before : UInt64
    get_page_break_after : UInt64
    get_cursor : UInt64
    get_table_layout : UInt64
    get_border_collapse : UInt64
    get_direction : UInt64
    get_behavior : UInt64
    get_attribute : UInt64
    get_unicode_bidi : UInt64
    get_right : UInt64
    get_bottom : UInt64
    get_ime_mode : UInt64
    get_ruby_align : UInt64
    get_ruby_position : UInt64
    get_ruby_overhang : UInt64
    get_text_autospace : UInt64
    get_line_break : UInt64
    get_word_break : UInt64
    get_text_justify : UInt64
    get_text_justify_trim : UInt64
    get_text_kashida : UInt64
    get_block_direction : UInt64
    get_layout_grid_char : UInt64
    get_layout_grid_line : UInt64
    get_layout_grid_mode : UInt64
    get_layout_grid_type : UInt64
    get_border_style : UInt64
    get_border_color : UInt64
    get_border_width : UInt64
    get_padding : UInt64
    get_margin : UInt64
    get_accelerator : UInt64
    get_overflow_x : UInt64
    get_overflow_y : UInt64
    get_text_transform : UInt64
  end

  IHTMLCurrentStyle_GUID = "3050f3db-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCurrentStyle = LibC::GUID.new(0x3050f3db_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCurrentStyle
    lpVtbl : IHTMLCurrentStyleVTbl*
  end

  struct IHTMLCurrentStyle2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_layout_flow : UInt64
    get_word_wrap : UInt64
    get_text_underline_position : UInt64
    get_has_layout : UInt64
    get_scrollbar_base_color : UInt64
    get_scrollbar_face_color : UInt64
    get_scrollbar3d_light_color : UInt64
    get_scrollbar_shadow_color : UInt64
    get_scrollbar_highlight_color : UInt64
    get_scrollbar_dark_shadow_color : UInt64
    get_scrollbar_arrow_color : UInt64
    get_scrollbar_track_color : UInt64
    get_writing_mode : UInt64
    get_zoom : UInt64
    get_filter : UInt64
    get_text_align_last : UInt64
    get_text_kashida_space : UInt64
    get_is_block : UInt64
  end

  IHTMLCurrentStyle2_GUID = "3050f658-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCurrentStyle2 = LibC::GUID.new(0x3050f658_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCurrentStyle2
    lpVtbl : IHTMLCurrentStyle2VTbl*
  end

  struct IHTMLCurrentStyle3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_text_overflow : UInt64
    get_min_height : UInt64
    get_word_spacing : UInt64
    get_white_space : UInt64
  end

  IHTMLCurrentStyle3_GUID = "3050f818-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCurrentStyle3 = LibC::GUID.new(0x3050f818_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCurrentStyle3
    lpVtbl : IHTMLCurrentStyle3VTbl*
  end

  struct IHTMLCurrentStyle4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_ms_interpolation_mode : UInt64
    get_max_height : UInt64
    get_min_width : UInt64
    get_max_width : UInt64
  end

  IHTMLCurrentStyle4_GUID = "3050f33b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCurrentStyle4 = LibC::GUID.new(0x3050f33b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCurrentStyle4
    lpVtbl : IHTMLCurrentStyle4VTbl*
  end

  struct IHTMLCurrentStyle5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_caption_side : UInt64
    get_outline : UInt64
    get_outline_width : UInt64
    get_outline_style : UInt64
    get_outline_color : UInt64
    get_box_sizing : UInt64
    get_border_spacing : UInt64
    get_orphans : UInt64
    get_widows : UInt64
    get_page_break_inside : UInt64
    get_empty_cells : UInt64
    get_ms_block_progression : UInt64
    get_quotes : UInt64
  end

  IHTMLCurrentStyle5_GUID = "30510481-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCurrentStyle5 = LibC::GUID.new(0x30510481_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCurrentStyle5
    lpVtbl : IHTMLCurrentStyle5VTbl*
  end

  struct DispHTMLCurrentStyleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLCurrentStyle_GUID = "3050f557-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLCurrentStyle = LibC::GUID.new(0x3050f557_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLCurrentStyle
    lpVtbl : DispHTMLCurrentStyleVTbl*
  end

  struct IHTMLElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    set_attribute : UInt64
    get_attribute : UInt64
    remove_attribute : UInt64
    put_class_name : UInt64
    get_class_name : UInt64
    put_id : UInt64
    get_id : UInt64
    get_tag_name : UInt64
    get_parent_element : UInt64
    get_style : UInt64
    put_onhelp : UInt64
    get_onhelp : UInt64
    put_onclick : UInt64
    get_onclick : UInt64
    put_ondblclick : UInt64
    get_ondblclick : UInt64
    put_onkeydown : UInt64
    get_onkeydown : UInt64
    put_onkeyup : UInt64
    get_onkeyup : UInt64
    put_onkeypress : UInt64
    get_onkeypress : UInt64
    put_onmouseout : UInt64
    get_onmouseout : UInt64
    put_onmouseover : UInt64
    get_onmouseover : UInt64
    put_onmousemove : UInt64
    get_onmousemove : UInt64
    put_onmousedown : UInt64
    get_onmousedown : UInt64
    put_onmouseup : UInt64
    get_onmouseup : UInt64
    get_document : UInt64
    put_title : UInt64
    get_title : UInt64
    put_language : UInt64
    get_language : UInt64
    put_onselectstart : UInt64
    get_onselectstart : UInt64
    scroll_into_view : UInt64
    contains : UInt64
    get_source_index : UInt64
    get_record_number : UInt64
    put_lang : UInt64
    get_lang : UInt64
    get_offset_left : UInt64
    get_offset_top : UInt64
    get_offset_width : UInt64
    get_offset_height : UInt64
    get_offset_parent : UInt64
    put_inner_html : UInt64
    get_inner_html : UInt64
    put_inner_text : UInt64
    get_inner_text : UInt64
    put_outer_html : UInt64
    get_outer_html : UInt64
    put_outer_text : UInt64
    get_outer_text : UInt64
    insert_adjacent_html : UInt64
    insert_adjacent_text : UInt64
    get_parent_text_edit : UInt64
    get_is_text_edit : UInt64
    click : UInt64
    get_filters : UInt64
    put_ondragstart : UInt64
    get_ondragstart : UInt64
    to_string : UInt64
    put_onbeforeupdate : UInt64
    get_onbeforeupdate : UInt64
    put_onafterupdate : UInt64
    get_onafterupdate : UInt64
    put_onerrorupdate : UInt64
    get_onerrorupdate : UInt64
    put_onrowexit : UInt64
    get_onrowexit : UInt64
    put_onrowenter : UInt64
    get_onrowenter : UInt64
    put_ondatasetchanged : UInt64
    get_ondatasetchanged : UInt64
    put_ondataavailable : UInt64
    get_ondataavailable : UInt64
    put_ondatasetcomplete : UInt64
    get_ondatasetcomplete : UInt64
    put_onfilterchange : UInt64
    get_onfilterchange : UInt64
    get_children : UInt64
    get_all : UInt64
  end

  IHTMLElement_GUID = "3050f1ff-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElement = LibC::GUID.new(0x3050f1ff_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElement
    lpVtbl : IHTMLElementVTbl*
  end

  struct IHTMLRectVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_left : UInt64
    get_left : UInt64
    put_top : UInt64
    get_top : UInt64
    put_right : UInt64
    get_right : UInt64
    put_bottom : UInt64
    get_bottom : UInt64
  end

  IHTMLRect_GUID = "3050f4a3-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLRect = LibC::GUID.new(0x3050f4a3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLRect
    lpVtbl : IHTMLRectVTbl*
  end

  struct IHTMLRect2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_width : UInt64
    get_height : UInt64
  end

  IHTMLRect2_GUID = "3051076c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLRect2 = LibC::GUID.new(0x3051076c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLRect2
    lpVtbl : IHTMLRect2VTbl*
  end

  struct IHTMLRectCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
  end

  IHTMLRectCollection_GUID = "3050f4a4-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLRectCollection = LibC::GUID.new(0x3050f4a4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLRectCollection
    lpVtbl : IHTMLRectCollectionVTbl*
  end

  struct IHTMLElementCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    to_string : UInt64
    put_length : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
    tags : UInt64
  end

  IHTMLElementCollection_GUID = "3050f21f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElementCollection = LibC::GUID.new(0x3050f21f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElementCollection
    lpVtbl : IHTMLElementCollectionVTbl*
  end

  struct IHTMLElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_scope_name : UInt64
    set_capture : UInt64
    release_capture : UInt64
    put_onlosecapture : UInt64
    get_onlosecapture : UInt64
    component_from_point : UInt64
    do_scroll : UInt64
    put_onscroll : UInt64
    get_onscroll : UInt64
    put_ondrag : UInt64
    get_ondrag : UInt64
    put_ondragend : UInt64
    get_ondragend : UInt64
    put_ondragenter : UInt64
    get_ondragenter : UInt64
    put_ondragover : UInt64
    get_ondragover : UInt64
    put_ondragleave : UInt64
    get_ondragleave : UInt64
    put_ondrop : UInt64
    get_ondrop : UInt64
    put_onbeforecut : UInt64
    get_onbeforecut : UInt64
    put_oncut : UInt64
    get_oncut : UInt64
    put_onbeforecopy : UInt64
    get_onbeforecopy : UInt64
    put_oncopy : UInt64
    get_oncopy : UInt64
    put_onbeforepaste : UInt64
    get_onbeforepaste : UInt64
    put_onpaste : UInt64
    get_onpaste : UInt64
    get_current_style : UInt64
    put_onpropertychange : UInt64
    get_onpropertychange : UInt64
    get_client_rects : UInt64
    get_bounding_client_rect : UInt64
    set_expression : UInt64
    get_expression : UInt64
    remove_expression : UInt64
    put_tab_index : UInt64
    get_tab_index : UInt64
    focus : UInt64
    put_access_key : UInt64
    get_access_key : UInt64
    put_onblur : UInt64
    get_onblur : UInt64
    put_onfocus : UInt64
    get_onfocus : UInt64
    put_onresize : UInt64
    get_onresize : UInt64
    blur : UInt64
    add_filter : UInt64
    remove_filter : UInt64
    get_client_height : UInt64
    get_client_width : UInt64
    get_client_top : UInt64
    get_client_left : UInt64
    attach_event : UInt64
    detach_event : UInt64
    get_ready_state : UInt64
    put_onreadystatechange : UInt64
    get_onreadystatechange : UInt64
    put_onrowsdelete : UInt64
    get_onrowsdelete : UInt64
    put_onrowsinserted : UInt64
    get_onrowsinserted : UInt64
    put_oncellchange : UInt64
    get_oncellchange : UInt64
    put_dir : UInt64
    get_dir : UInt64
    create_control_range : UInt64
    get_scroll_height : UInt64
    get_scroll_width : UInt64
    put_scroll_top : UInt64
    get_scroll_top : UInt64
    put_scroll_left : UInt64
    get_scroll_left : UInt64
    clear_attributes : UInt64
    merge_attributes : UInt64
    put_oncontextmenu : UInt64
    get_oncontextmenu : UInt64
    insert_adjacent_element : UInt64
    apply_element : UInt64
    get_adjacent_text : UInt64
    replace_adjacent_text : UInt64
    get_can_have_children : UInt64
    add_behavior : UInt64
    remove_behavior : UInt64
    get_runtime_style : UInt64
    get_behavior_urns : UInt64
    put_tag_urn : UInt64
    get_tag_urn : UInt64
    put_onbeforeeditfocus : UInt64
    get_onbeforeeditfocus : UInt64
    get_ready_state_value : UInt64
    get_elements_by_tag_name : UInt64
  end

  IHTMLElement2_GUID = "3050f434-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElement2 = LibC::GUID.new(0x3050f434_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElement2
    lpVtbl : IHTMLElement2VTbl*
  end

  struct IHTMLAttributeCollection3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_named_item : UInt64
    set_named_item : UInt64
    remove_named_item : UInt64
    item : UInt64
    get_length : UInt64
  end

  IHTMLAttributeCollection3_GUID = "30510469-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAttributeCollection3 = LibC::GUID.new(0x30510469_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAttributeCollection3
    lpVtbl : IHTMLAttributeCollection3VTbl*
  end

  struct IDOMDocumentTypeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_name : UInt64
    get_entities : UInt64
    get_notations : UInt64
    get_public_id : UInt64
    get_system_id : UInt64
    get_internal_subset : UInt64
  end

  IDOMDocumentType_GUID = "30510738-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMDocumentType = LibC::GUID.new(0x30510738_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMDocumentType
    lpVtbl : IDOMDocumentTypeVTbl*
  end

  struct IHTMLDocument7VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_default_view : UInt64
    create_cdata_section : UInt64
    get_selection : UInt64
    get_elements_by_tag_name_ns : UInt64
    create_element_ns : UInt64
    create_attribute_ns : UInt64
    put_onmsthumbnailclick : UInt64
    get_onmsthumbnailclick : UInt64
    get_character_set : UInt64
    create_element : UInt64
    create_attribute : UInt64
    get_elements_by_class_name : UInt64
    create_processing_instruction : UInt64
    adopt_node : UInt64
    put_onmssitemodejumplistitemremoved : UInt64
    get_onmssitemodejumplistitemremoved : UInt64
    get_all : UInt64
    get_input_encoding : UInt64
    get_xml_encoding : UInt64
    put_xml_standalone : UInt64
    get_xml_standalone : UInt64
    put_xml_version : UInt64
    get_xml_version : UInt64
    has_attributes : UInt64
    put_onabort : UInt64
    get_onabort : UInt64
    put_onblur : UInt64
    get_onblur : UInt64
    put_oncanplay : UInt64
    get_oncanplay : UInt64
    put_oncanplaythrough : UInt64
    get_oncanplaythrough : UInt64
    put_onchange : UInt64
    get_onchange : UInt64
    put_ondrag : UInt64
    get_ondrag : UInt64
    put_ondragend : UInt64
    get_ondragend : UInt64
    put_ondragenter : UInt64
    get_ondragenter : UInt64
    put_ondragleave : UInt64
    get_ondragleave : UInt64
    put_ondragover : UInt64
    get_ondragover : UInt64
    put_ondrop : UInt64
    get_ondrop : UInt64
    put_ondurationchange : UInt64
    get_ondurationchange : UInt64
    put_onemptied : UInt64
    get_onemptied : UInt64
    put_onended : UInt64
    get_onended : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    put_onfocus : UInt64
    get_onfocus : UInt64
    put_oninput : UInt64
    get_oninput : UInt64
    put_onload : UInt64
    get_onload : UInt64
    put_onloadeddata : UInt64
    get_onloadeddata : UInt64
    put_onloadedmetadata : UInt64
    get_onloadedmetadata : UInt64
    put_onloadstart : UInt64
    get_onloadstart : UInt64
    put_onpause : UInt64
    get_onpause : UInt64
    put_onplay : UInt64
    get_onplay : UInt64
    put_onplaying : UInt64
    get_onplaying : UInt64
    put_onprogress : UInt64
    get_onprogress : UInt64
    put_onratechange : UInt64
    get_onratechange : UInt64
    put_onreset : UInt64
    get_onreset : UInt64
    put_onscroll : UInt64
    get_onscroll : UInt64
    put_onseeked : UInt64
    get_onseeked : UInt64
    put_onseeking : UInt64
    get_onseeking : UInt64
    put_onselect : UInt64
    get_onselect : UInt64
    put_onstalled : UInt64
    get_onstalled : UInt64
    put_onsubmit : UInt64
    get_onsubmit : UInt64
    put_onsuspend : UInt64
    get_onsuspend : UInt64
    put_ontimeupdate : UInt64
    get_ontimeupdate : UInt64
    put_onvolumechange : UInt64
    get_onvolumechange : UInt64
    put_onwaiting : UInt64
    get_onwaiting : UInt64
    normalize : UInt64
    import_node : UInt64
    get_parent_window : UInt64
    putref_body : UInt64
    get_body : UInt64
    get_head : UInt64
  end

  IHTMLDocument7_GUID = "305104b8-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDocument7 = LibC::GUID.new(0x305104b8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDocument7
    lpVtbl : IHTMLDocument7VTbl*
  end

  struct IHTMLDOMNodeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_node_type : UInt64
    get_parent_node : UInt64
    has_child_nodes : UInt64
    get_child_nodes : UInt64
    get_attributes : UInt64
    insert_before : UInt64
    remove_child : UInt64
    replace_child : UInt64
    clone_node : UInt64
    remove_node : UInt64
    swap_node : UInt64
    replace_node : UInt64
    append_child : UInt64
    get_node_name : UInt64
    put_node_value : UInt64
    get_node_value : UInt64
    get_first_child : UInt64
    get_last_child : UInt64
    get_previous_sibling : UInt64
    get_next_sibling : UInt64
  end

  IHTMLDOMNode_GUID = "3050f5da-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMNode = LibC::GUID.new(0x3050f5da_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMNode
    lpVtbl : IHTMLDOMNodeVTbl*
  end

  struct IHTMLDOMNode2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_owner_document : UInt64
  end

  IHTMLDOMNode2_GUID = "3050f80b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMNode2 = LibC::GUID.new(0x3050f80b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMNode2
    lpVtbl : IHTMLDOMNode2VTbl*
  end

  struct IHTMLDOMNode3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_prefix : UInt64
    get_prefix : UInt64
    get_local_name : UInt64
    get_namespace_uri : UInt64
    put_text_content : UInt64
    get_text_content : UInt64
    is_equal_node : UInt64
    lookup_namespace_uri : UInt64
    lookup_prefix : UInt64
    is_default_namespace : UInt64
    append_child : UInt64
    insert_before : UInt64
    remove_child : UInt64
    replace_child : UInt64
    is_same_node : UInt64
    compare_document_position : UInt64
    is_supported : UInt64
  end

  IHTMLDOMNode3_GUID = "305106e0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMNode3 = LibC::GUID.new(0x305106e0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMNode3
    lpVtbl : IHTMLDOMNode3VTbl*
  end

  struct IHTMLDOMAttributeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_node_name : UInt64
    put_node_value : UInt64
    get_node_value : UInt64
    get_specified : UInt64
  end

  IHTMLDOMAttribute_GUID = "3050f4b0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMAttribute = LibC::GUID.new(0x3050f4b0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMAttribute
    lpVtbl : IHTMLDOMAttributeVTbl*
  end

  struct IHTMLDOMAttribute2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_name : UInt64
    put_value : UInt64
    get_value : UInt64
    get_expando : UInt64
    get_node_type : UInt64
    get_parent_node : UInt64
    get_child_nodes : UInt64
    get_first_child : UInt64
    get_last_child : UInt64
    get_previous_sibling : UInt64
    get_next_sibling : UInt64
    get_attributes : UInt64
    get_owner_document : UInt64
    insert_before : UInt64
    replace_child : UInt64
    remove_child : UInt64
    append_child : UInt64
    has_child_nodes : UInt64
    clone_node : UInt64
  end

  IHTMLDOMAttribute2_GUID = "3050f810-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMAttribute2 = LibC::GUID.new(0x3050f810_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMAttribute2
    lpVtbl : IHTMLDOMAttribute2VTbl*
  end

  struct IHTMLDOMAttribute3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_node_value : UInt64
    get_node_value : UInt64
    put_value : UInt64
    get_value : UInt64
    get_specified : UInt64
    get_owner_element : UInt64
  end

  IHTMLDOMAttribute3_GUID = "30510468-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMAttribute3 = LibC::GUID.new(0x30510468_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMAttribute3
    lpVtbl : IHTMLDOMAttribute3VTbl*
  end

  struct IHTMLDOMAttribute4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_node_value : UInt64
    get_node_value : UInt64
    get_node_name : UInt64
    get_name : UInt64
    put_value : UInt64
    get_value : UInt64
    get_first_child : UInt64
    get_last_child : UInt64
    get_child_nodes : UInt64
    has_attributes : UInt64
    has_child_nodes : UInt64
    normalize : UInt64
    get_specified : UInt64
  end

  IHTMLDOMAttribute4_GUID = "305106f9-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMAttribute4 = LibC::GUID.new(0x305106f9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMAttribute4
    lpVtbl : IHTMLDOMAttribute4VTbl*
  end

  struct IHTMLDOMTextNodeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_data : UInt64
    get_data : UInt64
    to_string : UInt64
    get_length : UInt64
    split_text : UInt64
  end

  IHTMLDOMTextNode_GUID = "3050f4b1-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMTextNode = LibC::GUID.new(0x3050f4b1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMTextNode
    lpVtbl : IHTMLDOMTextNodeVTbl*
  end

  struct IHTMLDOMTextNode2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    substring_data : UInt64
    append_data : UInt64
    insert_data : UInt64
    delete_data : UInt64
    replace_data : UInt64
  end

  IHTMLDOMTextNode2_GUID = "3050f809-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMTextNode2 = LibC::GUID.new(0x3050f809_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMTextNode2
    lpVtbl : IHTMLDOMTextNode2VTbl*
  end

  struct IHTMLDOMTextNode3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    substring_data : UInt64
    insert_data : UInt64
    delete_data : UInt64
    replace_data : UInt64
    split_text : UInt64
    get_whole_text : UInt64
    replace_whole_text : UInt64
    has_attributes : UInt64
    normalize : UInt64
  end

  IHTMLDOMTextNode3_GUID = "3051073e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMTextNode3 = LibC::GUID.new(0x3051073e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMTextNode3
    lpVtbl : IHTMLDOMTextNode3VTbl*
  end

  struct IHTMLDOMImplementationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    has_feature : UInt64
  end

  IHTMLDOMImplementation_GUID = "3050f80d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMImplementation = LibC::GUID.new(0x3050f80d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMImplementation
    lpVtbl : IHTMLDOMImplementationVTbl*
  end

  struct IHTMLDOMImplementation2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create_document_type : UInt64
    create_document : UInt64
    create_html_document : UInt64
    has_feature : UInt64
  end

  IHTMLDOMImplementation2_GUID = "3051073c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMImplementation2 = LibC::GUID.new(0x3051073c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMImplementation2
    lpVtbl : IHTMLDOMImplementation2VTbl*
  end

  struct DispHTMLDOMAttributeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDOMAttribute_GUID = "3050f564-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDOMAttribute = LibC::GUID.new(0x3050f564_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDOMAttribute
    lpVtbl : DispHTMLDOMAttributeVTbl*
  end

  struct DispHTMLDOMTextNodeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDOMTextNode_GUID = "3050f565-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDOMTextNode = LibC::GUID.new(0x3050f565_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDOMTextNode
    lpVtbl : DispHTMLDOMTextNodeVTbl*
  end

  struct DispHTMLDOMImplementationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDOMImplementation_GUID = "3050f58f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDOMImplementation = LibC::GUID.new(0x3050f58f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDOMImplementation
    lpVtbl : DispHTMLDOMImplementationVTbl*
  end

  struct IHTMLAttributeCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
  end

  IHTMLAttributeCollection_GUID = "3050f4c3-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAttributeCollection = LibC::GUID.new(0x3050f4c3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAttributeCollection
    lpVtbl : IHTMLAttributeCollectionVTbl*
  end

  struct IHTMLAttributeCollection2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_named_item : UInt64
    set_named_item : UInt64
    remove_named_item : UInt64
  end

  IHTMLAttributeCollection2_GUID = "3050f80a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAttributeCollection2 = LibC::GUID.new(0x3050f80a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAttributeCollection2
    lpVtbl : IHTMLAttributeCollection2VTbl*
  end

  struct IHTMLAttributeCollection4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_named_item_ns : UInt64
    set_named_item_ns : UInt64
    remove_named_item_ns : UInt64
    get_named_item : UInt64
    set_named_item : UInt64
    remove_named_item : UInt64
    item : UInt64
    get_length : UInt64
  end

  IHTMLAttributeCollection4_GUID = "305106fa-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAttributeCollection4 = LibC::GUID.new(0x305106fa_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAttributeCollection4
    lpVtbl : IHTMLAttributeCollection4VTbl*
  end

  struct IHTMLDOMChildrenCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
  end

  IHTMLDOMChildrenCollection_GUID = "3050f5ab-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMChildrenCollection = LibC::GUID.new(0x3050f5ab_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMChildrenCollection
    lpVtbl : IHTMLDOMChildrenCollectionVTbl*
  end

  struct IHTMLDOMChildrenCollection2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    item : UInt64
  end

  IHTMLDOMChildrenCollection2_GUID = "30510791-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMChildrenCollection2 = LibC::GUID.new(0x30510791_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMChildrenCollection2
    lpVtbl : IHTMLDOMChildrenCollection2VTbl*
  end

  struct DispHTMLAttributeCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLAttributeCollection_GUID = "3050f56c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLAttributeCollection = LibC::GUID.new(0x3050f56c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLAttributeCollection
    lpVtbl : DispHTMLAttributeCollectionVTbl*
  end

  struct DispStaticNodeListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispStaticNodeList_GUID = "3050f59b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispStaticNodeList = LibC::GUID.new(0x3050f59b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispStaticNodeList
    lpVtbl : DispStaticNodeListVTbl*
  end

  struct DispDOMChildrenCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMChildrenCollection_GUID = "3050f577-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMChildrenCollection = LibC::GUID.new(0x3050f577_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMChildrenCollection
    lpVtbl : DispDOMChildrenCollectionVTbl*
  end

  struct HTMLElementEvents4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLElementEvents4_GUID = "3051075e-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLElementEvents4 = LibC::GUID.new(0x3051075e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLElementEvents4
    lpVtbl : HTMLElementEvents4VTbl*
  end

  struct HTMLElementEvents3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLElementEvents3_GUID = "3050f59f-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLElementEvents3 = LibC::GUID.new(0x3050f59f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLElementEvents3
    lpVtbl : HTMLElementEvents3VTbl*
  end

  struct HTMLElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLElementEvents2_GUID = "3050f60f-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLElementEvents2 = LibC::GUID.new(0x3050f60f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLElementEvents2
    lpVtbl : HTMLElementEvents2VTbl*
  end

  struct HTMLElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLElementEvents_GUID = "3050f33c-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLElementEvents = LibC::GUID.new(0x3050f33c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLElementEvents
    lpVtbl : HTMLElementEventsVTbl*
  end

  struct IRulesAppliedCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    item : UInt64
    get_length : UInt64
    get_element : UInt64
    property_inherited_from : UInt64
    get_property_count : UInt64
    property : UInt64
    property_inherited_trace : UInt64
    property_inherited_trace_length : UInt64
  end

  IRulesAppliedCollection_GUID = "305104be-98b5-11cf-bb82-00aa00bdce0b"
  IID_IRulesAppliedCollection = LibC::GUID.new(0x305104be_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IRulesAppliedCollection
    lpVtbl : IRulesAppliedCollectionVTbl*
  end

  struct IHTMLElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    merge_attributes : UInt64
    get_is_multi_line : UInt64
    get_can_have_html : UInt64
    put_onlayoutcomplete : UInt64
    get_onlayoutcomplete : UInt64
    put_onpage : UInt64
    get_onpage : UInt64
    put_inflate_block : UInt64
    get_inflate_block : UInt64
    put_onbeforedeactivate : UInt64
    get_onbeforedeactivate : UInt64
    set_active : UInt64
    put_content_editable : UInt64
    get_content_editable : UInt64
    get_is_content_editable : UInt64
    put_hide_focus : UInt64
    get_hide_focus : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    get_is_disabled : UInt64
    put_onmove : UInt64
    get_onmove : UInt64
    put_oncontrolselect : UInt64
    get_oncontrolselect : UInt64
    fire_event : UInt64
    put_onresizestart : UInt64
    get_onresizestart : UInt64
    put_onresizeend : UInt64
    get_onresizeend : UInt64
    put_onmovestart : UInt64
    get_onmovestart : UInt64
    put_onmoveend : UInt64
    get_onmoveend : UInt64
    put_onmouseenter : UInt64
    get_onmouseenter : UInt64
    put_onmouseleave : UInt64
    get_onmouseleave : UInt64
    put_onactivate : UInt64
    get_onactivate : UInt64
    put_ondeactivate : UInt64
    get_ondeactivate : UInt64
    drag_drop : UInt64
    get_glyph_mode : UInt64
  end

  IHTMLElement3_GUID = "3050f673-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElement3 = LibC::GUID.new(0x3050f673_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElement3
    lpVtbl : IHTMLElement3VTbl*
  end

  struct IHTMLElement4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_onmousewheel : UInt64
    get_onmousewheel : UInt64
    normalize : UInt64
    get_attribute_node : UInt64
    set_attribute_node : UInt64
    remove_attribute_node : UInt64
    put_onbeforeactivate : UInt64
    get_onbeforeactivate : UInt64
    put_onfocusin : UInt64
    get_onfocusin : UInt64
    put_onfocusout : UInt64
    get_onfocusout : UInt64
  end

  IHTMLElement4_GUID = "3050f80f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElement4 = LibC::GUID.new(0x3050f80f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElement4
    lpVtbl : IHTMLElement4VTbl*
  end

  struct IElementSelectorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    query_selector : UInt64
    query_selector_all : UInt64
  end

  IElementSelector_GUID = "30510463-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementSelector = LibC::GUID.new(0x30510463_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementSelector
    lpVtbl : IElementSelectorVTbl*
  end

  struct IHTMLElementRenderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    draw_to_dc : UInt64
    set_document_printer : UInt64
  end

  IHTMLElementRender_GUID = "3050f669-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElementRender = LibC::GUID.new(0x3050f669_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElementRender
    lpVtbl : IHTMLElementRenderVTbl*
  end

  struct IHTMLUniqueNameVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_unique_number : UInt64
    get_unique_id : UInt64
  end

  IHTMLUniqueName_GUID = "3050f4d0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLUniqueName = LibC::GUID.new(0x3050f4d0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLUniqueName
    lpVtbl : IHTMLUniqueNameVTbl*
  end

  struct IHTMLElement5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_attribute_node : UInt64
    set_attribute_node : UInt64
    remove_attribute_node : UInt64
    has_attribute : UInt64
    put_role : UInt64
    get_role : UInt64
    put_aria_busy : UInt64
    get_aria_busy : UInt64
    put_aria_checked : UInt64
    get_aria_checked : UInt64
    put_aria_disabled : UInt64
    get_aria_disabled : UInt64
    put_aria_expanded : UInt64
    get_aria_expanded : UInt64
    put_aria_haspopup : UInt64
    get_aria_haspopup : UInt64
    put_aria_hidden : UInt64
    get_aria_hidden : UInt64
    put_aria_invalid : UInt64
    get_aria_invalid : UInt64
    put_aria_multiselectable : UInt64
    get_aria_multiselectable : UInt64
    put_aria_pressed : UInt64
    get_aria_pressed : UInt64
    put_aria_readonly : UInt64
    get_aria_readonly : UInt64
    put_aria_required : UInt64
    get_aria_required : UInt64
    put_aria_secret : UInt64
    get_aria_secret : UInt64
    put_aria_selected : UInt64
    get_aria_selected : UInt64
    get_attribute : UInt64
    set_attribute : UInt64
    remove_attribute : UInt64
    get_attributes : UInt64
    put_aria_valuenow : UInt64
    get_aria_valuenow : UInt64
    put_aria_posinset : UInt64
    get_aria_posinset : UInt64
    put_aria_setsize : UInt64
    get_aria_setsize : UInt64
    put_aria_level : UInt64
    get_aria_level : UInt64
    put_aria_valuemin : UInt64
    get_aria_valuemin : UInt64
    put_aria_valuemax : UInt64
    get_aria_valuemax : UInt64
    put_aria_controls : UInt64
    get_aria_controls : UInt64
    put_aria_describedby : UInt64
    get_aria_describedby : UInt64
    put_aria_flowto : UInt64
    get_aria_flowto : UInt64
    put_aria_labelledby : UInt64
    get_aria_labelledby : UInt64
    put_aria_activedescendant : UInt64
    get_aria_activedescendant : UInt64
    put_aria_owns : UInt64
    get_aria_owns : UInt64
    has_attributes : UInt64
    put_aria_live : UInt64
    get_aria_live : UInt64
    put_aria_relevant : UInt64
    get_aria_relevant : UInt64
  end

  IHTMLElement5_GUID = "3051045d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElement5 = LibC::GUID.new(0x3051045d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElement5
    lpVtbl : IHTMLElement5VTbl*
  end

  struct IHTMLElement6VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_attribute_ns : UInt64
    set_attribute_ns : UInt64
    remove_attribute_ns : UInt64
    get_attribute_node_ns : UInt64
    set_attribute_node_ns : UInt64
    has_attribute_ns : UInt64
    get_attribute : UInt64
    set_attribute : UInt64
    remove_attribute : UInt64
    get_attribute_node : UInt64
    set_attribute_node : UInt64
    remove_attribute_node : UInt64
    has_attribute : UInt64
    get_elements_by_tag_name_ns : UInt64
    get_tag_name : UInt64
    get_node_name : UInt64
    get_elements_by_class_name : UInt64
    ms_matches_selector : UInt64
    put_onabort : UInt64
    get_onabort : UInt64
    put_oncanplay : UInt64
    get_oncanplay : UInt64
    put_oncanplaythrough : UInt64
    get_oncanplaythrough : UInt64
    put_onchange : UInt64
    get_onchange : UInt64
    put_ondurationchange : UInt64
    get_ondurationchange : UInt64
    put_onemptied : UInt64
    get_onemptied : UInt64
    put_onended : UInt64
    get_onended : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    put_oninput : UInt64
    get_oninput : UInt64
    put_onload : UInt64
    get_onload : UInt64
    put_onloadeddata : UInt64
    get_onloadeddata : UInt64
    put_onloadedmetadata : UInt64
    get_onloadedmetadata : UInt64
    put_onloadstart : UInt64
    get_onloadstart : UInt64
    put_onpause : UInt64
    get_onpause : UInt64
    put_onplay : UInt64
    get_onplay : UInt64
    put_onplaying : UInt64
    get_onplaying : UInt64
    put_onprogress : UInt64
    get_onprogress : UInt64
    put_onratechange : UInt64
    get_onratechange : UInt64
    put_onreset : UInt64
    get_onreset : UInt64
    put_onseeked : UInt64
    get_onseeked : UInt64
    put_onseeking : UInt64
    get_onseeking : UInt64
    put_onselect : UInt64
    get_onselect : UInt64
    put_onstalled : UInt64
    get_onstalled : UInt64
    put_onsubmit : UInt64
    get_onsubmit : UInt64
    put_onsuspend : UInt64
    get_onsuspend : UInt64
    put_ontimeupdate : UInt64
    get_ontimeupdate : UInt64
    put_onvolumechange : UInt64
    get_onvolumechange : UInt64
    put_onwaiting : UInt64
    get_onwaiting : UInt64
    has_attributes : UInt64
  end

  IHTMLElement6_GUID = "305106f8-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElement6 = LibC::GUID.new(0x305106f8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElement6
    lpVtbl : IHTMLElement6VTbl*
  end

  struct IHTMLElement7VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_onmspointerdown : UInt64
    get_onmspointerdown : UInt64
    put_onmspointermove : UInt64
    get_onmspointermove : UInt64
    put_onmspointerup : UInt64
    get_onmspointerup : UInt64
    put_onmspointerover : UInt64
    get_onmspointerover : UInt64
    put_onmspointerout : UInt64
    get_onmspointerout : UInt64
    put_onmspointercancel : UInt64
    get_onmspointercancel : UInt64
    put_onmspointerhover : UInt64
    get_onmspointerhover : UInt64
    put_onmslostpointercapture : UInt64
    get_onmslostpointercapture : UInt64
    put_onmsgotpointercapture : UInt64
    get_onmsgotpointercapture : UInt64
    put_onmsgesturestart : UInt64
    get_onmsgesturestart : UInt64
    put_onmsgesturechange : UInt64
    get_onmsgesturechange : UInt64
    put_onmsgestureend : UInt64
    get_onmsgestureend : UInt64
    put_onmsgesturehold : UInt64
    get_onmsgesturehold : UInt64
    put_onmsgesturetap : UInt64
    get_onmsgesturetap : UInt64
    put_onmsgesturedoubletap : UInt64
    get_onmsgesturedoubletap : UInt64
    put_onmsinertiastart : UInt64
    get_onmsinertiastart : UInt64
    ms_set_pointer_capture : UInt64
    ms_release_pointer_capture : UInt64
    put_onmstransitionstart : UInt64
    get_onmstransitionstart : UInt64
    put_onmstransitionend : UInt64
    get_onmstransitionend : UInt64
    put_onmsanimationstart : UInt64
    get_onmsanimationstart : UInt64
    put_onmsanimationend : UInt64
    get_onmsanimationend : UInt64
    put_onmsanimationiteration : UInt64
    get_onmsanimationiteration : UInt64
    put_oninvalid : UInt64
    get_oninvalid : UInt64
    put_xms_accelerator_key : UInt64
    get_xms_accelerator_key : UInt64
    put_spellcheck : UInt64
    get_spellcheck : UInt64
    put_onmsmanipulationstatechanged : UInt64
    get_onmsmanipulationstatechanged : UInt64
    put_oncuechange : UInt64
    get_oncuechange : UInt64
  end

  IHTMLElement7_GUID = "305107aa-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElement7 = LibC::GUID.new(0x305107aa_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElement7
    lpVtbl : IHTMLElement7VTbl*
  end

  struct IHTMLElementAppliedStylesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    ms_get_rules_applied : UInt64
    ms_get_rules_applied_with_ancestor : UInt64
  end

  IHTMLElementAppliedStyles_GUID = "305104bd-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElementAppliedStyles = LibC::GUID.new(0x305104bd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElementAppliedStyles
    lpVtbl : IHTMLElementAppliedStylesVTbl*
  end

  struct IElementTraversalVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_first_element_child : UInt64
    get_last_element_child : UInt64
    get_previous_element_sibling : UInt64
    get_next_element_sibling : UInt64
    get_child_element_count : UInt64
  end

  IElementTraversal_GUID = "30510736-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementTraversal = LibC::GUID.new(0x30510736_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementTraversal
    lpVtbl : IElementTraversalVTbl*
  end

  struct IHTMLDatabindingVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_data_fld : UInt64
    get_data_fld : UInt64
    put_data_src : UInt64
    get_data_src : UInt64
    put_data_format_as : UInt64
    get_data_format_as : UInt64
  end

  IHTMLDatabinding_GUID = "3050f3f2-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDatabinding = LibC::GUID.new(0x3050f3f2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDatabinding
    lpVtbl : IHTMLDatabindingVTbl*
  end

  struct IHTMLDocumentVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_script : UInt64
  end

  IHTMLDocument_GUID = "626fc520-a41e-11cf-a731-00a0c9082637"
  IID_IHTMLDocument = LibC::GUID.new(0x626fc520_u32, 0xa41e_u16, 0x11cf_u16, StaticArray[0xa7_u8, 0x31_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x8_u8, 0x26_u8, 0x37_u8])
  struct IHTMLDocument
    lpVtbl : IHTMLDocumentVTbl*
  end

  struct IHTMLElementDefaultsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_style : UInt64
    put_tab_stop : UInt64
    get_tab_stop : UInt64
    put_view_inherit_style : UInt64
    get_view_inherit_style : UInt64
    put_view_master_tab : UInt64
    get_view_master_tab : UInt64
    put_scroll_segment_x : UInt64
    get_scroll_segment_x : UInt64
    put_scroll_segment_y : UInt64
    get_scroll_segment_y : UInt64
    put_is_multi_line : UInt64
    get_is_multi_line : UInt64
    put_content_editable : UInt64
    get_content_editable : UInt64
    put_can_have_html : UInt64
    get_can_have_html : UInt64
    putref_view_link : UInt64
    get_view_link : UInt64
    put_frozen : UInt64
    get_frozen : UInt64
  end

  IHTMLElementDefaults_GUID = "3050f6c9-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElementDefaults = LibC::GUID.new(0x3050f6c9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElementDefaults
    lpVtbl : IHTMLElementDefaultsVTbl*
  end

  struct DispHTMLDefaultsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDefaults_GUID = "3050f58c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDefaults = LibC::GUID.new(0x3050f58c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDefaults
    lpVtbl : DispHTMLDefaultsVTbl*
  end

  struct IHTCDefaultDispatchVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_element : UInt64
    create_event_object : UInt64
    get_defaults : UInt64
    get_document : UInt64
  end

  IHTCDefaultDispatch_GUID = "3050f4fd-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTCDefaultDispatch = LibC::GUID.new(0x3050f4fd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTCDefaultDispatch
    lpVtbl : IHTCDefaultDispatchVTbl*
  end

  struct IHTCPropertyBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    fire_change : UInt64
    put_value : UInt64
    get_value : UInt64
  end

  IHTCPropertyBehavior_GUID = "3050f5df-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTCPropertyBehavior = LibC::GUID.new(0x3050f5df_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTCPropertyBehavior
    lpVtbl : IHTCPropertyBehaviorVTbl*
  end

  struct IHTCMethodBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  IHTCMethodBehavior_GUID = "3050f631-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTCMethodBehavior = LibC::GUID.new(0x3050f631_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTCMethodBehavior
    lpVtbl : IHTCMethodBehaviorVTbl*
  end

  struct IHTCEventBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    fire : UInt64
  end

  IHTCEventBehavior_GUID = "3050f4ff-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTCEventBehavior = LibC::GUID.new(0x3050f4ff_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTCEventBehavior
    lpVtbl : IHTCEventBehaviorVTbl*
  end

  struct IHTCAttachBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    fire_event : UInt64
    detach_event : UInt64
  end

  IHTCAttachBehavior_GUID = "3050f5f4-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTCAttachBehavior = LibC::GUID.new(0x3050f5f4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTCAttachBehavior
    lpVtbl : IHTCAttachBehaviorVTbl*
  end

  struct IHTCAttachBehavior2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    fire_event : UInt64
  end

  IHTCAttachBehavior2_GUID = "3050f7eb-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTCAttachBehavior2 = LibC::GUID.new(0x3050f7eb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTCAttachBehavior2
    lpVtbl : IHTCAttachBehavior2VTbl*
  end

  struct IHTCDescBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_urn : UInt64
    get_name : UInt64
  end

  IHTCDescBehavior_GUID = "3050f5dc-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTCDescBehavior = LibC::GUID.new(0x3050f5dc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTCDescBehavior
    lpVtbl : IHTCDescBehaviorVTbl*
  end

  struct DispHTCDefaultDispatchVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTCDefaultDispatch_GUID = "3050f573-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTCDefaultDispatch = LibC::GUID.new(0x3050f573_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTCDefaultDispatch
    lpVtbl : DispHTCDefaultDispatchVTbl*
  end

  struct DispHTCPropertyBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTCPropertyBehavior_GUID = "3050f57f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTCPropertyBehavior = LibC::GUID.new(0x3050f57f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTCPropertyBehavior
    lpVtbl : DispHTCPropertyBehaviorVTbl*
  end

  struct DispHTCMethodBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTCMethodBehavior_GUID = "3050f587-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTCMethodBehavior = LibC::GUID.new(0x3050f587_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTCMethodBehavior
    lpVtbl : DispHTCMethodBehaviorVTbl*
  end

  struct DispHTCEventBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTCEventBehavior_GUID = "3050f574-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTCEventBehavior = LibC::GUID.new(0x3050f574_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTCEventBehavior
    lpVtbl : DispHTCEventBehaviorVTbl*
  end

  struct DispHTCAttachBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTCAttachBehavior_GUID = "3050f583-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTCAttachBehavior = LibC::GUID.new(0x3050f583_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTCAttachBehavior
    lpVtbl : DispHTCAttachBehaviorVTbl*
  end

  struct DispHTCDescBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTCDescBehavior_GUID = "3050f57e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTCDescBehavior = LibC::GUID.new(0x3050f57e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTCDescBehavior
    lpVtbl : DispHTCDescBehaviorVTbl*
  end

  struct IHTMLUrnCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    item : UInt64
  end

  IHTMLUrnCollection_GUID = "3050f5e2-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLUrnCollection = LibC::GUID.new(0x3050f5e2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLUrnCollection
    lpVtbl : IHTMLUrnCollectionVTbl*
  end

  struct DispHTMLUrnCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLUrnCollection_GUID = "3050f551-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLUrnCollection = LibC::GUID.new(0x3050f551_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLUrnCollection
    lpVtbl : DispHTMLUrnCollectionVTbl*
  end

  struct IHTMLGenericElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_recordset : UInt64
    named_recordset : UInt64
  end

  IHTMLGenericElement_GUID = "3050f4b7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLGenericElement = LibC::GUID.new(0x3050f4b7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLGenericElement
    lpVtbl : IHTMLGenericElementVTbl*
  end

  struct DispHTMLGenericElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLGenericElement_GUID = "3050f563-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLGenericElement = LibC::GUID.new(0x3050f563_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLGenericElement
    lpVtbl : DispHTMLGenericElementVTbl*
  end

  struct IHTMLStyleSheetRuleAppliedVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_ms_specificity : UInt64
    ms_get_specificity : UInt64
  end

  IHTMLStyleSheetRuleApplied_GUID = "305104c1-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheetRuleApplied = LibC::GUID.new(0x305104c1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheetRuleApplied
    lpVtbl : IHTMLStyleSheetRuleAppliedVTbl*
  end

  struct IHTMLStyleSheetRule2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_selector_text : UInt64
    get_selector_text : UInt64
  end

  IHTMLStyleSheetRule2_GUID = "305106fd-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheetRule2 = LibC::GUID.new(0x305106fd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheetRule2
    lpVtbl : IHTMLStyleSheetRule2VTbl*
  end

  struct IHTMLStyleSheetRulesCollection2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    item : UInt64
  end

  IHTMLStyleSheetRulesCollection2_GUID = "305106e8-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheetRulesCollection2 = LibC::GUID.new(0x305106e8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheetRulesCollection2
    lpVtbl : IHTMLStyleSheetRulesCollection2VTbl*
  end

  struct DispHTMLStyleSheetRuleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStyleSheetRule_GUID = "3050f50e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStyleSheetRule = LibC::GUID.new(0x3050f50e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStyleSheetRule
    lpVtbl : DispHTMLStyleSheetRuleVTbl*
  end

  struct DispHTMLStyleSheetRulesCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStyleSheetRulesCollection_GUID = "3050f52f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStyleSheetRulesCollection = LibC::GUID.new(0x3050f52f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStyleSheetRulesCollection
    lpVtbl : DispHTMLStyleSheetRulesCollectionVTbl*
  end

  struct IHTMLStyleSheetPageVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_selector : UInt64
    get_pseudo_class : UInt64
  end

  IHTMLStyleSheetPage_GUID = "3050f7ee-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheetPage = LibC::GUID.new(0x3050f7ee_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheetPage
    lpVtbl : IHTMLStyleSheetPageVTbl*
  end

  struct IHTMLStyleSheetPage2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_selector_text : UInt64
    get_selector_text : UInt64
    get_style : UInt64
  end

  IHTMLStyleSheetPage2_GUID = "305106ed-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheetPage2 = LibC::GUID.new(0x305106ed_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheetPage2
    lpVtbl : IHTMLStyleSheetPage2VTbl*
  end

  struct IHTMLStyleSheetPagesCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    item : UInt64
  end

  IHTMLStyleSheetPagesCollection_GUID = "3050f7f0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheetPagesCollection = LibC::GUID.new(0x3050f7f0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheetPagesCollection
    lpVtbl : IHTMLStyleSheetPagesCollectionVTbl*
  end

  struct DispHTMLStyleSheetPageVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStyleSheetPage_GUID = "3050f540-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStyleSheetPage = LibC::GUID.new(0x3050f540_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStyleSheetPage
    lpVtbl : DispHTMLStyleSheetPageVTbl*
  end

  struct DispHTMLStyleSheetPagesCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStyleSheetPagesCollection_GUID = "3050f543-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStyleSheetPagesCollection = LibC::GUID.new(0x3050f543_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStyleSheetPagesCollection
    lpVtbl : DispHTMLStyleSheetPagesCollectionVTbl*
  end

  struct IHTMLStyleSheetsCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
  end

  IHTMLStyleSheetsCollection_GUID = "3050f37e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheetsCollection = LibC::GUID.new(0x3050f37e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheetsCollection
    lpVtbl : IHTMLStyleSheetsCollectionVTbl*
  end

  struct IHTMLStyleSheet2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_pages : UInt64
    add_page_rule : UInt64
  end

  IHTMLStyleSheet2_GUID = "3050f3d1-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheet2 = LibC::GUID.new(0x3050f3d1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheet2
    lpVtbl : IHTMLStyleSheet2VTbl*
  end

  struct IHTMLStyleSheet3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_href : UInt64
    get_href : UInt64
    get_is_alternate : UInt64
    get_is_pref_alternate : UInt64
  end

  IHTMLStyleSheet3_GUID = "30510496-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheet3 = LibC::GUID.new(0x30510496_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheet3
    lpVtbl : IHTMLStyleSheet3VTbl*
  end

  struct IHTMLStyleSheet4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_type : UInt64
    get_href : UInt64
    get_title : UInt64
    get_owner_node : UInt64
    get_owner_rule : UInt64
    get_css_rules : UInt64
    get_media : UInt64
    insert_rule : UInt64
    delete_rule : UInt64
  end

  IHTMLStyleSheet4_GUID = "305106f4-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheet4 = LibC::GUID.new(0x305106f4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheet4
    lpVtbl : IHTMLStyleSheet4VTbl*
  end

  struct DispHTMLStyleSheetVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStyleSheet_GUID = "3050f58d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStyleSheet = LibC::GUID.new(0x3050f58d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStyleSheet
    lpVtbl : DispHTMLStyleSheetVTbl*
  end

  struct IHTMLStyleSheetsCollection2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    item : UInt64
  end

  IHTMLStyleSheetsCollection2_GUID = "305106e7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheetsCollection2 = LibC::GUID.new(0x305106e7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheetsCollection2
    lpVtbl : IHTMLStyleSheetsCollection2VTbl*
  end

  struct DispHTMLStyleSheetsCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStyleSheetsCollection_GUID = "3050f547-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStyleSheetsCollection = LibC::GUID.new(0x3050f547_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStyleSheetsCollection
    lpVtbl : DispHTMLStyleSheetsCollectionVTbl*
  end

  struct HTMLLinkElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLLinkElementEvents2_GUID = "3050f61d-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLLinkElementEvents2 = LibC::GUID.new(0x3050f61d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLLinkElementEvents2
    lpVtbl : HTMLLinkElementEvents2VTbl*
  end

  struct HTMLLinkElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLLinkElementEvents_GUID = "3050f3cc-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLLinkElementEvents = LibC::GUID.new(0x3050f3cc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLLinkElementEvents
    lpVtbl : HTMLLinkElementEventsVTbl*
  end

  struct IHTMLLinkElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_href : UInt64
    get_href : UInt64
    put_rel : UInt64
    get_rel : UInt64
    put_rev : UInt64
    get_rev : UInt64
    put_type : UInt64
    get_type : UInt64
    get_ready_state : UInt64
    put_onreadystatechange : UInt64
    get_onreadystatechange : UInt64
    put_onload : UInt64
    get_onload : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    get_style_sheet : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    put_media : UInt64
    get_media : UInt64
  end

  IHTMLLinkElement_GUID = "3050f205-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLLinkElement = LibC::GUID.new(0x3050f205_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLLinkElement
    lpVtbl : IHTMLLinkElementVTbl*
  end

  struct IHTMLLinkElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_target : UInt64
    get_target : UInt64
  end

  IHTMLLinkElement2_GUID = "3050f4e5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLLinkElement2 = LibC::GUID.new(0x3050f4e5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLLinkElement2
    lpVtbl : IHTMLLinkElement2VTbl*
  end

  struct IHTMLLinkElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_charset : UInt64
    get_charset : UInt64
    put_hreflang : UInt64
    get_hreflang : UInt64
  end

  IHTMLLinkElement3_GUID = "3050f81e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLLinkElement3 = LibC::GUID.new(0x3050f81e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLLinkElement3
    lpVtbl : IHTMLLinkElement3VTbl*
  end

  struct IHTMLLinkElement4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_href : UInt64
    get_href : UInt64
  end

  IHTMLLinkElement4_GUID = "3051043a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLLinkElement4 = LibC::GUID.new(0x3051043a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLLinkElement4
    lpVtbl : IHTMLLinkElement4VTbl*
  end

  struct IHTMLLinkElement5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_sheet : UInt64
  end

  IHTMLLinkElement5_GUID = "30510726-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLLinkElement5 = LibC::GUID.new(0x30510726_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLLinkElement5
    lpVtbl : IHTMLLinkElement5VTbl*
  end

  struct DispHTMLLinkElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLLinkElement_GUID = "3050f524-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLLinkElement = LibC::GUID.new(0x3050f524_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLLinkElement
    lpVtbl : DispHTMLLinkElementVTbl*
  end

  struct IHTMLTxtRangeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_html_text : UInt64
    put_text : UInt64
    get_text : UInt64
    parent_element : UInt64
    duplicate : UInt64
    in_range : UInt64
    is_equal : UInt64
    scroll_into_view : UInt64
    collapse : UInt64
    expand : UInt64
    move : UInt64
    move_start : UInt64
    move_end : UInt64
    select : UInt64
    paste_html : UInt64
    move_to_element_text : UInt64
    set_end_point : UInt64
    compare_end_points : UInt64
    find_text : UInt64
    move_to_point : UInt64
    get_bookmark : UInt64
    move_to_bookmark : UInt64
    query_command_supported : UInt64
    query_command_enabled : UInt64
    query_command_state : UInt64
    query_command_indeterm : UInt64
    query_command_text : UInt64
    query_command_value : UInt64
    exec_command : UInt64
    exec_command_show_help : UInt64
  end

  IHTMLTxtRange_GUID = "3050f220-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTxtRange = LibC::GUID.new(0x3050f220_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTxtRange
    lpVtbl : IHTMLTxtRangeVTbl*
  end

  struct IHTMLTextRangeMetricsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_offset_top : UInt64
    get_offset_left : UInt64
    get_bounding_top : UInt64
    get_bounding_left : UInt64
    get_bounding_width : UInt64
    get_bounding_height : UInt64
  end

  IHTMLTextRangeMetrics_GUID = "3050f40b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTextRangeMetrics = LibC::GUID.new(0x3050f40b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTextRangeMetrics
    lpVtbl : IHTMLTextRangeMetricsVTbl*
  end

  struct IHTMLTextRangeMetrics2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_client_rects : UInt64
    get_bounding_client_rect : UInt64
  end

  IHTMLTextRangeMetrics2_GUID = "3050f4a6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTextRangeMetrics2 = LibC::GUID.new(0x3050f4a6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTextRangeMetrics2
    lpVtbl : IHTMLTextRangeMetrics2VTbl*
  end

  struct IHTMLTxtRangeCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
  end

  IHTMLTxtRangeCollection_GUID = "3050f7ed-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTxtRangeCollection = LibC::GUID.new(0x3050f7ed_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTxtRangeCollection
    lpVtbl : IHTMLTxtRangeCollectionVTbl*
  end

  struct IHTMLDOMRangeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_start_container : UInt64
    get_start_offset : UInt64
    get_end_container : UInt64
    get_end_offset : UInt64
    get_collapsed : UInt64
    get_common_ancestor_container : UInt64
    set_start : UInt64
    set_end : UInt64
    set_start_before : UInt64
    set_start_after : UInt64
    set_end_before : UInt64
    set_end_after : UInt64
    collapse : UInt64
    select_node : UInt64
    select_node_contents : UInt64
    compare_boundary_points : UInt64
    delete_contents : UInt64
    extract_contents : UInt64
    clone_contents : UInt64
    insert_node : UInt64
    surround_contents : UInt64
    clone_range : UInt64
    to_string : UInt64
    detach : UInt64
    get_client_rects : UInt64
    get_bounding_client_rect : UInt64
  end

  IHTMLDOMRange_GUID = "305104ae-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMRange = LibC::GUID.new(0x305104ae_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMRange
    lpVtbl : IHTMLDOMRangeVTbl*
  end

  struct DispHTMLDOMRangeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDOMRange_GUID = "3050f5a3-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDOMRange = LibC::GUID.new(0x3050f5a3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDOMRange
    lpVtbl : DispHTMLDOMRangeVTbl*
  end

  struct HTMLFormElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLFormElementEvents2_GUID = "3050f614-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLFormElementEvents2 = LibC::GUID.new(0x3050f614_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLFormElementEvents2
    lpVtbl : HTMLFormElementEvents2VTbl*
  end

  struct HTMLFormElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLFormElementEvents_GUID = "3050f364-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLFormElementEvents = LibC::GUID.new(0x3050f364_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLFormElementEvents
    lpVtbl : HTMLFormElementEventsVTbl*
  end

  struct IHTMLFormElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_action : UInt64
    get_action : UInt64
    put_dir : UInt64
    get_dir : UInt64
    put_encoding : UInt64
    get_encoding : UInt64
    put_method : UInt64
    get_method : UInt64
    get_elements : UInt64
    put_target : UInt64
    get_target : UInt64
    put_name : UInt64
    get_name : UInt64
    put_onsubmit : UInt64
    get_onsubmit : UInt64
    put_onreset : UInt64
    get_onreset : UInt64
    submit : UInt64
    reset : UInt64
    put_length : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
    tags : UInt64
  end

  IHTMLFormElement_GUID = "3050f1f7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFormElement = LibC::GUID.new(0x3050f1f7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFormElement
    lpVtbl : IHTMLFormElementVTbl*
  end

  struct IHTMLFormElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_accept_charset : UInt64
    get_accept_charset : UInt64
    urns : UInt64
  end

  IHTMLFormElement2_GUID = "3050f4f6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFormElement2 = LibC::GUID.new(0x3050f4f6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFormElement2
    lpVtbl : IHTMLFormElement2VTbl*
  end

  struct IHTMLFormElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    named_item : UInt64
  end

  IHTMLFormElement3_GUID = "3050f836-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFormElement3 = LibC::GUID.new(0x3050f836_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFormElement3
    lpVtbl : IHTMLFormElement3VTbl*
  end

  struct IHTMLSubmitDataVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    append_name_value_pair : UInt64
    append_name_file_pair : UInt64
    append_item_separator : UInt64
  end

  IHTMLSubmitData_GUID = "3050f645-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSubmitData = LibC::GUID.new(0x3050f645_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSubmitData
    lpVtbl : IHTMLSubmitDataVTbl*
  end

  struct IHTMLFormElement4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_action : UInt64
    get_action : UInt64
  end

  IHTMLFormElement4_GUID = "3051042c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFormElement4 = LibC::GUID.new(0x3051042c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFormElement4
    lpVtbl : IHTMLFormElement4VTbl*
  end

  struct DispHTMLFormElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLFormElement_GUID = "3050f510-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLFormElement = LibC::GUID.new(0x3050f510_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLFormElement
    lpVtbl : DispHTMLFormElementVTbl*
  end

  struct HTMLControlElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLControlElementEvents2_GUID = "3050f612-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLControlElementEvents2 = LibC::GUID.new(0x3050f612_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLControlElementEvents2
    lpVtbl : HTMLControlElementEvents2VTbl*
  end

  struct HTMLControlElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLControlElementEvents_GUID = "3050f4ea-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLControlElementEvents = LibC::GUID.new(0x3050f4ea_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLControlElementEvents
    lpVtbl : HTMLControlElementEventsVTbl*
  end

  struct IHTMLControlElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_tab_index : UInt64
    get_tab_index : UInt64
    focus : UInt64
    put_access_key : UInt64
    get_access_key : UInt64
    put_onblur : UInt64
    get_onblur : UInt64
    put_onfocus : UInt64
    get_onfocus : UInt64
    put_onresize : UInt64
    get_onresize : UInt64
    blur : UInt64
    add_filter : UInt64
    remove_filter : UInt64
    get_client_height : UInt64
    get_client_width : UInt64
    get_client_top : UInt64
    get_client_left : UInt64
  end

  IHTMLControlElement_GUID = "3050f4e9-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLControlElement = LibC::GUID.new(0x3050f4e9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLControlElement
    lpVtbl : IHTMLControlElementVTbl*
  end

  struct IHTMLTextElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  IHTMLTextElement_GUID = "3050f218-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTextElement = LibC::GUID.new(0x3050f218_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTextElement
    lpVtbl : IHTMLTextElementVTbl*
  end

  struct DispHTMLTextElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLTextElement_GUID = "3050f537-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLTextElement = LibC::GUID.new(0x3050f537_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLTextElement
    lpVtbl : DispHTMLTextElementVTbl*
  end

  struct HTMLTextContainerEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLTextContainerEvents2_GUID = "3050f624-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLTextContainerEvents2 = LibC::GUID.new(0x3050f624_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLTextContainerEvents2
    lpVtbl : HTMLTextContainerEvents2VTbl*
  end

  struct HTMLTextContainerEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLTextContainerEvents_GUID = "1ff6aa72-5842-11cf-a707-00aa00c0098d"
  IID_HTMLTextContainerEvents = LibC::GUID.new(0x1ff6aa72_u32, 0x5842_u16, 0x11cf_u16, StaticArray[0xa7_u8, 0x7_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xc0_u8, 0x9_u8, 0x8d_u8])
  struct HTMLTextContainerEvents
    lpVtbl : HTMLTextContainerEventsVTbl*
  end

  struct IHTMLTextContainerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create_control_range : UInt64
    get_scroll_height : UInt64
    get_scroll_width : UInt64
    put_scroll_top : UInt64
    get_scroll_top : UInt64
    put_scroll_left : UInt64
    get_scroll_left : UInt64
    put_onscroll : UInt64
    get_onscroll : UInt64
  end

  IHTMLTextContainer_GUID = "3050f230-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTextContainer = LibC::GUID.new(0x3050f230_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTextContainer
    lpVtbl : IHTMLTextContainerVTbl*
  end

  struct IHTMLControlRangeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    select : UInt64
    add : UInt64
    remove : UInt64
    item : UInt64
    scroll_into_view : UInt64
    query_command_supported : UInt64
    query_command_enabled : UInt64
    query_command_state : UInt64
    query_command_indeterm : UInt64
    query_command_text : UInt64
    query_command_value : UInt64
    exec_command : UInt64
    exec_command_show_help : UInt64
    common_parent_element : UInt64
    get_length : UInt64
  end

  IHTMLControlRange_GUID = "3050f29c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLControlRange = LibC::GUID.new(0x3050f29c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLControlRange
    lpVtbl : IHTMLControlRangeVTbl*
  end

  struct IHTMLControlRange2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    add_element : UInt64
  end

  IHTMLControlRange2_GUID = "3050f65e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLControlRange2 = LibC::GUID.new(0x3050f65e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLControlRange2
    lpVtbl : IHTMLControlRange2VTbl*
  end

  struct HTMLImgEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLImgEvents2_GUID = "3050f616-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLImgEvents2 = LibC::GUID.new(0x3050f616_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLImgEvents2
    lpVtbl : HTMLImgEvents2VTbl*
  end

  struct HTMLImgEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLImgEvents_GUID = "3050f25b-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLImgEvents = LibC::GUID.new(0x3050f25b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLImgEvents
    lpVtbl : HTMLImgEventsVTbl*
  end

  struct IHTMLImgElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_is_map : UInt64
    get_is_map : UInt64
    put_use_map : UInt64
    get_use_map : UInt64
    get_mime_type : UInt64
    get_file_size : UInt64
    get_file_created_date : UInt64
    get_file_modified_date : UInt64
    get_file_updated_date : UInt64
    get_protocol : UInt64
    get_href : UInt64
    get_name_prop : UInt64
    put_border : UInt64
    get_border : UInt64
    put_vspace : UInt64
    get_vspace : UInt64
    put_hspace : UInt64
    get_hspace : UInt64
    put_alt : UInt64
    get_alt : UInt64
    put_src : UInt64
    get_src : UInt64
    put_lowsrc : UInt64
    get_lowsrc : UInt64
    put_vrml : UInt64
    get_vrml : UInt64
    put_dynsrc : UInt64
    get_dynsrc : UInt64
    get_ready_state : UInt64
    get_complete : UInt64
    put_loop : UInt64
    get_loop : UInt64
    put_align : UInt64
    get_align : UInt64
    put_onload : UInt64
    get_onload : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    put_onabort : UInt64
    get_onabort : UInt64
    put_name : UInt64
    get_name : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    put_start : UInt64
    get_start : UInt64
  end

  IHTMLImgElement_GUID = "3050f240-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLImgElement = LibC::GUID.new(0x3050f240_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLImgElement
    lpVtbl : IHTMLImgElementVTbl*
  end

  struct IHTMLImgElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_long_desc : UInt64
    get_long_desc : UInt64
  end

  IHTMLImgElement2_GUID = "3050f826-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLImgElement2 = LibC::GUID.new(0x3050f826_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLImgElement2
    lpVtbl : IHTMLImgElement2VTbl*
  end

  struct IHTMLImgElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_long_desc : UInt64
    get_long_desc : UInt64
    put_vrml : UInt64
    get_vrml : UInt64
    put_lowsrc : UInt64
    get_lowsrc : UInt64
    put_dynsrc : UInt64
    get_dynsrc : UInt64
  end

  IHTMLImgElement3_GUID = "30510434-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLImgElement3 = LibC::GUID.new(0x30510434_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLImgElement3
    lpVtbl : IHTMLImgElement3VTbl*
  end

  struct IHTMLImgElement4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_natural_width : UInt64
    get_natural_height : UInt64
  end

  IHTMLImgElement4_GUID = "305107f6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLImgElement4 = LibC::GUID.new(0x305107f6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLImgElement4
    lpVtbl : IHTMLImgElement4VTbl*
  end

  struct IHTMLMSImgElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ms_play_to_disabled : UInt64
    get_ms_play_to_disabled : UInt64
    put_ms_play_to_primary : UInt64
    get_ms_play_to_primary : UInt64
  end

  IHTMLMSImgElement_GUID = "30510793-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMSImgElement = LibC::GUID.new(0x30510793_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMSImgElement
    lpVtbl : IHTMLMSImgElementVTbl*
  end

  struct IHTMLImageElementFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create : UInt64
  end

  IHTMLImageElementFactory_GUID = "3050f38e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLImageElementFactory = LibC::GUID.new(0x3050f38e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLImageElementFactory
    lpVtbl : IHTMLImageElementFactoryVTbl*
  end

  struct DispHTMLImgVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLImg_GUID = "3050f51c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLImg = LibC::GUID.new(0x3050f51c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLImg
    lpVtbl : DispHTMLImgVTbl*
  end

  struct IHTMLBodyElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_background : UInt64
    get_background : UInt64
    put_bg_properties : UInt64
    get_bg_properties : UInt64
    put_left_margin : UInt64
    get_left_margin : UInt64
    put_top_margin : UInt64
    get_top_margin : UInt64
    put_right_margin : UInt64
    get_right_margin : UInt64
    put_bottom_margin : UInt64
    get_bottom_margin : UInt64
    put_no_wrap : UInt64
    get_no_wrap : UInt64
    put_bg_color : UInt64
    get_bg_color : UInt64
    put_text : UInt64
    get_text : UInt64
    put_link : UInt64
    get_link : UInt64
    put_v_link : UInt64
    get_v_link : UInt64
    put_a_link : UInt64
    get_a_link : UInt64
    put_onload : UInt64
    get_onload : UInt64
    put_onunload : UInt64
    get_onunload : UInt64
    put_scroll : UInt64
    get_scroll : UInt64
    put_onselect : UInt64
    get_onselect : UInt64
    put_onbeforeunload : UInt64
    get_onbeforeunload : UInt64
    create_text_range : UInt64
  end

  IHTMLBodyElement_GUID = "3050f1d8-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBodyElement = LibC::GUID.new(0x3050f1d8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBodyElement
    lpVtbl : IHTMLBodyElementVTbl*
  end

  struct IHTMLBodyElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_onbeforeprint : UInt64
    get_onbeforeprint : UInt64
    put_onafterprint : UInt64
    get_onafterprint : UInt64
  end

  IHTMLBodyElement2_GUID = "3050f5c5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBodyElement2 = LibC::GUID.new(0x3050f5c5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBodyElement2
    lpVtbl : IHTMLBodyElement2VTbl*
  end

  struct IHTMLBodyElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_background : UInt64
    get_background : UInt64
    put_ononline : UInt64
    get_ononline : UInt64
    put_onoffline : UInt64
    get_onoffline : UInt64
    put_onhashchange : UInt64
    get_onhashchange : UInt64
  end

  IHTMLBodyElement3_GUID = "30510422-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBodyElement3 = LibC::GUID.new(0x30510422_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBodyElement3
    lpVtbl : IHTMLBodyElement3VTbl*
  end

  struct IHTMLBodyElement4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_onmessage : UInt64
    get_onmessage : UInt64
    put_onstorage : UInt64
    get_onstorage : UInt64
  end

  IHTMLBodyElement4_GUID = "30510795-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBodyElement4 = LibC::GUID.new(0x30510795_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBodyElement4
    lpVtbl : IHTMLBodyElement4VTbl*
  end

  struct IHTMLBodyElement5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_onpopstate : UInt64
    get_onpopstate : UInt64
  end

  IHTMLBodyElement5_GUID = "30510822-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBodyElement5 = LibC::GUID.new(0x30510822_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBodyElement5
    lpVtbl : IHTMLBodyElement5VTbl*
  end

  struct DispHTMLBodyVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLBody_GUID = "3050f507-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLBody = LibC::GUID.new(0x3050f507_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLBody
    lpVtbl : DispHTMLBodyVTbl*
  end

  struct IHTMLFontElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_color : UInt64
    get_color : UInt64
    put_face : UInt64
    get_face : UInt64
    put_size : UInt64
    get_size : UInt64
  end

  IHTMLFontElement_GUID = "3050f1d9-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFontElement = LibC::GUID.new(0x3050f1d9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFontElement
    lpVtbl : IHTMLFontElementVTbl*
  end

  struct DispHTMLFontElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLFontElement_GUID = "3050f512-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLFontElement = LibC::GUID.new(0x3050f512_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLFontElement
    lpVtbl : DispHTMLFontElementVTbl*
  end

  struct HTMLAnchorEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLAnchorEvents2_GUID = "3050f610-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLAnchorEvents2 = LibC::GUID.new(0x3050f610_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLAnchorEvents2
    lpVtbl : HTMLAnchorEvents2VTbl*
  end

  struct HTMLAnchorEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLAnchorEvents_GUID = "3050f29d-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLAnchorEvents = LibC::GUID.new(0x3050f29d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLAnchorEvents
    lpVtbl : HTMLAnchorEventsVTbl*
  end

  struct IHTMLAnchorElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_href : UInt64
    get_href : UInt64
    put_target : UInt64
    get_target : UInt64
    put_rel : UInt64
    get_rel : UInt64
    put_rev : UInt64
    get_rev : UInt64
    put_urn : UInt64
    get_urn : UInt64
    put_methods : UInt64
    get_methods : UInt64
    put_name : UInt64
    get_name : UInt64
    put_host : UInt64
    get_host : UInt64
    put_hostname : UInt64
    get_hostname : UInt64
    put_pathname : UInt64
    get_pathname : UInt64
    put_port : UInt64
    get_port : UInt64
    put_protocol : UInt64
    get_protocol : UInt64
    put_search : UInt64
    get_search : UInt64
    put_hash : UInt64
    get_hash : UInt64
    put_onblur : UInt64
    get_onblur : UInt64
    put_onfocus : UInt64
    get_onfocus : UInt64
    put_access_key : UInt64
    get_access_key : UInt64
    get_protocol_long : UInt64
    get_mime_type : UInt64
    get_name_prop : UInt64
    put_tab_index : UInt64
    get_tab_index : UInt64
    focus : UInt64
    blur : UInt64
  end

  IHTMLAnchorElement_GUID = "3050f1da-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAnchorElement = LibC::GUID.new(0x3050f1da_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAnchorElement
    lpVtbl : IHTMLAnchorElementVTbl*
  end

  struct IHTMLAnchorElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_charset : UInt64
    get_charset : UInt64
    put_coords : UInt64
    get_coords : UInt64
    put_hreflang : UInt64
    get_hreflang : UInt64
    put_shape : UInt64
    get_shape : UInt64
    put_type : UInt64
    get_type : UInt64
  end

  IHTMLAnchorElement2_GUID = "3050f825-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAnchorElement2 = LibC::GUID.new(0x3050f825_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAnchorElement2
    lpVtbl : IHTMLAnchorElement2VTbl*
  end

  struct IHTMLAnchorElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_shape : UInt64
    get_shape : UInt64
    put_coords : UInt64
    get_coords : UInt64
    put_href : UInt64
    get_href : UInt64
  end

  IHTMLAnchorElement3_GUID = "3051041d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAnchorElement3 = LibC::GUID.new(0x3051041d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAnchorElement3
    lpVtbl : IHTMLAnchorElement3VTbl*
  end

  struct DispHTMLAnchorElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLAnchorElement_GUID = "3050f502-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLAnchorElement = LibC::GUID.new(0x3050f502_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLAnchorElement
    lpVtbl : DispHTMLAnchorElementVTbl*
  end

  struct HTMLLabelEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLLabelEvents2_GUID = "3050f61c-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLLabelEvents2 = LibC::GUID.new(0x3050f61c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLLabelEvents2
    lpVtbl : HTMLLabelEvents2VTbl*
  end

  struct HTMLLabelEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLLabelEvents_GUID = "3050f329-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLLabelEvents = LibC::GUID.new(0x3050f329_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLLabelEvents
    lpVtbl : HTMLLabelEventsVTbl*
  end

  struct IHTMLLabelElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_html_for : UInt64
    get_html_for : UInt64
    put_access_key : UInt64
    get_access_key : UInt64
  end

  IHTMLLabelElement_GUID = "3050f32a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLLabelElement = LibC::GUID.new(0x3050f32a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLLabelElement
    lpVtbl : IHTMLLabelElementVTbl*
  end

  struct IHTMLLabelElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_form : UInt64
  end

  IHTMLLabelElement2_GUID = "3050f832-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLLabelElement2 = LibC::GUID.new(0x3050f832_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLLabelElement2
    lpVtbl : IHTMLLabelElement2VTbl*
  end

  struct DispHTMLLabelElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLLabelElement_GUID = "3050f522-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLLabelElement = LibC::GUID.new(0x3050f522_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLLabelElement
    lpVtbl : DispHTMLLabelElementVTbl*
  end

  struct IHTMLListElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  IHTMLListElement_GUID = "3050f20e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLListElement = LibC::GUID.new(0x3050f20e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLListElement
    lpVtbl : IHTMLListElementVTbl*
  end

  struct IHTMLListElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_compact : UInt64
    get_compact : UInt64
  end

  IHTMLListElement2_GUID = "3050f822-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLListElement2 = LibC::GUID.new(0x3050f822_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLListElement2
    lpVtbl : IHTMLListElement2VTbl*
  end

  struct DispHTMLListElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLListElement_GUID = "3050f525-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLListElement = LibC::GUID.new(0x3050f525_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLListElement
    lpVtbl : DispHTMLListElementVTbl*
  end

  struct IHTMLUListElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_compact : UInt64
    get_compact : UInt64
    put_type : UInt64
    get_type : UInt64
  end

  IHTMLUListElement_GUID = "3050f1dd-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLUListElement = LibC::GUID.new(0x3050f1dd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLUListElement
    lpVtbl : IHTMLUListElementVTbl*
  end

  struct DispHTMLUListElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLUListElement_GUID = "3050f538-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLUListElement = LibC::GUID.new(0x3050f538_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLUListElement
    lpVtbl : DispHTMLUListElementVTbl*
  end

  struct IHTMLOListElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_compact : UInt64
    get_compact : UInt64
    put_start : UInt64
    get_start : UInt64
    put_type : UInt64
    get_type : UInt64
  end

  IHTMLOListElement_GUID = "3050f1de-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLOListElement = LibC::GUID.new(0x3050f1de_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLOListElement
    lpVtbl : IHTMLOListElementVTbl*
  end

  struct DispHTMLOListElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLOListElement_GUID = "3050f52a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLOListElement = LibC::GUID.new(0x3050f52a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLOListElement
    lpVtbl : DispHTMLOListElementVTbl*
  end

  struct IHTMLLIElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_type : UInt64
    get_type : UInt64
    put_value : UInt64
    get_value : UInt64
  end

  IHTMLLIElement_GUID = "3050f1e0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLLIElement = LibC::GUID.new(0x3050f1e0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLLIElement
    lpVtbl : IHTMLLIElementVTbl*
  end

  struct DispHTMLLIElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLLIElement_GUID = "3050f523-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLLIElement = LibC::GUID.new(0x3050f523_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLLIElement
    lpVtbl : DispHTMLLIElementVTbl*
  end

  struct IHTMLBlockElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_clear : UInt64
    get_clear : UInt64
  end

  IHTMLBlockElement_GUID = "3050f208-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBlockElement = LibC::GUID.new(0x3050f208_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBlockElement
    lpVtbl : IHTMLBlockElementVTbl*
  end

  struct IHTMLBlockElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_cite : UInt64
    get_cite : UInt64
    put_width : UInt64
    get_width : UInt64
  end

  IHTMLBlockElement2_GUID = "3050f823-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBlockElement2 = LibC::GUID.new(0x3050f823_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBlockElement2
    lpVtbl : IHTMLBlockElement2VTbl*
  end

  struct IHTMLBlockElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_cite : UInt64
    get_cite : UInt64
  end

  IHTMLBlockElement3_GUID = "30510494-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBlockElement3 = LibC::GUID.new(0x30510494_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBlockElement3
    lpVtbl : IHTMLBlockElement3VTbl*
  end

  struct DispHTMLBlockElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLBlockElement_GUID = "3050f506-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLBlockElement = LibC::GUID.new(0x3050f506_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLBlockElement
    lpVtbl : DispHTMLBlockElementVTbl*
  end

  struct IHTMLDivElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
    put_no_wrap : UInt64
    get_no_wrap : UInt64
  end

  IHTMLDivElement_GUID = "3050f200-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDivElement = LibC::GUID.new(0x3050f200_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDivElement
    lpVtbl : IHTMLDivElementVTbl*
  end

  struct DispHTMLDivElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDivElement_GUID = "3050f50c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDivElement = LibC::GUID.new(0x3050f50c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDivElement
    lpVtbl : DispHTMLDivElementVTbl*
  end

  struct IHTMLDDElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_no_wrap : UInt64
    get_no_wrap : UInt64
  end

  IHTMLDDElement_GUID = "3050f1f2-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDDElement = LibC::GUID.new(0x3050f1f2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDDElement
    lpVtbl : IHTMLDDElementVTbl*
  end

  struct DispHTMLDDElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDDElement_GUID = "3050f50b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDDElement = LibC::GUID.new(0x3050f50b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDDElement
    lpVtbl : DispHTMLDDElementVTbl*
  end

  struct IHTMLDTElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_no_wrap : UInt64
    get_no_wrap : UInt64
  end

  IHTMLDTElement_GUID = "3050f1f3-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDTElement = LibC::GUID.new(0x3050f1f3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDTElement
    lpVtbl : IHTMLDTElementVTbl*
  end

  struct DispHTMLDTElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDTElement_GUID = "3050f50d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDTElement = LibC::GUID.new(0x3050f50d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDTElement
    lpVtbl : DispHTMLDTElementVTbl*
  end

  struct IHTMLBRElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_clear : UInt64
    get_clear : UInt64
  end

  IHTMLBRElement_GUID = "3050f1f0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBRElement = LibC::GUID.new(0x3050f1f0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBRElement
    lpVtbl : IHTMLBRElementVTbl*
  end

  struct DispHTMLBRElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLBRElement_GUID = "3050f53a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLBRElement = LibC::GUID.new(0x3050f53a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLBRElement
    lpVtbl : DispHTMLBRElementVTbl*
  end

  struct IHTMLDListElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_compact : UInt64
    get_compact : UInt64
  end

  IHTMLDListElement_GUID = "3050f1f1-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDListElement = LibC::GUID.new(0x3050f1f1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDListElement
    lpVtbl : IHTMLDListElementVTbl*
  end

  struct DispHTMLDListElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDListElement_GUID = "3050f53b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDListElement = LibC::GUID.new(0x3050f53b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDListElement
    lpVtbl : DispHTMLDListElementVTbl*
  end

  struct IHTMLHRElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
    put_color : UInt64
    get_color : UInt64
    put_no_shade : UInt64
    get_no_shade : UInt64
    put_width : UInt64
    get_width : UInt64
    put_size : UInt64
    get_size : UInt64
  end

  IHTMLHRElement_GUID = "3050f1f4-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLHRElement = LibC::GUID.new(0x3050f1f4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLHRElement
    lpVtbl : IHTMLHRElementVTbl*
  end

  struct DispHTMLHRElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLHRElement_GUID = "3050f53d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLHRElement = LibC::GUID.new(0x3050f53d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLHRElement
    lpVtbl : DispHTMLHRElementVTbl*
  end

  struct IHTMLParaElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
  end

  IHTMLParaElement_GUID = "3050f1f5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLParaElement = LibC::GUID.new(0x3050f1f5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLParaElement
    lpVtbl : IHTMLParaElementVTbl*
  end

  struct DispHTMLParaElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLParaElement_GUID = "3050f52c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLParaElement = LibC::GUID.new(0x3050f52c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLParaElement
    lpVtbl : DispHTMLParaElementVTbl*
  end

  struct IHTMLElementCollection2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    urns : UInt64
  end

  IHTMLElementCollection2_GUID = "3050f5ee-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElementCollection2 = LibC::GUID.new(0x3050f5ee_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElementCollection2
    lpVtbl : IHTMLElementCollection2VTbl*
  end

  struct IHTMLElementCollection3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    named_item : UInt64
  end

  IHTMLElementCollection3_GUID = "3050f835-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElementCollection3 = LibC::GUID.new(0x3050f835_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElementCollection3
    lpVtbl : IHTMLElementCollection3VTbl*
  end

  struct IHTMLElementCollection4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    item : UInt64
    named_item : UInt64
  end

  IHTMLElementCollection4_GUID = "30510425-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLElementCollection4 = LibC::GUID.new(0x30510425_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLElementCollection4
    lpVtbl : IHTMLElementCollection4VTbl*
  end

  struct DispHTMLElementCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLElementCollection_GUID = "3050f56b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLElementCollection = LibC::GUID.new(0x3050f56b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLElementCollection
    lpVtbl : DispHTMLElementCollectionVTbl*
  end

  struct IHTMLHeaderElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
  end

  IHTMLHeaderElement_GUID = "3050f1f6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLHeaderElement = LibC::GUID.new(0x3050f1f6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLHeaderElement
    lpVtbl : IHTMLHeaderElementVTbl*
  end

  struct DispHTMLHeaderElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLHeaderElement_GUID = "3050f515-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLHeaderElement = LibC::GUID.new(0x3050f515_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLHeaderElement
    lpVtbl : DispHTMLHeaderElementVTbl*
  end

  struct HTMLSelectElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLSelectElementEvents2_GUID = "3050f622-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLSelectElementEvents2 = LibC::GUID.new(0x3050f622_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLSelectElementEvents2
    lpVtbl : HTMLSelectElementEvents2VTbl*
  end

  struct HTMLSelectElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLSelectElementEvents_GUID = "3050f302-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLSelectElementEvents = LibC::GUID.new(0x3050f302_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLSelectElementEvents
    lpVtbl : HTMLSelectElementEventsVTbl*
  end

  struct IHTMLOptionElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_selected : UInt64
    get_selected : UInt64
    put_value : UInt64
    get_value : UInt64
    put_default_selected : UInt64
    get_default_selected : UInt64
    put_index : UInt64
    get_index : UInt64
    put_text : UInt64
    get_text : UInt64
    get_form : UInt64
  end

  IHTMLOptionElement_GUID = "3050f211-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLOptionElement = LibC::GUID.new(0x3050f211_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLOptionElement
    lpVtbl : IHTMLOptionElementVTbl*
  end

  struct IHTMLSelectElementExVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show_dropdown : UInt64
    set_select_ex_flags : UInt64
    get_select_ex_flags : UInt64
    get_dropdown_open : UInt64
  end

  IHTMLSelectElementEx_GUID = "3050f2d1-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSelectElementEx = LibC::GUID.new(0x3050f2d1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSelectElementEx
    lpVtbl : IHTMLSelectElementExVTbl*
  end

  struct IHTMLSelectElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_size : UInt64
    get_size : UInt64
    put_multiple : UInt64
    get_multiple : UInt64
    put_name : UInt64
    get_name : UInt64
    get_options : UInt64
    put_onchange : UInt64
    get_onchange : UInt64
    put_selected_index : UInt64
    get_selected_index : UInt64
    get_type : UInt64
    put_value : UInt64
    get_value : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    get_form : UInt64
    add : UInt64
    remove : UInt64
    put_length : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
    tags : UInt64
  end

  IHTMLSelectElement_GUID = "3050f244-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSelectElement = LibC::GUID.new(0x3050f244_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSelectElement
    lpVtbl : IHTMLSelectElementVTbl*
  end

  struct IHTMLSelectElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    urns : UInt64
  end

  IHTMLSelectElement2_GUID = "3050f5ed-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSelectElement2 = LibC::GUID.new(0x3050f5ed_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSelectElement2
    lpVtbl : IHTMLSelectElement2VTbl*
  end

  struct IHTMLSelectElement4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    named_item : UInt64
  end

  IHTMLSelectElement4_GUID = "3050f838-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSelectElement4 = LibC::GUID.new(0x3050f838_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSelectElement4
    lpVtbl : IHTMLSelectElement4VTbl*
  end

  struct IHTMLSelectElement5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    add : UInt64
  end

  IHTMLSelectElement5_GUID = "3051049d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSelectElement5 = LibC::GUID.new(0x3051049d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSelectElement5
    lpVtbl : IHTMLSelectElement5VTbl*
  end

  struct IHTMLSelectElement6VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    add : UInt64
    put_value : UInt64
    get_value : UInt64
  end

  IHTMLSelectElement6_GUID = "30510760-98b6-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSelectElement6 = LibC::GUID.new(0x30510760_u32, 0x98b6_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSelectElement6
    lpVtbl : IHTMLSelectElement6VTbl*
  end

  struct DispHTMLSelectElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLSelectElement_GUID = "3050f531-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLSelectElement = LibC::GUID.new(0x3050f531_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLSelectElement
    lpVtbl : DispHTMLSelectElementVTbl*
  end

  struct DispHTMLWndSelectElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLWndSelectElement_GUID = "3050f597-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLWndSelectElement = LibC::GUID.new(0x3050f597_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLWndSelectElement
    lpVtbl : DispHTMLWndSelectElementVTbl*
  end

  struct IHTMLSelectionObjectVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create_range : UInt64
    empty : UInt64
    clear : UInt64
    get_type : UInt64
  end

  IHTMLSelectionObject_GUID = "3050f25a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSelectionObject = LibC::GUID.new(0x3050f25a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSelectionObject
    lpVtbl : IHTMLSelectionObjectVTbl*
  end

  struct IHTMLSelectionObject2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create_range_collection : UInt64
    get_type_detail : UInt64
  end

  IHTMLSelectionObject2_GUID = "3050f7ec-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSelectionObject2 = LibC::GUID.new(0x3050f7ec_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSelectionObject2
    lpVtbl : IHTMLSelectionObject2VTbl*
  end

  struct IHTMLSelectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_anchor_node : UInt64
    get_anchor_offset : UInt64
    get_focus_node : UInt64
    get_focus_offset : UInt64
    get_is_collapsed : UInt64
    collapse : UInt64
    collapse_to_start : UInt64
    collapse_to_end : UInt64
    select_all_children : UInt64
    delete_from_document : UInt64
    get_range_count : UInt64
    get_range_at : UInt64
    add_range : UInt64
    remove_range : UInt64
    remove_all_ranges : UInt64
    to_string : UInt64
  end

  IHTMLSelection_GUID = "305104b6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSelection = LibC::GUID.new(0x305104b6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSelection
    lpVtbl : IHTMLSelectionVTbl*
  end

  struct IHTMLOptionElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_label : UInt64
    get_label : UInt64
  end

  IHTMLOptionElement3_GUID = "3050f820-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLOptionElement3 = LibC::GUID.new(0x3050f820_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLOptionElement3
    lpVtbl : IHTMLOptionElement3VTbl*
  end

  struct IHTMLOptionElement4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_value : UInt64
    get_value : UInt64
  end

  IHTMLOptionElement4_GUID = "305107b4-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLOptionElement4 = LibC::GUID.new(0x305107b4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLOptionElement4
    lpVtbl : IHTMLOptionElement4VTbl*
  end

  struct IHTMLOptionElementFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create : UInt64
  end

  IHTMLOptionElementFactory_GUID = "3050f38c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLOptionElementFactory = LibC::GUID.new(0x3050f38c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLOptionElementFactory
    lpVtbl : IHTMLOptionElementFactoryVTbl*
  end

  struct DispHTMLOptionElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLOptionElement_GUID = "3050f52b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLOptionElement = LibC::GUID.new(0x3050f52b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLOptionElement
    lpVtbl : DispHTMLOptionElementVTbl*
  end

  struct DispHTMLWndOptionElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLWndOptionElement_GUID = "3050f598-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLWndOptionElement = LibC::GUID.new(0x3050f598_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLWndOptionElement
    lpVtbl : DispHTMLWndOptionElementVTbl*
  end

  struct HTMLButtonElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLButtonElementEvents2_GUID = "3050f617-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLButtonElementEvents2 = LibC::GUID.new(0x3050f617_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLButtonElementEvents2
    lpVtbl : HTMLButtonElementEvents2VTbl*
  end

  struct HTMLButtonElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLButtonElementEvents_GUID = "3050f2b3-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLButtonElementEvents = LibC::GUID.new(0x3050f2b3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLButtonElementEvents
    lpVtbl : HTMLButtonElementEventsVTbl*
  end

  struct HTMLInputTextElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLInputTextElementEvents2_GUID = "3050f618-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLInputTextElementEvents2 = LibC::GUID.new(0x3050f618_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLInputTextElementEvents2
    lpVtbl : HTMLInputTextElementEvents2VTbl*
  end

  struct HTMLOptionButtonElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLOptionButtonElementEvents2_GUID = "3050f619-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLOptionButtonElementEvents2 = LibC::GUID.new(0x3050f619_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLOptionButtonElementEvents2
    lpVtbl : HTMLOptionButtonElementEvents2VTbl*
  end

  struct HTMLInputFileElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLInputFileElementEvents2_GUID = "3050f61a-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLInputFileElementEvents2 = LibC::GUID.new(0x3050f61a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLInputFileElementEvents2
    lpVtbl : HTMLInputFileElementEvents2VTbl*
  end

  struct HTMLInputImageEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLInputImageEvents2_GUID = "3050f61b-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLInputImageEvents2 = LibC::GUID.new(0x3050f61b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLInputImageEvents2
    lpVtbl : HTMLInputImageEvents2VTbl*
  end

  struct HTMLInputTextElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLInputTextElementEvents_GUID = "3050f2a7-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLInputTextElementEvents = LibC::GUID.new(0x3050f2a7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLInputTextElementEvents
    lpVtbl : HTMLInputTextElementEventsVTbl*
  end

  struct HTMLOptionButtonElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLOptionButtonElementEvents_GUID = "3050f2bd-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLOptionButtonElementEvents = LibC::GUID.new(0x3050f2bd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLOptionButtonElementEvents
    lpVtbl : HTMLOptionButtonElementEventsVTbl*
  end

  struct HTMLInputFileElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLInputFileElementEvents_GUID = "3050f2af-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLInputFileElementEvents = LibC::GUID.new(0x3050f2af_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLInputFileElementEvents
    lpVtbl : HTMLInputFileElementEventsVTbl*
  end

  struct HTMLInputImageEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLInputImageEvents_GUID = "3050f2c3-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLInputImageEvents = LibC::GUID.new(0x3050f2c3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLInputImageEvents
    lpVtbl : HTMLInputImageEventsVTbl*
  end

  struct IHTMLInputElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_type : UInt64
    get_type : UInt64
    put_value : UInt64
    get_value : UInt64
    put_name : UInt64
    get_name : UInt64
    put_status : UInt64
    get_status : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    get_form : UInt64
    put_size : UInt64
    get_size : UInt64
    put_max_length : UInt64
    get_max_length : UInt64
    select : UInt64
    put_onchange : UInt64
    get_onchange : UInt64
    put_onselect : UInt64
    get_onselect : UInt64
    put_default_value : UInt64
    get_default_value : UInt64
    put_read_only : UInt64
    get_read_only : UInt64
    create_text_range : UInt64
    put_indeterminate : UInt64
    get_indeterminate : UInt64
    put_default_checked : UInt64
    get_default_checked : UInt64
    put_checked : UInt64
    get_checked : UInt64
    put_border : UInt64
    get_border : UInt64
    put_vspace : UInt64
    get_vspace : UInt64
    put_hspace : UInt64
    get_hspace : UInt64
    put_alt : UInt64
    get_alt : UInt64
    put_src : UInt64
    get_src : UInt64
    put_lowsrc : UInt64
    get_lowsrc : UInt64
    put_vrml : UInt64
    get_vrml : UInt64
    put_dynsrc : UInt64
    get_dynsrc : UInt64
    get_ready_state : UInt64
    get_complete : UInt64
    put_loop : UInt64
    get_loop : UInt64
    put_align : UInt64
    get_align : UInt64
    put_onload : UInt64
    get_onload : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    put_onabort : UInt64
    get_onabort : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    put_start : UInt64
    get_start : UInt64
  end

  IHTMLInputElement_GUID = "3050f5d2-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLInputElement = LibC::GUID.new(0x3050f5d2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLInputElement
    lpVtbl : IHTMLInputElementVTbl*
  end

  struct IHTMLInputElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_accept : UInt64
    get_accept : UInt64
    put_use_map : UInt64
    get_use_map : UInt64
  end

  IHTMLInputElement2_GUID = "3050f821-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLInputElement2 = LibC::GUID.new(0x3050f821_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLInputElement2
    lpVtbl : IHTMLInputElement2VTbl*
  end

  struct IHTMLInputElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_src : UInt64
    get_src : UInt64
    put_lowsrc : UInt64
    get_lowsrc : UInt64
    put_vrml : UInt64
    get_vrml : UInt64
    put_dynsrc : UInt64
    get_dynsrc : UInt64
  end

  IHTMLInputElement3_GUID = "30510435-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLInputElement3 = LibC::GUID.new(0x30510435_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLInputElement3
    lpVtbl : IHTMLInputElement3VTbl*
  end

  struct IHTMLInputButtonElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_type : UInt64
    put_value : UInt64
    get_value : UInt64
    put_name : UInt64
    get_name : UInt64
    put_status : UInt64
    get_status : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    get_form : UInt64
    create_text_range : UInt64
  end

  IHTMLInputButtonElement_GUID = "3050f2b2-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLInputButtonElement = LibC::GUID.new(0x3050f2b2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLInputButtonElement
    lpVtbl : IHTMLInputButtonElementVTbl*
  end

  struct IHTMLInputHiddenElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_type : UInt64
    put_value : UInt64
    get_value : UInt64
    put_name : UInt64
    get_name : UInt64
    put_status : UInt64
    get_status : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    get_form : UInt64
    create_text_range : UInt64
  end

  IHTMLInputHiddenElement_GUID = "3050f2a4-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLInputHiddenElement = LibC::GUID.new(0x3050f2a4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLInputHiddenElement
    lpVtbl : IHTMLInputHiddenElementVTbl*
  end

  struct IHTMLInputTextElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_type : UInt64
    put_value : UInt64
    get_value : UInt64
    put_name : UInt64
    get_name : UInt64
    put_status : UInt64
    get_status : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    get_form : UInt64
    put_default_value : UInt64
    get_default_value : UInt64
    put_size : UInt64
    get_size : UInt64
    put_max_length : UInt64
    get_max_length : UInt64
    select : UInt64
    put_onchange : UInt64
    get_onchange : UInt64
    put_onselect : UInt64
    get_onselect : UInt64
    put_read_only : UInt64
    get_read_only : UInt64
    create_text_range : UInt64
  end

  IHTMLInputTextElement_GUID = "3050f2a6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLInputTextElement = LibC::GUID.new(0x3050f2a6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLInputTextElement
    lpVtbl : IHTMLInputTextElementVTbl*
  end

  struct IHTMLInputTextElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_selection_start : UInt64
    get_selection_start : UInt64
    put_selection_end : UInt64
    get_selection_end : UInt64
    set_selection_range : UInt64
  end

  IHTMLInputTextElement2_GUID = "3050f2d2-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLInputTextElement2 = LibC::GUID.new(0x3050f2d2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLInputTextElement2
    lpVtbl : IHTMLInputTextElement2VTbl*
  end

  struct IHTMLInputFileElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_type : UInt64
    put_name : UInt64
    get_name : UInt64
    put_status : UInt64
    get_status : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    get_form : UInt64
    put_size : UInt64
    get_size : UInt64
    put_max_length : UInt64
    get_max_length : UInt64
    select : UInt64
    put_onchange : UInt64
    get_onchange : UInt64
    put_onselect : UInt64
    get_onselect : UInt64
    put_value : UInt64
    get_value : UInt64
  end

  IHTMLInputFileElement_GUID = "3050f2ad-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLInputFileElement = LibC::GUID.new(0x3050f2ad_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLInputFileElement
    lpVtbl : IHTMLInputFileElementVTbl*
  end

  struct IHTMLOptionButtonElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_value : UInt64
    get_value : UInt64
    get_type : UInt64
    put_name : UInt64
    get_name : UInt64
    put_checked : UInt64
    get_checked : UInt64
    put_default_checked : UInt64
    get_default_checked : UInt64
    put_onchange : UInt64
    get_onchange : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    put_status : UInt64
    get_status : UInt64
    put_indeterminate : UInt64
    get_indeterminate : UInt64
    get_form : UInt64
  end

  IHTMLOptionButtonElement_GUID = "3050f2bc-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLOptionButtonElement = LibC::GUID.new(0x3050f2bc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLOptionButtonElement
    lpVtbl : IHTMLOptionButtonElementVTbl*
  end

  struct IHTMLInputImageVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_type : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    put_border : UInt64
    get_border : UInt64
    put_vspace : UInt64
    get_vspace : UInt64
    put_hspace : UInt64
    get_hspace : UInt64
    put_alt : UInt64
    get_alt : UInt64
    put_src : UInt64
    get_src : UInt64
    put_lowsrc : UInt64
    get_lowsrc : UInt64
    put_vrml : UInt64
    get_vrml : UInt64
    put_dynsrc : UInt64
    get_dynsrc : UInt64
    get_ready_state : UInt64
    get_complete : UInt64
    put_loop : UInt64
    get_loop : UInt64
    put_align : UInt64
    get_align : UInt64
    put_onload : UInt64
    get_onload : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    put_onabort : UInt64
    get_onabort : UInt64
    put_name : UInt64
    get_name : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    put_start : UInt64
    get_start : UInt64
  end

  IHTMLInputImage_GUID = "3050f2c2-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLInputImage = LibC::GUID.new(0x3050f2c2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLInputImage
    lpVtbl : IHTMLInputImageVTbl*
  end

  struct IHTMLInputRangeElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    get_type : UInt64
    put_alt : UInt64
    get_alt : UInt64
    put_name : UInt64
    get_name : UInt64
    put_value : UInt64
    get_value : UInt64
    put_min : UInt64
    get_min : UInt64
    put_max : UInt64
    get_max : UInt64
    put_step : UInt64
    get_step : UInt64
    put_value_as_number : UInt64
    get_value_as_number : UInt64
    step_up : UInt64
    step_down : UInt64
  end

  IHTMLInputRangeElement_GUID = "3050f2d4-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLInputRangeElement = LibC::GUID.new(0x3050f2d4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLInputRangeElement
    lpVtbl : IHTMLInputRangeElementVTbl*
  end

  struct DispHTMLInputElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLInputElement_GUID = "3050f57d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLInputElement = LibC::GUID.new(0x3050f57d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLInputElement
    lpVtbl : DispHTMLInputElementVTbl*
  end

  struct IHTMLTextAreaElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_type : UInt64
    put_value : UInt64
    get_value : UInt64
    put_name : UInt64
    get_name : UInt64
    put_status : UInt64
    get_status : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    get_form : UInt64
    put_default_value : UInt64
    get_default_value : UInt64
    select : UInt64
    put_onchange : UInt64
    get_onchange : UInt64
    put_onselect : UInt64
    get_onselect : UInt64
    put_read_only : UInt64
    get_read_only : UInt64
    put_rows : UInt64
    get_rows : UInt64
    put_cols : UInt64
    get_cols : UInt64
    put_wrap : UInt64
    get_wrap : UInt64
    create_text_range : UInt64
  end

  IHTMLTextAreaElement_GUID = "3050f2aa-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTextAreaElement = LibC::GUID.new(0x3050f2aa_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTextAreaElement
    lpVtbl : IHTMLTextAreaElementVTbl*
  end

  struct IHTMLTextAreaElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_selection_start : UInt64
    get_selection_start : UInt64
    put_selection_end : UInt64
    get_selection_end : UInt64
    set_selection_range : UInt64
  end

  IHTMLTextAreaElement2_GUID = "3050f2d3-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTextAreaElement2 = LibC::GUID.new(0x3050f2d3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTextAreaElement2
    lpVtbl : IHTMLTextAreaElement2VTbl*
  end

  struct DispHTMLTextAreaElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLTextAreaElement_GUID = "3050f521-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLTextAreaElement = LibC::GUID.new(0x3050f521_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLTextAreaElement
    lpVtbl : DispHTMLTextAreaElementVTbl*
  end

  struct DispHTMLRichtextElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLRichtextElement_GUID = "3050f54d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLRichtextElement = LibC::GUID.new(0x3050f54d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLRichtextElement
    lpVtbl : DispHTMLRichtextElementVTbl*
  end

  struct IHTMLButtonElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_type : UInt64
    put_value : UInt64
    get_value : UInt64
    put_name : UInt64
    get_name : UInt64
    put_status : UInt64
    get_status : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    get_form : UInt64
    create_text_range : UInt64
  end

  IHTMLButtonElement_GUID = "3050f2bb-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLButtonElement = LibC::GUID.new(0x3050f2bb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLButtonElement
    lpVtbl : IHTMLButtonElementVTbl*
  end

  struct IHTMLButtonElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_type : UInt64
    get_type : UInt64
  end

  IHTMLButtonElement2_GUID = "305106f3-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLButtonElement2 = LibC::GUID.new(0x305106f3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLButtonElement2
    lpVtbl : IHTMLButtonElement2VTbl*
  end

  struct DispHTMLButtonElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLButtonElement_GUID = "3050f51f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLButtonElement = LibC::GUID.new(0x3050f51f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLButtonElement
    lpVtbl : DispHTMLButtonElementVTbl*
  end

  struct HTMLMarqueeElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLMarqueeElementEvents2_GUID = "3050f61f-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLMarqueeElementEvents2 = LibC::GUID.new(0x3050f61f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLMarqueeElementEvents2
    lpVtbl : HTMLMarqueeElementEvents2VTbl*
  end

  struct HTMLMarqueeElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLMarqueeElementEvents_GUID = "3050f2b8-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLMarqueeElementEvents = LibC::GUID.new(0x3050f2b8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLMarqueeElementEvents
    lpVtbl : HTMLMarqueeElementEventsVTbl*
  end

  struct IHTMLMarqueeElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_bg_color : UInt64
    get_bg_color : UInt64
    put_scroll_delay : UInt64
    get_scroll_delay : UInt64
    put_direction : UInt64
    get_direction : UInt64
    put_behavior : UInt64
    get_behavior : UInt64
    put_scroll_amount : UInt64
    get_scroll_amount : UInt64
    put_loop : UInt64
    get_loop : UInt64
    put_vspace : UInt64
    get_vspace : UInt64
    put_hspace : UInt64
    get_hspace : UInt64
    put_onfinish : UInt64
    get_onfinish : UInt64
    put_onstart : UInt64
    get_onstart : UInt64
    put_onbounce : UInt64
    get_onbounce : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    put_true_speed : UInt64
    get_true_speed : UInt64
    start : UInt64
    stop : UInt64
  end

  IHTMLMarqueeElement_GUID = "3050f2b5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMarqueeElement = LibC::GUID.new(0x3050f2b5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMarqueeElement
    lpVtbl : IHTMLMarqueeElementVTbl*
  end

  struct DispHTMLMarqueeElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLMarqueeElement_GUID = "3050f527-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLMarqueeElement = LibC::GUID.new(0x3050f527_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLMarqueeElement
    lpVtbl : DispHTMLMarqueeElementVTbl*
  end

  struct IHTMLHtmlElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_version : UInt64
    get_version : UInt64
  end

  IHTMLHtmlElement_GUID = "3050f81c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLHtmlElement = LibC::GUID.new(0x3050f81c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLHtmlElement
    lpVtbl : IHTMLHtmlElementVTbl*
  end

  struct IHTMLHeadElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_profile : UInt64
    get_profile : UInt64
  end

  IHTMLHeadElement_GUID = "3050f81d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLHeadElement = LibC::GUID.new(0x3050f81d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLHeadElement
    lpVtbl : IHTMLHeadElementVTbl*
  end

  struct IHTMLHeadElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_profile : UInt64
    get_profile : UInt64
  end

  IHTMLHeadElement2_GUID = "3051042f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLHeadElement2 = LibC::GUID.new(0x3051042f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLHeadElement2
    lpVtbl : IHTMLHeadElement2VTbl*
  end

  struct IHTMLTitleElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_text : UInt64
    get_text : UInt64
  end

  IHTMLTitleElement_GUID = "3050f322-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTitleElement = LibC::GUID.new(0x3050f322_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTitleElement
    lpVtbl : IHTMLTitleElementVTbl*
  end

  struct IHTMLMetaElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_http_equiv : UInt64
    get_http_equiv : UInt64
    put_content : UInt64
    get_content : UInt64
    put_name : UInt64
    get_name : UInt64
    put_url : UInt64
    get_url : UInt64
    put_charset : UInt64
    get_charset : UInt64
  end

  IHTMLMetaElement_GUID = "3050f203-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMetaElement = LibC::GUID.new(0x3050f203_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMetaElement
    lpVtbl : IHTMLMetaElementVTbl*
  end

  struct IHTMLMetaElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_scheme : UInt64
    get_scheme : UInt64
  end

  IHTMLMetaElement2_GUID = "3050f81f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMetaElement2 = LibC::GUID.new(0x3050f81f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMetaElement2
    lpVtbl : IHTMLMetaElement2VTbl*
  end

  struct IHTMLMetaElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_url : UInt64
    get_url : UInt64
  end

  IHTMLMetaElement3_GUID = "30510495-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMetaElement3 = LibC::GUID.new(0x30510495_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMetaElement3
    lpVtbl : IHTMLMetaElement3VTbl*
  end

  struct IHTMLBaseElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_href : UInt64
    get_href : UInt64
    put_target : UInt64
    get_target : UInt64
  end

  IHTMLBaseElement_GUID = "3050f204-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBaseElement = LibC::GUID.new(0x3050f204_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBaseElement
    lpVtbl : IHTMLBaseElementVTbl*
  end

  struct IHTMLBaseElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_href : UInt64
    get_href : UInt64
  end

  IHTMLBaseElement2_GUID = "30510420-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBaseElement2 = LibC::GUID.new(0x30510420_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBaseElement2
    lpVtbl : IHTMLBaseElement2VTbl*
  end

  struct DispHTMLHtmlElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLHtmlElement_GUID = "3050f560-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLHtmlElement = LibC::GUID.new(0x3050f560_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLHtmlElement
    lpVtbl : DispHTMLHtmlElementVTbl*
  end

  struct DispHTMLHeadElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLHeadElement_GUID = "3050f561-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLHeadElement = LibC::GUID.new(0x3050f561_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLHeadElement
    lpVtbl : DispHTMLHeadElementVTbl*
  end

  struct DispHTMLTitleElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLTitleElement_GUID = "3050f516-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLTitleElement = LibC::GUID.new(0x3050f516_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLTitleElement
    lpVtbl : DispHTMLTitleElementVTbl*
  end

  struct DispHTMLMetaElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLMetaElement_GUID = "3050f517-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLMetaElement = LibC::GUID.new(0x3050f517_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLMetaElement
    lpVtbl : DispHTMLMetaElementVTbl*
  end

  struct DispHTMLBaseElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLBaseElement_GUID = "3050f518-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLBaseElement = LibC::GUID.new(0x3050f518_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLBaseElement
    lpVtbl : DispHTMLBaseElementVTbl*
  end

  struct IHTMLIsIndexElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_prompt : UInt64
    get_prompt : UInt64
    put_action : UInt64
    get_action : UInt64
  end

  IHTMLIsIndexElement_GUID = "3050f206-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLIsIndexElement = LibC::GUID.new(0x3050f206_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLIsIndexElement
    lpVtbl : IHTMLIsIndexElementVTbl*
  end

  struct IHTMLIsIndexElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_form : UInt64
  end

  IHTMLIsIndexElement2_GUID = "3050f82f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLIsIndexElement2 = LibC::GUID.new(0x3050f82f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLIsIndexElement2
    lpVtbl : IHTMLIsIndexElement2VTbl*
  end

  struct IHTMLNextIdElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_n : UInt64
    get_n : UInt64
  end

  IHTMLNextIdElement_GUID = "3050f207-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLNextIdElement = LibC::GUID.new(0x3050f207_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLNextIdElement
    lpVtbl : IHTMLNextIdElementVTbl*
  end

  struct DispHTMLIsIndexElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLIsIndexElement_GUID = "3050f519-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLIsIndexElement = LibC::GUID.new(0x3050f519_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLIsIndexElement
    lpVtbl : DispHTMLIsIndexElementVTbl*
  end

  struct DispHTMLNextIdElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLNextIdElement_GUID = "3050f51a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLNextIdElement = LibC::GUID.new(0x3050f51a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLNextIdElement
    lpVtbl : DispHTMLNextIdElementVTbl*
  end

  struct IHTMLBaseFontElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_color : UInt64
    get_color : UInt64
    put_face : UInt64
    get_face : UInt64
    put_size : UInt64
    get_size : UInt64
  end

  IHTMLBaseFontElement_GUID = "3050f202-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBaseFontElement = LibC::GUID.new(0x3050f202_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBaseFontElement
    lpVtbl : IHTMLBaseFontElementVTbl*
  end

  struct DispHTMLBaseFontElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLBaseFontElement_GUID = "3050f504-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLBaseFontElement = LibC::GUID.new(0x3050f504_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLBaseFontElement
    lpVtbl : DispHTMLBaseFontElementVTbl*
  end

  struct IHTMLUnknownElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  IHTMLUnknownElement_GUID = "3050f209-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLUnknownElement = LibC::GUID.new(0x3050f209_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLUnknownElement
    lpVtbl : IHTMLUnknownElementVTbl*
  end

  struct DispHTMLUnknownElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLUnknownElement_GUID = "3050f539-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLUnknownElement = LibC::GUID.new(0x3050f539_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLUnknownElement
    lpVtbl : DispHTMLUnknownElementVTbl*
  end

  struct IWebGeolocationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_current_position : UInt64
    watch_position : UInt64
    clear_watch : UInt64
  end

  IWebGeolocation_GUID = "305107c5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IWebGeolocation = LibC::GUID.new(0x305107c5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IWebGeolocation
    lpVtbl : IWebGeolocationVTbl*
  end

  struct IHTMLMimeTypesCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
  end

  IHTMLMimeTypesCollection_GUID = "3050f3fc-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMimeTypesCollection = LibC::GUID.new(0x3050f3fc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMimeTypesCollection
    lpVtbl : IHTMLMimeTypesCollectionVTbl*
  end

  struct IHTMLPluginsCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    refresh : UInt64
  end

  IHTMLPluginsCollection_GUID = "3050f3fd-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPluginsCollection = LibC::GUID.new(0x3050f3fd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPluginsCollection
    lpVtbl : IHTMLPluginsCollectionVTbl*
  end

  struct IOmHistoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    back : UInt64
    forward : UInt64
    go : UInt64
  end

  IOmHistory_GUID = "feceaaa2-8405-11cf-8ba1-00aa00476da6"
  IID_IOmHistory = LibC::GUID.new(0xfeceaaa2_u32, 0x8405_u16, 0x11cf_u16, StaticArray[0x8b_u8, 0xa1_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x47_u8, 0x6d_u8, 0xa6_u8])
  struct IOmHistory
    lpVtbl : IOmHistoryVTbl*
  end

  struct IHTMLOpsProfileVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    add_request : UInt64
    clear_request : UInt64
    do_request : UInt64
    get_attribute : UInt64
    set_attribute : UInt64
    commit_changes : UInt64
    add_read_request : UInt64
    do_read_request : UInt64
    do_write_request : UInt64
  end

  IHTMLOpsProfile_GUID = "3050f401-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLOpsProfile = LibC::GUID.new(0x3050f401_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLOpsProfile
    lpVtbl : IHTMLOpsProfileVTbl*
  end

  struct IOmNavigatorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_app_code_name : UInt64
    get_app_name : UInt64
    get_app_version : UInt64
    get_user_agent : UInt64
    java_enabled : UInt64
    taint_enabled : UInt64
    get_mime_types : UInt64
    get_plugins : UInt64
    get_cookie_enabled : UInt64
    get_ops_profile : UInt64
    to_string : UInt64
    get_cpu_class : UInt64
    get_system_language : UInt64
    get_browser_language : UInt64
    get_user_language : UInt64
    get_platform : UInt64
    get_app_minor_version : UInt64
    get_connection_speed : UInt64
    get_on_line : UInt64
    get_user_profile : UInt64
  end

  IOmNavigator_GUID = "feceaaa5-8405-11cf-8ba1-00aa00476da6"
  IID_IOmNavigator = LibC::GUID.new(0xfeceaaa5_u32, 0x8405_u16, 0x11cf_u16, StaticArray[0x8b_u8, 0xa1_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x47_u8, 0x6d_u8, 0xa6_u8])
  struct IOmNavigator
    lpVtbl : IOmNavigatorVTbl*
  end

  struct INavigatorGeolocationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_geolocation : UInt64
  end

  INavigatorGeolocation_GUID = "305107cf-98b5-11cf-bb82-00aa00bdce0b"
  IID_INavigatorGeolocation = LibC::GUID.new(0x305107cf_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct INavigatorGeolocation
    lpVtbl : INavigatorGeolocationVTbl*
  end

  struct INavigatorDoNotTrackVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_ms_do_not_track : UInt64
  end

  INavigatorDoNotTrack_GUID = "30510804-98b5-11cf-bb82-00aa00bdce0b"
  IID_INavigatorDoNotTrack = LibC::GUID.new(0x30510804_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct INavigatorDoNotTrack
    lpVtbl : INavigatorDoNotTrackVTbl*
  end

  struct IHTMLLocationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_href : UInt64
    get_href : UInt64
    put_protocol : UInt64
    get_protocol : UInt64
    put_host : UInt64
    get_host : UInt64
    put_hostname : UInt64
    get_hostname : UInt64
    put_port : UInt64
    get_port : UInt64
    put_pathname : UInt64
    get_pathname : UInt64
    put_search : UInt64
    get_search : UInt64
    put_hash : UInt64
    get_hash : UInt64
    reload : UInt64
    replace : UInt64
    assign : UInt64
    to_string : UInt64
  end

  IHTMLLocation_GUID = "163bb1e0-6e00-11cf-837a-48dc04c10000"
  IID_IHTMLLocation = LibC::GUID.new(0x163bb1e0_u32, 0x6e00_u16, 0x11cf_u16, StaticArray[0x83_u8, 0x7a_u8, 0x48_u8, 0xdc_u8, 0x4_u8, 0xc1_u8, 0x0_u8, 0x0_u8])
  struct IHTMLLocation
    lpVtbl : IHTMLLocationVTbl*
  end

  struct DispHTMLHistoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLHistory_GUID = "3050f549-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLHistory = LibC::GUID.new(0x3050f549_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLHistory
    lpVtbl : DispHTMLHistoryVTbl*
  end

  struct DispHTMLNavigatorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLNavigator_GUID = "3050f54c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLNavigator = LibC::GUID.new(0x3050f54c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLNavigator
    lpVtbl : DispHTMLNavigatorVTbl*
  end

  struct DispHTMLLocationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLLocation_GUID = "3050f54e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLLocation = LibC::GUID.new(0x3050f54e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLLocation
    lpVtbl : DispHTMLLocationVTbl*
  end

  struct DispCPluginsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispCPlugins_GUID = "3050f54a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispCPlugins = LibC::GUID.new(0x3050f54a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispCPlugins
    lpVtbl : DispCPluginsVTbl*
  end

  struct IHTMLBookmarkCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
  end

  IHTMLBookmarkCollection_GUID = "3050f4ce-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBookmarkCollection = LibC::GUID.new(0x3050f4ce_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBookmarkCollection
    lpVtbl : IHTMLBookmarkCollectionVTbl*
  end

  struct IHTMLDataTransferVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    set_data : UInt64
    get_data : UInt64
    clear_data : UInt64
    put_drop_effect : UInt64
    get_drop_effect : UInt64
    put_effect_allowed : UInt64
    get_effect_allowed : UInt64
  end

  IHTMLDataTransfer_GUID = "3050f4b3-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDataTransfer = LibC::GUID.new(0x3050f4b3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDataTransfer
    lpVtbl : IHTMLDataTransferVTbl*
  end

  struct IHTMLEventObj2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    set_attribute : UInt64
    get_attribute : UInt64
    remove_attribute : UInt64
    put_property_name : UInt64
    get_property_name : UInt64
    putref_bookmarks : UInt64
    get_bookmarks : UInt64
    putref_recordset : UInt64
    get_recordset : UInt64
    put_data_fld : UInt64
    get_data_fld : UInt64
    putref_bound_elements : UInt64
    get_bound_elements : UInt64
    put_repeat : UInt64
    get_repeat : UInt64
    put_src_urn : UInt64
    get_src_urn : UInt64
    putref_src_element : UInt64
    get_src_element : UInt64
    put_alt_key : UInt64
    get_alt_key : UInt64
    put_ctrl_key : UInt64
    get_ctrl_key : UInt64
    put_shift_key : UInt64
    get_shift_key : UInt64
    putref_from_element : UInt64
    get_from_element : UInt64
    putref_to_element : UInt64
    get_to_element : UInt64
    put_button : UInt64
    get_button : UInt64
    put_type : UInt64
    get_type : UInt64
    put_qualifier : UInt64
    get_qualifier : UInt64
    put_reason : UInt64
    get_reason : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
    put_client_x : UInt64
    get_client_x : UInt64
    put_client_y : UInt64
    get_client_y : UInt64
    put_offset_x : UInt64
    get_offset_x : UInt64
    put_offset_y : UInt64
    get_offset_y : UInt64
    put_screen_x : UInt64
    get_screen_x : UInt64
    put_screen_y : UInt64
    get_screen_y : UInt64
    putref_src_filter : UInt64
    get_src_filter : UInt64
    get_data_transfer : UInt64
  end

  IHTMLEventObj2_GUID = "3050f48b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEventObj2 = LibC::GUID.new(0x3050f48b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEventObj2
    lpVtbl : IHTMLEventObj2VTbl*
  end

  struct IHTMLEventObj3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_content_overflow : UInt64
    put_shift_left : UInt64
    get_shift_left : UInt64
    put_alt_left : UInt64
    get_alt_left : UInt64
    put_ctrl_left : UInt64
    get_ctrl_left : UInt64
    get_ime_composition_change : UInt64
    get_ime_notify_command : UInt64
    get_ime_notify_data : UInt64
    get_ime_request : UInt64
    get_ime_request_data : UInt64
    get_keyboard_layout : UInt64
    get_behavior_cookie : UInt64
    get_behavior_part : UInt64
    get_next_page : UInt64
  end

  IHTMLEventObj3_GUID = "3050f680-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEventObj3 = LibC::GUID.new(0x3050f680_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEventObj3
    lpVtbl : IHTMLEventObj3VTbl*
  end

  struct IHTMLEventObj4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_wheel_delta : UInt64
  end

  IHTMLEventObj4_GUID = "3050f814-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEventObj4 = LibC::GUID.new(0x3050f814_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEventObj4
    lpVtbl : IHTMLEventObj4VTbl*
  end

  struct IHTMLEventObj5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_url : UInt64
    get_url : UInt64
    put_data : UInt64
    get_data : UInt64
    get_source : UInt64
    put_origin : UInt64
    get_origin : UInt64
    put_issession : UInt64
    get_issession : UInt64
  end

  IHTMLEventObj5_GUID = "30510478-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEventObj5 = LibC::GUID.new(0x30510478_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEventObj5
    lpVtbl : IHTMLEventObj5VTbl*
  end

  struct IHTMLEventObj6VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_action_url : UInt64
    get_button_id : UInt64
  end

  IHTMLEventObj6_GUID = "30510734-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEventObj6 = LibC::GUID.new(0x30510734_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEventObj6
    lpVtbl : IHTMLEventObj6VTbl*
  end

  struct DispCEventObjVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispCEventObj_GUID = "3050f558-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispCEventObj = LibC::GUID.new(0x3050f558_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispCEventObj
    lpVtbl : DispCEventObjVTbl*
  end

  struct IHTMLStyleMediaVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_type : UInt64
    match_medium : UInt64
  end

  IHTMLStyleMedia_GUID = "3051074b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleMedia = LibC::GUID.new(0x3051074b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleMedia
    lpVtbl : IHTMLStyleMediaVTbl*
  end

  struct DispHTMLStyleMediaVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStyleMedia_GUID = "3059009e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStyleMedia = LibC::GUID.new(0x3059009e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStyleMedia
    lpVtbl : DispHTMLStyleMediaVTbl*
  end

  struct IHTMLFramesCollection2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    item : UInt64
    get_length : UInt64
  end

  IHTMLFramesCollection2_GUID = "332c4426-26cb-11d0-b483-00c04fd90119"
  IID_IHTMLFramesCollection2 = LibC::GUID.new(0x332c4426_u32, 0x26cb_u16, 0x11d0_u16, StaticArray[0xb4_u8, 0x83_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x1_u8, 0x19_u8])
  struct IHTMLFramesCollection2
    lpVtbl : IHTMLFramesCollection2VTbl*
  end

  struct HTMLWindowEvents3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLWindowEvents3_GUID = "3050f5a1-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLWindowEvents3 = LibC::GUID.new(0x3050f5a1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLWindowEvents3
    lpVtbl : HTMLWindowEvents3VTbl*
  end

  struct HTMLWindowEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLWindowEvents2_GUID = "3050f625-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLWindowEvents2 = LibC::GUID.new(0x3050f625_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLWindowEvents2
    lpVtbl : HTMLWindowEvents2VTbl*
  end

  struct HTMLWindowEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLWindowEvents_GUID = "96a0a4e0-d062-11cf-94b6-00aa0060275c"
  IID_HTMLWindowEvents = LibC::GUID.new(0x96a0a4e0_u32, 0xd062_u16, 0x11cf_u16, StaticArray[0x94_u8, 0xb6_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x60_u8, 0x27_u8, 0x5c_u8])
  struct HTMLWindowEvents
    lpVtbl : HTMLWindowEventsVTbl*
  end

  struct IHTMLDocument2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_script : UInt64
    get_all : UInt64
    get_body : UInt64
    get_active_element : UInt64
    get_images : UInt64
    get_applets : UInt64
    get_links : UInt64
    get_forms : UInt64
    get_anchors : UInt64
    put_title : UInt64
    get_title : UInt64
    get_scripts : UInt64
    put_design_mode : UInt64
    get_design_mode : UInt64
    get_selection : UInt64
    get_ready_state : UInt64
    get_frames : UInt64
    get_embeds : UInt64
    get_plugins : UInt64
    put_alink_color : UInt64
    get_alink_color : UInt64
    put_bg_color : UInt64
    get_bg_color : UInt64
    put_fg_color : UInt64
    get_fg_color : UInt64
    put_link_color : UInt64
    get_link_color : UInt64
    put_vlink_color : UInt64
    get_vlink_color : UInt64
    get_referrer : UInt64
    get_location : UInt64
    get_last_modified : UInt64
    put_url : UInt64
    get_url : UInt64
    put_domain : UInt64
    get_domain : UInt64
    put_cookie : UInt64
    get_cookie : UInt64
    put_expando : UInt64
    get_expando : UInt64
    put_charset : UInt64
    get_charset : UInt64
    put_default_charset : UInt64
    get_default_charset : UInt64
    get_mime_type : UInt64
    get_file_size : UInt64
    get_file_created_date : UInt64
    get_file_modified_date : UInt64
    get_file_updated_date : UInt64
    get_security : UInt64
    get_protocol : UInt64
    get_name_prop : UInt64
    write : UInt64
    writeln : UInt64
    open : UInt64
    close : UInt64
    clear : UInt64
    query_command_supported : UInt64
    query_command_enabled : UInt64
    query_command_state : UInt64
    query_command_indeterm : UInt64
    query_command_text : UInt64
    query_command_value : UInt64
    exec_command : UInt64
    exec_command_show_help : UInt64
    create_element : UInt64
    put_onhelp : UInt64
    get_onhelp : UInt64
    put_onclick : UInt64
    get_onclick : UInt64
    put_ondblclick : UInt64
    get_ondblclick : UInt64
    put_onkeyup : UInt64
    get_onkeyup : UInt64
    put_onkeydown : UInt64
    get_onkeydown : UInt64
    put_onkeypress : UInt64
    get_onkeypress : UInt64
    put_onmouseup : UInt64
    get_onmouseup : UInt64
    put_onmousedown : UInt64
    get_onmousedown : UInt64
    put_onmousemove : UInt64
    get_onmousemove : UInt64
    put_onmouseout : UInt64
    get_onmouseout : UInt64
    put_onmouseover : UInt64
    get_onmouseover : UInt64
    put_onreadystatechange : UInt64
    get_onreadystatechange : UInt64
    put_onafterupdate : UInt64
    get_onafterupdate : UInt64
    put_onrowexit : UInt64
    get_onrowexit : UInt64
    put_onrowenter : UInt64
    get_onrowenter : UInt64
    put_ondragstart : UInt64
    get_ondragstart : UInt64
    put_onselectstart : UInt64
    get_onselectstart : UInt64
    element_from_point : UInt64
    get_parent_window : UInt64
    get_style_sheets : UInt64
    put_onbeforeupdate : UInt64
    get_onbeforeupdate : UInt64
    put_onerrorupdate : UInt64
    get_onerrorupdate : UInt64
    to_string : UInt64
    create_style_sheet : UInt64
  end

  IHTMLDocument2_GUID = "332c4425-26cb-11d0-b483-00c04fd90119"
  IID_IHTMLDocument2 = LibC::GUID.new(0x332c4425_u32, 0x26cb_u16, 0x11d0_u16, StaticArray[0xb4_u8, 0x83_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x1_u8, 0x19_u8])
  struct IHTMLDocument2
    lpVtbl : IHTMLDocument2VTbl*
  end

  struct IHTMLWindow2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    item : UInt64
    get_length : UInt64
    get_frames : UInt64
    put_default_status : UInt64
    get_default_status : UInt64
    put_status : UInt64
    get_status : UInt64
    set_timeout : UInt64
    clear_timeout : UInt64
    alert : UInt64
    confirm : UInt64
    prompt : UInt64
    get_image : UInt64
    get_location : UInt64
    get_history : UInt64
    close : UInt64
    put_opener : UInt64
    get_opener : UInt64
    get_navigator : UInt64
    put_name : UInt64
    get_name : UInt64
    get_parent : UInt64
    open : UInt64
    get_self : UInt64
    get_top : UInt64
    get_window : UInt64
    navigate : UInt64
    put_onfocus : UInt64
    get_onfocus : UInt64
    put_onblur : UInt64
    get_onblur : UInt64
    put_onload : UInt64
    get_onload : UInt64
    put_onbeforeunload : UInt64
    get_onbeforeunload : UInt64
    put_onunload : UInt64
    get_onunload : UInt64
    put_onhelp : UInt64
    get_onhelp : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    put_onresize : UInt64
    get_onresize : UInt64
    put_onscroll : UInt64
    get_onscroll : UInt64
    get_document : UInt64
    get_event : UInt64
    get__new_enum : UInt64
    show_modal_dialog : UInt64
    show_help : UInt64
    get_screen : UInt64
    get_option : UInt64
    focus : UInt64
    get_closed : UInt64
    blur : UInt64
    scroll : UInt64
    get_client_information : UInt64
    set_interval : UInt64
    clear_interval : UInt64
    put_offscreen_buffering : UInt64
    get_offscreen_buffering : UInt64
    exec_script : UInt64
    to_string : UInt64
    scroll_by : UInt64
    scroll_to : UInt64
    move_to : UInt64
    move_by : UInt64
    resize_to : UInt64
    resize_by : UInt64
    get_external : UInt64
  end

  IHTMLWindow2_GUID = "332c4427-26cb-11d0-b483-00c04fd90119"
  IID_IHTMLWindow2 = LibC::GUID.new(0x332c4427_u32, 0x26cb_u16, 0x11d0_u16, StaticArray[0xb4_u8, 0x83_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x1_u8, 0x19_u8])
  struct IHTMLWindow2
    lpVtbl : IHTMLWindow2VTbl*
  end

  struct IHTMLWindow3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_screen_left : UInt64
    get_screen_top : UInt64
    attach_event : UInt64
    detach_event : UInt64
    set_timeout : UInt64
    set_interval : UInt64
    print : UInt64
    put_onbeforeprint : UInt64
    get_onbeforeprint : UInt64
    put_onafterprint : UInt64
    get_onafterprint : UInt64
    get_clipboard_data : UInt64
    show_modeless_dialog : UInt64
  end

  IHTMLWindow3_GUID = "3050f4ae-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLWindow3 = LibC::GUID.new(0x3050f4ae_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLWindow3
    lpVtbl : IHTMLWindow3VTbl*
  end

  struct IHTMLFrameBaseVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_src : UInt64
    get_src : UInt64
    put_name : UInt64
    get_name : UInt64
    put_border : UInt64
    get_border : UInt64
    put_frame_border : UInt64
    get_frame_border : UInt64
    put_frame_spacing : UInt64
    get_frame_spacing : UInt64
    put_margin_width : UInt64
    get_margin_width : UInt64
    put_margin_height : UInt64
    get_margin_height : UInt64
    put_no_resize : UInt64
    get_no_resize : UInt64
    put_scrolling : UInt64
    get_scrolling : UInt64
  end

  IHTMLFrameBase_GUID = "3050f311-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFrameBase = LibC::GUID.new(0x3050f311_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFrameBase
    lpVtbl : IHTMLFrameBaseVTbl*
  end

  struct IHTMLStorageVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get_remaining_space : UInt64
    key : UInt64
    get_item : UInt64
    set_item : UInt64
    remove_item : UInt64
    clear : UInt64
  end

  IHTMLStorage_GUID = "30510474-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStorage = LibC::GUID.new(0x30510474_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStorage
    lpVtbl : IHTMLStorageVTbl*
  end

  struct IHTMLPerformanceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_navigation : UInt64
    get_timing : UInt64
    to_string : UInt64
    to_json : UInt64
  end

  IHTMLPerformance_GUID = "3051074e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPerformance = LibC::GUID.new(0x3051074e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPerformance
    lpVtbl : IHTMLPerformanceVTbl*
  end

  struct IHTMLApplicationCacheVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_status : UInt64
    put_onchecking : UInt64
    get_onchecking : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    put_onnoupdate : UInt64
    get_onnoupdate : UInt64
    put_ondownloading : UInt64
    get_ondownloading : UInt64
    put_onprogress : UInt64
    get_onprogress : UInt64
    put_onupdateready : UInt64
    get_onupdateready : UInt64
    put_oncached : UInt64
    get_oncached : UInt64
    put_onobsolete : UInt64
    get_onobsolete : UInt64
    update : UInt64
    swap_cache : UInt64
    abort : UInt64
  end

  IHTMLApplicationCache_GUID = "30510828-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLApplicationCache = LibC::GUID.new(0x30510828_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLApplicationCache
    lpVtbl : IHTMLApplicationCacheVTbl*
  end

  struct IHTMLScreenVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_color_depth : UInt64
    put_buffer_depth : UInt64
    get_buffer_depth : UInt64
    get_width : UInt64
    get_height : UInt64
    put_update_interval : UInt64
    get_update_interval : UInt64
    get_avail_height : UInt64
    get_avail_width : UInt64
    get_font_smoothing_enabled : UInt64
  end

  IHTMLScreen_GUID = "3050f35c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLScreen = LibC::GUID.new(0x3050f35c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLScreen
    lpVtbl : IHTMLScreenVTbl*
  end

  struct IHTMLScreen2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_logical_xdpi : UInt64
    get_logical_ydpi : UInt64
    get_device_xdpi : UInt64
    get_device_ydpi : UInt64
  end

  IHTMLScreen2_GUID = "3050f84a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLScreen2 = LibC::GUID.new(0x3050f84a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLScreen2
    lpVtbl : IHTMLScreen2VTbl*
  end

  struct IHTMLScreen3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_system_xdpi : UInt64
    get_system_ydpi : UInt64
  end

  IHTMLScreen3_GUID = "305104a1-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLScreen3 = LibC::GUID.new(0x305104a1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLScreen3
    lpVtbl : IHTMLScreen3VTbl*
  end

  struct IHTMLScreen4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_pixel_depth : UInt64
  end

  IHTMLScreen4_GUID = "3051076b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLScreen4 = LibC::GUID.new(0x3051076b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLScreen4
    lpVtbl : IHTMLScreen4VTbl*
  end

  struct IHTMLWindow4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create_popup : UInt64
    get_frame_element : UInt64
  end

  IHTMLWindow4_GUID = "3050f6cf-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLWindow4 = LibC::GUID.new(0x3050f6cf_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLWindow4
    lpVtbl : IHTMLWindow4VTbl*
  end

  struct IHTMLWindow5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_xml_http_request : UInt64
    get_xml_http_request : UInt64
  end

  IHTMLWindow5_GUID = "3051040e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLWindow5 = LibC::GUID.new(0x3051040e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLWindow5
    lpVtbl : IHTMLWindow5VTbl*
  end

  struct IHTMLWindow6VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x_domain_request : UInt64
    get_x_domain_request : UInt64
    get_session_storage : UInt64
    get_local_storage : UInt64
    put_onhashchange : UInt64
    get_onhashchange : UInt64
    get_max_connections_per_server : UInt64
    post_message : UInt64
    to_static_html : UInt64
    put_onmessage : UInt64
    get_onmessage : UInt64
    ms_write_profiler_mark : UInt64
  end

  IHTMLWindow6_GUID = "30510453-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLWindow6 = LibC::GUID.new(0x30510453_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLWindow6
    lpVtbl : IHTMLWindow6VTbl*
  end

  struct IHTMLWindow7VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_selection : UInt64
    get_computed_style : UInt64
    get_style_media : UInt64
    put_performance : UInt64
    get_performance : UInt64
    get_inner_width : UInt64
    get_inner_height : UInt64
    get_page_x_offset : UInt64
    get_page_y_offset : UInt64
    get_screen_x : UInt64
    get_screen_y : UInt64
    get_outer_width : UInt64
    get_outer_height : UInt64
    put_onabort : UInt64
    get_onabort : UInt64
    put_oncanplay : UInt64
    get_oncanplay : UInt64
    put_oncanplaythrough : UInt64
    get_oncanplaythrough : UInt64
    put_onchange : UInt64
    get_onchange : UInt64
    put_onclick : UInt64
    get_onclick : UInt64
    put_oncontextmenu : UInt64
    get_oncontextmenu : UInt64
    put_ondblclick : UInt64
    get_ondblclick : UInt64
    put_ondrag : UInt64
    get_ondrag : UInt64
    put_ondragend : UInt64
    get_ondragend : UInt64
    put_ondragenter : UInt64
    get_ondragenter : UInt64
    put_ondragleave : UInt64
    get_ondragleave : UInt64
    put_ondragover : UInt64
    get_ondragover : UInt64
    put_ondragstart : UInt64
    get_ondragstart : UInt64
    put_ondrop : UInt64
    get_ondrop : UInt64
    put_ondurationchange : UInt64
    get_ondurationchange : UInt64
    put_onfocusin : UInt64
    get_onfocusin : UInt64
    put_onfocusout : UInt64
    get_onfocusout : UInt64
    put_oninput : UInt64
    get_oninput : UInt64
    put_onemptied : UInt64
    get_onemptied : UInt64
    put_onended : UInt64
    get_onended : UInt64
    put_onkeydown : UInt64
    get_onkeydown : UInt64
    put_onkeypress : UInt64
    get_onkeypress : UInt64
    put_onkeyup : UInt64
    get_onkeyup : UInt64
    put_onloadeddata : UInt64
    get_onloadeddata : UInt64
    put_onloadedmetadata : UInt64
    get_onloadedmetadata : UInt64
    put_onloadstart : UInt64
    get_onloadstart : UInt64
    put_onmousedown : UInt64
    get_onmousedown : UInt64
    put_onmouseenter : UInt64
    get_onmouseenter : UInt64
    put_onmouseleave : UInt64
    get_onmouseleave : UInt64
    put_onmousemove : UInt64
    get_onmousemove : UInt64
    put_onmouseout : UInt64
    get_onmouseout : UInt64
    put_onmouseover : UInt64
    get_onmouseover : UInt64
    put_onmouseup : UInt64
    get_onmouseup : UInt64
    put_onmousewheel : UInt64
    get_onmousewheel : UInt64
    put_onoffline : UInt64
    get_onoffline : UInt64
    put_ononline : UInt64
    get_ononline : UInt64
    put_onprogress : UInt64
    get_onprogress : UInt64
    put_onratechange : UInt64
    get_onratechange : UInt64
    put_onreadystatechange : UInt64
    get_onreadystatechange : UInt64
    put_onreset : UInt64
    get_onreset : UInt64
    put_onseeked : UInt64
    get_onseeked : UInt64
    put_onseeking : UInt64
    get_onseeking : UInt64
    put_onselect : UInt64
    get_onselect : UInt64
    put_onstalled : UInt64
    get_onstalled : UInt64
    put_onstorage : UInt64
    get_onstorage : UInt64
    put_onsubmit : UInt64
    get_onsubmit : UInt64
    put_onsuspend : UInt64
    get_onsuspend : UInt64
    put_ontimeupdate : UInt64
    get_ontimeupdate : UInt64
    put_onpause : UInt64
    get_onpause : UInt64
    put_onplay : UInt64
    get_onplay : UInt64
    put_onplaying : UInt64
    get_onplaying : UInt64
    put_onvolumechange : UInt64
    get_onvolumechange : UInt64
    put_onwaiting : UInt64
    get_onwaiting : UInt64
  end

  IHTMLWindow7_GUID = "305104b7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLWindow7 = LibC::GUID.new(0x305104b7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLWindow7
    lpVtbl : IHTMLWindow7VTbl*
  end

  struct IHTMLWindow8VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_onmspointerdown : UInt64
    get_onmspointerdown : UInt64
    put_onmspointermove : UInt64
    get_onmspointermove : UInt64
    put_onmspointerup : UInt64
    get_onmspointerup : UInt64
    put_onmspointerover : UInt64
    get_onmspointerover : UInt64
    put_onmspointerout : UInt64
    get_onmspointerout : UInt64
    put_onmspointercancel : UInt64
    get_onmspointercancel : UInt64
    put_onmspointerhover : UInt64
    get_onmspointerhover : UInt64
    put_onmsgesturestart : UInt64
    get_onmsgesturestart : UInt64
    put_onmsgesturechange : UInt64
    get_onmsgesturechange : UInt64
    put_onmsgestureend : UInt64
    get_onmsgestureend : UInt64
    put_onmsgesturehold : UInt64
    get_onmsgesturehold : UInt64
    put_onmsgesturetap : UInt64
    get_onmsgesturetap : UInt64
    put_onmsgesturedoubletap : UInt64
    get_onmsgesturedoubletap : UInt64
    put_onmsinertiastart : UInt64
    get_onmsinertiastart : UInt64
    get_application_cache : UInt64
    put_onpopstate : UInt64
    get_onpopstate : UInt64
  end

  IHTMLWindow8_GUID = "305107ab-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLWindow8 = LibC::GUID.new(0x305107ab_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLWindow8
    lpVtbl : IHTMLWindow8VTbl*
  end

  struct DispHTMLScreenVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLScreen_GUID = "3050f591-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLScreen = LibC::GUID.new(0x3050f591_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLScreen
    lpVtbl : DispHTMLScreenVTbl*
  end

  struct DispHTMLWindow2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLWindow2_GUID = "3050f55d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLWindow2 = LibC::GUID.new(0x3050f55d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLWindow2
    lpVtbl : DispHTMLWindow2VTbl*
  end

  struct DispHTMLWindowProxyVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLWindowProxy_GUID = "3050f55e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLWindowProxy = LibC::GUID.new(0x3050f55e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLWindowProxy
    lpVtbl : DispHTMLWindowProxyVTbl*
  end

  struct IHTMLDocumentCompatibleInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_user_agent : UInt64
    get_version : UInt64
  end

  IHTMLDocumentCompatibleInfo_GUID = "3051041a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDocumentCompatibleInfo = LibC::GUID.new(0x3051041a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDocumentCompatibleInfo
    lpVtbl : IHTMLDocumentCompatibleInfoVTbl*
  end

  struct IHTMLDocumentCompatibleInfoCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    item : UInt64
  end

  IHTMLDocumentCompatibleInfoCollection_GUID = "30510418-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDocumentCompatibleInfoCollection = LibC::GUID.new(0x30510418_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDocumentCompatibleInfoCollection
    lpVtbl : IHTMLDocumentCompatibleInfoCollectionVTbl*
  end

  struct DispHTMLDocumentCompatibleInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDocumentCompatibleInfo_GUID = "3050f53e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDocumentCompatibleInfo = LibC::GUID.new(0x3050f53e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDocumentCompatibleInfo
    lpVtbl : DispHTMLDocumentCompatibleInfoVTbl*
  end

  struct DispHTMLDocumentCompatibleInfoCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDocumentCompatibleInfoCollection_GUID = "3050f53f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDocumentCompatibleInfoCollection = LibC::GUID.new(0x3050f53f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDocumentCompatibleInfoCollection
    lpVtbl : DispHTMLDocumentCompatibleInfoCollectionVTbl*
  end

  struct HTMLDocumentEvents4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLDocumentEvents4_GUID = "30510737-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLDocumentEvents4 = LibC::GUID.new(0x30510737_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLDocumentEvents4
    lpVtbl : HTMLDocumentEvents4VTbl*
  end

  struct HTMLDocumentEvents3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLDocumentEvents3_GUID = "3050f5a0-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLDocumentEvents3 = LibC::GUID.new(0x3050f5a0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLDocumentEvents3
    lpVtbl : HTMLDocumentEvents3VTbl*
  end

  struct HTMLDocumentEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLDocumentEvents2_GUID = "3050f613-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLDocumentEvents2 = LibC::GUID.new(0x3050f613_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLDocumentEvents2
    lpVtbl : HTMLDocumentEvents2VTbl*
  end

  struct HTMLDocumentEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLDocumentEvents_GUID = "3050f260-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLDocumentEvents = LibC::GUID.new(0x3050f260_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLDocumentEvents
    lpVtbl : HTMLDocumentEventsVTbl*
  end

  struct ISVGSVGElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_x : UInt64
    get_x : UInt64
    putref_y : UInt64
    get_y : UInt64
    putref_width : UInt64
    get_width : UInt64
    putref_height : UInt64
    get_height : UInt64
    put_content_script_type : UInt64
    get_content_script_type : UInt64
    put_content_style_type : UInt64
    get_content_style_type : UInt64
    putref_viewport : UInt64
    get_viewport : UInt64
    put_pixel_unit_to_millimeter_x : UInt64
    get_pixel_unit_to_millimeter_x : UInt64
    put_pixel_unit_to_millimeter_y : UInt64
    get_pixel_unit_to_millimeter_y : UInt64
    put_screen_pixel_to_millimeter_x : UInt64
    get_screen_pixel_to_millimeter_x : UInt64
    put_screen_pixel_to_millimeter_y : UInt64
    get_screen_pixel_to_millimeter_y : UInt64
    put_use_current_view : UInt64
    get_use_current_view : UInt64
    putref_current_view : UInt64
    get_current_view : UInt64
    put_current_scale : UInt64
    get_current_scale : UInt64
    putref_current_translate : UInt64
    get_current_translate : UInt64
    suspend_redraw : UInt64
    unsuspend_redraw : UInt64
    unsuspend_redraw_all : UInt64
    force_redraw : UInt64
    pause_animations : UInt64
    unpause_animations : UInt64
    animations_paused : UInt64
    get_current_time : UInt64
    set_current_time : UInt64
    get_intersection_list : UInt64
    get_enclosure_list : UInt64
    check_intersection : UInt64
    check_enclosure : UInt64
    deselect_all : UInt64
    create_svg_number : UInt64
    create_svg_length : UInt64
    create_svg_angle : UInt64
    create_svg_point : UInt64
    create_svg_matrix : UInt64
    create_svg_rect : UInt64
    create_svg_transform : UInt64
    create_svg_transform_from_matrix : UInt64
    get_element_by_id : UInt64
  end

  ISVGSVGElement_GUID = "305104e7-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGSVGElement = LibC::GUID.new(0x305104e7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGSVGElement
    lpVtbl : ISVGSVGElementVTbl*
  end

  struct IDOMNodeIteratorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_root : UInt64
    get_what_to_show : UInt64
    get_filter : UInt64
    get_expand_entity_references : UInt64
    next_node : UInt64
    previous_node : UInt64
    detach : UInt64
  end

  IDOMNodeIterator_GUID = "30510746-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMNodeIterator = LibC::GUID.new(0x30510746_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMNodeIterator
    lpVtbl : IDOMNodeIteratorVTbl*
  end

  struct IDOMTreeWalkerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_root : UInt64
    get_what_to_show : UInt64
    get_filter : UInt64
    get_expand_entity_references : UInt64
    putref_current_node : UInt64
    get_current_node : UInt64
    parent_node : UInt64
    first_child : UInt64
    last_child : UInt64
    previous_sibling : UInt64
    next_sibling : UInt64
    previous_node : UInt64
    next_node : UInt64
  end

  IDOMTreeWalker_GUID = "30510748-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMTreeWalker = LibC::GUID.new(0x30510748_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMTreeWalker
    lpVtbl : IDOMTreeWalkerVTbl*
  end

  struct IDOMProcessingInstructionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_target : UInt64
    put_data : UInt64
    get_data : UInt64
  end

  IDOMProcessingInstruction_GUID = "30510742-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMProcessingInstruction = LibC::GUID.new(0x30510742_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMProcessingInstruction
    lpVtbl : IDOMProcessingInstructionVTbl*
  end

  struct IHTMLDocument3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    release_capture : UInt64
    recalc : UInt64
    create_text_node : UInt64
    get_document_element : UInt64
    get_unique_id : UInt64
    attach_event : UInt64
    detach_event : UInt64
    put_onrowsdelete : UInt64
    get_onrowsdelete : UInt64
    put_onrowsinserted : UInt64
    get_onrowsinserted : UInt64
    put_oncellchange : UInt64
    get_oncellchange : UInt64
    put_ondatasetchanged : UInt64
    get_ondatasetchanged : UInt64
    put_ondataavailable : UInt64
    get_ondataavailable : UInt64
    put_ondatasetcomplete : UInt64
    get_ondatasetcomplete : UInt64
    put_onpropertychange : UInt64
    get_onpropertychange : UInt64
    put_dir : UInt64
    get_dir : UInt64
    put_oncontextmenu : UInt64
    get_oncontextmenu : UInt64
    put_onstop : UInt64
    get_onstop : UInt64
    create_document_fragment : UInt64
    get_parent_document : UInt64
    put_enable_download : UInt64
    get_enable_download : UInt64
    put_base_url : UInt64
    get_base_url : UInt64
    get_child_nodes : UInt64
    put_inherit_style_sheets : UInt64
    get_inherit_style_sheets : UInt64
    put_onbeforeeditfocus : UInt64
    get_onbeforeeditfocus : UInt64
    get_elements_by_name : UInt64
    get_element_by_id : UInt64
    get_elements_by_tag_name : UInt64
  end

  IHTMLDocument3_GUID = "3050f485-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDocument3 = LibC::GUID.new(0x3050f485_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDocument3
    lpVtbl : IHTMLDocument3VTbl*
  end

  struct IHTMLDocument4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    focus : UInt64
    has_focus : UInt64
    put_onselectionchange : UInt64
    get_onselectionchange : UInt64
    get_namespaces : UInt64
    create_document_from_url : UInt64
    put_media : UInt64
    get_media : UInt64
    create_event_object : UInt64
    fire_event : UInt64
    create_render_style : UInt64
    put_oncontrolselect : UInt64
    get_oncontrolselect : UInt64
    get_url_unencoded : UInt64
  end

  IHTMLDocument4_GUID = "3050f69a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDocument4 = LibC::GUID.new(0x3050f69a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDocument4
    lpVtbl : IHTMLDocument4VTbl*
  end

  struct IHTMLDocument5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_onmousewheel : UInt64
    get_onmousewheel : UInt64
    get_doctype : UInt64
    get_implementation : UInt64
    create_attribute : UInt64
    create_comment : UInt64
    put_onfocusin : UInt64
    get_onfocusin : UInt64
    put_onfocusout : UInt64
    get_onfocusout : UInt64
    put_onactivate : UInt64
    get_onactivate : UInt64
    put_ondeactivate : UInt64
    get_ondeactivate : UInt64
    put_onbeforeactivate : UInt64
    get_onbeforeactivate : UInt64
    put_onbeforedeactivate : UInt64
    get_onbeforedeactivate : UInt64
    get_compat_mode : UInt64
  end

  IHTMLDocument5_GUID = "3050f80c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDocument5 = LibC::GUID.new(0x3050f80c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDocument5
    lpVtbl : IHTMLDocument5VTbl*
  end

  struct IHTMLDocument6VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_compatible : UInt64
    get_document_mode : UInt64
    put_onstorage : UInt64
    get_onstorage : UInt64
    put_onstoragecommit : UInt64
    get_onstoragecommit : UInt64
    get_element_by_id : UInt64
    update_settings : UInt64
  end

  IHTMLDocument6_GUID = "30510417-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDocument6 = LibC::GUID.new(0x30510417_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDocument6
    lpVtbl : IHTMLDocument6VTbl*
  end

  struct IHTMLDocument8VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_onmscontentzoom : UInt64
    get_onmscontentzoom : UInt64
    put_onmspointerdown : UInt64
    get_onmspointerdown : UInt64
    put_onmspointermove : UInt64
    get_onmspointermove : UInt64
    put_onmspointerup : UInt64
    get_onmspointerup : UInt64
    put_onmspointerover : UInt64
    get_onmspointerover : UInt64
    put_onmspointerout : UInt64
    get_onmspointerout : UInt64
    put_onmspointercancel : UInt64
    get_onmspointercancel : UInt64
    put_onmspointerhover : UInt64
    get_onmspointerhover : UInt64
    put_onmsgesturestart : UInt64
    get_onmsgesturestart : UInt64
    put_onmsgesturechange : UInt64
    get_onmsgesturechange : UInt64
    put_onmsgestureend : UInt64
    get_onmsgestureend : UInt64
    put_onmsgesturehold : UInt64
    get_onmsgesturehold : UInt64
    put_onmsgesturetap : UInt64
    get_onmsgesturetap : UInt64
    put_onmsgesturedoubletap : UInt64
    get_onmsgesturedoubletap : UInt64
    put_onmsinertiastart : UInt64
    get_onmsinertiastart : UInt64
    elements_from_point : UInt64
    elements_from_rect : UInt64
    put_onmsmanipulationstatechanged : UInt64
    get_onmsmanipulationstatechanged : UInt64
    put_ms_caps_lock_warning_off : UInt64
    get_ms_caps_lock_warning_off : UInt64
  end

  IHTMLDocument8_GUID = "305107d0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDocument8 = LibC::GUID.new(0x305107d0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDocument8
    lpVtbl : IHTMLDocument8VTbl*
  end

  struct IDocumentEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create_event : UInt64
  end

  IDocumentEvent_GUID = "305104bc-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDocumentEvent = LibC::GUID.new(0x305104bc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDocumentEvent
    lpVtbl : IDocumentEventVTbl*
  end

  struct IDocumentRangeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create_range : UInt64
  end

  IDocumentRange_GUID = "305104af-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDocumentRange = LibC::GUID.new(0x305104af_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDocumentRange
    lpVtbl : IDocumentRangeVTbl*
  end

  struct IDocumentSelectorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    query_selector : UInt64
    query_selector_all : UInt64
  end

  IDocumentSelector_GUID = "30510462-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDocumentSelector = LibC::GUID.new(0x30510462_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDocumentSelector
    lpVtbl : IDocumentSelectorVTbl*
  end

  struct IDocumentTraversalVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create_node_iterator : UInt64
    create_tree_walker : UInt64
  end

  IDocumentTraversal_GUID = "30510744-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDocumentTraversal = LibC::GUID.new(0x30510744_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDocumentTraversal
    lpVtbl : IDocumentTraversalVTbl*
  end

  struct DispHTMLDocumentVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDocument_GUID = "3050f55f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDocument = LibC::GUID.new(0x3050f55f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDocument
    lpVtbl : DispHTMLDocumentVTbl*
  end

  struct DWebBridgeEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DWebBridgeEvents_GUID = "a6d897ff-0a95-11d1-b0ba-006008166e11"
  IID_DWebBridgeEvents = LibC::GUID.new(0xa6d897ff_u32, 0xa95_u16, 0x11d1_u16, StaticArray[0xb0_u8, 0xba_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x16_u8, 0x6e_u8, 0x11_u8])
  struct DWebBridgeEvents
    lpVtbl : DWebBridgeEventsVTbl*
  end

  struct IWebBridgeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_url : UInt64
    get_url : UInt64
    put_scrollbar : UInt64
    get_scrollbar : UInt64
    put_embed : UInt64
    get_embed : UInt64
    get_event : UInt64
    get_ready_state : UInt64
    about_box : UInt64
  end

  IWebBridge_GUID = "ae24fdad-03c6-11d1-8b76-0080c744f389"
  IID_IWebBridge = LibC::GUID.new(0xae24fdad_u32, 0x3c6_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x76_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0x44_u8, 0xf3_u8, 0x89_u8])
  struct IWebBridge
    lpVtbl : IWebBridgeVTbl*
  end

  struct IWBScriptControlVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    raise_event : UInt64
    bubble_event : UInt64
    set_context_menu : UInt64
    put_selectable_content : UInt64
    get_selectable_content : UInt64
    get_frozen : UInt64
    put_scrollbar : UInt64
    get_scrollbar : UInt64
    get_version : UInt64
    get_visibility : UInt64
    put_onvisibilitychange : UInt64
    get_onvisibilitychange : UInt64
  end

  IWBScriptControl_GUID = "a5170870-0cf8-11d1-8b91-0080c744f389"
  IID_IWBScriptControl = LibC::GUID.new(0xa5170870_u32, 0xcf8_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x91_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0x44_u8, 0xf3_u8, 0x89_u8])
  struct IWBScriptControl
    lpVtbl : IWBScriptControlVTbl*
  end

  struct IHTMLEmbedElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_hidden : UInt64
    get_hidden : UInt64
    get_palette : UInt64
    get_pluginspage : UInt64
    put_src : UInt64
    get_src : UInt64
    put_units : UInt64
    get_units : UInt64
    put_name : UInt64
    get_name : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
  end

  IHTMLEmbedElement_GUID = "3050f25f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEmbedElement = LibC::GUID.new(0x3050f25f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEmbedElement
    lpVtbl : IHTMLEmbedElementVTbl*
  end

  struct IHTMLEmbedElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_src : UInt64
    get_src : UInt64
    get_pluginspage : UInt64
  end

  IHTMLEmbedElement2_GUID = "30510493-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEmbedElement2 = LibC::GUID.new(0x30510493_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEmbedElement2
    lpVtbl : IHTMLEmbedElement2VTbl*
  end

  struct DispHTMLEmbedVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLEmbed_GUID = "3050f52e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLEmbed = LibC::GUID.new(0x3050f52e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLEmbed
    lpVtbl : DispHTMLEmbedVTbl*
  end

  struct HTMLMapEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLMapEvents2_GUID = "3050f61e-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLMapEvents2 = LibC::GUID.new(0x3050f61e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLMapEvents2
    lpVtbl : HTMLMapEvents2VTbl*
  end

  struct HTMLMapEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLMapEvents_GUID = "3050f3ba-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLMapEvents = LibC::GUID.new(0x3050f3ba_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLMapEvents
    lpVtbl : HTMLMapEventsVTbl*
  end

  struct IHTMLAreasCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_length : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
    tags : UInt64
    add : UInt64
    remove : UInt64
  end

  IHTMLAreasCollection_GUID = "3050f383-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAreasCollection = LibC::GUID.new(0x3050f383_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAreasCollection
    lpVtbl : IHTMLAreasCollectionVTbl*
  end

  struct IHTMLAreasCollection2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    urns : UInt64
  end

  IHTMLAreasCollection2_GUID = "3050f5ec-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAreasCollection2 = LibC::GUID.new(0x3050f5ec_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAreasCollection2
    lpVtbl : IHTMLAreasCollection2VTbl*
  end

  struct IHTMLAreasCollection3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    named_item : UInt64
  end

  IHTMLAreasCollection3_GUID = "3050f837-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAreasCollection3 = LibC::GUID.new(0x3050f837_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAreasCollection3
    lpVtbl : IHTMLAreasCollection3VTbl*
  end

  struct IHTMLAreasCollection4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    item : UInt64
    named_item : UInt64
  end

  IHTMLAreasCollection4_GUID = "30510492-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAreasCollection4 = LibC::GUID.new(0x30510492_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAreasCollection4
    lpVtbl : IHTMLAreasCollection4VTbl*
  end

  struct IHTMLMapElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_areas : UInt64
    put_name : UInt64
    get_name : UInt64
  end

  IHTMLMapElement_GUID = "3050f266-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMapElement = LibC::GUID.new(0x3050f266_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMapElement
    lpVtbl : IHTMLMapElementVTbl*
  end

  struct DispHTMLAreasCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLAreasCollection_GUID = "3050f56a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLAreasCollection = LibC::GUID.new(0x3050f56a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLAreasCollection
    lpVtbl : DispHTMLAreasCollectionVTbl*
  end

  struct DispHTMLMapElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLMapElement_GUID = "3050f526-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLMapElement = LibC::GUID.new(0x3050f526_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLMapElement
    lpVtbl : DispHTMLMapElementVTbl*
  end

  struct HTMLAreaEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLAreaEvents2_GUID = "3050f611-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLAreaEvents2 = LibC::GUID.new(0x3050f611_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLAreaEvents2
    lpVtbl : HTMLAreaEvents2VTbl*
  end

  struct HTMLAreaEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLAreaEvents_GUID = "3050f366-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLAreaEvents = LibC::GUID.new(0x3050f366_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLAreaEvents
    lpVtbl : HTMLAreaEventsVTbl*
  end

  struct IHTMLAreaElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_shape : UInt64
    get_shape : UInt64
    put_coords : UInt64
    get_coords : UInt64
    put_href : UInt64
    get_href : UInt64
    put_target : UInt64
    get_target : UInt64
    put_alt : UInt64
    get_alt : UInt64
    put_no_href : UInt64
    get_no_href : UInt64
    put_host : UInt64
    get_host : UInt64
    put_hostname : UInt64
    get_hostname : UInt64
    put_pathname : UInt64
    get_pathname : UInt64
    put_port : UInt64
    get_port : UInt64
    put_protocol : UInt64
    get_protocol : UInt64
    put_search : UInt64
    get_search : UInt64
    put_hash : UInt64
    get_hash : UInt64
    put_onblur : UInt64
    get_onblur : UInt64
    put_onfocus : UInt64
    get_onfocus : UInt64
    put_tab_index : UInt64
    get_tab_index : UInt64
    focus : UInt64
    blur : UInt64
  end

  IHTMLAreaElement_GUID = "3050f265-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAreaElement = LibC::GUID.new(0x3050f265_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAreaElement
    lpVtbl : IHTMLAreaElementVTbl*
  end

  struct IHTMLAreaElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_shape : UInt64
    get_shape : UInt64
    put_coords : UInt64
    get_coords : UInt64
    put_href : UInt64
    get_href : UInt64
  end

  IHTMLAreaElement2_GUID = "3051041f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAreaElement2 = LibC::GUID.new(0x3051041f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAreaElement2
    lpVtbl : IHTMLAreaElement2VTbl*
  end

  struct DispHTMLAreaElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLAreaElement_GUID = "3050f503-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLAreaElement = LibC::GUID.new(0x3050f503_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLAreaElement
    lpVtbl : DispHTMLAreaElementVTbl*
  end

  struct IHTMLTableCaptionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
    put_v_align : UInt64
    get_v_align : UInt64
  end

  IHTMLTableCaption_GUID = "3050f2eb-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableCaption = LibC::GUID.new(0x3050f2eb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableCaption
    lpVtbl : IHTMLTableCaptionVTbl*
  end

  struct DispHTMLTableCaptionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLTableCaption_GUID = "3050f508-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLTableCaption = LibC::GUID.new(0x3050f508_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLTableCaption
    lpVtbl : DispHTMLTableCaptionVTbl*
  end

  struct IHTMLCommentElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_text : UInt64
    get_text : UInt64
    put_atomic : UInt64
    get_atomic : UInt64
  end

  IHTMLCommentElement_GUID = "3050f20c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCommentElement = LibC::GUID.new(0x3050f20c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCommentElement
    lpVtbl : IHTMLCommentElementVTbl*
  end

  struct IHTMLCommentElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_data : UInt64
    get_data : UInt64
    get_length : UInt64
    substring_data : UInt64
    append_data : UInt64
    insert_data : UInt64
    delete_data : UInt64
    replace_data : UInt64
  end

  IHTMLCommentElement2_GUID = "3050f813-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCommentElement2 = LibC::GUID.new(0x3050f813_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCommentElement2
    lpVtbl : IHTMLCommentElement2VTbl*
  end

  struct IHTMLCommentElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    substring_data : UInt64
    insert_data : UInt64
    delete_data : UInt64
    replace_data : UInt64
  end

  IHTMLCommentElement3_GUID = "3051073f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCommentElement3 = LibC::GUID.new(0x3051073f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCommentElement3
    lpVtbl : IHTMLCommentElement3VTbl*
  end

  struct DispHTMLCommentElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLCommentElement_GUID = "3050f50a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLCommentElement = LibC::GUID.new(0x3050f50a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLCommentElement
    lpVtbl : DispHTMLCommentElementVTbl*
  end

  struct IHTMLPhraseElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  IHTMLPhraseElement_GUID = "3050f20a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPhraseElement = LibC::GUID.new(0x3050f20a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPhraseElement
    lpVtbl : IHTMLPhraseElementVTbl*
  end

  struct IHTMLPhraseElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_cite : UInt64
    get_cite : UInt64
    put_date_time : UInt64
    get_date_time : UInt64
  end

  IHTMLPhraseElement2_GUID = "3050f824-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPhraseElement2 = LibC::GUID.new(0x3050f824_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPhraseElement2
    lpVtbl : IHTMLPhraseElement2VTbl*
  end

  struct IHTMLPhraseElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_cite : UInt64
    get_cite : UInt64
  end

  IHTMLPhraseElement3_GUID = "3051043d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPhraseElement3 = LibC::GUID.new(0x3051043d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPhraseElement3
    lpVtbl : IHTMLPhraseElement3VTbl*
  end

  struct IHTMLSpanElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  IHTMLSpanElement_GUID = "3050f3f3-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSpanElement = LibC::GUID.new(0x3050f3f3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSpanElement
    lpVtbl : IHTMLSpanElementVTbl*
  end

  struct DispHTMLPhraseElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLPhraseElement_GUID = "3050f52d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLPhraseElement = LibC::GUID.new(0x3050f52d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLPhraseElement
    lpVtbl : DispHTMLPhraseElementVTbl*
  end

  struct DispHTMLSpanElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLSpanElement_GUID = "3050f548-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLSpanElement = LibC::GUID.new(0x3050f548_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLSpanElement
    lpVtbl : DispHTMLSpanElementVTbl*
  end

  struct HTMLTableEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLTableEvents2_GUID = "3050f623-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLTableEvents2 = LibC::GUID.new(0x3050f623_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLTableEvents2
    lpVtbl : HTMLTableEvents2VTbl*
  end

  struct HTMLTableEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLTableEvents_GUID = "3050f407-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLTableEvents = LibC::GUID.new(0x3050f407_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLTableEvents
    lpVtbl : HTMLTableEventsVTbl*
  end

  struct IHTMLTableSectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
    put_v_align : UInt64
    get_v_align : UInt64
    put_bg_color : UInt64
    get_bg_color : UInt64
    get_rows : UInt64
    insert_row : UInt64
    delete_row : UInt64
  end

  IHTMLTableSection_GUID = "3050f23b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableSection = LibC::GUID.new(0x3050f23b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableSection
    lpVtbl : IHTMLTableSectionVTbl*
  end

  struct IHTMLTableVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_cols : UInt64
    get_cols : UInt64
    put_border : UInt64
    get_border : UInt64
    put_frame : UInt64
    get_frame : UInt64
    put_rules : UInt64
    get_rules : UInt64
    put_cell_spacing : UInt64
    get_cell_spacing : UInt64
    put_cell_padding : UInt64
    get_cell_padding : UInt64
    put_background : UInt64
    get_background : UInt64
    put_bg_color : UInt64
    get_bg_color : UInt64
    put_border_color : UInt64
    get_border_color : UInt64
    put_border_color_light : UInt64
    get_border_color_light : UInt64
    put_border_color_dark : UInt64
    get_border_color_dark : UInt64
    put_align : UInt64
    get_align : UInt64
    refresh : UInt64
    get_rows : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    put_data_page_size : UInt64
    get_data_page_size : UInt64
    next_page : UInt64
    previous_page : UInt64
    get_t_head : UInt64
    get_t_foot : UInt64
    get_t_bodies : UInt64
    get_caption : UInt64
    create_t_head : UInt64
    delete_t_head : UInt64
    create_t_foot : UInt64
    delete_t_foot : UInt64
    create_caption : UInt64
    delete_caption : UInt64
    insert_row : UInt64
    delete_row : UInt64
    get_ready_state : UInt64
    put_onreadystatechange : UInt64
    get_onreadystatechange : UInt64
  end

  IHTMLTable_GUID = "3050f21e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTable = LibC::GUID.new(0x3050f21e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTable
    lpVtbl : IHTMLTableVTbl*
  end

  struct IHTMLTable2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    first_page : UInt64
    last_page : UInt64
    get_cells : UInt64
    move_row : UInt64
  end

  IHTMLTable2_GUID = "3050f4ad-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTable2 = LibC::GUID.new(0x3050f4ad_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTable2
    lpVtbl : IHTMLTable2VTbl*
  end

  struct IHTMLTable3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_summary : UInt64
    get_summary : UInt64
  end

  IHTMLTable3_GUID = "3050f829-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTable3 = LibC::GUID.new(0x3050f829_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTable3
    lpVtbl : IHTMLTable3VTbl*
  end

  struct IHTMLTable4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_t_head : UInt64
    get_t_head : UInt64
    putref_t_foot : UInt64
    get_t_foot : UInt64
    putref_caption : UInt64
    get_caption : UInt64
    insert_row : UInt64
    delete_row : UInt64
    create_t_body : UInt64
  end

  IHTMLTable4_GUID = "305106c2-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTable4 = LibC::GUID.new(0x305106c2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTable4
    lpVtbl : IHTMLTable4VTbl*
  end

  struct IHTMLTableColVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_span : UInt64
    get_span : UInt64
    put_width : UInt64
    get_width : UInt64
    put_align : UInt64
    get_align : UInt64
    put_v_align : UInt64
    get_v_align : UInt64
  end

  IHTMLTableCol_GUID = "3050f23a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableCol = LibC::GUID.new(0x3050f23a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableCol
    lpVtbl : IHTMLTableColVTbl*
  end

  struct IHTMLTableCol2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ch : UInt64
    get_ch : UInt64
    put_ch_off : UInt64
    get_ch_off : UInt64
  end

  IHTMLTableCol2_GUID = "3050f82a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableCol2 = LibC::GUID.new(0x3050f82a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableCol2
    lpVtbl : IHTMLTableCol2VTbl*
  end

  struct IHTMLTableCol3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ch : UInt64
    get_ch : UInt64
    put_ch_off : UInt64
    get_ch_off : UInt64
  end

  IHTMLTableCol3_GUID = "305106c4-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableCol3 = LibC::GUID.new(0x305106c4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableCol3
    lpVtbl : IHTMLTableCol3VTbl*
  end

  struct IHTMLTableSection2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    move_row : UInt64
  end

  IHTMLTableSection2_GUID = "3050f5c7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableSection2 = LibC::GUID.new(0x3050f5c7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableSection2
    lpVtbl : IHTMLTableSection2VTbl*
  end

  struct IHTMLTableSection3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ch : UInt64
    get_ch : UInt64
    put_ch_off : UInt64
    get_ch_off : UInt64
  end

  IHTMLTableSection3_GUID = "3050f82b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableSection3 = LibC::GUID.new(0x3050f82b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableSection3
    lpVtbl : IHTMLTableSection3VTbl*
  end

  struct IHTMLTableSection4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ch : UInt64
    get_ch : UInt64
    put_ch_off : UInt64
    get_ch_off : UInt64
    insert_row : UInt64
    delete_row : UInt64
  end

  IHTMLTableSection4_GUID = "305106c5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableSection4 = LibC::GUID.new(0x305106c5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableSection4
    lpVtbl : IHTMLTableSection4VTbl*
  end

  struct IHTMLTableRowVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
    put_v_align : UInt64
    get_v_align : UInt64
    put_bg_color : UInt64
    get_bg_color : UInt64
    put_border_color : UInt64
    get_border_color : UInt64
    put_border_color_light : UInt64
    get_border_color_light : UInt64
    put_border_color_dark : UInt64
    get_border_color_dark : UInt64
    get_row_index : UInt64
    get_section_row_index : UInt64
    get_cells : UInt64
    insert_cell : UInt64
    delete_cell : UInt64
  end

  IHTMLTableRow_GUID = "3050f23c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableRow = LibC::GUID.new(0x3050f23c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableRow
    lpVtbl : IHTMLTableRowVTbl*
  end

  struct IHTMLTableRow2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_height : UInt64
    get_height : UInt64
  end

  IHTMLTableRow2_GUID = "3050f4a1-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableRow2 = LibC::GUID.new(0x3050f4a1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableRow2
    lpVtbl : IHTMLTableRow2VTbl*
  end

  struct IHTMLTableRow3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ch : UInt64
    get_ch : UInt64
    put_ch_off : UInt64
    get_ch_off : UInt64
  end

  IHTMLTableRow3_GUID = "3050f82c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableRow3 = LibC::GUID.new(0x3050f82c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableRow3
    lpVtbl : IHTMLTableRow3VTbl*
  end

  struct IHTMLTableRow4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ch : UInt64
    get_ch : UInt64
    put_ch_off : UInt64
    get_ch_off : UInt64
    insert_cell : UInt64
    delete_cell : UInt64
  end

  IHTMLTableRow4_GUID = "305106c6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableRow4 = LibC::GUID.new(0x305106c6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableRow4
    lpVtbl : IHTMLTableRow4VTbl*
  end

  struct IHTMLTableRowMetricsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_client_height : UInt64
    get_client_width : UInt64
    get_client_top : UInt64
    get_client_left : UInt64
  end

  IHTMLTableRowMetrics_GUID = "3050f413-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableRowMetrics = LibC::GUID.new(0x3050f413_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableRowMetrics
    lpVtbl : IHTMLTableRowMetricsVTbl*
  end

  struct IHTMLTableCellVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_row_span : UInt64
    get_row_span : UInt64
    put_col_span : UInt64
    get_col_span : UInt64
    put_align : UInt64
    get_align : UInt64
    put_v_align : UInt64
    get_v_align : UInt64
    put_bg_color : UInt64
    get_bg_color : UInt64
    put_no_wrap : UInt64
    get_no_wrap : UInt64
    put_background : UInt64
    get_background : UInt64
    put_border_color : UInt64
    get_border_color : UInt64
    put_border_color_light : UInt64
    get_border_color_light : UInt64
    put_border_color_dark : UInt64
    get_border_color_dark : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    get_cell_index : UInt64
  end

  IHTMLTableCell_GUID = "3050f23d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableCell = LibC::GUID.new(0x3050f23d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableCell
    lpVtbl : IHTMLTableCellVTbl*
  end

  struct IHTMLTableCell2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_abbr : UInt64
    get_abbr : UInt64
    put_axis : UInt64
    get_axis : UInt64
    put_ch : UInt64
    get_ch : UInt64
    put_ch_off : UInt64
    get_ch_off : UInt64
    put_headers : UInt64
    get_headers : UInt64
    put_scope : UInt64
    get_scope : UInt64
  end

  IHTMLTableCell2_GUID = "3050f82d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableCell2 = LibC::GUID.new(0x3050f82d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableCell2
    lpVtbl : IHTMLTableCell2VTbl*
  end

  struct IHTMLTableCell3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ch : UInt64
    get_ch : UInt64
    put_ch_off : UInt64
    get_ch_off : UInt64
  end

  IHTMLTableCell3_GUID = "305106c7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTableCell3 = LibC::GUID.new(0x305106c7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTableCell3
    lpVtbl : IHTMLTableCell3VTbl*
  end

  struct DispHTMLTableVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLTable_GUID = "3050f532-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLTable = LibC::GUID.new(0x3050f532_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLTable
    lpVtbl : DispHTMLTableVTbl*
  end

  struct DispHTMLTableColVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLTableCol_GUID = "3050f533-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLTableCol = LibC::GUID.new(0x3050f533_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLTableCol
    lpVtbl : DispHTMLTableColVTbl*
  end

  struct DispHTMLTableSectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLTableSection_GUID = "3050f534-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLTableSection = LibC::GUID.new(0x3050f534_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLTableSection
    lpVtbl : DispHTMLTableSectionVTbl*
  end

  struct DispHTMLTableRowVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLTableRow_GUID = "3050f535-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLTableRow = LibC::GUID.new(0x3050f535_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLTableRow
    lpVtbl : DispHTMLTableRowVTbl*
  end

  struct DispHTMLTableCellVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLTableCell_GUID = "3050f536-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLTableCell = LibC::GUID.new(0x3050f536_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLTableCell
    lpVtbl : DispHTMLTableCellVTbl*
  end

  struct HTMLScriptEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLScriptEvents2_GUID = "3050f621-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLScriptEvents2 = LibC::GUID.new(0x3050f621_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLScriptEvents2
    lpVtbl : HTMLScriptEvents2VTbl*
  end

  struct HTMLScriptEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLScriptEvents_GUID = "3050f3e2-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLScriptEvents = LibC::GUID.new(0x3050f3e2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLScriptEvents
    lpVtbl : HTMLScriptEventsVTbl*
  end

  struct IHTMLScriptElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_src : UInt64
    get_src : UInt64
    put_html_for : UInt64
    get_html_for : UInt64
    put_event : UInt64
    get_event : UInt64
    put_text : UInt64
    get_text : UInt64
    put_defer : UInt64
    get_defer : UInt64
    get_ready_state : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    put_type : UInt64
    get_type : UInt64
  end

  IHTMLScriptElement_GUID = "3050f28b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLScriptElement = LibC::GUID.new(0x3050f28b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLScriptElement
    lpVtbl : IHTMLScriptElementVTbl*
  end

  struct IHTMLScriptElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_charset : UInt64
    get_charset : UInt64
  end

  IHTMLScriptElement2_GUID = "3050f828-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLScriptElement2 = LibC::GUID.new(0x3050f828_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLScriptElement2
    lpVtbl : IHTMLScriptElement2VTbl*
  end

  struct IHTMLScriptElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_src : UInt64
    get_src : UInt64
  end

  IHTMLScriptElement3_GUID = "30510447-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLScriptElement3 = LibC::GUID.new(0x30510447_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLScriptElement3
    lpVtbl : IHTMLScriptElement3VTbl*
  end

  struct IHTMLScriptElement4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_used_charset : UInt64
  end

  IHTMLScriptElement4_GUID = "30510801-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLScriptElement4 = LibC::GUID.new(0x30510801_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLScriptElement4
    lpVtbl : IHTMLScriptElement4VTbl*
  end

  struct DispHTMLScriptElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLScriptElement_GUID = "3050f530-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLScriptElement = LibC::GUID.new(0x3050f530_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLScriptElement
    lpVtbl : DispHTMLScriptElementVTbl*
  end

  struct IHTMLNoShowElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  IHTMLNoShowElement_GUID = "3050f38a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLNoShowElement = LibC::GUID.new(0x3050f38a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLNoShowElement
    lpVtbl : IHTMLNoShowElementVTbl*
  end

  struct DispHTMLNoShowElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLNoShowElement_GUID = "3050f528-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLNoShowElement = LibC::GUID.new(0x3050f528_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLNoShowElement
    lpVtbl : DispHTMLNoShowElementVTbl*
  end

  struct HTMLObjectElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLObjectElementEvents2_GUID = "3050f620-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLObjectElementEvents2 = LibC::GUID.new(0x3050f620_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLObjectElementEvents2
    lpVtbl : HTMLObjectElementEvents2VTbl*
  end

  struct HTMLObjectElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLObjectElementEvents_GUID = "3050f3c4-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLObjectElementEvents = LibC::GUID.new(0x3050f3c4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLObjectElementEvents
    lpVtbl : HTMLObjectElementEventsVTbl*
  end

  struct IHTMLObjectElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_object : UInt64
    get_classid : UInt64
    get_data : UInt64
    putref_recordset : UInt64
    get_recordset : UInt64
    put_align : UInt64
    get_align : UInt64
    put_name : UInt64
    get_name : UInt64
    put_code_base : UInt64
    get_code_base : UInt64
    put_code_type : UInt64
    get_code_type : UInt64
    put_code : UInt64
    get_code : UInt64
    get_base_href : UInt64
    put_type : UInt64
    get_type : UInt64
    get_form : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    get_ready_state : UInt64
    put_onreadystatechange : UInt64
    get_onreadystatechange : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    put_alt_html : UInt64
    get_alt_html : UInt64
    put_vspace : UInt64
    get_vspace : UInt64
    put_hspace : UInt64
    get_hspace : UInt64
  end

  IHTMLObjectElement_GUID = "3050f24f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLObjectElement = LibC::GUID.new(0x3050f24f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLObjectElement
    lpVtbl : IHTMLObjectElementVTbl*
  end

  struct IHTMLObjectElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    named_recordset : UInt64
    put_classid : UInt64
    get_classid : UInt64
    put_data : UInt64
    get_data : UInt64
  end

  IHTMLObjectElement2_GUID = "3050f4cd-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLObjectElement2 = LibC::GUID.new(0x3050f4cd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLObjectElement2
    lpVtbl : IHTMLObjectElement2VTbl*
  end

  struct IHTMLObjectElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_archive : UInt64
    get_archive : UInt64
    put_alt : UInt64
    get_alt : UInt64
    put_declare : UInt64
    get_declare : UInt64
    put_standby : UInt64
    get_standby : UInt64
    put_border : UInt64
    get_border : UInt64
    put_use_map : UInt64
    get_use_map : UInt64
  end

  IHTMLObjectElement3_GUID = "3050f827-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLObjectElement3 = LibC::GUID.new(0x3050f827_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLObjectElement3
    lpVtbl : IHTMLObjectElement3VTbl*
  end

  struct IHTMLObjectElement4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_content_document : UInt64
    put_code_base : UInt64
    get_code_base : UInt64
    put_data : UInt64
    get_data : UInt64
  end

  IHTMLObjectElement4_GUID = "3051043e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLObjectElement4 = LibC::GUID.new(0x3051043e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLObjectElement4
    lpVtbl : IHTMLObjectElement4VTbl*
  end

  struct IHTMLObjectElement5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_object : UInt64
    get_object : UInt64
  end

  IHTMLObjectElement5_GUID = "305104b5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLObjectElement5 = LibC::GUID.new(0x305104b5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLObjectElement5
    lpVtbl : IHTMLObjectElement5VTbl*
  end

  struct IHTMLParamElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_name : UInt64
    get_name : UInt64
    put_value : UInt64
    get_value : UInt64
    put_type : UInt64
    get_type : UInt64
    put_value_type : UInt64
    get_value_type : UInt64
  end

  IHTMLParamElement_GUID = "3050f83d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLParamElement = LibC::GUID.new(0x3050f83d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLParamElement
    lpVtbl : IHTMLParamElementVTbl*
  end

  struct IHTMLParamElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_name : UInt64
    get_name : UInt64
    put_type : UInt64
    get_type : UInt64
    put_value : UInt64
    get_value : UInt64
    put_value_type : UInt64
    get_value_type : UInt64
  end

  IHTMLParamElement2_GUID = "30510444-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLParamElement2 = LibC::GUID.new(0x30510444_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLParamElement2
    lpVtbl : IHTMLParamElement2VTbl*
  end

  struct DispHTMLObjectElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLObjectElement_GUID = "3050f529-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLObjectElement = LibC::GUID.new(0x3050f529_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLObjectElement
    lpVtbl : DispHTMLObjectElementVTbl*
  end

  struct DispHTMLParamElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLParamElement_GUID = "3050f590-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLParamElement = LibC::GUID.new(0x3050f590_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLParamElement
    lpVtbl : DispHTMLParamElementVTbl*
  end

  struct HTMLFrameSiteEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLFrameSiteEvents2_GUID = "3050f7ff-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLFrameSiteEvents2 = LibC::GUID.new(0x3050f7ff_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLFrameSiteEvents2
    lpVtbl : HTMLFrameSiteEvents2VTbl*
  end

  struct HTMLFrameSiteEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLFrameSiteEvents_GUID = "3050f800-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLFrameSiteEvents = LibC::GUID.new(0x3050f800_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLFrameSiteEvents
    lpVtbl : HTMLFrameSiteEventsVTbl*
  end

  struct IHTMLFrameBase2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_content_window : UInt64
    put_onload : UInt64
    get_onload : UInt64
    put_onreadystatechange : UInt64
    get_onreadystatechange : UInt64
    get_ready_state : UInt64
    put_allow_transparency : UInt64
    get_allow_transparency : UInt64
  end

  IHTMLFrameBase2_GUID = "3050f6db-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFrameBase2 = LibC::GUID.new(0x3050f6db_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFrameBase2
    lpVtbl : IHTMLFrameBase2VTbl*
  end

  struct IHTMLFrameBase3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_long_desc : UInt64
    get_long_desc : UInt64
  end

  IHTMLFrameBase3_GUID = "3050f82e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFrameBase3 = LibC::GUID.new(0x3050f82e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFrameBase3
    lpVtbl : IHTMLFrameBase3VTbl*
  end

  struct DispHTMLFrameBaseVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLFrameBase_GUID = "3050f541-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLFrameBase = LibC::GUID.new(0x3050f541_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLFrameBase
    lpVtbl : DispHTMLFrameBaseVTbl*
  end

  struct IHTMLFrameElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_border_color : UInt64
    get_border_color : UInt64
  end

  IHTMLFrameElement_GUID = "3050f313-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFrameElement = LibC::GUID.new(0x3050f313_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFrameElement
    lpVtbl : IHTMLFrameElementVTbl*
  end

  struct IHTMLFrameElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_height : UInt64
    get_height : UInt64
    put_width : UInt64
    get_width : UInt64
  end

  IHTMLFrameElement2_GUID = "3050f7f5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFrameElement2 = LibC::GUID.new(0x3050f7f5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFrameElement2
    lpVtbl : IHTMLFrameElement2VTbl*
  end

  struct IHTMLFrameElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_content_document : UInt64
    put_src : UInt64
    get_src : UInt64
    put_long_desc : UInt64
    get_long_desc : UInt64
    put_frame_border : UInt64
    get_frame_border : UInt64
  end

  IHTMLFrameElement3_GUID = "3051042d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFrameElement3 = LibC::GUID.new(0x3051042d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFrameElement3
    lpVtbl : IHTMLFrameElement3VTbl*
  end

  struct DispHTMLFrameElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLFrameElement_GUID = "3050f513-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLFrameElement = LibC::GUID.new(0x3050f513_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLFrameElement
    lpVtbl : DispHTMLFrameElementVTbl*
  end

  struct IHTMLIFrameElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_vspace : UInt64
    get_vspace : UInt64
    put_hspace : UInt64
    get_hspace : UInt64
    put_align : UInt64
    get_align : UInt64
  end

  IHTMLIFrameElement_GUID = "3050f315-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLIFrameElement = LibC::GUID.new(0x3050f315_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLIFrameElement
    lpVtbl : IHTMLIFrameElementVTbl*
  end

  struct IHTMLIFrameElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_height : UInt64
    get_height : UInt64
    put_width : UInt64
    get_width : UInt64
  end

  IHTMLIFrameElement2_GUID = "3050f4e6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLIFrameElement2 = LibC::GUID.new(0x3050f4e6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLIFrameElement2
    lpVtbl : IHTMLIFrameElement2VTbl*
  end

  struct IHTMLIFrameElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_content_document : UInt64
    put_src : UInt64
    get_src : UInt64
    put_long_desc : UInt64
    get_long_desc : UInt64
    put_frame_border : UInt64
    get_frame_border : UInt64
  end

  IHTMLIFrameElement3_GUID = "30510433-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLIFrameElement3 = LibC::GUID.new(0x30510433_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLIFrameElement3
    lpVtbl : IHTMLIFrameElement3VTbl*
  end

  struct DispHTMLIFrameVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLIFrame_GUID = "3050f51b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLIFrame = LibC::GUID.new(0x3050f51b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLIFrame
    lpVtbl : DispHTMLIFrameVTbl*
  end

  struct IHTMLDivPositionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
  end

  IHTMLDivPosition_GUID = "3050f212-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDivPosition = LibC::GUID.new(0x3050f212_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDivPosition
    lpVtbl : IHTMLDivPositionVTbl*
  end

  struct IHTMLFieldSetElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
  end

  IHTMLFieldSetElement_GUID = "3050f3e7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFieldSetElement = LibC::GUID.new(0x3050f3e7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFieldSetElement
    lpVtbl : IHTMLFieldSetElementVTbl*
  end

  struct IHTMLFieldSetElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_form : UInt64
  end

  IHTMLFieldSetElement2_GUID = "3050f833-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFieldSetElement2 = LibC::GUID.new(0x3050f833_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFieldSetElement2
    lpVtbl : IHTMLFieldSetElement2VTbl*
  end

  struct IHTMLLegendElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
  end

  IHTMLLegendElement_GUID = "3050f3ea-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLLegendElement = LibC::GUID.new(0x3050f3ea_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLLegendElement
    lpVtbl : IHTMLLegendElementVTbl*
  end

  struct IHTMLLegendElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_form : UInt64
  end

  IHTMLLegendElement2_GUID = "3050f834-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLLegendElement2 = LibC::GUID.new(0x3050f834_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLLegendElement2
    lpVtbl : IHTMLLegendElement2VTbl*
  end

  struct DispHTMLDivPositionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLDivPosition_GUID = "3050f50f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLDivPosition = LibC::GUID.new(0x3050f50f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLDivPosition
    lpVtbl : DispHTMLDivPositionVTbl*
  end

  struct DispHTMLFieldSetElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLFieldSetElement_GUID = "3050f545-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLFieldSetElement = LibC::GUID.new(0x3050f545_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLFieldSetElement
    lpVtbl : DispHTMLFieldSetElementVTbl*
  end

  struct DispHTMLLegendElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLLegendElement_GUID = "3050f546-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLLegendElement = LibC::GUID.new(0x3050f546_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLLegendElement
    lpVtbl : DispHTMLLegendElementVTbl*
  end

  struct IHTMLSpanFlowVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
  end

  IHTMLSpanFlow_GUID = "3050f3e5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSpanFlow = LibC::GUID.new(0x3050f3e5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSpanFlow
    lpVtbl : IHTMLSpanFlowVTbl*
  end

  struct DispHTMLSpanFlowVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLSpanFlow_GUID = "3050f544-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLSpanFlow = LibC::GUID.new(0x3050f544_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLSpanFlow
    lpVtbl : DispHTMLSpanFlowVTbl*
  end

  struct IHTMLFrameSetElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_rows : UInt64
    get_rows : UInt64
    put_cols : UInt64
    get_cols : UInt64
    put_border : UInt64
    get_border : UInt64
    put_border_color : UInt64
    get_border_color : UInt64
    put_frame_border : UInt64
    get_frame_border : UInt64
    put_frame_spacing : UInt64
    get_frame_spacing : UInt64
    put_name : UInt64
    get_name : UInt64
    put_onload : UInt64
    get_onload : UInt64
    put_onunload : UInt64
    get_onunload : UInt64
    put_onbeforeunload : UInt64
    get_onbeforeunload : UInt64
  end

  IHTMLFrameSetElement_GUID = "3050f319-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFrameSetElement = LibC::GUID.new(0x3050f319_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFrameSetElement
    lpVtbl : IHTMLFrameSetElementVTbl*
  end

  struct IHTMLFrameSetElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_onbeforeprint : UInt64
    get_onbeforeprint : UInt64
    put_onafterprint : UInt64
    get_onafterprint : UInt64
  end

  IHTMLFrameSetElement2_GUID = "3050f5c6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFrameSetElement2 = LibC::GUID.new(0x3050f5c6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFrameSetElement2
    lpVtbl : IHTMLFrameSetElement2VTbl*
  end

  struct IHTMLFrameSetElement3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_onhashchange : UInt64
    get_onhashchange : UInt64
    put_onmessage : UInt64
    get_onmessage : UInt64
    put_onoffline : UInt64
    get_onoffline : UInt64
    put_ononline : UInt64
    get_ononline : UInt64
    put_onstorage : UInt64
    get_onstorage : UInt64
  end

  IHTMLFrameSetElement3_GUID = "30510796-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFrameSetElement3 = LibC::GUID.new(0x30510796_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFrameSetElement3
    lpVtbl : IHTMLFrameSetElement3VTbl*
  end

  struct DispHTMLFrameSetSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLFrameSetSite_GUID = "3050f514-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLFrameSetSite = LibC::GUID.new(0x3050f514_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLFrameSetSite
    lpVtbl : DispHTMLFrameSetSiteVTbl*
  end

  struct IHTMLBGsoundVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_src : UInt64
    get_src : UInt64
    put_loop : UInt64
    get_loop : UInt64
    put_volume : UInt64
    get_volume : UInt64
    put_balance : UInt64
    get_balance : UInt64
  end

  IHTMLBGsound_GUID = "3050f369-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLBGsound = LibC::GUID.new(0x3050f369_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLBGsound
    lpVtbl : IHTMLBGsoundVTbl*
  end

  struct DispHTMLBGsoundVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLBGsound_GUID = "3050f53c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLBGsound = LibC::GUID.new(0x3050f53c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLBGsound
    lpVtbl : DispHTMLBGsoundVTbl*
  end

  struct IHTMLFontNamesCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
  end

  IHTMLFontNamesCollection_GUID = "3050f376-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFontNamesCollection = LibC::GUID.new(0x3050f376_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFontNamesCollection
    lpVtbl : IHTMLFontNamesCollectionVTbl*
  end

  struct IHTMLFontSizesCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    get_for_font : UInt64
    item : UInt64
  end

  IHTMLFontSizesCollection_GUID = "3050f377-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLFontSizesCollection = LibC::GUID.new(0x3050f377_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLFontSizesCollection
    lpVtbl : IHTMLFontSizesCollectionVTbl*
  end

  struct IHTMLOptionsHolderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_document : UInt64
    get_fonts : UInt64
    put_exec_arg : UInt64
    get_exec_arg : UInt64
    put_error_line : UInt64
    get_error_line : UInt64
    put_error_character : UInt64
    get_error_character : UInt64
    put_error_code : UInt64
    get_error_code : UInt64
    put_error_message : UInt64
    get_error_message : UInt64
    put_error_debug : UInt64
    get_error_debug : UInt64
    get_unsecured_window_of_document : UInt64
    put_find_text : UInt64
    get_find_text : UInt64
    put_anything_after_frameset : UInt64
    get_anything_after_frameset : UInt64
    sizes : UInt64
    openfiledlg : UInt64
    savefiledlg : UInt64
    choosecolordlg : UInt64
    show_security_info : UInt64
    is_apartment_model : UInt64
    get_charset : UInt64
    get_secure_connection_info : UInt64
  end

  IHTMLOptionsHolder_GUID = "3050f378-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLOptionsHolder = LibC::GUID.new(0x3050f378_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLOptionsHolder
    lpVtbl : IHTMLOptionsHolderVTbl*
  end

  struct HTMLStyleElementEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLStyleElementEvents2_GUID = "3050f615-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLStyleElementEvents2 = LibC::GUID.new(0x3050f615_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLStyleElementEvents2
    lpVtbl : HTMLStyleElementEvents2VTbl*
  end

  struct HTMLStyleElementEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLStyleElementEvents_GUID = "3050f3cb-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLStyleElementEvents = LibC::GUID.new(0x3050f3cb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLStyleElementEvents
    lpVtbl : HTMLStyleElementEventsVTbl*
  end

  struct IHTMLStyleElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_type : UInt64
    get_type : UInt64
    get_ready_state : UInt64
    put_onreadystatechange : UInt64
    get_onreadystatechange : UInt64
    put_onload : UInt64
    get_onload : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    get_style_sheet : UInt64
    put_disabled : UInt64
    get_disabled : UInt64
    put_media : UInt64
    get_media : UInt64
  end

  IHTMLStyleElement_GUID = "3050f375-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleElement = LibC::GUID.new(0x3050f375_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleElement
    lpVtbl : IHTMLStyleElementVTbl*
  end

  struct IHTMLStyleElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_sheet : UInt64
  end

  IHTMLStyleElement2_GUID = "3051072a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleElement2 = LibC::GUID.new(0x3051072a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleElement2
    lpVtbl : IHTMLStyleElement2VTbl*
  end

  struct DispHTMLStyleElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStyleElement_GUID = "3050f511-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStyleElement = LibC::GUID.new(0x3050f511_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStyleElement
    lpVtbl : DispHTMLStyleElementVTbl*
  end

  struct IHTMLStyleFontFaceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_fontsrc : UInt64
    get_fontsrc : UInt64
  end

  IHTMLStyleFontFace_GUID = "3050f3d5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleFontFace = LibC::GUID.new(0x3050f3d5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleFontFace
    lpVtbl : IHTMLStyleFontFaceVTbl*
  end

  struct IHTMLStyleFontFace2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_style : UInt64
  end

  IHTMLStyleFontFace2_GUID = "305106ec-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleFontFace2 = LibC::GUID.new(0x305106ec_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleFontFace2
    lpVtbl : IHTMLStyleFontFace2VTbl*
  end

  struct DispHTMLStyleFontFaceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStyleFontFace_GUID = "30590081-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStyleFontFace = LibC::GUID.new(0x30590081_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStyleFontFace
    lpVtbl : DispHTMLStyleFontFaceVTbl*
  end

  struct IHTMLXDomainRequestVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_response_text : UInt64
    put_timeout : UInt64
    get_timeout : UInt64
    get_content_type : UInt64
    put_onprogress : UInt64
    get_onprogress : UInt64
    put_onerror : UInt64
    get_onerror : UInt64
    put_ontimeout : UInt64
    get_ontimeout : UInt64
    put_onload : UInt64
    get_onload : UInt64
    abort : UInt64
    open : UInt64
    send : UInt64
  end

  IHTMLXDomainRequest_GUID = "30510454-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLXDomainRequest = LibC::GUID.new(0x30510454_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLXDomainRequest
    lpVtbl : IHTMLXDomainRequestVTbl*
  end

  struct IHTMLXDomainRequestFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create : UInt64
  end

  IHTMLXDomainRequestFactory_GUID = "30510456-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLXDomainRequestFactory = LibC::GUID.new(0x30510456_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLXDomainRequestFactory
    lpVtbl : IHTMLXDomainRequestFactoryVTbl*
  end

  struct DispXDomainRequestVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispXDomainRequest_GUID = "3050f599-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispXDomainRequest = LibC::GUID.new(0x3050f599_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispXDomainRequest
    lpVtbl : DispXDomainRequestVTbl*
  end

  struct IHTMLStorage2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    set_item : UInt64
  end

  IHTMLStorage2_GUID = "30510799-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStorage2 = LibC::GUID.new(0x30510799_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStorage2
    lpVtbl : IHTMLStorage2VTbl*
  end

  struct DispHTMLStorageVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStorage_GUID = "3050f59d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStorage = LibC::GUID.new(0x3050f59d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStorage
    lpVtbl : DispHTMLStorageVTbl*
  end

  struct IEventTargetVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    add_event_listener : UInt64
    remove_event_listener : UInt64
    dispatch_event : UInt64
  end

  IEventTarget_GUID = "305104b9-98b5-11cf-bb82-00aa00bdce0b"
  IID_IEventTarget = LibC::GUID.new(0x305104b9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IEventTarget
    lpVtbl : IEventTargetVTbl*
  end

  struct DispDOMEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMEvent_GUID = "3050f5a2-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMEvent = LibC::GUID.new(0x3050f5a2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMEvent
    lpVtbl : DispDOMEventVTbl*
  end

  struct IDOMUIEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_view : UInt64
    get_detail : UInt64
    init_ui_event : UInt64
  end

  IDOMUIEvent_GUID = "305106ca-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMUIEvent = LibC::GUID.new(0x305106ca_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMUIEvent
    lpVtbl : IDOMUIEventVTbl*
  end

  struct DispDOMUIEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMUIEvent_GUID = "30590072-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMUIEvent = LibC::GUID.new(0x30590072_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMUIEvent
    lpVtbl : DispDOMUIEventVTbl*
  end

  struct IDOMMouseEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_screen_x : UInt64
    get_screen_y : UInt64
    get_client_x : UInt64
    get_client_y : UInt64
    get_ctrl_key : UInt64
    get_shift_key : UInt64
    get_alt_key : UInt64
    get_meta_key : UInt64
    get_button : UInt64
    get_related_target : UInt64
    init_mouse_event : UInt64
    get_modifier_state : UInt64
    get_buttons : UInt64
    get_from_element : UInt64
    get_to_element : UInt64
    get_x : UInt64
    get_y : UInt64
    get_offset_x : UInt64
    get_offset_y : UInt64
    get_page_x : UInt64
    get_page_y : UInt64
    get_layer_x : UInt64
    get_layer_y : UInt64
    get_which : UInt64
  end

  IDOMMouseEvent_GUID = "305106ce-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMMouseEvent = LibC::GUID.new(0x305106ce_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMMouseEvent
    lpVtbl : IDOMMouseEventVTbl*
  end

  struct DispDOMMouseEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMMouseEvent_GUID = "30590073-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMMouseEvent = LibC::GUID.new(0x30590073_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMMouseEvent
    lpVtbl : DispDOMMouseEventVTbl*
  end

  struct IDOMDragEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_data_transfer : UInt64
    init_drag_event : UInt64
  end

  IDOMDragEvent_GUID = "30510761-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMDragEvent = LibC::GUID.new(0x30510761_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMDragEvent
    lpVtbl : IDOMDragEventVTbl*
  end

  struct DispDOMDragEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMDragEvent_GUID = "305900a7-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMDragEvent = LibC::GUID.new(0x305900a7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMDragEvent
    lpVtbl : DispDOMDragEventVTbl*
  end

  struct IDOMMouseWheelEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_wheel_delta : UInt64
    init_mouse_wheel_event : UInt64
  end

  IDOMMouseWheelEvent_GUID = "305106d0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMMouseWheelEvent = LibC::GUID.new(0x305106d0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMMouseWheelEvent
    lpVtbl : IDOMMouseWheelEventVTbl*
  end

  struct DispDOMMouseWheelEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMMouseWheelEvent_GUID = "30590074-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMMouseWheelEvent = LibC::GUID.new(0x30590074_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMMouseWheelEvent
    lpVtbl : DispDOMMouseWheelEventVTbl*
  end

  struct IDOMWheelEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_delta_x : UInt64
    get_delta_y : UInt64
    get_delta_z : UInt64
    get_delta_mode : UInt64
    init_wheel_event : UInt64
  end

  IDOMWheelEvent_GUID = "305106d2-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMWheelEvent = LibC::GUID.new(0x305106d2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMWheelEvent
    lpVtbl : IDOMWheelEventVTbl*
  end

  struct DispDOMWheelEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMWheelEvent_GUID = "30590075-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMWheelEvent = LibC::GUID.new(0x30590075_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMWheelEvent
    lpVtbl : DispDOMWheelEventVTbl*
  end

  struct IDOMTextEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_data : UInt64
    get_input_method : UInt64
    init_text_event : UInt64
    get_locale : UInt64
  end

  IDOMTextEvent_GUID = "305106d4-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMTextEvent = LibC::GUID.new(0x305106d4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMTextEvent
    lpVtbl : IDOMTextEventVTbl*
  end

  struct DispDOMTextEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMTextEvent_GUID = "30590076-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMTextEvent = LibC::GUID.new(0x30590076_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMTextEvent
    lpVtbl : DispDOMTextEventVTbl*
  end

  struct IDOMKeyboardEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_key : UInt64
    get_location : UInt64
    get_ctrl_key : UInt64
    get_shift_key : UInt64
    get_alt_key : UInt64
    get_meta_key : UInt64
    get_repeat : UInt64
    get_modifier_state : UInt64
    init_keyboard_event : UInt64
    get_key_code : UInt64
    get_char_code : UInt64
    get_which : UInt64
    get_ie9_char : UInt64
    get_locale : UInt64
  end

  IDOMKeyboardEvent_GUID = "305106d6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMKeyboardEvent = LibC::GUID.new(0x305106d6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMKeyboardEvent
    lpVtbl : IDOMKeyboardEventVTbl*
  end

  struct DispDOMKeyboardEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMKeyboardEvent_GUID = "30590077-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMKeyboardEvent = LibC::GUID.new(0x30590077_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMKeyboardEvent
    lpVtbl : DispDOMKeyboardEventVTbl*
  end

  struct IDOMCompositionEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_data : UInt64
    init_composition_event : UInt64
    get_locale : UInt64
  end

  IDOMCompositionEvent_GUID = "305106d8-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMCompositionEvent = LibC::GUID.new(0x305106d8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMCompositionEvent
    lpVtbl : IDOMCompositionEventVTbl*
  end

  struct DispDOMCompositionEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMCompositionEvent_GUID = "30590078-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMCompositionEvent = LibC::GUID.new(0x30590078_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMCompositionEvent
    lpVtbl : DispDOMCompositionEventVTbl*
  end

  struct IDOMMutationEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_related_node : UInt64
    get_prev_value : UInt64
    get_new_value : UInt64
    get_attr_name : UInt64
    get_attr_change : UInt64
    init_mutation_event : UInt64
  end

  IDOMMutationEvent_GUID = "305106da-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMMutationEvent = LibC::GUID.new(0x305106da_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMMutationEvent
    lpVtbl : IDOMMutationEventVTbl*
  end

  struct DispDOMMutationEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMMutationEvent_GUID = "30590079-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMMutationEvent = LibC::GUID.new(0x30590079_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMMutationEvent
    lpVtbl : DispDOMMutationEventVTbl*
  end

  struct IDOMBeforeUnloadEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_return_value : UInt64
    get_return_value : UInt64
  end

  IDOMBeforeUnloadEvent_GUID = "30510763-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMBeforeUnloadEvent = LibC::GUID.new(0x30510763_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMBeforeUnloadEvent
    lpVtbl : IDOMBeforeUnloadEventVTbl*
  end

  struct DispDOMBeforeUnloadEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMBeforeUnloadEvent_GUID = "305900a8-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMBeforeUnloadEvent = LibC::GUID.new(0x305900a8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMBeforeUnloadEvent
    lpVtbl : DispDOMBeforeUnloadEventVTbl*
  end

  struct IDOMFocusEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_related_target : UInt64
    init_focus_event : UInt64
  end

  IDOMFocusEvent_GUID = "305106cc-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMFocusEvent = LibC::GUID.new(0x305106cc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMFocusEvent
    lpVtbl : IDOMFocusEventVTbl*
  end

  struct DispDOMFocusEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMFocusEvent_GUID = "30590071-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMFocusEvent = LibC::GUID.new(0x30590071_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMFocusEvent
    lpVtbl : DispDOMFocusEventVTbl*
  end

  struct IDOMCustomEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_detail : UInt64
    init_custom_event : UInt64
  end

  IDOMCustomEvent_GUID = "305106de-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMCustomEvent = LibC::GUID.new(0x305106de_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMCustomEvent
    lpVtbl : IDOMCustomEventVTbl*
  end

  struct DispDOMCustomEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMCustomEvent_GUID = "3059007c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMCustomEvent = LibC::GUID.new(0x3059007c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMCustomEvent
    lpVtbl : DispDOMCustomEventVTbl*
  end

  struct ICanvasGradientVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    add_color_stop : UInt64
  end

  ICanvasGradient_GUID = "30510714-98b5-11cf-bb82-00aa00bdce0b"
  IID_ICanvasGradient = LibC::GUID.new(0x30510714_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ICanvasGradient
    lpVtbl : ICanvasGradientVTbl*
  end

  struct ICanvasPatternVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ICanvasPattern_GUID = "30510716-98b5-11cf-bb82-00aa00bdce0b"
  IID_ICanvasPattern = LibC::GUID.new(0x30510716_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ICanvasPattern
    lpVtbl : ICanvasPatternVTbl*
  end

  struct ICanvasTextMetricsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_width : UInt64
  end

  ICanvasTextMetrics_GUID = "30510718-98b5-11cf-bb82-00aa00bdce0b"
  IID_ICanvasTextMetrics = LibC::GUID.new(0x30510718_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ICanvasTextMetrics
    lpVtbl : ICanvasTextMetricsVTbl*
  end

  struct ICanvasImageDataVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_width : UInt64
    get_height : UInt64
    get_data : UInt64
  end

  ICanvasImageData_GUID = "3051071a-98b5-11cf-bb82-00aa00bdce0b"
  IID_ICanvasImageData = LibC::GUID.new(0x3051071a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ICanvasImageData
    lpVtbl : ICanvasImageDataVTbl*
  end

  struct ICanvasPixelArrayVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
  end

  ICanvasPixelArray_GUID = "3051071c-98b5-11cf-bb82-00aa00bdce0b"
  IID_ICanvasPixelArray = LibC::GUID.new(0x3051071c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ICanvasPixelArray
    lpVtbl : ICanvasPixelArrayVTbl*
  end

  struct IHTMLCanvasElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    get_context : UInt64
    to_data_url : UInt64
  end

  IHTMLCanvasElement_GUID = "305106e4-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCanvasElement = LibC::GUID.new(0x305106e4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCanvasElement
    lpVtbl : IHTMLCanvasElementVTbl*
  end

  struct ICanvasRenderingContext2DVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_canvas : UInt64
    restore : UInt64
    save : UInt64
    rotate : UInt64
    scale : UInt64
    set_transform : UInt64
    transform : UInt64
    translate : UInt64
    put_global_alpha : UInt64
    get_global_alpha : UInt64
    put_global_composite_operation : UInt64
    get_global_composite_operation : UInt64
    put_fill_style : UInt64
    get_fill_style : UInt64
    put_stroke_style : UInt64
    get_stroke_style : UInt64
    create_linear_gradient : UInt64
    create_radial_gradient : UInt64
    create_pattern : UInt64
    put_line_cap : UInt64
    get_line_cap : UInt64
    put_line_join : UInt64
    get_line_join : UInt64
    put_line_width : UInt64
    get_line_width : UInt64
    put_miter_limit : UInt64
    get_miter_limit : UInt64
    put_shadow_blur : UInt64
    get_shadow_blur : UInt64
    put_shadow_color : UInt64
    get_shadow_color : UInt64
    put_shadow_offset_x : UInt64
    get_shadow_offset_x : UInt64
    put_shadow_offset_y : UInt64
    get_shadow_offset_y : UInt64
    clear_rect : UInt64
    fill_rect : UInt64
    stroke_rect : UInt64
    arc : UInt64
    arc_to : UInt64
    begin_path : UInt64
    bezier_curve_to : UInt64
    clip : UInt64
    close_path : UInt64
    fill : UInt64
    line_to : UInt64
    move_to : UInt64
    quadratic_curve_to : UInt64
    rect : UInt64
    stroke : UInt64
    is_point_in_path : UInt64
    put_font : UInt64
    get_font : UInt64
    put_text_align : UInt64
    get_text_align : UInt64
    put_text_baseline : UInt64
    get_text_baseline : UInt64
    fill_text : UInt64
    measure_text : UInt64
    stroke_text : UInt64
    draw_image : UInt64
    create_image_data : UInt64
    get_image_data : UInt64
    put_image_data : UInt64
  end

  ICanvasRenderingContext2D_GUID = "305106ff-98b5-11cf-bb82-00aa00bdce0b"
  IID_ICanvasRenderingContext2D = LibC::GUID.new(0x305106ff_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ICanvasRenderingContext2D
    lpVtbl : ICanvasRenderingContext2DVTbl*
  end

  struct DispCanvasGradientVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispCanvasGradient_GUID = "3059008c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispCanvasGradient = LibC::GUID.new(0x3059008c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispCanvasGradient
    lpVtbl : DispCanvasGradientVTbl*
  end

  struct DispCanvasPatternVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispCanvasPattern_GUID = "3059008d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispCanvasPattern = LibC::GUID.new(0x3059008d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispCanvasPattern
    lpVtbl : DispCanvasPatternVTbl*
  end

  struct DispCanvasTextMetricsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispCanvasTextMetrics_GUID = "3059008e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispCanvasTextMetrics = LibC::GUID.new(0x3059008e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispCanvasTextMetrics
    lpVtbl : DispCanvasTextMetricsVTbl*
  end

  struct DispCanvasImageDataVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispCanvasImageData_GUID = "3059008f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispCanvasImageData = LibC::GUID.new(0x3059008f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispCanvasImageData
    lpVtbl : DispCanvasImageDataVTbl*
  end

  struct DispCanvasRenderingContext2DVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispCanvasRenderingContext2D_GUID = "30590082-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispCanvasRenderingContext2D = LibC::GUID.new(0x30590082_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispCanvasRenderingContext2D
    lpVtbl : DispCanvasRenderingContext2DVTbl*
  end

  struct DispHTMLCanvasElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLCanvasElement_GUID = "3059007b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLCanvasElement = LibC::GUID.new(0x3059007b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLCanvasElement
    lpVtbl : DispHTMLCanvasElementVTbl*
  end

  struct IDOMProgressEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length_computable : UInt64
    get_loaded : UInt64
    get_total : UInt64
    init_progress_event : UInt64
  end

  IDOMProgressEvent_GUID = "3051071e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMProgressEvent = LibC::GUID.new(0x3051071e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMProgressEvent
    lpVtbl : IDOMProgressEventVTbl*
  end

  struct DispDOMProgressEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMProgressEvent_GUID = "30590091-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMProgressEvent = LibC::GUID.new(0x30590091_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMProgressEvent
    lpVtbl : DispDOMProgressEventVTbl*
  end

  struct IDOMMessageEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_data : UInt64
    get_origin : UInt64
    get_source : UInt64
    init_message_event : UInt64
  end

  IDOMMessageEvent_GUID = "30510720-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMMessageEvent = LibC::GUID.new(0x30510720_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMMessageEvent
    lpVtbl : IDOMMessageEventVTbl*
  end

  struct DispDOMMessageEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMMessageEvent_GUID = "30590092-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMMessageEvent = LibC::GUID.new(0x30590092_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMMessageEvent
    lpVtbl : DispDOMMessageEventVTbl*
  end

  struct IDOMSiteModeEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_button_id : UInt64
    get_action_url : UInt64
  end

  IDOMSiteModeEvent_GUID = "30510765-98b6-11cf-bb82-00aa00bdce0b"
  IID_IDOMSiteModeEvent = LibC::GUID.new(0x30510765_u32, 0x98b6_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMSiteModeEvent
    lpVtbl : IDOMSiteModeEventVTbl*
  end

  struct DispDOMSiteModeEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMSiteModeEvent_GUID = "305900a9-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMSiteModeEvent = LibC::GUID.new(0x305900a9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMSiteModeEvent
    lpVtbl : DispDOMSiteModeEventVTbl*
  end

  struct IDOMStorageEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_key : UInt64
    get_old_value : UInt64
    get_new_value : UInt64
    get_url : UInt64
    get_storage_area : UInt64
    init_storage_event : UInt64
  end

  IDOMStorageEvent_GUID = "30510722-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMStorageEvent = LibC::GUID.new(0x30510722_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMStorageEvent
    lpVtbl : IDOMStorageEventVTbl*
  end

  struct DispDOMStorageEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMStorageEvent_GUID = "30590093-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMStorageEvent = LibC::GUID.new(0x30590093_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMStorageEvent
    lpVtbl : DispDOMStorageEventVTbl*
  end

  struct IXMLHttpRequestEventTargetVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  IXMLHttpRequestEventTarget_GUID = "30510830-98b5-11cf-bb82-00aa00bdce0b"
  IID_IXMLHttpRequestEventTarget = LibC::GUID.new(0x30510830_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IXMLHttpRequestEventTarget
    lpVtbl : IXMLHttpRequestEventTargetVTbl*
  end

  struct DispXMLHttpRequestEventTargetVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispXMLHttpRequestEventTarget_GUID = "305900e7-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispXMLHttpRequestEventTarget = LibC::GUID.new(0x305900e7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispXMLHttpRequestEventTarget
    lpVtbl : DispXMLHttpRequestEventTargetVTbl*
  end

  struct HTMLXMLHttpRequestEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLXMLHttpRequestEvents_GUID = "30510498-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLXMLHttpRequestEvents = LibC::GUID.new(0x30510498_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLXMLHttpRequestEvents
    lpVtbl : HTMLXMLHttpRequestEventsVTbl*
  end

  struct IHTMLXMLHttpRequestVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_ready_state : UInt64
    get_response_body : UInt64
    get_response_text : UInt64
    get_response_xml : UInt64
    get_status : UInt64
    get_status_text : UInt64
    put_onreadystatechange : UInt64
    get_onreadystatechange : UInt64
    abort : UInt64
    open : UInt64
    send : UInt64
    get_all_response_headers : UInt64
    get_response_header : UInt64
    set_request_header : UInt64
  end

  IHTMLXMLHttpRequest_GUID = "3051040a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLXMLHttpRequest = LibC::GUID.new(0x3051040a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLXMLHttpRequest
    lpVtbl : IHTMLXMLHttpRequestVTbl*
  end

  struct IHTMLXMLHttpRequest2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_timeout : UInt64
    get_timeout : UInt64
    put_ontimeout : UInt64
    get_ontimeout : UInt64
  end

  IHTMLXMLHttpRequest2_GUID = "30510482-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLXMLHttpRequest2 = LibC::GUID.new(0x30510482_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLXMLHttpRequest2
    lpVtbl : IHTMLXMLHttpRequest2VTbl*
  end

  struct IHTMLXMLHttpRequestFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create : UInt64
  end

  IHTMLXMLHttpRequestFactory_GUID = "3051040c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLXMLHttpRequestFactory = LibC::GUID.new(0x3051040c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLXMLHttpRequestFactory
    lpVtbl : IHTMLXMLHttpRequestFactoryVTbl*
  end

  struct DispHTMLXMLHttpRequestVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLXMLHttpRequest_GUID = "3050f596-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLXMLHttpRequest = LibC::GUID.new(0x3050f596_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLXMLHttpRequest
    lpVtbl : DispHTMLXMLHttpRequestVTbl*
  end

  struct ISVGAngleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_unit_type : UInt64
    get_unit_type : UInt64
    put_value : UInt64
    get_value : UInt64
    put_value_in_specified_units : UInt64
    get_value_in_specified_units : UInt64
    put_value_as_string : UInt64
    get_value_as_string : UInt64
    new_value_specified_units : UInt64
    convert_to_specified_units : UInt64
  end

  ISVGAngle_GUID = "305104d3-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAngle = LibC::GUID.new(0x305104d3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAngle
    lpVtbl : ISVGAngleVTbl*
  end

  struct ISVGElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_xmlbase : UInt64
    get_xmlbase : UInt64
    putref_owner_svg_element : UInt64
    get_owner_svg_element : UInt64
    putref_viewport_element : UInt64
    get_viewport_element : UInt64
    putref_focusable : UInt64
    get_focusable : UInt64
  end

  ISVGElement_GUID = "305104c5-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGElement = LibC::GUID.new(0x305104c5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGElement
    lpVtbl : ISVGElementVTbl*
  end

  struct ISVGRectVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
  end

  ISVGRect_GUID = "305104d7-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGRect = LibC::GUID.new(0x305104d7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGRect
    lpVtbl : ISVGRectVTbl*
  end

  struct ISVGMatrixVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_a : UInt64
    get_a : UInt64
    put_b : UInt64
    get_b : UInt64
    put_c : UInt64
    get_c : UInt64
    put_d : UInt64
    get_d : UInt64
    put_e : UInt64
    get_e : UInt64
    put_f : UInt64
    get_f : UInt64
    multiply : UInt64
    inverse : UInt64
    translate : UInt64
    scale : UInt64
    scale_non_uniform : UInt64
    rotate : UInt64
    rotate_from_vector : UInt64
    flip_x : UInt64
    flip_y : UInt64
    skew_x : UInt64
    skew_y : UInt64
  end

  ISVGMatrix_GUID = "305104f6-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGMatrix = LibC::GUID.new(0x305104f6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGMatrix
    lpVtbl : ISVGMatrixVTbl*
  end

  struct ISVGStringListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_number_of_items : UInt64
    get_number_of_items : UInt64
    clear : UInt64
    initialize : UInt64
    get_item : UInt64
    insert_item_before : UInt64
    replace_item : UInt64
    remove_item : UInt64
    append_item : UInt64
  end

  ISVGStringList_GUID = "305104c8-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGStringList = LibC::GUID.new(0x305104c8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGStringList
    lpVtbl : ISVGStringListVTbl*
  end

  struct ISVGAnimatedRectVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_base_val : UInt64
    get_base_val : UInt64
    putref_anim_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedRect_GUID = "305104d8-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedRect = LibC::GUID.new(0x305104d8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedRect
    lpVtbl : ISVGAnimatedRectVTbl*
  end

  struct ISVGAnimatedStringVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_base_val : UInt64
    get_base_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedString_GUID = "305104c7-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedString = LibC::GUID.new(0x305104c7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedString
    lpVtbl : ISVGAnimatedStringVTbl*
  end

  struct ISVGAnimatedBooleanVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_base_val : UInt64
    get_base_val : UInt64
    put_anim_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedBoolean_GUID = "305104c6-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedBoolean = LibC::GUID.new(0x305104c6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedBoolean
    lpVtbl : ISVGAnimatedBooleanVTbl*
  end

  struct ISVGAnimatedTransformListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_base_val : UInt64
    get_base_val : UInt64
    putref_anim_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedTransformList_GUID = "305104f9-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedTransformList = LibC::GUID.new(0x305104f9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedTransformList
    lpVtbl : ISVGAnimatedTransformListVTbl*
  end

  struct ISVGAnimatedPreserveAspectRatioVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_base_val : UInt64
    get_base_val : UInt64
    putref_anim_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedPreserveAspectRatio_GUID = "305104fb-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedPreserveAspectRatio = LibC::GUID.new(0x305104fb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedPreserveAspectRatio
    lpVtbl : ISVGAnimatedPreserveAspectRatioVTbl*
  end

  struct ISVGStylableVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_class_name : UInt64
  end

  ISVGStylable_GUID = "305104da-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGStylable = LibC::GUID.new(0x305104da_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGStylable
    lpVtbl : ISVGStylableVTbl*
  end

  struct ISVGLocatableVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_nearest_viewport_element : UInt64
    get_farthest_viewport_element : UInt64
    get_b_box : UInt64
    get_ctm : UInt64
    get_screen_ctm : UInt64
    get_transform_to_element : UInt64
  end

  ISVGLocatable_GUID = "305104db-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGLocatable = LibC::GUID.new(0x305104db_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGLocatable
    lpVtbl : ISVGLocatableVTbl*
  end

  struct ISVGTransformableVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_transform : UInt64
  end

  ISVGTransformable_GUID = "305104dc-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGTransformable = LibC::GUID.new(0x305104dc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGTransformable
    lpVtbl : ISVGTransformableVTbl*
  end

  struct ISVGTestsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_required_features : UInt64
    get_required_extensions : UInt64
    get_system_language : UInt64
    has_extension : UInt64
  end

  ISVGTests_GUID = "305104dd-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGTests = LibC::GUID.new(0x305104dd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGTests
    lpVtbl : ISVGTestsVTbl*
  end

  struct ISVGLangSpaceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_xmllang : UInt64
    get_xmllang : UInt64
    put_xmlspace : UInt64
    get_xmlspace : UInt64
  end

  ISVGLangSpace_GUID = "305104de-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGLangSpace = LibC::GUID.new(0x305104de_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGLangSpace
    lpVtbl : ISVGLangSpaceVTbl*
  end

  struct ISVGExternalResourcesRequiredVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_external_resources_required : UInt64
  end

  ISVGExternalResourcesRequired_GUID = "305104df-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGExternalResourcesRequired = LibC::GUID.new(0x305104df_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGExternalResourcesRequired
    lpVtbl : ISVGExternalResourcesRequiredVTbl*
  end

  struct ISVGFitToViewBoxVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_view_box : UInt64
    putref_preserve_aspect_ratio : UInt64
    get_preserve_aspect_ratio : UInt64
  end

  ISVGFitToViewBox_GUID = "305104e0-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGFitToViewBox = LibC::GUID.new(0x305104e0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGFitToViewBox
    lpVtbl : ISVGFitToViewBoxVTbl*
  end

  struct ISVGZoomAndPanVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_zoom_and_pan : UInt64
  end

  ISVGZoomAndPan_GUID = "305104e1-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGZoomAndPan = LibC::GUID.new(0x305104e1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGZoomAndPan
    lpVtbl : ISVGZoomAndPanVTbl*
  end

  struct ISVGURIReferenceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_href : UInt64
  end

  ISVGURIReference_GUID = "305104e3-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGURIReference = LibC::GUID.new(0x305104e3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGURIReference
    lpVtbl : ISVGURIReferenceVTbl*
  end

  struct ISVGAnimatedAngleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_base_val : UInt64
    get_base_val : UInt64
    putref_anim_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedAngle_GUID = "305104d4-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedAngle = LibC::GUID.new(0x305104d4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedAngle
    lpVtbl : ISVGAnimatedAngleVTbl*
  end

  struct ISVGTransformListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_number_of_items : UInt64
    get_number_of_items : UInt64
    clear : UInt64
    initialize : UInt64
    get_item : UInt64
    insert_item_before : UInt64
    replace_item : UInt64
    remove_item : UInt64
    append_item : UInt64
    create_svg_transform_from_matrix : UInt64
    consolidate : UInt64
  end

  ISVGTransformList_GUID = "305104f8-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGTransformList = LibC::GUID.new(0x305104f8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGTransformList
    lpVtbl : ISVGTransformListVTbl*
  end

  struct ISVGAnimatedEnumerationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_base_val : UInt64
    get_base_val : UInt64
    put_anim_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedEnumeration_GUID = "305104c9-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedEnumeration = LibC::GUID.new(0x305104c9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedEnumeration
    lpVtbl : ISVGAnimatedEnumerationVTbl*
  end

  struct ISVGAnimatedIntegerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_base_val : UInt64
    get_base_val : UInt64
    put_anim_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedInteger_GUID = "305104ca-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedInteger = LibC::GUID.new(0x305104ca_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedInteger
    lpVtbl : ISVGAnimatedIntegerVTbl*
  end

  struct ISVGLengthVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_unit_type : UInt64
    get_unit_type : UInt64
    put_value : UInt64
    get_value : UInt64
    put_value_in_specified_units : UInt64
    get_value_in_specified_units : UInt64
    put_value_as_string : UInt64
    get_value_as_string : UInt64
    new_value_specified_units : UInt64
    convert_to_specified_units : UInt64
  end

  ISVGLength_GUID = "305104cf-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGLength = LibC::GUID.new(0x305104cf_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGLength
    lpVtbl : ISVGLengthVTbl*
  end

  struct ISVGAnimatedLengthVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_base_val : UInt64
    get_base_val : UInt64
    putref_anim_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedLength_GUID = "305104d0-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedLength = LibC::GUID.new(0x305104d0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedLength
    lpVtbl : ISVGAnimatedLengthVTbl*
  end

  struct ISVGLengthListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_number_of_items : UInt64
    get_number_of_items : UInt64
    clear : UInt64
    initialize : UInt64
    get_item : UInt64
    insert_item_before : UInt64
    replace_item : UInt64
    remove_item : UInt64
    append_item : UInt64
  end

  ISVGLengthList_GUID = "305104d1-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGLengthList = LibC::GUID.new(0x305104d1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGLengthList
    lpVtbl : ISVGLengthListVTbl*
  end

  struct ISVGAnimatedLengthListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_base_val : UInt64
    get_base_val : UInt64
    putref_anim_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedLengthList_GUID = "305104d2-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedLengthList = LibC::GUID.new(0x305104d2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedLengthList
    lpVtbl : ISVGAnimatedLengthListVTbl*
  end

  struct ISVGNumberVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_value : UInt64
    get_value : UInt64
  end

  ISVGNumber_GUID = "305104cb-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGNumber = LibC::GUID.new(0x305104cb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGNumber
    lpVtbl : ISVGNumberVTbl*
  end

  struct ISVGAnimatedNumberVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_base_val : UInt64
    get_base_val : UInt64
    put_anim_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedNumber_GUID = "305104cc-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedNumber = LibC::GUID.new(0x305104cc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedNumber
    lpVtbl : ISVGAnimatedNumberVTbl*
  end

  struct ISVGNumberListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_number_of_items : UInt64
    get_number_of_items : UInt64
    clear : UInt64
    initialize : UInt64
    get_item : UInt64
    insert_item_before : UInt64
    replace_item : UInt64
    remove_item : UInt64
    append_item : UInt64
  end

  ISVGNumberList_GUID = "305104cd-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGNumberList = LibC::GUID.new(0x305104cd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGNumberList
    lpVtbl : ISVGNumberListVTbl*
  end

  struct ISVGAnimatedNumberListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_base_val : UInt64
    get_base_val : UInt64
    putref_anim_val : UInt64
    get_anim_val : UInt64
  end

  ISVGAnimatedNumberList_GUID = "305104ce-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedNumberList = LibC::GUID.new(0x305104ce_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedNumberList
    lpVtbl : ISVGAnimatedNumberListVTbl*
  end

  struct ISVGClipPathElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_clip_path_units : UInt64
    get_clip_path_units : UInt64
  end

  ISVGClipPathElement_GUID = "3051052d-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGClipPathElement = LibC::GUID.new(0x3051052d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGClipPathElement
    lpVtbl : ISVGClipPathElementVTbl*
  end

  struct DispSVGClipPathElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGClipPathElement_GUID = "3059003b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGClipPathElement = LibC::GUID.new(0x3059003b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGClipPathElement
    lpVtbl : DispSVGClipPathElementVTbl*
  end

  struct ISVGDocumentVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_root_element : UInt64
  end

  ISVGDocument_GUID = "305104e6-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGDocument = LibC::GUID.new(0x305104e6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGDocument
    lpVtbl : ISVGDocumentVTbl*
  end

  struct IGetSVGDocumentVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_svg_document : UInt64
  end

  IGetSVGDocument_GUID = "305105ab-98b5-11cf-bb82-00aa00bdce0b"
  IID_IGetSVGDocument = LibC::GUID.new(0x305105ab_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IGetSVGDocument
    lpVtbl : IGetSVGDocumentVTbl*
  end

  struct DispSVGElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGElement_GUID = "30590000-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGElement = LibC::GUID.new(0x30590000_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGElement
    lpVtbl : DispSVGElementVTbl*
  end

  struct IICCSVGColorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  IICCSVGColor_GUID = "305104d6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IICCSVGColor = LibC::GUID.new(0x305104d6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IICCSVGColor
    lpVtbl : IICCSVGColorVTbl*
  end

  struct ISVGPaintVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGPaint_GUID = "30510524-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPaint = LibC::GUID.new(0x30510524_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPaint
    lpVtbl : ISVGPaintVTbl*
  end

  struct ISVGPatternElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_pattern_units : UInt64
    get_pattern_units : UInt64
    putref_pattern_content_units : UInt64
    get_pattern_content_units : UInt64
    putref_pattern_transform : UInt64
    get_pattern_transform : UInt64
    putref_x : UInt64
    get_x : UInt64
    putref_y : UInt64
    get_y : UInt64
    putref_width : UInt64
    get_width : UInt64
    putref_height : UInt64
    get_height : UInt64
  end

  ISVGPatternElement_GUID = "3051052c-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPatternElement = LibC::GUID.new(0x3051052c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPatternElement
    lpVtbl : ISVGPatternElementVTbl*
  end

  struct DispSVGPatternElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPatternElement_GUID = "3059002c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPatternElement = LibC::GUID.new(0x3059002c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPatternElement
    lpVtbl : DispSVGPatternElementVTbl*
  end

  struct ISVGPathSegVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_path_seg_type : UInt64
    get_path_seg_type : UInt64
    get_path_seg_type_as_letter : UInt64
  end

  ISVGPathSeg_GUID = "305104fc-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSeg = LibC::GUID.new(0x305104fc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSeg
    lpVtbl : ISVGPathSegVTbl*
  end

  struct ISVGPathSegArcAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
    put_r1 : UInt64
    get_r1 : UInt64
    put_r2 : UInt64
    get_r2 : UInt64
    put_angle : UInt64
    get_angle : UInt64
    put_large_arc_flag : UInt64
    get_large_arc_flag : UInt64
    put_sweep_flag : UInt64
    get_sweep_flag : UInt64
  end

  ISVGPathSegArcAbs_GUID = "30510506-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegArcAbs = LibC::GUID.new(0x30510506_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegArcAbs
    lpVtbl : ISVGPathSegArcAbsVTbl*
  end

  struct ISVGPathSegArcRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
    put_r1 : UInt64
    get_r1 : UInt64
    put_r2 : UInt64
    get_r2 : UInt64
    put_angle : UInt64
    get_angle : UInt64
    put_large_arc_flag : UInt64
    get_large_arc_flag : UInt64
    put_sweep_flag : UInt64
    get_sweep_flag : UInt64
  end

  ISVGPathSegArcRel_GUID = "30510507-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegArcRel = LibC::GUID.new(0x30510507_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegArcRel
    lpVtbl : ISVGPathSegArcRelVTbl*
  end

  struct ISVGPathSegClosePathVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGPathSegClosePath_GUID = "305104fd-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegClosePath = LibC::GUID.new(0x305104fd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegClosePath
    lpVtbl : ISVGPathSegClosePathVTbl*
  end

  struct ISVGPathSegMovetoAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
  end

  ISVGPathSegMovetoAbs_GUID = "305104fe-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegMovetoAbs = LibC::GUID.new(0x305104fe_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegMovetoAbs
    lpVtbl : ISVGPathSegMovetoAbsVTbl*
  end

  struct ISVGPathSegMovetoRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
  end

  ISVGPathSegMovetoRel_GUID = "305104ff-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegMovetoRel = LibC::GUID.new(0x305104ff_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegMovetoRel
    lpVtbl : ISVGPathSegMovetoRelVTbl*
  end

  struct ISVGPathSegLinetoAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
  end

  ISVGPathSegLinetoAbs_GUID = "30510500-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegLinetoAbs = LibC::GUID.new(0x30510500_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegLinetoAbs
    lpVtbl : ISVGPathSegLinetoAbsVTbl*
  end

  struct ISVGPathSegLinetoRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
  end

  ISVGPathSegLinetoRel_GUID = "30510501-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegLinetoRel = LibC::GUID.new(0x30510501_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegLinetoRel
    lpVtbl : ISVGPathSegLinetoRelVTbl*
  end

  struct ISVGPathSegCurvetoCubicAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
    put_x1 : UInt64
    get_x1 : UInt64
    put_y1 : UInt64
    get_y1 : UInt64
    put_x2 : UInt64
    get_x2 : UInt64
    put_y2 : UInt64
    get_y2 : UInt64
  end

  ISVGPathSegCurvetoCubicAbs_GUID = "30510502-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegCurvetoCubicAbs = LibC::GUID.new(0x30510502_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegCurvetoCubicAbs
    lpVtbl : ISVGPathSegCurvetoCubicAbsVTbl*
  end

  struct ISVGPathSegCurvetoCubicRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
    put_x1 : UInt64
    get_x1 : UInt64
    put_y1 : UInt64
    get_y1 : UInt64
    put_x2 : UInt64
    get_x2 : UInt64
    put_y2 : UInt64
    get_y2 : UInt64
  end

  ISVGPathSegCurvetoCubicRel_GUID = "30510503-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegCurvetoCubicRel = LibC::GUID.new(0x30510503_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegCurvetoCubicRel
    lpVtbl : ISVGPathSegCurvetoCubicRelVTbl*
  end

  struct ISVGPathSegCurvetoCubicSmoothAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
    put_x2 : UInt64
    get_x2 : UInt64
    put_y2 : UInt64
    get_y2 : UInt64
  end

  ISVGPathSegCurvetoCubicSmoothAbs_GUID = "3051050c-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegCurvetoCubicSmoothAbs = LibC::GUID.new(0x3051050c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegCurvetoCubicSmoothAbs
    lpVtbl : ISVGPathSegCurvetoCubicSmoothAbsVTbl*
  end

  struct ISVGPathSegCurvetoCubicSmoothRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
    put_x2 : UInt64
    get_x2 : UInt64
    put_y2 : UInt64
    get_y2 : UInt64
  end

  ISVGPathSegCurvetoCubicSmoothRel_GUID = "3051050d-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegCurvetoCubicSmoothRel = LibC::GUID.new(0x3051050d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegCurvetoCubicSmoothRel
    lpVtbl : ISVGPathSegCurvetoCubicSmoothRelVTbl*
  end

  struct ISVGPathSegCurvetoQuadraticAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
    put_x1 : UInt64
    get_x1 : UInt64
    put_y1 : UInt64
    get_y1 : UInt64
  end

  ISVGPathSegCurvetoQuadraticAbs_GUID = "30510504-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegCurvetoQuadraticAbs = LibC::GUID.new(0x30510504_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegCurvetoQuadraticAbs
    lpVtbl : ISVGPathSegCurvetoQuadraticAbsVTbl*
  end

  struct ISVGPathSegCurvetoQuadraticRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
    put_x1 : UInt64
    get_x1 : UInt64
    put_y1 : UInt64
    get_y1 : UInt64
  end

  ISVGPathSegCurvetoQuadraticRel_GUID = "30510505-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegCurvetoQuadraticRel = LibC::GUID.new(0x30510505_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegCurvetoQuadraticRel
    lpVtbl : ISVGPathSegCurvetoQuadraticRelVTbl*
  end

  struct ISVGPathSegCurvetoQuadraticSmoothAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
  end

  ISVGPathSegCurvetoQuadraticSmoothAbs_GUID = "3051050e-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegCurvetoQuadraticSmoothAbs = LibC::GUID.new(0x3051050e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegCurvetoQuadraticSmoothAbs
    lpVtbl : ISVGPathSegCurvetoQuadraticSmoothAbsVTbl*
  end

  struct ISVGPathSegCurvetoQuadraticSmoothRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
  end

  ISVGPathSegCurvetoQuadraticSmoothRel_GUID = "3051050f-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegCurvetoQuadraticSmoothRel = LibC::GUID.new(0x3051050f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegCurvetoQuadraticSmoothRel
    lpVtbl : ISVGPathSegCurvetoQuadraticSmoothRelVTbl*
  end

  struct ISVGPathSegLinetoHorizontalAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
  end

  ISVGPathSegLinetoHorizontalAbs_GUID = "30510508-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegLinetoHorizontalAbs = LibC::GUID.new(0x30510508_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegLinetoHorizontalAbs
    lpVtbl : ISVGPathSegLinetoHorizontalAbsVTbl*
  end

  struct ISVGPathSegLinetoHorizontalRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
  end

  ISVGPathSegLinetoHorizontalRel_GUID = "30510509-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegLinetoHorizontalRel = LibC::GUID.new(0x30510509_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegLinetoHorizontalRel
    lpVtbl : ISVGPathSegLinetoHorizontalRelVTbl*
  end

  struct ISVGPathSegLinetoVerticalAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_y : UInt64
    get_y : UInt64
  end

  ISVGPathSegLinetoVerticalAbs_GUID = "3051050a-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegLinetoVerticalAbs = LibC::GUID.new(0x3051050a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegLinetoVerticalAbs
    lpVtbl : ISVGPathSegLinetoVerticalAbsVTbl*
  end

  struct ISVGPathSegLinetoVerticalRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_y : UInt64
    get_y : UInt64
  end

  ISVGPathSegLinetoVerticalRel_GUID = "3051050b-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegLinetoVerticalRel = LibC::GUID.new(0x3051050b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegLinetoVerticalRel
    lpVtbl : ISVGPathSegLinetoVerticalRelVTbl*
  end

  struct DispSVGPathSegArcAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegArcAbs_GUID = "30590013-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegArcAbs = LibC::GUID.new(0x30590013_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegArcAbs
    lpVtbl : DispSVGPathSegArcAbsVTbl*
  end

  struct DispSVGPathSegArcRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegArcRel_GUID = "30590014-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegArcRel = LibC::GUID.new(0x30590014_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegArcRel
    lpVtbl : DispSVGPathSegArcRelVTbl*
  end

  struct DispSVGPathSegClosePathVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegClosePath_GUID = "30590015-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegClosePath = LibC::GUID.new(0x30590015_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegClosePath
    lpVtbl : DispSVGPathSegClosePathVTbl*
  end

  struct DispSVGPathSegMovetoAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegMovetoAbs_GUID = "30590024-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegMovetoAbs = LibC::GUID.new(0x30590024_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegMovetoAbs
    lpVtbl : DispSVGPathSegMovetoAbsVTbl*
  end

  struct DispSVGPathSegMovetoRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegMovetoRel_GUID = "30590025-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegMovetoRel = LibC::GUID.new(0x30590025_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegMovetoRel
    lpVtbl : DispSVGPathSegMovetoRelVTbl*
  end

  struct DispSVGPathSegLinetoAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegLinetoAbs_GUID = "3059001e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegLinetoAbs = LibC::GUID.new(0x3059001e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegLinetoAbs
    lpVtbl : DispSVGPathSegLinetoAbsVTbl*
  end

  struct DispSVGPathSegLinetoRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegLinetoRel_GUID = "30590021-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegLinetoRel = LibC::GUID.new(0x30590021_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegLinetoRel
    lpVtbl : DispSVGPathSegLinetoRelVTbl*
  end

  struct DispSVGPathSegCurvetoCubicAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegCurvetoCubicAbs_GUID = "30590016-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegCurvetoCubicAbs = LibC::GUID.new(0x30590016_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegCurvetoCubicAbs
    lpVtbl : DispSVGPathSegCurvetoCubicAbsVTbl*
  end

  struct DispSVGPathSegCurvetoCubicRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegCurvetoCubicRel_GUID = "30590017-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegCurvetoCubicRel = LibC::GUID.new(0x30590017_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegCurvetoCubicRel
    lpVtbl : DispSVGPathSegCurvetoCubicRelVTbl*
  end

  struct DispSVGPathSegCurvetoCubicSmoothAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegCurvetoCubicSmoothAbs_GUID = "30590018-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegCurvetoCubicSmoothAbs = LibC::GUID.new(0x30590018_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegCurvetoCubicSmoothAbs
    lpVtbl : DispSVGPathSegCurvetoCubicSmoothAbsVTbl*
  end

  struct DispSVGPathSegCurvetoCubicSmoothRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegCurvetoCubicSmoothRel_GUID = "30590019-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegCurvetoCubicSmoothRel = LibC::GUID.new(0x30590019_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegCurvetoCubicSmoothRel
    lpVtbl : DispSVGPathSegCurvetoCubicSmoothRelVTbl*
  end

  struct DispSVGPathSegCurvetoQuadraticAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegCurvetoQuadraticAbs_GUID = "3059001a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegCurvetoQuadraticAbs = LibC::GUID.new(0x3059001a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegCurvetoQuadraticAbs
    lpVtbl : DispSVGPathSegCurvetoQuadraticAbsVTbl*
  end

  struct DispSVGPathSegCurvetoQuadraticRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegCurvetoQuadraticRel_GUID = "3059001b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegCurvetoQuadraticRel = LibC::GUID.new(0x3059001b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegCurvetoQuadraticRel
    lpVtbl : DispSVGPathSegCurvetoQuadraticRelVTbl*
  end

  struct DispSVGPathSegCurvetoQuadraticSmoothAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegCurvetoQuadraticSmoothAbs_GUID = "3059001c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegCurvetoQuadraticSmoothAbs = LibC::GUID.new(0x3059001c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegCurvetoQuadraticSmoothAbs
    lpVtbl : DispSVGPathSegCurvetoQuadraticSmoothAbsVTbl*
  end

  struct DispSVGPathSegCurvetoQuadraticSmoothRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegCurvetoQuadraticSmoothRel_GUID = "3059001d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegCurvetoQuadraticSmoothRel = LibC::GUID.new(0x3059001d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegCurvetoQuadraticSmoothRel
    lpVtbl : DispSVGPathSegCurvetoQuadraticSmoothRelVTbl*
  end

  struct DispSVGPathSegLinetoHorizontalAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegLinetoHorizontalAbs_GUID = "3059001f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegLinetoHorizontalAbs = LibC::GUID.new(0x3059001f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegLinetoHorizontalAbs
    lpVtbl : DispSVGPathSegLinetoHorizontalAbsVTbl*
  end

  struct DispSVGPathSegLinetoHorizontalRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegLinetoHorizontalRel_GUID = "30590020-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegLinetoHorizontalRel = LibC::GUID.new(0x30590020_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegLinetoHorizontalRel
    lpVtbl : DispSVGPathSegLinetoHorizontalRelVTbl*
  end

  struct DispSVGPathSegLinetoVerticalAbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegLinetoVerticalAbs_GUID = "30590022-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegLinetoVerticalAbs = LibC::GUID.new(0x30590022_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegLinetoVerticalAbs
    lpVtbl : DispSVGPathSegLinetoVerticalAbsVTbl*
  end

  struct DispSVGPathSegLinetoVerticalRelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathSegLinetoVerticalRel_GUID = "30590023-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathSegLinetoVerticalRel = LibC::GUID.new(0x30590023_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathSegLinetoVerticalRel
    lpVtbl : DispSVGPathSegLinetoVerticalRelVTbl*
  end

  struct ISVGPathSegListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_number_of_items : UInt64
    get_number_of_items : UInt64
    clear : UInt64
    initialize : UInt64
    get_item : UInt64
    insert_item_before : UInt64
    replace_item : UInt64
    remove_item : UInt64
    append_item : UInt64
  end

  ISVGPathSegList_GUID = "30510510-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathSegList = LibC::GUID.new(0x30510510_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathSegList
    lpVtbl : ISVGPathSegListVTbl*
  end

  struct ISVGPointVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_x : UInt64
    get_x : UInt64
    put_y : UInt64
    get_y : UInt64
    matrix_transform : UInt64
  end

  ISVGPoint_GUID = "305104f4-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPoint = LibC::GUID.new(0x305104f4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPoint
    lpVtbl : ISVGPointVTbl*
  end

  struct ISVGPointListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_number_of_items : UInt64
    get_number_of_items : UInt64
    clear : UInt64
    initialize : UInt64
    get_item : UInt64
    insert_item_before : UInt64
    replace_item : UInt64
    remove_item : UInt64
    append_item : UInt64
  end

  ISVGPointList_GUID = "305104f5-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPointList = LibC::GUID.new(0x305104f5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPointList
    lpVtbl : ISVGPointListVTbl*
  end

  struct ISVGViewSpecVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGViewSpec_GUID = "305104e2-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGViewSpec = LibC::GUID.new(0x305104e2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGViewSpec
    lpVtbl : ISVGViewSpecVTbl*
  end

  struct ISVGTransformVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_type : UInt64
    get_type : UInt64
    putref_matrix : UInt64
    get_matrix : UInt64
    put_angle : UInt64
    get_angle : UInt64
    set_matrix : UInt64
    set_translate : UInt64
    set_scale : UInt64
    set_rotate : UInt64
    set_skew_x : UInt64
    set_skew_y : UInt64
  end

  ISVGTransform_GUID = "305104f7-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGTransform = LibC::GUID.new(0x305104f7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGTransform
    lpVtbl : ISVGTransformVTbl*
  end

  struct DispSVGSVGElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGSVGElement_GUID = "30590001-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGSVGElement = LibC::GUID.new(0x30590001_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGSVGElement
    lpVtbl : DispSVGSVGElementVTbl*
  end

  struct ISVGElementInstanceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_corresponding_element : UInt64
    get_corresponding_use_element : UInt64
    get_parent_node : UInt64
    get_child_nodes : UInt64
    get_first_child : UInt64
    get_last_child : UInt64
    get_previous_sibling : UInt64
    get_next_sibling : UInt64
  end

  ISVGElementInstance_GUID = "305104ee-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGElementInstance = LibC::GUID.new(0x305104ee_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGElementInstance
    lpVtbl : ISVGElementInstanceVTbl*
  end

  struct ISVGUseElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_x : UInt64
    get_x : UInt64
    putref_y : UInt64
    get_y : UInt64
    putref_width : UInt64
    get_width : UInt64
    putref_height : UInt64
    get_height : UInt64
    putref_instance_root : UInt64
    get_instance_root : UInt64
    putref_animated_instance_root : UInt64
    get_animated_instance_root : UInt64
  end

  ISVGUseElement_GUID = "305104ed-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGUseElement = LibC::GUID.new(0x305104ed_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGUseElement
    lpVtbl : ISVGUseElementVTbl*
  end

  struct DispSVGUseElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGUseElement_GUID = "30590010-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGUseElement = LibC::GUID.new(0x30590010_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGUseElement
    lpVtbl : DispSVGUseElementVTbl*
  end

  struct IHTMLStyleSheetRulesAppliedCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    item : UInt64
    get_length : UInt64
    property_applied_by : UInt64
    property_applied_trace : UInt64
    property_applied_trace_length : UInt64
  end

  IHTMLStyleSheetRulesAppliedCollection_GUID = "305104c0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLStyleSheetRulesAppliedCollection = LibC::GUID.new(0x305104c0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLStyleSheetRulesAppliedCollection
    lpVtbl : IHTMLStyleSheetRulesAppliedCollectionVTbl*
  end

  struct IRulesAppliedVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_element : UInt64
    get_inline_styles : UInt64
    get_applied_rules : UInt64
    property_is_inline : UInt64
    property_is_inheritable : UInt64
    has_inheritable_property : UInt64
  end

  IRulesApplied_GUID = "305104bf-98b5-11cf-bb82-00aa00bdce0b"
  IID_IRulesApplied = LibC::GUID.new(0x305104bf_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IRulesApplied
    lpVtbl : IRulesAppliedVTbl*
  end

  struct DispHTMLStyleSheetRulesAppliedCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLStyleSheetRulesAppliedCollection_GUID = "3050f5a6-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLStyleSheetRulesAppliedCollection = LibC::GUID.new(0x3050f5a6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLStyleSheetRulesAppliedCollection
    lpVtbl : DispHTMLStyleSheetRulesAppliedCollectionVTbl*
  end

  struct DispRulesAppliedVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispRulesApplied_GUID = "3050f5a5-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispRulesApplied = LibC::GUID.new(0x3050f5a5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispRulesApplied
    lpVtbl : DispRulesAppliedVTbl*
  end

  struct DispRulesAppliedCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispRulesAppliedCollection_GUID = "3050f5a4-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispRulesAppliedCollection = LibC::GUID.new(0x3050f5a4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispRulesAppliedCollection
    lpVtbl : DispRulesAppliedCollectionVTbl*
  end

  struct DispHTMLW3CComputedStyleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLW3CComputedStyle_GUID = "30590070-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLW3CComputedStyle = LibC::GUID.new(0x30590070_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLW3CComputedStyle
    lpVtbl : DispHTMLW3CComputedStyleVTbl*
  end

  struct ISVGAnimatedPointsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_points : UInt64
    get_points : UInt64
    putref_animated_points : UInt64
    get_animated_points : UInt64
  end

  ISVGAnimatedPoints_GUID = "30510517-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedPoints = LibC::GUID.new(0x30510517_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedPoints
    lpVtbl : ISVGAnimatedPointsVTbl*
  end

  struct ISVGCircleElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_cx : UInt64
    get_cx : UInt64
    putref_cy : UInt64
    get_cy : UInt64
    putref_r : UInt64
    get_r : UInt64
  end

  ISVGCircleElement_GUID = "30510514-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGCircleElement = LibC::GUID.new(0x30510514_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGCircleElement
    lpVtbl : ISVGCircleElementVTbl*
  end

  struct ISVGEllipseElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_cx : UInt64
    get_cx : UInt64
    putref_cy : UInt64
    get_cy : UInt64
    putref_rx : UInt64
    get_rx : UInt64
    putref_ry : UInt64
    get_ry : UInt64
  end

  ISVGEllipseElement_GUID = "30510515-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGEllipseElement = LibC::GUID.new(0x30510515_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGEllipseElement
    lpVtbl : ISVGEllipseElementVTbl*
  end

  struct ISVGLineElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_x1 : UInt64
    get_x1 : UInt64
    putref_y1 : UInt64
    get_y1 : UInt64
    putref_x2 : UInt64
    get_x2 : UInt64
    putref_y2 : UInt64
    get_y2 : UInt64
  end

  ISVGLineElement_GUID = "30510516-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGLineElement = LibC::GUID.new(0x30510516_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGLineElement
    lpVtbl : ISVGLineElementVTbl*
  end

  struct ISVGRectElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_x : UInt64
    get_x : UInt64
    putref_y : UInt64
    get_y : UInt64
    putref_width : UInt64
    get_width : UInt64
    putref_height : UInt64
    get_height : UInt64
    putref_rx : UInt64
    get_rx : UInt64
    putref_ry : UInt64
    get_ry : UInt64
  end

  ISVGRectElement_GUID = "30510513-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGRectElement = LibC::GUID.new(0x30510513_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGRectElement
    lpVtbl : ISVGRectElementVTbl*
  end

  struct ISVGPolygonElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGPolygonElement_GUID = "30510519-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPolygonElement = LibC::GUID.new(0x30510519_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPolygonElement
    lpVtbl : ISVGPolygonElementVTbl*
  end

  struct ISVGPolylineElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGPolylineElement_GUID = "30510518-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPolylineElement = LibC::GUID.new(0x30510518_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPolylineElement
    lpVtbl : ISVGPolylineElementVTbl*
  end

  struct DispSVGCircleElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGCircleElement_GUID = "3059000a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGCircleElement = LibC::GUID.new(0x3059000a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGCircleElement
    lpVtbl : DispSVGCircleElementVTbl*
  end

  struct DispSVGEllipseElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGEllipseElement_GUID = "3059000b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGEllipseElement = LibC::GUID.new(0x3059000b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGEllipseElement
    lpVtbl : DispSVGEllipseElementVTbl*
  end

  struct DispSVGLineElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGLineElement_GUID = "3059000c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGLineElement = LibC::GUID.new(0x3059000c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGLineElement
    lpVtbl : DispSVGLineElementVTbl*
  end

  struct DispSVGRectElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGRectElement_GUID = "30590009-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGRectElement = LibC::GUID.new(0x30590009_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGRectElement
    lpVtbl : DispSVGRectElementVTbl*
  end

  struct DispSVGPolygonElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPolygonElement_GUID = "3059000d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPolygonElement = LibC::GUID.new(0x3059000d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPolygonElement
    lpVtbl : DispSVGPolygonElementVTbl*
  end

  struct DispSVGPolylineElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPolylineElement_GUID = "3059000e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPolylineElement = LibC::GUID.new(0x3059000e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPolylineElement
    lpVtbl : DispSVGPolylineElementVTbl*
  end

  struct ISVGGElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGGElement_GUID = "305104e8-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGGElement = LibC::GUID.new(0x305104e8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGGElement
    lpVtbl : ISVGGElementVTbl*
  end

  struct DispSVGGElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGGElement_GUID = "30590002-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGGElement = LibC::GUID.new(0x30590002_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGGElement
    lpVtbl : DispSVGGElementVTbl*
  end

  struct ISVGSymbolElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGSymbolElement_GUID = "305104ec-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGSymbolElement = LibC::GUID.new(0x305104ec_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGSymbolElement
    lpVtbl : ISVGSymbolElementVTbl*
  end

  struct DispSVGSymbolElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGSymbolElement_GUID = "30590004-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGSymbolElement = LibC::GUID.new(0x30590004_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGSymbolElement
    lpVtbl : DispSVGSymbolElementVTbl*
  end

  struct ISVGDefsElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGDefsElement_GUID = "305104e9-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGDefsElement = LibC::GUID.new(0x305104e9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGDefsElement
    lpVtbl : ISVGDefsElementVTbl*
  end

  struct DispSVGDefsElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGDefsElement_GUID = "30590003-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGDefsElement = LibC::GUID.new(0x30590003_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGDefsElement
    lpVtbl : DispSVGDefsElementVTbl*
  end

  struct ISVGAnimatedPathDataVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_path_seg_list : UInt64
    get_path_seg_list : UInt64
    putref_normalized_path_seg_list : UInt64
    get_normalized_path_seg_list : UInt64
    putref_animated_path_seg_list : UInt64
    get_animated_path_seg_list : UInt64
    putref_animated_normalized_path_seg_list : UInt64
    get_animated_normalized_path_seg_list : UInt64
  end

  ISVGAnimatedPathData_GUID = "30510511-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAnimatedPathData = LibC::GUID.new(0x30510511_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAnimatedPathData
    lpVtbl : ISVGAnimatedPathDataVTbl*
  end

  struct ISVGPathElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_path_length : UInt64
    get_path_length : UInt64
    get_total_length : UInt64
    get_point_at_length : UInt64
    get_path_seg_at_length : UInt64
    create_svg_path_seg_close_path : UInt64
    create_svg_path_seg_moveto_abs : UInt64
    create_svg_path_seg_moveto_rel : UInt64
    create_svg_path_seg_lineto_abs : UInt64
    create_svg_path_seg_lineto_rel : UInt64
    create_svg_path_seg_curveto_cubic_abs : UInt64
    create_svg_path_seg_curveto_cubic_rel : UInt64
    create_svg_path_seg_curveto_quadratic_abs : UInt64
    create_svg_path_seg_curveto_quadratic_rel : UInt64
    create_svg_path_seg_arc_abs : UInt64
    create_svg_path_seg_arc_rel : UInt64
    create_svg_path_seg_lineto_horizontal_abs : UInt64
    create_svg_path_seg_lineto_horizontal_rel : UInt64
    create_svg_path_seg_lineto_vertical_abs : UInt64
    create_svg_path_seg_lineto_vertical_rel : UInt64
    create_svg_path_seg_curveto_cubic_smooth_abs : UInt64
    create_svg_path_seg_curveto_cubic_smooth_rel : UInt64
    create_svg_path_seg_curveto_quadratic_smooth_abs : UInt64
    create_svg_path_seg_curveto_quadratic_smooth_rel : UInt64
  end

  ISVGPathElement_GUID = "30510512-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPathElement = LibC::GUID.new(0x30510512_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPathElement
    lpVtbl : ISVGPathElementVTbl*
  end

  struct DispSVGPathElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGPathElement_GUID = "30590011-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGPathElement = LibC::GUID.new(0x30590011_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGPathElement
    lpVtbl : DispSVGPathElementVTbl*
  end

  struct ISVGPreserveAspectRatioVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_align : UInt64
    get_align : UInt64
    put_meet_or_slice : UInt64
    get_meet_or_slice : UInt64
  end

  ISVGPreserveAspectRatio_GUID = "305104fa-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGPreserveAspectRatio = LibC::GUID.new(0x305104fa_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGPreserveAspectRatio
    lpVtbl : ISVGPreserveAspectRatioVTbl*
  end

  struct ISVGTextElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGTextElement_GUID = "3051051c-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGTextElement = LibC::GUID.new(0x3051051c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGTextElement
    lpVtbl : ISVGTextElementVTbl*
  end

  struct DispSVGTextElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGTextElement_GUID = "30590037-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGTextElement = LibC::GUID.new(0x30590037_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGTextElement
    lpVtbl : DispSVGTextElementVTbl*
  end

  struct ISVGImageElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_x : UInt64
    get_x : UInt64
    putref_y : UInt64
    get_y : UInt64
    putref_width : UInt64
    get_width : UInt64
    putref_height : UInt64
    get_height : UInt64
  end

  ISVGImageElement_GUID = "305104f0-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGImageElement = LibC::GUID.new(0x305104f0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGImageElement
    lpVtbl : ISVGImageElementVTbl*
  end

  struct DispSVGImageElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGImageElement_GUID = "30590027-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGImageElement = LibC::GUID.new(0x30590027_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGImageElement
    lpVtbl : DispSVGImageElementVTbl*
  end

  struct ISVGStopElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_offset : UInt64
    get_offset : UInt64
  end

  ISVGStopElement_GUID = "3051052b-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGStopElement = LibC::GUID.new(0x3051052b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGStopElement
    lpVtbl : ISVGStopElementVTbl*
  end

  struct DispSVGStopElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGStopElement_GUID = "3059002d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGStopElement = LibC::GUID.new(0x3059002d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGStopElement
    lpVtbl : DispSVGStopElementVTbl*
  end

  struct ISVGGradientElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_gradient_units : UInt64
    get_gradient_units : UInt64
    putref_gradient_transform : UInt64
    get_gradient_transform : UInt64
    putref_spread_method : UInt64
    get_spread_method : UInt64
  end

  ISVGGradientElement_GUID = "30510528-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGGradientElement = LibC::GUID.new(0x30510528_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGGradientElement
    lpVtbl : ISVGGradientElementVTbl*
  end

  struct DispSVGGradientElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGGradientElement_GUID = "3059002e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGGradientElement = LibC::GUID.new(0x3059002e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGGradientElement
    lpVtbl : DispSVGGradientElementVTbl*
  end

  struct ISVGLinearGradientElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_x1 : UInt64
    get_x1 : UInt64
    putref_y1 : UInt64
    get_y1 : UInt64
    putref_x2 : UInt64
    get_x2 : UInt64
    putref_y2 : UInt64
    get_y2 : UInt64
  end

  ISVGLinearGradientElement_GUID = "30510529-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGLinearGradientElement = LibC::GUID.new(0x30510529_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGLinearGradientElement
    lpVtbl : ISVGLinearGradientElementVTbl*
  end

  struct DispSVGLinearGradientElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGLinearGradientElement_GUID = "3059002a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGLinearGradientElement = LibC::GUID.new(0x3059002a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGLinearGradientElement
    lpVtbl : DispSVGLinearGradientElementVTbl*
  end

  struct ISVGRadialGradientElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_cx : UInt64
    get_cx : UInt64
    putref_cy : UInt64
    get_cy : UInt64
    putref_r : UInt64
    get_r : UInt64
    putref_fx : UInt64
    get_fx : UInt64
    putref_fy : UInt64
    get_fy : UInt64
  end

  ISVGRadialGradientElement_GUID = "3051052a-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGRadialGradientElement = LibC::GUID.new(0x3051052a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGRadialGradientElement
    lpVtbl : ISVGRadialGradientElementVTbl*
  end

  struct DispSVGRadialGradientElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGRadialGradientElement_GUID = "3059002b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGRadialGradientElement = LibC::GUID.new(0x3059002b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGRadialGradientElement
    lpVtbl : DispSVGRadialGradientElementVTbl*
  end

  struct ISVGMaskElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_mask_units : UInt64
    get_mask_units : UInt64
    putref_mask_content_units : UInt64
    get_mask_content_units : UInt64
    putref_x : UInt64
    get_x : UInt64
    putref_y : UInt64
    get_y : UInt64
    putref_width : UInt64
    get_width : UInt64
    putref_height : UInt64
    get_height : UInt64
  end

  ISVGMaskElement_GUID = "3051052e-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGMaskElement = LibC::GUID.new(0x3051052e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGMaskElement
    lpVtbl : ISVGMaskElementVTbl*
  end

  struct DispSVGMaskElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGMaskElement_GUID = "3059003c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGMaskElement = LibC::GUID.new(0x3059003c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGMaskElement
    lpVtbl : DispSVGMaskElementVTbl*
  end

  struct ISVGMarkerElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_ref_x : UInt64
    get_ref_x : UInt64
    putref_ref_y : UInt64
    get_ref_y : UInt64
    putref_marker_units : UInt64
    get_marker_units : UInt64
    putref_marker_width : UInt64
    get_marker_width : UInt64
    putref_marker_height : UInt64
    get_marker_height : UInt64
    putref_orient_type : UInt64
    get_orient_type : UInt64
    putref_orient_angle : UInt64
    get_orient_angle : UInt64
    set_orient_to_auto : UInt64
    set_orient_to_angle : UInt64
  end

  ISVGMarkerElement_GUID = "30510525-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGMarkerElement = LibC::GUID.new(0x30510525_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGMarkerElement
    lpVtbl : ISVGMarkerElementVTbl*
  end

  struct DispSVGMarkerElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGMarkerElement_GUID = "30590036-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGMarkerElement = LibC::GUID.new(0x30590036_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGMarkerElement
    lpVtbl : DispSVGMarkerElementVTbl*
  end

  struct ISVGZoomEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_zoom_rect_screen : UInt64
    get_previous_scale : UInt64
    get_previous_translate : UInt64
    get_new_scale : UInt64
    get_new_translate : UInt64
  end

  ISVGZoomEvent_GUID = "3051054e-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGZoomEvent = LibC::GUID.new(0x3051054e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGZoomEvent
    lpVtbl : ISVGZoomEventVTbl*
  end

  struct DispSVGZoomEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGZoomEvent_GUID = "30590031-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGZoomEvent = LibC::GUID.new(0x30590031_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGZoomEvent
    lpVtbl : DispSVGZoomEventVTbl*
  end

  struct ISVGAElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_target : UInt64
    get_target : UInt64
  end

  ISVGAElement_GUID = "3051054b-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGAElement = LibC::GUID.new(0x3051054b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGAElement
    lpVtbl : ISVGAElementVTbl*
  end

  struct DispSVGAElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGAElement_GUID = "30590033-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGAElement = LibC::GUID.new(0x30590033_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGAElement
    lpVtbl : DispSVGAElementVTbl*
  end

  struct ISVGViewElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_view_target : UInt64
    get_view_target : UInt64
  end

  ISVGViewElement_GUID = "3051054c-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGViewElement = LibC::GUID.new(0x3051054c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGViewElement
    lpVtbl : ISVGViewElementVTbl*
  end

  struct DispSVGViewElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGViewElement_GUID = "30590034-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGViewElement = LibC::GUID.new(0x30590034_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGViewElement
    lpVtbl : DispSVGViewElementVTbl*
  end

  struct IHTMLMediaErrorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_code : UInt64
  end

  IHTMLMediaError_GUID = "30510704-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMediaError = LibC::GUID.new(0x30510704_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMediaError
    lpVtbl : IHTMLMediaErrorVTbl*
  end

  struct IHTMLTimeRangesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    start : UInt64
    end_ : UInt64
  end

  IHTMLTimeRanges_GUID = "30510705-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTimeRanges = LibC::GUID.new(0x30510705_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTimeRanges
    lpVtbl : IHTMLTimeRangesVTbl*
  end

  struct IHTMLTimeRanges2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    start_double : UInt64
    end_double : UInt64
  end

  IHTMLTimeRanges2_GUID = "3051080b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLTimeRanges2 = LibC::GUID.new(0x3051080b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLTimeRanges2
    lpVtbl : IHTMLTimeRanges2VTbl*
  end

  struct IHTMLMediaElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_error : UInt64
    put_src : UInt64
    get_src : UInt64
    get_current_src : UInt64
    get_network_state : UInt64
    put_preload : UInt64
    get_preload : UInt64
    get_buffered : UInt64
    load : UInt64
    can_play_type : UInt64
    get_seeking : UInt64
    put_current_time : UInt64
    get_current_time : UInt64
    get_initial_time : UInt64
    get_duration : UInt64
    get_paused : UInt64
    put_default_playback_rate : UInt64
    get_default_playback_rate : UInt64
    put_playback_rate : UInt64
    get_playback_rate : UInt64
    get_played : UInt64
    get_seekable : UInt64
    get_ended : UInt64
    put_autoplay : UInt64
    get_autoplay : UInt64
    put_loop : UInt64
    get_loop : UInt64
    play : UInt64
    pause : UInt64
    put_controls : UInt64
    get_controls : UInt64
    put_volume : UInt64
    get_volume : UInt64
    put_muted : UInt64
    get_muted : UInt64
    put_autobuffer : UInt64
    get_autobuffer : UInt64
  end

  IHTMLMediaElement_GUID = "30510706-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMediaElement = LibC::GUID.new(0x30510706_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMediaElement
    lpVtbl : IHTMLMediaElementVTbl*
  end

  struct IHTMLMediaElement2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_current_time_double : UInt64
    get_current_time_double : UInt64
    get_initial_time_double : UInt64
    get_duration_double : UInt64
    put_default_playback_rate_double : UInt64
    get_default_playback_rate_double : UInt64
    put_playback_rate_double : UInt64
    get_playback_rate_double : UInt64
    put_volume_double : UInt64
    get_volume_double : UInt64
  end

  IHTMLMediaElement2_GUID = "30510809-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMediaElement2 = LibC::GUID.new(0x30510809_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMediaElement2
    lpVtbl : IHTMLMediaElement2VTbl*
  end

  struct IHTMLMSMediaElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_ms_play_to_disabled : UInt64
    get_ms_play_to_disabled : UInt64
    put_ms_play_to_primary : UInt64
    get_ms_play_to_primary : UInt64
  end

  IHTMLMSMediaElement_GUID = "30510792-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLMSMediaElement = LibC::GUID.new(0x30510792_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLMSMediaElement
    lpVtbl : IHTMLMSMediaElementVTbl*
  end

  struct IHTMLSourceElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_src : UInt64
    get_src : UInt64
    put_type : UInt64
    get_type : UInt64
    put_media : UInt64
    get_media : UInt64
  end

  IHTMLSourceElement_GUID = "30510707-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLSourceElement = LibC::GUID.new(0x30510707_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLSourceElement
    lpVtbl : IHTMLSourceElementVTbl*
  end

  struct IHTMLAudioElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  IHTMLAudioElement_GUID = "30510708-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAudioElement = LibC::GUID.new(0x30510708_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAudioElement
    lpVtbl : IHTMLAudioElementVTbl*
  end

  struct IHTMLVideoElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_width : UInt64
    get_width : UInt64
    put_height : UInt64
    get_height : UInt64
    get_video_width : UInt64
    get_video_height : UInt64
    put_poster : UInt64
    get_poster : UInt64
  end

  IHTMLVideoElement_GUID = "30510709-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLVideoElement = LibC::GUID.new(0x30510709_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLVideoElement
    lpVtbl : IHTMLVideoElementVTbl*
  end

  struct IHTMLAudioElementFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create : UInt64
  end

  IHTMLAudioElementFactory_GUID = "305107eb-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAudioElementFactory = LibC::GUID.new(0x305107eb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAudioElementFactory
    lpVtbl : IHTMLAudioElementFactoryVTbl*
  end

  struct DispHTMLMediaErrorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLMediaError_GUID = "30590086-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLMediaError = LibC::GUID.new(0x30590086_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLMediaError
    lpVtbl : DispHTMLMediaErrorVTbl*
  end

  struct DispHTMLTimeRangesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLTimeRanges_GUID = "30590087-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLTimeRanges = LibC::GUID.new(0x30590087_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLTimeRanges
    lpVtbl : DispHTMLTimeRangesVTbl*
  end

  struct DispHTMLMediaElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLMediaElement_GUID = "30590088-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLMediaElement = LibC::GUID.new(0x30590088_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLMediaElement
    lpVtbl : DispHTMLMediaElementVTbl*
  end

  struct DispHTMLSourceElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLSourceElement_GUID = "30590089-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLSourceElement = LibC::GUID.new(0x30590089_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLSourceElement
    lpVtbl : DispHTMLSourceElementVTbl*
  end

  struct DispHTMLAudioElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLAudioElement_GUID = "3059008a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLAudioElement = LibC::GUID.new(0x3059008a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLAudioElement
    lpVtbl : DispHTMLAudioElementVTbl*
  end

  struct DispHTMLVideoElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLVideoElement_GUID = "3059008b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLVideoElement = LibC::GUID.new(0x3059008b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLVideoElement
    lpVtbl : DispHTMLVideoElementVTbl*
  end

  struct ISVGSwitchElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGSwitchElement_GUID = "305104f1-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGSwitchElement = LibC::GUID.new(0x305104f1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGSwitchElement
    lpVtbl : ISVGSwitchElementVTbl*
  end

  struct DispSVGSwitchElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGSwitchElement_GUID = "30590030-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGSwitchElement = LibC::GUID.new(0x30590030_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGSwitchElement
    lpVtbl : DispSVGSwitchElementVTbl*
  end

  struct ISVGDescElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGDescElement_GUID = "305104ea-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGDescElement = LibC::GUID.new(0x305104ea_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGDescElement
    lpVtbl : ISVGDescElementVTbl*
  end

  struct DispSVGDescElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGDescElement_GUID = "30590005-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGDescElement = LibC::GUID.new(0x30590005_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGDescElement
    lpVtbl : DispSVGDescElementVTbl*
  end

  struct ISVGTitleElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGTitleElement_GUID = "305104eb-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGTitleElement = LibC::GUID.new(0x305104eb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGTitleElement
    lpVtbl : ISVGTitleElementVTbl*
  end

  struct DispSVGTitleElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGTitleElement_GUID = "30590006-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGTitleElement = LibC::GUID.new(0x30590006_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGTitleElement
    lpVtbl : DispSVGTitleElementVTbl*
  end

  struct ISVGMetadataElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGMetadataElement_GUID = "30510560-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGMetadataElement = LibC::GUID.new(0x30510560_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGMetadataElement
    lpVtbl : ISVGMetadataElementVTbl*
  end

  struct DispSVGMetadataElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGMetadataElement_GUID = "3059002f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGMetadataElement = LibC::GUID.new(0x3059002f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGMetadataElement
    lpVtbl : DispSVGMetadataElementVTbl*
  end

  struct ISVGElementInstanceListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    item : UInt64
  end

  ISVGElementInstanceList_GUID = "305104ef-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGElementInstanceList = LibC::GUID.new(0x305104ef_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGElementInstanceList
    lpVtbl : ISVGElementInstanceListVTbl*
  end

  struct DispSVGElementInstanceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGElementInstance_GUID = "30590007-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGElementInstance = LibC::GUID.new(0x30590007_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGElementInstance
    lpVtbl : DispSVGElementInstanceVTbl*
  end

  struct DispSVGElementInstanceListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGElementInstanceList_GUID = "30590008-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGElementInstanceList = LibC::GUID.new(0x30590008_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGElementInstanceList
    lpVtbl : DispSVGElementInstanceListVTbl*
  end

  struct IDOMExceptionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_code : UInt64
    get_code : UInt64
    get_message : UInt64
  end

  IDOMException_GUID = "3051072b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMException = LibC::GUID.new(0x3051072b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMException
    lpVtbl : IDOMExceptionVTbl*
  end

  struct DispDOMExceptionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMException_GUID = "30590094-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMException = LibC::GUID.new(0x30590094_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMException
    lpVtbl : DispDOMExceptionVTbl*
  end

  struct IRangeExceptionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_code : UInt64
    get_code : UInt64
    get_message : UInt64
  end

  IRangeException_GUID = "3051072d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IRangeException = LibC::GUID.new(0x3051072d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IRangeException
    lpVtbl : IRangeExceptionVTbl*
  end

  struct DispRangeExceptionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispRangeException_GUID = "30590095-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispRangeException = LibC::GUID.new(0x30590095_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispRangeException
    lpVtbl : DispRangeExceptionVTbl*
  end

  struct ISVGExceptionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_code : UInt64
    get_code : UInt64
    get_message : UInt64
  end

  ISVGException_GUID = "3051072f-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGException = LibC::GUID.new(0x3051072f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGException
    lpVtbl : ISVGExceptionVTbl*
  end

  struct DispSVGExceptionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGException_GUID = "30590096-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGException = LibC::GUID.new(0x30590096_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGException
    lpVtbl : DispSVGExceptionVTbl*
  end

  struct IEventExceptionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_code : UInt64
    get_code : UInt64
    get_message : UInt64
  end

  IEventException_GUID = "3051073a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IEventException = LibC::GUID.new(0x3051073a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IEventException
    lpVtbl : IEventExceptionVTbl*
  end

  struct DispEventExceptionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispEventException_GUID = "30590099-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispEventException = LibC::GUID.new(0x30590099_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispEventException
    lpVtbl : DispEventExceptionVTbl*
  end

  struct ISVGScriptElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_type : UInt64
    get_type : UInt64
  end

  ISVGScriptElement_GUID = "3051054d-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGScriptElement = LibC::GUID.new(0x3051054d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGScriptElement
    lpVtbl : ISVGScriptElementVTbl*
  end

  struct DispSVGScriptElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGScriptElement_GUID = "30590039-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGScriptElement = LibC::GUID.new(0x30590039_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGScriptElement
    lpVtbl : DispSVGScriptElementVTbl*
  end

  struct ISVGStyleElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_type : UInt64
    get_type : UInt64
    put_media : UInt64
    get_media : UInt64
  end

  ISVGStyleElement_GUID = "305104f3-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGStyleElement = LibC::GUID.new(0x305104f3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGStyleElement
    lpVtbl : ISVGStyleElementVTbl*
  end

  struct DispSVGStyleElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGStyleElement_GUID = "30590029-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGStyleElement = LibC::GUID.new(0x30590029_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGStyleElement
    lpVtbl : DispSVGStyleElementVTbl*
  end

  struct ISVGTextContentElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_text_length : UInt64
    get_text_length : UInt64
    putref_length_adjust : UInt64
    get_length_adjust : UInt64
    get_number_of_chars : UInt64
    get_computed_text_length : UInt64
    get_sub_string_length : UInt64
    get_start_position_of_char : UInt64
    get_end_position_of_char : UInt64
    get_extent_of_char : UInt64
    get_rotation_of_char : UInt64
    get_char_num_at_position : UInt64
    select_sub_string : UInt64
  end

  ISVGTextContentElement_GUID = "3051051a-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGTextContentElement = LibC::GUID.new(0x3051051a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGTextContentElement
    lpVtbl : ISVGTextContentElementVTbl*
  end

  struct DispSVGTextContentElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGTextContentElement_GUID = "30590035-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGTextContentElement = LibC::GUID.new(0x30590035_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGTextContentElement
    lpVtbl : DispSVGTextContentElementVTbl*
  end

  struct ISVGTextPositioningElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_x : UInt64
    get_x : UInt64
    putref_y : UInt64
    get_y : UInt64
    putref_dx : UInt64
    get_dx : UInt64
    putref_dy : UInt64
    get_dy : UInt64
    putref_rotate : UInt64
    get_rotate : UInt64
  end

  ISVGTextPositioningElement_GUID = "3051051b-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGTextPositioningElement = LibC::GUID.new(0x3051051b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGTextPositioningElement
    lpVtbl : ISVGTextPositioningElementVTbl*
  end

  struct DispSVGTextPositioningElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGTextPositioningElement_GUID = "30590038-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGTextPositioningElement = LibC::GUID.new(0x30590038_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGTextPositioningElement
    lpVtbl : DispSVGTextPositioningElementVTbl*
  end

  struct DispDOMDocumentTypeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMDocumentType_GUID = "30590098-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMDocumentType = LibC::GUID.new(0x30590098_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMDocumentType
    lpVtbl : DispDOMDocumentTypeVTbl*
  end

  struct DispNodeIteratorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispNodeIterator_GUID = "3059009c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispNodeIterator = LibC::GUID.new(0x3059009c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispNodeIterator
    lpVtbl : DispNodeIteratorVTbl*
  end

  struct DispTreeWalkerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispTreeWalker_GUID = "3059009d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispTreeWalker = LibC::GUID.new(0x3059009d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispTreeWalker
    lpVtbl : DispTreeWalkerVTbl*
  end

  struct DispDOMProcessingInstructionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMProcessingInstruction_GUID = "3059009b-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMProcessingInstruction = LibC::GUID.new(0x3059009b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMProcessingInstruction
    lpVtbl : DispDOMProcessingInstructionVTbl*
  end

  struct IHTMLPerformanceNavigationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_type : UInt64
    get_redirect_count : UInt64
    to_string : UInt64
    to_json : UInt64
  end

  IHTMLPerformanceNavigation_GUID = "30510750-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPerformanceNavigation = LibC::GUID.new(0x30510750_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPerformanceNavigation
    lpVtbl : IHTMLPerformanceNavigationVTbl*
  end

  struct IHTMLPerformanceTimingVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_navigation_start : UInt64
    get_unload_event_start : UInt64
    get_unload_event_end : UInt64
    get_redirect_start : UInt64
    get_redirect_end : UInt64
    get_fetch_start : UInt64
    get_domain_lookup_start : UInt64
    get_domain_lookup_end : UInt64
    get_connect_start : UInt64
    get_connect_end : UInt64
    get_request_start : UInt64
    get_response_start : UInt64
    get_response_end : UInt64
    get_dom_loading : UInt64
    get_dom_interactive : UInt64
    get_dom_content_loaded_event_start : UInt64
    get_dom_content_loaded_event_end : UInt64
    get_dom_complete : UInt64
    get_load_event_start : UInt64
    get_load_event_end : UInt64
    get_ms_first_paint : UInt64
    to_string : UInt64
    to_json : UInt64
  end

  IHTMLPerformanceTiming_GUID = "30510752-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPerformanceTiming = LibC::GUID.new(0x30510752_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPerformanceTiming
    lpVtbl : IHTMLPerformanceTimingVTbl*
  end

  struct DispHTMLPerformanceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLPerformance_GUID = "3059009f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLPerformance = LibC::GUID.new(0x3059009f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLPerformance
    lpVtbl : DispHTMLPerformanceVTbl*
  end

  struct DispHTMLPerformanceNavigationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLPerformanceNavigation_GUID = "305900a0-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLPerformanceNavigation = LibC::GUID.new(0x305900a0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLPerformanceNavigation
    lpVtbl : DispHTMLPerformanceNavigationVTbl*
  end

  struct DispHTMLPerformanceTimingVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLPerformanceTiming_GUID = "305900a1-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLPerformanceTiming = LibC::GUID.new(0x305900a1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLPerformanceTiming
    lpVtbl : DispHTMLPerformanceTimingVTbl*
  end

  struct ISVGTSpanElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  ISVGTSpanElement_GUID = "3051051d-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGTSpanElement = LibC::GUID.new(0x3051051d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGTSpanElement
    lpVtbl : ISVGTSpanElementVTbl*
  end

  struct DispSVGTSpanElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGTSpanElement_GUID = "3059003a-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGTSpanElement = LibC::GUID.new(0x3059003a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGTSpanElement
    lpVtbl : DispSVGTSpanElementVTbl*
  end

  struct ITemplatePrinterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    start_doc : UInt64
    stop_doc : UInt64
    print_blank_page : UInt64
    print_page : UInt64
    ensure_print_dialog_defaults : UInt64
    show_print_dialog : UInt64
    show_page_setup_dialog : UInt64
    print_non_native : UInt64
    print_non_native_frames : UInt64
    put_frameset_document : UInt64
    get_frameset_document : UInt64
    put_frame_active : UInt64
    get_frame_active : UInt64
    put_frame_as_shown : UInt64
    get_frame_as_shown : UInt64
    put_selection : UInt64
    get_selection : UInt64
    put_selected_pages : UInt64
    get_selected_pages : UInt64
    put_current_page : UInt64
    get_current_page : UInt64
    put_current_page_avail : UInt64
    get_current_page_avail : UInt64
    put_collate : UInt64
    get_collate : UInt64
    get_duplex : UInt64
    put_copies : UInt64
    get_copies : UInt64
    put_page_from : UInt64
    get_page_from : UInt64
    put_page_to : UInt64
    get_page_to : UInt64
    put_table_of_links : UInt64
    get_table_of_links : UInt64
    put_all_linked_documents : UInt64
    get_all_linked_documents : UInt64
    put_header : UInt64
    get_header : UInt64
    put_footer : UInt64
    get_footer : UInt64
    put_margin_left : UInt64
    get_margin_left : UInt64
    put_margin_right : UInt64
    get_margin_right : UInt64
    put_margin_top : UInt64
    get_margin_top : UInt64
    put_margin_bottom : UInt64
    get_margin_bottom : UInt64
    get_page_width : UInt64
    get_page_height : UInt64
    get_unprintable_left : UInt64
    get_unprintable_top : UInt64
    get_unprintable_right : UInt64
    get_unprintable_bottom : UInt64
    update_page_status : UInt64
  end

  ITemplatePrinter_GUID = "3050f6b4-98b5-11cf-bb82-00aa00bdce0b"
  IID_ITemplatePrinter = LibC::GUID.new(0x3050f6b4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ITemplatePrinter
    lpVtbl : ITemplatePrinterVTbl*
  end

  struct ITemplatePrinter2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    start_doc : UInt64
    stop_doc : UInt64
    print_blank_page : UInt64
    print_page : UInt64
    ensure_print_dialog_defaults : UInt64
    show_print_dialog : UInt64
    show_page_setup_dialog : UInt64
    print_non_native : UInt64
    print_non_native_frames : UInt64
    put_frameset_document : UInt64
    get_frameset_document : UInt64
    put_frame_active : UInt64
    get_frame_active : UInt64
    put_frame_as_shown : UInt64
    get_frame_as_shown : UInt64
    put_selection : UInt64
    get_selection : UInt64
    put_selected_pages : UInt64
    get_selected_pages : UInt64
    put_current_page : UInt64
    get_current_page : UInt64
    put_current_page_avail : UInt64
    get_current_page_avail : UInt64
    put_collate : UInt64
    get_collate : UInt64
    get_duplex : UInt64
    put_copies : UInt64
    get_copies : UInt64
    put_page_from : UInt64
    get_page_from : UInt64
    put_page_to : UInt64
    get_page_to : UInt64
    put_table_of_links : UInt64
    get_table_of_links : UInt64
    put_all_linked_documents : UInt64
    get_all_linked_documents : UInt64
    put_header : UInt64
    get_header : UInt64
    put_footer : UInt64
    get_footer : UInt64
    put_margin_left : UInt64
    get_margin_left : UInt64
    put_margin_right : UInt64
    get_margin_right : UInt64
    put_margin_top : UInt64
    get_margin_top : UInt64
    put_margin_bottom : UInt64
    get_margin_bottom : UInt64
    get_page_width : UInt64
    get_page_height : UInt64
    get_unprintable_left : UInt64
    get_unprintable_top : UInt64
    get_unprintable_right : UInt64
    get_unprintable_bottom : UInt64
    update_page_status : UInt64
    put_selection_enabled : UInt64
    get_selection_enabled : UInt64
    put_frame_active_enabled : UInt64
    get_frame_active_enabled : UInt64
    put_orientation : UInt64
    get_orientation : UInt64
    put_use_printer_copy_collate : UInt64
    get_use_printer_copy_collate : UInt64
    device_supports : UInt64
  end

  ITemplatePrinter2_GUID = "3050f83f-98b5-11cf-bb82-00aa00bdce0b"
  IID_ITemplatePrinter2 = LibC::GUID.new(0x3050f83f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ITemplatePrinter2
    lpVtbl : ITemplatePrinter2VTbl*
  end

  struct ITemplatePrinter3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    start_doc : UInt64
    stop_doc : UInt64
    print_blank_page : UInt64
    print_page : UInt64
    ensure_print_dialog_defaults : UInt64
    show_print_dialog : UInt64
    show_page_setup_dialog : UInt64
    print_non_native : UInt64
    print_non_native_frames : UInt64
    put_frameset_document : UInt64
    get_frameset_document : UInt64
    put_frame_active : UInt64
    get_frame_active : UInt64
    put_frame_as_shown : UInt64
    get_frame_as_shown : UInt64
    put_selection : UInt64
    get_selection : UInt64
    put_selected_pages : UInt64
    get_selected_pages : UInt64
    put_current_page : UInt64
    get_current_page : UInt64
    put_current_page_avail : UInt64
    get_current_page_avail : UInt64
    put_collate : UInt64
    get_collate : UInt64
    get_duplex : UInt64
    put_copies : UInt64
    get_copies : UInt64
    put_page_from : UInt64
    get_page_from : UInt64
    put_page_to : UInt64
    get_page_to : UInt64
    put_table_of_links : UInt64
    get_table_of_links : UInt64
    put_all_linked_documents : UInt64
    get_all_linked_documents : UInt64
    put_header : UInt64
    get_header : UInt64
    put_footer : UInt64
    get_footer : UInt64
    put_margin_left : UInt64
    get_margin_left : UInt64
    put_margin_right : UInt64
    get_margin_right : UInt64
    put_margin_top : UInt64
    get_margin_top : UInt64
    put_margin_bottom : UInt64
    get_margin_bottom : UInt64
    get_page_width : UInt64
    get_page_height : UInt64
    get_unprintable_left : UInt64
    get_unprintable_top : UInt64
    get_unprintable_right : UInt64
    get_unprintable_bottom : UInt64
    update_page_status : UInt64
    put_selection_enabled : UInt64
    get_selection_enabled : UInt64
    put_frame_active_enabled : UInt64
    get_frame_active_enabled : UInt64
    put_orientation : UInt64
    get_orientation : UInt64
    put_use_printer_copy_collate : UInt64
    get_use_printer_copy_collate : UInt64
    device_supports : UInt64
    put_header_footer_font : UInt64
    get_header_footer_font : UInt64
    get_page_margin_top : UInt64
    get_page_margin_right : UInt64
    get_page_margin_bottom : UInt64
    get_page_margin_left : UInt64
    get_page_margin_top_important : UInt64
    get_page_margin_right_important : UInt64
    get_page_margin_bottom_important : UInt64
    get_page_margin_left_important : UInt64
  end

  ITemplatePrinter3_GUID = "305104a3-98b5-11cf-bb82-00aa00bdce0b"
  IID_ITemplatePrinter3 = LibC::GUID.new(0x305104a3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ITemplatePrinter3
    lpVtbl : ITemplatePrinter3VTbl*
  end

  struct IPrintManagerTemplatePrinterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    start_print : UInt64
    draw_preview_page : UInt64
    set_page_count : UInt64
    invalidate_preview : UInt64
    get_print_task_option_value : UInt64
    end_print : UInt64
  end

  IPrintManagerTemplatePrinter_GUID = "f633be14-9eff-4c4d-929e-05717b21b3e6"
  IID_IPrintManagerTemplatePrinter = LibC::GUID.new(0xf633be14_u32, 0x9eff_u16, 0x4c4d_u16, StaticArray[0x92_u8, 0x9e_u8, 0x5_u8, 0x71_u8, 0x7b_u8, 0x21_u8, 0xb3_u8, 0xe6_u8])
  struct IPrintManagerTemplatePrinter
    lpVtbl : IPrintManagerTemplatePrinterVTbl*
  end

  struct IPrintManagerTemplatePrinter2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    start_print : UInt64
    draw_preview_page : UInt64
    set_page_count : UInt64
    invalidate_preview : UInt64
    get_print_task_option_value : UInt64
    end_print : UInt64
    get_show_header_footer : UInt64
    get_shrink_to_fit : UInt64
    get_percent_scale : UInt64
  end

  IPrintManagerTemplatePrinter2_GUID = "c6403497-7493-4f09-8016-54b03e9bda69"
  IID_IPrintManagerTemplatePrinter2 = LibC::GUID.new(0xc6403497_u32, 0x7493_u16, 0x4f09_u16, StaticArray[0x80_u8, 0x16_u8, 0x54_u8, 0xb0_u8, 0x3e_u8, 0x9b_u8, 0xda_u8, 0x69_u8])
  struct IPrintManagerTemplatePrinter2
    lpVtbl : IPrintManagerTemplatePrinter2VTbl*
  end

  struct DispCPrintManagerTemplatePrinterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispCPrintManagerTemplatePrinter_GUID = "305900e9-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispCPrintManagerTemplatePrinter = LibC::GUID.new(0x305900e9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispCPrintManagerTemplatePrinter
    lpVtbl : DispCPrintManagerTemplatePrinterVTbl*
  end

  struct ISVGTextPathElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    putref_start_offset : UInt64
    get_start_offset : UInt64
    putref_method : UInt64
    get_method : UInt64
    putref_spacing : UInt64
    get_spacing : UInt64
  end

  ISVGTextPathElement_GUID = "3051051f-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISVGTextPathElement = LibC::GUID.new(0x3051051f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISVGTextPathElement
    lpVtbl : ISVGTextPathElementVTbl*
  end

  struct DispSVGTextPathElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispSVGTextPathElement_GUID = "3059003d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispSVGTextPathElement = LibC::GUID.new(0x3059003d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispSVGTextPathElement
    lpVtbl : DispSVGTextPathElementVTbl*
  end

  struct IDOMXmlSerializerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    serialize_to_string : UInt64
  end

  IDOMXmlSerializer_GUID = "3051077d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMXmlSerializer = LibC::GUID.new(0x3051077d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMXmlSerializer
    lpVtbl : IDOMXmlSerializerVTbl*
  end

  struct IDOMParserVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    parse_from_string : UInt64
  end

  IDOMParser_GUID = "30510781-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMParser = LibC::GUID.new(0x30510781_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMParser
    lpVtbl : IDOMParserVTbl*
  end

  struct DispXMLSerializerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispXMLSerializer_GUID = "305900ad-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispXMLSerializer = LibC::GUID.new(0x305900ad_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispXMLSerializer
    lpVtbl : DispXMLSerializerVTbl*
  end

  struct DispDOMParserVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMParser_GUID = "305900ae-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMParser = LibC::GUID.new(0x305900ae_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMParser
    lpVtbl : DispDOMParserVTbl*
  end

  struct IDOMXmlSerializerFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create : UInt64
  end

  IDOMXmlSerializerFactory_GUID = "3051077f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMXmlSerializerFactory = LibC::GUID.new(0x3051077f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMXmlSerializerFactory
    lpVtbl : IDOMXmlSerializerFactoryVTbl*
  end

  struct IDOMParserFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    create : UInt64
  end

  IDOMParserFactory_GUID = "30510783-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMParserFactory = LibC::GUID.new(0x30510783_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMParserFactory
    lpVtbl : IDOMParserFactoryVTbl*
  end

  struct DispHTMLSemanticElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLSemanticElement_GUID = "305900ba-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLSemanticElement = LibC::GUID.new(0x305900ba_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLSemanticElement
    lpVtbl : DispHTMLSemanticElementVTbl*
  end

  struct IHTMLProgressElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_value : UInt64
    get_value : UInt64
    put_max : UInt64
    get_max : UInt64
    get_position : UInt64
    get_form : UInt64
  end

  IHTMLProgressElement_GUID = "3050f2d6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLProgressElement = LibC::GUID.new(0x3050f2d6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLProgressElement
    lpVtbl : IHTMLProgressElementVTbl*
  end

  struct DispHTMLProgressElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLProgressElement_GUID = "305900af-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLProgressElement = LibC::GUID.new(0x305900af_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLProgressElement
    lpVtbl : DispHTMLProgressElementVTbl*
  end

  struct IDOMMSTransitionEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_property_name : UInt64
    get_elapsed_time : UInt64
    init_ms_transition_event : UInt64
  end

  IDOMMSTransitionEvent_GUID = "305107b5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMMSTransitionEvent = LibC::GUID.new(0x305107b5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMMSTransitionEvent
    lpVtbl : IDOMMSTransitionEventVTbl*
  end

  struct DispDOMMSTransitionEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMMSTransitionEvent_GUID = "305900bb-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMMSTransitionEvent = LibC::GUID.new(0x305900bb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMMSTransitionEvent
    lpVtbl : DispDOMMSTransitionEventVTbl*
  end

  struct IDOMMSAnimationEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_animation_name : UInt64
    get_elapsed_time : UInt64
    init_ms_animation_event : UInt64
  end

  IDOMMSAnimationEvent_GUID = "305107b7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMMSAnimationEvent = LibC::GUID.new(0x305107b7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMMSAnimationEvent
    lpVtbl : IDOMMSAnimationEventVTbl*
  end

  struct DispDOMMSAnimationEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMMSAnimationEvent_GUID = "305900bc-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMMSAnimationEvent = LibC::GUID.new(0x305900bc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMMSAnimationEvent
    lpVtbl : DispDOMMSAnimationEventVTbl*
  end

  struct IWebGeocoordinatesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_latitude : UInt64
    get_longitude : UInt64
    get_altitude : UInt64
    get_accuracy : UInt64
    get_altitude_accuracy : UInt64
    get_heading : UInt64
    get_speed : UInt64
  end

  IWebGeocoordinates_GUID = "305107c7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IWebGeocoordinates = LibC::GUID.new(0x305107c7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IWebGeocoordinates
    lpVtbl : IWebGeocoordinatesVTbl*
  end

  struct IWebGeopositionErrorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_code : UInt64
    get_message : UInt64
  end

  IWebGeopositionError_GUID = "305107c9-98b5-11cf-bb82-00aa00bdce0b"
  IID_IWebGeopositionError = LibC::GUID.new(0x305107c9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IWebGeopositionError
    lpVtbl : IWebGeopositionErrorVTbl*
  end

  struct IWebGeopositionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_coords : UInt64
    get_timestamp : UInt64
  end

  IWebGeoposition_GUID = "305107cd-98b5-11cf-bb82-00aa00bdce0b"
  IID_IWebGeoposition = LibC::GUID.new(0x305107cd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IWebGeoposition
    lpVtbl : IWebGeopositionVTbl*
  end

  struct DispWebGeolocationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispWebGeolocation_GUID = "305900bd-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispWebGeolocation = LibC::GUID.new(0x305900bd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispWebGeolocation
    lpVtbl : DispWebGeolocationVTbl*
  end

  struct DispWebGeocoordinatesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispWebGeocoordinates_GUID = "305900be-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispWebGeocoordinates = LibC::GUID.new(0x305900be_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispWebGeocoordinates
    lpVtbl : DispWebGeocoordinatesVTbl*
  end

  struct DispWebGeopositionErrorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispWebGeopositionError_GUID = "305900bf-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispWebGeopositionError = LibC::GUID.new(0x305900bf_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispWebGeopositionError
    lpVtbl : DispWebGeopositionErrorVTbl*
  end

  struct DispWebGeopositionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispWebGeoposition_GUID = "305900c1-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispWebGeoposition = LibC::GUID.new(0x305900c1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispWebGeoposition
    lpVtbl : DispWebGeopositionVTbl*
  end

  struct IClientCapsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_java_enabled : UInt64
    get_cookie_enabled : UInt64
    get_cpu_class : UInt64
    get_system_language : UInt64
    get_user_language : UInt64
    get_platform : UInt64
    get_connection_speed : UInt64
    get_on_line : UInt64
    get_color_depth : UInt64
    get_buffer_depth : UInt64
    get_width : UInt64
    get_height : UInt64
    get_avail_height : UInt64
    get_avail_width : UInt64
    get_connection_type : UInt64
    is_component_installed : UInt64
    get_component_version : UInt64
    compare_versions : UInt64
    add_component_request : UInt64
    do_component_request : UInt64
    clear_component_request : UInt64
  end

  IClientCaps_GUID = "7e8bc44d-aeff-11d1-89c2-00c04fb6bfc4"
  IID_IClientCaps = LibC::GUID.new(0x7e8bc44d_u32, 0xaeff_u16, 0x11d1_u16, StaticArray[0x89_u8, 0xc2_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0xbf_u8, 0xc4_u8])
  struct IClientCaps
    lpVtbl : IClientCapsVTbl*
  end

  struct IDOMMSManipulationEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_last_state : UInt64
    get_current_state : UInt64
    init_ms_manipulation_event : UInt64
  end

  IDOMMSManipulationEvent_GUID = "30510816-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMMSManipulationEvent = LibC::GUID.new(0x30510816_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMMSManipulationEvent
    lpVtbl : IDOMMSManipulationEventVTbl*
  end

  struct DispDOMMSManipulationEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMMSManipulationEvent_GUID = "305900e1-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMMSManipulationEvent = LibC::GUID.new(0x305900e1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMMSManipulationEvent
    lpVtbl : DispDOMMSManipulationEventVTbl*
  end

  struct IDOMCloseEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_was_clean : UInt64
    init_close_event : UInt64
  end

  IDOMCloseEvent_GUID = "305107ff-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMCloseEvent = LibC::GUID.new(0x305107ff_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMCloseEvent
    lpVtbl : IDOMCloseEventVTbl*
  end

  struct DispDOMCloseEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispDOMCloseEvent_GUID = "305900dc-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispDOMCloseEvent = LibC::GUID.new(0x305900dc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispDOMCloseEvent
    lpVtbl : DispDOMCloseEventVTbl*
  end

  struct DispApplicationCacheVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispApplicationCache_GUID = "305900e4-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispApplicationCache = LibC::GUID.new(0x305900e4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispApplicationCache
    lpVtbl : DispApplicationCacheVTbl*
  end

  struct ICSSFilterSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_element : UInt64
    fire_on_filter_change_event : UInt64
  end

  ICSSFilterSite_GUID = "3050f3ed-98b5-11cf-bb82-00aa00bdce0b"
  IID_ICSSFilterSite = LibC::GUID.new(0x3050f3ed_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ICSSFilterSite
    lpVtbl : ICSSFilterSiteVTbl*
  end

  struct IMarkupPointerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    owning_doc : UInt64
    gravity : UInt64
    set_gravity : UInt64
    cling : UInt64
    set_cling : UInt64
    unposition : UInt64
    is_positioned : UInt64
    get_container : UInt64
    move_adjacent_to_element : UInt64
    move_to_pointer : UInt64
    move_to_container : UInt64
    left : UInt64
    right : UInt64
    current_scope : UInt64
    is_left_of : UInt64
    is_left_of_or_equal_to : UInt64
    is_right_of : UInt64
    is_right_of_or_equal_to : UInt64
    is_equal_to : UInt64
    move_unit : UInt64
    find_text : UInt64
  end

  IMarkupPointer_GUID = "3050f49f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IMarkupPointer = LibC::GUID.new(0x3050f49f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IMarkupPointer
    lpVtbl : IMarkupPointerVTbl*
  end

  struct IMarkupContainerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    owning_doc : UInt64
  end

  IMarkupContainer_GUID = "3050f5f9-98b5-11cf-bb82-00aa00bdce0b"
  IID_IMarkupContainer = LibC::GUID.new(0x3050f5f9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IMarkupContainer
    lpVtbl : IMarkupContainerVTbl*
  end

  struct IMarkupContainer2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    owning_doc : UInt64
    create_change_log : UInt64
    register_for_dirty_range : UInt64
    un_register_for_dirty_range : UInt64
    get_and_clear_dirty_range : UInt64
    get_version_number : UInt64
    get_master_element : UInt64
  end

  IMarkupContainer2_GUID = "3050f648-98b5-11cf-bb82-00aa00bdce0b"
  IID_IMarkupContainer2 = LibC::GUID.new(0x3050f648_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IMarkupContainer2
    lpVtbl : IMarkupContainer2VTbl*
  end

  struct IHTMLChangeLogVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_next_change : UInt64
  end

  IHTMLChangeLog_GUID = "3050f649-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLChangeLog = LibC::GUID.new(0x3050f649_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLChangeLog
    lpVtbl : IHTMLChangeLogVTbl*
  end

  struct IHTMLChangeSinkVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    notify : UInt64
  end

  IHTMLChangeSink_GUID = "3050f64a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLChangeSink = LibC::GUID.new(0x3050f64a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLChangeSink
    lpVtbl : IHTMLChangeSinkVTbl*
  end

  struct ISegmentListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_iterator : UInt64
    get_type : UInt64
    is_empty : UInt64
  end

  ISegmentList_GUID = "3050f605-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISegmentList = LibC::GUID.new(0x3050f605_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISegmentList
    lpVtbl : ISegmentListVTbl*
  end

  struct ISegmentListIteratorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    current : UInt64
    first : UInt64
    is_done : UInt64
    advance : UInt64
  end

  ISegmentListIterator_GUID = "3050f692-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISegmentListIterator = LibC::GUID.new(0x3050f692_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISegmentListIterator
    lpVtbl : ISegmentListIteratorVTbl*
  end

  struct IHTMLCaretVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    move_caret_to_pointer : UInt64
    move_caret_to_pointer_ex : UInt64
    move_markup_pointer_to_caret : UInt64
    move_display_pointer_to_caret : UInt64
    is_visible : UInt64
    show : UInt64
    hide : UInt64
    insert_text : UInt64
    scroll_into_view : UInt64
    get_location : UInt64
    get_caret_direction : UInt64
    set_caret_direction : UInt64
  end

  IHTMLCaret_GUID = "3050f604-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLCaret = LibC::GUID.new(0x3050f604_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLCaret
    lpVtbl : IHTMLCaretVTbl*
  end

  struct ISegmentVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_pointers : UInt64
  end

  ISegment_GUID = "3050f683-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISegment = LibC::GUID.new(0x3050f683_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISegment
    lpVtbl : ISegmentVTbl*
  end

  struct IElementSegmentVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_pointers : UInt64
    get_element : UInt64
    set_primary : UInt64
    is_primary : UInt64
  end

  IElementSegment_GUID = "3050f68f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementSegment = LibC::GUID.new(0x3050f68f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementSegment
    lpVtbl : IElementSegmentVTbl*
  end

  struct IHighlightSegmentVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_pointers : UInt64
  end

  IHighlightSegment_GUID = "3050f690-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHighlightSegment = LibC::GUID.new(0x3050f690_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHighlightSegment
    lpVtbl : IHighlightSegmentVTbl*
  end

  struct IHighlightRenderingServicesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_segment : UInt64
    move_segment_to_pointers : UInt64
    remove_segment : UInt64
  end

  IHighlightRenderingServices_GUID = "3050f606-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHighlightRenderingServices = LibC::GUID.new(0x3050f606_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHighlightRenderingServices
    lpVtbl : IHighlightRenderingServicesVTbl*
  end

  struct ILineInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_x : UInt64
    get_base_line : UInt64
    get_text_descent : UInt64
    get_text_height : UInt64
    get_line_direction : UInt64
  end

  ILineInfo_GUID = "3050f7e2-98b5-11cf-bb82-00aa00bdce0b"
  IID_ILineInfo = LibC::GUID.new(0x3050f7e2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ILineInfo
    lpVtbl : ILineInfoVTbl*
  end

  struct IDisplayPointerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    move_to_point : UInt64
    move_unit : UInt64
    position_markup_pointer : UInt64
    move_to_pointer : UInt64
    set_pointer_gravity : UInt64
    get_pointer_gravity : UInt64
    set_display_gravity : UInt64
    get_display_gravity : UInt64
    is_positioned : UInt64
    unposition : UInt64
    is_equal_to : UInt64
    is_left_of : UInt64
    is_right_of : UInt64
    is_at_bol : UInt64
    move_to_markup_pointer : UInt64
    scroll_into_view : UInt64
    get_line_info : UInt64
    get_flow_element : UInt64
    query_breaks : UInt64
  end

  IDisplayPointer_GUID = "3050f69e-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDisplayPointer = LibC::GUID.new(0x3050f69e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDisplayPointer
    lpVtbl : IDisplayPointerVTbl*
  end

  struct IDisplayServicesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_display_pointer : UInt64
    transform_rect : UInt64
    transform_point : UInt64
    get_caret : UInt64
    get_computed_style : UInt64
    scroll_rect_into_view : UInt64
    has_flow_layout : UInt64
  end

  IDisplayServices_GUID = "3050f69d-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDisplayServices = LibC::GUID.new(0x3050f69d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDisplayServices
    lpVtbl : IDisplayServicesVTbl*
  end

  struct IHtmlDlgSafeHelperVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    choosecolordlg : UInt64
    get_charset : UInt64
    get_fonts : UInt64
    get_block_formats : UInt64
  end

  IHtmlDlgSafeHelper_GUID = "3050f81a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHtmlDlgSafeHelper = LibC::GUID.new(0x3050f81a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHtmlDlgSafeHelper
    lpVtbl : IHtmlDlgSafeHelperVTbl*
  end

  struct IBlockFormatsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get__new_enum : UInt64
    get_count : UInt64
    item : UInt64
  end

  IBlockFormats_GUID = "3050f830-98b5-11cf-bb82-00aa00bdce0b"
  IID_IBlockFormats = LibC::GUID.new(0x3050f830_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IBlockFormats
    lpVtbl : IBlockFormatsVTbl*
  end

  struct IFontNamesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get__new_enum : UInt64
    get_count : UInt64
    item : UInt64
  end

  IFontNames_GUID = "3050f839-98b5-11cf-bb82-00aa00bdce0b"
  IID_IFontNames = LibC::GUID.new(0x3050f839_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IFontNames
    lpVtbl : IFontNamesVTbl*
  end

  struct ICSSFilterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_site : UInt64
    on_ambient_property_change : UInt64
  end

  ICSSFilter_GUID = "3050f3ec-98b5-11cf-bb82-00aa00bdce0b"
  IID_ICSSFilter = LibC::GUID.new(0x3050f3ec_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ICSSFilter
    lpVtbl : ICSSFilterVTbl*
  end

  struct ISecureUrlHostVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    validate_secure_url : UInt64
  end

  ISecureUrlHost_GUID = "c81984c4-74c8-11d2-baa9-00c04fc2040e"
  IID_ISecureUrlHost = LibC::GUID.new(0xc81984c4_u32, 0x74c8_u16, 0x11d2_u16, StaticArray[0xba_u8, 0xa9_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc2_u8, 0x4_u8, 0xe_u8])
  struct ISecureUrlHost
    lpVtbl : ISecureUrlHostVTbl*
  end

  struct IMarkupServicesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_markup_pointer : UInt64
    create_markup_container : UInt64
    create_element : UInt64
    clone_element : UInt64
    insert_element : UInt64
    remove_element : UInt64
    remove : UInt64
    copy : UInt64
    move : UInt64
    insert_text : UInt64
    parse_string : UInt64
    parse_global : UInt64
    is_scoped_element : UInt64
    get_element_tag_id : UInt64
    get_tag_id_for_name : UInt64
    get_name_for_tag_id : UInt64
    move_pointers_to_range : UInt64
    move_range_to_pointers : UInt64
    begin_undo_unit : UInt64
    end_undo_unit : UInt64
  end

  IMarkupServices_GUID = "3050f4a0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IMarkupServices = LibC::GUID.new(0x3050f4a0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IMarkupServices
    lpVtbl : IMarkupServicesVTbl*
  end

  struct IMarkupServices2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_markup_pointer : UInt64
    create_markup_container : UInt64
    create_element : UInt64
    clone_element : UInt64
    insert_element : UInt64
    remove_element : UInt64
    remove : UInt64
    copy : UInt64
    move : UInt64
    insert_text : UInt64
    parse_string : UInt64
    parse_global : UInt64
    is_scoped_element : UInt64
    get_element_tag_id : UInt64
    get_tag_id_for_name : UInt64
    get_name_for_tag_id : UInt64
    move_pointers_to_range : UInt64
    move_range_to_pointers : UInt64
    begin_undo_unit : UInt64
    end_undo_unit : UInt64
    parse_global_ex : UInt64
    validate_elements : UInt64
    save_segments_to_clipboard : UInt64
  end

  IMarkupServices2_GUID = "3050f682-98b5-11cf-bb82-00aa00bdce0b"
  IID_IMarkupServices2 = LibC::GUID.new(0x3050f682_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IMarkupServices2
    lpVtbl : IMarkupServices2VTbl*
  end

  struct IHTMLChangePlaybackVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    exec_change : UInt64
  end

  IHTMLChangePlayback_GUID = "3050f6e0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLChangePlayback = LibC::GUID.new(0x3050f6e0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLChangePlayback
    lpVtbl : IHTMLChangePlaybackVTbl*
  end

  struct IMarkupPointer2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    owning_doc : UInt64
    gravity : UInt64
    set_gravity : UInt64
    cling : UInt64
    set_cling : UInt64
    unposition : UInt64
    is_positioned : UInt64
    get_container : UInt64
    move_adjacent_to_element : UInt64
    move_to_pointer : UInt64
    move_to_container : UInt64
    left : UInt64
    right : UInt64
    current_scope : UInt64
    is_left_of : UInt64
    is_left_of_or_equal_to : UInt64
    is_right_of : UInt64
    is_right_of_or_equal_to : UInt64
    is_equal_to : UInt64
    move_unit : UInt64
    find_text : UInt64
    is_at_word_break : UInt64
    get_markup_position : UInt64
    move_to_markup_position : UInt64
    move_unit_bounded : UInt64
    is_inside_url : UInt64
    move_to_content : UInt64
  end

  IMarkupPointer2_GUID = "3050f675-98b5-11cf-bb82-00aa00bdce0b"
  IID_IMarkupPointer2 = LibC::GUID.new(0x3050f675_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IMarkupPointer2
    lpVtbl : IMarkupPointer2VTbl*
  end

  struct IMarkupTextFragsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_text_frag_count : UInt64
    get_text_frag : UInt64
    remove_text_frag : UInt64
    insert_text_frag : UInt64
    find_text_frag_from_markup_pointer : UInt64
  end

  IMarkupTextFrags_GUID = "3050f5fa-98b5-11cf-bb82-00aa00bdce0b"
  IID_IMarkupTextFrags = LibC::GUID.new(0x3050f5fa_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IMarkupTextFrags
    lpVtbl : IMarkupTextFragsVTbl*
  end

  struct IXMLGenericParseVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_generic_parse : UInt64
  end

  IXMLGenericParse_GUID = "e4e23071-4d07-11d2-ae76-0080c73bc199"
  IID_IXMLGenericParse = LibC::GUID.new(0xe4e23071_u32, 0x4d07_u16, 0x11d2_u16, StaticArray[0xae_u8, 0x76_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0x3b_u8, 0xc1_u8, 0x99_u8])
  struct IXMLGenericParse
    lpVtbl : IXMLGenericParseVTbl*
  end

  struct IHTMLEditHostVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    snap_rect : UInt64
  end

  IHTMLEditHost_GUID = "3050f6a0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEditHost = LibC::GUID.new(0x3050f6a0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEditHost
    lpVtbl : IHTMLEditHostVTbl*
  end

  struct IHTMLEditHost2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    snap_rect : UInt64
    pre_drag : UInt64
  end

  IHTMLEditHost2_GUID = "3050f848-98b5-11cf-bb82-00aa00bdce0d"
  IID_IHTMLEditHost2 = LibC::GUID.new(0x3050f848_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xd_u8])
  struct IHTMLEditHost2
    lpVtbl : IHTMLEditHost2VTbl*
  end

  struct ISequenceNumberVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_sequence_number : UInt64
  end

  ISequenceNumber_GUID = "3050f6c1-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISequenceNumber = LibC::GUID.new(0x3050f6c1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISequenceNumber
    lpVtbl : ISequenceNumberVTbl*
  end

  struct IIMEServicesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_active_imm : UInt64
  end

  IIMEServices_GUID = "3050f6ca-98b5-11cf-bb82-00aa00bdce0b"
  IID_IIMEServices = LibC::GUID.new(0x3050f6ca_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IIMEServices
    lpVtbl : IIMEServicesVTbl*
  end

  struct ISelectionServicesListenerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    begin_selection_undo : UInt64
    end_selection_undo : UInt64
    on_selected_element_exit : UInt64
    on_change_type : UInt64
    get_type_detail : UInt64
  end

  ISelectionServicesListener_GUID = "3050f699-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISelectionServicesListener = LibC::GUID.new(0x3050f699_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISelectionServicesListener
    lpVtbl : ISelectionServicesListenerVTbl*
  end

  struct ISelectionServicesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_selection_type : UInt64
    get_markup_container : UInt64
    add_segment : UInt64
    add_element_segment : UInt64
    remove_segment : UInt64
    get_selection_services_listener : UInt64
  end

  ISelectionServices_GUID = "3050f684-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISelectionServices = LibC::GUID.new(0x3050f684_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISelectionServices
    lpVtbl : ISelectionServicesVTbl*
  end

  struct IHTMLEditDesignerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    pre_handle_event : UInt64
    post_handle_event : UInt64
    translate_accelerator : UInt64
    post_editor_event_notify : UInt64
  end

  IHTMLEditDesigner_GUID = "3050f662-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEditDesigner = LibC::GUID.new(0x3050f662_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEditDesigner
    lpVtbl : IHTMLEditDesignerVTbl*
  end

  struct IHTMLEditServicesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_designer : UInt64
    remove_designer : UInt64
    get_selection_services : UInt64
    move_to_selection_anchor : UInt64
    move_to_selection_end : UInt64
    select_range : UInt64
  end

  IHTMLEditServices_GUID = "3050f663-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEditServices = LibC::GUID.new(0x3050f663_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEditServices
    lpVtbl : IHTMLEditServicesVTbl*
  end

  struct IHTMLEditServices2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_designer : UInt64
    remove_designer : UInt64
    get_selection_services : UInt64
    move_to_selection_anchor : UInt64
    move_to_selection_end : UInt64
    select_range : UInt64
    move_to_selection_anchor_ex : UInt64
    move_to_selection_end_ex : UInt64
    freeze_virtual_caret_pos : UInt64
    un_freeze_virtual_caret_pos : UInt64
  end

  IHTMLEditServices2_GUID = "3050f812-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLEditServices2 = LibC::GUID.new(0x3050f812_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLEditServices2
    lpVtbl : IHTMLEditServices2VTbl*
  end

  struct IHTMLComputedStyleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_bold : UInt64
    get_italic : UInt64
    get_underline : UInt64
    get_overline : UInt64
    get_strike_out : UInt64
    get_sub_script : UInt64
    get_super_script : UInt64
    get_explicit_face : UInt64
    get_font_weight : UInt64
    get_font_size : UInt64
    get_font_name : UInt64
    get_has_bg_color : UInt64
    get_text_color : UInt64
    get_background_color : UInt64
    get_pre_formatted : UInt64
    get_direction : UInt64
    get_block_direction : UInt64
    get_ol : UInt64
    is_equal : UInt64
  end

  IHTMLComputedStyle_GUID = "3050f6c3-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLComputedStyle = LibC::GUID.new(0x3050f6c3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLComputedStyle
    lpVtbl : IHTMLComputedStyleVTbl*
  end

  struct IDeveloperConsoleMessageReceiverVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    write : UInt64
    write_with_url : UInt64
    write_with_url_and_line : UInt64
    write_with_url_line_and_column : UInt64
  end

  IDeveloperConsoleMessageReceiver_GUID = "30510808-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDeveloperConsoleMessageReceiver = LibC::GUID.new(0x30510808_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDeveloperConsoleMessageReceiver
    lpVtbl : IDeveloperConsoleMessageReceiverVTbl*
  end

  struct IScriptEventHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    function_name : UInt64
    debug_document_context : UInt64
    event_handler_dispatch : UInt64
    uses_capture : UInt64
    cookie : UInt64
  end

  IScriptEventHandler_GUID = "3051083a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IScriptEventHandler = LibC::GUID.new(0x3051083a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IScriptEventHandler
    lpVtbl : IScriptEventHandlerVTbl*
  end

  struct IDebugCallbackNotificationHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    requested_callback_types : UInt64
    before_dispatch_event : UInt64
    dispatch_event_complete : UInt64
    before_invoke_dom_callback : UInt64
    invoke_dom_callback_complete : UInt64
    before_invoke_callback : UInt64
    invoke_callback_complete : UInt64
  end

  IDebugCallbackNotificationHandler_GUID = "30510842-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDebugCallbackNotificationHandler = LibC::GUID.new(0x30510842_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDebugCallbackNotificationHandler
    lpVtbl : IDebugCallbackNotificationHandlerVTbl*
  end

  struct IScriptEventHandlerSourceInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_source_info : UInt64
  end

  IScriptEventHandlerSourceInfo_GUID = "30510841-98b5-11cf-bb82-00aa00bdce0b"
  IID_IScriptEventHandlerSourceInfo = LibC::GUID.new(0x30510841_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IScriptEventHandlerSourceInfo
    lpVtbl : IScriptEventHandlerSourceInfoVTbl*
  end

  struct IDOMEventRegistrationCallbackVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_dom_event_listener_added : UInt64
    on_dom_event_listener_removed : UInt64
  end

  IDOMEventRegistrationCallback_GUID = "3051083b-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDOMEventRegistrationCallback = LibC::GUID.new(0x3051083b_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDOMEventRegistrationCallback
    lpVtbl : IDOMEventRegistrationCallbackVTbl*
  end

  struct IEventTarget2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_registered_event_types : UInt64
    get_listeners_for_type : UInt64
    register_for_dom_event_listeners : UInt64
    unregister_for_dom_event_listeners : UInt64
  end

  IEventTarget2_GUID = "30510839-98b5-11cf-bb82-00aa00bdce0b"
  IID_IEventTarget2 = LibC::GUID.new(0x30510839_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IEventTarget2
    lpVtbl : IEventTarget2VTbl*
  end

  struct HTMLNamespaceEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  HTMLNamespaceEvents_GUID = "3050f6bd-98b5-11cf-bb82-00aa00bdce0b"
  IID_HTMLNamespaceEvents = LibC::GUID.new(0x3050f6bd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct HTMLNamespaceEvents
    lpVtbl : HTMLNamespaceEventsVTbl*
  end

  struct IHTMLNamespaceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_name : UInt64
    get_urn : UInt64
    get_tag_names : UInt64
    get_ready_state : UInt64
    put_onreadystatechange : UInt64
    get_onreadystatechange : UInt64
    do_import : UInt64
    attach_event : UInt64
    detach_event : UInt64
  end

  IHTMLNamespace_GUID = "3050f6bb-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLNamespace = LibC::GUID.new(0x3050f6bb_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLNamespace
    lpVtbl : IHTMLNamespaceVTbl*
  end

  struct IHTMLNamespaceCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    item : UInt64
    add : UInt64
  end

  IHTMLNamespaceCollection_GUID = "3050f6b8-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLNamespaceCollection = LibC::GUID.new(0x3050f6b8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLNamespaceCollection
    lpVtbl : IHTMLNamespaceCollectionVTbl*
  end

  struct DispHTMLNamespaceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLNamespace_GUID = "3050f54f-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLNamespace = LibC::GUID.new(0x3050f54f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLNamespace
    lpVtbl : DispHTMLNamespaceVTbl*
  end

  struct DispHTMLNamespaceCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLNamespaceCollection_GUID = "3050f550-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLNamespaceCollection = LibC::GUID.new(0x3050f550_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLNamespaceCollection
    lpVtbl : DispHTMLNamespaceCollectionVTbl*
  end

  struct IHTMLPainterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    draw : UInt64
    on_resize : UInt64
    get_painter_info : UInt64
    hit_test_point : UInt64
  end

  IHTMLPainter_GUID = "3050f6a6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPainter = LibC::GUID.new(0x3050f6a6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPainter
    lpVtbl : IHTMLPainterVTbl*
  end

  struct IHTMLPaintSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    invalidate_painter_info : UInt64
    invalidate_rect : UInt64
    invalidate_region : UInt64
    get_draw_info : UInt64
    transform_global_to_local : UInt64
    transform_local_to_global : UInt64
    get_hit_test_cookie : UInt64
  end

  IHTMLPaintSite_GUID = "3050f6a7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPaintSite = LibC::GUID.new(0x3050f6a7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPaintSite
    lpVtbl : IHTMLPaintSiteVTbl*
  end

  struct IHTMLPainterEventInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_event_info_flags : UInt64
    get_event_target : UInt64
    set_cursor : UInt64
    string_from_part_id : UInt64
  end

  IHTMLPainterEventInfo_GUID = "3050f6df-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPainterEventInfo = LibC::GUID.new(0x3050f6df_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPainterEventInfo
    lpVtbl : IHTMLPainterEventInfoVTbl*
  end

  struct IHTMLPainterOverlayVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_move : UInt64
  end

  IHTMLPainterOverlay_GUID = "3050f7e3-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPainterOverlay = LibC::GUID.new(0x3050f7e3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPainterOverlay
    lpVtbl : IHTMLPainterOverlayVTbl*
  end

  struct IHTMLIPrintCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_length : UInt64
    get__new_enum : UInt64
    item : UInt64
  end

  IHTMLIPrintCollection_GUID = "3050f6b5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLIPrintCollection = LibC::GUID.new(0x3050f6b5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLIPrintCollection
    lpVtbl : IHTMLIPrintCollectionVTbl*
  end

  struct IEnumPrivacyRecordsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    reset : UInt64
    get_size : UInt64
    get_privacy_impacted : UInt64
    next : UInt64
  end

  IEnumPrivacyRecords_GUID = "3050f844-98b5-11cf-bb82-00aa00bdce0b"
  IID_IEnumPrivacyRecords = LibC::GUID.new(0x3050f844_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IEnumPrivacyRecords
    lpVtbl : IEnumPrivacyRecordsVTbl*
  end

  struct IWPCBlockedUrlsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_count : UInt64
    get_url : UInt64
  end

  IWPCBlockedUrls_GUID = "30510413-98b5-11cf-bb82-00aa00bdce0b"
  IID_IWPCBlockedUrls = LibC::GUID.new(0x30510413_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IWPCBlockedUrls
    lpVtbl : IWPCBlockedUrlsVTbl*
  end

  struct IHTMLDOMConstructorCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_attr : UInt64
    get_behavior_urns_collection : UInt64
    get_bookmark_collection : UInt64
    get_compatible_info : UInt64
    get_compatible_info_collection : UInt64
    get_control_range_collection : UInt64
    get_css_current_style_declaration : UInt64
    get_css_rule_list : UInt64
    get_css_rule_style_declaration : UInt64
    get_css_style_declaration : UInt64
    get_css_style_rule : UInt64
    get_css_style_sheet : UInt64
    get_data_transfer : UInt64
    get_dom_implementation : UInt64
    get_element : UInt64
    get_event : UInt64
    get_history : UInt64
    get_htc_element_behavior_defaults : UInt64
    get_html_anchor_element : UInt64
    get_html_area_element : UInt64
    get_html_areas_collection : UInt64
    get_html_base_element : UInt64
    get_html_base_font_element : UInt64
    get_htmlbg_sound_element : UInt64
    get_html_block_element : UInt64
    get_html_body_element : UInt64
    get_htmlbr_element : UInt64
    get_html_button_element : UInt64
    get_html_collection : UInt64
    get_html_comment_element : UInt64
    get_htmldd_element : UInt64
    get_html_div_element : UInt64
    get_html_document : UInt64
    get_htmld_list_element : UInt64
    get_htmldt_element : UInt64
    get_html_embed_element : UInt64
    get_html_field_set_element : UInt64
    get_html_font_element : UInt64
    get_html_form_element : UInt64
    get_html_frame_element : UInt64
    get_html_frame_set_element : UInt64
    get_html_generic_element : UInt64
    get_html_head_element : UInt64
    get_html_heading_element : UInt64
    get_htmlhr_element : UInt64
    get_html_html_element : UInt64
    get_htmli_frame_element : UInt64
    get_html_image_element : UInt64
    get_html_input_element : UInt64
    get_html_is_index_element : UInt64
    get_html_label_element : UInt64
    get_html_legend_element : UInt64
    get_htmlli_element : UInt64
    get_html_link_element : UInt64
    get_html_map_element : UInt64
    get_html_marquee_element : UInt64
    get_html_meta_element : UInt64
    get_html_modeless_dialog : UInt64
    get_html_namespace_info : UInt64
    get_html_namespace_info_collection : UInt64
    get_html_next_id_element : UInt64
    get_html_no_show_element : UInt64
    get_html_object_element : UInt64
    get_htmlo_list_element : UInt64
    get_html_option_element : UInt64
    get_html_paragraph_element : UInt64
    get_html_param_element : UInt64
    get_html_phrase_element : UInt64
    get_html_plugins_collection : UInt64
    get_html_popup : UInt64
    get_html_script_element : UInt64
    get_html_select_element : UInt64
    get_html_span_element : UInt64
    get_html_style_element : UInt64
    get_html_table_caption_element : UInt64
    get_html_table_cell_element : UInt64
    get_html_table_col_element : UInt64
    get_html_table_element : UInt64
    get_html_table_row_element : UInt64
    get_html_table_section_element : UInt64
    get_html_text_area_element : UInt64
    get_html_text_element : UInt64
    get_html_title_element : UInt64
    get_htmlu_list_element : UInt64
    get_html_unknown_element : UInt64
    get_image : UInt64
    get_location : UInt64
    get_named_node_map : UInt64
    get_navigator : UInt64
    get_node_list : UInt64
    get_option : UInt64
    get_screen : UInt64
    get_selection : UInt64
    get_static_node_list : UInt64
    get_storage : UInt64
    get_style_sheet_list : UInt64
    get_style_sheet_page : UInt64
    get_style_sheet_page_list : UInt64
    get_text : UInt64
    get_text_range : UInt64
    get_text_range_collection : UInt64
    get_text_rectangle : UInt64
    get_text_rectangle_list : UInt64
    get_window : UInt64
    get_x_domain_request : UInt64
    get_xml_http_request : UInt64
  end

  IHTMLDOMConstructorCollection_GUID = "3051049c-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDOMConstructorCollection = LibC::GUID.new(0x3051049c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDOMConstructorCollection
    lpVtbl : IHTMLDOMConstructorCollectionVTbl*
  end

  struct IHTMLDialogVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_dialog_top : UInt64
    get_dialog_top : UInt64
    put_dialog_left : UInt64
    get_dialog_left : UInt64
    put_dialog_width : UInt64
    get_dialog_width : UInt64
    put_dialog_height : UInt64
    get_dialog_height : UInt64
    get_dialog_arguments : UInt64
    get_menu_arguments : UInt64
    put_return_value : UInt64
    get_return_value : UInt64
    close : UInt64
    to_string : UInt64
  end

  IHTMLDialog_GUID = "3050f216-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDialog = LibC::GUID.new(0x3050f216_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDialog
    lpVtbl : IHTMLDialogVTbl*
  end

  struct IHTMLDialog2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_status : UInt64
    get_status : UInt64
    put_resizable : UInt64
    get_resizable : UInt64
  end

  IHTMLDialog2_GUID = "3050f5e0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDialog2 = LibC::GUID.new(0x3050f5e0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDialog2
    lpVtbl : IHTMLDialog2VTbl*
  end

  struct IHTMLDialog3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_unadorned : UInt64
    get_unadorned : UInt64
    put_dialog_hide : UInt64
    get_dialog_hide : UInt64
  end

  IHTMLDialog3_GUID = "3050f388-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLDialog3 = LibC::GUID.new(0x3050f388_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLDialog3
    lpVtbl : IHTMLDialog3VTbl*
  end

  struct IHTMLModelessInitVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_parameters : UInt64
    get_option_string : UInt64
    get_moniker : UInt64
    get_document : UInt64
  end

  IHTMLModelessInit_GUID = "3050f5e4-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLModelessInit = LibC::GUID.new(0x3050f5e4_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLModelessInit
    lpVtbl : IHTMLModelessInitVTbl*
  end

  struct IHTMLPopupVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    show : UInt64
    hide : UInt64
    get_document : UInt64
    get_is_open : UInt64
  end

  IHTMLPopup_GUID = "3050f666-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPopup = LibC::GUID.new(0x3050f666_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPopup
    lpVtbl : IHTMLPopupVTbl*
  end

  struct DispHTMLPopupVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLPopup_GUID = "3050f589-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLPopup = LibC::GUID.new(0x3050f589_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLPopup
    lpVtbl : DispHTMLPopupVTbl*
  end

  struct IHTMLAppBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_application_name : UInt64
    get_application_name : UInt64
    put_version : UInt64
    get_version : UInt64
    put_icon : UInt64
    get_icon : UInt64
    put_single_instance : UInt64
    get_single_instance : UInt64
    put_minimize_button : UInt64
    get_minimize_button : UInt64
    put_maximize_button : UInt64
    get_maximize_button : UInt64
    put_border : UInt64
    get_border : UInt64
    put_border_style : UInt64
    get_border_style : UInt64
    put_sys_menu : UInt64
    get_sys_menu : UInt64
    put_caption : UInt64
    get_caption : UInt64
    put_window_state : UInt64
    get_window_state : UInt64
    put_show_in_task_bar : UInt64
    get_show_in_task_bar : UInt64
    get_command_line : UInt64
  end

  IHTMLAppBehavior_GUID = "3050f5ca-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAppBehavior = LibC::GUID.new(0x3050f5ca_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAppBehavior
    lpVtbl : IHTMLAppBehaviorVTbl*
  end

  struct IHTMLAppBehavior2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_context_menu : UInt64
    get_context_menu : UInt64
    put_inner_border : UInt64
    get_inner_border : UInt64
    put_scroll : UInt64
    get_scroll : UInt64
    put_scroll_flat : UInt64
    get_scroll_flat : UInt64
    put_selection : UInt64
    get_selection : UInt64
  end

  IHTMLAppBehavior2_GUID = "3050f5c9-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAppBehavior2 = LibC::GUID.new(0x3050f5c9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAppBehavior2
    lpVtbl : IHTMLAppBehavior2VTbl*
  end

  struct IHTMLAppBehavior3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_navigable : UInt64
    get_navigable : UInt64
  end

  IHTMLAppBehavior3_GUID = "3050f5cd-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLAppBehavior3 = LibC::GUID.new(0x3050f5cd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLAppBehavior3
    lpVtbl : IHTMLAppBehavior3VTbl*
  end

  struct DispHTMLAppBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispHTMLAppBehavior_GUID = "3050f57c-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispHTMLAppBehavior = LibC::GUID.new(0x3050f57c_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispHTMLAppBehavior
    lpVtbl : DispHTMLAppBehaviorVTbl*
  end

  struct DispIHTMLInputButtonElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispIHTMLInputButtonElement_GUID = "3050f51e-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispIHTMLInputButtonElement = LibC::GUID.new(0x3050f51e_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispIHTMLInputButtonElement
    lpVtbl : DispIHTMLInputButtonElementVTbl*
  end

  struct DispIHTMLInputTextElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispIHTMLInputTextElement_GUID = "3050f520-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispIHTMLInputTextElement = LibC::GUID.new(0x3050f520_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispIHTMLInputTextElement
    lpVtbl : DispIHTMLInputTextElementVTbl*
  end

  struct DispIHTMLInputFileElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispIHTMLInputFileElement_GUID = "3050f542-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispIHTMLInputFileElement = LibC::GUID.new(0x3050f542_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispIHTMLInputFileElement
    lpVtbl : DispIHTMLInputFileElementVTbl*
  end

  struct DispIHTMLOptionButtonElementVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispIHTMLOptionButtonElement_GUID = "3050f509-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispIHTMLOptionButtonElement = LibC::GUID.new(0x3050f509_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispIHTMLOptionButtonElement
    lpVtbl : DispIHTMLOptionButtonElementVTbl*
  end

  struct DispIHTMLInputImageVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DispIHTMLInputImage_GUID = "3050f51d-98b5-11cf-bb82-00aa00bdce0b"
  IID_DispIHTMLInputImage = LibC::GUID.new(0x3050f51d_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct DispIHTMLInputImage
    lpVtbl : DispIHTMLInputImageVTbl*
  end

  struct IElementNamespaceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_tag : UInt64
  end

  IElementNamespace_GUID = "3050f671-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementNamespace = LibC::GUID.new(0x3050f671_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementNamespace
    lpVtbl : IElementNamespaceVTbl*
  end

  struct IElementNamespaceTableVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_namespace : UInt64
  end

  IElementNamespaceTable_GUID = "3050f670-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementNamespaceTable = LibC::GUID.new(0x3050f670_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementNamespaceTable
    lpVtbl : IElementNamespaceTableVTbl*
  end

  struct IElementNamespaceFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create : UInt64
  end

  IElementNamespaceFactory_GUID = "3050f672-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementNamespaceFactory = LibC::GUID.new(0x3050f672_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementNamespaceFactory
    lpVtbl : IElementNamespaceFactoryVTbl*
  end

  struct IElementNamespaceFactory2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create : UInt64
    create_with_implementation : UInt64
  end

  IElementNamespaceFactory2_GUID = "3050f805-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementNamespaceFactory2 = LibC::GUID.new(0x3050f805_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementNamespaceFactory2
    lpVtbl : IElementNamespaceFactory2VTbl*
  end

  struct IElementNamespaceFactoryCallbackVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    resolve : UInt64
  end

  IElementNamespaceFactoryCallback_GUID = "3050f7fd-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementNamespaceFactoryCallback = LibC::GUID.new(0x3050f7fd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementNamespaceFactoryCallback
    lpVtbl : IElementNamespaceFactoryCallbackVTbl*
  end

  struct IElementBehaviorSiteOM2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    register_event : UInt64
    get_event_cookie : UInt64
    fire_event : UInt64
    create_event_object : UInt64
    register_name : UInt64
    register_urn : UInt64
    get_defaults : UInt64
  end

  IElementBehaviorSiteOM2_GUID = "3050f659-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorSiteOM2 = LibC::GUID.new(0x3050f659_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorSiteOM2
    lpVtbl : IElementBehaviorSiteOM2VTbl*
  end

  struct IElementBehaviorCategoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_category : UInt64
  end

  IElementBehaviorCategory_GUID = "3050f4ed-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorCategory = LibC::GUID.new(0x3050f4ed_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorCategory
    lpVtbl : IElementBehaviorCategoryVTbl*
  end

  struct IElementBehaviorSiteCategoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_related_behaviors : UInt64
  end

  IElementBehaviorSiteCategory_GUID = "3050f4ee-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorSiteCategory = LibC::GUID.new(0x3050f4ee_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorSiteCategory
    lpVtbl : IElementBehaviorSiteCategoryVTbl*
  end

  struct IElementBehaviorSubmitVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_submit_info : UInt64
    reset : UInt64
  end

  IElementBehaviorSubmit_GUID = "3050f646-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorSubmit = LibC::GUID.new(0x3050f646_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorSubmit
    lpVtbl : IElementBehaviorSubmitVTbl*
  end

  struct IElementBehaviorFocusVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_focus_rect : UInt64
  end

  IElementBehaviorFocus_GUID = "3050f6b6-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorFocus = LibC::GUID.new(0x3050f6b6_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorFocus
    lpVtbl : IElementBehaviorFocusVTbl*
  end

  struct IElementBehaviorLayoutVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_size : UInt64
    get_layout_info : UInt64
    get_position : UInt64
    map_size : UInt64
  end

  IElementBehaviorLayout_GUID = "3050f6ba-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorLayout = LibC::GUID.new(0x3050f6ba_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorLayout
    lpVtbl : IElementBehaviorLayoutVTbl*
  end

  struct IElementBehaviorLayout2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_text_descent : UInt64
  end

  IElementBehaviorLayout2_GUID = "3050f846-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorLayout2 = LibC::GUID.new(0x3050f846_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorLayout2
    lpVtbl : IElementBehaviorLayout2VTbl*
  end

  struct IElementBehaviorSiteLayoutVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    invalidate_layout_info : UInt64
    invalidate_size : UInt64
    get_media_resolution : UInt64
  end

  IElementBehaviorSiteLayout_GUID = "3050f6b7-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorSiteLayout = LibC::GUID.new(0x3050f6b7_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorSiteLayout
    lpVtbl : IElementBehaviorSiteLayoutVTbl*
  end

  struct IElementBehaviorSiteLayout2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_font_info : UInt64
  end

  IElementBehaviorSiteLayout2_GUID = "3050f847-98b5-11cf-bb82-00aa00bdce0b"
  IID_IElementBehaviorSiteLayout2 = LibC::GUID.new(0x3050f847_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IElementBehaviorSiteLayout2
    lpVtbl : IElementBehaviorSiteLayout2VTbl*
  end

  struct IHostBehaviorInitVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    populate_namespace_table : UInt64
  end

  IHostBehaviorInit_GUID = "3050f842-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHostBehaviorInit = LibC::GUID.new(0x3050f842_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHostBehaviorInit
    lpVtbl : IHostBehaviorInitVTbl*
  end

  struct ISurfacePresenterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    present : UInt64
    get_buffer : UInt64
    is_current : UInt64
  end

  ISurfacePresenter_GUID = "305106e2-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISurfacePresenter = LibC::GUID.new(0x305106e2_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISurfacePresenter
    lpVtbl : ISurfacePresenterVTbl*
  end

  struct IViewObjectPresentSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_surface_presenter : UInt64
    is_hardware_composition : UInt64
    set_composition_mode : UInt64
  end

  IViewObjectPresentSite_GUID = "305106e1-98b5-11cf-bb82-00aa00bdce0b"
  IID_IViewObjectPresentSite = LibC::GUID.new(0x305106e1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IViewObjectPresentSite
    lpVtbl : IViewObjectPresentSiteVTbl*
  end

  struct ICanvasPixelArrayDataVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_buffer_pointer : UInt64
  end

  ICanvasPixelArrayData_GUID = "305107f9-98b5-11cf-bb82-00aa00bdce0b"
  IID_ICanvasPixelArrayData = LibC::GUID.new(0x305107f9_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ICanvasPixelArrayData
    lpVtbl : ICanvasPixelArrayDataVTbl*
  end

  struct IViewObjectPrintVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_print_bitmap : UInt64
  end

  IViewObjectPrint_GUID = "305106e3-98b5-11cf-bb82-00aa00bdce0b"
  IID_IViewObjectPrint = LibC::GUID.new(0x305106e3_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IViewObjectPrint
    lpVtbl : IViewObjectPrintVTbl*
  end

  struct IViewObjectPresentNotifySiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_surface_presenter : UInt64
    is_hardware_composition : UInt64
    set_composition_mode : UInt64
    request_frame : UInt64
  end

  IViewObjectPresentNotifySite_GUID = "305107fa-98b5-11cf-bb82-00aa00bdce0b"
  IID_IViewObjectPresentNotifySite = LibC::GUID.new(0x305107fa_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IViewObjectPresentNotifySite
    lpVtbl : IViewObjectPresentNotifySiteVTbl*
  end

  struct IViewObjectPresentNotifyVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_pre_render : UInt64
  end

  IViewObjectPresentNotify_GUID = "305107f8-98b5-11cf-bb82-00aa00bdce0b"
  IID_IViewObjectPresentNotify = LibC::GUID.new(0x305107f8_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IViewObjectPresentNotify
    lpVtbl : IViewObjectPresentNotifyVTbl*
  end

  struct ITrackingProtectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    evaluate_url : UInt64
    get_enabled : UInt64
  end

  ITrackingProtection_GUID = "30510803-98b5-11cf-bb82-00aa00bdce0b"
  IID_ITrackingProtection = LibC::GUID.new(0x30510803_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ITrackingProtection
    lpVtbl : ITrackingProtectionVTbl*
  end

  struct IBFCacheableVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    enter_bf_cache : UInt64
    exit_bf_cache : UInt64
  end

  IBFCacheable_GUID = "30510861-98b5-11cf-bb82-00aa00bdce0b"
  IID_IBFCacheable = LibC::GUID.new(0x30510861_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IBFCacheable
    lpVtbl : IBFCacheableVTbl*
  end

  struct IDocObjectServiceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    fire_before_navigate2 : UInt64
    fire_navigate_complete2 : UInt64
    fire_download_begin : UInt64
    fire_download_complete : UInt64
    fire_document_complete : UInt64
    update_desktop_component : UInt64
    get_pending_url : UInt64
    active_element_changed : UInt64
    get_url_search_component : UInt64
    is_error_url : UInt64
  end

  IDocObjectService_GUID = "3050f801-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDocObjectService = LibC::GUID.new(0x3050f801_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDocObjectService
    lpVtbl : IDocObjectServiceVTbl*
  end

  struct IDownloadManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    download : UInt64
  end

  IDownloadManager_GUID = "988934a4-064b-11d3-bb80-00104b35e7f9"
  IID_IDownloadManager = LibC::GUID.new(0x988934a4_u32, 0x64b_u16, 0x11d3_u16, StaticArray[0xbb_u8, 0x80_u8, 0x0_u8, 0x10_u8, 0x4b_u8, 0x35_u8, 0xe7_u8, 0xf9_u8])
  struct IDownloadManager
    lpVtbl : IDownloadManagerVTbl*
  end

  struct IExtensionValidationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    validate : UInt64
    display_name : UInt64
  end

  IExtensionValidation_GUID = "7d33f73d-8525-4e0f-87db-830288baff44"
  IID_IExtensionValidation = LibC::GUID.new(0x7d33f73d_u32, 0x8525_u16, 0x4e0f_u16, StaticArray[0x87_u8, 0xdb_u8, 0x83_u8, 0x2_u8, 0x88_u8, 0xba_u8, 0xff_u8, 0x44_u8])
  struct IExtensionValidation
    lpVtbl : IExtensionValidationVTbl*
  end

  struct IHomePageSettingVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_home_page : UInt64
    is_home_page : UInt64
    set_home_page_to_browser_default : UInt64
  end

  IHomePageSetting_GUID = "fdfc244f-18fa-4ff2-b08e-1d618f3ffbe4"
  IID_IHomePageSetting = LibC::GUID.new(0xfdfc244f_u32, 0x18fa_u16, 0x4ff2_u16, StaticArray[0xb0_u8, 0x8e_u8, 0x1d_u8, 0x61_u8, 0x8f_u8, 0x3f_u8, 0xfb_u8, 0xe4_u8])
  struct IHomePageSetting
    lpVtbl : IHomePageSettingVTbl*
  end

  struct ITargetNotifyVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_create : UInt64
    on_reuse : UInt64
  end

  ITargetNotify_GUID = "863a99a0-21bc-11d0-82b4-00a0c90c29c5"
  IID_ITargetNotify = LibC::GUID.new(0x863a99a0_u32, 0x21bc_u16, 0x11d0_u16, StaticArray[0x82_u8, 0xb4_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xc_u8, 0x29_u8, 0xc5_u8])
  struct ITargetNotify
    lpVtbl : ITargetNotifyVTbl*
  end

  struct ITargetNotify2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_create : UInt64
    on_reuse : UInt64
    get_option_string : UInt64
  end

  ITargetNotify2_GUID = "3050f6b1-98b5-11cf-bb82-00aa00bdce0b"
  IID_ITargetNotify2 = LibC::GUID.new(0x3050f6b1_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ITargetNotify2
    lpVtbl : ITargetNotify2VTbl*
  end

  struct ITargetFrame2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_frame_name : UInt64
    get_frame_name : UInt64
    get_parent_frame : UInt64
    set_frame_src : UInt64
    get_frame_src : UInt64
    get_frames_container : UInt64
    set_frame_options : UInt64
    get_frame_options : UInt64
    set_frame_margins : UInt64
    get_frame_margins : UInt64
    find_frame : UInt64
    get_target_alias : UInt64
  end

  ITargetFrame2_GUID = "86d52e11-94a8-11d0-82af-00c04fd5ae38"
  IID_ITargetFrame2 = LibC::GUID.new(0x86d52e11_u32, 0x94a8_u16, 0x11d0_u16, StaticArray[0x82_u8, 0xaf_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd5_u8, 0xae_u8, 0x38_u8])
  struct ITargetFrame2
    lpVtbl : ITargetFrame2VTbl*
  end

  struct ITargetContainerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_frame_url : UInt64
    get_frames_container : UInt64
  end

  ITargetContainer_GUID = "7847ec01-2bec-11d0-82b4-00a0c90c29c5"
  IID_ITargetContainer = LibC::GUID.new(0x7847ec01_u32, 0x2bec_u16, 0x11d0_u16, StaticArray[0x82_u8, 0xb4_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xc_u8, 0x29_u8, 0xc5_u8])
  struct ITargetContainer
    lpVtbl : ITargetContainerVTbl*
  end

  struct ITargetFrameVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_frame_name : UInt64
    get_frame_name : UInt64
    get_parent_frame : UInt64
    find_frame : UInt64
    set_frame_src : UInt64
    get_frame_src : UInt64
    get_frames_container : UInt64
    set_frame_options : UInt64
    get_frame_options : UInt64
    set_frame_margins : UInt64
    get_frame_margins : UInt64
    remote_navigate : UInt64
    on_child_frame_activate : UInt64
    on_child_frame_deactivate : UInt64
  end

  ITargetFrame_GUID = "d5f78c80-5252-11cf-90fa-00aa0042106e"
  IID_ITargetFrame = LibC::GUID.new(0xd5f78c80_u32, 0x5252_u16, 0x11cf_u16, StaticArray[0x90_u8, 0xfa_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x42_u8, 0x10_u8, 0x6e_u8])
  struct ITargetFrame
    lpVtbl : ITargetFrameVTbl*
  end

  struct ITargetEmbeddingVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_target_frame : UInt64
  end

  ITargetEmbedding_GUID = "548793c0-9e74-11cf-9655-00a0c9034923"
  IID_ITargetEmbedding = LibC::GUID.new(0x548793c0_u32, 0x9e74_u16, 0x11cf_u16, StaticArray[0x96_u8, 0x55_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x3_u8, 0x49_u8, 0x23_u8])
  struct ITargetEmbedding
    lpVtbl : ITargetEmbeddingVTbl*
  end

  struct ITargetFramePrivVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    find_frame_downwards : UInt64
    find_frame_in_context : UInt64
    on_child_frame_activate : UInt64
    on_child_frame_deactivate : UInt64
    navigate_hack : UInt64
    find_browser_by_index : UInt64
  end

  ITargetFramePriv_GUID = "9216e421-2bf5-11d0-82b4-00a0c90c29c5"
  IID_ITargetFramePriv = LibC::GUID.new(0x9216e421_u32, 0x2bf5_u16, 0x11d0_u16, StaticArray[0x82_u8, 0xb4_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xc_u8, 0x29_u8, 0xc5_u8])
  struct ITargetFramePriv
    lpVtbl : ITargetFramePrivVTbl*
  end

  struct ITargetFramePriv2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    find_frame_downwards : UInt64
    find_frame_in_context : UInt64
    on_child_frame_activate : UInt64
    on_child_frame_deactivate : UInt64
    navigate_hack : UInt64
    find_browser_by_index : UInt64
    aggregated_navigation2 : UInt64
  end

  ITargetFramePriv2_GUID = "b2c867e6-69d6-46f2-a611-ded9a4bd7fef"
  IID_ITargetFramePriv2 = LibC::GUID.new(0xb2c867e6_u32, 0x69d6_u16, 0x46f2_u16, StaticArray[0xa6_u8, 0x11_u8, 0xde_u8, 0xd9_u8, 0xa4_u8, 0xbd_u8, 0x7f_u8, 0xef_u8])
  struct ITargetFramePriv2
    lpVtbl : ITargetFramePriv2VTbl*
  end

  struct ISurfacePresenterFlipBufferVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    begin_draw : UInt64
    end_draw : UInt64
  end

  ISurfacePresenterFlipBuffer_GUID = "e43f4a08-8bbc-4665-ac92-c55ce61fd7e7"
  IID_ISurfacePresenterFlipBuffer = LibC::GUID.new(0xe43f4a08_u32, 0x8bbc_u16, 0x4665_u16, StaticArray[0xac_u8, 0x92_u8, 0xc5_u8, 0x5c_u8, 0xe6_u8, 0x1f_u8, 0xd7_u8, 0xe7_u8])
  struct ISurfacePresenterFlipBuffer
    lpVtbl : ISurfacePresenterFlipBufferVTbl*
  end

  struct ISurfacePresenterFlipVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    present : UInt64
    get_buffer : UInt64
  end

  ISurfacePresenterFlip_GUID = "30510848-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISurfacePresenterFlip = LibC::GUID.new(0x30510848_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISurfacePresenterFlip
    lpVtbl : ISurfacePresenterFlipVTbl*
  end

  struct ISurfacePresenterFlip2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_rotation : UInt64
  end

  ISurfacePresenterFlip2_GUID = "30510865-98b5-11cf-bb82-00aa00bdce0b"
  IID_ISurfacePresenterFlip2 = LibC::GUID.new(0x30510865_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ISurfacePresenterFlip2
    lpVtbl : ISurfacePresenterFlip2VTbl*
  end

  struct IViewObjectPresentFlipSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_surface_presenter_flip : UInt64
    get_device_luid : UInt64
    enter_full_screen : UInt64
    exit_full_screen : UInt64
    is_full_screen : UInt64
    get_bounding_rect : UInt64
    get_metrics : UInt64
    get_full_screen_size : UInt64
  end

  IViewObjectPresentFlipSite_GUID = "30510846-98b5-11cf-bb82-00aa00bdce0b"
  IID_IViewObjectPresentFlipSite = LibC::GUID.new(0x30510846_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IViewObjectPresentFlipSite
    lpVtbl : IViewObjectPresentFlipSiteVTbl*
  end

  struct IViewObjectPresentFlipSite2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_rotation_for_current_output : UInt64
  end

  IViewObjectPresentFlipSite2_GUID = "aad0cbf1-e7fd-4f12-8902-c78132a8e01d"
  IID_IViewObjectPresentFlipSite2 = LibC::GUID.new(0xaad0cbf1_u32, 0xe7fd_u16, 0x4f12_u16, StaticArray[0x89_u8, 0x2_u8, 0xc7_u8, 0x81_u8, 0x32_u8, 0xa8_u8, 0xe0_u8, 0x1d_u8])
  struct IViewObjectPresentFlipSite2
    lpVtbl : IViewObjectPresentFlipSite2VTbl*
  end

  struct IViewObjectPresentFlipVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    notify_render : UInt64
    render_object_to_bitmap : UInt64
    render_object_to_shared_buffer : UInt64
  end

  IViewObjectPresentFlip_GUID = "30510847-98b5-11cf-bb82-00aa00bdce0b"
  IID_IViewObjectPresentFlip = LibC::GUID.new(0x30510847_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IViewObjectPresentFlip
    lpVtbl : IViewObjectPresentFlipVTbl*
  end

  struct IViewObjectPresentFlip2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    notify_leaving_view : UInt64
  end

  IViewObjectPresentFlip2_GUID = "30510856-98b5-11cf-bb82-00aa00bdce0b"
  IID_IViewObjectPresentFlip2 = LibC::GUID.new(0x30510856_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IViewObjectPresentFlip2
    lpVtbl : IViewObjectPresentFlip2VTbl*
  end

  struct IActiveXUIHandlerSite2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_suspension_exemption : UInt64
    remove_suspension_exemption : UInt64
  end

  IActiveXUIHandlerSite2_GUID = "7e3707b2-d087-4542-ac1f-a0d2fcd080fd"
  IID_IActiveXUIHandlerSite2 = LibC::GUID.new(0x7e3707b2_u32, 0xd087_u16, 0x4542_u16, StaticArray[0xac_u8, 0x1f_u8, 0xa0_u8, 0xd2_u8, 0xfc_u8, 0xd0_u8, 0x80_u8, 0xfd_u8])
  struct IActiveXUIHandlerSite2
    lpVtbl : IActiveXUIHandlerSite2VTbl*
  end

  struct ICaretPositionProviderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_caret_position : UInt64
  end

  ICaretPositionProvider_GUID = "58da43a2-108e-4d5b-9f75-e5f74f93fff5"
  IID_ICaretPositionProvider = LibC::GUID.new(0x58da43a2_u32, 0x108e_u16, 0x4d5b_u16, StaticArray[0x9f_u8, 0x75_u8, 0xe5_u8, 0xf7_u8, 0x4f_u8, 0x93_u8, 0xff_u8, 0xf5_u8])
  struct ICaretPositionProvider
    lpVtbl : ICaretPositionProviderVTbl*
  end

  struct ITridentTouchInputVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_pointer_message : UInt64
  end

  ITridentTouchInput_GUID = "30510850-98b5-11cf-bb82-00aa00bdce0b"
  IID_ITridentTouchInput = LibC::GUID.new(0x30510850_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ITridentTouchInput
    lpVtbl : ITridentTouchInputVTbl*
  end

  struct ITridentTouchInputSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_manipulation_mode : UInt64
    zoom_to_point : UInt64
  end

  ITridentTouchInputSite_GUID = "30510849-98b5-11cf-bb82-00aa00bdce0b"
  IID_ITridentTouchInputSite = LibC::GUID.new(0x30510849_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ITridentTouchInputSite
    lpVtbl : ITridentTouchInputSiteVTbl*
  end

  struct IMediaActivityNotifySiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_media_activity_started : UInt64
    on_media_activity_stopped : UInt64
  end

  IMediaActivityNotifySite_GUID = "8165cfef-179d-46c2-bc71-3fa726dc1f8d"
  IID_IMediaActivityNotifySite = LibC::GUID.new(0x8165cfef_u32, 0x179d_u16, 0x46c2_u16, StaticArray[0xbc_u8, 0x71_u8, 0x3f_u8, 0xa7_u8, 0x26_u8, 0xdc_u8, 0x1f_u8, 0x8d_u8])
  struct IMediaActivityNotifySite
    lpVtbl : IMediaActivityNotifySiteVTbl*
  end

  struct IAudioSessionSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_audio_session_guid : UInt64
    on_audio_stream_created : UInt64
    on_audio_stream_destroyed : UInt64
  end

  IAudioSessionSite_GUID = "d7d8b684-d02d-4517-b6b7-19e3dfe29c45"
  IID_IAudioSessionSite = LibC::GUID.new(0xd7d8b684_u32, 0xd02d_u16, 0x4517_u16, StaticArray[0xb6_u8, 0xb7_u8, 0x19_u8, 0xe3_u8, 0xdf_u8, 0xe2_u8, 0x9c_u8, 0x45_u8])
  struct IAudioSessionSite
    lpVtbl : IAudioSessionSiteVTbl*
  end

  struct IPrintTaskRequestHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    handle_print_task_request : UInt64
  end

  IPrintTaskRequestHandler_GUID = "191cd340-cf36-44ff-bd53-d1b701799d9b"
  IID_IPrintTaskRequestHandler = LibC::GUID.new(0x191cd340_u32, 0xcf36_u16, 0x44ff_u16, StaticArray[0xbd_u8, 0x53_u8, 0xd1_u8, 0xb7_u8, 0x1_u8, 0x79_u8, 0x9d_u8, 0x9b_u8])
  struct IPrintTaskRequestHandler
    lpVtbl : IPrintTaskRequestHandlerVTbl*
  end

  struct IPrintTaskRequestFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_print_task_request : UInt64
  end

  IPrintTaskRequestFactory_GUID = "bb516745-8c34-4f8b-9605-684dcb144be5"
  IID_IPrintTaskRequestFactory = LibC::GUID.new(0xbb516745_u32, 0x8c34_u16, 0x4f8b_u16, StaticArray[0x96_u8, 0x5_u8, 0x68_u8, 0x4d_u8, 0xcb_u8, 0x14_u8, 0x4b_u8, 0xe5_u8])
  struct IPrintTaskRequestFactory
    lpVtbl : IPrintTaskRequestFactoryVTbl*
  end

  struct IScrollableContextMenuVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_item : UInt64
    show_modal : UInt64
  end

  IScrollableContextMenu_GUID = "30510854-98b5-11cf-bb82-00aa00bdce0b"
  IID_IScrollableContextMenu = LibC::GUID.new(0x30510854_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IScrollableContextMenu
    lpVtbl : IScrollableContextMenuVTbl*
  end

  struct IScrollableContextMenu2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_item : UInt64
    show_modal : UInt64
    add_separator : UInt64
    set_placement : UInt64
  end

  IScrollableContextMenu2_GUID = "f77e9056-8674-4936-924c-0e4a06fa634a"
  IID_IScrollableContextMenu2 = LibC::GUID.new(0xf77e9056_u32, 0x8674_u16, 0x4936_u16, StaticArray[0x92_u8, 0x4c_u8, 0xe_u8, 0x4a_u8, 0x6_u8, 0xfa_u8, 0x63_u8, 0x4a_u8])
  struct IScrollableContextMenu2
    lpVtbl : IScrollableContextMenu2VTbl*
  end

  struct IActiveXUIHandlerSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_scrollable_context_menu : UInt64
    pick_file_and_get_result : UInt64
  end

  IActiveXUIHandlerSite_GUID = "30510853-98b5-11cf-bb82-00aa00bdce0b"
  IID_IActiveXUIHandlerSite = LibC::GUID.new(0x30510853_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IActiveXUIHandlerSite
    lpVtbl : IActiveXUIHandlerSiteVTbl*
  end

  struct IActiveXUIHandlerSite3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    message_box_w : UInt64
  end

  IActiveXUIHandlerSite3_GUID = "7904009a-1238-47f4-901c-871375c34608"
  IID_IActiveXUIHandlerSite3 = LibC::GUID.new(0x7904009a_u32, 0x1238_u16, 0x47f4_u16, StaticArray[0x90_u8, 0x1c_u8, 0x87_u8, 0x13_u8, 0x75_u8, 0xc3_u8, 0x46_u8, 0x8_u8])
  struct IActiveXUIHandlerSite3
    lpVtbl : IActiveXUIHandlerSite3VTbl*
  end

  struct IEnumManagerFramesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    count : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumManagerFrames_GUID = "3caa826a-9b1f-4a79-bc81-f0430ded1648"
  IID_IEnumManagerFrames = LibC::GUID.new(0x3caa826a_u32, 0x9b1f_u16, 0x4a79_u16, StaticArray[0xbc_u8, 0x81_u8, 0xf0_u8, 0x43_u8, 0xd_u8, 0xed_u8, 0x16_u8, 0x48_u8])
  struct IEnumManagerFrames
    lpVtbl : IEnumManagerFramesVTbl*
  end

  struct IInternetExplorerManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_object : UInt64
  end

  IInternetExplorerManager_GUID = "acc84351-04ff-44f9-b23f-655ed168c6d5"
  IID_IInternetExplorerManager = LibC::GUID.new(0xacc84351_u32, 0x4ff_u16, 0x44f9_u16, StaticArray[0xb2_u8, 0x3f_u8, 0x65_u8, 0x5e_u8, 0xd1_u8, 0x68_u8, 0xc6_u8, 0xd5_u8])
  struct IInternetExplorerManager
    lpVtbl : IInternetExplorerManagerVTbl*
  end

  struct IInternetExplorerManager2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    enum_frame_windows : UInt64
  end

  IInternetExplorerManager2_GUID = "dfbb5136-9259-4895-b4a7-c1934429919a"
  IID_IInternetExplorerManager2 = LibC::GUID.new(0xdfbb5136_u32, 0x9259_u16, 0x4895_u16, StaticArray[0xb4_u8, 0xa7_u8, 0xc1_u8, 0x93_u8, 0x44_u8, 0x29_u8, 0x91_u8, 0x9a_u8])
  struct IInternetExplorerManager2
    lpVtbl : IInternetExplorerManager2VTbl*
  end

  struct IIEWebDriverSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    window_operation : UInt64
    detach_webdriver : UInt64
    get_capability_value : UInt64
  end

  IIEWebDriverSite_GUID = "ffb84444-453d-4fbc-9f9d-8db5c471ec75"
  IID_IIEWebDriverSite = LibC::GUID.new(0xffb84444_u32, 0x453d_u16, 0x4fbc_u16, StaticArray[0x9f_u8, 0x9d_u8, 0x8d_u8, 0xb5_u8, 0xc4_u8, 0x71_u8, 0xec_u8, 0x75_u8])
  struct IIEWebDriverSite
    lpVtbl : IIEWebDriverSiteVTbl*
  end

  struct IIEWebDriverManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    execute_command : UInt64
  end

  IIEWebDriverManager_GUID = "bd1dc630-6590-4ca2-a293-6bc72b2438d8"
  IID_IIEWebDriverManager = LibC::GUID.new(0xbd1dc630_u32, 0x6590_u16, 0x4ca2_u16, StaticArray[0xa2_u8, 0x93_u8, 0x6b_u8, 0xc7_u8, 0x2b_u8, 0x24_u8, 0x38_u8, 0xd8_u8])
  struct IIEWebDriverManager
    lpVtbl : IIEWebDriverManagerVTbl*
  end

  struct IPeerFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
  end

  IPeerFactory_GUID = "6663f9d3-b482-11d1-89c6-00c04fb6bfc4"
  IID_IPeerFactory = LibC::GUID.new(0x6663f9d3_u32, 0xb482_u16, 0x11d1_u16, StaticArray[0x89_u8, 0xc6_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0xbf_u8, 0xc4_u8])
  struct IPeerFactory
    lpVtbl : IPeerFactoryVTbl*
  end

  struct IHomePageVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    navigate_home_page : UInt64
    set_home_page : UInt64
    is_home_page : UInt64
  end

  IHomePage_GUID = "766bf2af-d650-11d1-9811-00c04fc31d2e"
  IID_IHomePage = LibC::GUID.new(0x766bf2af_u32, 0xd650_u16, 0x11d1_u16, StaticArray[0x98_u8, 0x11_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x1d_u8, 0x2e_u8])
  struct IHomePage
    lpVtbl : IHomePageVTbl*
  end

  struct IIntelliFormsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_enabled : UInt64
    put_enabled : UInt64
  end

  IIntelliForms_GUID = "9b9f68e6-1aaa-11d2-bca5-00c04fd929db"
  IID_IIntelliForms = LibC::GUID.new(0x9b9f68e6_u32, 0x1aaa_u16, 0x11d2_u16, StaticArray[0xbc_u8, 0xa5_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x29_u8, 0xdb_u8])
  struct IIntelliForms
    lpVtbl : IIntelliFormsVTbl*
  end

  struct IwfoldersVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    navigate : UInt64
    navigate_frame : UInt64
    navigate_no_site : UInt64
  end

  Iwfolders_GUID = "bae31f98-1b81-11d2-a97a-00c04f8ecb02"
  IID_Iwfolders = LibC::GUID.new(0xbae31f98_u32, 0x1b81_u16, 0x11d2_u16, StaticArray[0xa9_u8, 0x7a_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xcb_u8, 0x2_u8])
  struct Iwfolders
    lpVtbl : IwfoldersVTbl*
  end

  struct IAnchorClickVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    proc_on_click : UInt64
  end

  IAnchorClick_GUID = "13d5413b-33b9-11d2-95a7-00c04f8ecb02"
  IID_IAnchorClick = LibC::GUID.new(0x13d5413b_u32, 0x33b9_u16, 0x11d2_u16, StaticArray[0x95_u8, 0xa7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xcb_u8, 0x2_u8])
  struct IAnchorClick
    lpVtbl : IAnchorClickVTbl*
  end

  struct IHTMLUserDataOMVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_xml_document : UInt64
    save : UInt64
    load : UInt64
    get_attribute : UInt64
    set_attribute : UInt64
    remove_attribute : UInt64
    put_expires : UInt64
    get_expires : UInt64
  end

  IHTMLUserDataOM_GUID = "3050f48f-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLUserDataOM = LibC::GUID.new(0x3050f48f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLUserDataOM
    lpVtbl : IHTMLUserDataOMVTbl*
  end

  struct IHTMLPersistDataOMVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_xml_document : UInt64
    get_attribute : UInt64
    set_attribute : UInt64
    remove_attribute : UInt64
  end

  IHTMLPersistDataOM_GUID = "3050f4c0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPersistDataOM = LibC::GUID.new(0x3050f4c0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPersistDataOM
    lpVtbl : IHTMLPersistDataOMVTbl*
  end

  struct IHTMLPersistDataVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    save : UInt64
    load : UInt64
    query_type : UInt64
  end

  IHTMLPersistData_GUID = "3050f4c5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLPersistData = LibC::GUID.new(0x3050f4c5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLPersistData
    lpVtbl : IHTMLPersistDataVTbl*
  end

  struct IDownloadBehaviorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    start_download : UInt64
  end

  IDownloadBehavior_GUID = "3050f5bd-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDownloadBehavior = LibC::GUID.new(0x3050f5bd_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDownloadBehavior
    lpVtbl : IDownloadBehaviorVTbl*
  end

  struct ILayoutRectVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    put_next_rect : UInt64
    get_next_rect : UInt64
    put_content_src : UInt64
    get_content_src : UInt64
    put_honor_page_breaks : UInt64
    get_honor_page_breaks : UInt64
    put_honor_page_rules : UInt64
    get_honor_page_rules : UInt64
    put_next_rect_element : UInt64
    get_next_rect_element : UInt64
    get_content_document : UInt64
  end

  ILayoutRect_GUID = "3050f665-98b5-11cf-bb82-00aa00bdce0b"
  IID_ILayoutRect = LibC::GUID.new(0x3050f665_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ILayoutRect
    lpVtbl : ILayoutRectVTbl*
  end

  struct IDeviceRectVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  IDeviceRect_GUID = "3050f6d5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDeviceRect = LibC::GUID.new(0x3050f6d5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDeviceRect
    lpVtbl : IDeviceRectVTbl*
  end

  struct IHeaderFooterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_html_head : UInt64
    get_html_foot : UInt64
    put_text_head : UInt64
    get_text_head : UInt64
    put_text_foot : UInt64
    get_text_foot : UInt64
    put_page : UInt64
    get_page : UInt64
    put_page_total : UInt64
    get_page_total : UInt64
    put_url : UInt64
    get_url : UInt64
    put_title : UInt64
    get_title : UInt64
    put_date_short : UInt64
    get_date_short : UInt64
    put_date_long : UInt64
    get_date_long : UInt64
    put_time_short : UInt64
    get_time_short : UInt64
    put_time_long : UInt64
    get_time_long : UInt64
  end

  IHeaderFooter_GUID = "3050f6ce-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHeaderFooter = LibC::GUID.new(0x3050f6ce_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHeaderFooter
    lpVtbl : IHeaderFooterVTbl*
  end

  struct IHeaderFooter2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_html_head : UInt64
    get_html_foot : UInt64
    put_text_head : UInt64
    get_text_head : UInt64
    put_text_foot : UInt64
    get_text_foot : UInt64
    put_page : UInt64
    get_page : UInt64
    put_page_total : UInt64
    get_page_total : UInt64
    put_url : UInt64
    get_url : UInt64
    put_title : UInt64
    get_title : UInt64
    put_date_short : UInt64
    get_date_short : UInt64
    put_date_long : UInt64
    get_date_long : UInt64
    put_time_short : UInt64
    get_time_short : UInt64
    put_time_long : UInt64
    get_time_long : UInt64
    put_font : UInt64
    get_font : UInt64
  end

  IHeaderFooter2_GUID = "305104a5-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHeaderFooter2 = LibC::GUID.new(0x305104a5_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHeaderFooter2
    lpVtbl : IHeaderFooter2VTbl*
  end

  struct IHostDialogHelperVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show_html_dialog : UInt64
  end

  IHostDialogHelper_GUID = "53dec138-a51e-11d2-861e-00c04fa35c89"
  IID_IHostDialogHelper = LibC::GUID.new(0x53dec138_u32, 0xa51e_u16, 0x11d2_u16, StaticArray[0x86_u8, 0x1e_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xa3_u8, 0x5c_u8, 0x89_u8])
  struct IHostDialogHelper
    lpVtbl : IHostDialogHelperVTbl*
  end

  struct IDocHostUIHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show_context_menu : UInt64
    get_host_info : UInt64
    show_ui : UInt64
    hide_ui : UInt64
    update_ui : UInt64
    enable_modeless : UInt64
    on_doc_window_activate : UInt64
    on_frame_window_activate : UInt64
    resize_border : UInt64
    translate_accelerator : UInt64
    get_option_key_path : UInt64
    get_drop_target : UInt64
    get_external : UInt64
    translate_url : UInt64
    filter_data_object : UInt64
  end

  IDocHostUIHandler_GUID = "bd3f23c0-d43e-11cf-893b-00aa00bdce1a"
  IID_IDocHostUIHandler = LibC::GUID.new(0xbd3f23c0_u32, 0xd43e_u16, 0x11cf_u16, StaticArray[0x89_u8, 0x3b_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0x1a_u8])
  struct IDocHostUIHandler
    lpVtbl : IDocHostUIHandlerVTbl*
  end

  struct IDocHostUIHandler2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show_context_menu : UInt64
    get_host_info : UInt64
    show_ui : UInt64
    hide_ui : UInt64
    update_ui : UInt64
    enable_modeless : UInt64
    on_doc_window_activate : UInt64
    on_frame_window_activate : UInt64
    resize_border : UInt64
    translate_accelerator : UInt64
    get_option_key_path : UInt64
    get_drop_target : UInt64
    get_external : UInt64
    translate_url : UInt64
    filter_data_object : UInt64
    get_override_key_path : UInt64
  end

  IDocHostUIHandler2_GUID = "3050f6d0-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDocHostUIHandler2 = LibC::GUID.new(0x3050f6d0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDocHostUIHandler2
    lpVtbl : IDocHostUIHandler2VTbl*
  end

  struct ICustomDocVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_ui_handler : UInt64
  end

  ICustomDoc_GUID = "3050f3f0-98b5-11cf-bb82-00aa00bdce0b"
  IID_ICustomDoc = LibC::GUID.new(0x3050f3f0_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ICustomDoc
    lpVtbl : ICustomDocVTbl*
  end

  struct IDocHostShowUIVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show_message : UInt64
    show_help : UInt64
  end

  IDocHostShowUI_GUID = "c4d244b0-d43e-11cf-893b-00aa00bdce1a"
  IID_IDocHostShowUI = LibC::GUID.new(0xc4d244b0_u32, 0xd43e_u16, 0x11cf_u16, StaticArray[0x89_u8, 0x3b_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0x1a_u8])
  struct IDocHostShowUI
    lpVtbl : IDocHostShowUIVTbl*
  end

  struct IClassFactoryExVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_instance : UInt64
    lock_server : UInt64
    create_instance_with_context : UInt64
  end

  IClassFactoryEx_GUID = "342d1ea0-ae25-11d1-89c5-006008c3fbfc"
  IID_IClassFactoryEx = LibC::GUID.new(0x342d1ea0_u32, 0xae25_u16, 0x11d1_u16, StaticArray[0x89_u8, 0xc5_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0xc3_u8, 0xfb_u8, 0xfc_u8])
  struct IClassFactoryEx
    lpVtbl : IClassFactoryExVTbl*
  end

  struct IHTMLOMWindowServicesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    move_to : UInt64
    move_by : UInt64
    resize_to : UInt64
    resize_by : UInt64
  end

  IHTMLOMWindowServices_GUID = "3050f5fc-98b5-11cf-bb82-00aa00bdce0b"
  IID_IHTMLOMWindowServices = LibC::GUID.new(0x3050f5fc_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IHTMLOMWindowServices
    lpVtbl : IHTMLOMWindowServicesVTbl*
  end

  struct IDiagnosticsScriptEngineSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_message : UInt64
    on_script_error : UInt64
  end

  IDiagnosticsScriptEngineSite_GUID = "30510858-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDiagnosticsScriptEngineSite = LibC::GUID.new(0x30510858_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDiagnosticsScriptEngineSite
    lpVtbl : IDiagnosticsScriptEngineSiteVTbl*
  end

  struct IDiagnosticsScriptEngineVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    evaluate_script : UInt64
    fire_script_message_event : UInt64
    detach : UInt64
  end

  IDiagnosticsScriptEngine_GUID = "30510859-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDiagnosticsScriptEngine = LibC::GUID.new(0x30510859_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDiagnosticsScriptEngine
    lpVtbl : IDiagnosticsScriptEngineVTbl*
  end

  struct IDiagnosticsScriptEngineProviderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_diagnostics_script_engine : UInt64
  end

  IDiagnosticsScriptEngineProvider_GUID = "3051085a-98b5-11cf-bb82-00aa00bdce0b"
  IID_IDiagnosticsScriptEngineProvider = LibC::GUID.new(0x3051085a_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct IDiagnosticsScriptEngineProvider
    lpVtbl : IDiagnosticsScriptEngineProviderVTbl*
  end

  struct IOpenServiceActivityInputVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_variable : UInt64
    has_variable : UInt64
    get_type : UInt64
  end

  IOpenServiceActivityInput_GUID = "75cb4db9-6da0-4da3-83ce-422b6a433346"
  IID_IOpenServiceActivityInput = LibC::GUID.new(0x75cb4db9_u32, 0x6da0_u16, 0x4da3_u16, StaticArray[0x83_u8, 0xce_u8, 0x42_u8, 0x2b_u8, 0x6a_u8, 0x43_u8, 0x33_u8, 0x46_u8])
  struct IOpenServiceActivityInput
    lpVtbl : IOpenServiceActivityInputVTbl*
  end

  struct IOpenServiceActivityOutputContextVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    navigate : UInt64
    can_navigate : UInt64
  end

  IOpenServiceActivityOutputContext_GUID = "e289deab-f709-49a9-b99e-282364074571"
  IID_IOpenServiceActivityOutputContext = LibC::GUID.new(0xe289deab_u32, 0xf709_u16, 0x49a9_u16, StaticArray[0xb9_u8, 0x9e_u8, 0x28_u8, 0x23_u8, 0x64_u8, 0x7_u8, 0x45_u8, 0x71_u8])
  struct IOpenServiceActivityOutputContext
    lpVtbl : IOpenServiceActivityOutputContextVTbl*
  end

  struct IOpenServiceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    is_default : UInt64
    set_default : UInt64
    get_id : UInt64
  end

  IOpenService_GUID = "c2952ed1-6a89-4606-925f-1ed8b4be0630"
  IID_IOpenService = LibC::GUID.new(0xc2952ed1_u32, 0x6a89_u16, 0x4606_u16, StaticArray[0x92_u8, 0x5f_u8, 0x1e_u8, 0xd8_u8, 0xb4_u8, 0xbe_u8, 0x6_u8, 0x30_u8])
  struct IOpenService
    lpVtbl : IOpenServiceVTbl*
  end

  struct IOpenServiceManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    install_service : UInt64
    uninstall_service : UInt64
    get_service_by_id : UInt64
  end

  IOpenServiceManager_GUID = "5664125f-4e10-4e90-98e4-e4513d955a14"
  IID_IOpenServiceManager = LibC::GUID.new(0x5664125f_u32, 0x4e10_u16, 0x4e90_u16, StaticArray[0x98_u8, 0xe4_u8, 0xe4_u8, 0x51_u8, 0x3d_u8, 0x95_u8, 0x5a_u8, 0x14_u8])
  struct IOpenServiceManager
    lpVtbl : IOpenServiceManagerVTbl*
  end

  struct IOpenServiceActivityVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    is_default : UInt64
    set_default : UInt64
    get_id : UInt64
    execute : UInt64
    can_execute : UInt64
    can_execute_type : UInt64
    preview : UInt64
    can_preview : UInt64
    can_preview_type : UInt64
    get_status_text : UInt64
    get_homepage_url : UInt64
    get_display_name : UInt64
    get_description : UInt64
    get_category_name : UInt64
    get_icon_path : UInt64
    get_icon : UInt64
    get_description_file_path : UInt64
    get_download_url : UInt64
    get_install_url : UInt64
    is_enabled : UInt64
    set_enabled : UInt64
  end

  IOpenServiceActivity_GUID = "13645c88-221a-4905-8ed1-4f5112cfc108"
  IID_IOpenServiceActivity = LibC::GUID.new(0x13645c88_u32, 0x221a_u16, 0x4905_u16, StaticArray[0x8e_u8, 0xd1_u8, 0x4f_u8, 0x51_u8, 0x12_u8, 0xcf_u8, 0xc1_u8, 0x8_u8])
  struct IOpenServiceActivity
    lpVtbl : IOpenServiceActivityVTbl*
  end

  struct IEnumOpenServiceActivityVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumOpenServiceActivity_GUID = "a436d7d2-17c3-4ef4-a1e8-5c86faff26c0"
  IID_IEnumOpenServiceActivity = LibC::GUID.new(0xa436d7d2_u32, 0x17c3_u16, 0x4ef4_u16, StaticArray[0xa1_u8, 0xe8_u8, 0x5c_u8, 0x86_u8, 0xfa_u8, 0xff_u8, 0x26_u8, 0xc0_u8])
  struct IEnumOpenServiceActivity
    lpVtbl : IEnumOpenServiceActivityVTbl*
  end

  struct IOpenServiceActivityCategoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    has_default_activity : UInt64
    get_default_activity : UInt64
    set_default_activity : UInt64
    get_name : UInt64
    get_activity_enumerator : UInt64
  end

  IOpenServiceActivityCategory_GUID = "850af9d6-7309-40b5-bdb8-786c106b2153"
  IID_IOpenServiceActivityCategory = LibC::GUID.new(0x850af9d6_u32, 0x7309_u16, 0x40b5_u16, StaticArray[0xbd_u8, 0xb8_u8, 0x78_u8, 0x6c_u8, 0x10_u8, 0x6b_u8, 0x21_u8, 0x53_u8])
  struct IOpenServiceActivityCategory
    lpVtbl : IOpenServiceActivityCategoryVTbl*
  end

  struct IEnumOpenServiceActivityCategoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumOpenServiceActivityCategory_GUID = "33627a56-8c9a-4430-8fd1-b5f5c771afb6"
  IID_IEnumOpenServiceActivityCategory = LibC::GUID.new(0x33627a56_u32, 0x8c9a_u16, 0x4430_u16, StaticArray[0x8f_u8, 0xd1_u8, 0xb5_u8, 0xf5_u8, 0xc7_u8, 0x71_u8, 0xaf_u8, 0xb6_u8])
  struct IEnumOpenServiceActivityCategory
    lpVtbl : IEnumOpenServiceActivityCategoryVTbl*
  end

  struct IOpenServiceActivityManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_category_enumerator : UInt64
    get_activity_by_id : UInt64
    get_activity_by_homepage_and_category : UInt64
    get_version_cookie : UInt64
  end

  IOpenServiceActivityManager_GUID = "8a2d0a9d-e920-4bdc-a291-d30f650bc4f1"
  IID_IOpenServiceActivityManager = LibC::GUID.new(0x8a2d0a9d_u32, 0xe920_u16, 0x4bdc_u16, StaticArray[0xa2_u8, 0x91_u8, 0xd3_u8, 0xf_u8, 0x65_u8, 0xb_u8, 0xc4_u8, 0xf1_u8])
  struct IOpenServiceActivityManager
    lpVtbl : IOpenServiceActivityManagerVTbl*
  end

  struct IPersistHistoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_class_id : UInt64
    load_history : UInt64
    save_history : UInt64
    set_position_cookie : UInt64
    get_position_cookie : UInt64
  end

  IPersistHistory_GUID = "91a565c1-e38f-11d0-94bf-00a0c9055cbf"
  IID_IPersistHistory = LibC::GUID.new(0x91a565c1_u32, 0xe38f_u16, 0x11d0_u16, StaticArray[0x94_u8, 0xbf_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x5_u8, 0x5c_u8, 0xbf_u8])
  struct IPersistHistory
    lpVtbl : IPersistHistoryVTbl*
  end

  struct IEnumSTATURLVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
    set_filter : UInt64
  end

  IEnumSTATURL_GUID = "3c374a42-bae4-11cf-bf7d-00aa006946ee"
  IID_IEnumSTATURL = LibC::GUID.new(0x3c374a42_u32, 0xbae4_u16, 0x11cf_u16, StaticArray[0xbf_u8, 0x7d_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x69_u8, 0x46_u8, 0xee_u8])
  struct IEnumSTATURL
    lpVtbl : IEnumSTATURLVTbl*
  end

  struct IUrlHistoryStgVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_url : UInt64
    delete_url : UInt64
    query_url : UInt64
    bind_to_object : UInt64
    enum_urls : UInt64
  end

  IUrlHistoryStg_GUID = "3c374a41-bae4-11cf-bf7d-00aa006946ee"
  IID_IUrlHistoryStg = LibC::GUID.new(0x3c374a41_u32, 0xbae4_u16, 0x11cf_u16, StaticArray[0xbf_u8, 0x7d_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x69_u8, 0x46_u8, 0xee_u8])
  struct IUrlHistoryStg
    lpVtbl : IUrlHistoryStgVTbl*
  end

  struct IUrlHistoryStg2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_url : UInt64
    delete_url : UInt64
    query_url : UInt64
    bind_to_object : UInt64
    enum_urls : UInt64
    add_url_and_notify : UInt64
    clear_history : UInt64
  end

  IUrlHistoryStg2_GUID = "afa0dc11-c313-11d0-831a-00c04fd5ae38"
  IID_IUrlHistoryStg2 = LibC::GUID.new(0xafa0dc11_u32, 0xc313_u16, 0x11d0_u16, StaticArray[0x83_u8, 0x1a_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd5_u8, 0xae_u8, 0x38_u8])
  struct IUrlHistoryStg2
    lpVtbl : IUrlHistoryStg2VTbl*
  end

  struct IUrlHistoryNotifyVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    query_status : UInt64
    exec : UInt64
  end

  IUrlHistoryNotify_GUID = "bc40bec1-c493-11d0-831b-00c04fd5ae38"
  IID_IUrlHistoryNotify = LibC::GUID.new(0xbc40bec1_u32, 0xc493_u16, 0x11d0_u16, StaticArray[0x83_u8, 0x1b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd5_u8, 0xae_u8, 0x38_u8])
  struct IUrlHistoryNotify
    lpVtbl : IUrlHistoryNotifyVTbl*
  end

  struct IWebBrowserEventsServiceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    fire_before_navigate2_event : UInt64
    fire_navigate_complete2_event : UInt64
    fire_download_begin_event : UInt64
    fire_download_complete_event : UInt64
    fire_document_complete_event : UInt64
  end

  IWebBrowserEventsService_GUID = "54a8f188-9ebd-4795-ad16-9b4945119636"
  IID_IWebBrowserEventsService = LibC::GUID.new(0x54a8f188_u32, 0x9ebd_u16, 0x4795_u16, StaticArray[0xad_u8, 0x16_u8, 0x9b_u8, 0x49_u8, 0x45_u8, 0x11_u8, 0x96_u8, 0x36_u8])
  struct IWebBrowserEventsService
    lpVtbl : IWebBrowserEventsServiceVTbl*
  end

  struct IWebBrowserEventsUrlServiceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_url_for_events : UInt64
  end

  IWebBrowserEventsUrlService_GUID = "87cc5d04-eafa-4833-9820-8f986530cc00"
  IID_IWebBrowserEventsUrlService = LibC::GUID.new(0x87cc5d04_u32, 0xeafa_u16, 0x4833_u16, StaticArray[0x98_u8, 0x20_u8, 0x8f_u8, 0x98_u8, 0x65_u8, 0x30_u8, 0xcc_u8, 0x0_u8])
  struct IWebBrowserEventsUrlService
    lpVtbl : IWebBrowserEventsUrlServiceVTbl*
  end

  struct ITimerServiceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_timer : UInt64
    get_named_timer : UInt64
    set_named_timer_reference : UInt64
  end

  ITimerService_GUID = "3050f35f-98b5-11cf-bb82-00aa00bdce0b"
  IID_ITimerService = LibC::GUID.new(0x3050f35f_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ITimerService
    lpVtbl : ITimerServiceVTbl*
  end

  struct ITimerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    advise : UInt64
    unadvise : UInt64
    freeze : UInt64
    get_time : UInt64
  end

  ITimer_GUID = "3050f360-98b5-11cf-bb82-00aa00bdce0b"
  IID_ITimer = LibC::GUID.new(0x3050f360_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ITimer
    lpVtbl : ITimerVTbl*
  end

  struct ITimerExVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    advise : UInt64
    unadvise : UInt64
    freeze : UInt64
    get_time : UInt64
    set_mode : UInt64
  end

  ITimerEx_GUID = "30510414-98b5-11cf-bb82-00aa00bdce0b"
  IID_ITimerEx = LibC::GUID.new(0x30510414_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ITimerEx
    lpVtbl : ITimerExVTbl*
  end

  struct ITimerSinkVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_timer : UInt64
  end

  ITimerSink_GUID = "3050f361-98b5-11cf-bb82-00aa00bdce0b"
  IID_ITimerSink = LibC::GUID.new(0x3050f361_u32, 0x98b5_u16, 0x11cf_u16, StaticArray[0xbb_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xbd_u8, 0xce_u8, 0xb_u8])
  struct ITimerSink
    lpVtbl : ITimerSinkVTbl*
  end

  struct IMapMIMEToCLSIDVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    enable_default_mappings : UInt64
    map_mime_to_clsid : UInt64
    set_mapping : UInt64
  end

  IMapMIMEToCLSID_GUID = "d9e89500-30fa-11d0-b724-00aa006c1a01"
  IID_IMapMIMEToCLSID = LibC::GUID.new(0xd9e89500_u32, 0x30fa_u16, 0x11d0_u16, StaticArray[0xb7_u8, 0x24_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x6c_u8, 0x1a_u8, 0x1_u8])
  struct IMapMIMEToCLSID
    lpVtbl : IMapMIMEToCLSIDVTbl*
  end

  struct IImageDecodeFilterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    process : UInt64
    terminate : UInt64
  end

  IImageDecodeFilter_GUID = "a3ccedf3-2de2-11d0-86f4-00a0c913f750"
  IID_IImageDecodeFilter = LibC::GUID.new(0xa3ccedf3_u32, 0x2de2_u16, 0x11d0_u16, StaticArray[0x86_u8, 0xf4_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x13_u8, 0xf7_u8, 0x50_u8])
  struct IImageDecodeFilter
    lpVtbl : IImageDecodeFilterVTbl*
  end

  struct IImageDecodeEventSinkVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_surface : UInt64
    on_begin_decode : UInt64
    on_bits_complete : UInt64
    on_decode_complete : UInt64
    on_palette : UInt64
    on_progress : UInt64
  end

  IImageDecodeEventSink_GUID = "baa342a0-2ded-11d0-86f4-00a0c913f750"
  IID_IImageDecodeEventSink = LibC::GUID.new(0xbaa342a0_u32, 0x2ded_u16, 0x11d0_u16, StaticArray[0x86_u8, 0xf4_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x13_u8, 0xf7_u8, 0x50_u8])
  struct IImageDecodeEventSink
    lpVtbl : IImageDecodeEventSinkVTbl*
  end

  struct IImageDecodeEventSink2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_surface : UInt64
    on_begin_decode : UInt64
    on_bits_complete : UInt64
    on_decode_complete : UInt64
    on_palette : UInt64
    on_progress : UInt64
    is_alpha_premult_required : UInt64
  end

  IImageDecodeEventSink2_GUID = "8ebd8a57-8a96-48c9-84a6-962e2db9c931"
  IID_IImageDecodeEventSink2 = LibC::GUID.new(0x8ebd8a57_u32, 0x8a96_u16, 0x48c9_u16, StaticArray[0x84_u8, 0xa6_u8, 0x96_u8, 0x2e_u8, 0x2d_u8, 0xb9_u8, 0xc9_u8, 0x31_u8])
  struct IImageDecodeEventSink2
    lpVtbl : IImageDecodeEventSink2VTbl*
  end

  struct ISniffStreamVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    init : UInt64
    peek : UInt64
  end

  ISniffStream_GUID = "4ef17940-30e0-11d0-b724-00aa006c1a01"
  IID_ISniffStream = LibC::GUID.new(0x4ef17940_u32, 0x30e0_u16, 0x11d0_u16, StaticArray[0xb7_u8, 0x24_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x6c_u8, 0x1a_u8, 0x1_u8])
  struct ISniffStream
    lpVtbl : ISniffStreamVTbl*
  end

  struct IDithererImplVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_dest_color_table : UInt64
    set_event_sink : UInt64
  end

  IDithererImpl_GUID = "7c48e840-3910-11d0-86fc-00a0c913f750"
  IID_IDithererImpl = LibC::GUID.new(0x7c48e840_u32, 0x3910_u16, 0x11d0_u16, StaticArray[0x86_u8, 0xfc_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x13_u8, 0xf7_u8, 0x50_u8])
  struct IDithererImpl
    lpVtbl : IDithererImplVTbl*
  end


  # Params # hwndparent : LibC::HANDLE [In],pszusername : PSTR [In],fenable : LibC::BOOL [In]
  fun RatingEnable(hwndparent : LibC::HANDLE, pszusername : PSTR, fenable : LibC::BOOL) : HRESULT

  # Params # hwndparent : LibC::HANDLE [In],pszusername : LibC::LPWSTR [In],fenable : LibC::BOOL [In]
  fun RatingEnableW(hwndparent : LibC::HANDLE, pszusername : LibC::LPWSTR, fenable : LibC::BOOL) : HRESULT

  # Params # pszusername : PSTR [In],pszurl : PSTR [In],pszratinginfo : PSTR [In],pdata : UInt8* [In],cbdata : UInt32 [In],ppratingdetails : Void** [In]
  fun RatingCheckUserAccess(pszusername : PSTR, pszurl : PSTR, pszratinginfo : PSTR, pdata : UInt8*, cbdata : UInt32, ppratingdetails : Void**) : HRESULT

  # Params # pszusername : LibC::LPWSTR [In],pszurl : LibC::LPWSTR [In],pszratinginfo : LibC::LPWSTR [In],pdata : UInt8* [In],cbdata : UInt32 [In],ppratingdetails : Void** [In]
  fun RatingCheckUserAccessW(pszusername : LibC::LPWSTR, pszurl : LibC::LPWSTR, pszratinginfo : LibC::LPWSTR, pdata : UInt8*, cbdata : UInt32, ppratingdetails : Void**) : HRESULT

  # Params # hdlg : LibC::HANDLE [In],pszusername : PSTR [In],pszcontentdescription : PSTR [In],pratingdetails : Void* [In]
  fun RatingAccessDeniedDialog(hdlg : LibC::HANDLE, pszusername : PSTR, pszcontentdescription : PSTR, pratingdetails : Void*) : HRESULT

  # Params # hdlg : LibC::HANDLE [In],pszusername : LibC::LPWSTR [In],pszcontentdescription : LibC::LPWSTR [In],pratingdetails : Void* [In]
  fun RatingAccessDeniedDialogW(hdlg : LibC::HANDLE, pszusername : LibC::LPWSTR, pszcontentdescription : LibC::LPWSTR, pratingdetails : Void*) : HRESULT

  # Params # hdlg : LibC::HANDLE [In],pszusername : PSTR [In],pratingdetails : Void* [In]
  fun RatingAccessDeniedDialog2(hdlg : LibC::HANDLE, pszusername : PSTR, pratingdetails : Void*) : HRESULT

  # Params # hdlg : LibC::HANDLE [In],pszusername : LibC::LPWSTR [In],pratingdetails : Void* [In]
  fun RatingAccessDeniedDialog2W(hdlg : LibC::HANDLE, pszusername : LibC::LPWSTR, pratingdetails : Void*) : HRESULT

  # Params # pratingdetails : Void* [In]
  fun RatingFreeDetails(pratingdetails : Void*) : HRESULT

  # Params # hratingobtainquery : LibC::HANDLE [In]
  fun RatingObtainCancel(hratingobtainquery : LibC::HANDLE) : HRESULT

  # Params # psztargeturl : PSTR [In],dwuserdata : UInt32 [In],fcallback : LibC::IntPtrT [In],phratingobtainquery : LibC::HANDLE* [In]
  fun RatingObtainQuery(psztargeturl : PSTR, dwuserdata : UInt32, fcallback : LibC::IntPtrT, phratingobtainquery : LibC::HANDLE*) : HRESULT

  # Params # psztargeturl : LibC::LPWSTR [In],dwuserdata : UInt32 [In],fcallback : LibC::IntPtrT [In],phratingobtainquery : LibC::HANDLE* [In]
  fun RatingObtainQueryW(psztargeturl : LibC::LPWSTR, dwuserdata : UInt32, fcallback : LibC::IntPtrT, phratingobtainquery : LibC::HANDLE*) : HRESULT

  # Params # hdlg : LibC::HANDLE [In],pszusername : PSTR [In]
  fun RatingSetupUI(hdlg : LibC::HANDLE, pszusername : PSTR) : HRESULT

  # Params # hdlg : LibC::HANDLE [In],pszusername : LibC::LPWSTR [In]
  fun RatingSetupUIW(hdlg : LibC::HANDLE, pszusername : LibC::LPWSTR) : HRESULT

  # Params # hdlg : LibC::HANDLE [In],cbpasswordblob : UInt32 [In],pbpasswordblob : UInt8* [In],lpszurl : LibC::LPWSTR [In],falwaysnever : LibC::BOOL [In],fsitepage : LibC::BOOL [In],fapprovedsitesenforced : LibC::BOOL [In]
  fun RatingAddToApprovedSites(hdlg : LibC::HANDLE, cbpasswordblob : UInt32, pbpasswordblob : UInt8*, lpszurl : LibC::LPWSTR, falwaysnever : LibC::BOOL, fsitepage : LibC::BOOL, fapprovedsitesenforced : LibC::BOOL) : HRESULT

  # Params # hwndowner : LibC::HANDLE [In],param1 : HINSTANCE [In],lpszfilename : PSTR [In],nshow : Int32 [In]
  fun RatingClickedOnPRFInternal(hwndowner : LibC::HANDLE, param1 : HINSTANCE, lpszfilename : PSTR, nshow : Int32) : HRESULT

  # Params # hwndowner : LibC::HANDLE [In],param1 : HINSTANCE [In],lpszfilename : PSTR [In],nshow : Int32 [In]
  fun RatingClickedOnRATInternal(hwndowner : LibC::HANDLE, param1 : HINSTANCE, lpszfilename : PSTR, nshow : Int32) : HRESULT

  # Params # 
  fun RatingEnabledQuery : HRESULT

  # Params # 
  fun RatingInit : HRESULT

  # Params # ppmap : IMapMIMEToCLSID* [In]
  fun CreateMIMEMap(ppmap : IMapMIMEToCLSID*) : HRESULT

  # Params # pstream : IStream [In],pmap : IMapMIMEToCLSID [In],peventsink : IUnknown [In]
  fun DecodeImage(pstream : IStream, pmap : IMapMIMEToCLSID, peventsink : IUnknown) : HRESULT

  # Params # pinstream : IStream [In],pnformat : UInt32* [In],ppoutstream : IStream* [In]
  fun SniffStream(pinstream : IStream, pnformat : UInt32*, ppoutstream : IStream*) : HRESULT

  # Params # pnmaxbytes : UInt32* [In]
  fun GetMaxMIMEIDBytes(pnmaxbytes : UInt32*) : HRESULT

  # Params # pbbytes : UInt8* [In],nbytes : UInt32 [In],pnformat : UInt32* [In]
  fun IdentifyMIMEType(pbbytes : UInt8*, nbytes : UInt32, pnformat : UInt32*) : HRESULT

  # Params # prgbcolors : RGBQUAD* [In],ncolors : UInt32 [In],pinvtable : UInt8* [In],cbtable : UInt32 [In]
  fun ComputeInvCMAP(prgbcolors : RGBQUAD*, ncolors : UInt32, pinvtable : UInt8*, cbtable : UInt32) : HRESULT

  # Params # pdestbits : UInt8* [In],ndestpitch : Int32 [In],psrcbits : UInt8* [In],nsrcpitch : Int32 [In],bfidsrc : Guid* [In],prgbdestcolors : RGBQUAD* [In],prgbsrccolors : RGBQUAD* [In],pbdestinvmap : UInt8* [In],x : Int32 [In],y : Int32 [In],cx : Int32 [In],cy : Int32 [In],ldesttrans : Int32 [In],lsrctrans : Int32 [In]
  fun DitherTo8(pdestbits : UInt8*, ndestpitch : Int32, psrcbits : UInt8*, nsrcpitch : Int32, bfidsrc : Guid*, prgbdestcolors : RGBQUAD*, prgbsrccolors : RGBQUAD*, pbdestinvmap : UInt8*, x : Int32, y : Int32, cx : Int32, cy : Int32, ldesttrans : Int32, lsrctrans : Int32) : HRESULT

  # Params # hbmdib : HBITMAP [In],ppsurface : IDirectDrawSurface* [In]
  fun CreateDDrawSurfaceOnDIB(hbmdib : HBITMAP, ppsurface : IDirectDrawSurface*) : HRESULT

  # Params # pstream : IStream [In],pmap : IMapMIMEToCLSID [In],peventsink : IUnknown [In],pszmimetypeparam : LibC::LPWSTR [In]
  fun DecodeImageEx(pstream : IStream, pmap : IMapMIMEToCLSID, peventsink : IUnknown, pszmimetypeparam : LibC::LPWSTR) : HRESULT

  # Params # hwndowner : LibC::HANDLE [In],pszurl : LibC::LPWSTR [In],pprivacyenum : IEnumPrivacyRecords [In],freportallsites : LibC::BOOL [In]
  fun DoPrivacyDlg(hwndowner : LibC::HANDLE, pszurl : LibC::LPWSTR, pprivacyenum : IEnumPrivacyRecords, freportallsites : LibC::BOOL) : HRESULT
end
struct LibWin32::IHTMLFiltersCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(pvarindex : VARIANT*, pvarresult : VARIANT*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarindex, pvarresult)
  end
end
struct LibWin32::IIE70DispatchEx
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_disp_id(bstrname : UInt8*, grfdex : UInt32, pid : Int32*) : HRESULT
    @lpVtbl.value.get_disp_id.unsafe_as(Proc(UInt8*, UInt32, Int32*, HRESULT)).call(bstrname, grfdex, pid)
  end
  def invoke_ex(id : Int32, lcid : UInt32, wflags : UInt16, pdp : DISPPARAMS*, pvarres : VARIANT*, pei : EXCEPINFO*, pspcaller : IServiceProvider) : HRESULT
    @lpVtbl.value.invoke_ex.unsafe_as(Proc(Int32, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, IServiceProvider, HRESULT)).call(id, lcid, wflags, pdp, pvarres, pei, pspcaller)
  end
  def delete_member_by_name(bstrname : UInt8*, grfdex : UInt32) : HRESULT
    @lpVtbl.value.delete_member_by_name.unsafe_as(Proc(UInt8*, UInt32, HRESULT)).call(bstrname, grfdex)
  end
  def delete_member_by_disp_id(id : Int32) : HRESULT
    @lpVtbl.value.delete_member_by_disp_id.unsafe_as(Proc(Int32, HRESULT)).call(id)
  end
  def get_member_properties(id : Int32, grfdexfetch : UInt32, pgrfdex : UInt32*) : HRESULT
    @lpVtbl.value.get_member_properties.unsafe_as(Proc(Int32, UInt32, UInt32*, HRESULT)).call(id, grfdexfetch, pgrfdex)
  end
  def get_member_name(id : Int32, pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.get_member_name.unsafe_as(Proc(Int32, UInt8**, HRESULT)).call(id, pbstrname)
  end
  def get_next_disp_id(grfdex : UInt32, id : Int32, pid : Int32*) : HRESULT
    @lpVtbl.value.get_next_disp_id.unsafe_as(Proc(UInt32, Int32, Int32*, HRESULT)).call(grfdex, id, pid)
  end
  def get_name_space_parent(ppunk : IUnknown*) : HRESULT
    @lpVtbl.value.get_name_space_parent.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppunk)
  end
end
struct LibWin32::IIE80DispatchEx
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_disp_id(bstrname : UInt8*, grfdex : UInt32, pid : Int32*) : HRESULT
    @lpVtbl.value.get_disp_id.unsafe_as(Proc(UInt8*, UInt32, Int32*, HRESULT)).call(bstrname, grfdex, pid)
  end
  def invoke_ex(id : Int32, lcid : UInt32, wflags : UInt16, pdp : DISPPARAMS*, pvarres : VARIANT*, pei : EXCEPINFO*, pspcaller : IServiceProvider) : HRESULT
    @lpVtbl.value.invoke_ex.unsafe_as(Proc(Int32, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, IServiceProvider, HRESULT)).call(id, lcid, wflags, pdp, pvarres, pei, pspcaller)
  end
  def delete_member_by_name(bstrname : UInt8*, grfdex : UInt32) : HRESULT
    @lpVtbl.value.delete_member_by_name.unsafe_as(Proc(UInt8*, UInt32, HRESULT)).call(bstrname, grfdex)
  end
  def delete_member_by_disp_id(id : Int32) : HRESULT
    @lpVtbl.value.delete_member_by_disp_id.unsafe_as(Proc(Int32, HRESULT)).call(id)
  end
  def get_member_properties(id : Int32, grfdexfetch : UInt32, pgrfdex : UInt32*) : HRESULT
    @lpVtbl.value.get_member_properties.unsafe_as(Proc(Int32, UInt32, UInt32*, HRESULT)).call(id, grfdexfetch, pgrfdex)
  end
  def get_member_name(id : Int32, pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.get_member_name.unsafe_as(Proc(Int32, UInt8**, HRESULT)).call(id, pbstrname)
  end
  def get_next_disp_id(grfdex : UInt32, id : Int32, pid : Int32*) : HRESULT
    @lpVtbl.value.get_next_disp_id.unsafe_as(Proc(UInt32, Int32, Int32*, HRESULT)).call(grfdex, id, pid)
  end
  def get_name_space_parent(ppunk : IUnknown*) : HRESULT
    @lpVtbl.value.get_name_space_parent.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppunk)
  end
end
struct LibWin32::IHTMLEventObj
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_src_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_src_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_alt_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_alt_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_ctrl_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_ctrl_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_shift_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_shift_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_return_value(v : VARIANT) : HRESULT
    @lpVtbl.value.put_return_value.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_return_value(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_return_value.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_cancel_bubble(v : Int16) : HRESULT
    @lpVtbl.value.put_cancel_bubble.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_cancel_bubble(p : Int16*) : HRESULT
    @lpVtbl.value.get_cancel_bubble.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_from_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_from_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_to_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_to_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def put_key_code(v : Int32) : HRESULT
    @lpVtbl.value.put_key_code.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_key_code(p : Int32*) : HRESULT
    @lpVtbl.value.get_key_code.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_button(p : Int32*) : HRESULT
    @lpVtbl.value.get_button.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_qualifier(p : UInt8**) : HRESULT
    @lpVtbl.value.get_qualifier.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_reason(p : Int32*) : HRESULT
    @lpVtbl.value.get_reason.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_offset_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_offset_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_screen_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_screen_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_screen_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_screen_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_src_filter(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_src_filter.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
end
struct LibWin32::IElementBehaviorSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_element(ppelement : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(ppelement)
  end
  def register_notification(levent : Int32) : HRESULT
    @lpVtbl.value.register_notification.unsafe_as(Proc(Int32, HRESULT)).call(levent)
  end
end
struct LibWin32::IElementBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def init(pbehaviorsite : IElementBehaviorSite) : HRESULT
    @lpVtbl.value.init.unsafe_as(Proc(IElementBehaviorSite, HRESULT)).call(pbehaviorsite)
  end
  def notify(levent : Int32, pvar : VARIANT*) : HRESULT
    @lpVtbl.value.notify.unsafe_as(Proc(Int32, VARIANT*, HRESULT)).call(levent, pvar)
  end
  def detach : HRESULT
    @lpVtbl.value.detach.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IElementBehaviorFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def find_behavior(bstrbehavior : UInt8*, bstrbehaviorurl : UInt8*, psite : IElementBehaviorSite, ppbehavior : IElementBehavior*) : HRESULT
    @lpVtbl.value.find_behavior.unsafe_as(Proc(UInt8*, UInt8*, IElementBehaviorSite, IElementBehavior*, HRESULT)).call(bstrbehavior, bstrbehaviorurl, psite, ppbehavior)
  end
end
struct LibWin32::IElementBehaviorSiteOM
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def register_event(pchevent : LibC::LPWSTR, lflags : Int32, plcookie : Int32*) : HRESULT
    @lpVtbl.value.register_event.unsafe_as(Proc(LibC::LPWSTR, Int32, Int32*, HRESULT)).call(pchevent, lflags, plcookie)
  end
  def get_event_cookie(pchevent : LibC::LPWSTR, plcookie : Int32*) : HRESULT
    @lpVtbl.value.get_event_cookie.unsafe_as(Proc(LibC::LPWSTR, Int32*, HRESULT)).call(pchevent, plcookie)
  end
  def fire_event(lcookie : Int32, peventobject : IHTMLEventObj) : HRESULT
    @lpVtbl.value.fire_event.unsafe_as(Proc(Int32, IHTMLEventObj, HRESULT)).call(lcookie, peventobject)
  end
  def create_event_object(ppeventobject : IHTMLEventObj*) : HRESULT
    @lpVtbl.value.create_event_object.unsafe_as(Proc(IHTMLEventObj*, HRESULT)).call(ppeventobject)
  end
  def register_name(pchname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.register_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pchname)
  end
  def register_urn(pchurn : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.register_urn.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pchurn)
  end
end
struct LibWin32::IElementBehaviorRender
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def draw(hdc : HDC, llayer : Int32, prect : RECT*, preserved : IUnknown) : HRESULT
    @lpVtbl.value.draw.unsafe_as(Proc(HDC, Int32, RECT*, IUnknown, HRESULT)).call(hdc, llayer, prect, preserved)
  end
  def get_render_info(plrenderinfo : Int32*) : HRESULT
    @lpVtbl.value.get_render_info.unsafe_as(Proc(Int32*, HRESULT)).call(plrenderinfo)
  end
  def hit_test_point(ppoint : POINT*, preserved : IUnknown, pbhit : LibC::BOOL*) : HRESULT
    @lpVtbl.value.hit_test_point.unsafe_as(Proc(POINT*, IUnknown, LibC::BOOL*, HRESULT)).call(ppoint, preserved, pbhit)
  end
end
struct LibWin32::IElementBehaviorSiteRender
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def invalidate(prect : RECT*) : HRESULT
    @lpVtbl.value.invalidate.unsafe_as(Proc(RECT*, HRESULT)).call(prect)
  end
  def invalidate_render_info : HRESULT
    @lpVtbl.value.invalidate_render_info.unsafe_as(Proc(HRESULT)).call
  end
  def invalidate_style : HRESULT
    @lpVtbl.value.invalidate_style.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IDOMEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_bubbles(p : Int16*) : HRESULT
    @lpVtbl.value.get_bubbles.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_cancelable(p : Int16*) : HRESULT
    @lpVtbl.value.get_cancelable.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_current_target(p : IEventTarget*) : HRESULT
    @lpVtbl.value.get_current_target.unsafe_as(Proc(IEventTarget*, HRESULT)).call(p)
  end
  def get_default_prevented(p : Int16*) : HRESULT
    @lpVtbl.value.get_default_prevented.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_event_phase(p : UInt16*) : HRESULT
    @lpVtbl.value.get_event_phase.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def get_target(p : IEventTarget*) : HRESULT
    @lpVtbl.value.get_target.unsafe_as(Proc(IEventTarget*, HRESULT)).call(p)
  end
  def get_time_stamp(p : UInt64*) : HRESULT
    @lpVtbl.value.get_time_stamp.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def init_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16) : HRESULT
    @lpVtbl.value.init_event.unsafe_as(Proc(UInt8*, Int16, Int16, HRESULT)).call(eventtype, canbubble, cancelable)
  end
  def prevent_default : HRESULT
    @lpVtbl.value.prevent_default.unsafe_as(Proc(HRESULT)).call
  end
  def stop_propagation : HRESULT
    @lpVtbl.value.stop_propagation.unsafe_as(Proc(HRESULT)).call
  end
  def stop_immediate_propagation : HRESULT
    @lpVtbl.value.stop_immediate_propagation.unsafe_as(Proc(HRESULT)).call
  end
  def get_is_trusted(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_trusted.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_cancel_bubble(v : Int16) : HRESULT
    @lpVtbl.value.put_cancel_bubble.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_cancel_bubble(p : Int16*) : HRESULT
    @lpVtbl.value.get_cancel_bubble.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_src_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_src_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDOMConstructor
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_constructor(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_constructor.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def lookup_getter(propname : UInt8*, ppdisphandler : VARIANT*) : HRESULT
    @lpVtbl.value.lookup_getter.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(propname, ppdisphandler)
  end
  def lookup_setter(propname : UInt8*, ppdisphandler : VARIANT*) : HRESULT
    @lpVtbl.value.lookup_setter.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(propname, ppdisphandler)
  end
  def define_getter(propname : UInt8*, pdisphandler : VARIANT*) : HRESULT
    @lpVtbl.value.define_getter.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(propname, pdisphandler)
  end
  def define_setter(propname : UInt8*, pdisphandler : VARIANT*) : HRESULT
    @lpVtbl.value.define_setter.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(propname, pdisphandler)
  end
end
struct LibWin32::IHTMLStyleSheetRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_selector_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_selector_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_selector_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_selector_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_style(p : IHTMLRuleStyle*) : HRESULT
    @lpVtbl.value.get_style.unsafe_as(Proc(IHTMLRuleStyle*, HRESULT)).call(p)
  end
  def get_read_only(p : Int16*) : HRESULT
    @lpVtbl.value.get_read_only.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCSSStyleDeclaration
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_parent_rule(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_parent_rule.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_property_value(bstrpropertyname : UInt8*, pbstrpropertyvalue : UInt8**) : HRESULT
    @lpVtbl.value.get_property_value.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(bstrpropertyname, pbstrpropertyvalue)
  end
  def get_property_priority(bstrpropertyname : UInt8*, pbstrpropertypriority : UInt8**) : HRESULT
    @lpVtbl.value.get_property_priority.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(bstrpropertyname, pbstrpropertypriority)
  end
  def remove_property(bstrpropertyname : UInt8*, pbstrpropertyvalue : UInt8**) : HRESULT
    @lpVtbl.value.remove_property.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(bstrpropertyname, pbstrpropertyvalue)
  end
  def set_property(bstrpropertyname : UInt8*, pvarpropertyvalue : VARIANT*, pvarpropertypriority : VARIANT*) : HRESULT
    @lpVtbl.value.set_property.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, HRESULT)).call(bstrpropertyname, pvarpropertyvalue, pvarpropertypriority)
  end
  def item(index : Int32, pbstrpropertyname : UInt8**) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, UInt8**, HRESULT)).call(index, pbstrpropertyname)
  end
  def put_font_family(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_family.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_family(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_family.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_variant(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_variant.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_variant(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_variant.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_weight(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_weight.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_weight(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_weight.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_size(v : VARIANT) : HRESULT
    @lpVtbl.value.put_font_size.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_font_size(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_font_size.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_font(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_background(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_background_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_background_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_background_image(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_image.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_image(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_image.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_repeat(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_repeat.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_repeat(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_repeat.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_attachment(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_attachment.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_attachment(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_attachment.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_position_x(v : VARIANT) : HRESULT
    @lpVtbl.value.put_background_position_x.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_background_position_x(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_position_x.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_background_position_y(v : VARIANT) : HRESULT
    @lpVtbl.value.put_background_position_y.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_background_position_y(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_position_y.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_word_spacing(v : VARIANT) : HRESULT
    @lpVtbl.value.put_word_spacing.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_word_spacing(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_word_spacing.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_letter_spacing(v : VARIANT) : HRESULT
    @lpVtbl.value.put_letter_spacing.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_letter_spacing(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_letter_spacing.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_decoration(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_decoration.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_decoration(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_decoration.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_vertical_align(v : VARIANT) : HRESULT
    @lpVtbl.value.put_vertical_align.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_vertical_align(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_vertical_align.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_transform(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_transform.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_transform(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_transform.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_indent(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_indent.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_indent(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_indent.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_line_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_line_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_line_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_line_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_top(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_top.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_right(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_right.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_bottom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_bottom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_left(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_left.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_margin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_margin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_margin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_padding_top(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_top.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding_right(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_right.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding_bottom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_bottom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding_left(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_left.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding(v : UInt8*) : HRESULT
    @lpVtbl.value.put_padding.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_padding(p : UInt8**) : HRESULT
    @lpVtbl.value.get_padding.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_top.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_top(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_top.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_right(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_right.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_right(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_right.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_bottom(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_bottom.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_bottom(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_bottom.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_left(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_left.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_left(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_left.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_color(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_color.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_color(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_color.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_top_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_top_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_top_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_right_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_right_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_right_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_right_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_bottom_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_bottom_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_bottom_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_bottom_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_left_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_left_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_left_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_left_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_width(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_width.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_width(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_width.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_top_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_top_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_top_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_right_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_right_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_right_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_right_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_bottom_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_bottom_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_bottom_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_bottom_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_left_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_left_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_left_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_left_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_top_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_top_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_top_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_right_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_right_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_right_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_right_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_bottom_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_bottom_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_bottom_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_bottom_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_left_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_left_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_left_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_left_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_style_float(v : UInt8*) : HRESULT
    @lpVtbl.value.put_style_float.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_style_float(p : UInt8**) : HRESULT
    @lpVtbl.value.get_style_float.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_clear(v : UInt8*) : HRESULT
    @lpVtbl.value.put_clear.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_clear(p : UInt8**) : HRESULT
    @lpVtbl.value.get_clear.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_display(v : UInt8*) : HRESULT
    @lpVtbl.value.put_display.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_display(p : UInt8**) : HRESULT
    @lpVtbl.value.get_display.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_visibility(v : UInt8*) : HRESULT
    @lpVtbl.value.put_visibility.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_visibility(p : UInt8**) : HRESULT
    @lpVtbl.value.get_visibility.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style_image(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style_image.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style_image(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_image.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_white_space(v : UInt8*) : HRESULT
    @lpVtbl.value.put_white_space.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_white_space(p : UInt8**) : HRESULT
    @lpVtbl.value.get_white_space.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_top(v : VARIANT) : HRESULT
    @lpVtbl.value.put_top.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_left(v : VARIANT) : HRESULT
    @lpVtbl.value.put_left.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_z_index(v : VARIANT) : HRESULT
    @lpVtbl.value.put_z_index.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_z_index(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_z_index.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_overflow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_overflow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_overflow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_page_break_before(v : UInt8*) : HRESULT
    @lpVtbl.value.put_page_break_before.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_page_break_before(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_before.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_page_break_after(v : UInt8*) : HRESULT
    @lpVtbl.value.put_page_break_after.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_page_break_after(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_after.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_css_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_css_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_css_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_css_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_cursor(v : UInt8*) : HRESULT
    @lpVtbl.value.put_cursor.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_cursor(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cursor.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_clip(v : UInt8*) : HRESULT
    @lpVtbl.value.put_clip.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_clip(p : UInt8**) : HRESULT
    @lpVtbl.value.get_clip.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_filter(v : UInt8*) : HRESULT
    @lpVtbl.value.put_filter.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_filter(p : UInt8**) : HRESULT
    @lpVtbl.value.get_filter.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_table_layout(v : UInt8*) : HRESULT
    @lpVtbl.value.put_table_layout.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_table_layout(p : UInt8**) : HRESULT
    @lpVtbl.value.get_table_layout.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_collapse(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_collapse.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_collapse(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_collapse.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_direction(v : UInt8*) : HRESULT
    @lpVtbl.value.put_direction.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_behavior(v : UInt8*) : HRESULT
    @lpVtbl.value.put_behavior.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_behavior(p : UInt8**) : HRESULT
    @lpVtbl.value.get_behavior.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_unicode_bidi(v : UInt8*) : HRESULT
    @lpVtbl.value.put_unicode_bidi.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_unicode_bidi(p : UInt8**) : HRESULT
    @lpVtbl.value.get_unicode_bidi.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_bottom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_bottom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_right(v : VARIANT) : HRESULT
    @lpVtbl.value.put_right.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ime_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ime_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ime_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ime_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ruby_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ruby_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ruby_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ruby_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ruby_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ruby_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ruby_overhang(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ruby_overhang.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ruby_overhang(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_overhang.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_layout_grid_char(v : VARIANT) : HRESULT
    @lpVtbl.value.put_layout_grid_char.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_layout_grid_char(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_layout_grid_char.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_layout_grid_line(v : VARIANT) : HRESULT
    @lpVtbl.value.put_layout_grid_line.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_layout_grid_line(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_layout_grid_line.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_layout_grid_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_grid_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_grid_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_grid_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_layout_grid_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_grid_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_grid_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_grid_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_layout_grid(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_grid.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_grid(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_grid.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_autospace(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_autospace.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_autospace(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_autospace.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_word_break(v : UInt8*) : HRESULT
    @lpVtbl.value.put_word_break.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_word_break(p : UInt8**) : HRESULT
    @lpVtbl.value.get_word_break.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_line_break(v : UInt8*) : HRESULT
    @lpVtbl.value.put_line_break.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_line_break(p : UInt8**) : HRESULT
    @lpVtbl.value.get_line_break.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_justify(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_justify.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_justify(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_justify.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_justify_trim(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_justify_trim.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_justify_trim(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_justify_trim.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_kashida(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_kashida.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_kashida(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_kashida.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_overflow_x(v : UInt8*) : HRESULT
    @lpVtbl.value.put_overflow_x.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_overflow_x(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow_x.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_overflow_y(v : UInt8*) : HRESULT
    @lpVtbl.value.put_overflow_y.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_overflow_y(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow_y.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_accelerator(v : UInt8*) : HRESULT
    @lpVtbl.value.put_accelerator.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_accelerator(p : UInt8**) : HRESULT
    @lpVtbl.value.get_accelerator.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_layout_flow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_flow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_flow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_flow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_zoom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_zoom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_zoom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_zoom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_word_wrap(v : UInt8*) : HRESULT
    @lpVtbl.value.put_word_wrap.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_word_wrap(p : UInt8**) : HRESULT
    @lpVtbl.value.get_word_wrap.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_underline_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_underline_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_underline_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_underline_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_scrollbar_base_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_base_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_base_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_base_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_face_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_face_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_face_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_face_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar3d_light_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar3d_light_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar3d_light_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar3d_light_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_shadow_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_shadow_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_shadow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_shadow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_highlight_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_highlight_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_highlight_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_highlight_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_dark_shadow_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_dark_shadow_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_dark_shadow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_dark_shadow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_arrow_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_arrow_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_arrow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_arrow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_track_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_track_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_track_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_track_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_writing_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_writing_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_writing_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_writing_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_align_last(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_align_last.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_align_last(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_align_last.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_kashida_space(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_kashida_space.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_kashida_space(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_kashida_space.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_overflow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_overflow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_overflow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_overflow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_min_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_min_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_min_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_min_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_interpolation_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_interpolation_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_interpolation_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_interpolation_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_max_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_max_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_max_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_max_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_min_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_min_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_min_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_min_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_max_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_max_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_max_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_max_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_content(v : UInt8*) : HRESULT
    @lpVtbl.value.put_content.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_content(p : UInt8**) : HRESULT
    @lpVtbl.value.get_content.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_caption_side(v : UInt8*) : HRESULT
    @lpVtbl.value.put_caption_side.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_caption_side(p : UInt8**) : HRESULT
    @lpVtbl.value.get_caption_side.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_counter_increment(v : UInt8*) : HRESULT
    @lpVtbl.value.put_counter_increment.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_counter_increment(p : UInt8**) : HRESULT
    @lpVtbl.value.get_counter_increment.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_counter_reset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_counter_reset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_counter_reset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_counter_reset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_outline(v : UInt8*) : HRESULT
    @lpVtbl.value.put_outline.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_outline(p : UInt8**) : HRESULT
    @lpVtbl.value.get_outline.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_outline_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_outline_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_outline_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_outline_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_outline_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_outline_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_outline_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_outline_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_outline_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_outline_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_outline_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_outline_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_box_sizing(v : UInt8*) : HRESULT
    @lpVtbl.value.put_box_sizing.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_box_sizing(p : UInt8**) : HRESULT
    @lpVtbl.value.get_box_sizing.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_spacing(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_spacing.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_spacing(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_spacing.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_orphans(v : VARIANT) : HRESULT
    @lpVtbl.value.put_orphans.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_orphans(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_orphans.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_widows(v : VARIANT) : HRESULT
    @lpVtbl.value.put_widows.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_widows(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_widows.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_page_break_inside(v : UInt8*) : HRESULT
    @lpVtbl.value.put_page_break_inside.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_page_break_inside(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_inside.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_empty_cells(v : UInt8*) : HRESULT
    @lpVtbl.value.put_empty_cells.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_empty_cells(p : UInt8**) : HRESULT
    @lpVtbl.value.get_empty_cells.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_block_progression(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_block_progression.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_block_progression(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_block_progression.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_quotes(v : UInt8*) : HRESULT
    @lpVtbl.value.put_quotes.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_quotes(p : UInt8**) : HRESULT
    @lpVtbl.value.get_quotes.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_alignment_baseline(v : UInt8*) : HRESULT
    @lpVtbl.value.put_alignment_baseline.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_alignment_baseline(p : UInt8**) : HRESULT
    @lpVtbl.value.get_alignment_baseline.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_baseline_shift(v : VARIANT) : HRESULT
    @lpVtbl.value.put_baseline_shift.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_baseline_shift(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_baseline_shift.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_dominant_baseline(v : UInt8*) : HRESULT
    @lpVtbl.value.put_dominant_baseline.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_dominant_baseline(p : UInt8**) : HRESULT
    @lpVtbl.value.get_dominant_baseline.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_size_adjust(v : VARIANT) : HRESULT
    @lpVtbl.value.put_font_size_adjust.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_font_size_adjust(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_font_size_adjust.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_font_stretch(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_stretch.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_stretch(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_stretch.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_opacity(v : VARIANT) : HRESULT
    @lpVtbl.value.put_opacity.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_opacity(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_opacity.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_clip_path(v : UInt8*) : HRESULT
    @lpVtbl.value.put_clip_path.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_clip_path(p : UInt8**) : HRESULT
    @lpVtbl.value.get_clip_path.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_clip_rule(v : UInt8*) : HRESULT
    @lpVtbl.value.put_clip_rule.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_clip_rule(p : UInt8**) : HRESULT
    @lpVtbl.value.get_clip_rule.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_fill(v : UInt8*) : HRESULT
    @lpVtbl.value.put_fill.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_fill(p : UInt8**) : HRESULT
    @lpVtbl.value.get_fill.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_fill_opacity(v : VARIANT) : HRESULT
    @lpVtbl.value.put_fill_opacity.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_fill_opacity(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_fill_opacity.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_fill_rule(v : UInt8*) : HRESULT
    @lpVtbl.value.put_fill_rule.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_fill_rule(p : UInt8**) : HRESULT
    @lpVtbl.value.get_fill_rule.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_kerning(v : VARIANT) : HRESULT
    @lpVtbl.value.put_kerning.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_kerning(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_kerning.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_marker(v : UInt8*) : HRESULT
    @lpVtbl.value.put_marker.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_marker(p : UInt8**) : HRESULT
    @lpVtbl.value.get_marker.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_marker_end(v : UInt8*) : HRESULT
    @lpVtbl.value.put_marker_end.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_marker_end(p : UInt8**) : HRESULT
    @lpVtbl.value.get_marker_end.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_marker_mid(v : UInt8*) : HRESULT
    @lpVtbl.value.put_marker_mid.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_marker_mid(p : UInt8**) : HRESULT
    @lpVtbl.value.get_marker_mid.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_marker_start(v : UInt8*) : HRESULT
    @lpVtbl.value.put_marker_start.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_marker_start(p : UInt8**) : HRESULT
    @lpVtbl.value.get_marker_start.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_mask(v : UInt8*) : HRESULT
    @lpVtbl.value.put_mask.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_mask(p : UInt8**) : HRESULT
    @lpVtbl.value.get_mask.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_pointer_events(v : UInt8*) : HRESULT
    @lpVtbl.value.put_pointer_events.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_pointer_events(p : UInt8**) : HRESULT
    @lpVtbl.value.get_pointer_events.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_stop_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_stop_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_stop_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_stop_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_stop_opacity(v : VARIANT) : HRESULT
    @lpVtbl.value.put_stop_opacity.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_stop_opacity(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_stop_opacity.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_stroke(v : UInt8*) : HRESULT
    @lpVtbl.value.put_stroke.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_stroke(p : UInt8**) : HRESULT
    @lpVtbl.value.get_stroke.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_stroke_dasharray(v : UInt8*) : HRESULT
    @lpVtbl.value.put_stroke_dasharray.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_stroke_dasharray(p : UInt8**) : HRESULT
    @lpVtbl.value.get_stroke_dasharray.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_stroke_dashoffset(v : VARIANT) : HRESULT
    @lpVtbl.value.put_stroke_dashoffset.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_stroke_dashoffset(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_stroke_dashoffset.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_stroke_linecap(v : UInt8*) : HRESULT
    @lpVtbl.value.put_stroke_linecap.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_stroke_linecap(p : UInt8**) : HRESULT
    @lpVtbl.value.get_stroke_linecap.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_stroke_linejoin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_stroke_linejoin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_stroke_linejoin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_stroke_linejoin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_stroke_miterlimit(v : VARIANT) : HRESULT
    @lpVtbl.value.put_stroke_miterlimit.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_stroke_miterlimit(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_stroke_miterlimit.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_stroke_opacity(v : VARIANT) : HRESULT
    @lpVtbl.value.put_stroke_opacity.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_stroke_opacity(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_stroke_opacity.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_stroke_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_stroke_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_stroke_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_stroke_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_anchor(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_anchor.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_anchor(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_anchor.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_glyph_orientation_horizontal(v : VARIANT) : HRESULT
    @lpVtbl.value.put_glyph_orientation_horizontal.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_glyph_orientation_horizontal(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_glyph_orientation_horizontal.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_glyph_orientation_vertical(v : VARIANT) : HRESULT
    @lpVtbl.value.put_glyph_orientation_vertical.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_glyph_orientation_vertical(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_glyph_orientation_vertical.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_radius(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_radius.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_radius(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_radius.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top_left_radius(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_top_left_radius.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_top_left_radius(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_top_left_radius.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top_right_radius(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_top_right_radius.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_top_right_radius(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_top_right_radius.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_bottom_right_radius(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_bottom_right_radius.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_bottom_right_radius(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_bottom_right_radius.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_bottom_left_radius(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_bottom_left_radius.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_bottom_left_radius(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_bottom_left_radius.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_clip_top(v : VARIANT) : HRESULT
    @lpVtbl.value.put_clip_top.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_clip_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_clip_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_clip_right(v : VARIANT) : HRESULT
    @lpVtbl.value.put_clip_right.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_clip_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_clip_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_clip_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_clip_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_clip_left(v : VARIANT) : HRESULT
    @lpVtbl.value.put_clip_left.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_clip_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_clip_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_css_float(v : UInt8*) : HRESULT
    @lpVtbl.value.put_css_float.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_css_float(p : UInt8**) : HRESULT
    @lpVtbl.value.get_css_float.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_clip(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_clip.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_clip(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_clip.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_origin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_origin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_origin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_origin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_size(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_size.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_size(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_size.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_box_shadow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_box_shadow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_box_shadow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_box_shadow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_transform(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_transform.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_transform(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_transform.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_transform_origin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_transform_origin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_transform_origin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_transform_origin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCSSStyleDeclaration2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ms_scroll_chaining(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_scroll_chaining.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_scroll_chaining(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_scroll_chaining.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_content_zooming(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_content_zooming.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_content_zooming(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_content_zooming.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_content_zoom_snap_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_content_zoom_snap_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_content_zoom_snap_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_content_zoom_snap_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_scroll_rails(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_scroll_rails.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_scroll_rails(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_scroll_rails.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_content_zoom_chaining(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_content_zoom_chaining.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_content_zoom_chaining(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_content_zoom_chaining.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_scroll_snap_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_scroll_snap_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_scroll_snap_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_scroll_snap_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_content_zoom_limit(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_content_zoom_limit.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_content_zoom_limit(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_content_zoom_limit.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_content_zoom_snap(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_content_zoom_snap.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_content_zoom_snap(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_content_zoom_snap.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_content_zoom_snap_points(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_content_zoom_snap_points.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_content_zoom_snap_points(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_content_zoom_snap_points.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_content_zoom_limit_min(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_content_zoom_limit_min.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_content_zoom_limit_min(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_content_zoom_limit_min.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_content_zoom_limit_max(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_content_zoom_limit_max.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_content_zoom_limit_max(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_content_zoom_limit_max.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_scroll_snap_x(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_scroll_snap_x.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_scroll_snap_x(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_scroll_snap_x.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_scroll_snap_y(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_scroll_snap_y.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_scroll_snap_y(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_scroll_snap_y.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_scroll_snap_points_x(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_scroll_snap_points_x.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_scroll_snap_points_x(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_scroll_snap_points_x.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_scroll_snap_points_y(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_scroll_snap_points_y.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_scroll_snap_points_y(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_scroll_snap_points_y.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_grid_column(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_grid_column.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_grid_column(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_grid_column.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_grid_column_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_grid_column_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_grid_column_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_grid_column_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_grid_columns(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_grid_columns.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_grid_columns(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_grid_columns.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_grid_column_span(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_grid_column_span.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_grid_column_span(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_grid_column_span.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_grid_row(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_grid_row.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_grid_row(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_grid_row.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_grid_row_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_grid_row_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_grid_row_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_grid_row_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_grid_rows(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_grid_rows.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_grid_rows(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_grid_rows.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_grid_row_span(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_grid_row_span.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_grid_row_span(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_grid_row_span.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_wrap_through(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_wrap_through.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_wrap_through(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_wrap_through.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_wrap_margin(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_wrap_margin.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_wrap_margin(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_wrap_margin.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_wrap_flow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_wrap_flow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_wrap_flow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_wrap_flow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_animation_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_animation_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_animation_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_animation_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_animation_duration(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_animation_duration.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_animation_duration(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_animation_duration.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_animation_timing_function(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_animation_timing_function.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_animation_timing_function(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_animation_timing_function.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_animation_delay(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_animation_delay.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_animation_delay(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_animation_delay.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_animation_direction(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_animation_direction.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_animation_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_animation_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_animation_play_state(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_animation_play_state.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_animation_play_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_animation_play_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_animation_iteration_count(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_animation_iteration_count.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_animation_iteration_count(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_animation_iteration_count.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_animation(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_animation.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_animation(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_animation.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_animation_fill_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_animation_fill_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_animation_fill_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_animation_fill_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_color_interpolation_filters(v : UInt8*) : HRESULT
    @lpVtbl.value.put_color_interpolation_filters.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_color_interpolation_filters(p : UInt8**) : HRESULT
    @lpVtbl.value.get_color_interpolation_filters.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_column_count(v : VARIANT) : HRESULT
    @lpVtbl.value.put_column_count.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_column_count(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_column_count.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_column_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_column_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_column_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_column_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_column_gap(v : VARIANT) : HRESULT
    @lpVtbl.value.put_column_gap.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_column_gap(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_column_gap.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_column_fill(v : UInt8*) : HRESULT
    @lpVtbl.value.put_column_fill.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_column_fill(p : UInt8**) : HRESULT
    @lpVtbl.value.get_column_fill.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_column_span(v : UInt8*) : HRESULT
    @lpVtbl.value.put_column_span.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_column_span(p : UInt8**) : HRESULT
    @lpVtbl.value.get_column_span.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_columns(v : UInt8*) : HRESULT
    @lpVtbl.value.put_columns.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_columns(p : UInt8**) : HRESULT
    @lpVtbl.value.get_columns.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_column_rule(v : UInt8*) : HRESULT
    @lpVtbl.value.put_column_rule.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_column_rule(p : UInt8**) : HRESULT
    @lpVtbl.value.get_column_rule.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_column_rule_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_column_rule_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_column_rule_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_column_rule_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_column_rule_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_column_rule_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_column_rule_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_column_rule_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_column_rule_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_column_rule_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_column_rule_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_column_rule_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_break_before(v : UInt8*) : HRESULT
    @lpVtbl.value.put_break_before.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_break_before(p : UInt8**) : HRESULT
    @lpVtbl.value.get_break_before.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_break_after(v : UInt8*) : HRESULT
    @lpVtbl.value.put_break_after.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_break_after(p : UInt8**) : HRESULT
    @lpVtbl.value.get_break_after.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_break_inside(v : UInt8*) : HRESULT
    @lpVtbl.value.put_break_inside.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_break_inside(p : UInt8**) : HRESULT
    @lpVtbl.value.get_break_inside.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_flood_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_flood_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_flood_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_flood_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_flood_opacity(v : VARIANT) : HRESULT
    @lpVtbl.value.put_flood_opacity.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_flood_opacity(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_flood_opacity.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_lighting_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_lighting_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_lighting_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_lighting_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_scroll_limit_x_min(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_scroll_limit_x_min.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_scroll_limit_x_min(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_scroll_limit_x_min.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_scroll_limit_y_min(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_scroll_limit_y_min.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_scroll_limit_y_min(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_scroll_limit_y_min.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_scroll_limit_x_max(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_scroll_limit_x_max.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_scroll_limit_x_max(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_scroll_limit_x_max.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_scroll_limit_y_max(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_scroll_limit_y_max.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_scroll_limit_y_max(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_scroll_limit_y_max.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_scroll_limit(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_scroll_limit.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_scroll_limit(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_scroll_limit.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_shadow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_shadow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_shadow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_shadow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_flow_from(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_flow_from.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_flow_from(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_flow_from.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_flow_into(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_flow_into.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_flow_into(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_flow_into.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_hyphens(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_hyphens.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_hyphens(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_hyphens.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_hyphenate_limit_zone(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_hyphenate_limit_zone.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_hyphenate_limit_zone(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_hyphenate_limit_zone.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_hyphenate_limit_chars(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_hyphenate_limit_chars.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_hyphenate_limit_chars(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_hyphenate_limit_chars.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_hyphenate_limit_lines(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_hyphenate_limit_lines.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_hyphenate_limit_lines(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_hyphenate_limit_lines.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_high_contrast_adjust(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_high_contrast_adjust.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_high_contrast_adjust(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_high_contrast_adjust.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_enable_background(v : UInt8*) : HRESULT
    @lpVtbl.value.put_enable_background.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_enable_background(p : UInt8**) : HRESULT
    @lpVtbl.value.get_enable_background.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_font_feature_settings(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_font_feature_settings.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_font_feature_settings(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_font_feature_settings.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_user_select(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_user_select.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_user_select(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_user_select.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_overflow_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_overflow_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_overflow_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_overflow_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_transform_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_transform_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_transform_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_transform_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_backface_visibility(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_backface_visibility.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_backface_visibility(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_backface_visibility.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_perspective(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_perspective.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_perspective(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_perspective.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_perspective_origin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_perspective_origin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_perspective_origin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_perspective_origin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_transition_property(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_transition_property.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_transition_property(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_transition_property.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_transition_duration(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_transition_duration.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_transition_duration(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_transition_duration.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_transition_timing_function(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_transition_timing_function.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_transition_timing_function(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_transition_timing_function.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_transition_delay(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_transition_delay.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_transition_delay(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_transition_delay.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_transition(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_transition.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_transition(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_transition.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_touch_action(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_touch_action.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_touch_action(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_touch_action.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_scroll_translation(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_scroll_translation.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_scroll_translation(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_scroll_translation.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_flex(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_flex.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_flex(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_flex.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_flex_positive(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_flex_positive.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_flex_positive(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_flex_positive.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_flex_negative(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_flex_negative.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_flex_negative(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_flex_negative.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_flex_preferred_size(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_flex_preferred_size.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_flex_preferred_size(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_flex_preferred_size.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_flex_flow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_flex_flow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_flex_flow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_flex_flow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_flex_direction(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_flex_direction.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_flex_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_flex_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_flex_wrap(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_flex_wrap.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_flex_wrap(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_flex_wrap.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_flex_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_flex_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_flex_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_flex_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_flex_item_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_flex_item_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_flex_item_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_flex_item_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_flex_pack(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_flex_pack.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_flex_pack(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_flex_pack.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_flex_line_pack(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_flex_line_pack.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_flex_line_pack(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_flex_line_pack.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_flex_order(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_flex_order.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_flex_order(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_flex_order.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_touch_select(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_touch_select.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_touch_select(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_touch_select.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_transform(v : UInt8*) : HRESULT
    @lpVtbl.value.put_transform.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_transform(p : UInt8**) : HRESULT
    @lpVtbl.value.get_transform.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_transform_origin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_transform_origin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_transform_origin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_transform_origin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_transform_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_transform_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_transform_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_transform_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_backface_visibility(v : UInt8*) : HRESULT
    @lpVtbl.value.put_backface_visibility.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_backface_visibility(p : UInt8**) : HRESULT
    @lpVtbl.value.get_backface_visibility.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_perspective(v : VARIANT) : HRESULT
    @lpVtbl.value.put_perspective.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_perspective(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_perspective.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_perspective_origin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_perspective_origin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_perspective_origin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_perspective_origin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_transition_property(v : UInt8*) : HRESULT
    @lpVtbl.value.put_transition_property.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_transition_property(p : UInt8**) : HRESULT
    @lpVtbl.value.get_transition_property.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_transition_duration(v : UInt8*) : HRESULT
    @lpVtbl.value.put_transition_duration.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_transition_duration(p : UInt8**) : HRESULT
    @lpVtbl.value.get_transition_duration.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_transition_timing_function(v : UInt8*) : HRESULT
    @lpVtbl.value.put_transition_timing_function.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_transition_timing_function(p : UInt8**) : HRESULT
    @lpVtbl.value.get_transition_timing_function.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_transition_delay(v : UInt8*) : HRESULT
    @lpVtbl.value.put_transition_delay.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_transition_delay(p : UInt8**) : HRESULT
    @lpVtbl.value.get_transition_delay.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_transition(v : UInt8*) : HRESULT
    @lpVtbl.value.put_transition.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_transition(p : UInt8**) : HRESULT
    @lpVtbl.value.get_transition.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_feature_settings(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_feature_settings.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_feature_settings(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_feature_settings.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_animation_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_animation_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_animation_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_animation_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_animation_duration(v : UInt8*) : HRESULT
    @lpVtbl.value.put_animation_duration.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_animation_duration(p : UInt8**) : HRESULT
    @lpVtbl.value.get_animation_duration.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_animation_timing_function(v : UInt8*) : HRESULT
    @lpVtbl.value.put_animation_timing_function.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_animation_timing_function(p : UInt8**) : HRESULT
    @lpVtbl.value.get_animation_timing_function.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_animation_delay(v : UInt8*) : HRESULT
    @lpVtbl.value.put_animation_delay.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_animation_delay(p : UInt8**) : HRESULT
    @lpVtbl.value.get_animation_delay.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_animation_direction(v : UInt8*) : HRESULT
    @lpVtbl.value.put_animation_direction.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_animation_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_animation_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_animation_play_state(v : UInt8*) : HRESULT
    @lpVtbl.value.put_animation_play_state.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_animation_play_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_animation_play_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_animation_iteration_count(v : UInt8*) : HRESULT
    @lpVtbl.value.put_animation_iteration_count.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_animation_iteration_count(p : UInt8**) : HRESULT
    @lpVtbl.value.get_animation_iteration_count.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_animation(v : UInt8*) : HRESULT
    @lpVtbl.value.put_animation.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_animation(p : UInt8**) : HRESULT
    @lpVtbl.value.get_animation.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_animation_fill_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_animation_fill_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_animation_fill_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_animation_fill_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCSSStyleDeclaration3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_flex(v : UInt8*) : HRESULT
    @lpVtbl.value.put_flex.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_flex(p : UInt8**) : HRESULT
    @lpVtbl.value.get_flex.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_flex_direction(v : UInt8*) : HRESULT
    @lpVtbl.value.put_flex_direction.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_flex_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_flex_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_flex_wrap(v : UInt8*) : HRESULT
    @lpVtbl.value.put_flex_wrap.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_flex_wrap(p : UInt8**) : HRESULT
    @lpVtbl.value.get_flex_wrap.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_flex_flow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_flex_flow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_flex_flow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_flex_flow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_flex_grow(v : VARIANT) : HRESULT
    @lpVtbl.value.put_flex_grow.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_flex_grow(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_flex_grow.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_flex_shrink(v : VARIANT) : HRESULT
    @lpVtbl.value.put_flex_shrink.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_flex_shrink(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_flex_shrink.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_flex_basis(v : VARIANT) : HRESULT
    @lpVtbl.value.put_flex_basis.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_flex_basis(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_flex_basis.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_justify_content(v : UInt8*) : HRESULT
    @lpVtbl.value.put_justify_content.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_justify_content(p : UInt8**) : HRESULT
    @lpVtbl.value.get_justify_content.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_align_items(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align_items.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align_items(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align_items.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_align_self(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align_self.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align_self(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align_self.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_align_content(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align_content.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align_content(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align_content.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_image(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_image.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_image(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_image.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_image_source(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_image_source.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_image_source(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_image_source.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_image_slice(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_image_slice.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_image_slice(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_image_slice.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_image_width(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_image_width.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_image_width(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_image_width.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_image_outset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_image_outset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_image_outset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_image_outset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_image_repeat(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_image_repeat.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_image_repeat(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_image_repeat.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_ime_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_ime_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_ime_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_ime_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_text_combine_horizontal(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_text_combine_horizontal.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_text_combine_horizontal(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_text_combine_horizontal.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_touch_action(v : UInt8*) : HRESULT
    @lpVtbl.value.put_touch_action.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_touch_action(p : UInt8**) : HRESULT
    @lpVtbl.value.get_touch_action.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCSSStyleDeclaration4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_webkit_appearance(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_appearance.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_appearance(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_appearance.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_user_select(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_user_select.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_user_select(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_user_select.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_box_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_box_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_box_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_box_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_box_ordinal_group(v : VARIANT) : HRESULT
    @lpVtbl.value.put_webkit_box_ordinal_group.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_webkit_box_ordinal_group(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_webkit_box_ordinal_group.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_webkit_box_pack(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_box_pack.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_box_pack(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_box_pack.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_box_flex(v : VARIANT) : HRESULT
    @lpVtbl.value.put_webkit_box_flex.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_webkit_box_flex(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_webkit_box_flex.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_webkit_box_orient(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_box_orient.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_box_orient(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_box_orient.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_box_direction(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_box_direction.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_box_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_box_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_transform(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_transform.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_transform(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_transform.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_background_size(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_background_size.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_background_size(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_background_size.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_backface_visibility(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_backface_visibility.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_backface_visibility(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_backface_visibility.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_animation(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_animation.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_animation(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_animation.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_transition(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_transition.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_transition(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_transition.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_animation_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_animation_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_animation_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_animation_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_animation_duration(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_animation_duration.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_animation_duration(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_animation_duration.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_animation_timing_function(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_animation_timing_function.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_animation_timing_function(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_animation_timing_function.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_animation_delay(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_animation_delay.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_animation_delay(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_animation_delay.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_animation_iteration_count(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_animation_iteration_count.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_animation_iteration_count(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_animation_iteration_count.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_animation_direction(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_animation_direction.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_animation_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_animation_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_animation_play_state(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_animation_play_state.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_animation_play_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_animation_play_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_transition_property(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_transition_property.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_transition_property(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_transition_property.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_transition_duration(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_transition_duration.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_transition_duration(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_transition_duration.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_transition_timing_function(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_transition_timing_function.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_transition_timing_function(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_transition_timing_function.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_transition_delay(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_transition_delay.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_transition_delay(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_transition_delay.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_background_attachment(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_background_attachment.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_background_attachment(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_background_attachment.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_background_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_webkit_background_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_webkit_background_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_webkit_background_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_webkit_background_clip(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_background_clip.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_background_clip(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_background_clip.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_background_image(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_background_image.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_background_image(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_background_image.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_background_repeat(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_background_repeat.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_background_repeat(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_background_repeat.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_background_origin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_background_origin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_background_origin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_background_origin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_background_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_background_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_background_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_background_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_background_position_x(v : VARIANT) : HRESULT
    @lpVtbl.value.put_webkit_background_position_x.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_webkit_background_position_x(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_webkit_background_position_x.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_webkit_background_position_y(v : VARIANT) : HRESULT
    @lpVtbl.value.put_webkit_background_position_y.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_webkit_background_position_y(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_webkit_background_position_y.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_webkit_background(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_background.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_background(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_background.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_transform_origin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_transform_origin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_transform_origin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_transform_origin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_text_size_adjust(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ms_text_size_adjust.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ms_text_size_adjust(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ms_text_size_adjust.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_webkit_text_size_adjust(v : VARIANT) : HRESULT
    @lpVtbl.value.put_webkit_text_size_adjust.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_webkit_text_size_adjust(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_webkit_text_size_adjust.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_webkit_border_image(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_border_image.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_border_image(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_border_image.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_border_image_source(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_border_image_source.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_border_image_source(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_border_image_source.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_border_image_slice(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_border_image_slice.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_border_image_slice(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_border_image_slice.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_border_image_width(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_border_image_width.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_border_image_width(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_border_image_width.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_border_image_outset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_border_image_outset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_border_image_outset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_border_image_outset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_border_image_repeat(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_border_image_repeat.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_border_image_repeat(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_border_image_repeat.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_box_sizing(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_box_sizing.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_box_sizing(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_box_sizing.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_webkit_animation_fill_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_webkit_animation_fill_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_webkit_animation_fill_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_webkit_animation_fill_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStyleEnabled
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def ms_get_property_enabled(name : UInt8*, p : Int16*) : HRESULT
    @lpVtbl.value.ms_get_property_enabled.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(name, p)
  end
  def ms_put_property_enabled(name : UInt8*, b : Int16) : HRESULT
    @lpVtbl.value.ms_put_property_enabled.unsafe_as(Proc(UInt8*, Int16, HRESULT)).call(name, b)
  end
end
struct LibWin32::DispHTMLCSSStyleDeclaration
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLStyle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_font_family(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_family.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_family(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_family.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_variant(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_variant.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_variant(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_variant.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_weight(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_weight.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_weight(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_weight.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_size(v : VARIANT) : HRESULT
    @lpVtbl.value.put_font_size.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_font_size(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_font_size.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_font(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_background(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_background_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_background_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_background_image(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_image.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_image(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_image.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_repeat(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_repeat.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_repeat(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_repeat.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_attachment(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_attachment.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_attachment(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_attachment.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_position_x(v : VARIANT) : HRESULT
    @lpVtbl.value.put_background_position_x.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_background_position_x(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_position_x.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_background_position_y(v : VARIANT) : HRESULT
    @lpVtbl.value.put_background_position_y.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_background_position_y(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_position_y.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_word_spacing(v : VARIANT) : HRESULT
    @lpVtbl.value.put_word_spacing.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_word_spacing(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_word_spacing.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_letter_spacing(v : VARIANT) : HRESULT
    @lpVtbl.value.put_letter_spacing.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_letter_spacing(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_letter_spacing.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_decoration(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_decoration.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_decoration(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_decoration.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_decoration_none(v : Int16) : HRESULT
    @lpVtbl.value.put_text_decoration_none.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_text_decoration_none(p : Int16*) : HRESULT
    @lpVtbl.value.get_text_decoration_none.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_text_decoration_underline(v : Int16) : HRESULT
    @lpVtbl.value.put_text_decoration_underline.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_text_decoration_underline(p : Int16*) : HRESULT
    @lpVtbl.value.get_text_decoration_underline.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_text_decoration_overline(v : Int16) : HRESULT
    @lpVtbl.value.put_text_decoration_overline.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_text_decoration_overline(p : Int16*) : HRESULT
    @lpVtbl.value.get_text_decoration_overline.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_text_decoration_line_through(v : Int16) : HRESULT
    @lpVtbl.value.put_text_decoration_line_through.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_text_decoration_line_through(p : Int16*) : HRESULT
    @lpVtbl.value.get_text_decoration_line_through.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_text_decoration_blink(v : Int16) : HRESULT
    @lpVtbl.value.put_text_decoration_blink.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_text_decoration_blink(p : Int16*) : HRESULT
    @lpVtbl.value.get_text_decoration_blink.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_vertical_align(v : VARIANT) : HRESULT
    @lpVtbl.value.put_vertical_align.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_vertical_align(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_vertical_align.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_transform(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_transform.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_transform(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_transform.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_indent(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_indent.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_indent(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_indent.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_line_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_line_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_line_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_line_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_top(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_top.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_right(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_right.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_bottom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_bottom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_left(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_left.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_margin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_margin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_margin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_padding_top(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_top.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding_right(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_right.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding_bottom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_bottom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding_left(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_left.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding(v : UInt8*) : HRESULT
    @lpVtbl.value.put_padding.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_padding(p : UInt8**) : HRESULT
    @lpVtbl.value.get_padding.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_top.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_top(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_top.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_right(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_right.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_right(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_right.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_bottom(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_bottom.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_bottom(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_bottom.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_left(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_left.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_left(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_left.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_color(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_color.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_color(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_color.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_top_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_top_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_top_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_right_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_right_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_right_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_right_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_bottom_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_bottom_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_bottom_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_bottom_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_left_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_left_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_left_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_left_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_width(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_width.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_width(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_width.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_top_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_top_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_top_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_right_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_right_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_right_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_right_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_bottom_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_bottom_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_bottom_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_bottom_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_left_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_left_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_left_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_left_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_top_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_top_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_top_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_right_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_right_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_right_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_right_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_bottom_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_bottom_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_bottom_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_bottom_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_left_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_left_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_left_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_left_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_style_float(v : UInt8*) : HRESULT
    @lpVtbl.value.put_style_float.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_style_float(p : UInt8**) : HRESULT
    @lpVtbl.value.get_style_float.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_clear(v : UInt8*) : HRESULT
    @lpVtbl.value.put_clear.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_clear(p : UInt8**) : HRESULT
    @lpVtbl.value.get_clear.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_display(v : UInt8*) : HRESULT
    @lpVtbl.value.put_display.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_display(p : UInt8**) : HRESULT
    @lpVtbl.value.get_display.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_visibility(v : UInt8*) : HRESULT
    @lpVtbl.value.put_visibility.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_visibility(p : UInt8**) : HRESULT
    @lpVtbl.value.get_visibility.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style_image(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style_image.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style_image(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_image.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_white_space(v : UInt8*) : HRESULT
    @lpVtbl.value.put_white_space.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_white_space(p : UInt8**) : HRESULT
    @lpVtbl.value.get_white_space.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_top(v : VARIANT) : HRESULT
    @lpVtbl.value.put_top.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_left(v : VARIANT) : HRESULT
    @lpVtbl.value.put_left.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_z_index(v : VARIANT) : HRESULT
    @lpVtbl.value.put_z_index.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_z_index(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_z_index.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_overflow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_overflow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_overflow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_page_break_before(v : UInt8*) : HRESULT
    @lpVtbl.value.put_page_break_before.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_page_break_before(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_before.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_page_break_after(v : UInt8*) : HRESULT
    @lpVtbl.value.put_page_break_after.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_page_break_after(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_after.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_css_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_css_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_css_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_css_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_pixel_top(v : Int32) : HRESULT
    @lpVtbl.value.put_pixel_top.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_pixel_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_pixel_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_pixel_left(v : Int32) : HRESULT
    @lpVtbl.value.put_pixel_left.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_pixel_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_pixel_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_pixel_width(v : Int32) : HRESULT
    @lpVtbl.value.put_pixel_width.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_pixel_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_pixel_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_pixel_height(v : Int32) : HRESULT
    @lpVtbl.value.put_pixel_height.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_pixel_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_pixel_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_pos_top(v : Float32) : HRESULT
    @lpVtbl.value.put_pos_top.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_pos_top(p : Float32*) : HRESULT
    @lpVtbl.value.get_pos_top.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_pos_left(v : Float32) : HRESULT
    @lpVtbl.value.put_pos_left.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_pos_left(p : Float32*) : HRESULT
    @lpVtbl.value.get_pos_left.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_pos_width(v : Float32) : HRESULT
    @lpVtbl.value.put_pos_width.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_pos_width(p : Float32*) : HRESULT
    @lpVtbl.value.get_pos_width.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_pos_height(v : Float32) : HRESULT
    @lpVtbl.value.put_pos_height.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_pos_height(p : Float32*) : HRESULT
    @lpVtbl.value.get_pos_height.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_cursor(v : UInt8*) : HRESULT
    @lpVtbl.value.put_cursor.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_cursor(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cursor.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_clip(v : UInt8*) : HRESULT
    @lpVtbl.value.put_clip.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_clip(p : UInt8**) : HRESULT
    @lpVtbl.value.get_clip.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_filter(v : UInt8*) : HRESULT
    @lpVtbl.value.put_filter.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_filter(p : UInt8**) : HRESULT
    @lpVtbl.value.get_filter.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def set_attribute(strattributename : UInt8*, attributevalue : VARIANT, lflags : Int32) : HRESULT
    @lpVtbl.value.set_attribute.unsafe_as(Proc(UInt8*, VARIANT, Int32, HRESULT)).call(strattributename, attributevalue, lflags)
  end
  def get_attribute(strattributename : UInt8*, lflags : Int32, attributevalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_attribute.unsafe_as(Proc(UInt8*, Int32, VARIANT*, HRESULT)).call(strattributename, lflags, attributevalue)
  end
  def remove_attribute(strattributename : UInt8*, lflags : Int32, pfsuccess : Int16*) : HRESULT
    @lpVtbl.value.remove_attribute.unsafe_as(Proc(UInt8*, Int32, Int16*, HRESULT)).call(strattributename, lflags, pfsuccess)
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
end
struct LibWin32::IHTMLStyle2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_table_layout(v : UInt8*) : HRESULT
    @lpVtbl.value.put_table_layout.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_table_layout(p : UInt8**) : HRESULT
    @lpVtbl.value.get_table_layout.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_collapse(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_collapse.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_collapse(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_collapse.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_direction(v : UInt8*) : HRESULT
    @lpVtbl.value.put_direction.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_behavior(v : UInt8*) : HRESULT
    @lpVtbl.value.put_behavior.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_behavior(p : UInt8**) : HRESULT
    @lpVtbl.value.get_behavior.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def set_expression(propname : UInt8*, expression : UInt8*, language : UInt8*) : HRESULT
    @lpVtbl.value.set_expression.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, HRESULT)).call(propname, expression, language)
  end
  def get_expression(propname : UInt8*, expression : VARIANT*) : HRESULT
    @lpVtbl.value.get_expression.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(propname, expression)
  end
  def remove_expression(propname : UInt8*, pfsuccess : Int16*) : HRESULT
    @lpVtbl.value.remove_expression.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(propname, pfsuccess)
  end
  def put_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_unicode_bidi(v : UInt8*) : HRESULT
    @lpVtbl.value.put_unicode_bidi.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_unicode_bidi(p : UInt8**) : HRESULT
    @lpVtbl.value.get_unicode_bidi.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_bottom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_bottom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_right(v : VARIANT) : HRESULT
    @lpVtbl.value.put_right.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_pixel_bottom(v : Int32) : HRESULT
    @lpVtbl.value.put_pixel_bottom.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_pixel_bottom(p : Int32*) : HRESULT
    @lpVtbl.value.get_pixel_bottom.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_pixel_right(v : Int32) : HRESULT
    @lpVtbl.value.put_pixel_right.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_pixel_right(p : Int32*) : HRESULT
    @lpVtbl.value.get_pixel_right.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_pos_bottom(v : Float32) : HRESULT
    @lpVtbl.value.put_pos_bottom.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_pos_bottom(p : Float32*) : HRESULT
    @lpVtbl.value.get_pos_bottom.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_pos_right(v : Float32) : HRESULT
    @lpVtbl.value.put_pos_right.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_pos_right(p : Float32*) : HRESULT
    @lpVtbl.value.get_pos_right.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_ime_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ime_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ime_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ime_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ruby_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ruby_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ruby_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ruby_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ruby_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ruby_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ruby_overhang(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ruby_overhang.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ruby_overhang(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_overhang.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_layout_grid_char(v : VARIANT) : HRESULT
    @lpVtbl.value.put_layout_grid_char.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_layout_grid_char(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_layout_grid_char.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_layout_grid_line(v : VARIANT) : HRESULT
    @lpVtbl.value.put_layout_grid_line.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_layout_grid_line(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_layout_grid_line.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_layout_grid_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_grid_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_grid_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_grid_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_layout_grid_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_grid_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_grid_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_grid_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_layout_grid(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_grid.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_grid(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_grid.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_word_break(v : UInt8*) : HRESULT
    @lpVtbl.value.put_word_break.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_word_break(p : UInt8**) : HRESULT
    @lpVtbl.value.get_word_break.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_line_break(v : UInt8*) : HRESULT
    @lpVtbl.value.put_line_break.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_line_break(p : UInt8**) : HRESULT
    @lpVtbl.value.get_line_break.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_justify(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_justify.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_justify(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_justify.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_justify_trim(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_justify_trim.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_justify_trim(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_justify_trim.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_kashida(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_kashida.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_kashida(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_kashida.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_autospace(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_autospace.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_autospace(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_autospace.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_overflow_x(v : UInt8*) : HRESULT
    @lpVtbl.value.put_overflow_x.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_overflow_x(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow_x.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_overflow_y(v : UInt8*) : HRESULT
    @lpVtbl.value.put_overflow_y.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_overflow_y(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow_y.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_accelerator(v : UInt8*) : HRESULT
    @lpVtbl.value.put_accelerator.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_accelerator(p : UInt8**) : HRESULT
    @lpVtbl.value.get_accelerator.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStyle3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_layout_flow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_flow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_flow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_flow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_zoom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_zoom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_zoom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_zoom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_word_wrap(v : UInt8*) : HRESULT
    @lpVtbl.value.put_word_wrap.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_word_wrap(p : UInt8**) : HRESULT
    @lpVtbl.value.get_word_wrap.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_underline_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_underline_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_underline_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_underline_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_scrollbar_base_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_base_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_base_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_base_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_face_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_face_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_face_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_face_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar3d_light_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar3d_light_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar3d_light_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar3d_light_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_shadow_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_shadow_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_shadow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_shadow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_highlight_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_highlight_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_highlight_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_highlight_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_dark_shadow_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_dark_shadow_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_dark_shadow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_dark_shadow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_arrow_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_arrow_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_arrow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_arrow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_track_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_track_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_track_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_track_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_writing_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_writing_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_writing_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_writing_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_align_last(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_align_last.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_align_last(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_align_last.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_kashida_space(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_kashida_space.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_kashida_space(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_kashida_space.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStyle4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_text_overflow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_overflow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_overflow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_overflow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_min_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_min_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_min_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_min_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStyle5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ms_interpolation_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_interpolation_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_interpolation_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_interpolation_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_max_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_max_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_max_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_max_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_min_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_min_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_min_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_min_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_max_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_max_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_max_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_max_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStyle6
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_content(v : UInt8*) : HRESULT
    @lpVtbl.value.put_content.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_content(p : UInt8**) : HRESULT
    @lpVtbl.value.get_content.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_caption_side(v : UInt8*) : HRESULT
    @lpVtbl.value.put_caption_side.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_caption_side(p : UInt8**) : HRESULT
    @lpVtbl.value.get_caption_side.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_counter_increment(v : UInt8*) : HRESULT
    @lpVtbl.value.put_counter_increment.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_counter_increment(p : UInt8**) : HRESULT
    @lpVtbl.value.get_counter_increment.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_counter_reset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_counter_reset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_counter_reset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_counter_reset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_outline(v : UInt8*) : HRESULT
    @lpVtbl.value.put_outline.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_outline(p : UInt8**) : HRESULT
    @lpVtbl.value.get_outline.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_outline_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_outline_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_outline_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_outline_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_outline_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_outline_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_outline_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_outline_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_outline_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_outline_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_outline_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_outline_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_box_sizing(v : UInt8*) : HRESULT
    @lpVtbl.value.put_box_sizing.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_box_sizing(p : UInt8**) : HRESULT
    @lpVtbl.value.get_box_sizing.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_spacing(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_spacing.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_spacing(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_spacing.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_orphans(v : VARIANT) : HRESULT
    @lpVtbl.value.put_orphans.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_orphans(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_orphans.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_widows(v : VARIANT) : HRESULT
    @lpVtbl.value.put_widows.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_widows(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_widows.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_page_break_inside(v : UInt8*) : HRESULT
    @lpVtbl.value.put_page_break_inside.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_page_break_inside(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_inside.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_empty_cells(v : UInt8*) : HRESULT
    @lpVtbl.value.put_empty_cells.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_empty_cells(p : UInt8**) : HRESULT
    @lpVtbl.value.get_empty_cells.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_block_progression(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_block_progression.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_block_progression(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_block_progression.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_quotes(v : UInt8*) : HRESULT
    @lpVtbl.value.put_quotes.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_quotes(p : UInt8**) : HRESULT
    @lpVtbl.value.get_quotes.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLRuleStyle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_font_family(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_family.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_family(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_family.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_variant(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_variant.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_variant(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_variant.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_weight(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font_weight.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font_weight(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_weight.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font_size(v : VARIANT) : HRESULT
    @lpVtbl.value.put_font_size.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_font_size(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_font_size.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_font(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_background(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_background_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_background_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_background_image(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_image.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_image(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_image.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_repeat(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_repeat.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_repeat(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_repeat.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_attachment(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_attachment.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_attachment(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_attachment.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_background_position_x(v : VARIANT) : HRESULT
    @lpVtbl.value.put_background_position_x.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_background_position_x(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_position_x.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_background_position_y(v : VARIANT) : HRESULT
    @lpVtbl.value.put_background_position_y.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_background_position_y(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_position_y.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_word_spacing(v : VARIANT) : HRESULT
    @lpVtbl.value.put_word_spacing.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_word_spacing(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_word_spacing.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_letter_spacing(v : VARIANT) : HRESULT
    @lpVtbl.value.put_letter_spacing.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_letter_spacing(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_letter_spacing.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_decoration(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_decoration.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_decoration(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_decoration.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_decoration_none(v : Int16) : HRESULT
    @lpVtbl.value.put_text_decoration_none.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_text_decoration_none(p : Int16*) : HRESULT
    @lpVtbl.value.get_text_decoration_none.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_text_decoration_underline(v : Int16) : HRESULT
    @lpVtbl.value.put_text_decoration_underline.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_text_decoration_underline(p : Int16*) : HRESULT
    @lpVtbl.value.get_text_decoration_underline.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_text_decoration_overline(v : Int16) : HRESULT
    @lpVtbl.value.put_text_decoration_overline.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_text_decoration_overline(p : Int16*) : HRESULT
    @lpVtbl.value.get_text_decoration_overline.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_text_decoration_line_through(v : Int16) : HRESULT
    @lpVtbl.value.put_text_decoration_line_through.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_text_decoration_line_through(p : Int16*) : HRESULT
    @lpVtbl.value.get_text_decoration_line_through.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_text_decoration_blink(v : Int16) : HRESULT
    @lpVtbl.value.put_text_decoration_blink.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_text_decoration_blink(p : Int16*) : HRESULT
    @lpVtbl.value.get_text_decoration_blink.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_vertical_align(v : VARIANT) : HRESULT
    @lpVtbl.value.put_vertical_align.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_vertical_align(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_vertical_align.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_transform(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_transform.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_transform(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_transform.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_indent(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_indent.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_indent(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_indent.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_line_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_line_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_line_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_line_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_top(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_top.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_right(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_right.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_bottom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_bottom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_left(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_left.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_margin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_margin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_margin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_padding_top(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_top.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding_right(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_right.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding_bottom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_bottom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding_left(v : VARIANT) : HRESULT
    @lpVtbl.value.put_padding_left.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_padding_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_padding(v : UInt8*) : HRESULT
    @lpVtbl.value.put_padding.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_padding(p : UInt8**) : HRESULT
    @lpVtbl.value.get_padding.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_top.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_top(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_top.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_right(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_right.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_right(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_right.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_bottom(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_bottom.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_bottom(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_bottom.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_left(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_left.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_left(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_left.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_color(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_color.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_color(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_color.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_top_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_top_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_top_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_right_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_right_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_right_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_right_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_bottom_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_bottom_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_bottom_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_bottom_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_left_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_left_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_left_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_left_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_width(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_width.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_width(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_width.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_top_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_top_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_top_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_right_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_right_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_right_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_right_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_bottom_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_bottom_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_bottom_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_bottom_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_left_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_left_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_left_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_left_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_top_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_top_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_top_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_top_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_right_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_right_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_right_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_right_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_bottom_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_bottom_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_bottom_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_bottom_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_left_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_left_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_left_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_left_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_style_float(v : UInt8*) : HRESULT
    @lpVtbl.value.put_style_float.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_style_float(p : UInt8**) : HRESULT
    @lpVtbl.value.get_style_float.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_clear(v : UInt8*) : HRESULT
    @lpVtbl.value.put_clear.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_clear(p : UInt8**) : HRESULT
    @lpVtbl.value.get_clear.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_display(v : UInt8*) : HRESULT
    @lpVtbl.value.put_display.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_display(p : UInt8**) : HRESULT
    @lpVtbl.value.get_display.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_visibility(v : UInt8*) : HRESULT
    @lpVtbl.value.put_visibility.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_visibility(p : UInt8**) : HRESULT
    @lpVtbl.value.get_visibility.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style_image(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style_image.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style_image(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_image.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_list_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_list_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_list_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_white_space(v : UInt8*) : HRESULT
    @lpVtbl.value.put_white_space.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_white_space(p : UInt8**) : HRESULT
    @lpVtbl.value.get_white_space.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_top(v : VARIANT) : HRESULT
    @lpVtbl.value.put_top.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_left(v : VARIANT) : HRESULT
    @lpVtbl.value.put_left.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_z_index(v : VARIANT) : HRESULT
    @lpVtbl.value.put_z_index.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_z_index(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_z_index.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_overflow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_overflow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_overflow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_page_break_before(v : UInt8*) : HRESULT
    @lpVtbl.value.put_page_break_before.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_page_break_before(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_before.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_page_break_after(v : UInt8*) : HRESULT
    @lpVtbl.value.put_page_break_after.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_page_break_after(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_after.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_css_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_css_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_css_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_css_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_cursor(v : UInt8*) : HRESULT
    @lpVtbl.value.put_cursor.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_cursor(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cursor.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_clip(v : UInt8*) : HRESULT
    @lpVtbl.value.put_clip.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_clip(p : UInt8**) : HRESULT
    @lpVtbl.value.get_clip.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_filter(v : UInt8*) : HRESULT
    @lpVtbl.value.put_filter.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_filter(p : UInt8**) : HRESULT
    @lpVtbl.value.get_filter.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def set_attribute(strattributename : UInt8*, attributevalue : VARIANT, lflags : Int32) : HRESULT
    @lpVtbl.value.set_attribute.unsafe_as(Proc(UInt8*, VARIANT, Int32, HRESULT)).call(strattributename, attributevalue, lflags)
  end
  def get_attribute(strattributename : UInt8*, lflags : Int32, attributevalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_attribute.unsafe_as(Proc(UInt8*, Int32, VARIANT*, HRESULT)).call(strattributename, lflags, attributevalue)
  end
  def remove_attribute(strattributename : UInt8*, lflags : Int32, pfsuccess : Int16*) : HRESULT
    @lpVtbl.value.remove_attribute.unsafe_as(Proc(UInt8*, Int32, Int16*, HRESULT)).call(strattributename, lflags, pfsuccess)
  end
end
struct LibWin32::IHTMLRuleStyle2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_table_layout(v : UInt8*) : HRESULT
    @lpVtbl.value.put_table_layout.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_table_layout(p : UInt8**) : HRESULT
    @lpVtbl.value.get_table_layout.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_collapse(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_collapse.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_collapse(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_collapse.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_direction(v : UInt8*) : HRESULT
    @lpVtbl.value.put_direction.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_behavior(v : UInt8*) : HRESULT
    @lpVtbl.value.put_behavior.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_behavior(p : UInt8**) : HRESULT
    @lpVtbl.value.get_behavior.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_unicode_bidi(v : UInt8*) : HRESULT
    @lpVtbl.value.put_unicode_bidi.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_unicode_bidi(p : UInt8**) : HRESULT
    @lpVtbl.value.get_unicode_bidi.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_bottom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_bottom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_right(v : VARIANT) : HRESULT
    @lpVtbl.value.put_right.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_pixel_bottom(v : Int32) : HRESULT
    @lpVtbl.value.put_pixel_bottom.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_pixel_bottom(p : Int32*) : HRESULT
    @lpVtbl.value.get_pixel_bottom.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_pixel_right(v : Int32) : HRESULT
    @lpVtbl.value.put_pixel_right.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_pixel_right(p : Int32*) : HRESULT
    @lpVtbl.value.get_pixel_right.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_pos_bottom(v : Float32) : HRESULT
    @lpVtbl.value.put_pos_bottom.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_pos_bottom(p : Float32*) : HRESULT
    @lpVtbl.value.get_pos_bottom.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_pos_right(v : Float32) : HRESULT
    @lpVtbl.value.put_pos_right.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_pos_right(p : Float32*) : HRESULT
    @lpVtbl.value.get_pos_right.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_ime_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ime_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ime_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ime_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ruby_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ruby_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ruby_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ruby_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ruby_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ruby_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ruby_overhang(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ruby_overhang.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ruby_overhang(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_overhang.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_layout_grid_char(v : VARIANT) : HRESULT
    @lpVtbl.value.put_layout_grid_char.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_layout_grid_char(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_layout_grid_char.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_layout_grid_line(v : VARIANT) : HRESULT
    @lpVtbl.value.put_layout_grid_line.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_layout_grid_line(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_layout_grid_line.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_layout_grid_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_grid_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_grid_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_grid_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_layout_grid_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_grid_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_grid_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_grid_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_layout_grid(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_grid.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_grid(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_grid.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_autospace(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_autospace.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_autospace(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_autospace.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_word_break(v : UInt8*) : HRESULT
    @lpVtbl.value.put_word_break.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_word_break(p : UInt8**) : HRESULT
    @lpVtbl.value.get_word_break.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_line_break(v : UInt8*) : HRESULT
    @lpVtbl.value.put_line_break.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_line_break(p : UInt8**) : HRESULT
    @lpVtbl.value.get_line_break.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_justify(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_justify.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_justify(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_justify.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_justify_trim(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_justify_trim.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_justify_trim(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_justify_trim.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_kashida(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_kashida.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_kashida(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_kashida.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_overflow_x(v : UInt8*) : HRESULT
    @lpVtbl.value.put_overflow_x.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_overflow_x(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow_x.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_overflow_y(v : UInt8*) : HRESULT
    @lpVtbl.value.put_overflow_y.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_overflow_y(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow_y.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_accelerator(v : UInt8*) : HRESULT
    @lpVtbl.value.put_accelerator.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_accelerator(p : UInt8**) : HRESULT
    @lpVtbl.value.get_accelerator.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLRuleStyle3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_layout_flow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_layout_flow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_layout_flow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_flow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_zoom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_zoom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_zoom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_zoom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_word_wrap(v : UInt8*) : HRESULT
    @lpVtbl.value.put_word_wrap.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_word_wrap(p : UInt8**) : HRESULT
    @lpVtbl.value.get_word_wrap.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_underline_position(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_underline_position.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_underline_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_underline_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_scrollbar_base_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_base_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_base_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_base_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_face_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_face_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_face_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_face_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar3d_light_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar3d_light_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar3d_light_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar3d_light_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_shadow_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_shadow_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_shadow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_shadow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_highlight_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_highlight_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_highlight_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_highlight_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_dark_shadow_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_dark_shadow_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_dark_shadow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_dark_shadow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_arrow_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_arrow_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_arrow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_arrow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scrollbar_track_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_scrollbar_track_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_scrollbar_track_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_track_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_writing_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_writing_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_writing_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_writing_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_align_last(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_align_last.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_align_last(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_align_last.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_kashida_space(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_kashida_space.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_kashida_space(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_kashida_space.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLRuleStyle4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_text_overflow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_overflow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_overflow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_overflow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_min_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_min_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_min_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_min_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLRuleStyle5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ms_interpolation_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_interpolation_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_interpolation_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_interpolation_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_max_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_max_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_max_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_max_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_min_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_min_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_min_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_min_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_max_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_max_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_max_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_max_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLRuleStyle6
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_content(v : UInt8*) : HRESULT
    @lpVtbl.value.put_content.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_content(p : UInt8**) : HRESULT
    @lpVtbl.value.get_content.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_caption_side(v : UInt8*) : HRESULT
    @lpVtbl.value.put_caption_side.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_caption_side(p : UInt8**) : HRESULT
    @lpVtbl.value.get_caption_side.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_counter_increment(v : UInt8*) : HRESULT
    @lpVtbl.value.put_counter_increment.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_counter_increment(p : UInt8**) : HRESULT
    @lpVtbl.value.get_counter_increment.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_counter_reset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_counter_reset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_counter_reset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_counter_reset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_outline(v : UInt8*) : HRESULT
    @lpVtbl.value.put_outline.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_outline(p : UInt8**) : HRESULT
    @lpVtbl.value.get_outline.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_outline_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_outline_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_outline_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_outline_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_outline_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_outline_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_outline_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_outline_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_outline_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_outline_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_outline_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_outline_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_box_sizing(v : UInt8*) : HRESULT
    @lpVtbl.value.put_box_sizing.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_box_sizing(p : UInt8**) : HRESULT
    @lpVtbl.value.get_box_sizing.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_spacing(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_spacing.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_spacing(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_spacing.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_orphans(v : VARIANT) : HRESULT
    @lpVtbl.value.put_orphans.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_orphans(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_orphans.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_widows(v : VARIANT) : HRESULT
    @lpVtbl.value.put_widows.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_widows(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_widows.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_page_break_inside(v : UInt8*) : HRESULT
    @lpVtbl.value.put_page_break_inside.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_page_break_inside(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_inside.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_empty_cells(v : UInt8*) : HRESULT
    @lpVtbl.value.put_empty_cells.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_empty_cells(p : UInt8**) : HRESULT
    @lpVtbl.value.get_empty_cells.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ms_block_progression(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ms_block_progression.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ms_block_progression(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_block_progression.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_quotes(v : UInt8*) : HRESULT
    @lpVtbl.value.put_quotes.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_quotes(p : UInt8**) : HRESULT
    @lpVtbl.value.get_quotes.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLStyle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLRuleStyle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLStyleSheetRulesCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(index : Int32, pphtmlstylesheetrule : IHTMLStyleSheetRule*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IHTMLStyleSheetRule*, HRESULT)).call(index, pphtmlstylesheetrule)
  end
end
struct LibWin32::IHTMLStyleSheet
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_title(v : UInt8*) : HRESULT
    @lpVtbl.value.put_title.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_title(p : UInt8**) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_parent_style_sheet(p : IHTMLStyleSheet*) : HRESULT
    @lpVtbl.value.get_parent_style_sheet.unsafe_as(Proc(IHTMLStyleSheet*, HRESULT)).call(p)
  end
  def get_owning_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_owning_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_read_only(p : Int16*) : HRESULT
    @lpVtbl.value.get_read_only.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_imports(p : IHTMLStyleSheetsCollection*) : HRESULT
    @lpVtbl.value.get_imports.unsafe_as(Proc(IHTMLStyleSheetsCollection*, HRESULT)).call(p)
  end
  def put_href(v : UInt8*) : HRESULT
    @lpVtbl.value.put_href.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_id(p : UInt8**) : HRESULT
    @lpVtbl.value.get_id.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def add_import(bstrurl : UInt8*, lindex : Int32, plindex : Int32*) : HRESULT
    @lpVtbl.value.add_import.unsafe_as(Proc(UInt8*, Int32, Int32*, HRESULT)).call(bstrurl, lindex, plindex)
  end
  def add_rule(bstrselector : UInt8*, bstrstyle : UInt8*, lindex : Int32, plnewindex : Int32*) : HRESULT
    @lpVtbl.value.add_rule.unsafe_as(Proc(UInt8*, UInt8*, Int32, Int32*, HRESULT)).call(bstrselector, bstrstyle, lindex, plnewindex)
  end
  def remove_import(lindex : Int32) : HRESULT
    @lpVtbl.value.remove_import.unsafe_as(Proc(Int32, HRESULT)).call(lindex)
  end
  def remove_rule(lindex : Int32) : HRESULT
    @lpVtbl.value.remove_rule.unsafe_as(Proc(Int32, HRESULT)).call(lindex)
  end
  def put_media(v : UInt8*) : HRESULT
    @lpVtbl.value.put_media.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_media(p : UInt8**) : HRESULT
    @lpVtbl.value.get_media.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_css_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_css_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_css_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_css_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_rules(p : IHTMLStyleSheetRulesCollection*) : HRESULT
    @lpVtbl.value.get_rules.unsafe_as(Proc(IHTMLStyleSheetRulesCollection*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCSSRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_type(p : UInt16*) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_css_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_css_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_css_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_css_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_parent_rule(p : IHTMLCSSRule*) : HRESULT
    @lpVtbl.value.get_parent_rule.unsafe_as(Proc(IHTMLCSSRule*, HRESULT)).call(p)
  end
  def get_parent_style_sheet(p : IHTMLStyleSheet*) : HRESULT
    @lpVtbl.value.get_parent_style_sheet.unsafe_as(Proc(IHTMLStyleSheet*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCSSImportRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_media(v : VARIANT) : HRESULT
    @lpVtbl.value.put_media.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_media(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_media.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_style_sheet(p : IHTMLStyleSheet*) : HRESULT
    @lpVtbl.value.get_style_sheet.unsafe_as(Proc(IHTMLStyleSheet*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCSSMediaRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_media(v : VARIANT) : HRESULT
    @lpVtbl.value.put_media.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_media(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_media.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_css_rules(p : IHTMLStyleSheetRulesCollection*) : HRESULT
    @lpVtbl.value.get_css_rules.unsafe_as(Proc(IHTMLStyleSheetRulesCollection*, HRESULT)).call(p)
  end
  def insert_rule(bstrrule : UInt8*, lindex : Int32, plnewindex : Int32*) : HRESULT
    @lpVtbl.value.insert_rule.unsafe_as(Proc(UInt8*, Int32, Int32*, HRESULT)).call(bstrrule, lindex, plnewindex)
  end
  def delete_rule(lindex : Int32) : HRESULT
    @lpVtbl.value.delete_rule.unsafe_as(Proc(Int32, HRESULT)).call(lindex)
  end
end
struct LibWin32::IHTMLCSSMediaList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_media_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_media_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_media_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_media_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(index : Int32, pbstrmedium : UInt8**) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, UInt8**, HRESULT)).call(index, pbstrmedium)
  end
  def append_medium(bstrmedium : UInt8*) : HRESULT
    @lpVtbl.value.append_medium.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrmedium)
  end
  def delete_medium(bstrmedium : UInt8*) : HRESULT
    @lpVtbl.value.delete_medium.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrmedium)
  end
end
struct LibWin32::IHTMLCSSNamespaceRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_namespace_uri(p : UInt8**) : HRESULT
    @lpVtbl.value.get_namespace_uri.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_prefix(p : UInt8**) : HRESULT
    @lpVtbl.value.get_prefix.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLMSCSSKeyframeRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_key_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_key_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_key_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_key_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_style(p : IHTMLRuleStyle*) : HRESULT
    @lpVtbl.value.get_style.unsafe_as(Proc(IHTMLRuleStyle*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLMSCSSKeyframesRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_css_rules(p : IHTMLStyleSheetRulesCollection*) : HRESULT
    @lpVtbl.value.get_css_rules.unsafe_as(Proc(IHTMLStyleSheetRulesCollection*, HRESULT)).call(p)
  end
  def append_rule(bstrrule : UInt8*) : HRESULT
    @lpVtbl.value.append_rule.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrrule)
  end
  def delete_rule(bstrkey : UInt8*) : HRESULT
    @lpVtbl.value.delete_rule.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrkey)
  end
  def find_rule(bstrkey : UInt8*, ppmskeyframerule : IHTMLMSCSSKeyframeRule*) : HRESULT
    @lpVtbl.value.find_rule.unsafe_as(Proc(UInt8*, IHTMLMSCSSKeyframeRule*, HRESULT)).call(bstrkey, ppmskeyframerule)
  end
end
struct LibWin32::DispHTMLCSSRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLCSSImportRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLCSSMediaRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLCSSMediaList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLCSSNamespaceRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLMSCSSKeyframeRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLMSCSSKeyframesRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLRenderStyle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_text_line_through_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_line_through_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_line_through_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_line_through_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_underline_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_underline_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_underline_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_underline_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_effect(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_effect.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_effect(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_effect.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_background_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_background_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_background_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_background_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_decoration_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_decoration_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_decoration_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_decoration_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_rendering_priority(v : Int32) : HRESULT
    @lpVtbl.value.put_rendering_priority.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_rendering_priority(p : Int32*) : HRESULT
    @lpVtbl.value.get_rendering_priority.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_default_text_selection(v : UInt8*) : HRESULT
    @lpVtbl.value.put_default_text_selection.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_default_text_selection(p : UInt8**) : HRESULT
    @lpVtbl.value.get_default_text_selection.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_decoration(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_decoration.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_decoration(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_decoration.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLRenderStyle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLCurrentStyle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_style_float(p : UInt8**) : HRESULT
    @lpVtbl.value.get_style_float.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_background_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_font_family(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_family.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_font_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_font_variant(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font_variant.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_font_weight(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_font_weight.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_font_size(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_font_size.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_background_image(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_image.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_background_position_x(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_position_x.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_background_position_y(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_background_position_y.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_background_repeat(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_repeat.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_border_left_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_left_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_border_top_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_top_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_border_right_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_right_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_border_bottom_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_bottom_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_border_top_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_top_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_border_right_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_right_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_border_bottom_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_bottom_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_border_left_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_left_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_border_top_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_top_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_border_right_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_right_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_border_bottom_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_bottom_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_border_left_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_left_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_padding_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_padding_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_padding_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_padding_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_padding_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_text_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_text_decoration(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_decoration.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_display(p : UInt8**) : HRESULT
    @lpVtbl.value.get_display.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_visibility(p : UInt8**) : HRESULT
    @lpVtbl.value.get_visibility.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_z_index(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_z_index.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_letter_spacing(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_letter_spacing.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_line_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_line_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_text_indent(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_indent.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_vertical_align(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_vertical_align.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_background_attachment(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background_attachment.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_margin_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_margin_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_margin_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_margin_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_clear(p : UInt8**) : HRESULT
    @lpVtbl.value.get_clear.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_list_style_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_list_style_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_list_style_image(p : UInt8**) : HRESULT
    @lpVtbl.value.get_list_style_image.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_clip_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_clip_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_clip_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_clip_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_clip_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_clip_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_clip_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_clip_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_overflow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_page_break_before(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_before.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_page_break_after(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_after.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_cursor(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cursor.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_table_layout(p : UInt8**) : HRESULT
    @lpVtbl.value.get_table_layout.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_border_collapse(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_collapse.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_behavior(p : UInt8**) : HRESULT
    @lpVtbl.value.get_behavior.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_attribute(strattributename : UInt8*, lflags : Int32, attributevalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_attribute.unsafe_as(Proc(UInt8*, Int32, VARIANT*, HRESULT)).call(strattributename, lflags, attributevalue)
  end
  def get_unicode_bidi(p : UInt8**) : HRESULT
    @lpVtbl.value.get_unicode_bidi.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_right(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_right.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_bottom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bottom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_ime_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ime_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_ruby_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_ruby_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_ruby_overhang(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ruby_overhang.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_text_autospace(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_autospace.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_line_break(p : UInt8**) : HRESULT
    @lpVtbl.value.get_line_break.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_word_break(p : UInt8**) : HRESULT
    @lpVtbl.value.get_word_break.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_text_justify(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_justify.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_text_justify_trim(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_justify_trim.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_text_kashida(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_kashida.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_block_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_block_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_layout_grid_char(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_layout_grid_char.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_layout_grid_line(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_layout_grid_line.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_layout_grid_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_grid_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_layout_grid_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_grid_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_border_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_border_color(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_color.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_border_width(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_width.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_padding(p : UInt8**) : HRESULT
    @lpVtbl.value.get_padding.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_margin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_margin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_accelerator(p : UInt8**) : HRESULT
    @lpVtbl.value.get_accelerator.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_overflow_x(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow_x.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_overflow_y(p : UInt8**) : HRESULT
    @lpVtbl.value.get_overflow_y.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_text_transform(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_transform.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCurrentStyle2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_layout_flow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_layout_flow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_word_wrap(p : UInt8**) : HRESULT
    @lpVtbl.value.get_word_wrap.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_text_underline_position(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_underline_position.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_has_layout(p : Int16*) : HRESULT
    @lpVtbl.value.get_has_layout.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_scrollbar_base_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_base_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_scrollbar_face_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_face_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_scrollbar3d_light_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar3d_light_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_scrollbar_shadow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_shadow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_scrollbar_highlight_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_highlight_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_scrollbar_dark_shadow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_dark_shadow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_scrollbar_arrow_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_arrow_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_scrollbar_track_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_scrollbar_track_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_writing_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_writing_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_zoom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_zoom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_filter(p : UInt8**) : HRESULT
    @lpVtbl.value.get_filter.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_text_align_last(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_align_last.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_text_kashida_space(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_kashida_space.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_is_block(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_block.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCurrentStyle3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_text_overflow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_overflow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_min_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_min_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_word_spacing(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_word_spacing.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_white_space(p : UInt8**) : HRESULT
    @lpVtbl.value.get_white_space.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCurrentStyle4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_ms_interpolation_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_interpolation_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_max_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_max_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_min_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_min_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_max_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_max_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCurrentStyle5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_caption_side(p : UInt8**) : HRESULT
    @lpVtbl.value.get_caption_side.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_outline(p : UInt8**) : HRESULT
    @lpVtbl.value.get_outline.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_outline_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_outline_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_outline_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_outline_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_outline_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_outline_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_box_sizing(p : UInt8**) : HRESULT
    @lpVtbl.value.get_box_sizing.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_border_spacing(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_spacing.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_orphans(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_orphans.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_widows(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_widows.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_page_break_inside(p : UInt8**) : HRESULT
    @lpVtbl.value.get_page_break_inside.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_empty_cells(p : UInt8**) : HRESULT
    @lpVtbl.value.get_empty_cells.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_ms_block_progression(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_block_progression.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_quotes(p : UInt8**) : HRESULT
    @lpVtbl.value.get_quotes.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLCurrentStyle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def set_attribute(strattributename : UInt8*, attributevalue : VARIANT, lflags : Int32) : HRESULT
    @lpVtbl.value.set_attribute.unsafe_as(Proc(UInt8*, VARIANT, Int32, HRESULT)).call(strattributename, attributevalue, lflags)
  end
  def get_attribute(strattributename : UInt8*, lflags : Int32, attributevalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_attribute.unsafe_as(Proc(UInt8*, Int32, VARIANT*, HRESULT)).call(strattributename, lflags, attributevalue)
  end
  def remove_attribute(strattributename : UInt8*, lflags : Int32, pfsuccess : Int16*) : HRESULT
    @lpVtbl.value.remove_attribute.unsafe_as(Proc(UInt8*, Int32, Int16*, HRESULT)).call(strattributename, lflags, pfsuccess)
  end
  def put_class_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_class_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_class_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_class_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_id(v : UInt8*) : HRESULT
    @lpVtbl.value.put_id.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_id(p : UInt8**) : HRESULT
    @lpVtbl.value.get_id.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_tag_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_tag_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_parent_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_parent_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_style(p : IHTMLStyle*) : HRESULT
    @lpVtbl.value.get_style.unsafe_as(Proc(IHTMLStyle*, HRESULT)).call(p)
  end
  def put_onhelp(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onhelp.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onhelp(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onhelp.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onclick(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onclick.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onclick(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onclick.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondblclick(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondblclick.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondblclick(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondblclick.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onkeydown(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onkeydown.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onkeydown(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onkeydown.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onkeyup(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onkeyup.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onkeyup(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onkeyup.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onkeypress(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onkeypress.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onkeypress(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onkeypress.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseout(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseout.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseout(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseout.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmousemove(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmousemove.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmousemove(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmousemove.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmousedown(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmousedown.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmousedown(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmousedown.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseup(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseup.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseup(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseup.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_document(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def put_title(v : UInt8*) : HRESULT
    @lpVtbl.value.put_title.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_title(p : UInt8**) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_language(v : UInt8*) : HRESULT
    @lpVtbl.value.put_language.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_language(p : UInt8**) : HRESULT
    @lpVtbl.value.get_language.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onselectstart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onselectstart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onselectstart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onselectstart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def scroll_into_view(varargstart : VARIANT) : HRESULT
    @lpVtbl.value.scroll_into_view.unsafe_as(Proc(VARIANT, HRESULT)).call(varargstart)
  end
  def contains(pchild : IHTMLElement, pfresult : Int16*) : HRESULT
    @lpVtbl.value.contains.unsafe_as(Proc(IHTMLElement, Int16*, HRESULT)).call(pchild, pfresult)
  end
  def get_source_index(p : Int32*) : HRESULT
    @lpVtbl.value.get_source_index.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_record_number(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_record_number.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_lang(v : UInt8*) : HRESULT
    @lpVtbl.value.put_lang.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_lang(p : UInt8**) : HRESULT
    @lpVtbl.value.get_lang.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_offset_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_offset_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_offset_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_offset_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_offset_parent(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_offset_parent.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def put_inner_html(v : UInt8*) : HRESULT
    @lpVtbl.value.put_inner_html.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_inner_html(p : UInt8**) : HRESULT
    @lpVtbl.value.get_inner_html.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_inner_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_inner_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_inner_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_inner_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_outer_html(v : UInt8*) : HRESULT
    @lpVtbl.value.put_outer_html.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_outer_html(p : UInt8**) : HRESULT
    @lpVtbl.value.get_outer_html.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_outer_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_outer_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_outer_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_outer_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def insert_adjacent_html(where : UInt8*, html : UInt8*) : HRESULT
    @lpVtbl.value.insert_adjacent_html.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(where, html)
  end
  def insert_adjacent_text(where : UInt8*, text : UInt8*) : HRESULT
    @lpVtbl.value.insert_adjacent_text.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(where, text)
  end
  def get_parent_text_edit(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_parent_text_edit.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_is_text_edit(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_text_edit.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def click : HRESULT
    @lpVtbl.value.click.unsafe_as(Proc(HRESULT)).call
  end
  def get_filters(p : IHTMLFiltersCollection*) : HRESULT
    @lpVtbl.value.get_filters.unsafe_as(Proc(IHTMLFiltersCollection*, HRESULT)).call(p)
  end
  def put_ondragstart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragstart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragstart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragstart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
  def put_onbeforeupdate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeupdate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeupdate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeupdate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onafterupdate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onafterupdate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onafterupdate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onafterupdate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerrorupdate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerrorupdate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerrorupdate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerrorupdate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onrowexit(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onrowexit.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onrowexit(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onrowexit.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onrowenter(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onrowenter.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onrowenter(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onrowenter.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondatasetchanged(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondatasetchanged.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondatasetchanged(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondatasetchanged.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondataavailable(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondataavailable.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondataavailable(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondataavailable.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondatasetcomplete(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondatasetcomplete.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondatasetcomplete(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondatasetcomplete.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onfilterchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfilterchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfilterchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfilterchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_children(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_children.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_all(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_all.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLRect
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_left(v : Int32) : HRESULT
    @lpVtbl.value.put_left.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_top(v : Int32) : HRESULT
    @lpVtbl.value.put_top.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_right(v : Int32) : HRESULT
    @lpVtbl.value.put_right.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_right(p : Int32*) : HRESULT
    @lpVtbl.value.get_right.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_bottom(v : Int32) : HRESULT
    @lpVtbl.value.put_bottom.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_bottom(p : Int32*) : HRESULT
    @lpVtbl.value.get_bottom.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLRect2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_width(p : Float32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def get_height(p : Float32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLRectCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(pvarindex : VARIANT*, pvarresult : VARIANT*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarindex, pvarresult)
  end
end
struct LibWin32::IHTMLElementCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
  def put_length(v : Int32) : HRESULT
    @lpVtbl.value.put_length.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(name : VARIANT, index : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT, VARIANT, IDispatch*, HRESULT)).call(name, index, pdisp)
  end
  def tags(tagname : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.tags.unsafe_as(Proc(VARIANT, IDispatch*, HRESULT)).call(tagname, pdisp)
  end
end
struct LibWin32::IHTMLElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_scope_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_scope_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def set_capture(containercapture : Int16) : HRESULT
    @lpVtbl.value.set_capture.unsafe_as(Proc(Int16, HRESULT)).call(containercapture)
  end
  def release_capture : HRESULT
    @lpVtbl.value.release_capture.unsafe_as(Proc(HRESULT)).call
  end
  def put_onlosecapture(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onlosecapture.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onlosecapture(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onlosecapture.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def component_from_point(x : Int32, y : Int32, component : UInt8**) : HRESULT
    @lpVtbl.value.component_from_point.unsafe_as(Proc(Int32, Int32, UInt8**, HRESULT)).call(x, y, component)
  end
  def do_scroll(component : VARIANT) : HRESULT
    @lpVtbl.value.do_scroll.unsafe_as(Proc(VARIANT, HRESULT)).call(component)
  end
  def put_onscroll(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onscroll.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onscroll(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onscroll.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondrag(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondrag.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondrag(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondrag.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragenter(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragenter.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragenter(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragenter.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragleave(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragleave.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragleave(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragleave.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondrop(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondrop.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondrop(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondrop.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onbeforecut(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforecut.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforecut(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforecut.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncut(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncut.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncut(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncut.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onbeforecopy(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforecopy.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforecopy(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforecopy.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncopy(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncopy.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncopy(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncopy.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onbeforepaste(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforepaste.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforepaste(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforepaste.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onpaste(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onpaste.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onpaste(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onpaste.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_current_style(p : IHTMLCurrentStyle*) : HRESULT
    @lpVtbl.value.get_current_style.unsafe_as(Proc(IHTMLCurrentStyle*, HRESULT)).call(p)
  end
  def put_onpropertychange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onpropertychange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onpropertychange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onpropertychange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_client_rects(prectcol : IHTMLRectCollection*) : HRESULT
    @lpVtbl.value.get_client_rects.unsafe_as(Proc(IHTMLRectCollection*, HRESULT)).call(prectcol)
  end
  def get_bounding_client_rect(prect : IHTMLRect*) : HRESULT
    @lpVtbl.value.get_bounding_client_rect.unsafe_as(Proc(IHTMLRect*, HRESULT)).call(prect)
  end
  def set_expression(propname : UInt8*, expression : UInt8*, language : UInt8*) : HRESULT
    @lpVtbl.value.set_expression.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, HRESULT)).call(propname, expression, language)
  end
  def get_expression(propname : UInt8*, expression : VARIANT*) : HRESULT
    @lpVtbl.value.get_expression.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(propname, expression)
  end
  def remove_expression(propname : UInt8*, pfsuccess : Int16*) : HRESULT
    @lpVtbl.value.remove_expression.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(propname, pfsuccess)
  end
  def put_tab_index(v : Int16) : HRESULT
    @lpVtbl.value.put_tab_index.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_tab_index(p : Int16*) : HRESULT
    @lpVtbl.value.get_tab_index.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def focus : HRESULT
    @lpVtbl.value.focus.unsafe_as(Proc(HRESULT)).call
  end
  def put_access_key(v : UInt8*) : HRESULT
    @lpVtbl.value.put_access_key.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_access_key(p : UInt8**) : HRESULT
    @lpVtbl.value.get_access_key.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onblur(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onblur.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onblur(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onblur.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onfocus(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocus.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocus(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocus.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onresize(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onresize.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onresize(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onresize.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def blur : HRESULT
    @lpVtbl.value.blur.unsafe_as(Proc(HRESULT)).call
  end
  def add_filter(punk : IUnknown) : HRESULT
    @lpVtbl.value.add_filter.unsafe_as(Proc(IUnknown, HRESULT)).call(punk)
  end
  def remove_filter(punk : IUnknown) : HRESULT
    @lpVtbl.value.remove_filter.unsafe_as(Proc(IUnknown, HRESULT)).call(punk)
  end
  def get_client_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def attach_event(event : UInt8*, pdisp : IDispatch, pfresult : Int16*) : HRESULT
    @lpVtbl.value.attach_event.unsafe_as(Proc(UInt8*, IDispatch, Int16*, HRESULT)).call(event, pdisp, pfresult)
  end
  def detach_event(event : UInt8*, pdisp : IDispatch) : HRESULT
    @lpVtbl.value.detach_event.unsafe_as(Proc(UInt8*, IDispatch, HRESULT)).call(event, pdisp)
  end
  def get_ready_state(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onreadystatechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreadystatechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreadystatechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreadystatechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onrowsdelete(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onrowsdelete.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onrowsdelete(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onrowsdelete.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onrowsinserted(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onrowsinserted.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onrowsinserted(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onrowsinserted.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncellchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncellchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncellchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncellchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_dir(v : UInt8*) : HRESULT
    @lpVtbl.value.put_dir.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_dir(p : UInt8**) : HRESULT
    @lpVtbl.value.get_dir.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def create_control_range(range : IDispatch*) : HRESULT
    @lpVtbl.value.create_control_range.unsafe_as(Proc(IDispatch*, HRESULT)).call(range)
  end
  def get_scroll_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_scroll_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_scroll_top(v : Int32) : HRESULT
    @lpVtbl.value.put_scroll_top.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_scroll_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_scroll_left(v : Int32) : HRESULT
    @lpVtbl.value.put_scroll_left.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_scroll_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def clear_attributes : HRESULT
    @lpVtbl.value.clear_attributes.unsafe_as(Proc(HRESULT)).call
  end
  def merge_attributes(mergethis : IHTMLElement) : HRESULT
    @lpVtbl.value.merge_attributes.unsafe_as(Proc(IHTMLElement, HRESULT)).call(mergethis)
  end
  def put_oncontextmenu(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncontextmenu.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncontextmenu(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncontextmenu.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def insert_adjacent_element(where : UInt8*, insertedelement : IHTMLElement, inserted : IHTMLElement*) : HRESULT
    @lpVtbl.value.insert_adjacent_element.unsafe_as(Proc(UInt8*, IHTMLElement, IHTMLElement*, HRESULT)).call(where, insertedelement, inserted)
  end
  def apply_element(apply : IHTMLElement, where : UInt8*, applied : IHTMLElement*) : HRESULT
    @lpVtbl.value.apply_element.unsafe_as(Proc(IHTMLElement, UInt8*, IHTMLElement*, HRESULT)).call(apply, where, applied)
  end
  def get_adjacent_text(where : UInt8*, text : UInt8**) : HRESULT
    @lpVtbl.value.get_adjacent_text.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(where, text)
  end
  def replace_adjacent_text(where : UInt8*, newtext : UInt8*, oldtext : UInt8**) : HRESULT
    @lpVtbl.value.replace_adjacent_text.unsafe_as(Proc(UInt8*, UInt8*, UInt8**, HRESULT)).call(where, newtext, oldtext)
  end
  def get_can_have_children(p : Int16*) : HRESULT
    @lpVtbl.value.get_can_have_children.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def add_behavior(bstrurl : UInt8*, pvarfactory : VARIANT*, pcookie : Int32*) : HRESULT
    @lpVtbl.value.add_behavior.unsafe_as(Proc(UInt8*, VARIANT*, Int32*, HRESULT)).call(bstrurl, pvarfactory, pcookie)
  end
  def remove_behavior(cookie : Int32, pfresult : Int16*) : HRESULT
    @lpVtbl.value.remove_behavior.unsafe_as(Proc(Int32, Int16*, HRESULT)).call(cookie, pfresult)
  end
  def get_runtime_style(p : IHTMLStyle*) : HRESULT
    @lpVtbl.value.get_runtime_style.unsafe_as(Proc(IHTMLStyle*, HRESULT)).call(p)
  end
  def get_behavior_urns(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_behavior_urns.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def put_tag_urn(v : UInt8*) : HRESULT
    @lpVtbl.value.put_tag_urn.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_tag_urn(p : UInt8**) : HRESULT
    @lpVtbl.value.get_tag_urn.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onbeforeeditfocus(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeeditfocus.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeeditfocus(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeeditfocus.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_ready_state_value(p : Int32*) : HRESULT
    @lpVtbl.value.get_ready_state_value.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_elements_by_tag_name(v : UInt8*, pelcoll : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_elements_by_tag_name.unsafe_as(Proc(UInt8*, IHTMLElementCollection*, HRESULT)).call(v, pelcoll)
  end
end
struct LibWin32::IHTMLAttributeCollection3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_named_item(bstrname : UInt8*, ppnodeout : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.get_named_item.unsafe_as(Proc(UInt8*, IHTMLDOMAttribute*, HRESULT)).call(bstrname, ppnodeout)
  end
  def set_named_item(pnodein : IHTMLDOMAttribute, ppnodeout : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.set_named_item.unsafe_as(Proc(IHTMLDOMAttribute, IHTMLDOMAttribute*, HRESULT)).call(pnodein, ppnodeout)
  end
  def remove_named_item(bstrname : UInt8*, ppnodeout : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.remove_named_item.unsafe_as(Proc(UInt8*, IHTMLDOMAttribute*, HRESULT)).call(bstrname, ppnodeout)
  end
  def item(index : Int32, ppnodeout : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IHTMLDOMAttribute*, HRESULT)).call(index, ppnodeout)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IDOMDocumentType
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_entities(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_entities.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_notations(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_notations.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_public_id(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_public_id.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_system_id(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_system_id.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_internal_subset(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_internal_subset.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDocument7
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_default_view(p : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.get_default_view.unsafe_as(Proc(IHTMLWindow2*, HRESULT)).call(p)
  end
  def create_cdata_section(text : UInt8*, newcdatasectionnode : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.create_cdata_section.unsafe_as(Proc(UInt8*, IHTMLDOMNode*, HRESULT)).call(text, newcdatasectionnode)
  end
  def get_selection(ppihtmlselection : IHTMLSelection*) : HRESULT
    @lpVtbl.value.get_selection.unsafe_as(Proc(IHTMLSelection*, HRESULT)).call(ppihtmlselection)
  end
  def get_elements_by_tag_name_ns(pvarns : VARIANT*, bstrlocalname : UInt8*, pelcoll : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_elements_by_tag_name_ns.unsafe_as(Proc(VARIANT*, UInt8*, IHTMLElementCollection*, HRESULT)).call(pvarns, bstrlocalname, pelcoll)
  end
  def create_element_ns(pvarns : VARIANT*, bstrtag : UInt8*, newelem : IHTMLElement*) : HRESULT
    @lpVtbl.value.create_element_ns.unsafe_as(Proc(VARIANT*, UInt8*, IHTMLElement*, HRESULT)).call(pvarns, bstrtag, newelem)
  end
  def create_attribute_ns(pvarns : VARIANT*, bstrattrname : UInt8*, ppattribute : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.create_attribute_ns.unsafe_as(Proc(VARIANT*, UInt8*, IHTMLDOMAttribute*, HRESULT)).call(pvarns, bstrattrname, ppattribute)
  end
  def put_onmsthumbnailclick(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsthumbnailclick.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsthumbnailclick(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsthumbnailclick.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_character_set(p : UInt8**) : HRESULT
    @lpVtbl.value.get_character_set.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def create_element(bstrtag : UInt8*, newelem : IHTMLElement*) : HRESULT
    @lpVtbl.value.create_element.unsafe_as(Proc(UInt8*, IHTMLElement*, HRESULT)).call(bstrtag, newelem)
  end
  def create_attribute(bstrattrname : UInt8*, ppattribute : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.create_attribute.unsafe_as(Proc(UInt8*, IHTMLDOMAttribute*, HRESULT)).call(bstrattrname, ppattribute)
  end
  def get_elements_by_class_name(v : UInt8*, pel : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_elements_by_class_name.unsafe_as(Proc(UInt8*, IHTMLElementCollection*, HRESULT)).call(v, pel)
  end
  def create_processing_instruction(bstrtarget : UInt8*, bstrdata : UInt8*, newprocessinginstruction : IDOMProcessingInstruction*) : HRESULT
    @lpVtbl.value.create_processing_instruction.unsafe_as(Proc(UInt8*, UInt8*, IDOMProcessingInstruction*, HRESULT)).call(bstrtarget, bstrdata, newprocessinginstruction)
  end
  def adopt_node(pnodesource : IHTMLDOMNode, ppnodedest : IHTMLDOMNode3*) : HRESULT
    @lpVtbl.value.adopt_node.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode3*, HRESULT)).call(pnodesource, ppnodedest)
  end
  def put_onmssitemodejumplistitemremoved(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmssitemodejumplistitemremoved.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmssitemodejumplistitemremoved(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmssitemodejumplistitemremoved.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_all(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_all.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def get_input_encoding(p : UInt8**) : HRESULT
    @lpVtbl.value.get_input_encoding.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_xml_encoding(p : UInt8**) : HRESULT
    @lpVtbl.value.get_xml_encoding.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_xml_standalone(v : Int16) : HRESULT
    @lpVtbl.value.put_xml_standalone.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_xml_standalone(p : Int16*) : HRESULT
    @lpVtbl.value.get_xml_standalone.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_xml_version(v : UInt8*) : HRESULT
    @lpVtbl.value.put_xml_version.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_xml_version(p : UInt8**) : HRESULT
    @lpVtbl.value.get_xml_version.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def has_attributes(pfhasattributes : Int16*) : HRESULT
    @lpVtbl.value.has_attributes.unsafe_as(Proc(Int16*, HRESULT)).call(pfhasattributes)
  end
  def put_onabort(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onabort.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onabort(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onabort.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onblur(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onblur.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onblur(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onblur.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncanplay(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncanplay.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncanplay(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncanplay.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncanplaythrough(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncanplaythrough.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncanplaythrough(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncanplaythrough.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondrag(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondrag.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondrag(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondrag.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragenter(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragenter.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragenter(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragenter.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragleave(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragleave.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragleave(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragleave.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondrop(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondrop.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondrop(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondrop.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondurationchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondurationchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondurationchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondurationchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onemptied(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onemptied.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onemptied(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onemptied.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onended(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onended.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onended(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onended.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onfocus(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocus.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocus(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocus.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oninput(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oninput.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oninput(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oninput.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onloadeddata(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onloadeddata.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onloadeddata(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onloadeddata.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onloadedmetadata(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onloadedmetadata.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onloadedmetadata(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onloadedmetadata.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onloadstart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onloadstart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onloadstart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onloadstart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onpause(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onpause.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onpause(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onpause.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onplay(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onplay.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onplay(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onplay.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onplaying(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onplaying.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onplaying(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onplaying.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onprogress(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onprogress.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onprogress(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onprogress.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onratechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onratechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onratechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onratechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onreset(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreset.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreset(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreset.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onscroll(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onscroll.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onscroll(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onscroll.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onseeked(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onseeked.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onseeked(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onseeked.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onseeking(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onseeking.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onseeking(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onseeking.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onselect(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onselect.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onselect(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onselect.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onstalled(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onstalled.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onstalled(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onstalled.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onsubmit(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onsubmit.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onsubmit(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onsubmit.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onsuspend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onsuspend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onsuspend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onsuspend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ontimeupdate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ontimeupdate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ontimeupdate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ontimeupdate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onvolumechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onvolumechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onvolumechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onvolumechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onwaiting(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onwaiting.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onwaiting(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onwaiting.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def normalize : HRESULT
    @lpVtbl.value.normalize.unsafe_as(Proc(HRESULT)).call
  end
  def import_node(pnodesource : IHTMLDOMNode, fdeep : Int16, ppnodedest : IHTMLDOMNode3*) : HRESULT
    @lpVtbl.value.import_node.unsafe_as(Proc(IHTMLDOMNode, Int16, IHTMLDOMNode3*, HRESULT)).call(pnodesource, fdeep, ppnodedest)
  end
  def get_parent_window(p : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.get_parent_window.unsafe_as(Proc(IHTMLWindow2*, HRESULT)).call(p)
  end
  def putref_body(v : IHTMLElement) : HRESULT
    @lpVtbl.value.putref_body.unsafe_as(Proc(IHTMLElement, HRESULT)).call(v)
  end
  def get_body(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_body.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_head(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_head.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDOMNode
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_node_type(p : Int32*) : HRESULT
    @lpVtbl.value.get_node_type.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_parent_node(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_parent_node.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def has_child_nodes(fchildren : Int16*) : HRESULT
    @lpVtbl.value.has_child_nodes.unsafe_as(Proc(Int16*, HRESULT)).call(fchildren)
  end
  def get_child_nodes(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_child_nodes.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_attributes(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_attributes.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def insert_before(newchild : IHTMLDOMNode, refchild : VARIANT, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.insert_before.unsafe_as(Proc(IHTMLDOMNode, VARIANT, IHTMLDOMNode*, HRESULT)).call(newchild, refchild, node)
  end
  def remove_child(oldchild : IHTMLDOMNode, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.remove_child.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode*, HRESULT)).call(oldchild, node)
  end
  def replace_child(newchild : IHTMLDOMNode, oldchild : IHTMLDOMNode, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.replace_child.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode, IHTMLDOMNode*, HRESULT)).call(newchild, oldchild, node)
  end
  def clone_node(fdeep : Int16, clonednode : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.clone_node.unsafe_as(Proc(Int16, IHTMLDOMNode*, HRESULT)).call(fdeep, clonednode)
  end
  def remove_node(fdeep : Int16, removed : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.remove_node.unsafe_as(Proc(Int16, IHTMLDOMNode*, HRESULT)).call(fdeep, removed)
  end
  def swap_node(othernode : IHTMLDOMNode, swappednode : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.swap_node.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode*, HRESULT)).call(othernode, swappednode)
  end
  def replace_node(replacement : IHTMLDOMNode, replaced : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.replace_node.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode*, HRESULT)).call(replacement, replaced)
  end
  def append_child(newchild : IHTMLDOMNode, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.append_child.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode*, HRESULT)).call(newchild, node)
  end
  def get_node_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_node_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_node_value(v : VARIANT) : HRESULT
    @lpVtbl.value.put_node_value.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_node_value(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_node_value.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_first_child(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_first_child.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_last_child(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_last_child.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_previous_sibling(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_previous_sibling.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_next_sibling(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_next_sibling.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDOMNode2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_owner_document(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_owner_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDOMNode3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_prefix(v : VARIANT) : HRESULT
    @lpVtbl.value.put_prefix.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_prefix(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_prefix.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_local_name(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_local_name.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_namespace_uri(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_namespace_uri.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text_content(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text_content.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text_content(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text_content.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def is_equal_node(othernode : IHTMLDOMNode3, isequal : Int16*) : HRESULT
    @lpVtbl.value.is_equal_node.unsafe_as(Proc(IHTMLDOMNode3, Int16*, HRESULT)).call(othernode, isequal)
  end
  def lookup_namespace_uri(pvarprefix : VARIANT*, pvarnamespaceuri : VARIANT*) : HRESULT
    @lpVtbl.value.lookup_namespace_uri.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarprefix, pvarnamespaceuri)
  end
  def lookup_prefix(pvarnamespaceuri : VARIANT*, pvarprefix : VARIANT*) : HRESULT
    @lpVtbl.value.lookup_prefix.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarnamespaceuri, pvarprefix)
  end
  def is_default_namespace(pvarnamespace : VARIANT*, pfdefaultnamespace : Int16*) : HRESULT
    @lpVtbl.value.is_default_namespace.unsafe_as(Proc(VARIANT*, Int16*, HRESULT)).call(pvarnamespace, pfdefaultnamespace)
  end
  def append_child(newchild : IHTMLDOMNode, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.append_child.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode*, HRESULT)).call(newchild, node)
  end
  def insert_before(newchild : IHTMLDOMNode, refchild : VARIANT, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.insert_before.unsafe_as(Proc(IHTMLDOMNode, VARIANT, IHTMLDOMNode*, HRESULT)).call(newchild, refchild, node)
  end
  def remove_child(oldchild : IHTMLDOMNode, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.remove_child.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode*, HRESULT)).call(oldchild, node)
  end
  def replace_child(newchild : IHTMLDOMNode, oldchild : IHTMLDOMNode, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.replace_child.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode, IHTMLDOMNode*, HRESULT)).call(newchild, oldchild, node)
  end
  def is_same_node(othernode : IHTMLDOMNode3, issame : Int16*) : HRESULT
    @lpVtbl.value.is_same_node.unsafe_as(Proc(IHTMLDOMNode3, Int16*, HRESULT)).call(othernode, issame)
  end
  def compare_document_position(othernode : IHTMLDOMNode, flags : UInt16*) : HRESULT
    @lpVtbl.value.compare_document_position.unsafe_as(Proc(IHTMLDOMNode, UInt16*, HRESULT)).call(othernode, flags)
  end
  def is_supported(feature : UInt8*, version : VARIANT, pfissupported : Int16*) : HRESULT
    @lpVtbl.value.is_supported.unsafe_as(Proc(UInt8*, VARIANT, Int16*, HRESULT)).call(feature, version, pfissupported)
  end
end
struct LibWin32::IHTMLDOMAttribute
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_node_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_node_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_node_value(v : VARIANT) : HRESULT
    @lpVtbl.value.put_node_value.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_node_value(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_node_value.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_specified(p : Int16*) : HRESULT
    @lpVtbl.value.get_specified.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDOMAttribute2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_expando(p : Int16*) : HRESULT
    @lpVtbl.value.get_expando.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_node_type(p : Int32*) : HRESULT
    @lpVtbl.value.get_node_type.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_parent_node(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_parent_node.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_child_nodes(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_child_nodes.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_first_child(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_first_child.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_last_child(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_last_child.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_previous_sibling(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_previous_sibling.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_next_sibling(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_next_sibling.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_attributes(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_attributes.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_owner_document(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_owner_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def insert_before(newchild : IHTMLDOMNode, refchild : VARIANT, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.insert_before.unsafe_as(Proc(IHTMLDOMNode, VARIANT, IHTMLDOMNode*, HRESULT)).call(newchild, refchild, node)
  end
  def replace_child(newchild : IHTMLDOMNode, oldchild : IHTMLDOMNode, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.replace_child.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode, IHTMLDOMNode*, HRESULT)).call(newchild, oldchild, node)
  end
  def remove_child(oldchild : IHTMLDOMNode, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.remove_child.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode*, HRESULT)).call(oldchild, node)
  end
  def append_child(newchild : IHTMLDOMNode, node : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.append_child.unsafe_as(Proc(IHTMLDOMNode, IHTMLDOMNode*, HRESULT)).call(newchild, node)
  end
  def has_child_nodes(fchildren : Int16*) : HRESULT
    @lpVtbl.value.has_child_nodes.unsafe_as(Proc(Int16*, HRESULT)).call(fchildren)
  end
  def clone_node(fdeep : Int16, clonednode : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.clone_node.unsafe_as(Proc(Int16, IHTMLDOMAttribute*, HRESULT)).call(fdeep, clonednode)
  end
end
struct LibWin32::IHTMLDOMAttribute3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_node_value(v : VARIANT) : HRESULT
    @lpVtbl.value.put_node_value.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_node_value(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_node_value.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_specified(p : Int16*) : HRESULT
    @lpVtbl.value.get_specified.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_owner_element(p : IHTMLElement2*) : HRESULT
    @lpVtbl.value.get_owner_element.unsafe_as(Proc(IHTMLElement2*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDOMAttribute4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_node_value(v : VARIANT) : HRESULT
    @lpVtbl.value.put_node_value.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_node_value(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_node_value.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_node_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_node_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_first_child(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_first_child.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_last_child(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_last_child.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_child_nodes(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_child_nodes.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def has_attributes(pfhasattributes : Int16*) : HRESULT
    @lpVtbl.value.has_attributes.unsafe_as(Proc(Int16*, HRESULT)).call(pfhasattributes)
  end
  def has_child_nodes(fchildren : Int16*) : HRESULT
    @lpVtbl.value.has_child_nodes.unsafe_as(Proc(Int16*, HRESULT)).call(fchildren)
  end
  def normalize : HRESULT
    @lpVtbl.value.normalize.unsafe_as(Proc(HRESULT)).call
  end
  def get_specified(p : Int16*) : HRESULT
    @lpVtbl.value.get_specified.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDOMTextNode
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_data(v : UInt8*) : HRESULT
    @lpVtbl.value.put_data.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_data(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def split_text(offset : Int32, pretnode : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.split_text.unsafe_as(Proc(Int32, IHTMLDOMNode*, HRESULT)).call(offset, pretnode)
  end
end
struct LibWin32::IHTMLDOMTextNode2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def substring_data(offset : Int32, count : Int32, pbstrsubstring : UInt8**) : HRESULT
    @lpVtbl.value.substring_data.unsafe_as(Proc(Int32, Int32, UInt8**, HRESULT)).call(offset, count, pbstrsubstring)
  end
  def append_data(bstrstring : UInt8*) : HRESULT
    @lpVtbl.value.append_data.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrstring)
  end
  def insert_data(offset : Int32, bstrstring : UInt8*) : HRESULT
    @lpVtbl.value.insert_data.unsafe_as(Proc(Int32, UInt8*, HRESULT)).call(offset, bstrstring)
  end
  def delete_data(offset : Int32, count : Int32) : HRESULT
    @lpVtbl.value.delete_data.unsafe_as(Proc(Int32, Int32, HRESULT)).call(offset, count)
  end
  def replace_data(offset : Int32, count : Int32, bstrstring : UInt8*) : HRESULT
    @lpVtbl.value.replace_data.unsafe_as(Proc(Int32, Int32, UInt8*, HRESULT)).call(offset, count, bstrstring)
  end
end
struct LibWin32::IHTMLDOMTextNode3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def substring_data(offset : Int32, count : Int32, pbstrsubstring : UInt8**) : HRESULT
    @lpVtbl.value.substring_data.unsafe_as(Proc(Int32, Int32, UInt8**, HRESULT)).call(offset, count, pbstrsubstring)
  end
  def insert_data(offset : Int32, bstrstring : UInt8*) : HRESULT
    @lpVtbl.value.insert_data.unsafe_as(Proc(Int32, UInt8*, HRESULT)).call(offset, bstrstring)
  end
  def delete_data(offset : Int32, count : Int32) : HRESULT
    @lpVtbl.value.delete_data.unsafe_as(Proc(Int32, Int32, HRESULT)).call(offset, count)
  end
  def replace_data(offset : Int32, count : Int32, bstrstring : UInt8*) : HRESULT
    @lpVtbl.value.replace_data.unsafe_as(Proc(Int32, Int32, UInt8*, HRESULT)).call(offset, count, bstrstring)
  end
  def split_text(offset : Int32, pretnode : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.split_text.unsafe_as(Proc(Int32, IHTMLDOMNode*, HRESULT)).call(offset, pretnode)
  end
  def get_whole_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_whole_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def replace_whole_text(bstrtext : UInt8*, ppretnode : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.replace_whole_text.unsafe_as(Proc(UInt8*, IHTMLDOMNode*, HRESULT)).call(bstrtext, ppretnode)
  end
  def has_attributes(pfhasattributes : Int16*) : HRESULT
    @lpVtbl.value.has_attributes.unsafe_as(Proc(Int16*, HRESULT)).call(pfhasattributes)
  end
  def normalize : HRESULT
    @lpVtbl.value.normalize.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IHTMLDOMImplementation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def has_feature(bstrfeature : UInt8*, version : VARIANT, pfhasfeature : Int16*) : HRESULT
    @lpVtbl.value.has_feature.unsafe_as(Proc(UInt8*, VARIANT, Int16*, HRESULT)).call(bstrfeature, version, pfhasfeature)
  end
end
struct LibWin32::IHTMLDOMImplementation2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create_document_type(bstrqualifiedname : UInt8*, pvarpublicid : VARIANT*, pvarsystemid : VARIANT*, newdocumenttype : IDOMDocumentType*) : HRESULT
    @lpVtbl.value.create_document_type.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, IDOMDocumentType*, HRESULT)).call(bstrqualifiedname, pvarpublicid, pvarsystemid, newdocumenttype)
  end
  def create_document(pvarns : VARIANT*, pvartagname : VARIANT*, pdocumenttype : IDOMDocumentType, ppnewdocument : IHTMLDocument7*) : HRESULT
    @lpVtbl.value.create_document.unsafe_as(Proc(VARIANT*, VARIANT*, IDOMDocumentType, IHTMLDocument7*, HRESULT)).call(pvarns, pvartagname, pdocumenttype, ppnewdocument)
  end
  def create_html_document(bstrtitle : UInt8*, ppnewdocument : IHTMLDocument7*) : HRESULT
    @lpVtbl.value.create_html_document.unsafe_as(Proc(UInt8*, IHTMLDocument7*, HRESULT)).call(bstrtitle, ppnewdocument)
  end
  def has_feature(bstrfeature : UInt8*, version : VARIANT, pfhasfeature : Int16*) : HRESULT
    @lpVtbl.value.has_feature.unsafe_as(Proc(UInt8*, VARIANT, Int16*, HRESULT)).call(bstrfeature, version, pfhasfeature)
  end
end
struct LibWin32::DispHTMLDOMAttribute
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLDOMTextNode
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLDOMImplementation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLAttributeCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(name : VARIANT*, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT*, IDispatch*, HRESULT)).call(name, pdisp)
  end
end
struct LibWin32::IHTMLAttributeCollection2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_named_item(bstrname : UInt8*, newretnode : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.get_named_item.unsafe_as(Proc(UInt8*, IHTMLDOMAttribute*, HRESULT)).call(bstrname, newretnode)
  end
  def set_named_item(ppnode : IHTMLDOMAttribute, newretnode : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.set_named_item.unsafe_as(Proc(IHTMLDOMAttribute, IHTMLDOMAttribute*, HRESULT)).call(ppnode, newretnode)
  end
  def remove_named_item(bstrname : UInt8*, newretnode : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.remove_named_item.unsafe_as(Proc(UInt8*, IHTMLDOMAttribute*, HRESULT)).call(bstrname, newretnode)
  end
end
struct LibWin32::IHTMLAttributeCollection4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_named_item_ns(pvarns : VARIANT*, bstrname : UInt8*, ppnodeout : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.get_named_item_ns.unsafe_as(Proc(VARIANT*, UInt8*, IHTMLDOMAttribute2*, HRESULT)).call(pvarns, bstrname, ppnodeout)
  end
  def set_named_item_ns(pnodein : IHTMLDOMAttribute2, ppnodeout : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.set_named_item_ns.unsafe_as(Proc(IHTMLDOMAttribute2, IHTMLDOMAttribute2*, HRESULT)).call(pnodein, ppnodeout)
  end
  def remove_named_item_ns(pvarns : VARIANT*, bstrname : UInt8*, ppnodeout : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.remove_named_item_ns.unsafe_as(Proc(VARIANT*, UInt8*, IHTMLDOMAttribute2*, HRESULT)).call(pvarns, bstrname, ppnodeout)
  end
  def get_named_item(bstrname : UInt8*, ppnodeout : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.get_named_item.unsafe_as(Proc(UInt8*, IHTMLDOMAttribute2*, HRESULT)).call(bstrname, ppnodeout)
  end
  def set_named_item(pnodein : IHTMLDOMAttribute2, ppnodeout : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.set_named_item.unsafe_as(Proc(IHTMLDOMAttribute2, IHTMLDOMAttribute2*, HRESULT)).call(pnodein, ppnodeout)
  end
  def remove_named_item(bstrname : UInt8*, ppnodeout : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.remove_named_item.unsafe_as(Proc(UInt8*, IHTMLDOMAttribute2*, HRESULT)).call(bstrname, ppnodeout)
  end
  def item(index : Int32, ppnodeout : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IHTMLDOMAttribute2*, HRESULT)).call(index, ppnodeout)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDOMChildrenCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(index : Int32, ppitem : IDispatch*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IDispatch*, HRESULT)).call(index, ppitem)
  end
end
struct LibWin32::IHTMLDOMChildrenCollection2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def item(index : Int32, ppitem : IDispatch*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IDispatch*, HRESULT)).call(index, ppitem)
  end
end
struct LibWin32::DispHTMLAttributeCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispStaticNodeList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispDOMChildrenCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLElementEvents4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLElementEvents3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IRulesAppliedCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def item(index : Int32, pprulesapplied : IRulesApplied*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IRulesApplied*, HRESULT)).call(index, pprulesapplied)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def property_inherited_from(name : UInt8*, pprulesapplied : IRulesApplied*) : HRESULT
    @lpVtbl.value.property_inherited_from.unsafe_as(Proc(UInt8*, IRulesApplied*, HRESULT)).call(name, pprulesapplied)
  end
  def get_property_count(p : Int32*) : HRESULT
    @lpVtbl.value.get_property_count.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def property(index : Int32, pbstrproperty : UInt8**) : HRESULT
    @lpVtbl.value.property.unsafe_as(Proc(Int32, UInt8**, HRESULT)).call(index, pbstrproperty)
  end
  def property_inherited_trace(name : UInt8*, index : Int32, pprulesapplied : IRulesApplied*) : HRESULT
    @lpVtbl.value.property_inherited_trace.unsafe_as(Proc(UInt8*, Int32, IRulesApplied*, HRESULT)).call(name, index, pprulesapplied)
  end
  def property_inherited_trace_length(name : UInt8*, plength : Int32*) : HRESULT
    @lpVtbl.value.property_inherited_trace_length.unsafe_as(Proc(UInt8*, Int32*, HRESULT)).call(name, plength)
  end
end
struct LibWin32::IHTMLElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def merge_attributes(mergethis : IHTMLElement, pvarflags : VARIANT*) : HRESULT
    @lpVtbl.value.merge_attributes.unsafe_as(Proc(IHTMLElement, VARIANT*, HRESULT)).call(mergethis, pvarflags)
  end
  def get_is_multi_line(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_multi_line.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_can_have_html(p : Int16*) : HRESULT
    @lpVtbl.value.get_can_have_html.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_onlayoutcomplete(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onlayoutcomplete.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onlayoutcomplete(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onlayoutcomplete.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onpage(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onpage.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onpage(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onpage.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_inflate_block(v : Int16) : HRESULT
    @lpVtbl.value.put_inflate_block.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_inflate_block(p : Int16*) : HRESULT
    @lpVtbl.value.get_inflate_block.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_onbeforedeactivate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforedeactivate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforedeactivate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforedeactivate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def set_active : HRESULT
    @lpVtbl.value.set_active.unsafe_as(Proc(HRESULT)).call
  end
  def put_content_editable(v : UInt8*) : HRESULT
    @lpVtbl.value.put_content_editable.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_content_editable(p : UInt8**) : HRESULT
    @lpVtbl.value.get_content_editable.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_is_content_editable(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_content_editable.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_hide_focus(v : Int16) : HRESULT
    @lpVtbl.value.put_hide_focus.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_hide_focus(p : Int16*) : HRESULT
    @lpVtbl.value.get_hide_focus.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_is_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_onmove(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmove.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmove(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmove.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncontrolselect(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncontrolselect.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncontrolselect(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncontrolselect.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def fire_event(bstreventname : UInt8*, pvareventobject : VARIANT*, pfcancelled : Int16*) : HRESULT
    @lpVtbl.value.fire_event.unsafe_as(Proc(UInt8*, VARIANT*, Int16*, HRESULT)).call(bstreventname, pvareventobject, pfcancelled)
  end
  def put_onresizestart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onresizestart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onresizestart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onresizestart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onresizeend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onresizeend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onresizeend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onresizeend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmovestart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmovestart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmovestart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmovestart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmoveend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmoveend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmoveend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmoveend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseenter(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseenter.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseenter(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseenter.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseleave(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseleave.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseleave(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseleave.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onactivate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onactivate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onactivate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onactivate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondeactivate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondeactivate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondeactivate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondeactivate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def drag_drop(pfret : Int16*) : HRESULT
    @lpVtbl.value.drag_drop.unsafe_as(Proc(Int16*, HRESULT)).call(pfret)
  end
  def get_glyph_mode(p : Int32*) : HRESULT
    @lpVtbl.value.get_glyph_mode.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLElement4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_onmousewheel(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmousewheel.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmousewheel(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmousewheel.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def normalize : HRESULT
    @lpVtbl.value.normalize.unsafe_as(Proc(HRESULT)).call
  end
  def get_attribute_node(bstrname : UInt8*, ppattribute : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.get_attribute_node.unsafe_as(Proc(UInt8*, IHTMLDOMAttribute*, HRESULT)).call(bstrname, ppattribute)
  end
  def set_attribute_node(pattr : IHTMLDOMAttribute, ppretattribute : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.set_attribute_node.unsafe_as(Proc(IHTMLDOMAttribute, IHTMLDOMAttribute*, HRESULT)).call(pattr, ppretattribute)
  end
  def remove_attribute_node(pattr : IHTMLDOMAttribute, ppretattribute : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.remove_attribute_node.unsafe_as(Proc(IHTMLDOMAttribute, IHTMLDOMAttribute*, HRESULT)).call(pattr, ppretattribute)
  end
  def put_onbeforeactivate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeactivate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeactivate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeactivate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onfocusin(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocusin.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocusin(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocusin.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onfocusout(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocusout.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocusout(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocusout.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IElementSelector
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def query_selector(v : UInt8*, pel : IHTMLElement*) : HRESULT
    @lpVtbl.value.query_selector.unsafe_as(Proc(UInt8*, IHTMLElement*, HRESULT)).call(v, pel)
  end
  def query_selector_all(v : UInt8*, pel : IHTMLDOMChildrenCollection*) : HRESULT
    @lpVtbl.value.query_selector_all.unsafe_as(Proc(UInt8*, IHTMLDOMChildrenCollection*, HRESULT)).call(v, pel)
  end
end
struct LibWin32::IHTMLElementRender
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def draw_to_dc(hdc : HDC) : HRESULT
    @lpVtbl.value.draw_to_dc.unsafe_as(Proc(HDC, HRESULT)).call(hdc)
  end
  def set_document_printer(bstrprintername : UInt8*, hdc : HDC) : HRESULT
    @lpVtbl.value.set_document_printer.unsafe_as(Proc(UInt8*, HDC, HRESULT)).call(bstrprintername, hdc)
  end
end
struct LibWin32::IHTMLUniqueName
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_unique_number(p : Int32*) : HRESULT
    @lpVtbl.value.get_unique_number.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unique_id(p : UInt8**) : HRESULT
    @lpVtbl.value.get_unique_id.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLElement5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_attribute_node(bstrname : UInt8*, ppretattribute : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.get_attribute_node.unsafe_as(Proc(UInt8*, IHTMLDOMAttribute2*, HRESULT)).call(bstrname, ppretattribute)
  end
  def set_attribute_node(pattr : IHTMLDOMAttribute2, ppretattribute : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.set_attribute_node.unsafe_as(Proc(IHTMLDOMAttribute2, IHTMLDOMAttribute2*, HRESULT)).call(pattr, ppretattribute)
  end
  def remove_attribute_node(pattr : IHTMLDOMAttribute2, ppretattribute : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.remove_attribute_node.unsafe_as(Proc(IHTMLDOMAttribute2, IHTMLDOMAttribute2*, HRESULT)).call(pattr, ppretattribute)
  end
  def has_attribute(name : UInt8*, pfhasattribute : Int16*) : HRESULT
    @lpVtbl.value.has_attribute.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(name, pfhasattribute)
  end
  def put_role(v : UInt8*) : HRESULT
    @lpVtbl.value.put_role.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_role(p : UInt8**) : HRESULT
    @lpVtbl.value.get_role.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_busy(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_busy.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_busy(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_busy.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_checked(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_checked.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_checked(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_checked.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_disabled(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_disabled.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_disabled(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_disabled.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_expanded(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_expanded.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_expanded(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_expanded.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_haspopup(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_haspopup.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_haspopup(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_haspopup.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_hidden(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_hidden.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_hidden(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_hidden.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_invalid(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_invalid.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_invalid(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_invalid.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_multiselectable(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_multiselectable.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_multiselectable(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_multiselectable.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_pressed(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_pressed.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_pressed(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_pressed.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_readonly(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_readonly.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_readonly(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_readonly.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_required(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_required.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_required(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_required.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_secret(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_secret.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_secret(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_secret.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_selected(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_selected.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_selected(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_selected.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_attribute(strattributename : UInt8*, attributevalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_attribute.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(strattributename, attributevalue)
  end
  def set_attribute(strattributename : UInt8*, attributevalue : VARIANT) : HRESULT
    @lpVtbl.value.set_attribute.unsafe_as(Proc(UInt8*, VARIANT, HRESULT)).call(strattributename, attributevalue)
  end
  def remove_attribute(strattributename : UInt8*, pfsuccess : Int16*) : HRESULT
    @lpVtbl.value.remove_attribute.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(strattributename, pfsuccess)
  end
  def get_attributes(p : IHTMLAttributeCollection3*) : HRESULT
    @lpVtbl.value.get_attributes.unsafe_as(Proc(IHTMLAttributeCollection3*, HRESULT)).call(p)
  end
  def put_aria_valuenow(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_valuenow.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_valuenow(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_valuenow.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_posinset(v : Int16) : HRESULT
    @lpVtbl.value.put_aria_posinset.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_aria_posinset(p : Int16*) : HRESULT
    @lpVtbl.value.get_aria_posinset.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_aria_setsize(v : Int16) : HRESULT
    @lpVtbl.value.put_aria_setsize.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_aria_setsize(p : Int16*) : HRESULT
    @lpVtbl.value.get_aria_setsize.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_aria_level(v : Int16) : HRESULT
    @lpVtbl.value.put_aria_level.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_aria_level(p : Int16*) : HRESULT
    @lpVtbl.value.get_aria_level.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_aria_valuemin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_valuemin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_valuemin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_valuemin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_valuemax(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_valuemax.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_valuemax(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_valuemax.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_controls(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_controls.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_controls(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_controls.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_describedby(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_describedby.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_describedby(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_describedby.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_flowto(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_flowto.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_flowto(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_flowto.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_labelledby(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_labelledby.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_labelledby(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_labelledby.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_activedescendant(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_activedescendant.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_activedescendant(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_activedescendant.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_owns(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_owns.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_owns(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_owns.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def has_attributes(pfhasattributes : Int16*) : HRESULT
    @lpVtbl.value.has_attributes.unsafe_as(Proc(Int16*, HRESULT)).call(pfhasattributes)
  end
  def put_aria_live(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_live.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_live(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_live.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_aria_relevant(v : UInt8*) : HRESULT
    @lpVtbl.value.put_aria_relevant.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_aria_relevant(p : UInt8**) : HRESULT
    @lpVtbl.value.get_aria_relevant.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLElement6
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_attribute_ns(pvarns : VARIANT*, strattributename : UInt8*, attributevalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_attribute_ns.unsafe_as(Proc(VARIANT*, UInt8*, VARIANT*, HRESULT)).call(pvarns, strattributename, attributevalue)
  end
  def set_attribute_ns(pvarns : VARIANT*, strattributename : UInt8*, pvarattributevalue : VARIANT*) : HRESULT
    @lpVtbl.value.set_attribute_ns.unsafe_as(Proc(VARIANT*, UInt8*, VARIANT*, HRESULT)).call(pvarns, strattributename, pvarattributevalue)
  end
  def remove_attribute_ns(pvarns : VARIANT*, strattributename : UInt8*) : HRESULT
    @lpVtbl.value.remove_attribute_ns.unsafe_as(Proc(VARIANT*, UInt8*, HRESULT)).call(pvarns, strattributename)
  end
  def get_attribute_node_ns(pvarns : VARIANT*, bstrname : UInt8*, ppretattribute : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.get_attribute_node_ns.unsafe_as(Proc(VARIANT*, UInt8*, IHTMLDOMAttribute2*, HRESULT)).call(pvarns, bstrname, ppretattribute)
  end
  def set_attribute_node_ns(pattr : IHTMLDOMAttribute2, ppretattribute : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.set_attribute_node_ns.unsafe_as(Proc(IHTMLDOMAttribute2, IHTMLDOMAttribute2*, HRESULT)).call(pattr, ppretattribute)
  end
  def has_attribute_ns(pvarns : VARIANT*, name : UInt8*, pfhasattribute : Int16*) : HRESULT
    @lpVtbl.value.has_attribute_ns.unsafe_as(Proc(VARIANT*, UInt8*, Int16*, HRESULT)).call(pvarns, name, pfhasattribute)
  end
  def get_attribute(strattributename : UInt8*, attributevalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_attribute.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(strattributename, attributevalue)
  end
  def set_attribute(strattributename : UInt8*, pvarattributevalue : VARIANT*) : HRESULT
    @lpVtbl.value.set_attribute.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(strattributename, pvarattributevalue)
  end
  def remove_attribute(strattributename : UInt8*) : HRESULT
    @lpVtbl.value.remove_attribute.unsafe_as(Proc(UInt8*, HRESULT)).call(strattributename)
  end
  def get_attribute_node(strattributename : UInt8*, ppretattribute : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.get_attribute_node.unsafe_as(Proc(UInt8*, IHTMLDOMAttribute2*, HRESULT)).call(strattributename, ppretattribute)
  end
  def set_attribute_node(pattr : IHTMLDOMAttribute2, ppretattribute : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.set_attribute_node.unsafe_as(Proc(IHTMLDOMAttribute2, IHTMLDOMAttribute2*, HRESULT)).call(pattr, ppretattribute)
  end
  def remove_attribute_node(pattr : IHTMLDOMAttribute2, ppretattribute : IHTMLDOMAttribute2*) : HRESULT
    @lpVtbl.value.remove_attribute_node.unsafe_as(Proc(IHTMLDOMAttribute2, IHTMLDOMAttribute2*, HRESULT)).call(pattr, ppretattribute)
  end
  def has_attribute(name : UInt8*, pfhasattribute : Int16*) : HRESULT
    @lpVtbl.value.has_attribute.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(name, pfhasattribute)
  end
  def get_elements_by_tag_name_ns(varns : VARIANT*, bstrlocalname : UInt8*, pelcoll : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_elements_by_tag_name_ns.unsafe_as(Proc(VARIANT*, UInt8*, IHTMLElementCollection*, HRESULT)).call(varns, bstrlocalname, pelcoll)
  end
  def get_tag_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_tag_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_node_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_node_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_elements_by_class_name(v : UInt8*, pel : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_elements_by_class_name.unsafe_as(Proc(UInt8*, IHTMLElementCollection*, HRESULT)).call(v, pel)
  end
  def ms_matches_selector(v : UInt8*, pfmatches : Int16*) : HRESULT
    @lpVtbl.value.ms_matches_selector.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(v, pfmatches)
  end
  def put_onabort(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onabort.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onabort(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onabort.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncanplay(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncanplay.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncanplay(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncanplay.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncanplaythrough(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncanplaythrough.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncanplaythrough(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncanplaythrough.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondurationchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondurationchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondurationchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondurationchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onemptied(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onemptied.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onemptied(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onemptied.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onended(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onended.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onended(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onended.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oninput(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oninput.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oninput(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oninput.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onloadeddata(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onloadeddata.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onloadeddata(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onloadeddata.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onloadedmetadata(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onloadedmetadata.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onloadedmetadata(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onloadedmetadata.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onloadstart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onloadstart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onloadstart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onloadstart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onpause(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onpause.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onpause(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onpause.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onplay(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onplay.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onplay(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onplay.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onplaying(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onplaying.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onplaying(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onplaying.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onprogress(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onprogress.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onprogress(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onprogress.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onratechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onratechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onratechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onratechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onreset(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreset.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreset(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreset.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onseeked(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onseeked.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onseeked(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onseeked.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onseeking(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onseeking.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onseeking(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onseeking.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onselect(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onselect.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onselect(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onselect.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onstalled(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onstalled.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onstalled(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onstalled.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onsubmit(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onsubmit.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onsubmit(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onsubmit.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onsuspend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onsuspend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onsuspend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onsuspend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ontimeupdate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ontimeupdate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ontimeupdate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ontimeupdate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onvolumechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onvolumechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onvolumechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onvolumechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onwaiting(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onwaiting.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onwaiting(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onwaiting.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def has_attributes(pfhasattributes : Int16*) : HRESULT
    @lpVtbl.value.has_attributes.unsafe_as(Proc(Int16*, HRESULT)).call(pfhasattributes)
  end
end
struct LibWin32::IHTMLElement7
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_onmspointerdown(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerdown.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerdown(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerdown.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointermove(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointermove.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointermove(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointermove.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerup(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerup.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerup(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerup.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerout(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerout.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerout(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerout.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointercancel(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointercancel.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointercancel(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointercancel.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerhover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerhover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerhover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerhover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmslostpointercapture(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmslostpointercapture.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmslostpointercapture(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmslostpointercapture.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgotpointercapture(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgotpointercapture.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgotpointercapture(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgotpointercapture.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturestart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturestart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturestart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturestart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgestureend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgestureend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgestureend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgestureend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturehold(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturehold.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturehold(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturehold.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturetap(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturetap.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturetap(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturetap.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturedoubletap(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturedoubletap.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturedoubletap(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturedoubletap.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsinertiastart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsinertiastart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsinertiastart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsinertiastart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def ms_set_pointer_capture(pointerid : Int32) : HRESULT
    @lpVtbl.value.ms_set_pointer_capture.unsafe_as(Proc(Int32, HRESULT)).call(pointerid)
  end
  def ms_release_pointer_capture(pointerid : Int32) : HRESULT
    @lpVtbl.value.ms_release_pointer_capture.unsafe_as(Proc(Int32, HRESULT)).call(pointerid)
  end
  def put_onmstransitionstart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmstransitionstart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmstransitionstart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmstransitionstart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmstransitionend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmstransitionend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmstransitionend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmstransitionend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsanimationstart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsanimationstart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsanimationstart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsanimationstart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsanimationend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsanimationend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsanimationend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsanimationend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsanimationiteration(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsanimationiteration.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsanimationiteration(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsanimationiteration.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oninvalid(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oninvalid.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oninvalid(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oninvalid.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_xms_accelerator_key(v : UInt8*) : HRESULT
    @lpVtbl.value.put_xms_accelerator_key.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_xms_accelerator_key(p : UInt8**) : HRESULT
    @lpVtbl.value.get_xms_accelerator_key.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_spellcheck(v : VARIANT) : HRESULT
    @lpVtbl.value.put_spellcheck.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_spellcheck(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_spellcheck.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsmanipulationstatechanged(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsmanipulationstatechanged.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsmanipulationstatechanged(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsmanipulationstatechanged.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncuechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncuechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncuechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncuechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLElementAppliedStyles
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def ms_get_rules_applied(pprulesappliedcollection : IRulesAppliedCollection*) : HRESULT
    @lpVtbl.value.ms_get_rules_applied.unsafe_as(Proc(IRulesAppliedCollection*, HRESULT)).call(pprulesappliedcollection)
  end
  def ms_get_rules_applied_with_ancestor(varcontext : VARIANT, pprulesappliedcollection : IRulesAppliedCollection*) : HRESULT
    @lpVtbl.value.ms_get_rules_applied_with_ancestor.unsafe_as(Proc(VARIANT, IRulesAppliedCollection*, HRESULT)).call(varcontext, pprulesappliedcollection)
  end
end
struct LibWin32::IElementTraversal
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_first_element_child(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_first_element_child.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_last_element_child(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_last_element_child.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_previous_element_sibling(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_previous_element_sibling.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_next_element_sibling(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_next_element_sibling.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_child_element_count(p : Int32*) : HRESULT
    @lpVtbl.value.get_child_element_count.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDatabinding
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_data_fld(v : UInt8*) : HRESULT
    @lpVtbl.value.put_data_fld.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_data_fld(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data_fld.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_data_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_data_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_data_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_data_format_as(v : UInt8*) : HRESULT
    @lpVtbl.value.put_data_format_as.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_data_format_as(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data_format_as.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDocument
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_script(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_script.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLElementDefaults
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_style(p : IHTMLStyle*) : HRESULT
    @lpVtbl.value.get_style.unsafe_as(Proc(IHTMLStyle*, HRESULT)).call(p)
  end
  def put_tab_stop(v : Int16) : HRESULT
    @lpVtbl.value.put_tab_stop.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_tab_stop(p : Int16*) : HRESULT
    @lpVtbl.value.get_tab_stop.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_view_inherit_style(v : Int16) : HRESULT
    @lpVtbl.value.put_view_inherit_style.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_view_inherit_style(p : Int16*) : HRESULT
    @lpVtbl.value.get_view_inherit_style.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_view_master_tab(v : Int16) : HRESULT
    @lpVtbl.value.put_view_master_tab.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_view_master_tab(p : Int16*) : HRESULT
    @lpVtbl.value.get_view_master_tab.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_scroll_segment_x(v : Int32) : HRESULT
    @lpVtbl.value.put_scroll_segment_x.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_scroll_segment_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_segment_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_scroll_segment_y(v : Int32) : HRESULT
    @lpVtbl.value.put_scroll_segment_y.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_scroll_segment_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_segment_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_is_multi_line(v : Int16) : HRESULT
    @lpVtbl.value.put_is_multi_line.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_is_multi_line(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_multi_line.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_content_editable(v : UInt8*) : HRESULT
    @lpVtbl.value.put_content_editable.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_content_editable(p : UInt8**) : HRESULT
    @lpVtbl.value.get_content_editable.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_can_have_html(v : Int16) : HRESULT
    @lpVtbl.value.put_can_have_html.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_can_have_html(p : Int16*) : HRESULT
    @lpVtbl.value.get_can_have_html.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def putref_view_link(v : IHTMLDocument) : HRESULT
    @lpVtbl.value.putref_view_link.unsafe_as(Proc(IHTMLDocument, HRESULT)).call(v)
  end
  def get_view_link(p : IHTMLDocument*) : HRESULT
    @lpVtbl.value.get_view_link.unsafe_as(Proc(IHTMLDocument*, HRESULT)).call(p)
  end
  def put_frozen(v : Int16) : HRESULT
    @lpVtbl.value.put_frozen.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frozen(p : Int16*) : HRESULT
    @lpVtbl.value.get_frozen.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLDefaults
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTCDefaultDispatch
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def create_event_object(eventobj : IHTMLEventObj*) : HRESULT
    @lpVtbl.value.create_event_object.unsafe_as(Proc(IHTMLEventObj*, HRESULT)).call(eventobj)
  end
  def get_defaults(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_defaults.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_document(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTCPropertyBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def fire_change : HRESULT
    @lpVtbl.value.fire_change.unsafe_as(Proc(HRESULT)).call
  end
  def put_value(v : VARIANT) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_value(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTCMethodBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTCEventBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def fire(pvar : IHTMLEventObj) : HRESULT
    @lpVtbl.value.fire.unsafe_as(Proc(IHTMLEventObj, HRESULT)).call(pvar)
  end
end
struct LibWin32::IHTCAttachBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def fire_event(evt : IDispatch) : HRESULT
    @lpVtbl.value.fire_event.unsafe_as(Proc(IDispatch, HRESULT)).call(evt)
  end
  def detach_event : HRESULT
    @lpVtbl.value.detach_event.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IHTCAttachBehavior2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def fire_event(evt : VARIANT) : HRESULT
    @lpVtbl.value.fire_event.unsafe_as(Proc(VARIANT, HRESULT)).call(evt)
  end
end
struct LibWin32::IHTCDescBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_urn(p : UInt8**) : HRESULT
    @lpVtbl.value.get_urn.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTCDefaultDispatch
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTCPropertyBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTCMethodBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTCEventBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTCAttachBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTCDescBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLUrnCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(index : Int32, ppurn : UInt8**) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, UInt8**, HRESULT)).call(index, ppurn)
  end
end
struct LibWin32::DispHTMLUrnCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLGenericElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_recordset(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_recordset.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def named_recordset(datamember : UInt8*, hierarchy : VARIANT*, pprecordset : IDispatch*) : HRESULT
    @lpVtbl.value.named_recordset.unsafe_as(Proc(UInt8*, VARIANT*, IDispatch*, HRESULT)).call(datamember, hierarchy, pprecordset)
  end
end
struct LibWin32::DispHTMLGenericElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLStyleSheetRuleApplied
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_ms_specificity(p : Int32*) : HRESULT
    @lpVtbl.value.get_ms_specificity.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def ms_get_specificity(index : Int32, p : Int32*) : HRESULT
    @lpVtbl.value.ms_get_specificity.unsafe_as(Proc(Int32, Int32*, HRESULT)).call(index, p)
  end
end
struct LibWin32::IHTMLStyleSheetRule2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_selector_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_selector_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_selector_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_selector_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStyleSheetRulesCollection2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(index : Int32, pphtmlcssrule : IHTMLCSSRule*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IHTMLCSSRule*, HRESULT)).call(index, pphtmlcssrule)
  end
end
struct LibWin32::DispHTMLStyleSheetRule
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLStyleSheetRulesCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLStyleSheetPage
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_selector(p : UInt8**) : HRESULT
    @lpVtbl.value.get_selector.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_pseudo_class(p : UInt8**) : HRESULT
    @lpVtbl.value.get_pseudo_class.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStyleSheetPage2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_selector_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_selector_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_selector_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_selector_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_style(p : IHTMLRuleStyle*) : HRESULT
    @lpVtbl.value.get_style.unsafe_as(Proc(IHTMLRuleStyle*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStyleSheetPagesCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(index : Int32, pphtmlstylesheetpage : IHTMLStyleSheetPage*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IHTMLStyleSheetPage*, HRESULT)).call(index, pphtmlstylesheetpage)
  end
end
struct LibWin32::DispHTMLStyleSheetPage
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLStyleSheetPagesCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLStyleSheetsCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(pvarindex : VARIANT*, pvarresult : VARIANT*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarindex, pvarresult)
  end
end
struct LibWin32::IHTMLStyleSheet2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_pages(p : IHTMLStyleSheetPagesCollection*) : HRESULT
    @lpVtbl.value.get_pages.unsafe_as(Proc(IHTMLStyleSheetPagesCollection*, HRESULT)).call(p)
  end
  def add_page_rule(bstrselector : UInt8*, bstrstyle : UInt8*, lindex : Int32, plnewindex : Int32*) : HRESULT
    @lpVtbl.value.add_page_rule.unsafe_as(Proc(UInt8*, UInt8*, Int32, Int32*, HRESULT)).call(bstrselector, bstrstyle, lindex, plnewindex)
  end
end
struct LibWin32::IHTMLStyleSheet3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_href(v : UInt8*) : HRESULT
    @lpVtbl.value.put_href.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_is_alternate(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_alternate.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_is_pref_alternate(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_pref_alternate.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStyleSheet4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_href(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_title(p : UInt8**) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_owner_node(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_owner_node.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_owner_rule(p : IHTMLCSSRule*) : HRESULT
    @lpVtbl.value.get_owner_rule.unsafe_as(Proc(IHTMLCSSRule*, HRESULT)).call(p)
  end
  def get_css_rules(p : IHTMLStyleSheetRulesCollection*) : HRESULT
    @lpVtbl.value.get_css_rules.unsafe_as(Proc(IHTMLStyleSheetRulesCollection*, HRESULT)).call(p)
  end
  def get_media(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_media.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def insert_rule(bstrrule : UInt8*, lindex : Int32, plnewindex : Int32*) : HRESULT
    @lpVtbl.value.insert_rule.unsafe_as(Proc(UInt8*, Int32, Int32*, HRESULT)).call(bstrrule, lindex, plnewindex)
  end
  def delete_rule(lindex : Int32) : HRESULT
    @lpVtbl.value.delete_rule.unsafe_as(Proc(Int32, HRESULT)).call(lindex)
  end
end
struct LibWin32::DispHTMLStyleSheet
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLStyleSheetsCollection2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def item(index : Int32, pvarresult : VARIANT*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, VARIANT*, HRESULT)).call(index, pvarresult)
  end
end
struct LibWin32::DispHTMLStyleSheetsCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLLinkElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLLinkElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLLinkElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_href(v : UInt8*) : HRESULT
    @lpVtbl.value.put_href.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_rel(v : UInt8*) : HRESULT
    @lpVtbl.value.put_rel.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_rel(p : UInt8**) : HRESULT
    @lpVtbl.value.get_rel.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_rev(v : UInt8*) : HRESULT
    @lpVtbl.value.put_rev.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_rev(p : UInt8**) : HRESULT
    @lpVtbl.value.get_rev.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_ready_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onreadystatechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreadystatechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreadystatechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreadystatechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_style_sheet(p : IHTMLStyleSheet*) : HRESULT
    @lpVtbl.value.get_style_sheet.unsafe_as(Proc(IHTMLStyleSheet*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_media(v : UInt8*) : HRESULT
    @lpVtbl.value.put_media.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_media(p : UInt8**) : HRESULT
    @lpVtbl.value.get_media.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLLinkElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_target(v : UInt8*) : HRESULT
    @lpVtbl.value.put_target.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_target(p : UInt8**) : HRESULT
    @lpVtbl.value.get_target.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLLinkElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_charset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_charset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_charset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_charset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_hreflang(v : UInt8*) : HRESULT
    @lpVtbl.value.put_hreflang.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_hreflang(p : UInt8**) : HRESULT
    @lpVtbl.value.get_hreflang.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLLinkElement4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_href(v : UInt8*) : HRESULT
    @lpVtbl.value.put_href.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLLinkElement5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_sheet(p : IHTMLStyleSheet*) : HRESULT
    @lpVtbl.value.get_sheet.unsafe_as(Proc(IHTMLStyleSheet*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLLinkElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLTxtRange
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_html_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_html_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def parent_element(parent : IHTMLElement*) : HRESULT
    @lpVtbl.value.parent_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(parent)
  end
  def duplicate(duplicate : IHTMLTxtRange*) : HRESULT
    @lpVtbl.value.duplicate.unsafe_as(Proc(IHTMLTxtRange*, HRESULT)).call(duplicate)
  end
  def in_range(range : IHTMLTxtRange, inrange : Int16*) : HRESULT
    @lpVtbl.value.in_range.unsafe_as(Proc(IHTMLTxtRange, Int16*, HRESULT)).call(range, inrange)
  end
  def is_equal(range : IHTMLTxtRange, isequal : Int16*) : HRESULT
    @lpVtbl.value.is_equal.unsafe_as(Proc(IHTMLTxtRange, Int16*, HRESULT)).call(range, isequal)
  end
  def scroll_into_view(fstart : Int16) : HRESULT
    @lpVtbl.value.scroll_into_view.unsafe_as(Proc(Int16, HRESULT)).call(fstart)
  end
  def collapse(start : Int16) : HRESULT
    @lpVtbl.value.collapse.unsafe_as(Proc(Int16, HRESULT)).call(start)
  end
  def expand(unit : UInt8*, success : Int16*) : HRESULT
    @lpVtbl.value.expand.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(unit, success)
  end
  def move(unit : UInt8*, count : Int32, actualcount : Int32*) : HRESULT
    @lpVtbl.value.move.unsafe_as(Proc(UInt8*, Int32, Int32*, HRESULT)).call(unit, count, actualcount)
  end
  def move_start(unit : UInt8*, count : Int32, actualcount : Int32*) : HRESULT
    @lpVtbl.value.move_start.unsafe_as(Proc(UInt8*, Int32, Int32*, HRESULT)).call(unit, count, actualcount)
  end
  def move_end(unit : UInt8*, count : Int32, actualcount : Int32*) : HRESULT
    @lpVtbl.value.move_end.unsafe_as(Proc(UInt8*, Int32, Int32*, HRESULT)).call(unit, count, actualcount)
  end
  def select : HRESULT
    @lpVtbl.value.select.unsafe_as(Proc(HRESULT)).call
  end
  def paste_html(html : UInt8*) : HRESULT
    @lpVtbl.value.paste_html.unsafe_as(Proc(UInt8*, HRESULT)).call(html)
  end
  def move_to_element_text(element : IHTMLElement) : HRESULT
    @lpVtbl.value.move_to_element_text.unsafe_as(Proc(IHTMLElement, HRESULT)).call(element)
  end
  def set_end_point(how : UInt8*, sourcerange : IHTMLTxtRange) : HRESULT
    @lpVtbl.value.set_end_point.unsafe_as(Proc(UInt8*, IHTMLTxtRange, HRESULT)).call(how, sourcerange)
  end
  def compare_end_points(how : UInt8*, sourcerange : IHTMLTxtRange, ret : Int32*) : HRESULT
    @lpVtbl.value.compare_end_points.unsafe_as(Proc(UInt8*, IHTMLTxtRange, Int32*, HRESULT)).call(how, sourcerange, ret)
  end
  def find_text(string : UInt8*, count : Int32, flags : Int32, success : Int16*) : HRESULT
    @lpVtbl.value.find_text.unsafe_as(Proc(UInt8*, Int32, Int32, Int16*, HRESULT)).call(string, count, flags, success)
  end
  def move_to_point(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.move_to_point.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
  def get_bookmark(boolmark : UInt8**) : HRESULT
    @lpVtbl.value.get_bookmark.unsafe_as(Proc(UInt8**, HRESULT)).call(boolmark)
  end
  def move_to_bookmark(bookmark : UInt8*, success : Int16*) : HRESULT
    @lpVtbl.value.move_to_bookmark.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bookmark, success)
  end
  def query_command_supported(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_supported.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_enabled(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_enabled.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_state(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_state.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_indeterm(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_indeterm.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_text(cmdid : UInt8*, pcmdtext : UInt8**) : HRESULT
    @lpVtbl.value.query_command_text.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(cmdid, pcmdtext)
  end
  def query_command_value(cmdid : UInt8*, pcmdvalue : VARIANT*) : HRESULT
    @lpVtbl.value.query_command_value.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(cmdid, pcmdvalue)
  end
  def exec_command(cmdid : UInt8*, showui : Int16, value : VARIANT, pfret : Int16*) : HRESULT
    @lpVtbl.value.exec_command.unsafe_as(Proc(UInt8*, Int16, VARIANT, Int16*, HRESULT)).call(cmdid, showui, value, pfret)
  end
  def exec_command_show_help(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.exec_command_show_help.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
end
struct LibWin32::IHTMLTextRangeMetrics
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_offset_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_offset_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_bounding_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_bounding_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_bounding_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_bounding_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_bounding_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_bounding_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_bounding_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_bounding_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTextRangeMetrics2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_client_rects(prectcol : IHTMLRectCollection*) : HRESULT
    @lpVtbl.value.get_client_rects.unsafe_as(Proc(IHTMLRectCollection*, HRESULT)).call(prectcol)
  end
  def get_bounding_client_rect(prect : IHTMLRect*) : HRESULT
    @lpVtbl.value.get_bounding_client_rect.unsafe_as(Proc(IHTMLRect*, HRESULT)).call(prect)
  end
end
struct LibWin32::IHTMLTxtRangeCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(pvarindex : VARIANT*, pvarresult : VARIANT*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarindex, pvarresult)
  end
end
struct LibWin32::IHTMLDOMRange
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_start_container(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_start_container.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_start_offset(p : Int32*) : HRESULT
    @lpVtbl.value.get_start_offset.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_end_container(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_end_container.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_end_offset(p : Int32*) : HRESULT
    @lpVtbl.value.get_end_offset.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_collapsed(p : Int16*) : HRESULT
    @lpVtbl.value.get_collapsed.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_common_ancestor_container(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_common_ancestor_container.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def set_start(refnode : IDispatch, offset : Int32) : HRESULT
    @lpVtbl.value.set_start.unsafe_as(Proc(IDispatch, Int32, HRESULT)).call(refnode, offset)
  end
  def set_end(refnode : IDispatch, offset : Int32) : HRESULT
    @lpVtbl.value.set_end.unsafe_as(Proc(IDispatch, Int32, HRESULT)).call(refnode, offset)
  end
  def set_start_before(refnode : IDispatch) : HRESULT
    @lpVtbl.value.set_start_before.unsafe_as(Proc(IDispatch, HRESULT)).call(refnode)
  end
  def set_start_after(refnode : IDispatch) : HRESULT
    @lpVtbl.value.set_start_after.unsafe_as(Proc(IDispatch, HRESULT)).call(refnode)
  end
  def set_end_before(refnode : IDispatch) : HRESULT
    @lpVtbl.value.set_end_before.unsafe_as(Proc(IDispatch, HRESULT)).call(refnode)
  end
  def set_end_after(refnode : IDispatch) : HRESULT
    @lpVtbl.value.set_end_after.unsafe_as(Proc(IDispatch, HRESULT)).call(refnode)
  end
  def collapse(tostart : Int16) : HRESULT
    @lpVtbl.value.collapse.unsafe_as(Proc(Int16, HRESULT)).call(tostart)
  end
  def select_node(refnode : IDispatch) : HRESULT
    @lpVtbl.value.select_node.unsafe_as(Proc(IDispatch, HRESULT)).call(refnode)
  end
  def select_node_contents(refnode : IDispatch) : HRESULT
    @lpVtbl.value.select_node_contents.unsafe_as(Proc(IDispatch, HRESULT)).call(refnode)
  end
  def compare_boundary_points(how : Int16, sourcerange : IDispatch, compareresult : Int32*) : HRESULT
    @lpVtbl.value.compare_boundary_points.unsafe_as(Proc(Int16, IDispatch, Int32*, HRESULT)).call(how, sourcerange, compareresult)
  end
  def delete_contents : HRESULT
    @lpVtbl.value.delete_contents.unsafe_as(Proc(HRESULT)).call
  end
  def extract_contents(ppdocumentfragment : IDispatch*) : HRESULT
    @lpVtbl.value.extract_contents.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdocumentfragment)
  end
  def clone_contents(ppdocumentfragment : IDispatch*) : HRESULT
    @lpVtbl.value.clone_contents.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdocumentfragment)
  end
  def insert_node(newnode : IDispatch) : HRESULT
    @lpVtbl.value.insert_node.unsafe_as(Proc(IDispatch, HRESULT)).call(newnode)
  end
  def surround_contents(newparent : IDispatch) : HRESULT
    @lpVtbl.value.surround_contents.unsafe_as(Proc(IDispatch, HRESULT)).call(newparent)
  end
  def clone_range(ppclonedrange : IHTMLDOMRange*) : HRESULT
    @lpVtbl.value.clone_range.unsafe_as(Proc(IHTMLDOMRange*, HRESULT)).call(ppclonedrange)
  end
  def to_string(prangestring : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(prangestring)
  end
  def detach : HRESULT
    @lpVtbl.value.detach.unsafe_as(Proc(HRESULT)).call
  end
  def get_client_rects(pprectcol : IHTMLRectCollection*) : HRESULT
    @lpVtbl.value.get_client_rects.unsafe_as(Proc(IHTMLRectCollection*, HRESULT)).call(pprectcol)
  end
  def get_bounding_client_rect(pprect : IHTMLRect*) : HRESULT
    @lpVtbl.value.get_bounding_client_rect.unsafe_as(Proc(IHTMLRect*, HRESULT)).call(pprect)
  end
end
struct LibWin32::DispHTMLDOMRange
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLFormElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLFormElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLFormElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_action(v : UInt8*) : HRESULT
    @lpVtbl.value.put_action.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_action(p : UInt8**) : HRESULT
    @lpVtbl.value.get_action.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_dir(v : UInt8*) : HRESULT
    @lpVtbl.value.put_dir.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_dir(p : UInt8**) : HRESULT
    @lpVtbl.value.get_dir.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_encoding(v : UInt8*) : HRESULT
    @lpVtbl.value.put_encoding.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_encoding(p : UInt8**) : HRESULT
    @lpVtbl.value.get_encoding.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_method(v : UInt8*) : HRESULT
    @lpVtbl.value.put_method.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_method(p : UInt8**) : HRESULT
    @lpVtbl.value.get_method.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_elements(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_elements.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def put_target(v : UInt8*) : HRESULT
    @lpVtbl.value.put_target.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_target(p : UInt8**) : HRESULT
    @lpVtbl.value.get_target.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onsubmit(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onsubmit.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onsubmit(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onsubmit.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onreset(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreset.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreset(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreset.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def submit : HRESULT
    @lpVtbl.value.submit.unsafe_as(Proc(HRESULT)).call
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def put_length(v : Int32) : HRESULT
    @lpVtbl.value.put_length.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(name : VARIANT, index : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT, VARIANT, IDispatch*, HRESULT)).call(name, index, pdisp)
  end
  def tags(tagname : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.tags.unsafe_as(Proc(VARIANT, IDispatch*, HRESULT)).call(tagname, pdisp)
  end
end
struct LibWin32::IHTMLFormElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_accept_charset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_accept_charset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_accept_charset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_accept_charset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def urns(urn : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.urns.unsafe_as(Proc(VARIANT, IDispatch*, HRESULT)).call(urn, pdisp)
  end
end
struct LibWin32::IHTMLFormElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def named_item(name : UInt8*, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.named_item.unsafe_as(Proc(UInt8*, IDispatch*, HRESULT)).call(name, pdisp)
  end
end
struct LibWin32::IHTMLSubmitData
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def append_name_value_pair(name : UInt8*, value : UInt8*) : HRESULT
    @lpVtbl.value.append_name_value_pair.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(name, value)
  end
  def append_name_file_pair(name : UInt8*, filename : UInt8*) : HRESULT
    @lpVtbl.value.append_name_file_pair.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(name, filename)
  end
  def append_item_separator : HRESULT
    @lpVtbl.value.append_item_separator.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IHTMLFormElement4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_action(v : UInt8*) : HRESULT
    @lpVtbl.value.put_action.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_action(p : UInt8**) : HRESULT
    @lpVtbl.value.get_action.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLFormElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLControlElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLControlElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLControlElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_tab_index(v : Int16) : HRESULT
    @lpVtbl.value.put_tab_index.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_tab_index(p : Int16*) : HRESULT
    @lpVtbl.value.get_tab_index.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def focus : HRESULT
    @lpVtbl.value.focus.unsafe_as(Proc(HRESULT)).call
  end
  def put_access_key(v : UInt8*) : HRESULT
    @lpVtbl.value.put_access_key.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_access_key(p : UInt8**) : HRESULT
    @lpVtbl.value.get_access_key.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onblur(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onblur.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onblur(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onblur.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onfocus(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocus.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocus(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocus.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onresize(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onresize.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onresize(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onresize.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def blur : HRESULT
    @lpVtbl.value.blur.unsafe_as(Proc(HRESULT)).call
  end
  def add_filter(punk : IUnknown) : HRESULT
    @lpVtbl.value.add_filter.unsafe_as(Proc(IUnknown, HRESULT)).call(punk)
  end
  def remove_filter(punk : IUnknown) : HRESULT
    @lpVtbl.value.remove_filter.unsafe_as(Proc(IUnknown, HRESULT)).call(punk)
  end
  def get_client_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTextElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLTextElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLTextContainerEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLTextContainerEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLTextContainer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create_control_range(range : IDispatch*) : HRESULT
    @lpVtbl.value.create_control_range.unsafe_as(Proc(IDispatch*, HRESULT)).call(range)
  end
  def get_scroll_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_scroll_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_scroll_top(v : Int32) : HRESULT
    @lpVtbl.value.put_scroll_top.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_scroll_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_scroll_left(v : Int32) : HRESULT
    @lpVtbl.value.put_scroll_left.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_scroll_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_onscroll(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onscroll.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onscroll(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onscroll.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLControlRange
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def select : HRESULT
    @lpVtbl.value.select.unsafe_as(Proc(HRESULT)).call
  end
  def add(item : IHTMLControlElement) : HRESULT
    @lpVtbl.value.add.unsafe_as(Proc(IHTMLControlElement, HRESULT)).call(item)
  end
  def remove(index : Int32) : HRESULT
    @lpVtbl.value.remove.unsafe_as(Proc(Int32, HRESULT)).call(index)
  end
  def item(index : Int32, pdisp : IHTMLElement*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IHTMLElement*, HRESULT)).call(index, pdisp)
  end
  def scroll_into_view(varargstart : VARIANT) : HRESULT
    @lpVtbl.value.scroll_into_view.unsafe_as(Proc(VARIANT, HRESULT)).call(varargstart)
  end
  def query_command_supported(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_supported.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_enabled(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_enabled.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_state(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_state.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_indeterm(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_indeterm.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_text(cmdid : UInt8*, pcmdtext : UInt8**) : HRESULT
    @lpVtbl.value.query_command_text.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(cmdid, pcmdtext)
  end
  def query_command_value(cmdid : UInt8*, pcmdvalue : VARIANT*) : HRESULT
    @lpVtbl.value.query_command_value.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(cmdid, pcmdvalue)
  end
  def exec_command(cmdid : UInt8*, showui : Int16, value : VARIANT, pfret : Int16*) : HRESULT
    @lpVtbl.value.exec_command.unsafe_as(Proc(UInt8*, Int16, VARIANT, Int16*, HRESULT)).call(cmdid, showui, value, pfret)
  end
  def exec_command_show_help(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.exec_command_show_help.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def common_parent_element(parent : IHTMLElement*) : HRESULT
    @lpVtbl.value.common_parent_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(parent)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLControlRange2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def add_element(item : IHTMLElement) : HRESULT
    @lpVtbl.value.add_element.unsafe_as(Proc(IHTMLElement, HRESULT)).call(item)
  end
end
struct LibWin32::HTMLImgEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLImgEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLImgElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_is_map(v : Int16) : HRESULT
    @lpVtbl.value.put_is_map.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_is_map(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_map.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_use_map(v : UInt8*) : HRESULT
    @lpVtbl.value.put_use_map.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_use_map(p : UInt8**) : HRESULT
    @lpVtbl.value.get_use_map.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_mime_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_mime_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_file_size(p : UInt8**) : HRESULT
    @lpVtbl.value.get_file_size.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_file_created_date(p : UInt8**) : HRESULT
    @lpVtbl.value.get_file_created_date.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_file_modified_date(p : UInt8**) : HRESULT
    @lpVtbl.value.get_file_modified_date.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_file_updated_date(p : UInt8**) : HRESULT
    @lpVtbl.value.get_file_updated_date.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_protocol(p : UInt8**) : HRESULT
    @lpVtbl.value.get_protocol.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_name_prop(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name_prop.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_vspace(v : Int32) : HRESULT
    @lpVtbl.value.put_vspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_vspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_vspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_hspace(v : Int32) : HRESULT
    @lpVtbl.value.put_hspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_hspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_hspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_alt(v : UInt8*) : HRESULT
    @lpVtbl.value.put_alt.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_alt(p : UInt8**) : HRESULT
    @lpVtbl.value.get_alt.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_lowsrc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_lowsrc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_lowsrc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_lowsrc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_vrml(v : UInt8*) : HRESULT
    @lpVtbl.value.put_vrml.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_vrml(p : UInt8**) : HRESULT
    @lpVtbl.value.get_vrml.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_dynsrc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_dynsrc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_dynsrc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_dynsrc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_ready_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_complete(p : Int16*) : HRESULT
    @lpVtbl.value.get_complete.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_loop(v : VARIANT) : HRESULT
    @lpVtbl.value.put_loop.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_loop(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_loop.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onabort(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onabort.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onabort(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onabort.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_width(v : Int32) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_height(v : Int32) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_start(v : UInt8*) : HRESULT
    @lpVtbl.value.put_start.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_start(p : UInt8**) : HRESULT
    @lpVtbl.value.get_start.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLImgElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_long_desc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_long_desc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_long_desc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_long_desc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLImgElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_long_desc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_long_desc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_long_desc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_long_desc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_vrml(v : UInt8*) : HRESULT
    @lpVtbl.value.put_vrml.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_vrml(p : UInt8**) : HRESULT
    @lpVtbl.value.get_vrml.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_lowsrc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_lowsrc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_lowsrc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_lowsrc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_dynsrc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_dynsrc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_dynsrc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_dynsrc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLImgElement4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_natural_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_natural_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_natural_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_natural_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLMSImgElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ms_play_to_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_ms_play_to_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_ms_play_to_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_ms_play_to_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_ms_play_to_primary(v : Int16) : HRESULT
    @lpVtbl.value.put_ms_play_to_primary.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_ms_play_to_primary(p : Int16*) : HRESULT
    @lpVtbl.value.get_ms_play_to_primary.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLImageElementFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create(width : VARIANT, height : VARIANT, midl__ihtmlimageelementfactory0000 : IHTMLImgElement*) : HRESULT
    @lpVtbl.value.create.unsafe_as(Proc(VARIANT, VARIANT, IHTMLImgElement*, HRESULT)).call(width, height, midl__ihtmlimageelementfactory0000)
  end
end
struct LibWin32::DispHTMLImg
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLBodyElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_background(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_bg_properties(v : UInt8*) : HRESULT
    @lpVtbl.value.put_bg_properties.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_bg_properties(p : UInt8**) : HRESULT
    @lpVtbl.value.get_bg_properties.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_left_margin(v : VARIANT) : HRESULT
    @lpVtbl.value.put_left_margin.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_left_margin(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_left_margin.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_top_margin(v : VARIANT) : HRESULT
    @lpVtbl.value.put_top_margin.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_top_margin(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_top_margin.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_right_margin(v : VARIANT) : HRESULT
    @lpVtbl.value.put_right_margin.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_right_margin(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_right_margin.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_bottom_margin(v : VARIANT) : HRESULT
    @lpVtbl.value.put_bottom_margin.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_bottom_margin(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bottom_margin.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_no_wrap(v : Int16) : HRESULT
    @lpVtbl.value.put_no_wrap.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_no_wrap(p : Int16*) : HRESULT
    @lpVtbl.value.get_no_wrap.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_bg_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_bg_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_bg_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bg_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_text(v : VARIANT) : HRESULT
    @lpVtbl.value.put_text.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_text(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_text.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_link(v : VARIANT) : HRESULT
    @lpVtbl.value.put_link.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_link(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_link.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_v_link(v : VARIANT) : HRESULT
    @lpVtbl.value.put_v_link.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_v_link(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_v_link.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_a_link(v : VARIANT) : HRESULT
    @lpVtbl.value.put_a_link.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_a_link(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_a_link.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onunload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onunload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onunload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onunload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scroll(v : UInt8*) : HRESULT
    @lpVtbl.value.put_scroll.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_scroll(p : UInt8**) : HRESULT
    @lpVtbl.value.get_scroll.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onselect(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onselect.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onselect(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onselect.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onbeforeunload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeunload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeunload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeunload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def create_text_range(range : IHTMLTxtRange*) : HRESULT
    @lpVtbl.value.create_text_range.unsafe_as(Proc(IHTMLTxtRange*, HRESULT)).call(range)
  end
end
struct LibWin32::IHTMLBodyElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_onbeforeprint(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeprint.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeprint(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeprint.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onafterprint(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onafterprint.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onafterprint(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onafterprint.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLBodyElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_background(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ononline(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ononline.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ononline(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ononline.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onoffline(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onoffline.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onoffline(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onoffline.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onhashchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onhashchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onhashchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onhashchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLBodyElement4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_onmessage(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmessage.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmessage(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmessage.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onstorage(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onstorage.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onstorage(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onstorage.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLBodyElement5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_onpopstate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onpopstate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onpopstate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onpopstate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLBody
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLFontElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_face(v : UInt8*) : HRESULT
    @lpVtbl.value.put_face.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_face(p : UInt8**) : HRESULT
    @lpVtbl.value.get_face.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_size(v : VARIANT) : HRESULT
    @lpVtbl.value.put_size.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_size(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLFontElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLAnchorEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLAnchorEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLAnchorElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_href(v : UInt8*) : HRESULT
    @lpVtbl.value.put_href.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_target(v : UInt8*) : HRESULT
    @lpVtbl.value.put_target.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_target(p : UInt8**) : HRESULT
    @lpVtbl.value.get_target.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_rel(v : UInt8*) : HRESULT
    @lpVtbl.value.put_rel.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_rel(p : UInt8**) : HRESULT
    @lpVtbl.value.get_rel.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_rev(v : UInt8*) : HRESULT
    @lpVtbl.value.put_rev.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_rev(p : UInt8**) : HRESULT
    @lpVtbl.value.get_rev.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_urn(v : UInt8*) : HRESULT
    @lpVtbl.value.put_urn.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_urn(p : UInt8**) : HRESULT
    @lpVtbl.value.get_urn.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_methods(v : UInt8*) : HRESULT
    @lpVtbl.value.put_methods.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_methods(p : UInt8**) : HRESULT
    @lpVtbl.value.get_methods.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_host(v : UInt8*) : HRESULT
    @lpVtbl.value.put_host.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_host(p : UInt8**) : HRESULT
    @lpVtbl.value.get_host.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_hostname(v : UInt8*) : HRESULT
    @lpVtbl.value.put_hostname.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_hostname(p : UInt8**) : HRESULT
    @lpVtbl.value.get_hostname.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_pathname(v : UInt8*) : HRESULT
    @lpVtbl.value.put_pathname.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_pathname(p : UInt8**) : HRESULT
    @lpVtbl.value.get_pathname.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_port(v : UInt8*) : HRESULT
    @lpVtbl.value.put_port.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_port(p : UInt8**) : HRESULT
    @lpVtbl.value.get_port.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_protocol(v : UInt8*) : HRESULT
    @lpVtbl.value.put_protocol.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_protocol(p : UInt8**) : HRESULT
    @lpVtbl.value.get_protocol.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_search(v : UInt8*) : HRESULT
    @lpVtbl.value.put_search.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_search(p : UInt8**) : HRESULT
    @lpVtbl.value.get_search.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_hash(v : UInt8*) : HRESULT
    @lpVtbl.value.put_hash.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_hash(p : UInt8**) : HRESULT
    @lpVtbl.value.get_hash.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onblur(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onblur.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onblur(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onblur.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onfocus(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocus.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocus(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocus.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_access_key(v : UInt8*) : HRESULT
    @lpVtbl.value.put_access_key.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_access_key(p : UInt8**) : HRESULT
    @lpVtbl.value.get_access_key.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_protocol_long(p : UInt8**) : HRESULT
    @lpVtbl.value.get_protocol_long.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_mime_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_mime_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_name_prop(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name_prop.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_tab_index(v : Int16) : HRESULT
    @lpVtbl.value.put_tab_index.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_tab_index(p : Int16*) : HRESULT
    @lpVtbl.value.get_tab_index.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def focus : HRESULT
    @lpVtbl.value.focus.unsafe_as(Proc(HRESULT)).call
  end
  def blur : HRESULT
    @lpVtbl.value.blur.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IHTMLAnchorElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_charset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_charset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_charset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_charset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_coords(v : UInt8*) : HRESULT
    @lpVtbl.value.put_coords.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_coords(p : UInt8**) : HRESULT
    @lpVtbl.value.get_coords.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_hreflang(v : UInt8*) : HRESULT
    @lpVtbl.value.put_hreflang.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_hreflang(p : UInt8**) : HRESULT
    @lpVtbl.value.get_hreflang.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_shape(v : UInt8*) : HRESULT
    @lpVtbl.value.put_shape.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_shape(p : UInt8**) : HRESULT
    @lpVtbl.value.get_shape.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLAnchorElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_shape(v : UInt8*) : HRESULT
    @lpVtbl.value.put_shape.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_shape(p : UInt8**) : HRESULT
    @lpVtbl.value.get_shape.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_coords(v : UInt8*) : HRESULT
    @lpVtbl.value.put_coords.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_coords(p : UInt8**) : HRESULT
    @lpVtbl.value.get_coords.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_href(v : UInt8*) : HRESULT
    @lpVtbl.value.put_href.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLAnchorElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLLabelEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLLabelEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLLabelElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_html_for(v : UInt8*) : HRESULT
    @lpVtbl.value.put_html_for.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_html_for(p : UInt8**) : HRESULT
    @lpVtbl.value.get_html_for.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_access_key(v : UInt8*) : HRESULT
    @lpVtbl.value.put_access_key.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_access_key(p : UInt8**) : HRESULT
    @lpVtbl.value.get_access_key.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLLabelElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLLabelElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLListElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLListElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_compact(v : Int16) : HRESULT
    @lpVtbl.value.put_compact.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_compact(p : Int16*) : HRESULT
    @lpVtbl.value.get_compact.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLListElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLUListElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_compact(v : Int16) : HRESULT
    @lpVtbl.value.put_compact.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_compact(p : Int16*) : HRESULT
    @lpVtbl.value.get_compact.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLUListElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLOListElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_compact(v : Int16) : HRESULT
    @lpVtbl.value.put_compact.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_compact(p : Int16*) : HRESULT
    @lpVtbl.value.get_compact.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_start(v : Int32) : HRESULT
    @lpVtbl.value.put_start.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_start(p : Int32*) : HRESULT
    @lpVtbl.value.get_start.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLOListElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLLIElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : Int32) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_value(p : Int32*) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLLIElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLBlockElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_clear(v : UInt8*) : HRESULT
    @lpVtbl.value.put_clear.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_clear(p : UInt8**) : HRESULT
    @lpVtbl.value.get_clear.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLBlockElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_cite(v : UInt8*) : HRESULT
    @lpVtbl.value.put_cite.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_cite(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cite.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_width(v : UInt8*) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_width(p : UInt8**) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLBlockElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_cite(v : UInt8*) : HRESULT
    @lpVtbl.value.put_cite.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_cite(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cite.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLBlockElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLDivElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_no_wrap(v : Int16) : HRESULT
    @lpVtbl.value.put_no_wrap.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_no_wrap(p : Int16*) : HRESULT
    @lpVtbl.value.get_no_wrap.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLDivElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLDDElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_no_wrap(v : Int16) : HRESULT
    @lpVtbl.value.put_no_wrap.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_no_wrap(p : Int16*) : HRESULT
    @lpVtbl.value.get_no_wrap.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLDDElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLDTElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_no_wrap(v : Int16) : HRESULT
    @lpVtbl.value.put_no_wrap.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_no_wrap(p : Int16*) : HRESULT
    @lpVtbl.value.get_no_wrap.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLDTElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLBRElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_clear(v : UInt8*) : HRESULT
    @lpVtbl.value.put_clear.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_clear(p : UInt8**) : HRESULT
    @lpVtbl.value.get_clear.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLBRElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLDListElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_compact(v : Int16) : HRESULT
    @lpVtbl.value.put_compact.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_compact(p : Int16*) : HRESULT
    @lpVtbl.value.get_compact.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLDListElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLHRElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_no_shade(v : Int16) : HRESULT
    @lpVtbl.value.put_no_shade.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_no_shade(p : Int16*) : HRESULT
    @lpVtbl.value.get_no_shade.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_size(v : VARIANT) : HRESULT
    @lpVtbl.value.put_size.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_size(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLHRElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLParaElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLParaElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLElementCollection2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def urns(urn : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.urns.unsafe_as(Proc(VARIANT, IDispatch*, HRESULT)).call(urn, pdisp)
  end
end
struct LibWin32::IHTMLElementCollection3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def named_item(name : UInt8*, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.named_item.unsafe_as(Proc(UInt8*, IDispatch*, HRESULT)).call(name, pdisp)
  end
end
struct LibWin32::IHTMLElementCollection4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(index : Int32, pnode : IHTMLElement2*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IHTMLElement2*, HRESULT)).call(index, pnode)
  end
  def named_item(name : UInt8*, pnode : IHTMLElement2*) : HRESULT
    @lpVtbl.value.named_item.unsafe_as(Proc(UInt8*, IHTMLElement2*, HRESULT)).call(name, pnode)
  end
end
struct LibWin32::DispHTMLElementCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLHeaderElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLHeaderElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLSelectElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLSelectElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLOptionElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_selected(v : Int16) : HRESULT
    @lpVtbl.value.put_selected.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_selected(p : Int16*) : HRESULT
    @lpVtbl.value.get_selected.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_default_selected(v : Int16) : HRESULT
    @lpVtbl.value.put_default_selected.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_default_selected(p : Int16*) : HRESULT
    @lpVtbl.value.get_default_selected.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_index(v : Int32) : HRESULT
    @lpVtbl.value.put_index.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_index(p : Int32*) : HRESULT
    @lpVtbl.value.get_index.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLSelectElementEx
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show_dropdown(fshow : LibC::BOOL) : HRESULT
    @lpVtbl.value.show_dropdown.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fshow)
  end
  def set_select_ex_flags(lflags : UInt32) : HRESULT
    @lpVtbl.value.set_select_ex_flags.unsafe_as(Proc(UInt32, HRESULT)).call(lflags)
  end
  def get_select_ex_flags(pflags : UInt32*) : HRESULT
    @lpVtbl.value.get_select_ex_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pflags)
  end
  def get_dropdown_open(pfopen : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_dropdown_open.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfopen)
  end
end
struct LibWin32::IHTMLSelectElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_size(v : Int32) : HRESULT
    @lpVtbl.value.put_size.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_size(p : Int32*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_multiple(v : Int16) : HRESULT
    @lpVtbl.value.put_multiple.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_multiple(p : Int16*) : HRESULT
    @lpVtbl.value.get_multiple.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_options(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_options.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def put_onchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_selected_index(v : Int32) : HRESULT
    @lpVtbl.value.put_selected_index.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_selected_index(p : Int32*) : HRESULT
    @lpVtbl.value.get_selected_index.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
  def add(element : IHTMLElement, before : VARIANT) : HRESULT
    @lpVtbl.value.add.unsafe_as(Proc(IHTMLElement, VARIANT, HRESULT)).call(element, before)
  end
  def remove(index : Int32) : HRESULT
    @lpVtbl.value.remove.unsafe_as(Proc(Int32, HRESULT)).call(index)
  end
  def put_length(v : Int32) : HRESULT
    @lpVtbl.value.put_length.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(name : VARIANT, index : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT, VARIANT, IDispatch*, HRESULT)).call(name, index, pdisp)
  end
  def tags(tagname : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.tags.unsafe_as(Proc(VARIANT, IDispatch*, HRESULT)).call(tagname, pdisp)
  end
end
struct LibWin32::IHTMLSelectElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def urns(urn : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.urns.unsafe_as(Proc(VARIANT, IDispatch*, HRESULT)).call(urn, pdisp)
  end
end
struct LibWin32::IHTMLSelectElement4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def named_item(name : UInt8*, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.named_item.unsafe_as(Proc(UInt8*, IDispatch*, HRESULT)).call(name, pdisp)
  end
end
struct LibWin32::IHTMLSelectElement5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def add(pelem : IHTMLOptionElement, pvarbefore : VARIANT*) : HRESULT
    @lpVtbl.value.add.unsafe_as(Proc(IHTMLOptionElement, VARIANT*, HRESULT)).call(pelem, pvarbefore)
  end
end
struct LibWin32::IHTMLSelectElement6
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def add(pelem : IHTMLOptionElement, pvarbefore : VARIANT*) : HRESULT
    @lpVtbl.value.add.unsafe_as(Proc(IHTMLOptionElement, VARIANT*, HRESULT)).call(pelem, pvarbefore)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLSelectElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLWndSelectElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLSelectionObject
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create_range(range : IDispatch*) : HRESULT
    @lpVtbl.value.create_range.unsafe_as(Proc(IDispatch*, HRESULT)).call(range)
  end
  def empty : HRESULT
    @lpVtbl.value.empty.unsafe_as(Proc(HRESULT)).call
  end
  def clear : HRESULT
    @lpVtbl.value.clear.unsafe_as(Proc(HRESULT)).call
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLSelectionObject2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create_range_collection(rangecollection : IDispatch*) : HRESULT
    @lpVtbl.value.create_range_collection.unsafe_as(Proc(IDispatch*, HRESULT)).call(rangecollection)
  end
  def get_type_detail(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type_detail.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLSelection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_anchor_node(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_anchor_node.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_anchor_offset(p : Int32*) : HRESULT
    @lpVtbl.value.get_anchor_offset.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_focus_node(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_focus_node.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_focus_offset(p : Int32*) : HRESULT
    @lpVtbl.value.get_focus_offset.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_is_collapsed(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_collapsed.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def collapse(parentnode : IDispatch, offfset : Int32) : HRESULT
    @lpVtbl.value.collapse.unsafe_as(Proc(IDispatch, Int32, HRESULT)).call(parentnode, offfset)
  end
  def collapse_to_start : HRESULT
    @lpVtbl.value.collapse_to_start.unsafe_as(Proc(HRESULT)).call
  end
  def collapse_to_end : HRESULT
    @lpVtbl.value.collapse_to_end.unsafe_as(Proc(HRESULT)).call
  end
  def select_all_children(parentnode : IDispatch) : HRESULT
    @lpVtbl.value.select_all_children.unsafe_as(Proc(IDispatch, HRESULT)).call(parentnode)
  end
  def delete_from_document : HRESULT
    @lpVtbl.value.delete_from_document.unsafe_as(Proc(HRESULT)).call
  end
  def get_range_count(p : Int32*) : HRESULT
    @lpVtbl.value.get_range_count.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_range_at(index : Int32, pprange : IHTMLDOMRange*) : HRESULT
    @lpVtbl.value.get_range_at.unsafe_as(Proc(Int32, IHTMLDOMRange*, HRESULT)).call(index, pprange)
  end
  def add_range(range : IDispatch) : HRESULT
    @lpVtbl.value.add_range.unsafe_as(Proc(IDispatch, HRESULT)).call(range)
  end
  def remove_range(range : IDispatch) : HRESULT
    @lpVtbl.value.remove_range.unsafe_as(Proc(IDispatch, HRESULT)).call(range)
  end
  def remove_all_ranges : HRESULT
    @lpVtbl.value.remove_all_ranges.unsafe_as(Proc(HRESULT)).call
  end
  def to_string(pselectionstring : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(pselectionstring)
  end
end
struct LibWin32::IHTMLOptionElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_label(v : UInt8*) : HRESULT
    @lpVtbl.value.put_label.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_label(p : UInt8**) : HRESULT
    @lpVtbl.value.get_label.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLOptionElement4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLOptionElementFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create(text : VARIANT, value : VARIANT, defaultselected : VARIANT, selected : VARIANT, midl__ihtmloptionelementfactory0000 : IHTMLOptionElement*) : HRESULT
    @lpVtbl.value.create.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, VARIANT, IHTMLOptionElement*, HRESULT)).call(text, value, defaultselected, selected, midl__ihtmloptionelementfactory0000)
  end
end
struct LibWin32::DispHTMLOptionElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLWndOptionElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLButtonElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLButtonElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLInputTextElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLOptionButtonElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLInputFileElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLInputImageEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLInputTextElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLOptionButtonElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLInputFileElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLInputImageEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLInputElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_status(v : Int16) : HRESULT
    @lpVtbl.value.put_status.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_status(p : Int16*) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
  def put_size(v : Int32) : HRESULT
    @lpVtbl.value.put_size.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_size(p : Int32*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_max_length(v : Int32) : HRESULT
    @lpVtbl.value.put_max_length.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_max_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_max_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def select : HRESULT
    @lpVtbl.value.select.unsafe_as(Proc(HRESULT)).call
  end
  def put_onchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onselect(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onselect.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onselect(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onselect.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_default_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_default_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_default_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_default_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_read_only(v : Int16) : HRESULT
    @lpVtbl.value.put_read_only.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_read_only(p : Int16*) : HRESULT
    @lpVtbl.value.get_read_only.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def create_text_range(range : IHTMLTxtRange*) : HRESULT
    @lpVtbl.value.create_text_range.unsafe_as(Proc(IHTMLTxtRange*, HRESULT)).call(range)
  end
  def put_indeterminate(v : Int16) : HRESULT
    @lpVtbl.value.put_indeterminate.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_indeterminate(p : Int16*) : HRESULT
    @lpVtbl.value.get_indeterminate.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_default_checked(v : Int16) : HRESULT
    @lpVtbl.value.put_default_checked.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_default_checked(p : Int16*) : HRESULT
    @lpVtbl.value.get_default_checked.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_checked(v : Int16) : HRESULT
    @lpVtbl.value.put_checked.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_checked(p : Int16*) : HRESULT
    @lpVtbl.value.get_checked.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_border(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_vspace(v : Int32) : HRESULT
    @lpVtbl.value.put_vspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_vspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_vspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_hspace(v : Int32) : HRESULT
    @lpVtbl.value.put_hspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_hspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_hspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_alt(v : UInt8*) : HRESULT
    @lpVtbl.value.put_alt.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_alt(p : UInt8**) : HRESULT
    @lpVtbl.value.get_alt.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_lowsrc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_lowsrc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_lowsrc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_lowsrc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_vrml(v : UInt8*) : HRESULT
    @lpVtbl.value.put_vrml.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_vrml(p : UInt8**) : HRESULT
    @lpVtbl.value.get_vrml.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_dynsrc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_dynsrc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_dynsrc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_dynsrc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_ready_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_complete(p : Int16*) : HRESULT
    @lpVtbl.value.get_complete.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_loop(v : VARIANT) : HRESULT
    @lpVtbl.value.put_loop.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_loop(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_loop.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onabort(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onabort.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onabort(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onabort.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_width(v : Int32) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_height(v : Int32) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_start(v : UInt8*) : HRESULT
    @lpVtbl.value.put_start.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_start(p : UInt8**) : HRESULT
    @lpVtbl.value.get_start.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLInputElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_accept(v : UInt8*) : HRESULT
    @lpVtbl.value.put_accept.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_accept(p : UInt8**) : HRESULT
    @lpVtbl.value.get_accept.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_use_map(v : UInt8*) : HRESULT
    @lpVtbl.value.put_use_map.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_use_map(p : UInt8**) : HRESULT
    @lpVtbl.value.get_use_map.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLInputElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_lowsrc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_lowsrc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_lowsrc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_lowsrc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_vrml(v : UInt8*) : HRESULT
    @lpVtbl.value.put_vrml.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_vrml(p : UInt8**) : HRESULT
    @lpVtbl.value.get_vrml.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_dynsrc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_dynsrc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_dynsrc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_dynsrc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLInputButtonElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_status(v : VARIANT) : HRESULT
    @lpVtbl.value.put_status.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_status(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
  def create_text_range(range : IHTMLTxtRange*) : HRESULT
    @lpVtbl.value.create_text_range.unsafe_as(Proc(IHTMLTxtRange*, HRESULT)).call(range)
  end
end
struct LibWin32::IHTMLInputHiddenElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_status(v : VARIANT) : HRESULT
    @lpVtbl.value.put_status.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_status(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
  def create_text_range(range : IHTMLTxtRange*) : HRESULT
    @lpVtbl.value.create_text_range.unsafe_as(Proc(IHTMLTxtRange*, HRESULT)).call(range)
  end
end
struct LibWin32::IHTMLInputTextElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_status(v : VARIANT) : HRESULT
    @lpVtbl.value.put_status.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_status(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
  def put_default_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_default_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_default_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_default_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_size(v : Int32) : HRESULT
    @lpVtbl.value.put_size.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_size(p : Int32*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_max_length(v : Int32) : HRESULT
    @lpVtbl.value.put_max_length.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_max_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_max_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def select : HRESULT
    @lpVtbl.value.select.unsafe_as(Proc(HRESULT)).call
  end
  def put_onchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onselect(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onselect.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onselect(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onselect.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_read_only(v : Int16) : HRESULT
    @lpVtbl.value.put_read_only.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_read_only(p : Int16*) : HRESULT
    @lpVtbl.value.get_read_only.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def create_text_range(range : IHTMLTxtRange*) : HRESULT
    @lpVtbl.value.create_text_range.unsafe_as(Proc(IHTMLTxtRange*, HRESULT)).call(range)
  end
end
struct LibWin32::IHTMLInputTextElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_selection_start(v : Int32) : HRESULT
    @lpVtbl.value.put_selection_start.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_selection_start(p : Int32*) : HRESULT
    @lpVtbl.value.get_selection_start.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_selection_end(v : Int32) : HRESULT
    @lpVtbl.value.put_selection_end.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_selection_end(p : Int32*) : HRESULT
    @lpVtbl.value.get_selection_end.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def set_selection_range(start : Int32, end_ : Int32) : HRESULT
    @lpVtbl.value.set_selection_range.unsafe_as(Proc(Int32, Int32, HRESULT)).call(start, end_)
  end
end
struct LibWin32::IHTMLInputFileElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_status(v : VARIANT) : HRESULT
    @lpVtbl.value.put_status.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_status(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
  def put_size(v : Int32) : HRESULT
    @lpVtbl.value.put_size.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_size(p : Int32*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_max_length(v : Int32) : HRESULT
    @lpVtbl.value.put_max_length.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_max_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_max_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def select : HRESULT
    @lpVtbl.value.select.unsafe_as(Proc(HRESULT)).call
  end
  def put_onchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onselect(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onselect.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onselect(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onselect.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLOptionButtonElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_checked(v : Int16) : HRESULT
    @lpVtbl.value.put_checked.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_checked(p : Int16*) : HRESULT
    @lpVtbl.value.get_checked.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_default_checked(v : Int16) : HRESULT
    @lpVtbl.value.put_default_checked.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_default_checked(p : Int16*) : HRESULT
    @lpVtbl.value.get_default_checked.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_onchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_status(v : Int16) : HRESULT
    @lpVtbl.value.put_status.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_status(p : Int16*) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_indeterminate(v : Int16) : HRESULT
    @lpVtbl.value.put_indeterminate.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_indeterminate(p : Int16*) : HRESULT
    @lpVtbl.value.get_indeterminate.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLInputImage
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_border(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_vspace(v : Int32) : HRESULT
    @lpVtbl.value.put_vspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_vspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_vspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_hspace(v : Int32) : HRESULT
    @lpVtbl.value.put_hspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_hspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_hspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_alt(v : UInt8*) : HRESULT
    @lpVtbl.value.put_alt.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_alt(p : UInt8**) : HRESULT
    @lpVtbl.value.get_alt.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_lowsrc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_lowsrc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_lowsrc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_lowsrc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_vrml(v : UInt8*) : HRESULT
    @lpVtbl.value.put_vrml.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_vrml(p : UInt8**) : HRESULT
    @lpVtbl.value.get_vrml.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_dynsrc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_dynsrc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_dynsrc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_dynsrc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_ready_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_complete(p : Int16*) : HRESULT
    @lpVtbl.value.get_complete.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_loop(v : VARIANT) : HRESULT
    @lpVtbl.value.put_loop.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_loop(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_loop.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onabort(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onabort.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onabort(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onabort.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_width(v : Int32) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_height(v : Int32) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_start(v : UInt8*) : HRESULT
    @lpVtbl.value.put_start.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_start(p : UInt8**) : HRESULT
    @lpVtbl.value.get_start.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLInputRangeElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_alt(v : UInt8*) : HRESULT
    @lpVtbl.value.put_alt.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_alt(p : UInt8**) : HRESULT
    @lpVtbl.value.get_alt.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_min(v : UInt8*) : HRESULT
    @lpVtbl.value.put_min.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_min(p : UInt8**) : HRESULT
    @lpVtbl.value.get_min.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_max(v : UInt8*) : HRESULT
    @lpVtbl.value.put_max.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_max(p : UInt8**) : HRESULT
    @lpVtbl.value.get_max.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_step(v : UInt8*) : HRESULT
    @lpVtbl.value.put_step.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_step(p : UInt8**) : HRESULT
    @lpVtbl.value.get_step.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value_as_number(v : Float64) : HRESULT
    @lpVtbl.value.put_value_as_number.unsafe_as(Proc(Float64, HRESULT)).call(v)
  end
  def get_value_as_number(p : Float64*) : HRESULT
    @lpVtbl.value.get_value_as_number.unsafe_as(Proc(Float64*, HRESULT)).call(p)
  end
  def step_up(n : Int32) : HRESULT
    @lpVtbl.value.step_up.unsafe_as(Proc(Int32, HRESULT)).call(n)
  end
  def step_down(n : Int32) : HRESULT
    @lpVtbl.value.step_down.unsafe_as(Proc(Int32, HRESULT)).call(n)
  end
end
struct LibWin32::DispHTMLInputElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLTextAreaElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_status(v : VARIANT) : HRESULT
    @lpVtbl.value.put_status.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_status(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
  def put_default_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_default_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_default_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_default_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def select : HRESULT
    @lpVtbl.value.select.unsafe_as(Proc(HRESULT)).call
  end
  def put_onchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onselect(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onselect.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onselect(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onselect.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_read_only(v : Int16) : HRESULT
    @lpVtbl.value.put_read_only.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_read_only(p : Int16*) : HRESULT
    @lpVtbl.value.get_read_only.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_rows(v : Int32) : HRESULT
    @lpVtbl.value.put_rows.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_rows(p : Int32*) : HRESULT
    @lpVtbl.value.get_rows.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_cols(v : Int32) : HRESULT
    @lpVtbl.value.put_cols.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_cols(p : Int32*) : HRESULT
    @lpVtbl.value.get_cols.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_wrap(v : UInt8*) : HRESULT
    @lpVtbl.value.put_wrap.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_wrap(p : UInt8**) : HRESULT
    @lpVtbl.value.get_wrap.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def create_text_range(range : IHTMLTxtRange*) : HRESULT
    @lpVtbl.value.create_text_range.unsafe_as(Proc(IHTMLTxtRange*, HRESULT)).call(range)
  end
end
struct LibWin32::IHTMLTextAreaElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_selection_start(v : Int32) : HRESULT
    @lpVtbl.value.put_selection_start.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_selection_start(p : Int32*) : HRESULT
    @lpVtbl.value.get_selection_start.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_selection_end(v : Int32) : HRESULT
    @lpVtbl.value.put_selection_end.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_selection_end(p : Int32*) : HRESULT
    @lpVtbl.value.get_selection_end.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def set_selection_range(start : Int32, end_ : Int32) : HRESULT
    @lpVtbl.value.set_selection_range.unsafe_as(Proc(Int32, Int32, HRESULT)).call(start, end_)
  end
end
struct LibWin32::DispHTMLTextAreaElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLRichtextElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLButtonElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_status(v : VARIANT) : HRESULT
    @lpVtbl.value.put_status.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_status(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
  def create_text_range(range : IHTMLTxtRange*) : HRESULT
    @lpVtbl.value.create_text_range.unsafe_as(Proc(IHTMLTxtRange*, HRESULT)).call(range)
  end
end
struct LibWin32::IHTMLButtonElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLButtonElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLMarqueeElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLMarqueeElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLMarqueeElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_bg_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_bg_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_bg_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bg_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_scroll_delay(v : Int32) : HRESULT
    @lpVtbl.value.put_scroll_delay.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_scroll_delay(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_delay.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_direction(v : UInt8*) : HRESULT
    @lpVtbl.value.put_direction.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_direction(p : UInt8**) : HRESULT
    @lpVtbl.value.get_direction.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_behavior(v : UInt8*) : HRESULT
    @lpVtbl.value.put_behavior.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_behavior(p : UInt8**) : HRESULT
    @lpVtbl.value.get_behavior.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_scroll_amount(v : Int32) : HRESULT
    @lpVtbl.value.put_scroll_amount.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_scroll_amount(p : Int32*) : HRESULT
    @lpVtbl.value.get_scroll_amount.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_loop(v : Int32) : HRESULT
    @lpVtbl.value.put_loop.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_loop(p : Int32*) : HRESULT
    @lpVtbl.value.get_loop.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_vspace(v : Int32) : HRESULT
    @lpVtbl.value.put_vspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_vspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_vspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_hspace(v : Int32) : HRESULT
    @lpVtbl.value.put_hspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_hspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_hspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_onfinish(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfinish.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfinish(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfinish.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onstart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onstart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onstart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onstart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onbounce(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbounce.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbounce(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbounce.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_true_speed(v : Int16) : HRESULT
    @lpVtbl.value.put_true_speed.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_true_speed(p : Int16*) : HRESULT
    @lpVtbl.value.get_true_speed.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def start : HRESULT
    @lpVtbl.value.start.unsafe_as(Proc(HRESULT)).call
  end
  def stop : HRESULT
    @lpVtbl.value.stop.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::DispHTMLMarqueeElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLHtmlElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_version(v : UInt8*) : HRESULT
    @lpVtbl.value.put_version.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_version(p : UInt8**) : HRESULT
    @lpVtbl.value.get_version.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLHeadElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_profile(v : UInt8*) : HRESULT
    @lpVtbl.value.put_profile.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_profile(p : UInt8**) : HRESULT
    @lpVtbl.value.get_profile.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLHeadElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_profile(v : UInt8*) : HRESULT
    @lpVtbl.value.put_profile.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_profile(p : UInt8**) : HRESULT
    @lpVtbl.value.get_profile.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTitleElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLMetaElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_http_equiv(v : UInt8*) : HRESULT
    @lpVtbl.value.put_http_equiv.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_http_equiv(p : UInt8**) : HRESULT
    @lpVtbl.value.get_http_equiv.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_content(v : UInt8*) : HRESULT
    @lpVtbl.value.put_content.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_content(p : UInt8**) : HRESULT
    @lpVtbl.value.get_content.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_url(v : UInt8*) : HRESULT
    @lpVtbl.value.put_url.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_url(p : UInt8**) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_charset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_charset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_charset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_charset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLMetaElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_scheme(v : UInt8*) : HRESULT
    @lpVtbl.value.put_scheme.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_scheme(p : UInt8**) : HRESULT
    @lpVtbl.value.get_scheme.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLMetaElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_url(v : UInt8*) : HRESULT
    @lpVtbl.value.put_url.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_url(p : UInt8**) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLBaseElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_href(v : UInt8*) : HRESULT
    @lpVtbl.value.put_href.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_target(v : UInt8*) : HRESULT
    @lpVtbl.value.put_target.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_target(p : UInt8**) : HRESULT
    @lpVtbl.value.get_target.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLBaseElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_href(v : UInt8*) : HRESULT
    @lpVtbl.value.put_href.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLHtmlElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLHeadElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLTitleElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLMetaElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLBaseElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLIsIndexElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_prompt(v : UInt8*) : HRESULT
    @lpVtbl.value.put_prompt.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_prompt(p : UInt8**) : HRESULT
    @lpVtbl.value.get_prompt.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_action(v : UInt8*) : HRESULT
    @lpVtbl.value.put_action.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_action(p : UInt8**) : HRESULT
    @lpVtbl.value.get_action.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLIsIndexElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLNextIdElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_n(v : UInt8*) : HRESULT
    @lpVtbl.value.put_n.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_n(p : UInt8**) : HRESULT
    @lpVtbl.value.get_n.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLIsIndexElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLNextIdElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLBaseFontElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_face(v : UInt8*) : HRESULT
    @lpVtbl.value.put_face.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_face(p : UInt8**) : HRESULT
    @lpVtbl.value.get_face.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_size(v : Int32) : HRESULT
    @lpVtbl.value.put_size.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_size(p : Int32*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLBaseFontElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLUnknownElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLUnknownElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IWebGeolocation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_current_position(successcallback : IDispatch, errorcallback : IDispatch, options : IDispatch) : HRESULT
    @lpVtbl.value.get_current_position.unsafe_as(Proc(IDispatch, IDispatch, IDispatch, HRESULT)).call(successcallback, errorcallback, options)
  end
  def watch_position(successcallback : IDispatch, errorcallback : IDispatch, options : IDispatch, watchid : Int32*) : HRESULT
    @lpVtbl.value.watch_position.unsafe_as(Proc(IDispatch, IDispatch, IDispatch, Int32*, HRESULT)).call(successcallback, errorcallback, options, watchid)
  end
  def clear_watch(watchid : Int32) : HRESULT
    @lpVtbl.value.clear_watch.unsafe_as(Proc(Int32, HRESULT)).call(watchid)
  end
end
struct LibWin32::IHTMLMimeTypesCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLPluginsCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def refresh(reload : Int16) : HRESULT
    @lpVtbl.value.refresh.unsafe_as(Proc(Int16, HRESULT)).call(reload)
  end
end
struct LibWin32::IOmHistory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int16*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def back(pvargdistance : VARIANT*) : HRESULT
    @lpVtbl.value.back.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvargdistance)
  end
  def forward(pvargdistance : VARIANT*) : HRESULT
    @lpVtbl.value.forward.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvargdistance)
  end
  def go(pvargdistance : VARIANT*) : HRESULT
    @lpVtbl.value.go.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvargdistance)
  end
end
struct LibWin32::IHTMLOpsProfile
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def add_request(name : UInt8*, reserved : VARIANT, success : Int16*) : HRESULT
    @lpVtbl.value.add_request.unsafe_as(Proc(UInt8*, VARIANT, Int16*, HRESULT)).call(name, reserved, success)
  end
  def clear_request : HRESULT
    @lpVtbl.value.clear_request.unsafe_as(Proc(HRESULT)).call
  end
  def do_request(usage : VARIANT, fname : VARIANT, domain : VARIANT, path : VARIANT, expire : VARIANT, reserved : VARIANT) : HRESULT
    @lpVtbl.value.do_request.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, VARIANT, VARIANT, VARIANT, HRESULT)).call(usage, fname, domain, path, expire, reserved)
  end
  def get_attribute(name : UInt8*, value : UInt8**) : HRESULT
    @lpVtbl.value.get_attribute.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(name, value)
  end
  def set_attribute(name : UInt8*, value : UInt8*, prefs : VARIANT, success : Int16*) : HRESULT
    @lpVtbl.value.set_attribute.unsafe_as(Proc(UInt8*, UInt8*, VARIANT, Int16*, HRESULT)).call(name, value, prefs, success)
  end
  def commit_changes(success : Int16*) : HRESULT
    @lpVtbl.value.commit_changes.unsafe_as(Proc(Int16*, HRESULT)).call(success)
  end
  def add_read_request(name : UInt8*, reserved : VARIANT, success : Int16*) : HRESULT
    @lpVtbl.value.add_read_request.unsafe_as(Proc(UInt8*, VARIANT, Int16*, HRESULT)).call(name, reserved, success)
  end
  def do_read_request(usage : VARIANT, fname : VARIANT, domain : VARIANT, path : VARIANT, expire : VARIANT, reserved : VARIANT) : HRESULT
    @lpVtbl.value.do_read_request.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, VARIANT, VARIANT, VARIANT, HRESULT)).call(usage, fname, domain, path, expire, reserved)
  end
  def do_write_request(success : Int16*) : HRESULT
    @lpVtbl.value.do_write_request.unsafe_as(Proc(Int16*, HRESULT)).call(success)
  end
end
struct LibWin32::IOmNavigator
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_app_code_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_app_code_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_app_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_app_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_app_version(p : UInt8**) : HRESULT
    @lpVtbl.value.get_app_version.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_user_agent(p : UInt8**) : HRESULT
    @lpVtbl.value.get_user_agent.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def java_enabled(enabled : Int16*) : HRESULT
    @lpVtbl.value.java_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(enabled)
  end
  def taint_enabled(enabled : Int16*) : HRESULT
    @lpVtbl.value.taint_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(enabled)
  end
  def get_mime_types(p : IHTMLMimeTypesCollection*) : HRESULT
    @lpVtbl.value.get_mime_types.unsafe_as(Proc(IHTMLMimeTypesCollection*, HRESULT)).call(p)
  end
  def get_plugins(p : IHTMLPluginsCollection*) : HRESULT
    @lpVtbl.value.get_plugins.unsafe_as(Proc(IHTMLPluginsCollection*, HRESULT)).call(p)
  end
  def get_cookie_enabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_cookie_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_ops_profile(p : IHTMLOpsProfile*) : HRESULT
    @lpVtbl.value.get_ops_profile.unsafe_as(Proc(IHTMLOpsProfile*, HRESULT)).call(p)
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
  def get_cpu_class(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cpu_class.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_system_language(p : UInt8**) : HRESULT
    @lpVtbl.value.get_system_language.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_browser_language(p : UInt8**) : HRESULT
    @lpVtbl.value.get_browser_language.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_user_language(p : UInt8**) : HRESULT
    @lpVtbl.value.get_user_language.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_platform(p : UInt8**) : HRESULT
    @lpVtbl.value.get_platform.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_app_minor_version(p : UInt8**) : HRESULT
    @lpVtbl.value.get_app_minor_version.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_connection_speed(p : Int32*) : HRESULT
    @lpVtbl.value.get_connection_speed.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_on_line(p : Int16*) : HRESULT
    @lpVtbl.value.get_on_line.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_user_profile(p : IHTMLOpsProfile*) : HRESULT
    @lpVtbl.value.get_user_profile.unsafe_as(Proc(IHTMLOpsProfile*, HRESULT)).call(p)
  end
end
struct LibWin32::INavigatorGeolocation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_geolocation(p : IWebGeolocation*) : HRESULT
    @lpVtbl.value.get_geolocation.unsafe_as(Proc(IWebGeolocation*, HRESULT)).call(p)
  end
end
struct LibWin32::INavigatorDoNotTrack
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_ms_do_not_track(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ms_do_not_track.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLLocation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_href(v : UInt8*) : HRESULT
    @lpVtbl.value.put_href.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_protocol(v : UInt8*) : HRESULT
    @lpVtbl.value.put_protocol.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_protocol(p : UInt8**) : HRESULT
    @lpVtbl.value.get_protocol.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_host(v : UInt8*) : HRESULT
    @lpVtbl.value.put_host.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_host(p : UInt8**) : HRESULT
    @lpVtbl.value.get_host.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_hostname(v : UInt8*) : HRESULT
    @lpVtbl.value.put_hostname.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_hostname(p : UInt8**) : HRESULT
    @lpVtbl.value.get_hostname.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_port(v : UInt8*) : HRESULT
    @lpVtbl.value.put_port.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_port(p : UInt8**) : HRESULT
    @lpVtbl.value.get_port.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_pathname(v : UInt8*) : HRESULT
    @lpVtbl.value.put_pathname.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_pathname(p : UInt8**) : HRESULT
    @lpVtbl.value.get_pathname.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_search(v : UInt8*) : HRESULT
    @lpVtbl.value.put_search.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_search(p : UInt8**) : HRESULT
    @lpVtbl.value.get_search.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_hash(v : UInt8*) : HRESULT
    @lpVtbl.value.put_hash.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_hash(p : UInt8**) : HRESULT
    @lpVtbl.value.get_hash.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def reload(flag : Int16) : HRESULT
    @lpVtbl.value.reload.unsafe_as(Proc(Int16, HRESULT)).call(flag)
  end
  def replace(bstr : UInt8*) : HRESULT
    @lpVtbl.value.replace.unsafe_as(Proc(UInt8*, HRESULT)).call(bstr)
  end
  def assign(bstr : UInt8*) : HRESULT
    @lpVtbl.value.assign.unsafe_as(Proc(UInt8*, HRESULT)).call(bstr)
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
end
struct LibWin32::DispHTMLHistory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLNavigator
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLLocation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispCPlugins
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLBookmarkCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(index : Int32, pvarbookmark : VARIANT*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, VARIANT*, HRESULT)).call(index, pvarbookmark)
  end
end
struct LibWin32::IHTMLDataTransfer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def set_data(format : UInt8*, data : VARIANT*, pret : Int16*) : HRESULT
    @lpVtbl.value.set_data.unsafe_as(Proc(UInt8*, VARIANT*, Int16*, HRESULT)).call(format, data, pret)
  end
  def get_data(format : UInt8*, pvarret : VARIANT*) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(format, pvarret)
  end
  def clear_data(format : UInt8*, pret : Int16*) : HRESULT
    @lpVtbl.value.clear_data.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(format, pret)
  end
  def put_drop_effect(v : UInt8*) : HRESULT
    @lpVtbl.value.put_drop_effect.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_drop_effect(p : UInt8**) : HRESULT
    @lpVtbl.value.get_drop_effect.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_effect_allowed(v : UInt8*) : HRESULT
    @lpVtbl.value.put_effect_allowed.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_effect_allowed(p : UInt8**) : HRESULT
    @lpVtbl.value.get_effect_allowed.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLEventObj2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def set_attribute(strattributename : UInt8*, attributevalue : VARIANT, lflags : Int32) : HRESULT
    @lpVtbl.value.set_attribute.unsafe_as(Proc(UInt8*, VARIANT, Int32, HRESULT)).call(strattributename, attributevalue, lflags)
  end
  def get_attribute(strattributename : UInt8*, lflags : Int32, attributevalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_attribute.unsafe_as(Proc(UInt8*, Int32, VARIANT*, HRESULT)).call(strattributename, lflags, attributevalue)
  end
  def remove_attribute(strattributename : UInt8*, lflags : Int32, pfsuccess : Int16*) : HRESULT
    @lpVtbl.value.remove_attribute.unsafe_as(Proc(UInt8*, Int32, Int16*, HRESULT)).call(strattributename, lflags, pfsuccess)
  end
  def put_property_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_property_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_property_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_property_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def putref_bookmarks(v : IHTMLBookmarkCollection) : HRESULT
    @lpVtbl.value.putref_bookmarks.unsafe_as(Proc(IHTMLBookmarkCollection, HRESULT)).call(v)
  end
  def get_bookmarks(p : IHTMLBookmarkCollection*) : HRESULT
    @lpVtbl.value.get_bookmarks.unsafe_as(Proc(IHTMLBookmarkCollection*, HRESULT)).call(p)
  end
  def putref_recordset(v : IDispatch) : HRESULT
    @lpVtbl.value.putref_recordset.unsafe_as(Proc(IDispatch, HRESULT)).call(v)
  end
  def get_recordset(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_recordset.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def put_data_fld(v : UInt8*) : HRESULT
    @lpVtbl.value.put_data_fld.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_data_fld(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data_fld.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def putref_bound_elements(v : IHTMLElementCollection) : HRESULT
    @lpVtbl.value.putref_bound_elements.unsafe_as(Proc(IHTMLElementCollection, HRESULT)).call(v)
  end
  def get_bound_elements(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_bound_elements.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def put_repeat(v : Int16) : HRESULT
    @lpVtbl.value.put_repeat.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_repeat(p : Int16*) : HRESULT
    @lpVtbl.value.get_repeat.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_src_urn(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src_urn.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src_urn(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src_urn.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def putref_src_element(v : IHTMLElement) : HRESULT
    @lpVtbl.value.putref_src_element.unsafe_as(Proc(IHTMLElement, HRESULT)).call(v)
  end
  def get_src_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_src_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def put_alt_key(v : Int16) : HRESULT
    @lpVtbl.value.put_alt_key.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_alt_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_alt_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_ctrl_key(v : Int16) : HRESULT
    @lpVtbl.value.put_ctrl_key.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_ctrl_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_ctrl_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_shift_key(v : Int16) : HRESULT
    @lpVtbl.value.put_shift_key.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_shift_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_shift_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def putref_from_element(v : IHTMLElement) : HRESULT
    @lpVtbl.value.putref_from_element.unsafe_as(Proc(IHTMLElement, HRESULT)).call(v)
  end
  def get_from_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_from_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def putref_to_element(v : IHTMLElement) : HRESULT
    @lpVtbl.value.putref_to_element.unsafe_as(Proc(IHTMLElement, HRESULT)).call(v)
  end
  def get_to_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_to_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def put_button(v : Int32) : HRESULT
    @lpVtbl.value.put_button.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_button(p : Int32*) : HRESULT
    @lpVtbl.value.get_button.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_qualifier(v : UInt8*) : HRESULT
    @lpVtbl.value.put_qualifier.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_qualifier(p : UInt8**) : HRESULT
    @lpVtbl.value.get_qualifier.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_reason(v : Int32) : HRESULT
    @lpVtbl.value.put_reason.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_reason(p : Int32*) : HRESULT
    @lpVtbl.value.get_reason.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_x(v : Int32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_y(v : Int32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_client_x(v : Int32) : HRESULT
    @lpVtbl.value.put_client_x.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_client_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_client_y(v : Int32) : HRESULT
    @lpVtbl.value.put_client_y.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_client_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_offset_x(v : Int32) : HRESULT
    @lpVtbl.value.put_offset_x.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_offset_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_offset_y(v : Int32) : HRESULT
    @lpVtbl.value.put_offset_y.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_offset_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_screen_x(v : Int32) : HRESULT
    @lpVtbl.value.put_screen_x.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_screen_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_screen_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_screen_y(v : Int32) : HRESULT
    @lpVtbl.value.put_screen_y.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_screen_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_screen_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def putref_src_filter(v : IDispatch) : HRESULT
    @lpVtbl.value.putref_src_filter.unsafe_as(Proc(IDispatch, HRESULT)).call(v)
  end
  def get_src_filter(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_src_filter.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_data_transfer(p : IHTMLDataTransfer*) : HRESULT
    @lpVtbl.value.get_data_transfer.unsafe_as(Proc(IHTMLDataTransfer*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLEventObj3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_content_overflow(p : Int16*) : HRESULT
    @lpVtbl.value.get_content_overflow.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_shift_left(v : Int16) : HRESULT
    @lpVtbl.value.put_shift_left.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_shift_left(p : Int16*) : HRESULT
    @lpVtbl.value.get_shift_left.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_alt_left(v : Int16) : HRESULT
    @lpVtbl.value.put_alt_left.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_alt_left(p : Int16*) : HRESULT
    @lpVtbl.value.get_alt_left.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_ctrl_left(v : Int16) : HRESULT
    @lpVtbl.value.put_ctrl_left.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_ctrl_left(p : Int16*) : HRESULT
    @lpVtbl.value.get_ctrl_left.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_ime_composition_change(p : LibC::IntPtrT*) : HRESULT
    @lpVtbl.value.get_ime_composition_change.unsafe_as(Proc(LibC::IntPtrT*, HRESULT)).call(p)
  end
  def get_ime_notify_command(p : LibC::IntPtrT*) : HRESULT
    @lpVtbl.value.get_ime_notify_command.unsafe_as(Proc(LibC::IntPtrT*, HRESULT)).call(p)
  end
  def get_ime_notify_data(p : LibC::IntPtrT*) : HRESULT
    @lpVtbl.value.get_ime_notify_data.unsafe_as(Proc(LibC::IntPtrT*, HRESULT)).call(p)
  end
  def get_ime_request(p : LibC::IntPtrT*) : HRESULT
    @lpVtbl.value.get_ime_request.unsafe_as(Proc(LibC::IntPtrT*, HRESULT)).call(p)
  end
  def get_ime_request_data(p : LibC::IntPtrT*) : HRESULT
    @lpVtbl.value.get_ime_request_data.unsafe_as(Proc(LibC::IntPtrT*, HRESULT)).call(p)
  end
  def get_keyboard_layout(p : LibC::IntPtrT*) : HRESULT
    @lpVtbl.value.get_keyboard_layout.unsafe_as(Proc(LibC::IntPtrT*, HRESULT)).call(p)
  end
  def get_behavior_cookie(p : Int32*) : HRESULT
    @lpVtbl.value.get_behavior_cookie.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_behavior_part(p : Int32*) : HRESULT
    @lpVtbl.value.get_behavior_part.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_next_page(p : UInt8**) : HRESULT
    @lpVtbl.value.get_next_page.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLEventObj4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_wheel_delta(p : Int32*) : HRESULT
    @lpVtbl.value.get_wheel_delta.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLEventObj5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_url(v : UInt8*) : HRESULT
    @lpVtbl.value.put_url.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_url(p : UInt8**) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_data(v : UInt8*) : HRESULT
    @lpVtbl.value.put_data.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_data(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_source(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_source.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def put_origin(v : UInt8*) : HRESULT
    @lpVtbl.value.put_origin.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_origin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_origin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_issession(v : Int16) : HRESULT
    @lpVtbl.value.put_issession.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_issession(p : Int16*) : HRESULT
    @lpVtbl.value.get_issession.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLEventObj6
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_action_url(p : UInt8**) : HRESULT
    @lpVtbl.value.get_action_url.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_button_id(p : Int32*) : HRESULT
    @lpVtbl.value.get_button_id.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::DispCEventObj
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLStyleMedia
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def match_medium(mediaquery : UInt8*, matches : Int16*) : HRESULT
    @lpVtbl.value.match_medium.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(mediaquery, matches)
  end
end
struct LibWin32::DispHTMLStyleMedia
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLFramesCollection2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def item(pvarindex : VARIANT*, pvarresult : VARIANT*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarindex, pvarresult)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::HTMLWindowEvents3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLWindowEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLWindowEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLDocument2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_script(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_script.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_all(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_all.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def get_body(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_body.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_active_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_active_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_images(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_images.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def get_applets(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_applets.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def get_links(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_links.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def get_forms(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_forms.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def get_anchors(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_anchors.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def put_title(v : UInt8*) : HRESULT
    @lpVtbl.value.put_title.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_title(p : UInt8**) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_scripts(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_scripts.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def put_design_mode(v : UInt8*) : HRESULT
    @lpVtbl.value.put_design_mode.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_design_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_design_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_selection(p : IHTMLSelectionObject*) : HRESULT
    @lpVtbl.value.get_selection.unsafe_as(Proc(IHTMLSelectionObject*, HRESULT)).call(p)
  end
  def get_ready_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_frames(p : IHTMLFramesCollection2*) : HRESULT
    @lpVtbl.value.get_frames.unsafe_as(Proc(IHTMLFramesCollection2*, HRESULT)).call(p)
  end
  def get_embeds(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_embeds.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def get_plugins(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_plugins.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def put_alink_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_alink_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_alink_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_alink_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_bg_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_bg_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_bg_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bg_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_fg_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_fg_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_fg_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_fg_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_link_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_link_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_link_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_link_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_vlink_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_vlink_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_vlink_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_vlink_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_referrer(p : UInt8**) : HRESULT
    @lpVtbl.value.get_referrer.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_location(p : IHTMLLocation*) : HRESULT
    @lpVtbl.value.get_location.unsafe_as(Proc(IHTMLLocation*, HRESULT)).call(p)
  end
  def get_last_modified(p : UInt8**) : HRESULT
    @lpVtbl.value.get_last_modified.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_url(v : UInt8*) : HRESULT
    @lpVtbl.value.put_url.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_url(p : UInt8**) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_domain(v : UInt8*) : HRESULT
    @lpVtbl.value.put_domain.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_domain(p : UInt8**) : HRESULT
    @lpVtbl.value.get_domain.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_cookie(v : UInt8*) : HRESULT
    @lpVtbl.value.put_cookie.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_cookie(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cookie.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_expando(v : Int16) : HRESULT
    @lpVtbl.value.put_expando.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_expando(p : Int16*) : HRESULT
    @lpVtbl.value.get_expando.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_charset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_charset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_charset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_charset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_default_charset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_default_charset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_default_charset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_default_charset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_mime_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_mime_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_file_size(p : UInt8**) : HRESULT
    @lpVtbl.value.get_file_size.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_file_created_date(p : UInt8**) : HRESULT
    @lpVtbl.value.get_file_created_date.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_file_modified_date(p : UInt8**) : HRESULT
    @lpVtbl.value.get_file_modified_date.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_file_updated_date(p : UInt8**) : HRESULT
    @lpVtbl.value.get_file_updated_date.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_security(p : UInt8**) : HRESULT
    @lpVtbl.value.get_security.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_protocol(p : UInt8**) : HRESULT
    @lpVtbl.value.get_protocol.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_name_prop(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name_prop.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def write(psarray : SAFEARRAY*) : HRESULT
    @lpVtbl.value.write.unsafe_as(Proc(SAFEARRAY*, HRESULT)).call(psarray)
  end
  def writeln(psarray : SAFEARRAY*) : HRESULT
    @lpVtbl.value.writeln.unsafe_as(Proc(SAFEARRAY*, HRESULT)).call(psarray)
  end
  def open(url : UInt8*, name : VARIANT, features : VARIANT, replace : VARIANT, pomwindowresult : IDispatch*) : HRESULT
    @lpVtbl.value.open.unsafe_as(Proc(UInt8*, VARIANT, VARIANT, VARIANT, IDispatch*, HRESULT)).call(url, name, features, replace, pomwindowresult)
  end
  def close : HRESULT
    @lpVtbl.value.close.unsafe_as(Proc(HRESULT)).call
  end
  def clear : HRESULT
    @lpVtbl.value.clear.unsafe_as(Proc(HRESULT)).call
  end
  def query_command_supported(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_supported.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_enabled(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_enabled.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_state(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_state.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_indeterm(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.query_command_indeterm.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def query_command_text(cmdid : UInt8*, pcmdtext : UInt8**) : HRESULT
    @lpVtbl.value.query_command_text.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(cmdid, pcmdtext)
  end
  def query_command_value(cmdid : UInt8*, pcmdvalue : VARIANT*) : HRESULT
    @lpVtbl.value.query_command_value.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(cmdid, pcmdvalue)
  end
  def exec_command(cmdid : UInt8*, showui : Int16, value : VARIANT, pfret : Int16*) : HRESULT
    @lpVtbl.value.exec_command.unsafe_as(Proc(UInt8*, Int16, VARIANT, Int16*, HRESULT)).call(cmdid, showui, value, pfret)
  end
  def exec_command_show_help(cmdid : UInt8*, pfret : Int16*) : HRESULT
    @lpVtbl.value.exec_command_show_help.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(cmdid, pfret)
  end
  def create_element(etag : UInt8*, newelem : IHTMLElement*) : HRESULT
    @lpVtbl.value.create_element.unsafe_as(Proc(UInt8*, IHTMLElement*, HRESULT)).call(etag, newelem)
  end
  def put_onhelp(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onhelp.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onhelp(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onhelp.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onclick(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onclick.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onclick(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onclick.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondblclick(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondblclick.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondblclick(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondblclick.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onkeyup(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onkeyup.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onkeyup(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onkeyup.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onkeydown(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onkeydown.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onkeydown(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onkeydown.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onkeypress(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onkeypress.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onkeypress(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onkeypress.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseup(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseup.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseup(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseup.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmousedown(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmousedown.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmousedown(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmousedown.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmousemove(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmousemove.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmousemove(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmousemove.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseout(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseout.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseout(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseout.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onreadystatechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreadystatechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreadystatechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreadystatechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onafterupdate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onafterupdate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onafterupdate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onafterupdate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onrowexit(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onrowexit.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onrowexit(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onrowexit.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onrowenter(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onrowenter.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onrowenter(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onrowenter.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragstart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragstart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragstart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragstart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onselectstart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onselectstart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onselectstart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onselectstart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def element_from_point(x : Int32, y : Int32, elementhit : IHTMLElement*) : HRESULT
    @lpVtbl.value.element_from_point.unsafe_as(Proc(Int32, Int32, IHTMLElement*, HRESULT)).call(x, y, elementhit)
  end
  def get_parent_window(p : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.get_parent_window.unsafe_as(Proc(IHTMLWindow2*, HRESULT)).call(p)
  end
  def get_style_sheets(p : IHTMLStyleSheetsCollection*) : HRESULT
    @lpVtbl.value.get_style_sheets.unsafe_as(Proc(IHTMLStyleSheetsCollection*, HRESULT)).call(p)
  end
  def put_onbeforeupdate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeupdate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeupdate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeupdate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerrorupdate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerrorupdate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerrorupdate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerrorupdate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
  def create_style_sheet(bstrhref : UInt8*, lindex : Int32, ppnewstylesheet : IHTMLStyleSheet*) : HRESULT
    @lpVtbl.value.create_style_sheet.unsafe_as(Proc(UInt8*, Int32, IHTMLStyleSheet*, HRESULT)).call(bstrhref, lindex, ppnewstylesheet)
  end
end
struct LibWin32::IHTMLWindow2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def item(pvarindex : VARIANT*, pvarresult : VARIANT*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarindex, pvarresult)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_frames(p : IHTMLFramesCollection2*) : HRESULT
    @lpVtbl.value.get_frames.unsafe_as(Proc(IHTMLFramesCollection2*, HRESULT)).call(p)
  end
  def put_default_status(v : UInt8*) : HRESULT
    @lpVtbl.value.put_default_status.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_default_status(p : UInt8**) : HRESULT
    @lpVtbl.value.get_default_status.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_status(v : UInt8*) : HRESULT
    @lpVtbl.value.put_status.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_status(p : UInt8**) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def set_timeout(expression : UInt8*, msec : Int32, language : VARIANT*, timerid : Int32*) : HRESULT
    @lpVtbl.value.set_timeout.unsafe_as(Proc(UInt8*, Int32, VARIANT*, Int32*, HRESULT)).call(expression, msec, language, timerid)
  end
  def clear_timeout(timerid : Int32) : HRESULT
    @lpVtbl.value.clear_timeout.unsafe_as(Proc(Int32, HRESULT)).call(timerid)
  end
  def alert(message : UInt8*) : HRESULT
    @lpVtbl.value.alert.unsafe_as(Proc(UInt8*, HRESULT)).call(message)
  end
  def confirm(message : UInt8*, confirmed : Int16*) : HRESULT
    @lpVtbl.value.confirm.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(message, confirmed)
  end
  def prompt(message : UInt8*, defstr : UInt8*, textdata : VARIANT*) : HRESULT
    @lpVtbl.value.prompt.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(message, defstr, textdata)
  end
  def get_image(p : IHTMLImageElementFactory*) : HRESULT
    @lpVtbl.value.get_image.unsafe_as(Proc(IHTMLImageElementFactory*, HRESULT)).call(p)
  end
  def get_location(p : IHTMLLocation*) : HRESULT
    @lpVtbl.value.get_location.unsafe_as(Proc(IHTMLLocation*, HRESULT)).call(p)
  end
  def get_history(p : IOmHistory*) : HRESULT
    @lpVtbl.value.get_history.unsafe_as(Proc(IOmHistory*, HRESULT)).call(p)
  end
  def close : HRESULT
    @lpVtbl.value.close.unsafe_as(Proc(HRESULT)).call
  end
  def put_opener(v : VARIANT) : HRESULT
    @lpVtbl.value.put_opener.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_opener(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_opener.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_navigator(p : IOmNavigator*) : HRESULT
    @lpVtbl.value.get_navigator.unsafe_as(Proc(IOmNavigator*, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_parent(p : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IHTMLWindow2*, HRESULT)).call(p)
  end
  def open(url : UInt8*, name : UInt8*, features : UInt8*, replace : Int16, pomwindowresult : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.open.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, Int16, IHTMLWindow2*, HRESULT)).call(url, name, features, replace, pomwindowresult)
  end
  def get_self(p : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.get_self.unsafe_as(Proc(IHTMLWindow2*, HRESULT)).call(p)
  end
  def get_top(p : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.get_top.unsafe_as(Proc(IHTMLWindow2*, HRESULT)).call(p)
  end
  def get_window(p : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(IHTMLWindow2*, HRESULT)).call(p)
  end
  def navigate(url : UInt8*) : HRESULT
    @lpVtbl.value.navigate.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def put_onfocus(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocus.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocus(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocus.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onblur(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onblur.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onblur(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onblur.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onbeforeunload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeunload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeunload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeunload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onunload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onunload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onunload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onunload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onhelp(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onhelp.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onhelp(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onhelp.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onresize(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onresize.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onresize(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onresize.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onscroll(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onscroll.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onscroll(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onscroll.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_document(p : IHTMLDocument2*) : HRESULT
    @lpVtbl.value.get_document.unsafe_as(Proc(IHTMLDocument2*, HRESULT)).call(p)
  end
  def get_event(p : IHTMLEventObj*) : HRESULT
    @lpVtbl.value.get_event.unsafe_as(Proc(IHTMLEventObj*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def show_modal_dialog(dialog : UInt8*, varargin : VARIANT*, varoptions : VARIANT*, varargout : VARIANT*) : HRESULT
    @lpVtbl.value.show_modal_dialog.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(dialog, varargin, varoptions, varargout)
  end
  def show_help(helpurl : UInt8*, helparg : VARIANT, features : UInt8*) : HRESULT
    @lpVtbl.value.show_help.unsafe_as(Proc(UInt8*, VARIANT, UInt8*, HRESULT)).call(helpurl, helparg, features)
  end
  def get_screen(p : IHTMLScreen*) : HRESULT
    @lpVtbl.value.get_screen.unsafe_as(Proc(IHTMLScreen*, HRESULT)).call(p)
  end
  def get_option(p : IHTMLOptionElementFactory*) : HRESULT
    @lpVtbl.value.get_option.unsafe_as(Proc(IHTMLOptionElementFactory*, HRESULT)).call(p)
  end
  def focus : HRESULT
    @lpVtbl.value.focus.unsafe_as(Proc(HRESULT)).call
  end
  def get_closed(p : Int16*) : HRESULT
    @lpVtbl.value.get_closed.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def blur : HRESULT
    @lpVtbl.value.blur.unsafe_as(Proc(HRESULT)).call
  end
  def scroll(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.scroll.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
  def get_client_information(p : IOmNavigator*) : HRESULT
    @lpVtbl.value.get_client_information.unsafe_as(Proc(IOmNavigator*, HRESULT)).call(p)
  end
  def set_interval(expression : UInt8*, msec : Int32, language : VARIANT*, timerid : Int32*) : HRESULT
    @lpVtbl.value.set_interval.unsafe_as(Proc(UInt8*, Int32, VARIANT*, Int32*, HRESULT)).call(expression, msec, language, timerid)
  end
  def clear_interval(timerid : Int32) : HRESULT
    @lpVtbl.value.clear_interval.unsafe_as(Proc(Int32, HRESULT)).call(timerid)
  end
  def put_offscreen_buffering(v : VARIANT) : HRESULT
    @lpVtbl.value.put_offscreen_buffering.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_offscreen_buffering(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_offscreen_buffering.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def exec_script(code : UInt8*, language : UInt8*, pvarret : VARIANT*) : HRESULT
    @lpVtbl.value.exec_script.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(code, language, pvarret)
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
  def scroll_by(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.scroll_by.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
  def scroll_to(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.scroll_to.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
  def move_to(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.move_to.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
  def move_by(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.move_by.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
  def resize_to(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.resize_to.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
  def resize_by(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.resize_by.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
  def get_external(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_external.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLWindow3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_screen_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_screen_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_screen_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_screen_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def attach_event(event : UInt8*, pdisp : IDispatch, pfresult : Int16*) : HRESULT
    @lpVtbl.value.attach_event.unsafe_as(Proc(UInt8*, IDispatch, Int16*, HRESULT)).call(event, pdisp, pfresult)
  end
  def detach_event(event : UInt8*, pdisp : IDispatch) : HRESULT
    @lpVtbl.value.detach_event.unsafe_as(Proc(UInt8*, IDispatch, HRESULT)).call(event, pdisp)
  end
  def set_timeout(expression : VARIANT*, msec : Int32, language : VARIANT*, timerid : Int32*) : HRESULT
    @lpVtbl.value.set_timeout.unsafe_as(Proc(VARIANT*, Int32, VARIANT*, Int32*, HRESULT)).call(expression, msec, language, timerid)
  end
  def set_interval(expression : VARIANT*, msec : Int32, language : VARIANT*, timerid : Int32*) : HRESULT
    @lpVtbl.value.set_interval.unsafe_as(Proc(VARIANT*, Int32, VARIANT*, Int32*, HRESULT)).call(expression, msec, language, timerid)
  end
  def print : HRESULT
    @lpVtbl.value.print.unsafe_as(Proc(HRESULT)).call
  end
  def put_onbeforeprint(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeprint.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeprint(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeprint.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onafterprint(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onafterprint.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onafterprint(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onafterprint.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_clipboard_data(p : IHTMLDataTransfer*) : HRESULT
    @lpVtbl.value.get_clipboard_data.unsafe_as(Proc(IHTMLDataTransfer*, HRESULT)).call(p)
  end
  def show_modeless_dialog(url : UInt8*, varargin : VARIANT*, options : VARIANT*, pdialog : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.show_modeless_dialog.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, IHTMLWindow2*, HRESULT)).call(url, varargin, options, pdialog)
  end
end
struct LibWin32::IHTMLFrameBase
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_frame_border(v : UInt8*) : HRESULT
    @lpVtbl.value.put_frame_border.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_frame_border(p : UInt8**) : HRESULT
    @lpVtbl.value.get_frame_border.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_frame_spacing(v : VARIANT) : HRESULT
    @lpVtbl.value.put_frame_spacing.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_frame_spacing(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_frame_spacing.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_margin_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_margin_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_margin_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_margin_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_no_resize(v : Int16) : HRESULT
    @lpVtbl.value.put_no_resize.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_no_resize(p : Int16*) : HRESULT
    @lpVtbl.value.get_no_resize.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_scrolling(v : UInt8*) : HRESULT
    @lpVtbl.value.put_scrolling.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_scrolling(p : UInt8**) : HRESULT
    @lpVtbl.value.get_scrolling.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStorage
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_remaining_space(p : Int32*) : HRESULT
    @lpVtbl.value.get_remaining_space.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def key(lindex : Int32, midl__ihtmlstorage0000 : UInt8**) : HRESULT
    @lpVtbl.value.key.unsafe_as(Proc(Int32, UInt8**, HRESULT)).call(lindex, midl__ihtmlstorage0000)
  end
  def get_item(bstrkey : UInt8*, midl__ihtmlstorage0001 : VARIANT*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrkey, midl__ihtmlstorage0001)
  end
  def set_item(bstrkey : UInt8*, bstrvalue : UInt8*) : HRESULT
    @lpVtbl.value.set_item.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(bstrkey, bstrvalue)
  end
  def remove_item(bstrkey : UInt8*) : HRESULT
    @lpVtbl.value.remove_item.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrkey)
  end
  def clear : HRESULT
    @lpVtbl.value.clear.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IHTMLPerformance
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_navigation(p : IHTMLPerformanceNavigation*) : HRESULT
    @lpVtbl.value.get_navigation.unsafe_as(Proc(IHTMLPerformanceNavigation*, HRESULT)).call(p)
  end
  def get_timing(p : IHTMLPerformanceTiming*) : HRESULT
    @lpVtbl.value.get_timing.unsafe_as(Proc(IHTMLPerformanceTiming*, HRESULT)).call(p)
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
  def to_json(pvar : VARIANT*) : HRESULT
    @lpVtbl.value.to_json.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvar)
  end
end
struct LibWin32::IHTMLApplicationCache
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_status(p : Int32*) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_onchecking(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onchecking.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onchecking(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onchecking.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onnoupdate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onnoupdate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onnoupdate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onnoupdate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondownloading(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondownloading.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondownloading(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondownloading.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onprogress(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onprogress.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onprogress(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onprogress.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onupdateready(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onupdateready.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onupdateready(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onupdateready.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncached(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncached.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncached(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncached.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onobsolete(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onobsolete.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onobsolete(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onobsolete.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def update : HRESULT
    @lpVtbl.value.update.unsafe_as(Proc(HRESULT)).call
  end
  def swap_cache : HRESULT
    @lpVtbl.value.swap_cache.unsafe_as(Proc(HRESULT)).call
  end
  def abort : HRESULT
    @lpVtbl.value.abort.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IHTMLScreen
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_color_depth(p : Int32*) : HRESULT
    @lpVtbl.value.get_color_depth.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_buffer_depth(v : Int32) : HRESULT
    @lpVtbl.value.put_buffer_depth.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_buffer_depth(p : Int32*) : HRESULT
    @lpVtbl.value.get_buffer_depth.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_update_interval(v : Int32) : HRESULT
    @lpVtbl.value.put_update_interval.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_update_interval(p : Int32*) : HRESULT
    @lpVtbl.value.get_update_interval.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_avail_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_avail_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_avail_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_avail_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_font_smoothing_enabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_font_smoothing_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLScreen2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_logical_xdpi(p : Int32*) : HRESULT
    @lpVtbl.value.get_logical_xdpi.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_logical_ydpi(p : Int32*) : HRESULT
    @lpVtbl.value.get_logical_ydpi.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_device_xdpi(p : Int32*) : HRESULT
    @lpVtbl.value.get_device_xdpi.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_device_ydpi(p : Int32*) : HRESULT
    @lpVtbl.value.get_device_ydpi.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLScreen3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_system_xdpi(p : Int32*) : HRESULT
    @lpVtbl.value.get_system_xdpi.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_system_ydpi(p : Int32*) : HRESULT
    @lpVtbl.value.get_system_ydpi.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLScreen4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_pixel_depth(p : Int32*) : HRESULT
    @lpVtbl.value.get_pixel_depth.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLWindow4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create_popup(varargin : VARIANT*, pppopup : IDispatch*) : HRESULT
    @lpVtbl.value.create_popup.unsafe_as(Proc(VARIANT*, IDispatch*, HRESULT)).call(varargin, pppopup)
  end
  def get_frame_element(p : IHTMLFrameBase*) : HRESULT
    @lpVtbl.value.get_frame_element.unsafe_as(Proc(IHTMLFrameBase*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLWindow5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_xml_http_request(v : VARIANT) : HRESULT
    @lpVtbl.value.put_xml_http_request.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_xml_http_request(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_xml_http_request.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLWindow6
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x_domain_request(v : VARIANT) : HRESULT
    @lpVtbl.value.put_x_domain_request.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_x_domain_request(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_x_domain_request.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_session_storage(p : IHTMLStorage*) : HRESULT
    @lpVtbl.value.get_session_storage.unsafe_as(Proc(IHTMLStorage*, HRESULT)).call(p)
  end
  def get_local_storage(p : IHTMLStorage*) : HRESULT
    @lpVtbl.value.get_local_storage.unsafe_as(Proc(IHTMLStorage*, HRESULT)).call(p)
  end
  def put_onhashchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onhashchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onhashchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onhashchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_max_connections_per_server(p : Int32*) : HRESULT
    @lpVtbl.value.get_max_connections_per_server.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def post_message(msg : UInt8*, targetorigin : VARIANT) : HRESULT
    @lpVtbl.value.post_message.unsafe_as(Proc(UInt8*, VARIANT, HRESULT)).call(msg, targetorigin)
  end
  def to_static_html(bstrhtml : UInt8*, pbstrstatichtml : UInt8**) : HRESULT
    @lpVtbl.value.to_static_html.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(bstrhtml, pbstrstatichtml)
  end
  def put_onmessage(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmessage.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmessage(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmessage.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def ms_write_profiler_mark(bstrprofilermarkname : UInt8*) : HRESULT
    @lpVtbl.value.ms_write_profiler_mark.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrprofilermarkname)
  end
end
struct LibWin32::IHTMLWindow7
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_selection(ppihtmlselection : IHTMLSelection*) : HRESULT
    @lpVtbl.value.get_selection.unsafe_as(Proc(IHTMLSelection*, HRESULT)).call(ppihtmlselection)
  end
  def get_computed_style(varargin : IHTMLDOMNode, bstrpseudoelt : UInt8*, ppcomputedstyle : IHTMLCSSStyleDeclaration*) : HRESULT
    @lpVtbl.value.get_computed_style.unsafe_as(Proc(IHTMLDOMNode, UInt8*, IHTMLCSSStyleDeclaration*, HRESULT)).call(varargin, bstrpseudoelt, ppcomputedstyle)
  end
  def get_style_media(p : IHTMLStyleMedia*) : HRESULT
    @lpVtbl.value.get_style_media.unsafe_as(Proc(IHTMLStyleMedia*, HRESULT)).call(p)
  end
  def put_performance(v : VARIANT) : HRESULT
    @lpVtbl.value.put_performance.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_performance(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_performance.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_inner_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_inner_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_inner_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_inner_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_page_x_offset(p : Int32*) : HRESULT
    @lpVtbl.value.get_page_x_offset.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_page_y_offset(p : Int32*) : HRESULT
    @lpVtbl.value.get_page_y_offset.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_screen_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_screen_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_screen_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_screen_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_outer_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_outer_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_outer_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_outer_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_onabort(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onabort.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onabort(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onabort.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncanplay(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncanplay.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncanplay(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncanplay.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncanplaythrough(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncanplaythrough.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncanplaythrough(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncanplaythrough.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onclick(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onclick.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onclick(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onclick.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncontextmenu(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncontextmenu.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncontextmenu(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncontextmenu.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondblclick(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondblclick.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondblclick(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondblclick.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondrag(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondrag.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondrag(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondrag.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragenter(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragenter.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragenter(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragenter.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragleave(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragleave.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragleave(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragleave.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondragstart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondragstart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondragstart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondragstart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondrop(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondrop.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondrop(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondrop.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondurationchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondurationchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondurationchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondurationchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onfocusin(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocusin.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocusin(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocusin.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onfocusout(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocusout.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocusout(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocusout.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oninput(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oninput.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oninput(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oninput.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onemptied(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onemptied.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onemptied(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onemptied.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onended(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onended.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onended(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onended.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onkeydown(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onkeydown.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onkeydown(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onkeydown.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onkeypress(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onkeypress.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onkeypress(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onkeypress.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onkeyup(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onkeyup.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onkeyup(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onkeyup.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onloadeddata(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onloadeddata.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onloadeddata(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onloadeddata.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onloadedmetadata(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onloadedmetadata.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onloadedmetadata(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onloadedmetadata.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onloadstart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onloadstart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onloadstart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onloadstart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmousedown(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmousedown.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmousedown(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmousedown.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseenter(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseenter.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseenter(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseenter.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseleave(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseleave.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseleave(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseleave.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmousemove(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmousemove.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmousemove(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmousemove.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseout(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseout.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseout(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseout.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmouseup(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmouseup.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmouseup(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmouseup.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmousewheel(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmousewheel.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmousewheel(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmousewheel.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onoffline(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onoffline.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onoffline(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onoffline.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ononline(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ononline.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ononline(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ononline.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onprogress(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onprogress.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onprogress(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onprogress.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onratechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onratechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onratechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onratechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onreadystatechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreadystatechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreadystatechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreadystatechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onreset(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreset.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreset(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreset.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onseeked(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onseeked.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onseeked(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onseeked.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onseeking(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onseeking.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onseeking(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onseeking.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onselect(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onselect.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onselect(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onselect.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onstalled(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onstalled.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onstalled(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onstalled.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onstorage(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onstorage.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onstorage(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onstorage.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onsubmit(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onsubmit.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onsubmit(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onsubmit.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onsuspend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onsuspend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onsuspend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onsuspend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ontimeupdate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ontimeupdate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ontimeupdate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ontimeupdate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onpause(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onpause.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onpause(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onpause.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onplay(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onplay.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onplay(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onplay.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onplaying(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onplaying.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onplaying(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onplaying.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onvolumechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onvolumechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onvolumechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onvolumechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onwaiting(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onwaiting.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onwaiting(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onwaiting.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLWindow8
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_onmspointerdown(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerdown.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerdown(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerdown.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointermove(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointermove.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointermove(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointermove.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerup(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerup.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerup(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerup.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerout(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerout.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerout(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerout.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointercancel(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointercancel.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointercancel(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointercancel.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerhover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerhover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerhover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerhover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturestart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturestart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturestart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturestart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgestureend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgestureend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgestureend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgestureend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturehold(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturehold.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturehold(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturehold.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturetap(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturetap.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturetap(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturetap.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturedoubletap(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturedoubletap.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturedoubletap(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturedoubletap.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsinertiastart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsinertiastart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsinertiastart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsinertiastart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_application_cache(p : IHTMLApplicationCache*) : HRESULT
    @lpVtbl.value.get_application_cache.unsafe_as(Proc(IHTMLApplicationCache*, HRESULT)).call(p)
  end
  def put_onpopstate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onpopstate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onpopstate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onpopstate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLScreen
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLWindow2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLWindowProxy
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLDocumentCompatibleInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_user_agent(p : UInt8**) : HRESULT
    @lpVtbl.value.get_user_agent.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_version(p : UInt8**) : HRESULT
    @lpVtbl.value.get_version.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDocumentCompatibleInfoCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(index : Int32, compatibleinfo : IHTMLDocumentCompatibleInfo*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IHTMLDocumentCompatibleInfo*, HRESULT)).call(index, compatibleinfo)
  end
end
struct LibWin32::DispHTMLDocumentCompatibleInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLDocumentCompatibleInfoCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLDocumentEvents4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLDocumentEvents3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLDocumentEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLDocumentEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGSVGElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_x(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_x.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_x(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_y(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_y.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_y(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_width(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_width.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_width(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_height(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_height.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_height(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def put_content_script_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_content_script_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_content_script_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_content_script_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_content_style_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_content_style_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_content_style_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_content_style_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def putref_viewport(v : ISVGRect) : HRESULT
    @lpVtbl.value.putref_viewport.unsafe_as(Proc(ISVGRect, HRESULT)).call(v)
  end
  def get_viewport(p : ISVGRect*) : HRESULT
    @lpVtbl.value.get_viewport.unsafe_as(Proc(ISVGRect*, HRESULT)).call(p)
  end
  def put_pixel_unit_to_millimeter_x(v : Float32) : HRESULT
    @lpVtbl.value.put_pixel_unit_to_millimeter_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_pixel_unit_to_millimeter_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_pixel_unit_to_millimeter_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_pixel_unit_to_millimeter_y(v : Float32) : HRESULT
    @lpVtbl.value.put_pixel_unit_to_millimeter_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_pixel_unit_to_millimeter_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_pixel_unit_to_millimeter_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_screen_pixel_to_millimeter_x(v : Float32) : HRESULT
    @lpVtbl.value.put_screen_pixel_to_millimeter_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_screen_pixel_to_millimeter_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_screen_pixel_to_millimeter_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_screen_pixel_to_millimeter_y(v : Float32) : HRESULT
    @lpVtbl.value.put_screen_pixel_to_millimeter_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_screen_pixel_to_millimeter_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_screen_pixel_to_millimeter_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_use_current_view(v : Int16) : HRESULT
    @lpVtbl.value.put_use_current_view.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_use_current_view(p : Int16*) : HRESULT
    @lpVtbl.value.get_use_current_view.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def putref_current_view(v : ISVGViewSpec) : HRESULT
    @lpVtbl.value.putref_current_view.unsafe_as(Proc(ISVGViewSpec, HRESULT)).call(v)
  end
  def get_current_view(p : ISVGViewSpec*) : HRESULT
    @lpVtbl.value.get_current_view.unsafe_as(Proc(ISVGViewSpec*, HRESULT)).call(p)
  end
  def put_current_scale(v : Float32) : HRESULT
    @lpVtbl.value.put_current_scale.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_current_scale(p : Float32*) : HRESULT
    @lpVtbl.value.get_current_scale.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def putref_current_translate(v : ISVGPoint) : HRESULT
    @lpVtbl.value.putref_current_translate.unsafe_as(Proc(ISVGPoint, HRESULT)).call(v)
  end
  def get_current_translate(p : ISVGPoint*) : HRESULT
    @lpVtbl.value.get_current_translate.unsafe_as(Proc(ISVGPoint*, HRESULT)).call(p)
  end
  def suspend_redraw(maxwaitmilliseconds : UInt32, presult : UInt32*) : HRESULT
    @lpVtbl.value.suspend_redraw.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(maxwaitmilliseconds, presult)
  end
  def unsuspend_redraw(suspendhandeid : UInt32) : HRESULT
    @lpVtbl.value.unsuspend_redraw.unsafe_as(Proc(UInt32, HRESULT)).call(suspendhandeid)
  end
  def unsuspend_redraw_all : HRESULT
    @lpVtbl.value.unsuspend_redraw_all.unsafe_as(Proc(HRESULT)).call
  end
  def force_redraw : HRESULT
    @lpVtbl.value.force_redraw.unsafe_as(Proc(HRESULT)).call
  end
  def pause_animations : HRESULT
    @lpVtbl.value.pause_animations.unsafe_as(Proc(HRESULT)).call
  end
  def unpause_animations : HRESULT
    @lpVtbl.value.unpause_animations.unsafe_as(Proc(HRESULT)).call
  end
  def animations_paused(presult : Int16*) : HRESULT
    @lpVtbl.value.animations_paused.unsafe_as(Proc(Int16*, HRESULT)).call(presult)
  end
  def get_current_time(presult : Float32*) : HRESULT
    @lpVtbl.value.get_current_time.unsafe_as(Proc(Float32*, HRESULT)).call(presult)
  end
  def set_current_time(seconds : Float32) : HRESULT
    @lpVtbl.value.set_current_time.unsafe_as(Proc(Float32, HRESULT)).call(seconds)
  end
  def get_intersection_list(rect : ISVGRect, referenceelement : ISVGElement, presult : VARIANT*) : HRESULT
    @lpVtbl.value.get_intersection_list.unsafe_as(Proc(ISVGRect, ISVGElement, VARIANT*, HRESULT)).call(rect, referenceelement, presult)
  end
  def get_enclosure_list(rect : ISVGRect, referenceelement : ISVGElement, presult : VARIANT*) : HRESULT
    @lpVtbl.value.get_enclosure_list.unsafe_as(Proc(ISVGRect, ISVGElement, VARIANT*, HRESULT)).call(rect, referenceelement, presult)
  end
  def check_intersection(element : ISVGElement, rect : ISVGRect, presult : Int16*) : HRESULT
    @lpVtbl.value.check_intersection.unsafe_as(Proc(ISVGElement, ISVGRect, Int16*, HRESULT)).call(element, rect, presult)
  end
  def check_enclosure(element : ISVGElement, rect : ISVGRect, presult : Int16*) : HRESULT
    @lpVtbl.value.check_enclosure.unsafe_as(Proc(ISVGElement, ISVGRect, Int16*, HRESULT)).call(element, rect, presult)
  end
  def deselect_all : HRESULT
    @lpVtbl.value.deselect_all.unsafe_as(Proc(HRESULT)).call
  end
  def create_svg_number(presult : ISVGNumber*) : HRESULT
    @lpVtbl.value.create_svg_number.unsafe_as(Proc(ISVGNumber*, HRESULT)).call(presult)
  end
  def create_svg_length(presult : ISVGLength*) : HRESULT
    @lpVtbl.value.create_svg_length.unsafe_as(Proc(ISVGLength*, HRESULT)).call(presult)
  end
  def create_svg_angle(presult : ISVGAngle*) : HRESULT
    @lpVtbl.value.create_svg_angle.unsafe_as(Proc(ISVGAngle*, HRESULT)).call(presult)
  end
  def create_svg_point(presult : ISVGPoint*) : HRESULT
    @lpVtbl.value.create_svg_point.unsafe_as(Proc(ISVGPoint*, HRESULT)).call(presult)
  end
  def create_svg_matrix(presult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.create_svg_matrix.unsafe_as(Proc(ISVGMatrix*, HRESULT)).call(presult)
  end
  def create_svg_rect(presult : ISVGRect*) : HRESULT
    @lpVtbl.value.create_svg_rect.unsafe_as(Proc(ISVGRect*, HRESULT)).call(presult)
  end
  def create_svg_transform(presult : ISVGTransform*) : HRESULT
    @lpVtbl.value.create_svg_transform.unsafe_as(Proc(ISVGTransform*, HRESULT)).call(presult)
  end
  def create_svg_transform_from_matrix(matrix : ISVGMatrix, presult : ISVGTransform*) : HRESULT
    @lpVtbl.value.create_svg_transform_from_matrix.unsafe_as(Proc(ISVGMatrix, ISVGTransform*, HRESULT)).call(matrix, presult)
  end
  def get_element_by_id(elementid : UInt8*, presult : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_element_by_id.unsafe_as(Proc(UInt8*, IHTMLElement*, HRESULT)).call(elementid, presult)
  end
end
struct LibWin32::IDOMNodeIterator
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_root(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_root.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_what_to_show(p : UInt32*) : HRESULT
    @lpVtbl.value.get_what_to_show.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def get_filter(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_filter.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_expand_entity_references(p : Int16*) : HRESULT
    @lpVtbl.value.get_expand_entity_references.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def next_node(ppretnode : IDispatch*) : HRESULT
    @lpVtbl.value.next_node.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppretnode)
  end
  def previous_node(ppretnode : IDispatch*) : HRESULT
    @lpVtbl.value.previous_node.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppretnode)
  end
  def detach : HRESULT
    @lpVtbl.value.detach.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IDOMTreeWalker
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_root(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_root.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_what_to_show(p : UInt32*) : HRESULT
    @lpVtbl.value.get_what_to_show.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def get_filter(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_filter.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_expand_entity_references(p : Int16*) : HRESULT
    @lpVtbl.value.get_expand_entity_references.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def putref_current_node(v : IDispatch) : HRESULT
    @lpVtbl.value.putref_current_node.unsafe_as(Proc(IDispatch, HRESULT)).call(v)
  end
  def get_current_node(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_current_node.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def parent_node(ppretnode : IDispatch*) : HRESULT
    @lpVtbl.value.parent_node.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppretnode)
  end
  def first_child(ppretnode : IDispatch*) : HRESULT
    @lpVtbl.value.first_child.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppretnode)
  end
  def last_child(ppretnode : IDispatch*) : HRESULT
    @lpVtbl.value.last_child.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppretnode)
  end
  def previous_sibling(ppretnode : IDispatch*) : HRESULT
    @lpVtbl.value.previous_sibling.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppretnode)
  end
  def next_sibling(ppretnode : IDispatch*) : HRESULT
    @lpVtbl.value.next_sibling.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppretnode)
  end
  def previous_node(ppretnode : IDispatch*) : HRESULT
    @lpVtbl.value.previous_node.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppretnode)
  end
  def next_node(ppretnode : IDispatch*) : HRESULT
    @lpVtbl.value.next_node.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppretnode)
  end
end
struct LibWin32::IDOMProcessingInstruction
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_target(p : UInt8**) : HRESULT
    @lpVtbl.value.get_target.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_data(v : UInt8*) : HRESULT
    @lpVtbl.value.put_data.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_data(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDocument3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def release_capture : HRESULT
    @lpVtbl.value.release_capture.unsafe_as(Proc(HRESULT)).call
  end
  def recalc(fforce : Int16) : HRESULT
    @lpVtbl.value.recalc.unsafe_as(Proc(Int16, HRESULT)).call(fforce)
  end
  def create_text_node(text : UInt8*, newtextnode : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.create_text_node.unsafe_as(Proc(UInt8*, IHTMLDOMNode*, HRESULT)).call(text, newtextnode)
  end
  def get_document_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_document_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_unique_id(p : UInt8**) : HRESULT
    @lpVtbl.value.get_unique_id.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def attach_event(event : UInt8*, pdisp : IDispatch, pfresult : Int16*) : HRESULT
    @lpVtbl.value.attach_event.unsafe_as(Proc(UInt8*, IDispatch, Int16*, HRESULT)).call(event, pdisp, pfresult)
  end
  def detach_event(event : UInt8*, pdisp : IDispatch) : HRESULT
    @lpVtbl.value.detach_event.unsafe_as(Proc(UInt8*, IDispatch, HRESULT)).call(event, pdisp)
  end
  def put_onrowsdelete(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onrowsdelete.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onrowsdelete(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onrowsdelete.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onrowsinserted(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onrowsinserted.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onrowsinserted(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onrowsinserted.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_oncellchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncellchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncellchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncellchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondatasetchanged(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondatasetchanged.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondatasetchanged(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondatasetchanged.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondataavailable(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondataavailable.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondataavailable(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondataavailable.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondatasetcomplete(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondatasetcomplete.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondatasetcomplete(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondatasetcomplete.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onpropertychange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onpropertychange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onpropertychange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onpropertychange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_dir(v : UInt8*) : HRESULT
    @lpVtbl.value.put_dir.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_dir(p : UInt8**) : HRESULT
    @lpVtbl.value.get_dir.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_oncontextmenu(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncontextmenu.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncontextmenu(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncontextmenu.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onstop(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onstop.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onstop(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onstop.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def create_document_fragment(pnewdoc : IHTMLDocument2*) : HRESULT
    @lpVtbl.value.create_document_fragment.unsafe_as(Proc(IHTMLDocument2*, HRESULT)).call(pnewdoc)
  end
  def get_parent_document(p : IHTMLDocument2*) : HRESULT
    @lpVtbl.value.get_parent_document.unsafe_as(Proc(IHTMLDocument2*, HRESULT)).call(p)
  end
  def put_enable_download(v : Int16) : HRESULT
    @lpVtbl.value.put_enable_download.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_enable_download(p : Int16*) : HRESULT
    @lpVtbl.value.get_enable_download.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_base_url(v : UInt8*) : HRESULT
    @lpVtbl.value.put_base_url.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_base_url(p : UInt8**) : HRESULT
    @lpVtbl.value.get_base_url.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_child_nodes(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_child_nodes.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def put_inherit_style_sheets(v : Int16) : HRESULT
    @lpVtbl.value.put_inherit_style_sheets.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_inherit_style_sheets(p : Int16*) : HRESULT
    @lpVtbl.value.get_inherit_style_sheets.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_onbeforeeditfocus(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeeditfocus.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeeditfocus(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeeditfocus.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_elements_by_name(v : UInt8*, pelcoll : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_elements_by_name.unsafe_as(Proc(UInt8*, IHTMLElementCollection*, HRESULT)).call(v, pelcoll)
  end
  def get_element_by_id(v : UInt8*, pel : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_element_by_id.unsafe_as(Proc(UInt8*, IHTMLElement*, HRESULT)).call(v, pel)
  end
  def get_elements_by_tag_name(v : UInt8*, pelcoll : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_elements_by_tag_name.unsafe_as(Proc(UInt8*, IHTMLElementCollection*, HRESULT)).call(v, pelcoll)
  end
end
struct LibWin32::IHTMLDocument4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def focus : HRESULT
    @lpVtbl.value.focus.unsafe_as(Proc(HRESULT)).call
  end
  def has_focus(pffocus : Int16*) : HRESULT
    @lpVtbl.value.has_focus.unsafe_as(Proc(Int16*, HRESULT)).call(pffocus)
  end
  def put_onselectionchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onselectionchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onselectionchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onselectionchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_namespaces(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_namespaces.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def create_document_from_url(bstrurl : UInt8*, bstroptions : UInt8*, newdoc : IHTMLDocument2*) : HRESULT
    @lpVtbl.value.create_document_from_url.unsafe_as(Proc(UInt8*, UInt8*, IHTMLDocument2*, HRESULT)).call(bstrurl, bstroptions, newdoc)
  end
  def put_media(v : UInt8*) : HRESULT
    @lpVtbl.value.put_media.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_media(p : UInt8**) : HRESULT
    @lpVtbl.value.get_media.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def create_event_object(pvareventobject : VARIANT*, ppeventobj : IHTMLEventObj*) : HRESULT
    @lpVtbl.value.create_event_object.unsafe_as(Proc(VARIANT*, IHTMLEventObj*, HRESULT)).call(pvareventobject, ppeventobj)
  end
  def fire_event(bstreventname : UInt8*, pvareventobject : VARIANT*, pfcancelled : Int16*) : HRESULT
    @lpVtbl.value.fire_event.unsafe_as(Proc(UInt8*, VARIANT*, Int16*, HRESULT)).call(bstreventname, pvareventobject, pfcancelled)
  end
  def create_render_style(v : UInt8*, ppihtmlrenderstyle : IHTMLRenderStyle*) : HRESULT
    @lpVtbl.value.create_render_style.unsafe_as(Proc(UInt8*, IHTMLRenderStyle*, HRESULT)).call(v, ppihtmlrenderstyle)
  end
  def put_oncontrolselect(v : VARIANT) : HRESULT
    @lpVtbl.value.put_oncontrolselect.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_oncontrolselect(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_oncontrolselect.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_url_unencoded(p : UInt8**) : HRESULT
    @lpVtbl.value.get_url_unencoded.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDocument5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_onmousewheel(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmousewheel.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmousewheel(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmousewheel.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_doctype(p : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.get_doctype.unsafe_as(Proc(IHTMLDOMNode*, HRESULT)).call(p)
  end
  def get_implementation(p : IHTMLDOMImplementation*) : HRESULT
    @lpVtbl.value.get_implementation.unsafe_as(Proc(IHTMLDOMImplementation*, HRESULT)).call(p)
  end
  def create_attribute(bstrattrname : UInt8*, ppattribute : IHTMLDOMAttribute*) : HRESULT
    @lpVtbl.value.create_attribute.unsafe_as(Proc(UInt8*, IHTMLDOMAttribute*, HRESULT)).call(bstrattrname, ppattribute)
  end
  def create_comment(bstrdata : UInt8*, ppretnode : IHTMLDOMNode*) : HRESULT
    @lpVtbl.value.create_comment.unsafe_as(Proc(UInt8*, IHTMLDOMNode*, HRESULT)).call(bstrdata, ppretnode)
  end
  def put_onfocusin(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocusin.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocusin(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocusin.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onfocusout(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocusout.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocusout(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocusout.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onactivate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onactivate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onactivate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onactivate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ondeactivate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ondeactivate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ondeactivate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ondeactivate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onbeforeactivate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeactivate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeactivate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeactivate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onbeforedeactivate(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforedeactivate.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforedeactivate(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforedeactivate.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_compat_mode(p : UInt8**) : HRESULT
    @lpVtbl.value.get_compat_mode.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDocument6
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_compatible(p : IHTMLDocumentCompatibleInfoCollection*) : HRESULT
    @lpVtbl.value.get_compatible.unsafe_as(Proc(IHTMLDocumentCompatibleInfoCollection*, HRESULT)).call(p)
  end
  def get_document_mode(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_document_mode.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onstorage(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onstorage.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onstorage(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onstorage.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onstoragecommit(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onstoragecommit.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onstoragecommit(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onstoragecommit.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_element_by_id(bstrid : UInt8*, ppretelement : IHTMLElement2*) : HRESULT
    @lpVtbl.value.get_element_by_id.unsafe_as(Proc(UInt8*, IHTMLElement2*, HRESULT)).call(bstrid, ppretelement)
  end
  def update_settings : HRESULT
    @lpVtbl.value.update_settings.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IHTMLDocument8
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_onmscontentzoom(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmscontentzoom.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmscontentzoom(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmscontentzoom.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerdown(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerdown.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerdown(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerdown.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointermove(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointermove.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointermove(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointermove.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerup(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerup.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerup(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerup.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerout(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerout.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerout(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerout.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointercancel(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointercancel.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointercancel(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointercancel.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmspointerhover(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmspointerhover.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmspointerhover(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmspointerhover.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturestart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturestart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturestart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturestart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgestureend(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgestureend.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgestureend(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgestureend.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturehold(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturehold.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturehold(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturehold.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturetap(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturetap.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturetap(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturetap.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsgesturedoubletap(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsgesturedoubletap.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsgesturedoubletap(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsgesturedoubletap.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmsinertiastart(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsinertiastart.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsinertiastart(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsinertiastart.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def elements_from_point(x : Float32, y : Float32, elementshit : IHTMLDOMChildrenCollection*) : HRESULT
    @lpVtbl.value.elements_from_point.unsafe_as(Proc(Float32, Float32, IHTMLDOMChildrenCollection*, HRESULT)).call(x, y, elementshit)
  end
  def elements_from_rect(left : Float32, top : Float32, width : Float32, height : Float32, elementshit : IHTMLDOMChildrenCollection*) : HRESULT
    @lpVtbl.value.elements_from_rect.unsafe_as(Proc(Float32, Float32, Float32, Float32, IHTMLDOMChildrenCollection*, HRESULT)).call(left, top, width, height, elementshit)
  end
  def put_onmsmanipulationstatechanged(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmsmanipulationstatechanged.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmsmanipulationstatechanged(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmsmanipulationstatechanged.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ms_caps_lock_warning_off(v : Int16) : HRESULT
    @lpVtbl.value.put_ms_caps_lock_warning_off.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_ms_caps_lock_warning_off(p : Int16*) : HRESULT
    @lpVtbl.value.get_ms_caps_lock_warning_off.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IDocumentEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create_event(eventtype : UInt8*, ppevent : IDOMEvent*) : HRESULT
    @lpVtbl.value.create_event.unsafe_as(Proc(UInt8*, IDOMEvent*, HRESULT)).call(eventtype, ppevent)
  end
end
struct LibWin32::IDocumentRange
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create_range(ppihtmldomrange : IHTMLDOMRange*) : HRESULT
    @lpVtbl.value.create_range.unsafe_as(Proc(IHTMLDOMRange*, HRESULT)).call(ppihtmldomrange)
  end
end
struct LibWin32::IDocumentSelector
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def query_selector(v : UInt8*, pel : IHTMLElement*) : HRESULT
    @lpVtbl.value.query_selector.unsafe_as(Proc(UInt8*, IHTMLElement*, HRESULT)).call(v, pel)
  end
  def query_selector_all(v : UInt8*, pel : IHTMLDOMChildrenCollection*) : HRESULT
    @lpVtbl.value.query_selector_all.unsafe_as(Proc(UInt8*, IHTMLDOMChildrenCollection*, HRESULT)).call(v, pel)
  end
end
struct LibWin32::IDocumentTraversal
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create_node_iterator(prootnode : IDispatch, ulwhattoshow : Int32, pfilter : VARIANT*, fentityreferenceexpansion : Int16, ppnodeiterator : IDOMNodeIterator*) : HRESULT
    @lpVtbl.value.create_node_iterator.unsafe_as(Proc(IDispatch, Int32, VARIANT*, Int16, IDOMNodeIterator*, HRESULT)).call(prootnode, ulwhattoshow, pfilter, fentityreferenceexpansion, ppnodeiterator)
  end
  def create_tree_walker(prootnode : IDispatch, ulwhattoshow : Int32, pfilter : VARIANT*, fentityreferenceexpansion : Int16, pptreewalker : IDOMTreeWalker*) : HRESULT
    @lpVtbl.value.create_tree_walker.unsafe_as(Proc(IDispatch, Int32, VARIANT*, Int16, IDOMTreeWalker*, HRESULT)).call(prootnode, ulwhattoshow, pfilter, fentityreferenceexpansion, pptreewalker)
  end
end
struct LibWin32::DispHTMLDocument
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DWebBridgeEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IWebBridge
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_url(v : UInt8*) : HRESULT
    @lpVtbl.value.put_url.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_url(p : UInt8**) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_scrollbar(v : Int16) : HRESULT
    @lpVtbl.value.put_scrollbar.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_scrollbar(p : Int16*) : HRESULT
    @lpVtbl.value.get_scrollbar.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_embed(v : Int16) : HRESULT
    @lpVtbl.value.put_embed.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_embed(p : Int16*) : HRESULT
    @lpVtbl.value.get_embed.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_event(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_event.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_ready_state(p : Int32*) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def about_box : HRESULT
    @lpVtbl.value.about_box.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IWBScriptControl
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def raise_event(name : UInt8*, eventdata : VARIANT) : HRESULT
    @lpVtbl.value.raise_event.unsafe_as(Proc(UInt8*, VARIANT, HRESULT)).call(name, eventdata)
  end
  def bubble_event : HRESULT
    @lpVtbl.value.bubble_event.unsafe_as(Proc(HRESULT)).call
  end
  def set_context_menu(menuitempairs : VARIANT) : HRESULT
    @lpVtbl.value.set_context_menu.unsafe_as(Proc(VARIANT, HRESULT)).call(menuitempairs)
  end
  def put_selectable_content(v : Int16) : HRESULT
    @lpVtbl.value.put_selectable_content.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_selectable_content(p : Int16*) : HRESULT
    @lpVtbl.value.get_selectable_content.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_frozen(p : Int16*) : HRESULT
    @lpVtbl.value.get_frozen.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_scrollbar(v : Int16) : HRESULT
    @lpVtbl.value.put_scrollbar.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_scrollbar(p : Int16*) : HRESULT
    @lpVtbl.value.get_scrollbar.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_version(p : UInt8**) : HRESULT
    @lpVtbl.value.get_version.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_visibility(p : Int16*) : HRESULT
    @lpVtbl.value.get_visibility.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_onvisibilitychange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onvisibilitychange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onvisibilitychange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onvisibilitychange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLEmbedElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_hidden(v : UInt8*) : HRESULT
    @lpVtbl.value.put_hidden.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_hidden(p : UInt8**) : HRESULT
    @lpVtbl.value.get_hidden.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_palette(p : UInt8**) : HRESULT
    @lpVtbl.value.get_palette.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_pluginspage(p : UInt8**) : HRESULT
    @lpVtbl.value.get_pluginspage.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_units(v : UInt8*) : HRESULT
    @lpVtbl.value.put_units.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_units(p : UInt8**) : HRESULT
    @lpVtbl.value.get_units.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLEmbedElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_pluginspage(p : UInt8**) : HRESULT
    @lpVtbl.value.get_pluginspage.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLEmbed
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLMapEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLMapEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLAreasCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_length(v : Int32) : HRESULT
    @lpVtbl.value.put_length.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(name : VARIANT, index : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT, VARIANT, IDispatch*, HRESULT)).call(name, index, pdisp)
  end
  def tags(tagname : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.tags.unsafe_as(Proc(VARIANT, IDispatch*, HRESULT)).call(tagname, pdisp)
  end
  def add(element : IHTMLElement, before : VARIANT) : HRESULT
    @lpVtbl.value.add.unsafe_as(Proc(IHTMLElement, VARIANT, HRESULT)).call(element, before)
  end
  def remove(index : Int32) : HRESULT
    @lpVtbl.value.remove.unsafe_as(Proc(Int32, HRESULT)).call(index)
  end
end
struct LibWin32::IHTMLAreasCollection2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def urns(urn : VARIANT, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.urns.unsafe_as(Proc(VARIANT, IDispatch*, HRESULT)).call(urn, pdisp)
  end
end
struct LibWin32::IHTMLAreasCollection3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def named_item(name : UInt8*, pdisp : IDispatch*) : HRESULT
    @lpVtbl.value.named_item.unsafe_as(Proc(UInt8*, IDispatch*, HRESULT)).call(name, pdisp)
  end
end
struct LibWin32::IHTMLAreasCollection4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(index : Int32, pnode : IHTMLElement2*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IHTMLElement2*, HRESULT)).call(index, pnode)
  end
  def named_item(name : UInt8*, pnode : IHTMLElement2*) : HRESULT
    @lpVtbl.value.named_item.unsafe_as(Proc(UInt8*, IHTMLElement2*, HRESULT)).call(name, pnode)
  end
end
struct LibWin32::IHTMLMapElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_areas(p : IHTMLAreasCollection*) : HRESULT
    @lpVtbl.value.get_areas.unsafe_as(Proc(IHTMLAreasCollection*, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLAreasCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLMapElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLAreaEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLAreaEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLAreaElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_shape(v : UInt8*) : HRESULT
    @lpVtbl.value.put_shape.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_shape(p : UInt8**) : HRESULT
    @lpVtbl.value.get_shape.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_coords(v : UInt8*) : HRESULT
    @lpVtbl.value.put_coords.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_coords(p : UInt8**) : HRESULT
    @lpVtbl.value.get_coords.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_href(v : UInt8*) : HRESULT
    @lpVtbl.value.put_href.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_target(v : UInt8*) : HRESULT
    @lpVtbl.value.put_target.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_target(p : UInt8**) : HRESULT
    @lpVtbl.value.get_target.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_alt(v : UInt8*) : HRESULT
    @lpVtbl.value.put_alt.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_alt(p : UInt8**) : HRESULT
    @lpVtbl.value.get_alt.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_no_href(v : Int16) : HRESULT
    @lpVtbl.value.put_no_href.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_no_href(p : Int16*) : HRESULT
    @lpVtbl.value.get_no_href.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_host(v : UInt8*) : HRESULT
    @lpVtbl.value.put_host.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_host(p : UInt8**) : HRESULT
    @lpVtbl.value.get_host.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_hostname(v : UInt8*) : HRESULT
    @lpVtbl.value.put_hostname.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_hostname(p : UInt8**) : HRESULT
    @lpVtbl.value.get_hostname.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_pathname(v : UInt8*) : HRESULT
    @lpVtbl.value.put_pathname.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_pathname(p : UInt8**) : HRESULT
    @lpVtbl.value.get_pathname.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_port(v : UInt8*) : HRESULT
    @lpVtbl.value.put_port.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_port(p : UInt8**) : HRESULT
    @lpVtbl.value.get_port.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_protocol(v : UInt8*) : HRESULT
    @lpVtbl.value.put_protocol.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_protocol(p : UInt8**) : HRESULT
    @lpVtbl.value.get_protocol.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_search(v : UInt8*) : HRESULT
    @lpVtbl.value.put_search.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_search(p : UInt8**) : HRESULT
    @lpVtbl.value.get_search.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_hash(v : UInt8*) : HRESULT
    @lpVtbl.value.put_hash.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_hash(p : UInt8**) : HRESULT
    @lpVtbl.value.get_hash.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onblur(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onblur.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onblur(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onblur.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onfocus(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onfocus.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onfocus(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onfocus.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_tab_index(v : Int16) : HRESULT
    @lpVtbl.value.put_tab_index.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_tab_index(p : Int16*) : HRESULT
    @lpVtbl.value.get_tab_index.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def focus : HRESULT
    @lpVtbl.value.focus.unsafe_as(Proc(HRESULT)).call
  end
  def blur : HRESULT
    @lpVtbl.value.blur.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IHTMLAreaElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_shape(v : UInt8*) : HRESULT
    @lpVtbl.value.put_shape.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_shape(p : UInt8**) : HRESULT
    @lpVtbl.value.get_shape.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_coords(v : UInt8*) : HRESULT
    @lpVtbl.value.put_coords.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_coords(p : UInt8**) : HRESULT
    @lpVtbl.value.get_coords.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_href(v : UInt8*) : HRESULT
    @lpVtbl.value.put_href.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLAreaElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLTableCaption
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_v_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_v_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_v_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_v_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLTableCaption
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLCommentElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_atomic(v : Int32) : HRESULT
    @lpVtbl.value.put_atomic.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_atomic(p : Int32*) : HRESULT
    @lpVtbl.value.get_atomic.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCommentElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_data(v : UInt8*) : HRESULT
    @lpVtbl.value.put_data.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_data(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def substring_data(offset : Int32, count : Int32, pbstrsubstring : UInt8**) : HRESULT
    @lpVtbl.value.substring_data.unsafe_as(Proc(Int32, Int32, UInt8**, HRESULT)).call(offset, count, pbstrsubstring)
  end
  def append_data(bstrstring : UInt8*) : HRESULT
    @lpVtbl.value.append_data.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrstring)
  end
  def insert_data(offset : Int32, bstrstring : UInt8*) : HRESULT
    @lpVtbl.value.insert_data.unsafe_as(Proc(Int32, UInt8*, HRESULT)).call(offset, bstrstring)
  end
  def delete_data(offset : Int32, count : Int32) : HRESULT
    @lpVtbl.value.delete_data.unsafe_as(Proc(Int32, Int32, HRESULT)).call(offset, count)
  end
  def replace_data(offset : Int32, count : Int32, bstrstring : UInt8*) : HRESULT
    @lpVtbl.value.replace_data.unsafe_as(Proc(Int32, Int32, UInt8*, HRESULT)).call(offset, count, bstrstring)
  end
end
struct LibWin32::IHTMLCommentElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def substring_data(offset : Int32, count : Int32, pbstrsubstring : UInt8**) : HRESULT
    @lpVtbl.value.substring_data.unsafe_as(Proc(Int32, Int32, UInt8**, HRESULT)).call(offset, count, pbstrsubstring)
  end
  def insert_data(offset : Int32, bstrstring : UInt8*) : HRESULT
    @lpVtbl.value.insert_data.unsafe_as(Proc(Int32, UInt8*, HRESULT)).call(offset, bstrstring)
  end
  def delete_data(offset : Int32, count : Int32) : HRESULT
    @lpVtbl.value.delete_data.unsafe_as(Proc(Int32, Int32, HRESULT)).call(offset, count)
  end
  def replace_data(offset : Int32, count : Int32, bstrstring : UInt8*) : HRESULT
    @lpVtbl.value.replace_data.unsafe_as(Proc(Int32, Int32, UInt8*, HRESULT)).call(offset, count, bstrstring)
  end
end
struct LibWin32::DispHTMLCommentElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLPhraseElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLPhraseElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_cite(v : UInt8*) : HRESULT
    @lpVtbl.value.put_cite.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_cite(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cite.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_date_time(v : UInt8*) : HRESULT
    @lpVtbl.value.put_date_time.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_date_time(p : UInt8**) : HRESULT
    @lpVtbl.value.get_date_time.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLPhraseElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_cite(v : UInt8*) : HRESULT
    @lpVtbl.value.put_cite.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_cite(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cite.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLSpanElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLPhraseElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLSpanElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLTableEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLTableEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLTableSection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_v_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_v_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_v_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_v_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_bg_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_bg_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_bg_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bg_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_rows(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_rows.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def insert_row(index : Int32, row : IDispatch*) : HRESULT
    @lpVtbl.value.insert_row.unsafe_as(Proc(Int32, IDispatch*, HRESULT)).call(index, row)
  end
  def delete_row(index : Int32) : HRESULT
    @lpVtbl.value.delete_row.unsafe_as(Proc(Int32, HRESULT)).call(index)
  end
end
struct LibWin32::IHTMLTable
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_cols(v : Int32) : HRESULT
    @lpVtbl.value.put_cols.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_cols(p : Int32*) : HRESULT
    @lpVtbl.value.get_cols.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_border(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_frame(v : UInt8*) : HRESULT
    @lpVtbl.value.put_frame.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_frame(p : UInt8**) : HRESULT
    @lpVtbl.value.get_frame.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_rules(v : UInt8*) : HRESULT
    @lpVtbl.value.put_rules.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_rules(p : UInt8**) : HRESULT
    @lpVtbl.value.get_rules.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_cell_spacing(v : VARIANT) : HRESULT
    @lpVtbl.value.put_cell_spacing.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_cell_spacing(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_cell_spacing.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_cell_padding(v : VARIANT) : HRESULT
    @lpVtbl.value.put_cell_padding.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_cell_padding(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_cell_padding.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_background(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_bg_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_bg_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_bg_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bg_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_color_light(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_color_light.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_color_light(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_color_light.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_color_dark(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_color_dark.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_color_dark(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_color_dark.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def refresh : HRESULT
    @lpVtbl.value.refresh.unsafe_as(Proc(HRESULT)).call
  end
  def get_rows(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_rows.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_data_page_size(v : Int32) : HRESULT
    @lpVtbl.value.put_data_page_size.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_data_page_size(p : Int32*) : HRESULT
    @lpVtbl.value.get_data_page_size.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def next_page : HRESULT
    @lpVtbl.value.next_page.unsafe_as(Proc(HRESULT)).call
  end
  def previous_page : HRESULT
    @lpVtbl.value.previous_page.unsafe_as(Proc(HRESULT)).call
  end
  def get_t_head(p : IHTMLTableSection*) : HRESULT
    @lpVtbl.value.get_t_head.unsafe_as(Proc(IHTMLTableSection*, HRESULT)).call(p)
  end
  def get_t_foot(p : IHTMLTableSection*) : HRESULT
    @lpVtbl.value.get_t_foot.unsafe_as(Proc(IHTMLTableSection*, HRESULT)).call(p)
  end
  def get_t_bodies(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_t_bodies.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def get_caption(p : IHTMLTableCaption*) : HRESULT
    @lpVtbl.value.get_caption.unsafe_as(Proc(IHTMLTableCaption*, HRESULT)).call(p)
  end
  def create_t_head(head : IDispatch*) : HRESULT
    @lpVtbl.value.create_t_head.unsafe_as(Proc(IDispatch*, HRESULT)).call(head)
  end
  def delete_t_head : HRESULT
    @lpVtbl.value.delete_t_head.unsafe_as(Proc(HRESULT)).call
  end
  def create_t_foot(foot : IDispatch*) : HRESULT
    @lpVtbl.value.create_t_foot.unsafe_as(Proc(IDispatch*, HRESULT)).call(foot)
  end
  def delete_t_foot : HRESULT
    @lpVtbl.value.delete_t_foot.unsafe_as(Proc(HRESULT)).call
  end
  def create_caption(caption : IHTMLTableCaption*) : HRESULT
    @lpVtbl.value.create_caption.unsafe_as(Proc(IHTMLTableCaption*, HRESULT)).call(caption)
  end
  def delete_caption : HRESULT
    @lpVtbl.value.delete_caption.unsafe_as(Proc(HRESULT)).call
  end
  def insert_row(index : Int32, row : IDispatch*) : HRESULT
    @lpVtbl.value.insert_row.unsafe_as(Proc(Int32, IDispatch*, HRESULT)).call(index, row)
  end
  def delete_row(index : Int32) : HRESULT
    @lpVtbl.value.delete_row.unsafe_as(Proc(Int32, HRESULT)).call(index)
  end
  def get_ready_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onreadystatechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreadystatechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreadystatechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreadystatechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTable2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def first_page : HRESULT
    @lpVtbl.value.first_page.unsafe_as(Proc(HRESULT)).call
  end
  def last_page : HRESULT
    @lpVtbl.value.last_page.unsafe_as(Proc(HRESULT)).call
  end
  def get_cells(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_cells.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def move_row(indexfrom : Int32, indexto : Int32, row : IDispatch*) : HRESULT
    @lpVtbl.value.move_row.unsafe_as(Proc(Int32, Int32, IDispatch*, HRESULT)).call(indexfrom, indexto, row)
  end
end
struct LibWin32::IHTMLTable3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_summary(v : UInt8*) : HRESULT
    @lpVtbl.value.put_summary.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_summary(p : UInt8**) : HRESULT
    @lpVtbl.value.get_summary.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTable4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_t_head(v : IHTMLTableSection) : HRESULT
    @lpVtbl.value.putref_t_head.unsafe_as(Proc(IHTMLTableSection, HRESULT)).call(v)
  end
  def get_t_head(p : IHTMLTableSection*) : HRESULT
    @lpVtbl.value.get_t_head.unsafe_as(Proc(IHTMLTableSection*, HRESULT)).call(p)
  end
  def putref_t_foot(v : IHTMLTableSection) : HRESULT
    @lpVtbl.value.putref_t_foot.unsafe_as(Proc(IHTMLTableSection, HRESULT)).call(v)
  end
  def get_t_foot(p : IHTMLTableSection*) : HRESULT
    @lpVtbl.value.get_t_foot.unsafe_as(Proc(IHTMLTableSection*, HRESULT)).call(p)
  end
  def putref_caption(v : IHTMLTableCaption) : HRESULT
    @lpVtbl.value.putref_caption.unsafe_as(Proc(IHTMLTableCaption, HRESULT)).call(v)
  end
  def get_caption(p : IHTMLTableCaption*) : HRESULT
    @lpVtbl.value.get_caption.unsafe_as(Proc(IHTMLTableCaption*, HRESULT)).call(p)
  end
  def insert_row(index : Int32, row : IDispatch*) : HRESULT
    @lpVtbl.value.insert_row.unsafe_as(Proc(Int32, IDispatch*, HRESULT)).call(index, row)
  end
  def delete_row(index : Int32) : HRESULT
    @lpVtbl.value.delete_row.unsafe_as(Proc(Int32, HRESULT)).call(index)
  end
  def create_t_body(tbody : IHTMLTableSection*) : HRESULT
    @lpVtbl.value.create_t_body.unsafe_as(Proc(IHTMLTableSection*, HRESULT)).call(tbody)
  end
end
struct LibWin32::IHTMLTableCol
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_span(v : Int32) : HRESULT
    @lpVtbl.value.put_span.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_span(p : Int32*) : HRESULT
    @lpVtbl.value.get_span.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_v_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_v_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_v_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_v_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTableCol2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ch(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ch_off(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch_off.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch_off(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch_off.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTableCol3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ch(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ch_off(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch_off.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch_off(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch_off.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTableSection2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def move_row(indexfrom : Int32, indexto : Int32, row : IDispatch*) : HRESULT
    @lpVtbl.value.move_row.unsafe_as(Proc(Int32, Int32, IDispatch*, HRESULT)).call(indexfrom, indexto, row)
  end
end
struct LibWin32::IHTMLTableSection3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ch(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ch_off(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch_off.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch_off(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch_off.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTableSection4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ch(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ch_off(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch_off.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch_off(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch_off.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def insert_row(index : Int32, row : IDispatch*) : HRESULT
    @lpVtbl.value.insert_row.unsafe_as(Proc(Int32, IDispatch*, HRESULT)).call(index, row)
  end
  def delete_row(index : Int32) : HRESULT
    @lpVtbl.value.delete_row.unsafe_as(Proc(Int32, HRESULT)).call(index)
  end
end
struct LibWin32::IHTMLTableRow
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_v_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_v_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_v_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_v_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_bg_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_bg_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_bg_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bg_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_color_light(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_color_light.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_color_light(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_color_light.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_color_dark(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_color_dark.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_color_dark(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_color_dark.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_row_index(p : Int32*) : HRESULT
    @lpVtbl.value.get_row_index.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_section_row_index(p : Int32*) : HRESULT
    @lpVtbl.value.get_section_row_index.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_cells(p : IHTMLElementCollection*) : HRESULT
    @lpVtbl.value.get_cells.unsafe_as(Proc(IHTMLElementCollection*, HRESULT)).call(p)
  end
  def insert_cell(index : Int32, row : IDispatch*) : HRESULT
    @lpVtbl.value.insert_cell.unsafe_as(Proc(Int32, IDispatch*, HRESULT)).call(index, row)
  end
  def delete_cell(index : Int32) : HRESULT
    @lpVtbl.value.delete_cell.unsafe_as(Proc(Int32, HRESULT)).call(index)
  end
end
struct LibWin32::IHTMLTableRow2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTableRow3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ch(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ch_off(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch_off.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch_off(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch_off.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTableRow4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ch(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ch_off(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch_off.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch_off(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch_off.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def insert_cell(index : Int32, row : IDispatch*) : HRESULT
    @lpVtbl.value.insert_cell.unsafe_as(Proc(Int32, IDispatch*, HRESULT)).call(index, row)
  end
  def delete_cell(index : Int32) : HRESULT
    @lpVtbl.value.delete_cell.unsafe_as(Proc(Int32, HRESULT)).call(index)
  end
end
struct LibWin32::IHTMLTableRowMetrics
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_client_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTableCell
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_row_span(v : Int32) : HRESULT
    @lpVtbl.value.put_row_span.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_row_span(p : Int32*) : HRESULT
    @lpVtbl.value.get_row_span.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_col_span(v : Int32) : HRESULT
    @lpVtbl.value.put_col_span.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_col_span(p : Int32*) : HRESULT
    @lpVtbl.value.get_col_span.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_v_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_v_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_v_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_v_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_bg_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_bg_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_bg_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_bg_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_no_wrap(v : Int16) : HRESULT
    @lpVtbl.value.put_no_wrap.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_no_wrap(p : Int16*) : HRESULT
    @lpVtbl.value.get_no_wrap.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_background(v : UInt8*) : HRESULT
    @lpVtbl.value.put_background.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_background(p : UInt8**) : HRESULT
    @lpVtbl.value.get_background.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_color_light(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_color_light.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_color_light(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_color_light.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_color_dark(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_color_dark.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_color_dark(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_color_dark.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_cell_index(p : Int32*) : HRESULT
    @lpVtbl.value.get_cell_index.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTableCell2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_abbr(v : UInt8*) : HRESULT
    @lpVtbl.value.put_abbr.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_abbr(p : UInt8**) : HRESULT
    @lpVtbl.value.get_abbr.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_axis(v : UInt8*) : HRESULT
    @lpVtbl.value.put_axis.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_axis(p : UInt8**) : HRESULT
    @lpVtbl.value.get_axis.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ch(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ch_off(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch_off.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch_off(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch_off.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_headers(v : UInt8*) : HRESULT
    @lpVtbl.value.put_headers.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_headers(p : UInt8**) : HRESULT
    @lpVtbl.value.get_headers.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_scope(v : UInt8*) : HRESULT
    @lpVtbl.value.put_scope.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_scope(p : UInt8**) : HRESULT
    @lpVtbl.value.get_scope.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTableCell3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ch(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_ch_off(v : UInt8*) : HRESULT
    @lpVtbl.value.put_ch_off.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_ch_off(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ch_off.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLTable
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLTableCol
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLTableSection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLTableRow
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLTableCell
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLScriptEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLScriptEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLScriptElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_html_for(v : UInt8*) : HRESULT
    @lpVtbl.value.put_html_for.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_html_for(p : UInt8**) : HRESULT
    @lpVtbl.value.get_html_for.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_event(v : UInt8*) : HRESULT
    @lpVtbl.value.put_event.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_event(p : UInt8**) : HRESULT
    @lpVtbl.value.get_event.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_defer(v : Int16) : HRESULT
    @lpVtbl.value.put_defer.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_defer(p : Int16*) : HRESULT
    @lpVtbl.value.get_defer.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_ready_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLScriptElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_charset(v : UInt8*) : HRESULT
    @lpVtbl.value.put_charset.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_charset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_charset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLScriptElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLScriptElement4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_used_charset(p : UInt8**) : HRESULT
    @lpVtbl.value.get_used_charset.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLScriptElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLNoShowElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLNoShowElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLObjectElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLObjectElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLObjectElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_object(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_object.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_classid(p : UInt8**) : HRESULT
    @lpVtbl.value.get_classid.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_data(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def putref_recordset(v : IDispatch) : HRESULT
    @lpVtbl.value.putref_recordset.unsafe_as(Proc(IDispatch, HRESULT)).call(v)
  end
  def get_recordset(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_recordset.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_code_base(v : UInt8*) : HRESULT
    @lpVtbl.value.put_code_base.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_code_base(p : UInt8**) : HRESULT
    @lpVtbl.value.get_code_base.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_code_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_code_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_code_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_code_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_code(v : UInt8*) : HRESULT
    @lpVtbl.value.put_code.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_code(p : UInt8**) : HRESULT
    @lpVtbl.value.get_code.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_base_href(p : UInt8**) : HRESULT
    @lpVtbl.value.get_base_href.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_ready_state(p : Int32*) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_onreadystatechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreadystatechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreadystatechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreadystatechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_alt_html(v : UInt8*) : HRESULT
    @lpVtbl.value.put_alt_html.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_alt_html(p : UInt8**) : HRESULT
    @lpVtbl.value.get_alt_html.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_vspace(v : Int32) : HRESULT
    @lpVtbl.value.put_vspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_vspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_vspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_hspace(v : Int32) : HRESULT
    @lpVtbl.value.put_hspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_hspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_hspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLObjectElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def named_recordset(datamember : UInt8*, hierarchy : VARIANT*, pprecordset : IDispatch*) : HRESULT
    @lpVtbl.value.named_recordset.unsafe_as(Proc(UInt8*, VARIANT*, IDispatch*, HRESULT)).call(datamember, hierarchy, pprecordset)
  end
  def put_classid(v : UInt8*) : HRESULT
    @lpVtbl.value.put_classid.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_classid(p : UInt8**) : HRESULT
    @lpVtbl.value.get_classid.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_data(v : UInt8*) : HRESULT
    @lpVtbl.value.put_data.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_data(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLObjectElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_archive(v : UInt8*) : HRESULT
    @lpVtbl.value.put_archive.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_archive(p : UInt8**) : HRESULT
    @lpVtbl.value.get_archive.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_alt(v : UInt8*) : HRESULT
    @lpVtbl.value.put_alt.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_alt(p : UInt8**) : HRESULT
    @lpVtbl.value.get_alt.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_declare(v : Int16) : HRESULT
    @lpVtbl.value.put_declare.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_declare(p : Int16*) : HRESULT
    @lpVtbl.value.get_declare.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_standby(v : UInt8*) : HRESULT
    @lpVtbl.value.put_standby.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_standby(p : UInt8**) : HRESULT
    @lpVtbl.value.get_standby.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_use_map(v : UInt8*) : HRESULT
    @lpVtbl.value.put_use_map.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_use_map(p : UInt8**) : HRESULT
    @lpVtbl.value.get_use_map.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLObjectElement4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_content_document(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_content_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def put_code_base(v : UInt8*) : HRESULT
    @lpVtbl.value.put_code_base.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_code_base(p : UInt8**) : HRESULT
    @lpVtbl.value.get_code_base.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_data(v : UInt8*) : HRESULT
    @lpVtbl.value.put_data.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_data(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLObjectElement5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_object(v : UInt8*) : HRESULT
    @lpVtbl.value.put_object.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_object(p : UInt8**) : HRESULT
    @lpVtbl.value.get_object.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLParamElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLParamElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_value_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLObjectElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLParamElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLFrameSiteEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLFrameSiteEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLFrameBase2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_content_window(p : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.get_content_window.unsafe_as(Proc(IHTMLWindow2*, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onreadystatechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreadystatechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreadystatechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreadystatechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_ready_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_allow_transparency(v : Int16) : HRESULT
    @lpVtbl.value.put_allow_transparency.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_allow_transparency(p : Int16*) : HRESULT
    @lpVtbl.value.get_allow_transparency.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLFrameBase3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_long_desc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_long_desc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_long_desc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_long_desc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLFrameBase
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLFrameElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_border_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLFrameElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLFrameElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_content_document(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_content_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_long_desc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_long_desc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_long_desc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_long_desc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_frame_border(v : UInt8*) : HRESULT
    @lpVtbl.value.put_frame_border.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_frame_border(p : UInt8**) : HRESULT
    @lpVtbl.value.get_frame_border.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLFrameElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLIFrameElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_vspace(v : Int32) : HRESULT
    @lpVtbl.value.put_vspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_vspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_vspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_hspace(v : Int32) : HRESULT
    @lpVtbl.value.put_hspace.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_hspace(p : Int32*) : HRESULT
    @lpVtbl.value.get_hspace.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLIFrameElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLIFrameElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_content_document(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_content_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_long_desc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_long_desc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_long_desc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_long_desc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_frame_border(v : UInt8*) : HRESULT
    @lpVtbl.value.put_frame_border.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_frame_border(p : UInt8**) : HRESULT
    @lpVtbl.value.get_frame_border.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLIFrame
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLDivPosition
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLFieldSetElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLFieldSetElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLLegendElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLLegendElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLDivPosition
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLFieldSetElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLLegendElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLSpanFlow
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLSpanFlow
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLFrameSetElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_rows(v : UInt8*) : HRESULT
    @lpVtbl.value.put_rows.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_rows(p : UInt8**) : HRESULT
    @lpVtbl.value.get_rows.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_cols(v : UInt8*) : HRESULT
    @lpVtbl.value.put_cols.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_cols(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cols.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_border_color(v : VARIANT) : HRESULT
    @lpVtbl.value.put_border_color.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_border_color(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_border_color.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_frame_border(v : UInt8*) : HRESULT
    @lpVtbl.value.put_frame_border.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_frame_border(p : UInt8**) : HRESULT
    @lpVtbl.value.get_frame_border.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_frame_spacing(v : VARIANT) : HRESULT
    @lpVtbl.value.put_frame_spacing.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_frame_spacing(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_frame_spacing.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onunload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onunload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onunload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onunload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onbeforeunload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeunload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeunload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeunload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLFrameSetElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_onbeforeprint(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onbeforeprint.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onbeforeprint(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onbeforeprint.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onafterprint(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onafterprint.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onafterprint(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onafterprint.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLFrameSetElement3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_onhashchange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onhashchange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onhashchange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onhashchange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onmessage(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onmessage.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onmessage(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onmessage.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onoffline(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onoffline.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onoffline(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onoffline.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ononline(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ononline.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ononline(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ononline.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onstorage(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onstorage.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onstorage(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onstorage.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLFrameSetSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLBGsound
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_loop(v : VARIANT) : HRESULT
    @lpVtbl.value.put_loop.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_loop(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_loop.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_volume(v : VARIANT) : HRESULT
    @lpVtbl.value.put_volume.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_volume(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_volume.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_balance(v : VARIANT) : HRESULT
    @lpVtbl.value.put_balance.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_balance(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_balance.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLBGsound
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLFontNamesCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(index : Int32, pbstr : UInt8**) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, UInt8**, HRESULT)).call(index, pbstr)
  end
end
struct LibWin32::IHTMLFontSizesCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def get_for_font(p : UInt8**) : HRESULT
    @lpVtbl.value.get_for_font.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def item(index : Int32, plsize : Int32*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, Int32*, HRESULT)).call(index, plsize)
  end
end
struct LibWin32::IHTMLOptionsHolder
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_document(p : IHTMLDocument2*) : HRESULT
    @lpVtbl.value.get_document.unsafe_as(Proc(IHTMLDocument2*, HRESULT)).call(p)
  end
  def get_fonts(p : IHTMLFontNamesCollection*) : HRESULT
    @lpVtbl.value.get_fonts.unsafe_as(Proc(IHTMLFontNamesCollection*, HRESULT)).call(p)
  end
  def put_exec_arg(v : VARIANT) : HRESULT
    @lpVtbl.value.put_exec_arg.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_exec_arg(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_exec_arg.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_error_line(v : Int32) : HRESULT
    @lpVtbl.value.put_error_line.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_error_line(p : Int32*) : HRESULT
    @lpVtbl.value.get_error_line.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_error_character(v : Int32) : HRESULT
    @lpVtbl.value.put_error_character.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_error_character(p : Int32*) : HRESULT
    @lpVtbl.value.get_error_character.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_error_code(v : Int32) : HRESULT
    @lpVtbl.value.put_error_code.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_error_code(p : Int32*) : HRESULT
    @lpVtbl.value.get_error_code.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_error_message(v : UInt8*) : HRESULT
    @lpVtbl.value.put_error_message.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_error_message(p : UInt8**) : HRESULT
    @lpVtbl.value.get_error_message.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_error_debug(v : Int16) : HRESULT
    @lpVtbl.value.put_error_debug.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_error_debug(p : Int16*) : HRESULT
    @lpVtbl.value.get_error_debug.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_unsecured_window_of_document(p : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.get_unsecured_window_of_document.unsafe_as(Proc(IHTMLWindow2*, HRESULT)).call(p)
  end
  def put_find_text(v : UInt8*) : HRESULT
    @lpVtbl.value.put_find_text.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_find_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_find_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_anything_after_frameset(v : Int16) : HRESULT
    @lpVtbl.value.put_anything_after_frameset.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_anything_after_frameset(p : Int16*) : HRESULT
    @lpVtbl.value.get_anything_after_frameset.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def sizes(fontname : UInt8*, psizescollection : IHTMLFontSizesCollection*) : HRESULT
    @lpVtbl.value.sizes.unsafe_as(Proc(UInt8*, IHTMLFontSizesCollection*, HRESULT)).call(fontname, psizescollection)
  end
  def openfiledlg(initfile : VARIANT, initdir : VARIANT, filter : VARIANT, title : VARIANT, pathname : UInt8**) : HRESULT
    @lpVtbl.value.openfiledlg.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, VARIANT, UInt8**, HRESULT)).call(initfile, initdir, filter, title, pathname)
  end
  def savefiledlg(initfile : VARIANT, initdir : VARIANT, filter : VARIANT, title : VARIANT, pathname : UInt8**) : HRESULT
    @lpVtbl.value.savefiledlg.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, VARIANT, UInt8**, HRESULT)).call(initfile, initdir, filter, title, pathname)
  end
  def choosecolordlg(initcolor : VARIANT, rgbcolor : Int32*) : HRESULT
    @lpVtbl.value.choosecolordlg.unsafe_as(Proc(VARIANT, Int32*, HRESULT)).call(initcolor, rgbcolor)
  end
  def show_security_info : HRESULT
    @lpVtbl.value.show_security_info.unsafe_as(Proc(HRESULT)).call
  end
  def is_apartment_model(object : IHTMLObjectElement, fapartment : Int16*) : HRESULT
    @lpVtbl.value.is_apartment_model.unsafe_as(Proc(IHTMLObjectElement, Int16*, HRESULT)).call(object, fapartment)
  end
  def get_charset(fontname : UInt8*, charset : Int32*) : HRESULT
    @lpVtbl.value.get_charset.unsafe_as(Proc(UInt8*, Int32*, HRESULT)).call(fontname, charset)
  end
  def get_secure_connection_info(p : UInt8**) : HRESULT
    @lpVtbl.value.get_secure_connection_info.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::HTMLStyleElementEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLStyleElementEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLStyleElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_ready_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onreadystatechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreadystatechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreadystatechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreadystatechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_style_sheet(p : IHTMLStyleSheet*) : HRESULT
    @lpVtbl.value.get_style_sheet.unsafe_as(Proc(IHTMLStyleSheet*, HRESULT)).call(p)
  end
  def put_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_media(v : UInt8*) : HRESULT
    @lpVtbl.value.put_media.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_media(p : UInt8**) : HRESULT
    @lpVtbl.value.get_media.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStyleElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_sheet(p : IHTMLStyleSheet*) : HRESULT
    @lpVtbl.value.get_sheet.unsafe_as(Proc(IHTMLStyleSheet*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLStyleElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLStyleFontFace
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_fontsrc(v : UInt8*) : HRESULT
    @lpVtbl.value.put_fontsrc.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_fontsrc(p : UInt8**) : HRESULT
    @lpVtbl.value.get_fontsrc.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLStyleFontFace2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_style(p : IHTMLRuleStyle*) : HRESULT
    @lpVtbl.value.get_style.unsafe_as(Proc(IHTMLRuleStyle*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLStyleFontFace
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLXDomainRequest
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_response_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_response_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_timeout(v : Int32) : HRESULT
    @lpVtbl.value.put_timeout.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_timeout(p : Int32*) : HRESULT
    @lpVtbl.value.get_timeout.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_content_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_content_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onprogress(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onprogress.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onprogress(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onprogress.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onerror(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onerror.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onerror(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onerror.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_ontimeout(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ontimeout.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ontimeout(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ontimeout.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onload(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onload.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onload(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onload.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def abort : HRESULT
    @lpVtbl.value.abort.unsafe_as(Proc(HRESULT)).call
  end
  def open(bstrmethod : UInt8*, bstrurl : UInt8*) : HRESULT
    @lpVtbl.value.open.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(bstrmethod, bstrurl)
  end
  def send(varbody : VARIANT) : HRESULT
    @lpVtbl.value.send.unsafe_as(Proc(VARIANT, HRESULT)).call(varbody)
  end
end
struct LibWin32::IHTMLXDomainRequestFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create(midl__ihtmlxdomainrequestfactory0000 : IHTMLXDomainRequest*) : HRESULT
    @lpVtbl.value.create.unsafe_as(Proc(IHTMLXDomainRequest*, HRESULT)).call(midl__ihtmlxdomainrequestfactory0000)
  end
end
struct LibWin32::DispXDomainRequest
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLStorage2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def set_item(bstrkey : UInt8*, bstrvalue : UInt8*) : HRESULT
    @lpVtbl.value.set_item.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(bstrkey, bstrvalue)
  end
end
struct LibWin32::DispHTMLStorage
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IEventTarget
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def add_event_listener(type : UInt8*, listener : IDispatch, usecapture : Int16) : HRESULT
    @lpVtbl.value.add_event_listener.unsafe_as(Proc(UInt8*, IDispatch, Int16, HRESULT)).call(type, listener, usecapture)
  end
  def remove_event_listener(type : UInt8*, listener : IDispatch, usecapture : Int16) : HRESULT
    @lpVtbl.value.remove_event_listener.unsafe_as(Proc(UInt8*, IDispatch, Int16, HRESULT)).call(type, listener, usecapture)
  end
  def dispatch_event(evt : IDOMEvent, pfresult : Int16*) : HRESULT
    @lpVtbl.value.dispatch_event.unsafe_as(Proc(IDOMEvent, Int16*, HRESULT)).call(evt, pfresult)
  end
end
struct LibWin32::DispDOMEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMUIEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_view(p : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.get_view.unsafe_as(Proc(IHTMLWindow2*, HRESULT)).call(p)
  end
  def get_detail(p : Int32*) : HRESULT
    @lpVtbl.value.get_detail.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def init_ui_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, view : IHTMLWindow2, detail : Int32) : HRESULT
    @lpVtbl.value.init_ui_event.unsafe_as(Proc(UInt8*, Int16, Int16, IHTMLWindow2, Int32, HRESULT)).call(eventtype, canbubble, cancelable, view, detail)
  end
end
struct LibWin32::DispDOMUIEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMMouseEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_screen_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_screen_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_screen_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_screen_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_client_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_client_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_ctrl_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_ctrl_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_shift_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_shift_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_alt_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_alt_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_meta_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_meta_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_button(p : UInt16*) : HRESULT
    @lpVtbl.value.get_button.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def get_related_target(p : IEventTarget*) : HRESULT
    @lpVtbl.value.get_related_target.unsafe_as(Proc(IEventTarget*, HRESULT)).call(p)
  end
  def init_mouse_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, viewarg : IHTMLWindow2, detailarg : Int32, screenxarg : Int32, screenyarg : Int32, clientxarg : Int32, clientyarg : Int32, ctrlkeyarg : Int16, altkeyarg : Int16, shiftkeyarg : Int16, metakeyarg : Int16, buttonarg : UInt16, relatedtargetarg : IEventTarget) : HRESULT
    @lpVtbl.value.init_mouse_event.unsafe_as(Proc(UInt8*, Int16, Int16, IHTMLWindow2, Int32, Int32, Int32, Int32, Int32, Int16, Int16, Int16, Int16, UInt16, IEventTarget, HRESULT)).call(eventtype, canbubble, cancelable, viewarg, detailarg, screenxarg, screenyarg, clientxarg, clientyarg, ctrlkeyarg, altkeyarg, shiftkeyarg, metakeyarg, buttonarg, relatedtargetarg)
  end
  def get_modifier_state(keyarg : UInt8*, activated : Int16*) : HRESULT
    @lpVtbl.value.get_modifier_state.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(keyarg, activated)
  end
  def get_buttons(p : UInt16*) : HRESULT
    @lpVtbl.value.get_buttons.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def get_from_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_from_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_to_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_to_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_offset_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_offset_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_offset_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_page_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_page_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_page_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_page_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_layer_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_layer_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_layer_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_layer_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_which(p : UInt16*) : HRESULT
    @lpVtbl.value.get_which.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
end
struct LibWin32::DispDOMMouseEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMDragEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_data_transfer(p : IHTMLDataTransfer*) : HRESULT
    @lpVtbl.value.get_data_transfer.unsafe_as(Proc(IHTMLDataTransfer*, HRESULT)).call(p)
  end
  def init_drag_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, viewarg : IHTMLWindow2, detailarg : Int32, screenxarg : Int32, screenyarg : Int32, clientxarg : Int32, clientyarg : Int32, ctrlkeyarg : Int16, altkeyarg : Int16, shiftkeyarg : Int16, metakeyarg : Int16, buttonarg : UInt16, relatedtargetarg : IEventTarget, datatransferarg : IHTMLDataTransfer) : HRESULT
    @lpVtbl.value.init_drag_event.unsafe_as(Proc(UInt8*, Int16, Int16, IHTMLWindow2, Int32, Int32, Int32, Int32, Int32, Int16, Int16, Int16, Int16, UInt16, IEventTarget, IHTMLDataTransfer, HRESULT)).call(eventtype, canbubble, cancelable, viewarg, detailarg, screenxarg, screenyarg, clientxarg, clientyarg, ctrlkeyarg, altkeyarg, shiftkeyarg, metakeyarg, buttonarg, relatedtargetarg, datatransferarg)
  end
end
struct LibWin32::DispDOMDragEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMMouseWheelEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_wheel_delta(p : Int32*) : HRESULT
    @lpVtbl.value.get_wheel_delta.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def init_mouse_wheel_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, viewarg : IHTMLWindow2, detailarg : Int32, screenxarg : Int32, screenyarg : Int32, clientxarg : Int32, clientyarg : Int32, buttonarg : UInt16, relatedtargetarg : IEventTarget, modifierslistarg : UInt8*, wheeldeltaarg : Int32) : HRESULT
    @lpVtbl.value.init_mouse_wheel_event.unsafe_as(Proc(UInt8*, Int16, Int16, IHTMLWindow2, Int32, Int32, Int32, Int32, Int32, UInt16, IEventTarget, UInt8*, Int32, HRESULT)).call(eventtype, canbubble, cancelable, viewarg, detailarg, screenxarg, screenyarg, clientxarg, clientyarg, buttonarg, relatedtargetarg, modifierslistarg, wheeldeltaarg)
  end
end
struct LibWin32::DispDOMMouseWheelEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMWheelEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_delta_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_delta_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_delta_y(p : Int32*) : HRESULT
    @lpVtbl.value.get_delta_y.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_delta_z(p : Int32*) : HRESULT
    @lpVtbl.value.get_delta_z.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_delta_mode(p : UInt32*) : HRESULT
    @lpVtbl.value.get_delta_mode.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def init_wheel_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, viewarg : IHTMLWindow2, detailarg : Int32, screenxarg : Int32, screenyarg : Int32, clientxarg : Int32, clientyarg : Int32, buttonarg : UInt16, relatedtargetarg : IEventTarget, modifierslistarg : UInt8*, deltax : Int32, deltay : Int32, deltaz : Int32, deltamode : UInt32) : HRESULT
    @lpVtbl.value.init_wheel_event.unsafe_as(Proc(UInt8*, Int16, Int16, IHTMLWindow2, Int32, Int32, Int32, Int32, Int32, UInt16, IEventTarget, UInt8*, Int32, Int32, Int32, UInt32, HRESULT)).call(eventtype, canbubble, cancelable, viewarg, detailarg, screenxarg, screenyarg, clientxarg, clientyarg, buttonarg, relatedtargetarg, modifierslistarg, deltax, deltay, deltaz, deltamode)
  end
end
struct LibWin32::DispDOMWheelEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMTextEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_data(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_input_method(p : UInt32*) : HRESULT
    @lpVtbl.value.get_input_method.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def init_text_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, viewarg : IHTMLWindow2, dataarg : UInt8*, inputmethod : UInt32, locale : UInt8*) : HRESULT
    @lpVtbl.value.init_text_event.unsafe_as(Proc(UInt8*, Int16, Int16, IHTMLWindow2, UInt8*, UInt32, UInt8*, HRESULT)).call(eventtype, canbubble, cancelable, viewarg, dataarg, inputmethod, locale)
  end
  def get_locale(p : UInt8**) : HRESULT
    @lpVtbl.value.get_locale.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispDOMTextEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMKeyboardEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_key(p : UInt8**) : HRESULT
    @lpVtbl.value.get_key.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_location(p : UInt32*) : HRESULT
    @lpVtbl.value.get_location.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def get_ctrl_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_ctrl_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_shift_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_shift_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_alt_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_alt_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_meta_key(p : Int16*) : HRESULT
    @lpVtbl.value.get_meta_key.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_repeat(p : Int16*) : HRESULT
    @lpVtbl.value.get_repeat.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_modifier_state(keyarg : UInt8*, state : Int16*) : HRESULT
    @lpVtbl.value.get_modifier_state.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(keyarg, state)
  end
  def init_keyboard_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, viewarg : IHTMLWindow2, keyarg : UInt8*, locationarg : UInt32, modifierslistarg : UInt8*, repeat : Int16, locale : UInt8*) : HRESULT
    @lpVtbl.value.init_keyboard_event.unsafe_as(Proc(UInt8*, Int16, Int16, IHTMLWindow2, UInt8*, UInt32, UInt8*, Int16, UInt8*, HRESULT)).call(eventtype, canbubble, cancelable, viewarg, keyarg, locationarg, modifierslistarg, repeat, locale)
  end
  def get_key_code(p : Int32*) : HRESULT
    @lpVtbl.value.get_key_code.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_char_code(p : Int32*) : HRESULT
    @lpVtbl.value.get_char_code.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_which(p : Int32*) : HRESULT
    @lpVtbl.value.get_which.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_ie9_char(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ie9_char.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_locale(p : UInt8**) : HRESULT
    @lpVtbl.value.get_locale.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispDOMKeyboardEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMCompositionEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_data(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def init_composition_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, viewarg : IHTMLWindow2, data : UInt8*, locale : UInt8*) : HRESULT
    @lpVtbl.value.init_composition_event.unsafe_as(Proc(UInt8*, Int16, Int16, IHTMLWindow2, UInt8*, UInt8*, HRESULT)).call(eventtype, canbubble, cancelable, viewarg, data, locale)
  end
  def get_locale(p : UInt8**) : HRESULT
    @lpVtbl.value.get_locale.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispDOMCompositionEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMMutationEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_related_node(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_related_node.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_prev_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_prev_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_new_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_new_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_attr_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_attr_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_attr_change(p : UInt16*) : HRESULT
    @lpVtbl.value.get_attr_change.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def init_mutation_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, relatednodearg : IDispatch, prevvaluearg : UInt8*, newvaluearg : UInt8*, attrnamearg : UInt8*, attrchangearg : UInt16) : HRESULT
    @lpVtbl.value.init_mutation_event.unsafe_as(Proc(UInt8*, Int16, Int16, IDispatch, UInt8*, UInt8*, UInt8*, UInt16, HRESULT)).call(eventtype, canbubble, cancelable, relatednodearg, prevvaluearg, newvaluearg, attrnamearg, attrchangearg)
  end
end
struct LibWin32::DispDOMMutationEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMBeforeUnloadEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_return_value(v : VARIANT) : HRESULT
    @lpVtbl.value.put_return_value.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_return_value(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_return_value.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::DispDOMBeforeUnloadEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMFocusEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_related_target(p : IEventTarget*) : HRESULT
    @lpVtbl.value.get_related_target.unsafe_as(Proc(IEventTarget*, HRESULT)).call(p)
  end
  def init_focus_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, view : IHTMLWindow2, detail : Int32, relatedtargetarg : IEventTarget) : HRESULT
    @lpVtbl.value.init_focus_event.unsafe_as(Proc(UInt8*, Int16, Int16, IHTMLWindow2, Int32, IEventTarget, HRESULT)).call(eventtype, canbubble, cancelable, view, detail, relatedtargetarg)
  end
end
struct LibWin32::DispDOMFocusEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMCustomEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_detail(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_detail.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def init_custom_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, detail : VARIANT*) : HRESULT
    @lpVtbl.value.init_custom_event.unsafe_as(Proc(UInt8*, Int16, Int16, VARIANT*, HRESULT)).call(eventtype, canbubble, cancelable, detail)
  end
end
struct LibWin32::DispDOMCustomEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ICanvasGradient
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def add_color_stop(offset : Float32, color : UInt8*) : HRESULT
    @lpVtbl.value.add_color_stop.unsafe_as(Proc(Float32, UInt8*, HRESULT)).call(offset, color)
  end
end
struct LibWin32::ICanvasPattern
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ICanvasTextMetrics
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_width(p : Float32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ICanvasImageData
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_width(p : UInt32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def get_height(p : UInt32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def get_data(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::ICanvasPixelArray
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : UInt32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLCanvasElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_width(v : Int32) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_height(v : Int32) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_context(contextid : UInt8*, ppcontext : ICanvasRenderingContext2D*) : HRESULT
    @lpVtbl.value.get_context.unsafe_as(Proc(UInt8*, ICanvasRenderingContext2D*, HRESULT)).call(contextid, ppcontext)
  end
  def to_data_url(type : UInt8*, jpegquality : VARIANT, purl : UInt8**) : HRESULT
    @lpVtbl.value.to_data_url.unsafe_as(Proc(UInt8*, VARIANT, UInt8**, HRESULT)).call(type, jpegquality, purl)
  end
end
struct LibWin32::ICanvasRenderingContext2D
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_canvas(p : IHTMLCanvasElement*) : HRESULT
    @lpVtbl.value.get_canvas.unsafe_as(Proc(IHTMLCanvasElement*, HRESULT)).call(p)
  end
  def restore : HRESULT
    @lpVtbl.value.restore.unsafe_as(Proc(HRESULT)).call
  end
  def save : HRESULT
    @lpVtbl.value.save.unsafe_as(Proc(HRESULT)).call
  end
  def rotate(angle : Float32) : HRESULT
    @lpVtbl.value.rotate.unsafe_as(Proc(Float32, HRESULT)).call(angle)
  end
  def scale(x : Float32, y : Float32) : HRESULT
    @lpVtbl.value.scale.unsafe_as(Proc(Float32, Float32, HRESULT)).call(x, y)
  end
  def set_transform(m11 : Float32, m12 : Float32, m21 : Float32, m22 : Float32, dx : Float32, dy : Float32) : HRESULT
    @lpVtbl.value.set_transform.unsafe_as(Proc(Float32, Float32, Float32, Float32, Float32, Float32, HRESULT)).call(m11, m12, m21, m22, dx, dy)
  end
  def transform(m11 : Float32, m12 : Float32, m21 : Float32, m22 : Float32, dx : Float32, dy : Float32) : HRESULT
    @lpVtbl.value.transform.unsafe_as(Proc(Float32, Float32, Float32, Float32, Float32, Float32, HRESULT)).call(m11, m12, m21, m22, dx, dy)
  end
  def translate(x : Float32, y : Float32) : HRESULT
    @lpVtbl.value.translate.unsafe_as(Proc(Float32, Float32, HRESULT)).call(x, y)
  end
  def put_global_alpha(v : Float32) : HRESULT
    @lpVtbl.value.put_global_alpha.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_global_alpha(p : Float32*) : HRESULT
    @lpVtbl.value.get_global_alpha.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_global_composite_operation(v : UInt8*) : HRESULT
    @lpVtbl.value.put_global_composite_operation.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_global_composite_operation(p : UInt8**) : HRESULT
    @lpVtbl.value.get_global_composite_operation.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_fill_style(v : VARIANT) : HRESULT
    @lpVtbl.value.put_fill_style.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_fill_style(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_fill_style.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_stroke_style(v : VARIANT) : HRESULT
    @lpVtbl.value.put_stroke_style.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_stroke_style(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_stroke_style.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def create_linear_gradient(x0 : Float32, y0 : Float32, x1 : Float32, y1 : Float32, ppcanvasgradient : ICanvasGradient*) : HRESULT
    @lpVtbl.value.create_linear_gradient.unsafe_as(Proc(Float32, Float32, Float32, Float32, ICanvasGradient*, HRESULT)).call(x0, y0, x1, y1, ppcanvasgradient)
  end
  def create_radial_gradient(x0 : Float32, y0 : Float32, r0 : Float32, x1 : Float32, y1 : Float32, r1 : Float32, ppcanvasgradient : ICanvasGradient*) : HRESULT
    @lpVtbl.value.create_radial_gradient.unsafe_as(Proc(Float32, Float32, Float32, Float32, Float32, Float32, ICanvasGradient*, HRESULT)).call(x0, y0, r0, x1, y1, r1, ppcanvasgradient)
  end
  def create_pattern(image : IDispatch, repetition : VARIANT, ppcanvaspattern : ICanvasPattern*) : HRESULT
    @lpVtbl.value.create_pattern.unsafe_as(Proc(IDispatch, VARIANT, ICanvasPattern*, HRESULT)).call(image, repetition, ppcanvaspattern)
  end
  def put_line_cap(v : UInt8*) : HRESULT
    @lpVtbl.value.put_line_cap.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_line_cap(p : UInt8**) : HRESULT
    @lpVtbl.value.get_line_cap.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_line_join(v : UInt8*) : HRESULT
    @lpVtbl.value.put_line_join.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_line_join(p : UInt8**) : HRESULT
    @lpVtbl.value.get_line_join.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_line_width(v : Float32) : HRESULT
    @lpVtbl.value.put_line_width.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_line_width(p : Float32*) : HRESULT
    @lpVtbl.value.get_line_width.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_miter_limit(v : Float32) : HRESULT
    @lpVtbl.value.put_miter_limit.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_miter_limit(p : Float32*) : HRESULT
    @lpVtbl.value.get_miter_limit.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_shadow_blur(v : Float32) : HRESULT
    @lpVtbl.value.put_shadow_blur.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_shadow_blur(p : Float32*) : HRESULT
    @lpVtbl.value.get_shadow_blur.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_shadow_color(v : UInt8*) : HRESULT
    @lpVtbl.value.put_shadow_color.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_shadow_color(p : UInt8**) : HRESULT
    @lpVtbl.value.get_shadow_color.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_shadow_offset_x(v : Float32) : HRESULT
    @lpVtbl.value.put_shadow_offset_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_shadow_offset_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_shadow_offset_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_shadow_offset_y(v : Float32) : HRESULT
    @lpVtbl.value.put_shadow_offset_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_shadow_offset_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_shadow_offset_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def clear_rect(x : Float32, y : Float32, w : Float32, h : Float32) : HRESULT
    @lpVtbl.value.clear_rect.unsafe_as(Proc(Float32, Float32, Float32, Float32, HRESULT)).call(x, y, w, h)
  end
  def fill_rect(x : Float32, y : Float32, w : Float32, h : Float32) : HRESULT
    @lpVtbl.value.fill_rect.unsafe_as(Proc(Float32, Float32, Float32, Float32, HRESULT)).call(x, y, w, h)
  end
  def stroke_rect(x : Float32, y : Float32, w : Float32, h : Float32) : HRESULT
    @lpVtbl.value.stroke_rect.unsafe_as(Proc(Float32, Float32, Float32, Float32, HRESULT)).call(x, y, w, h)
  end
  def arc(x : Float32, y : Float32, radius : Float32, startangle : Float32, endangle : Float32, anticlockwise : LibC::BOOL) : HRESULT
    @lpVtbl.value.arc.unsafe_as(Proc(Float32, Float32, Float32, Float32, Float32, LibC::BOOL, HRESULT)).call(x, y, radius, startangle, endangle, anticlockwise)
  end
  def arc_to(x1 : Float32, y1 : Float32, x2 : Float32, y2 : Float32, radius : Float32) : HRESULT
    @lpVtbl.value.arc_to.unsafe_as(Proc(Float32, Float32, Float32, Float32, Float32, HRESULT)).call(x1, y1, x2, y2, radius)
  end
  def begin_path : HRESULT
    @lpVtbl.value.begin_path.unsafe_as(Proc(HRESULT)).call
  end
  def bezier_curve_to(cp1x : Float32, cp1y : Float32, cp2x : Float32, cp2y : Float32, x : Float32, y : Float32) : HRESULT
    @lpVtbl.value.bezier_curve_to.unsafe_as(Proc(Float32, Float32, Float32, Float32, Float32, Float32, HRESULT)).call(cp1x, cp1y, cp2x, cp2y, x, y)
  end
  def clip : HRESULT
    @lpVtbl.value.clip.unsafe_as(Proc(HRESULT)).call
  end
  def close_path : HRESULT
    @lpVtbl.value.close_path.unsafe_as(Proc(HRESULT)).call
  end
  def fill : HRESULT
    @lpVtbl.value.fill.unsafe_as(Proc(HRESULT)).call
  end
  def line_to(x : Float32, y : Float32) : HRESULT
    @lpVtbl.value.line_to.unsafe_as(Proc(Float32, Float32, HRESULT)).call(x, y)
  end
  def move_to(x : Float32, y : Float32) : HRESULT
    @lpVtbl.value.move_to.unsafe_as(Proc(Float32, Float32, HRESULT)).call(x, y)
  end
  def quadratic_curve_to(cpx : Float32, cpy : Float32, x : Float32, y : Float32) : HRESULT
    @lpVtbl.value.quadratic_curve_to.unsafe_as(Proc(Float32, Float32, Float32, Float32, HRESULT)).call(cpx, cpy, x, y)
  end
  def rect(x : Float32, y : Float32, w : Float32, h : Float32) : HRESULT
    @lpVtbl.value.rect.unsafe_as(Proc(Float32, Float32, Float32, Float32, HRESULT)).call(x, y, w, h)
  end
  def stroke : HRESULT
    @lpVtbl.value.stroke.unsafe_as(Proc(HRESULT)).call
  end
  def is_point_in_path(x : Float32, y : Float32, presult : Int16*) : HRESULT
    @lpVtbl.value.is_point_in_path.unsafe_as(Proc(Float32, Float32, Int16*, HRESULT)).call(x, y, presult)
  end
  def put_font(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_align(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_align.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_align(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_align.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_baseline(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_baseline.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_baseline(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_baseline.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def fill_text(text : UInt8*, x : Float32, y : Float32, maxwidth : VARIANT) : HRESULT
    @lpVtbl.value.fill_text.unsafe_as(Proc(UInt8*, Float32, Float32, VARIANT, HRESULT)).call(text, x, y, maxwidth)
  end
  def measure_text(text : UInt8*, ppcanvastextmetrics : ICanvasTextMetrics*) : HRESULT
    @lpVtbl.value.measure_text.unsafe_as(Proc(UInt8*, ICanvasTextMetrics*, HRESULT)).call(text, ppcanvastextmetrics)
  end
  def stroke_text(text : UInt8*, x : Float32, y : Float32, maxwidth : VARIANT) : HRESULT
    @lpVtbl.value.stroke_text.unsafe_as(Proc(UInt8*, Float32, Float32, VARIANT, HRESULT)).call(text, x, y, maxwidth)
  end
  def draw_image(psrc : IDispatch, a1 : VARIANT, a2 : VARIANT, a3 : VARIANT, a4 : VARIANT, a5 : VARIANT, a6 : VARIANT, a7 : VARIANT, a8 : VARIANT) : HRESULT
    @lpVtbl.value.draw_image.unsafe_as(Proc(IDispatch, VARIANT, VARIANT, VARIANT, VARIANT, VARIANT, VARIANT, VARIANT, VARIANT, HRESULT)).call(psrc, a1, a2, a3, a4, a5, a6, a7, a8)
  end
  def create_image_data(a1 : VARIANT, a2 : VARIANT, ppcanvasimagedata : ICanvasImageData*) : HRESULT
    @lpVtbl.value.create_image_data.unsafe_as(Proc(VARIANT, VARIANT, ICanvasImageData*, HRESULT)).call(a1, a2, ppcanvasimagedata)
  end
  def get_image_data(sx : Float32, sy : Float32, sw : Float32, sh : Float32, ppcanvasimagedata : ICanvasImageData*) : HRESULT
    @lpVtbl.value.get_image_data.unsafe_as(Proc(Float32, Float32, Float32, Float32, ICanvasImageData*, HRESULT)).call(sx, sy, sw, sh, ppcanvasimagedata)
  end
  def put_image_data(imagedata : ICanvasImageData, dx : Float32, dy : Float32, dirtyx : VARIANT, dirtyy : VARIANT, dirtywidth : VARIANT, dirtyheight : VARIANT) : HRESULT
    @lpVtbl.value.put_image_data.unsafe_as(Proc(ICanvasImageData, Float32, Float32, VARIANT, VARIANT, VARIANT, VARIANT, HRESULT)).call(imagedata, dx, dy, dirtyx, dirtyy, dirtywidth, dirtyheight)
  end
end
struct LibWin32::DispCanvasGradient
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispCanvasPattern
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispCanvasTextMetrics
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispCanvasImageData
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispCanvasRenderingContext2D
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLCanvasElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMProgressEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length_computable(p : Int16*) : HRESULT
    @lpVtbl.value.get_length_computable.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_loaded(p : UInt64*) : HRESULT
    @lpVtbl.value.get_loaded.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_total(p : UInt64*) : HRESULT
    @lpVtbl.value.get_total.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def init_progress_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, lengthcomputablearg : Int16, loadedarg : UInt64, totalarg : UInt64) : HRESULT
    @lpVtbl.value.init_progress_event.unsafe_as(Proc(UInt8*, Int16, Int16, Int16, UInt64, UInt64, HRESULT)).call(eventtype, canbubble, cancelable, lengthcomputablearg, loadedarg, totalarg)
  end
end
struct LibWin32::DispDOMProgressEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMMessageEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_data(p : UInt8**) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_origin(p : UInt8**) : HRESULT
    @lpVtbl.value.get_origin.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_source(p : IHTMLWindow2*) : HRESULT
    @lpVtbl.value.get_source.unsafe_as(Proc(IHTMLWindow2*, HRESULT)).call(p)
  end
  def init_message_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, data : UInt8*, origin : UInt8*, lasteventid : UInt8*, source : IHTMLWindow2) : HRESULT
    @lpVtbl.value.init_message_event.unsafe_as(Proc(UInt8*, Int16, Int16, UInt8*, UInt8*, UInt8*, IHTMLWindow2, HRESULT)).call(eventtype, canbubble, cancelable, data, origin, lasteventid, source)
  end
end
struct LibWin32::DispDOMMessageEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMSiteModeEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_button_id(p : Int32*) : HRESULT
    @lpVtbl.value.get_button_id.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_action_url(p : UInt8**) : HRESULT
    @lpVtbl.value.get_action_url.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispDOMSiteModeEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMStorageEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_key(p : UInt8**) : HRESULT
    @lpVtbl.value.get_key.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_old_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_old_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_new_value(p : UInt8**) : HRESULT
    @lpVtbl.value.get_new_value.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_url(p : UInt8**) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_storage_area(p : IHTMLStorage*) : HRESULT
    @lpVtbl.value.get_storage_area.unsafe_as(Proc(IHTMLStorage*, HRESULT)).call(p)
  end
  def init_storage_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, keyarg : UInt8*, oldvaluearg : UInt8*, newvaluearg : UInt8*, urlarg : UInt8*, storageareaarg : IHTMLStorage) : HRESULT
    @lpVtbl.value.init_storage_event.unsafe_as(Proc(UInt8*, Int16, Int16, UInt8*, UInt8*, UInt8*, UInt8*, IHTMLStorage, HRESULT)).call(eventtype, canbubble, cancelable, keyarg, oldvaluearg, newvaluearg, urlarg, storageareaarg)
  end
end
struct LibWin32::DispDOMStorageEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IXMLHttpRequestEventTarget
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispXMLHttpRequestEventTarget
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::HTMLXMLHttpRequestEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLXMLHttpRequest
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_ready_state(p : Int32*) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_response_body(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_response_body.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_response_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_response_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_response_xml(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_response_xml.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_status(p : Int32*) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_status_text(p : UInt8**) : HRESULT
    @lpVtbl.value.get_status_text.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_onreadystatechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreadystatechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreadystatechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreadystatechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def abort : HRESULT
    @lpVtbl.value.abort.unsafe_as(Proc(HRESULT)).call
  end
  def open(bstrmethod : UInt8*, bstrurl : UInt8*, varasync : VARIANT, varuser : VARIANT, varpassword : VARIANT) : HRESULT
    @lpVtbl.value.open.unsafe_as(Proc(UInt8*, UInt8*, VARIANT, VARIANT, VARIANT, HRESULT)).call(bstrmethod, bstrurl, varasync, varuser, varpassword)
  end
  def send(varbody : VARIANT) : HRESULT
    @lpVtbl.value.send.unsafe_as(Proc(VARIANT, HRESULT)).call(varbody)
  end
  def get_all_response_headers(midl__ihtmlxmlhttprequest0000 : UInt8**) : HRESULT
    @lpVtbl.value.get_all_response_headers.unsafe_as(Proc(UInt8**, HRESULT)).call(midl__ihtmlxmlhttprequest0000)
  end
  def get_response_header(bstrheader : UInt8*, midl__ihtmlxmlhttprequest0001 : UInt8**) : HRESULT
    @lpVtbl.value.get_response_header.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(bstrheader, midl__ihtmlxmlhttprequest0001)
  end
  def set_request_header(bstrheader : UInt8*, bstrvalue : UInt8*) : HRESULT
    @lpVtbl.value.set_request_header.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(bstrheader, bstrvalue)
  end
end
struct LibWin32::IHTMLXMLHttpRequest2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_timeout(v : Int32) : HRESULT
    @lpVtbl.value.put_timeout.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_timeout(p : Int32*) : HRESULT
    @lpVtbl.value.get_timeout.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_ontimeout(v : VARIANT) : HRESULT
    @lpVtbl.value.put_ontimeout.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_ontimeout(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ontimeout.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLXMLHttpRequestFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create(midl__ihtmlxmlhttprequestfactory0000 : IHTMLXMLHttpRequest*) : HRESULT
    @lpVtbl.value.create.unsafe_as(Proc(IHTMLXMLHttpRequest*, HRESULT)).call(midl__ihtmlxmlhttprequestfactory0000)
  end
end
struct LibWin32::DispHTMLXMLHttpRequest
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGAngle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_unit_type(v : Int16) : HRESULT
    @lpVtbl.value.put_unit_type.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_unit_type(p : Int16*) : HRESULT
    @lpVtbl.value.get_unit_type.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_value(v : Float32) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_value(p : Float32*) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_value_in_specified_units(v : Float32) : HRESULT
    @lpVtbl.value.put_value_in_specified_units.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_value_in_specified_units(p : Float32*) : HRESULT
    @lpVtbl.value.get_value_in_specified_units.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_value_as_string(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value_as_string.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value_as_string(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value_as_string.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def new_value_specified_units(unittype : Int16, valueinspecifiedunits : Float32) : HRESULT
    @lpVtbl.value.new_value_specified_units.unsafe_as(Proc(Int16, Float32, HRESULT)).call(unittype, valueinspecifiedunits)
  end
  def convert_to_specified_units(unittype : Int16) : HRESULT
    @lpVtbl.value.convert_to_specified_units.unsafe_as(Proc(Int16, HRESULT)).call(unittype)
  end
end
struct LibWin32::ISVGElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_xmlbase(v : UInt8*) : HRESULT
    @lpVtbl.value.put_xmlbase.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_xmlbase(p : UInt8**) : HRESULT
    @lpVtbl.value.get_xmlbase.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def putref_owner_svg_element(v : ISVGSVGElement) : HRESULT
    @lpVtbl.value.putref_owner_svg_element.unsafe_as(Proc(ISVGSVGElement, HRESULT)).call(v)
  end
  def get_owner_svg_element(p : ISVGSVGElement*) : HRESULT
    @lpVtbl.value.get_owner_svg_element.unsafe_as(Proc(ISVGSVGElement*, HRESULT)).call(p)
  end
  def putref_viewport_element(v : ISVGElement) : HRESULT
    @lpVtbl.value.putref_viewport_element.unsafe_as(Proc(ISVGElement, HRESULT)).call(v)
  end
  def get_viewport_element(p : ISVGElement*) : HRESULT
    @lpVtbl.value.get_viewport_element.unsafe_as(Proc(ISVGElement*, HRESULT)).call(p)
  end
  def putref_focusable(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_focusable.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_focusable(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_focusable.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGRect
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_width(v : Float32) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_width(p : Float32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_height(v : Float32) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_height(p : Float32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGMatrix
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_a(v : Float32) : HRESULT
    @lpVtbl.value.put_a.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_a(p : Float32*) : HRESULT
    @lpVtbl.value.get_a.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_b(v : Float32) : HRESULT
    @lpVtbl.value.put_b.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_b(p : Float32*) : HRESULT
    @lpVtbl.value.get_b.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_c(v : Float32) : HRESULT
    @lpVtbl.value.put_c.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_c(p : Float32*) : HRESULT
    @lpVtbl.value.get_c.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_d(v : Float32) : HRESULT
    @lpVtbl.value.put_d.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_d(p : Float32*) : HRESULT
    @lpVtbl.value.get_d.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_e(v : Float32) : HRESULT
    @lpVtbl.value.put_e.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_e(p : Float32*) : HRESULT
    @lpVtbl.value.get_e.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_f(v : Float32) : HRESULT
    @lpVtbl.value.put_f.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_f(p : Float32*) : HRESULT
    @lpVtbl.value.get_f.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def multiply(secondmatrix : ISVGMatrix, ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.multiply.unsafe_as(Proc(ISVGMatrix, ISVGMatrix*, HRESULT)).call(secondmatrix, ppresult)
  end
  def inverse(ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.inverse.unsafe_as(Proc(ISVGMatrix*, HRESULT)).call(ppresult)
  end
  def translate(x : Float32, y : Float32, ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.translate.unsafe_as(Proc(Float32, Float32, ISVGMatrix*, HRESULT)).call(x, y, ppresult)
  end
  def scale(scalefactor : Float32, ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.scale.unsafe_as(Proc(Float32, ISVGMatrix*, HRESULT)).call(scalefactor, ppresult)
  end
  def scale_non_uniform(scalefactorx : Float32, scalefactory : Float32, ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.scale_non_uniform.unsafe_as(Proc(Float32, Float32, ISVGMatrix*, HRESULT)).call(scalefactorx, scalefactory, ppresult)
  end
  def rotate(angle : Float32, ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.rotate.unsafe_as(Proc(Float32, ISVGMatrix*, HRESULT)).call(angle, ppresult)
  end
  def rotate_from_vector(x : Float32, y : Float32, ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.rotate_from_vector.unsafe_as(Proc(Float32, Float32, ISVGMatrix*, HRESULT)).call(x, y, ppresult)
  end
  def flip_x(ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.flip_x.unsafe_as(Proc(ISVGMatrix*, HRESULT)).call(ppresult)
  end
  def flip_y(ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.flip_y.unsafe_as(Proc(ISVGMatrix*, HRESULT)).call(ppresult)
  end
  def skew_x(angle : Float32, ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.skew_x.unsafe_as(Proc(Float32, ISVGMatrix*, HRESULT)).call(angle, ppresult)
  end
  def skew_y(angle : Float32, ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.skew_y.unsafe_as(Proc(Float32, ISVGMatrix*, HRESULT)).call(angle, ppresult)
  end
end
struct LibWin32::ISVGStringList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_number_of_items(v : Int32) : HRESULT
    @lpVtbl.value.put_number_of_items.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_number_of_items(p : Int32*) : HRESULT
    @lpVtbl.value.get_number_of_items.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def clear : HRESULT
    @lpVtbl.value.clear.unsafe_as(Proc(HRESULT)).call
  end
  def initialize(newitem : UInt8*, ppresult : UInt8**) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(newitem, ppresult)
  end
  def get_item(index : Int32, ppresult : UInt8**) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(Int32, UInt8**, HRESULT)).call(index, ppresult)
  end
  def insert_item_before(newitem : UInt8*, index : Int32, ppresult : UInt8**) : HRESULT
    @lpVtbl.value.insert_item_before.unsafe_as(Proc(UInt8*, Int32, UInt8**, HRESULT)).call(newitem, index, ppresult)
  end
  def replace_item(newitem : UInt8*, index : Int32, ppresult : UInt8**) : HRESULT
    @lpVtbl.value.replace_item.unsafe_as(Proc(UInt8*, Int32, UInt8**, HRESULT)).call(newitem, index, ppresult)
  end
  def remove_item(index : Int32, ppresult : UInt8**) : HRESULT
    @lpVtbl.value.remove_item.unsafe_as(Proc(Int32, UInt8**, HRESULT)).call(index, ppresult)
  end
  def append_item(newitem : UInt8*, ppresult : UInt8**) : HRESULT
    @lpVtbl.value.append_item.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(newitem, ppresult)
  end
end
struct LibWin32::ISVGAnimatedRect
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_base_val(v : ISVGRect) : HRESULT
    @lpVtbl.value.putref_base_val.unsafe_as(Proc(ISVGRect, HRESULT)).call(v)
  end
  def get_base_val(p : ISVGRect*) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(ISVGRect*, HRESULT)).call(p)
  end
  def putref_anim_val(v : ISVGRect) : HRESULT
    @lpVtbl.value.putref_anim_val.unsafe_as(Proc(ISVGRect, HRESULT)).call(v)
  end
  def get_anim_val(p : ISVGRect*) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(ISVGRect*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGAnimatedString
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_base_val(v : UInt8*) : HRESULT
    @lpVtbl.value.put_base_val.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_base_val(p : UInt8**) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_anim_val(p : UInt8**) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGAnimatedBoolean
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_base_val(v : Int16) : HRESULT
    @lpVtbl.value.put_base_val.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_base_val(p : Int16*) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_anim_val(v : Int16) : HRESULT
    @lpVtbl.value.put_anim_val.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_anim_val(p : Int16*) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGAnimatedTransformList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_base_val(v : ISVGTransformList) : HRESULT
    @lpVtbl.value.putref_base_val.unsafe_as(Proc(ISVGTransformList, HRESULT)).call(v)
  end
  def get_base_val(p : ISVGTransformList*) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(ISVGTransformList*, HRESULT)).call(p)
  end
  def putref_anim_val(v : ISVGTransformList) : HRESULT
    @lpVtbl.value.putref_anim_val.unsafe_as(Proc(ISVGTransformList, HRESULT)).call(v)
  end
  def get_anim_val(p : ISVGTransformList*) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(ISVGTransformList*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGAnimatedPreserveAspectRatio
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_base_val(v : ISVGPreserveAspectRatio) : HRESULT
    @lpVtbl.value.putref_base_val.unsafe_as(Proc(ISVGPreserveAspectRatio, HRESULT)).call(v)
  end
  def get_base_val(p : ISVGPreserveAspectRatio*) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(ISVGPreserveAspectRatio*, HRESULT)).call(p)
  end
  def putref_anim_val(v : ISVGPreserveAspectRatio) : HRESULT
    @lpVtbl.value.putref_anim_val.unsafe_as(Proc(ISVGPreserveAspectRatio, HRESULT)).call(v)
  end
  def get_anim_val(p : ISVGPreserveAspectRatio*) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(ISVGPreserveAspectRatio*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGStylable
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_class_name(p : ISVGAnimatedString*) : HRESULT
    @lpVtbl.value.get_class_name.unsafe_as(Proc(ISVGAnimatedString*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGLocatable
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_nearest_viewport_element(p : ISVGElement*) : HRESULT
    @lpVtbl.value.get_nearest_viewport_element.unsafe_as(Proc(ISVGElement*, HRESULT)).call(p)
  end
  def get_farthest_viewport_element(p : ISVGElement*) : HRESULT
    @lpVtbl.value.get_farthest_viewport_element.unsafe_as(Proc(ISVGElement*, HRESULT)).call(p)
  end
  def get_b_box(ppresult : ISVGRect*) : HRESULT
    @lpVtbl.value.get_b_box.unsafe_as(Proc(ISVGRect*, HRESULT)).call(ppresult)
  end
  def get_ctm(ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.get_ctm.unsafe_as(Proc(ISVGMatrix*, HRESULT)).call(ppresult)
  end
  def get_screen_ctm(ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.get_screen_ctm.unsafe_as(Proc(ISVGMatrix*, HRESULT)).call(ppresult)
  end
  def get_transform_to_element(pelement : ISVGElement, ppresult : ISVGMatrix*) : HRESULT
    @lpVtbl.value.get_transform_to_element.unsafe_as(Proc(ISVGElement, ISVGMatrix*, HRESULT)).call(pelement, ppresult)
  end
end
struct LibWin32::ISVGTransformable
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_transform(p : ISVGAnimatedTransformList*) : HRESULT
    @lpVtbl.value.get_transform.unsafe_as(Proc(ISVGAnimatedTransformList*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGTests
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_required_features(p : ISVGStringList*) : HRESULT
    @lpVtbl.value.get_required_features.unsafe_as(Proc(ISVGStringList*, HRESULT)).call(p)
  end
  def get_required_extensions(p : ISVGStringList*) : HRESULT
    @lpVtbl.value.get_required_extensions.unsafe_as(Proc(ISVGStringList*, HRESULT)).call(p)
  end
  def get_system_language(p : ISVGStringList*) : HRESULT
    @lpVtbl.value.get_system_language.unsafe_as(Proc(ISVGStringList*, HRESULT)).call(p)
  end
  def has_extension(extension : UInt8*, presult : Int16*) : HRESULT
    @lpVtbl.value.has_extension.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(extension, presult)
  end
end
struct LibWin32::ISVGLangSpace
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_xmllang(v : UInt8*) : HRESULT
    @lpVtbl.value.put_xmllang.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_xmllang(p : UInt8**) : HRESULT
    @lpVtbl.value.get_xmllang.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_xmlspace(v : UInt8*) : HRESULT
    @lpVtbl.value.put_xmlspace.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_xmlspace(p : UInt8**) : HRESULT
    @lpVtbl.value.get_xmlspace.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGExternalResourcesRequired
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_external_resources_required(p : ISVGAnimatedBoolean*) : HRESULT
    @lpVtbl.value.get_external_resources_required.unsafe_as(Proc(ISVGAnimatedBoolean*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGFitToViewBox
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_view_box(p : ISVGAnimatedRect*) : HRESULT
    @lpVtbl.value.get_view_box.unsafe_as(Proc(ISVGAnimatedRect*, HRESULT)).call(p)
  end
  def putref_preserve_aspect_ratio(v : ISVGAnimatedPreserveAspectRatio) : HRESULT
    @lpVtbl.value.putref_preserve_aspect_ratio.unsafe_as(Proc(ISVGAnimatedPreserveAspectRatio, HRESULT)).call(v)
  end
  def get_preserve_aspect_ratio(p : ISVGAnimatedPreserveAspectRatio*) : HRESULT
    @lpVtbl.value.get_preserve_aspect_ratio.unsafe_as(Proc(ISVGAnimatedPreserveAspectRatio*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGZoomAndPan
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_zoom_and_pan(p : Int16*) : HRESULT
    @lpVtbl.value.get_zoom_and_pan.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGURIReference
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_href(p : ISVGAnimatedString*) : HRESULT
    @lpVtbl.value.get_href.unsafe_as(Proc(ISVGAnimatedString*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGAnimatedAngle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_base_val(v : ISVGAngle) : HRESULT
    @lpVtbl.value.putref_base_val.unsafe_as(Proc(ISVGAngle, HRESULT)).call(v)
  end
  def get_base_val(p : ISVGAngle*) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(ISVGAngle*, HRESULT)).call(p)
  end
  def putref_anim_val(v : ISVGAngle) : HRESULT
    @lpVtbl.value.putref_anim_val.unsafe_as(Proc(ISVGAngle, HRESULT)).call(v)
  end
  def get_anim_val(p : ISVGAngle*) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(ISVGAngle*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGTransformList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_number_of_items(v : Int32) : HRESULT
    @lpVtbl.value.put_number_of_items.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_number_of_items(p : Int32*) : HRESULT
    @lpVtbl.value.get_number_of_items.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def clear : HRESULT
    @lpVtbl.value.clear.unsafe_as(Proc(HRESULT)).call
  end
  def initialize(newitem : ISVGTransform, ppresult : ISVGTransform*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(ISVGTransform, ISVGTransform*, HRESULT)).call(newitem, ppresult)
  end
  def get_item(index : Int32, ppresult : ISVGTransform*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(Int32, ISVGTransform*, HRESULT)).call(index, ppresult)
  end
  def insert_item_before(newitem : ISVGTransform, index : Int32, ppresult : ISVGTransform*) : HRESULT
    @lpVtbl.value.insert_item_before.unsafe_as(Proc(ISVGTransform, Int32, ISVGTransform*, HRESULT)).call(newitem, index, ppresult)
  end
  def replace_item(newitem : ISVGTransform, index : Int32, ppresult : ISVGTransform*) : HRESULT
    @lpVtbl.value.replace_item.unsafe_as(Proc(ISVGTransform, Int32, ISVGTransform*, HRESULT)).call(newitem, index, ppresult)
  end
  def remove_item(index : Int32, ppresult : ISVGTransform*) : HRESULT
    @lpVtbl.value.remove_item.unsafe_as(Proc(Int32, ISVGTransform*, HRESULT)).call(index, ppresult)
  end
  def append_item(newitem : ISVGTransform, ppresult : ISVGTransform*) : HRESULT
    @lpVtbl.value.append_item.unsafe_as(Proc(ISVGTransform, ISVGTransform*, HRESULT)).call(newitem, ppresult)
  end
  def create_svg_transform_from_matrix(newitem : ISVGMatrix, ppresult : ISVGTransform*) : HRESULT
    @lpVtbl.value.create_svg_transform_from_matrix.unsafe_as(Proc(ISVGMatrix, ISVGTransform*, HRESULT)).call(newitem, ppresult)
  end
  def consolidate(ppresult : ISVGTransform*) : HRESULT
    @lpVtbl.value.consolidate.unsafe_as(Proc(ISVGTransform*, HRESULT)).call(ppresult)
  end
end
struct LibWin32::ISVGAnimatedEnumeration
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_base_val(v : UInt16) : HRESULT
    @lpVtbl.value.put_base_val.unsafe_as(Proc(UInt16, HRESULT)).call(v)
  end
  def get_base_val(p : UInt16*) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_anim_val(v : UInt16) : HRESULT
    @lpVtbl.value.put_anim_val.unsafe_as(Proc(UInt16, HRESULT)).call(v)
  end
  def get_anim_val(p : UInt16*) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGAnimatedInteger
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_base_val(v : Int32) : HRESULT
    @lpVtbl.value.put_base_val.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_base_val(p : Int32*) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_anim_val(v : Int32) : HRESULT
    @lpVtbl.value.put_anim_val.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_anim_val(p : Int32*) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGLength
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_unit_type(v : Int16) : HRESULT
    @lpVtbl.value.put_unit_type.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_unit_type(p : Int16*) : HRESULT
    @lpVtbl.value.get_unit_type.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_value(v : Float32) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_value(p : Float32*) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_value_in_specified_units(v : Float32) : HRESULT
    @lpVtbl.value.put_value_in_specified_units.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_value_in_specified_units(p : Float32*) : HRESULT
    @lpVtbl.value.get_value_in_specified_units.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_value_as_string(v : UInt8*) : HRESULT
    @lpVtbl.value.put_value_as_string.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_value_as_string(p : UInt8**) : HRESULT
    @lpVtbl.value.get_value_as_string.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def new_value_specified_units(unittype : Int16, valueinspecifiedunits : Float32) : HRESULT
    @lpVtbl.value.new_value_specified_units.unsafe_as(Proc(Int16, Float32, HRESULT)).call(unittype, valueinspecifiedunits)
  end
  def convert_to_specified_units(unittype : Int16) : HRESULT
    @lpVtbl.value.convert_to_specified_units.unsafe_as(Proc(Int16, HRESULT)).call(unittype)
  end
end
struct LibWin32::ISVGAnimatedLength
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_base_val(v : ISVGLength) : HRESULT
    @lpVtbl.value.putref_base_val.unsafe_as(Proc(ISVGLength, HRESULT)).call(v)
  end
  def get_base_val(p : ISVGLength*) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(ISVGLength*, HRESULT)).call(p)
  end
  def putref_anim_val(v : ISVGLength) : HRESULT
    @lpVtbl.value.putref_anim_val.unsafe_as(Proc(ISVGLength, HRESULT)).call(v)
  end
  def get_anim_val(p : ISVGLength*) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(ISVGLength*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGLengthList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_number_of_items(v : Int32) : HRESULT
    @lpVtbl.value.put_number_of_items.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_number_of_items(p : Int32*) : HRESULT
    @lpVtbl.value.get_number_of_items.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def clear : HRESULT
    @lpVtbl.value.clear.unsafe_as(Proc(HRESULT)).call
  end
  def initialize(newitem : ISVGLength, ppresult : ISVGLength*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(ISVGLength, ISVGLength*, HRESULT)).call(newitem, ppresult)
  end
  def get_item(index : Int32, ppresult : ISVGLength*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(Int32, ISVGLength*, HRESULT)).call(index, ppresult)
  end
  def insert_item_before(newitem : ISVGLength, index : Int32, ppresult : ISVGLength*) : HRESULT
    @lpVtbl.value.insert_item_before.unsafe_as(Proc(ISVGLength, Int32, ISVGLength*, HRESULT)).call(newitem, index, ppresult)
  end
  def replace_item(newitem : ISVGLength, index : Int32, ppresult : ISVGLength*) : HRESULT
    @lpVtbl.value.replace_item.unsafe_as(Proc(ISVGLength, Int32, ISVGLength*, HRESULT)).call(newitem, index, ppresult)
  end
  def remove_item(index : Int32, ppresult : ISVGLength*) : HRESULT
    @lpVtbl.value.remove_item.unsafe_as(Proc(Int32, ISVGLength*, HRESULT)).call(index, ppresult)
  end
  def append_item(newitem : ISVGLength, ppresult : ISVGLength*) : HRESULT
    @lpVtbl.value.append_item.unsafe_as(Proc(ISVGLength, ISVGLength*, HRESULT)).call(newitem, ppresult)
  end
end
struct LibWin32::ISVGAnimatedLengthList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_base_val(v : ISVGLengthList) : HRESULT
    @lpVtbl.value.putref_base_val.unsafe_as(Proc(ISVGLengthList, HRESULT)).call(v)
  end
  def get_base_val(p : ISVGLengthList*) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(ISVGLengthList*, HRESULT)).call(p)
  end
  def putref_anim_val(v : ISVGLengthList) : HRESULT
    @lpVtbl.value.putref_anim_val.unsafe_as(Proc(ISVGLengthList, HRESULT)).call(v)
  end
  def get_anim_val(p : ISVGLengthList*) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(ISVGLengthList*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGNumber
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_value(v : Float32) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_value(p : Float32*) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGAnimatedNumber
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_base_val(v : Float32) : HRESULT
    @lpVtbl.value.put_base_val.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_base_val(p : Float32*) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_anim_val(v : Float32) : HRESULT
    @lpVtbl.value.put_anim_val.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_anim_val(p : Float32*) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGNumberList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_number_of_items(v : Int32) : HRESULT
    @lpVtbl.value.put_number_of_items.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_number_of_items(p : Int32*) : HRESULT
    @lpVtbl.value.get_number_of_items.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def clear : HRESULT
    @lpVtbl.value.clear.unsafe_as(Proc(HRESULT)).call
  end
  def initialize(newitem : ISVGNumber, ppresult : ISVGNumber*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(ISVGNumber, ISVGNumber*, HRESULT)).call(newitem, ppresult)
  end
  def get_item(index : Int32, ppresult : ISVGNumber*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(Int32, ISVGNumber*, HRESULT)).call(index, ppresult)
  end
  def insert_item_before(newitem : ISVGNumber, index : Int32, ppresult : ISVGNumber*) : HRESULT
    @lpVtbl.value.insert_item_before.unsafe_as(Proc(ISVGNumber, Int32, ISVGNumber*, HRESULT)).call(newitem, index, ppresult)
  end
  def replace_item(newitem : ISVGNumber, index : Int32, ppresult : ISVGNumber*) : HRESULT
    @lpVtbl.value.replace_item.unsafe_as(Proc(ISVGNumber, Int32, ISVGNumber*, HRESULT)).call(newitem, index, ppresult)
  end
  def remove_item(index : Int32, ppresult : ISVGNumber*) : HRESULT
    @lpVtbl.value.remove_item.unsafe_as(Proc(Int32, ISVGNumber*, HRESULT)).call(index, ppresult)
  end
  def append_item(newitem : ISVGNumber, ppresult : ISVGNumber*) : HRESULT
    @lpVtbl.value.append_item.unsafe_as(Proc(ISVGNumber, ISVGNumber*, HRESULT)).call(newitem, ppresult)
  end
end
struct LibWin32::ISVGAnimatedNumberList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_base_val(v : ISVGNumberList) : HRESULT
    @lpVtbl.value.putref_base_val.unsafe_as(Proc(ISVGNumberList, HRESULT)).call(v)
  end
  def get_base_val(p : ISVGNumberList*) : HRESULT
    @lpVtbl.value.get_base_val.unsafe_as(Proc(ISVGNumberList*, HRESULT)).call(p)
  end
  def putref_anim_val(v : ISVGNumberList) : HRESULT
    @lpVtbl.value.putref_anim_val.unsafe_as(Proc(ISVGNumberList, HRESULT)).call(v)
  end
  def get_anim_val(p : ISVGNumberList*) : HRESULT
    @lpVtbl.value.get_anim_val.unsafe_as(Proc(ISVGNumberList*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGClipPathElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_clip_path_units(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_clip_path_units.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_clip_path_units(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_clip_path_units.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGClipPathElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGDocument
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_root_element(p : ISVGSVGElement*) : HRESULT
    @lpVtbl.value.get_root_element.unsafe_as(Proc(ISVGSVGElement*, HRESULT)).call(p)
  end
end
struct LibWin32::IGetSVGDocument
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_svg_document(ppsvgdocument : IDispatch*) : HRESULT
    @lpVtbl.value.get_svg_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppsvgdocument)
  end
end
struct LibWin32::DispSVGElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IICCSVGColor
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGPaint
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGPatternElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_pattern_units(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_pattern_units.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_pattern_units(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_pattern_units.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
  def putref_pattern_content_units(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_pattern_content_units.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_pattern_content_units(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_pattern_content_units.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
  def putref_pattern_transform(v : ISVGAnimatedTransformList) : HRESULT
    @lpVtbl.value.putref_pattern_transform.unsafe_as(Proc(ISVGAnimatedTransformList, HRESULT)).call(v)
  end
  def get_pattern_transform(p : ISVGAnimatedTransformList*) : HRESULT
    @lpVtbl.value.get_pattern_transform.unsafe_as(Proc(ISVGAnimatedTransformList*, HRESULT)).call(p)
  end
  def putref_x(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_x.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_x(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_y(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_y.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_y(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_width(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_width.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_width(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_height(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_height.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_height(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGPatternElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGPathSeg
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_path_seg_type(v : Int16) : HRESULT
    @lpVtbl.value.put_path_seg_type.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_path_seg_type(p : Int16*) : HRESULT
    @lpVtbl.value.get_path_seg_type.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_path_seg_type_as_letter(p : UInt8**) : HRESULT
    @lpVtbl.value.get_path_seg_type_as_letter.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegArcAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_r1(v : Float32) : HRESULT
    @lpVtbl.value.put_r1.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_r1(p : Float32*) : HRESULT
    @lpVtbl.value.get_r1.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_r2(v : Float32) : HRESULT
    @lpVtbl.value.put_r2.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_r2(p : Float32*) : HRESULT
    @lpVtbl.value.get_r2.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_angle(v : Float32) : HRESULT
    @lpVtbl.value.put_angle.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_angle(p : Float32*) : HRESULT
    @lpVtbl.value.get_angle.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_large_arc_flag(v : Int16) : HRESULT
    @lpVtbl.value.put_large_arc_flag.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_large_arc_flag(p : Int16*) : HRESULT
    @lpVtbl.value.get_large_arc_flag.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_sweep_flag(v : Int16) : HRESULT
    @lpVtbl.value.put_sweep_flag.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_sweep_flag(p : Int16*) : HRESULT
    @lpVtbl.value.get_sweep_flag.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegArcRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_r1(v : Float32) : HRESULT
    @lpVtbl.value.put_r1.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_r1(p : Float32*) : HRESULT
    @lpVtbl.value.get_r1.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_r2(v : Float32) : HRESULT
    @lpVtbl.value.put_r2.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_r2(p : Float32*) : HRESULT
    @lpVtbl.value.get_r2.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_angle(v : Float32) : HRESULT
    @lpVtbl.value.put_angle.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_angle(p : Float32*) : HRESULT
    @lpVtbl.value.get_angle.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_large_arc_flag(v : Int16) : HRESULT
    @lpVtbl.value.put_large_arc_flag.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_large_arc_flag(p : Int16*) : HRESULT
    @lpVtbl.value.get_large_arc_flag.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_sweep_flag(v : Int16) : HRESULT
    @lpVtbl.value.put_sweep_flag.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_sweep_flag(p : Int16*) : HRESULT
    @lpVtbl.value.get_sweep_flag.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegClosePath
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGPathSegMovetoAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegMovetoRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegLinetoAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegLinetoRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegCurvetoCubicAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_x1(v : Float32) : HRESULT
    @lpVtbl.value.put_x1.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x1(p : Float32*) : HRESULT
    @lpVtbl.value.get_x1.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y1(v : Float32) : HRESULT
    @lpVtbl.value.put_y1.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y1(p : Float32*) : HRESULT
    @lpVtbl.value.get_y1.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_x2(v : Float32) : HRESULT
    @lpVtbl.value.put_x2.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x2(p : Float32*) : HRESULT
    @lpVtbl.value.get_x2.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y2(v : Float32) : HRESULT
    @lpVtbl.value.put_y2.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y2(p : Float32*) : HRESULT
    @lpVtbl.value.get_y2.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegCurvetoCubicRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_x1(v : Float32) : HRESULT
    @lpVtbl.value.put_x1.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x1(p : Float32*) : HRESULT
    @lpVtbl.value.get_x1.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y1(v : Float32) : HRESULT
    @lpVtbl.value.put_y1.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y1(p : Float32*) : HRESULT
    @lpVtbl.value.get_y1.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_x2(v : Float32) : HRESULT
    @lpVtbl.value.put_x2.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x2(p : Float32*) : HRESULT
    @lpVtbl.value.get_x2.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y2(v : Float32) : HRESULT
    @lpVtbl.value.put_y2.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y2(p : Float32*) : HRESULT
    @lpVtbl.value.get_y2.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegCurvetoCubicSmoothAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_x2(v : Float32) : HRESULT
    @lpVtbl.value.put_x2.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x2(p : Float32*) : HRESULT
    @lpVtbl.value.get_x2.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y2(v : Float32) : HRESULT
    @lpVtbl.value.put_y2.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y2(p : Float32*) : HRESULT
    @lpVtbl.value.get_y2.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegCurvetoCubicSmoothRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_x2(v : Float32) : HRESULT
    @lpVtbl.value.put_x2.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x2(p : Float32*) : HRESULT
    @lpVtbl.value.get_x2.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y2(v : Float32) : HRESULT
    @lpVtbl.value.put_y2.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y2(p : Float32*) : HRESULT
    @lpVtbl.value.get_y2.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegCurvetoQuadraticAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_x1(v : Float32) : HRESULT
    @lpVtbl.value.put_x1.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x1(p : Float32*) : HRESULT
    @lpVtbl.value.get_x1.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y1(v : Float32) : HRESULT
    @lpVtbl.value.put_y1.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y1(p : Float32*) : HRESULT
    @lpVtbl.value.get_y1.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegCurvetoQuadraticRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_x1(v : Float32) : HRESULT
    @lpVtbl.value.put_x1.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x1(p : Float32*) : HRESULT
    @lpVtbl.value.get_x1.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y1(v : Float32) : HRESULT
    @lpVtbl.value.put_y1.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y1(p : Float32*) : HRESULT
    @lpVtbl.value.get_y1.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegCurvetoQuadraticSmoothAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegCurvetoQuadraticSmoothRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegLinetoHorizontalAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegLinetoHorizontalRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegLinetoVerticalAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathSegLinetoVerticalRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGPathSegArcAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegArcRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegClosePath
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegMovetoAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegMovetoRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegLinetoAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegLinetoRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegCurvetoCubicAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegCurvetoCubicRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegCurvetoCubicSmoothAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegCurvetoCubicSmoothRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegCurvetoQuadraticAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegCurvetoQuadraticRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegCurvetoQuadraticSmoothAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegCurvetoQuadraticSmoothRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegLinetoHorizontalAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegLinetoHorizontalRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegLinetoVerticalAbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPathSegLinetoVerticalRel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGPathSegList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_number_of_items(v : Int32) : HRESULT
    @lpVtbl.value.put_number_of_items.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_number_of_items(p : Int32*) : HRESULT
    @lpVtbl.value.get_number_of_items.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def clear : HRESULT
    @lpVtbl.value.clear.unsafe_as(Proc(HRESULT)).call
  end
  def initialize(newitem : ISVGPathSeg, ppresult : ISVGPathSeg*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(ISVGPathSeg, ISVGPathSeg*, HRESULT)).call(newitem, ppresult)
  end
  def get_item(index : Int32, ppresult : ISVGPathSeg*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(Int32, ISVGPathSeg*, HRESULT)).call(index, ppresult)
  end
  def insert_item_before(newitem : ISVGPathSeg, index : Int32, ppresult : ISVGPathSeg*) : HRESULT
    @lpVtbl.value.insert_item_before.unsafe_as(Proc(ISVGPathSeg, Int32, ISVGPathSeg*, HRESULT)).call(newitem, index, ppresult)
  end
  def replace_item(newitem : ISVGPathSeg, index : Int32, ppresult : ISVGPathSeg*) : HRESULT
    @lpVtbl.value.replace_item.unsafe_as(Proc(ISVGPathSeg, Int32, ISVGPathSeg*, HRESULT)).call(newitem, index, ppresult)
  end
  def remove_item(index : Int32, ppresult : ISVGPathSeg*) : HRESULT
    @lpVtbl.value.remove_item.unsafe_as(Proc(Int32, ISVGPathSeg*, HRESULT)).call(index, ppresult)
  end
  def append_item(newitem : ISVGPathSeg, ppresult : ISVGPathSeg*) : HRESULT
    @lpVtbl.value.append_item.unsafe_as(Proc(ISVGPathSeg, ISVGPathSeg*, HRESULT)).call(newitem, ppresult)
  end
end
struct LibWin32::ISVGPoint
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_x(v : Float32) : HRESULT
    @lpVtbl.value.put_x.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_x(p : Float32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_y(v : Float32) : HRESULT
    @lpVtbl.value.put_y.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_y(p : Float32*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def matrix_transform(pmatrix : ISVGMatrix, ppresult : ISVGPoint*) : HRESULT
    @lpVtbl.value.matrix_transform.unsafe_as(Proc(ISVGMatrix, ISVGPoint*, HRESULT)).call(pmatrix, ppresult)
  end
end
struct LibWin32::ISVGPointList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_number_of_items(v : Int32) : HRESULT
    @lpVtbl.value.put_number_of_items.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_number_of_items(p : Int32*) : HRESULT
    @lpVtbl.value.get_number_of_items.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def clear : HRESULT
    @lpVtbl.value.clear.unsafe_as(Proc(HRESULT)).call
  end
  def initialize(pnewitem : ISVGPoint, ppresult : ISVGPoint*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(ISVGPoint, ISVGPoint*, HRESULT)).call(pnewitem, ppresult)
  end
  def get_item(index : Int32, ppresult : ISVGPoint*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(Int32, ISVGPoint*, HRESULT)).call(index, ppresult)
  end
  def insert_item_before(pnewitem : ISVGPoint, index : Int32, ppresult : ISVGPoint*) : HRESULT
    @lpVtbl.value.insert_item_before.unsafe_as(Proc(ISVGPoint, Int32, ISVGPoint*, HRESULT)).call(pnewitem, index, ppresult)
  end
  def replace_item(pnewitem : ISVGPoint, index : Int32, ppresult : ISVGPoint*) : HRESULT
    @lpVtbl.value.replace_item.unsafe_as(Proc(ISVGPoint, Int32, ISVGPoint*, HRESULT)).call(pnewitem, index, ppresult)
  end
  def remove_item(index : Int32, ppresult : ISVGPoint*) : HRESULT
    @lpVtbl.value.remove_item.unsafe_as(Proc(Int32, ISVGPoint*, HRESULT)).call(index, ppresult)
  end
  def append_item(pnewitem : ISVGPoint, ppresult : ISVGPoint*) : HRESULT
    @lpVtbl.value.append_item.unsafe_as(Proc(ISVGPoint, ISVGPoint*, HRESULT)).call(pnewitem, ppresult)
  end
end
struct LibWin32::ISVGViewSpec
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGTransform
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_type(v : Int16) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_type(p : Int16*) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def putref_matrix(v : ISVGMatrix) : HRESULT
    @lpVtbl.value.putref_matrix.unsafe_as(Proc(ISVGMatrix, HRESULT)).call(v)
  end
  def get_matrix(p : ISVGMatrix*) : HRESULT
    @lpVtbl.value.get_matrix.unsafe_as(Proc(ISVGMatrix*, HRESULT)).call(p)
  end
  def put_angle(v : Float32) : HRESULT
    @lpVtbl.value.put_angle.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_angle(p : Float32*) : HRESULT
    @lpVtbl.value.get_angle.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def set_matrix(matrix : ISVGMatrix) : HRESULT
    @lpVtbl.value.set_matrix.unsafe_as(Proc(ISVGMatrix, HRESULT)).call(matrix)
  end
  def set_translate(tx : Float32, ty : Float32) : HRESULT
    @lpVtbl.value.set_translate.unsafe_as(Proc(Float32, Float32, HRESULT)).call(tx, ty)
  end
  def set_scale(sx : Float32, sy : Float32) : HRESULT
    @lpVtbl.value.set_scale.unsafe_as(Proc(Float32, Float32, HRESULT)).call(sx, sy)
  end
  def set_rotate(angle : Float32, cx : Float32, cy : Float32) : HRESULT
    @lpVtbl.value.set_rotate.unsafe_as(Proc(Float32, Float32, Float32, HRESULT)).call(angle, cx, cy)
  end
  def set_skew_x(angle : Float32) : HRESULT
    @lpVtbl.value.set_skew_x.unsafe_as(Proc(Float32, HRESULT)).call(angle)
  end
  def set_skew_y(angle : Float32) : HRESULT
    @lpVtbl.value.set_skew_y.unsafe_as(Proc(Float32, HRESULT)).call(angle)
  end
end
struct LibWin32::DispSVGSVGElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGElementInstance
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_corresponding_element(p : ISVGElement*) : HRESULT
    @lpVtbl.value.get_corresponding_element.unsafe_as(Proc(ISVGElement*, HRESULT)).call(p)
  end
  def get_corresponding_use_element(p : ISVGUseElement*) : HRESULT
    @lpVtbl.value.get_corresponding_use_element.unsafe_as(Proc(ISVGUseElement*, HRESULT)).call(p)
  end
  def get_parent_node(p : ISVGElementInstance*) : HRESULT
    @lpVtbl.value.get_parent_node.unsafe_as(Proc(ISVGElementInstance*, HRESULT)).call(p)
  end
  def get_child_nodes(p : ISVGElementInstanceList*) : HRESULT
    @lpVtbl.value.get_child_nodes.unsafe_as(Proc(ISVGElementInstanceList*, HRESULT)).call(p)
  end
  def get_first_child(p : ISVGElementInstance*) : HRESULT
    @lpVtbl.value.get_first_child.unsafe_as(Proc(ISVGElementInstance*, HRESULT)).call(p)
  end
  def get_last_child(p : ISVGElementInstance*) : HRESULT
    @lpVtbl.value.get_last_child.unsafe_as(Proc(ISVGElementInstance*, HRESULT)).call(p)
  end
  def get_previous_sibling(p : ISVGElementInstance*) : HRESULT
    @lpVtbl.value.get_previous_sibling.unsafe_as(Proc(ISVGElementInstance*, HRESULT)).call(p)
  end
  def get_next_sibling(p : ISVGElementInstance*) : HRESULT
    @lpVtbl.value.get_next_sibling.unsafe_as(Proc(ISVGElementInstance*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGUseElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_x(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_x.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_x(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_y(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_y.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_y(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_width(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_width.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_width(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_height(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_height.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_height(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_instance_root(v : ISVGElementInstance) : HRESULT
    @lpVtbl.value.putref_instance_root.unsafe_as(Proc(ISVGElementInstance, HRESULT)).call(v)
  end
  def get_instance_root(p : ISVGElementInstance*) : HRESULT
    @lpVtbl.value.get_instance_root.unsafe_as(Proc(ISVGElementInstance*, HRESULT)).call(p)
  end
  def putref_animated_instance_root(v : ISVGElementInstance) : HRESULT
    @lpVtbl.value.putref_animated_instance_root.unsafe_as(Proc(ISVGElementInstance, HRESULT)).call(v)
  end
  def get_animated_instance_root(p : ISVGElementInstance*) : HRESULT
    @lpVtbl.value.get_animated_instance_root.unsafe_as(Proc(ISVGElementInstance*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGUseElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLStyleSheetRulesAppliedCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def item(index : Int32, pphtmlstylesheetrule : IHTMLStyleSheetRule*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IHTMLStyleSheetRule*, HRESULT)).call(index, pphtmlstylesheetrule)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def property_applied_by(name : UInt8*, pprule : IHTMLStyleSheetRule*) : HRESULT
    @lpVtbl.value.property_applied_by.unsafe_as(Proc(UInt8*, IHTMLStyleSheetRule*, HRESULT)).call(name, pprule)
  end
  def property_applied_trace(name : UInt8*, index : Int32, pprule : IHTMLStyleSheetRule*) : HRESULT
    @lpVtbl.value.property_applied_trace.unsafe_as(Proc(UInt8*, Int32, IHTMLStyleSheetRule*, HRESULT)).call(name, index, pprule)
  end
  def property_applied_trace_length(name : UInt8*, plength : Int32*) : HRESULT
    @lpVtbl.value.property_applied_trace_length.unsafe_as(Proc(UInt8*, Int32*, HRESULT)).call(name, plength)
  end
end
struct LibWin32::IRulesApplied
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_element(p : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(p)
  end
  def get_inline_styles(p : IHTMLStyle*) : HRESULT
    @lpVtbl.value.get_inline_styles.unsafe_as(Proc(IHTMLStyle*, HRESULT)).call(p)
  end
  def get_applied_rules(p : IHTMLStyleSheetRulesAppliedCollection*) : HRESULT
    @lpVtbl.value.get_applied_rules.unsafe_as(Proc(IHTMLStyleSheetRulesAppliedCollection*, HRESULT)).call(p)
  end
  def property_is_inline(name : UInt8*, p : Int16*) : HRESULT
    @lpVtbl.value.property_is_inline.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(name, p)
  end
  def property_is_inheritable(name : UInt8*, p : Int16*) : HRESULT
    @lpVtbl.value.property_is_inheritable.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(name, p)
  end
  def has_inheritable_property(p : Int16*) : HRESULT
    @lpVtbl.value.has_inheritable_property.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLStyleSheetRulesAppliedCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispRulesApplied
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispRulesAppliedCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLW3CComputedStyle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGAnimatedPoints
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_points(v : ISVGPointList) : HRESULT
    @lpVtbl.value.putref_points.unsafe_as(Proc(ISVGPointList, HRESULT)).call(v)
  end
  def get_points(p : ISVGPointList*) : HRESULT
    @lpVtbl.value.get_points.unsafe_as(Proc(ISVGPointList*, HRESULT)).call(p)
  end
  def putref_animated_points(v : ISVGPointList) : HRESULT
    @lpVtbl.value.putref_animated_points.unsafe_as(Proc(ISVGPointList, HRESULT)).call(v)
  end
  def get_animated_points(p : ISVGPointList*) : HRESULT
    @lpVtbl.value.get_animated_points.unsafe_as(Proc(ISVGPointList*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGCircleElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_cx(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_cx.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_cx(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_cx.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_cy(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_cy.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_cy(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_cy.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_r(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_r.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_r(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_r.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGEllipseElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_cx(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_cx.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_cx(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_cx.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_cy(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_cy.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_cy(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_cy.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_rx(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_rx.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_rx(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_rx.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_ry(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_ry.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_ry(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_ry.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGLineElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_x1(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_x1.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_x1(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_x1.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_y1(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_y1.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_y1(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_y1.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_x2(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_x2.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_x2(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_x2.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_y2(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_y2.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_y2(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_y2.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGRectElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_x(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_x.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_x(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_y(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_y.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_y(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_width(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_width.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_width(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_height(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_height.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_height(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_rx(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_rx.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_rx(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_rx.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_ry(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_ry.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_ry(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_ry.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPolygonElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGPolylineElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGCircleElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGEllipseElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGLineElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGRectElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPolygonElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGPolylineElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGGElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGGElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGSymbolElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGSymbolElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGDefsElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGDefsElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGAnimatedPathData
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_path_seg_list(v : ISVGPathSegList) : HRESULT
    @lpVtbl.value.putref_path_seg_list.unsafe_as(Proc(ISVGPathSegList, HRESULT)).call(v)
  end
  def get_path_seg_list(p : ISVGPathSegList*) : HRESULT
    @lpVtbl.value.get_path_seg_list.unsafe_as(Proc(ISVGPathSegList*, HRESULT)).call(p)
  end
  def putref_normalized_path_seg_list(v : ISVGPathSegList) : HRESULT
    @lpVtbl.value.putref_normalized_path_seg_list.unsafe_as(Proc(ISVGPathSegList, HRESULT)).call(v)
  end
  def get_normalized_path_seg_list(p : ISVGPathSegList*) : HRESULT
    @lpVtbl.value.get_normalized_path_seg_list.unsafe_as(Proc(ISVGPathSegList*, HRESULT)).call(p)
  end
  def putref_animated_path_seg_list(v : ISVGPathSegList) : HRESULT
    @lpVtbl.value.putref_animated_path_seg_list.unsafe_as(Proc(ISVGPathSegList, HRESULT)).call(v)
  end
  def get_animated_path_seg_list(p : ISVGPathSegList*) : HRESULT
    @lpVtbl.value.get_animated_path_seg_list.unsafe_as(Proc(ISVGPathSegList*, HRESULT)).call(p)
  end
  def putref_animated_normalized_path_seg_list(v : ISVGPathSegList) : HRESULT
    @lpVtbl.value.putref_animated_normalized_path_seg_list.unsafe_as(Proc(ISVGPathSegList, HRESULT)).call(v)
  end
  def get_animated_normalized_path_seg_list(p : ISVGPathSegList*) : HRESULT
    @lpVtbl.value.get_animated_normalized_path_seg_list.unsafe_as(Proc(ISVGPathSegList*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGPathElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_path_length(v : ISVGAnimatedNumber) : HRESULT
    @lpVtbl.value.putref_path_length.unsafe_as(Proc(ISVGAnimatedNumber, HRESULT)).call(v)
  end
  def get_path_length(p : ISVGAnimatedNumber*) : HRESULT
    @lpVtbl.value.get_path_length.unsafe_as(Proc(ISVGAnimatedNumber*, HRESULT)).call(p)
  end
  def get_total_length(pfltresult : Float32*) : HRESULT
    @lpVtbl.value.get_total_length.unsafe_as(Proc(Float32*, HRESULT)).call(pfltresult)
  end
  def get_point_at_length(fltdistance : Float32, pppointresult : ISVGPoint*) : HRESULT
    @lpVtbl.value.get_point_at_length.unsafe_as(Proc(Float32, ISVGPoint*, HRESULT)).call(fltdistance, pppointresult)
  end
  def get_path_seg_at_length(fltdistance : Float32, plresult : Int32*) : HRESULT
    @lpVtbl.value.get_path_seg_at_length.unsafe_as(Proc(Float32, Int32*, HRESULT)).call(fltdistance, plresult)
  end
  def create_svg_path_seg_close_path(ppresult : ISVGPathSegClosePath*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_close_path.unsafe_as(Proc(ISVGPathSegClosePath*, HRESULT)).call(ppresult)
  end
  def create_svg_path_seg_moveto_abs(x : Float32, y : Float32, ppresult : ISVGPathSegMovetoAbs*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_moveto_abs.unsafe_as(Proc(Float32, Float32, ISVGPathSegMovetoAbs*, HRESULT)).call(x, y, ppresult)
  end
  def create_svg_path_seg_moveto_rel(x : Float32, y : Float32, ppresult : ISVGPathSegMovetoRel*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_moveto_rel.unsafe_as(Proc(Float32, Float32, ISVGPathSegMovetoRel*, HRESULT)).call(x, y, ppresult)
  end
  def create_svg_path_seg_lineto_abs(x : Float32, y : Float32, ppresult : ISVGPathSegLinetoAbs*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_lineto_abs.unsafe_as(Proc(Float32, Float32, ISVGPathSegLinetoAbs*, HRESULT)).call(x, y, ppresult)
  end
  def create_svg_path_seg_lineto_rel(x : Float32, y : Float32, ppresult : ISVGPathSegLinetoRel*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_lineto_rel.unsafe_as(Proc(Float32, Float32, ISVGPathSegLinetoRel*, HRESULT)).call(x, y, ppresult)
  end
  def create_svg_path_seg_curveto_cubic_abs(x : Float32, y : Float32, x1 : Float32, y1 : Float32, x2 : Float32, y2 : Float32, ppresult : ISVGPathSegCurvetoCubicAbs*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_curveto_cubic_abs.unsafe_as(Proc(Float32, Float32, Float32, Float32, Float32, Float32, ISVGPathSegCurvetoCubicAbs*, HRESULT)).call(x, y, x1, y1, x2, y2, ppresult)
  end
  def create_svg_path_seg_curveto_cubic_rel(x : Float32, y : Float32, x1 : Float32, y1 : Float32, x2 : Float32, y2 : Float32, ppresult : ISVGPathSegCurvetoCubicRel*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_curveto_cubic_rel.unsafe_as(Proc(Float32, Float32, Float32, Float32, Float32, Float32, ISVGPathSegCurvetoCubicRel*, HRESULT)).call(x, y, x1, y1, x2, y2, ppresult)
  end
  def create_svg_path_seg_curveto_quadratic_abs(x : Float32, y : Float32, x1 : Float32, y1 : Float32, ppresult : ISVGPathSegCurvetoQuadraticAbs*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_curveto_quadratic_abs.unsafe_as(Proc(Float32, Float32, Float32, Float32, ISVGPathSegCurvetoQuadraticAbs*, HRESULT)).call(x, y, x1, y1, ppresult)
  end
  def create_svg_path_seg_curveto_quadratic_rel(x : Float32, y : Float32, x1 : Float32, y1 : Float32, ppresult : ISVGPathSegCurvetoQuadraticRel*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_curveto_quadratic_rel.unsafe_as(Proc(Float32, Float32, Float32, Float32, ISVGPathSegCurvetoQuadraticRel*, HRESULT)).call(x, y, x1, y1, ppresult)
  end
  def create_svg_path_seg_arc_abs(x : Float32, y : Float32, r1 : Float32, r2 : Float32, angle : Float32, largearcflag : Int16, sweepflag : Int16, ppresult : ISVGPathSegArcAbs*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_arc_abs.unsafe_as(Proc(Float32, Float32, Float32, Float32, Float32, Int16, Int16, ISVGPathSegArcAbs*, HRESULT)).call(x, y, r1, r2, angle, largearcflag, sweepflag, ppresult)
  end
  def create_svg_path_seg_arc_rel(x : Float32, y : Float32, r1 : Float32, r2 : Float32, angle : Float32, largearcflag : Int16, sweepflag : Int16, ppresult : ISVGPathSegArcRel*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_arc_rel.unsafe_as(Proc(Float32, Float32, Float32, Float32, Float32, Int16, Int16, ISVGPathSegArcRel*, HRESULT)).call(x, y, r1, r2, angle, largearcflag, sweepflag, ppresult)
  end
  def create_svg_path_seg_lineto_horizontal_abs(x : Float32, ppresult : ISVGPathSegLinetoHorizontalAbs*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_lineto_horizontal_abs.unsafe_as(Proc(Float32, ISVGPathSegLinetoHorizontalAbs*, HRESULT)).call(x, ppresult)
  end
  def create_svg_path_seg_lineto_horizontal_rel(x : Float32, ppresult : ISVGPathSegLinetoHorizontalRel*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_lineto_horizontal_rel.unsafe_as(Proc(Float32, ISVGPathSegLinetoHorizontalRel*, HRESULT)).call(x, ppresult)
  end
  def create_svg_path_seg_lineto_vertical_abs(y : Float32, ppresult : ISVGPathSegLinetoVerticalAbs*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_lineto_vertical_abs.unsafe_as(Proc(Float32, ISVGPathSegLinetoVerticalAbs*, HRESULT)).call(y, ppresult)
  end
  def create_svg_path_seg_lineto_vertical_rel(y : Float32, ppresult : ISVGPathSegLinetoVerticalRel*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_lineto_vertical_rel.unsafe_as(Proc(Float32, ISVGPathSegLinetoVerticalRel*, HRESULT)).call(y, ppresult)
  end
  def create_svg_path_seg_curveto_cubic_smooth_abs(x : Float32, y : Float32, x2 : Float32, y2 : Float32, ppresult : ISVGPathSegCurvetoCubicSmoothAbs*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_curveto_cubic_smooth_abs.unsafe_as(Proc(Float32, Float32, Float32, Float32, ISVGPathSegCurvetoCubicSmoothAbs*, HRESULT)).call(x, y, x2, y2, ppresult)
  end
  def create_svg_path_seg_curveto_cubic_smooth_rel(x : Float32, y : Float32, x2 : Float32, y2 : Float32, ppresult : ISVGPathSegCurvetoCubicSmoothRel*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_curveto_cubic_smooth_rel.unsafe_as(Proc(Float32, Float32, Float32, Float32, ISVGPathSegCurvetoCubicSmoothRel*, HRESULT)).call(x, y, x2, y2, ppresult)
  end
  def create_svg_path_seg_curveto_quadratic_smooth_abs(x : Float32, y : Float32, ppresult : ISVGPathSegCurvetoQuadraticSmoothAbs*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_curveto_quadratic_smooth_abs.unsafe_as(Proc(Float32, Float32, ISVGPathSegCurvetoQuadraticSmoothAbs*, HRESULT)).call(x, y, ppresult)
  end
  def create_svg_path_seg_curveto_quadratic_smooth_rel(x : Float32, y : Float32, ppresult : ISVGPathSegCurvetoQuadraticSmoothRel*) : HRESULT
    @lpVtbl.value.create_svg_path_seg_curveto_quadratic_smooth_rel.unsafe_as(Proc(Float32, Float32, ISVGPathSegCurvetoQuadraticSmoothRel*, HRESULT)).call(x, y, ppresult)
  end
end
struct LibWin32::DispSVGPathElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGPreserveAspectRatio
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_align(v : Int16) : HRESULT
    @lpVtbl.value.put_align.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_align(p : Int16*) : HRESULT
    @lpVtbl.value.get_align.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_meet_or_slice(v : Int16) : HRESULT
    @lpVtbl.value.put_meet_or_slice.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_meet_or_slice(p : Int16*) : HRESULT
    @lpVtbl.value.get_meet_or_slice.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::ISVGTextElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGTextElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGImageElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_x(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_x.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_x(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_y(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_y.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_y(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_width(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_width.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_width(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_height(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_height.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_height(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGImageElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGStopElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_offset(v : ISVGAnimatedNumber) : HRESULT
    @lpVtbl.value.putref_offset.unsafe_as(Proc(ISVGAnimatedNumber, HRESULT)).call(v)
  end
  def get_offset(p : ISVGAnimatedNumber*) : HRESULT
    @lpVtbl.value.get_offset.unsafe_as(Proc(ISVGAnimatedNumber*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGStopElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGGradientElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_gradient_units(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_gradient_units.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_gradient_units(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_gradient_units.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
  def putref_gradient_transform(v : ISVGAnimatedTransformList) : HRESULT
    @lpVtbl.value.putref_gradient_transform.unsafe_as(Proc(ISVGAnimatedTransformList, HRESULT)).call(v)
  end
  def get_gradient_transform(p : ISVGAnimatedTransformList*) : HRESULT
    @lpVtbl.value.get_gradient_transform.unsafe_as(Proc(ISVGAnimatedTransformList*, HRESULT)).call(p)
  end
  def putref_spread_method(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_spread_method.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_spread_method(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_spread_method.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGGradientElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGLinearGradientElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_x1(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_x1.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_x1(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_x1.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_y1(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_y1.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_y1(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_y1.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_x2(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_x2.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_x2(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_x2.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_y2(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_y2.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_y2(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_y2.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGLinearGradientElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGRadialGradientElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_cx(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_cx.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_cx(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_cx.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_cy(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_cy.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_cy(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_cy.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_r(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_r.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_r(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_r.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_fx(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_fx.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_fx(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_fx.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_fy(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_fy.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_fy(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_fy.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGRadialGradientElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGMaskElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_mask_units(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_mask_units.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_mask_units(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_mask_units.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
  def putref_mask_content_units(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_mask_content_units.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_mask_content_units(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_mask_content_units.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
  def putref_x(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_x.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_x(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_y(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_y.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_y(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_width(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_width.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_width(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_height(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_height.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_height(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGMaskElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGMarkerElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_ref_x(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_ref_x.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_ref_x(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_ref_x.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_ref_y(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_ref_y.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_ref_y(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_ref_y.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_marker_units(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_marker_units.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_marker_units(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_marker_units.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
  def putref_marker_width(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_marker_width.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_marker_width(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_marker_width.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_marker_height(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_marker_height.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_marker_height(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_marker_height.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_orient_type(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_orient_type.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_orient_type(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_orient_type.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
  def putref_orient_angle(v : ISVGAnimatedAngle) : HRESULT
    @lpVtbl.value.putref_orient_angle.unsafe_as(Proc(ISVGAnimatedAngle, HRESULT)).call(v)
  end
  def get_orient_angle(p : ISVGAnimatedAngle*) : HRESULT
    @lpVtbl.value.get_orient_angle.unsafe_as(Proc(ISVGAnimatedAngle*, HRESULT)).call(p)
  end
  def set_orient_to_auto : HRESULT
    @lpVtbl.value.set_orient_to_auto.unsafe_as(Proc(HRESULT)).call
  end
  def set_orient_to_angle(psvgangle : ISVGAngle) : HRESULT
    @lpVtbl.value.set_orient_to_angle.unsafe_as(Proc(ISVGAngle, HRESULT)).call(psvgangle)
  end
end
struct LibWin32::DispSVGMarkerElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGZoomEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_zoom_rect_screen(p : ISVGRect*) : HRESULT
    @lpVtbl.value.get_zoom_rect_screen.unsafe_as(Proc(ISVGRect*, HRESULT)).call(p)
  end
  def get_previous_scale(p : Float32*) : HRESULT
    @lpVtbl.value.get_previous_scale.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def get_previous_translate(p : ISVGPoint*) : HRESULT
    @lpVtbl.value.get_previous_translate.unsafe_as(Proc(ISVGPoint*, HRESULT)).call(p)
  end
  def get_new_scale(p : Float32*) : HRESULT
    @lpVtbl.value.get_new_scale.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def get_new_translate(p : ISVGPoint*) : HRESULT
    @lpVtbl.value.get_new_translate.unsafe_as(Proc(ISVGPoint*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGZoomEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGAElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_target(v : ISVGAnimatedString) : HRESULT
    @lpVtbl.value.putref_target.unsafe_as(Proc(ISVGAnimatedString, HRESULT)).call(v)
  end
  def get_target(p : ISVGAnimatedString*) : HRESULT
    @lpVtbl.value.get_target.unsafe_as(Proc(ISVGAnimatedString*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGAElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGViewElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_view_target(v : ISVGStringList) : HRESULT
    @lpVtbl.value.putref_view_target.unsafe_as(Proc(ISVGStringList, HRESULT)).call(v)
  end
  def get_view_target(p : ISVGStringList*) : HRESULT
    @lpVtbl.value.get_view_target.unsafe_as(Proc(ISVGStringList*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGViewElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLMediaError
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_code(p : Int16*) : HRESULT
    @lpVtbl.value.get_code.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLTimeRanges
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def start(index : Int32, starttime : Float32*) : HRESULT
    @lpVtbl.value.start.unsafe_as(Proc(Int32, Float32*, HRESULT)).call(index, starttime)
  end
  def end_(index : Int32, endtime : Float32*) : HRESULT
    @lpVtbl.value.end_.unsafe_as(Proc(Int32, Float32*, HRESULT)).call(index, endtime)
  end
end
struct LibWin32::IHTMLTimeRanges2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def start_double(index : Int32, starttime : Float64*) : HRESULT
    @lpVtbl.value.start_double.unsafe_as(Proc(Int32, Float64*, HRESULT)).call(index, starttime)
  end
  def end_double(index : Int32, endtime : Float64*) : HRESULT
    @lpVtbl.value.end_double.unsafe_as(Proc(Int32, Float64*, HRESULT)).call(index, endtime)
  end
end
struct LibWin32::IHTMLMediaElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_error(p : IHTMLMediaError*) : HRESULT
    @lpVtbl.value.get_error.unsafe_as(Proc(IHTMLMediaError*, HRESULT)).call(p)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_current_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_current_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_network_state(p : UInt16*) : HRESULT
    @lpVtbl.value.get_network_state.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_preload(v : UInt8*) : HRESULT
    @lpVtbl.value.put_preload.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_preload(p : UInt8**) : HRESULT
    @lpVtbl.value.get_preload.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_buffered(p : IHTMLTimeRanges*) : HRESULT
    @lpVtbl.value.get_buffered.unsafe_as(Proc(IHTMLTimeRanges*, HRESULT)).call(p)
  end
  def load : HRESULT
    @lpVtbl.value.load.unsafe_as(Proc(HRESULT)).call
  end
  def can_play_type(type : UInt8*, canplay : UInt8**) : HRESULT
    @lpVtbl.value.can_play_type.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(type, canplay)
  end
  def get_seeking(p : Int16*) : HRESULT
    @lpVtbl.value.get_seeking.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_current_time(v : Float32) : HRESULT
    @lpVtbl.value.put_current_time.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_current_time(p : Float32*) : HRESULT
    @lpVtbl.value.get_current_time.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def get_initial_time(p : Float32*) : HRESULT
    @lpVtbl.value.get_initial_time.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def get_duration(p : Float32*) : HRESULT
    @lpVtbl.value.get_duration.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def get_paused(p : Int16*) : HRESULT
    @lpVtbl.value.get_paused.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_default_playback_rate(v : Float32) : HRESULT
    @lpVtbl.value.put_default_playback_rate.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_default_playback_rate(p : Float32*) : HRESULT
    @lpVtbl.value.get_default_playback_rate.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_playback_rate(v : Float32) : HRESULT
    @lpVtbl.value.put_playback_rate.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_playback_rate(p : Float32*) : HRESULT
    @lpVtbl.value.get_playback_rate.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def get_played(p : IHTMLTimeRanges*) : HRESULT
    @lpVtbl.value.get_played.unsafe_as(Proc(IHTMLTimeRanges*, HRESULT)).call(p)
  end
  def get_seekable(p : IHTMLTimeRanges*) : HRESULT
    @lpVtbl.value.get_seekable.unsafe_as(Proc(IHTMLTimeRanges*, HRESULT)).call(p)
  end
  def get_ended(p : Int16*) : HRESULT
    @lpVtbl.value.get_ended.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_autoplay(v : Int16) : HRESULT
    @lpVtbl.value.put_autoplay.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_autoplay(p : Int16*) : HRESULT
    @lpVtbl.value.get_autoplay.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_loop(v : Int16) : HRESULT
    @lpVtbl.value.put_loop.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_loop(p : Int16*) : HRESULT
    @lpVtbl.value.get_loop.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def play : HRESULT
    @lpVtbl.value.play.unsafe_as(Proc(HRESULT)).call
  end
  def pause : HRESULT
    @lpVtbl.value.pause.unsafe_as(Proc(HRESULT)).call
  end
  def put_controls(v : Int16) : HRESULT
    @lpVtbl.value.put_controls.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_controls(p : Int16*) : HRESULT
    @lpVtbl.value.get_controls.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_volume(v : Float32) : HRESULT
    @lpVtbl.value.put_volume.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_volume(p : Float32*) : HRESULT
    @lpVtbl.value.get_volume.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_muted(v : Int16) : HRESULT
    @lpVtbl.value.put_muted.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_muted(p : Int16*) : HRESULT
    @lpVtbl.value.get_muted.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_autobuffer(v : Int16) : HRESULT
    @lpVtbl.value.put_autobuffer.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_autobuffer(p : Int16*) : HRESULT
    @lpVtbl.value.get_autobuffer.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLMediaElement2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_current_time_double(v : Float64) : HRESULT
    @lpVtbl.value.put_current_time_double.unsafe_as(Proc(Float64, HRESULT)).call(v)
  end
  def get_current_time_double(p : Float64*) : HRESULT
    @lpVtbl.value.get_current_time_double.unsafe_as(Proc(Float64*, HRESULT)).call(p)
  end
  def get_initial_time_double(p : Float64*) : HRESULT
    @lpVtbl.value.get_initial_time_double.unsafe_as(Proc(Float64*, HRESULT)).call(p)
  end
  def get_duration_double(p : Float64*) : HRESULT
    @lpVtbl.value.get_duration_double.unsafe_as(Proc(Float64*, HRESULT)).call(p)
  end
  def put_default_playback_rate_double(v : Float64) : HRESULT
    @lpVtbl.value.put_default_playback_rate_double.unsafe_as(Proc(Float64, HRESULT)).call(v)
  end
  def get_default_playback_rate_double(p : Float64*) : HRESULT
    @lpVtbl.value.get_default_playback_rate_double.unsafe_as(Proc(Float64*, HRESULT)).call(p)
  end
  def put_playback_rate_double(v : Float64) : HRESULT
    @lpVtbl.value.put_playback_rate_double.unsafe_as(Proc(Float64, HRESULT)).call(v)
  end
  def get_playback_rate_double(p : Float64*) : HRESULT
    @lpVtbl.value.get_playback_rate_double.unsafe_as(Proc(Float64*, HRESULT)).call(p)
  end
  def put_volume_double(v : Float64) : HRESULT
    @lpVtbl.value.put_volume_double.unsafe_as(Proc(Float64, HRESULT)).call(v)
  end
  def get_volume_double(p : Float64*) : HRESULT
    @lpVtbl.value.get_volume_double.unsafe_as(Proc(Float64*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLMSMediaElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_ms_play_to_disabled(v : Int16) : HRESULT
    @lpVtbl.value.put_ms_play_to_disabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_ms_play_to_disabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_ms_play_to_disabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_ms_play_to_primary(v : Int16) : HRESULT
    @lpVtbl.value.put_ms_play_to_primary.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_ms_play_to_primary(p : Int16*) : HRESULT
    @lpVtbl.value.get_ms_play_to_primary.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLSourceElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_src(v : UInt8*) : HRESULT
    @lpVtbl.value.put_src.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_src(p : UInt8**) : HRESULT
    @lpVtbl.value.get_src.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_media(v : UInt8*) : HRESULT
    @lpVtbl.value.put_media.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_media(p : UInt8**) : HRESULT
    @lpVtbl.value.get_media.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLAudioElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLVideoElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_width(v : Int32) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_height(v : Int32) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_video_width(p : UInt32*) : HRESULT
    @lpVtbl.value.get_video_width.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def get_video_height(p : UInt32*) : HRESULT
    @lpVtbl.value.get_video_height.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def put_poster(v : UInt8*) : HRESULT
    @lpVtbl.value.put_poster.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_poster(p : UInt8**) : HRESULT
    @lpVtbl.value.get_poster.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLAudioElementFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create(src : VARIANT, midl__ihtmlaudioelementfactory0000 : IHTMLAudioElement*) : HRESULT
    @lpVtbl.value.create.unsafe_as(Proc(VARIANT, IHTMLAudioElement*, HRESULT)).call(src, midl__ihtmlaudioelementfactory0000)
  end
end
struct LibWin32::DispHTMLMediaError
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLTimeRanges
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLMediaElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLSourceElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLAudioElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLVideoElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGSwitchElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGSwitchElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGDescElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGDescElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGTitleElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGTitleElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGMetadataElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGMetadataElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGElementInstanceList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(index : Int32, ppresult : ISVGElementInstance*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, ISVGElementInstance*, HRESULT)).call(index, ppresult)
  end
end
struct LibWin32::DispSVGElementInstance
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGElementInstanceList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMException
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_code(v : Int32) : HRESULT
    @lpVtbl.value.put_code.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_code(p : Int32*) : HRESULT
    @lpVtbl.value.get_code.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_message(p : UInt8**) : HRESULT
    @lpVtbl.value.get_message.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispDOMException
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IRangeException
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_code(v : Int32) : HRESULT
    @lpVtbl.value.put_code.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_code(p : Int32*) : HRESULT
    @lpVtbl.value.get_code.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_message(p : UInt8**) : HRESULT
    @lpVtbl.value.get_message.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispRangeException
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGException
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_code(v : Int32) : HRESULT
    @lpVtbl.value.put_code.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_code(p : Int32*) : HRESULT
    @lpVtbl.value.get_code.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_message(p : UInt8**) : HRESULT
    @lpVtbl.value.get_message.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGException
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IEventException
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_code(v : Int32) : HRESULT
    @lpVtbl.value.put_code.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_code(p : Int32*) : HRESULT
    @lpVtbl.value.get_code.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_message(p : UInt8**) : HRESULT
    @lpVtbl.value.get_message.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispEventException
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGScriptElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGScriptElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGStyleElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_type(v : UInt8*) : HRESULT
    @lpVtbl.value.put_type.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_media(v : UInt8*) : HRESULT
    @lpVtbl.value.put_media.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_media(p : UInt8**) : HRESULT
    @lpVtbl.value.get_media.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGStyleElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGTextContentElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_text_length(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_text_length.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_text_length(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_text_length.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_length_adjust(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_length_adjust.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_length_adjust(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_length_adjust.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
  def get_number_of_chars(presult : Int32*) : HRESULT
    @lpVtbl.value.get_number_of_chars.unsafe_as(Proc(Int32*, HRESULT)).call(presult)
  end
  def get_computed_text_length(presult : Float32*) : HRESULT
    @lpVtbl.value.get_computed_text_length.unsafe_as(Proc(Float32*, HRESULT)).call(presult)
  end
  def get_sub_string_length(charnum : Int32, nchars : Int32, presult : Float32*) : HRESULT
    @lpVtbl.value.get_sub_string_length.unsafe_as(Proc(Int32, Int32, Float32*, HRESULT)).call(charnum, nchars, presult)
  end
  def get_start_position_of_char(charnum : Int32, ppresult : ISVGPoint*) : HRESULT
    @lpVtbl.value.get_start_position_of_char.unsafe_as(Proc(Int32, ISVGPoint*, HRESULT)).call(charnum, ppresult)
  end
  def get_end_position_of_char(charnum : Int32, ppresult : ISVGPoint*) : HRESULT
    @lpVtbl.value.get_end_position_of_char.unsafe_as(Proc(Int32, ISVGPoint*, HRESULT)).call(charnum, ppresult)
  end
  def get_extent_of_char(charnum : Int32, ppresult : ISVGRect*) : HRESULT
    @lpVtbl.value.get_extent_of_char.unsafe_as(Proc(Int32, ISVGRect*, HRESULT)).call(charnum, ppresult)
  end
  def get_rotation_of_char(charnum : Int32, presult : Float32*) : HRESULT
    @lpVtbl.value.get_rotation_of_char.unsafe_as(Proc(Int32, Float32*, HRESULT)).call(charnum, presult)
  end
  def get_char_num_at_position(point : ISVGPoint, presult : Int32*) : HRESULT
    @lpVtbl.value.get_char_num_at_position.unsafe_as(Proc(ISVGPoint, Int32*, HRESULT)).call(point, presult)
  end
  def select_sub_string(charnum : Int32, nchars : Int32) : HRESULT
    @lpVtbl.value.select_sub_string.unsafe_as(Proc(Int32, Int32, HRESULT)).call(charnum, nchars)
  end
end
struct LibWin32::DispSVGTextContentElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGTextPositioningElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_x(v : ISVGAnimatedLengthList) : HRESULT
    @lpVtbl.value.putref_x.unsafe_as(Proc(ISVGAnimatedLengthList, HRESULT)).call(v)
  end
  def get_x(p : ISVGAnimatedLengthList*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(ISVGAnimatedLengthList*, HRESULT)).call(p)
  end
  def putref_y(v : ISVGAnimatedLengthList) : HRESULT
    @lpVtbl.value.putref_y.unsafe_as(Proc(ISVGAnimatedLengthList, HRESULT)).call(v)
  end
  def get_y(p : ISVGAnimatedLengthList*) : HRESULT
    @lpVtbl.value.get_y.unsafe_as(Proc(ISVGAnimatedLengthList*, HRESULT)).call(p)
  end
  def putref_dx(v : ISVGAnimatedLengthList) : HRESULT
    @lpVtbl.value.putref_dx.unsafe_as(Proc(ISVGAnimatedLengthList, HRESULT)).call(v)
  end
  def get_dx(p : ISVGAnimatedLengthList*) : HRESULT
    @lpVtbl.value.get_dx.unsafe_as(Proc(ISVGAnimatedLengthList*, HRESULT)).call(p)
  end
  def putref_dy(v : ISVGAnimatedLengthList) : HRESULT
    @lpVtbl.value.putref_dy.unsafe_as(Proc(ISVGAnimatedLengthList, HRESULT)).call(v)
  end
  def get_dy(p : ISVGAnimatedLengthList*) : HRESULT
    @lpVtbl.value.get_dy.unsafe_as(Proc(ISVGAnimatedLengthList*, HRESULT)).call(p)
  end
  def putref_rotate(v : ISVGAnimatedNumberList) : HRESULT
    @lpVtbl.value.putref_rotate.unsafe_as(Proc(ISVGAnimatedNumberList, HRESULT)).call(v)
  end
  def get_rotate(p : ISVGAnimatedNumberList*) : HRESULT
    @lpVtbl.value.get_rotate.unsafe_as(Proc(ISVGAnimatedNumberList*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGTextPositioningElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispDOMDocumentType
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispNodeIterator
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispTreeWalker
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispDOMProcessingInstruction
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLPerformanceNavigation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_type(p : UInt32*) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def get_redirect_count(p : UInt32*) : HRESULT
    @lpVtbl.value.get_redirect_count.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
  def to_json(pvar : VARIANT*) : HRESULT
    @lpVtbl.value.to_json.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvar)
  end
end
struct LibWin32::IHTMLPerformanceTiming
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_navigation_start(p : UInt64*) : HRESULT
    @lpVtbl.value.get_navigation_start.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_unload_event_start(p : UInt64*) : HRESULT
    @lpVtbl.value.get_unload_event_start.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_unload_event_end(p : UInt64*) : HRESULT
    @lpVtbl.value.get_unload_event_end.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_redirect_start(p : UInt64*) : HRESULT
    @lpVtbl.value.get_redirect_start.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_redirect_end(p : UInt64*) : HRESULT
    @lpVtbl.value.get_redirect_end.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_fetch_start(p : UInt64*) : HRESULT
    @lpVtbl.value.get_fetch_start.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_domain_lookup_start(p : UInt64*) : HRESULT
    @lpVtbl.value.get_domain_lookup_start.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_domain_lookup_end(p : UInt64*) : HRESULT
    @lpVtbl.value.get_domain_lookup_end.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_connect_start(p : UInt64*) : HRESULT
    @lpVtbl.value.get_connect_start.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_connect_end(p : UInt64*) : HRESULT
    @lpVtbl.value.get_connect_end.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_request_start(p : UInt64*) : HRESULT
    @lpVtbl.value.get_request_start.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_response_start(p : UInt64*) : HRESULT
    @lpVtbl.value.get_response_start.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_response_end(p : UInt64*) : HRESULT
    @lpVtbl.value.get_response_end.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_dom_loading(p : UInt64*) : HRESULT
    @lpVtbl.value.get_dom_loading.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_dom_interactive(p : UInt64*) : HRESULT
    @lpVtbl.value.get_dom_interactive.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_dom_content_loaded_event_start(p : UInt64*) : HRESULT
    @lpVtbl.value.get_dom_content_loaded_event_start.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_dom_content_loaded_event_end(p : UInt64*) : HRESULT
    @lpVtbl.value.get_dom_content_loaded_event_end.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_dom_complete(p : UInt64*) : HRESULT
    @lpVtbl.value.get_dom_complete.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_load_event_start(p : UInt64*) : HRESULT
    @lpVtbl.value.get_load_event_start.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_load_event_end(p : UInt64*) : HRESULT
    @lpVtbl.value.get_load_event_end.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def get_ms_first_paint(p : UInt64*) : HRESULT
    @lpVtbl.value.get_ms_first_paint.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
  def to_json(pvar : VARIANT*) : HRESULT
    @lpVtbl.value.to_json.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvar)
  end
end
struct LibWin32::DispHTMLPerformance
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLPerformanceNavigation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLPerformanceTiming
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGTSpanElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispSVGTSpanElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ITemplatePrinter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def start_doc(bstrtitle : UInt8*, p : Int16*) : HRESULT
    @lpVtbl.value.start_doc.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrtitle, p)
  end
  def stop_doc : HRESULT
    @lpVtbl.value.stop_doc.unsafe_as(Proc(HRESULT)).call
  end
  def print_blank_page : HRESULT
    @lpVtbl.value.print_blank_page.unsafe_as(Proc(HRESULT)).call
  end
  def print_page(pelemdisp : IDispatch) : HRESULT
    @lpVtbl.value.print_page.unsafe_as(Proc(IDispatch, HRESULT)).call(pelemdisp)
  end
  def ensure_print_dialog_defaults(p : Int16*) : HRESULT
    @lpVtbl.value.ensure_print_dialog_defaults.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def show_print_dialog(p : Int16*) : HRESULT
    @lpVtbl.value.show_print_dialog.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def show_page_setup_dialog(p : Int16*) : HRESULT
    @lpVtbl.value.show_page_setup_dialog.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def print_non_native(pmarkup : IUnknown, p : Int16*) : HRESULT
    @lpVtbl.value.print_non_native.unsafe_as(Proc(IUnknown, Int16*, HRESULT)).call(pmarkup, p)
  end
  def print_non_native_frames(pmarkup : IUnknown, factiveframe : Int16) : HRESULT
    @lpVtbl.value.print_non_native_frames.unsafe_as(Proc(IUnknown, Int16, HRESULT)).call(pmarkup, factiveframe)
  end
  def put_frameset_document(v : Int16) : HRESULT
    @lpVtbl.value.put_frameset_document.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frameset_document(p : Int16*) : HRESULT
    @lpVtbl.value.get_frameset_document.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_frame_active(v : Int16) : HRESULT
    @lpVtbl.value.put_frame_active.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frame_active(p : Int16*) : HRESULT
    @lpVtbl.value.get_frame_active.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_frame_as_shown(v : Int16) : HRESULT
    @lpVtbl.value.put_frame_as_shown.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frame_as_shown(p : Int16*) : HRESULT
    @lpVtbl.value.get_frame_as_shown.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_selection(v : Int16) : HRESULT
    @lpVtbl.value.put_selection.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_selection(p : Int16*) : HRESULT
    @lpVtbl.value.get_selection.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_selected_pages(v : Int16) : HRESULT
    @lpVtbl.value.put_selected_pages.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_selected_pages(p : Int16*) : HRESULT
    @lpVtbl.value.get_selected_pages.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_current_page(v : Int16) : HRESULT
    @lpVtbl.value.put_current_page.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_current_page(p : Int16*) : HRESULT
    @lpVtbl.value.get_current_page.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_current_page_avail(v : Int16) : HRESULT
    @lpVtbl.value.put_current_page_avail.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_current_page_avail(p : Int16*) : HRESULT
    @lpVtbl.value.get_current_page_avail.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_collate(v : Int16) : HRESULT
    @lpVtbl.value.put_collate.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_collate(p : Int16*) : HRESULT
    @lpVtbl.value.get_collate.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_duplex(p : Int16*) : HRESULT
    @lpVtbl.value.get_duplex.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_copies(v : UInt16) : HRESULT
    @lpVtbl.value.put_copies.unsafe_as(Proc(UInt16, HRESULT)).call(v)
  end
  def get_copies(p : UInt16*) : HRESULT
    @lpVtbl.value.get_copies.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_page_from(v : UInt16) : HRESULT
    @lpVtbl.value.put_page_from.unsafe_as(Proc(UInt16, HRESULT)).call(v)
  end
  def get_page_from(p : UInt16*) : HRESULT
    @lpVtbl.value.get_page_from.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_page_to(v : UInt16) : HRESULT
    @lpVtbl.value.put_page_to.unsafe_as(Proc(UInt16, HRESULT)).call(v)
  end
  def get_page_to(p : UInt16*) : HRESULT
    @lpVtbl.value.get_page_to.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_table_of_links(v : Int16) : HRESULT
    @lpVtbl.value.put_table_of_links.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_table_of_links(p : Int16*) : HRESULT
    @lpVtbl.value.get_table_of_links.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_all_linked_documents(v : Int16) : HRESULT
    @lpVtbl.value.put_all_linked_documents.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_all_linked_documents(p : Int16*) : HRESULT
    @lpVtbl.value.get_all_linked_documents.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_header(v : UInt8*) : HRESULT
    @lpVtbl.value.put_header.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_header(p : UInt8**) : HRESULT
    @lpVtbl.value.get_header.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_footer(v : UInt8*) : HRESULT
    @lpVtbl.value.put_footer.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_footer(p : UInt8**) : HRESULT
    @lpVtbl.value.get_footer.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_margin_left(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_left.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_margin_right(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_right.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_right(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_right.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_margin_top(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_top.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_margin_bottom(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_bottom.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_bottom(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_bottom.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_page_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_page_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_page_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_page_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_right(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_right.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_bottom(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_bottom.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def update_page_status(p : Int32*) : HRESULT
    @lpVtbl.value.update_page_status.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::ITemplatePrinter2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def start_doc(bstrtitle : UInt8*, p : Int16*) : HRESULT
    @lpVtbl.value.start_doc.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrtitle, p)
  end
  def stop_doc : HRESULT
    @lpVtbl.value.stop_doc.unsafe_as(Proc(HRESULT)).call
  end
  def print_blank_page : HRESULT
    @lpVtbl.value.print_blank_page.unsafe_as(Proc(HRESULT)).call
  end
  def print_page(pelemdisp : IDispatch) : HRESULT
    @lpVtbl.value.print_page.unsafe_as(Proc(IDispatch, HRESULT)).call(pelemdisp)
  end
  def ensure_print_dialog_defaults(p : Int16*) : HRESULT
    @lpVtbl.value.ensure_print_dialog_defaults.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def show_print_dialog(p : Int16*) : HRESULT
    @lpVtbl.value.show_print_dialog.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def show_page_setup_dialog(p : Int16*) : HRESULT
    @lpVtbl.value.show_page_setup_dialog.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def print_non_native(pmarkup : IUnknown, p : Int16*) : HRESULT
    @lpVtbl.value.print_non_native.unsafe_as(Proc(IUnknown, Int16*, HRESULT)).call(pmarkup, p)
  end
  def print_non_native_frames(pmarkup : IUnknown, factiveframe : Int16) : HRESULT
    @lpVtbl.value.print_non_native_frames.unsafe_as(Proc(IUnknown, Int16, HRESULT)).call(pmarkup, factiveframe)
  end
  def put_frameset_document(v : Int16) : HRESULT
    @lpVtbl.value.put_frameset_document.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frameset_document(p : Int16*) : HRESULT
    @lpVtbl.value.get_frameset_document.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_frame_active(v : Int16) : HRESULT
    @lpVtbl.value.put_frame_active.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frame_active(p : Int16*) : HRESULT
    @lpVtbl.value.get_frame_active.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_frame_as_shown(v : Int16) : HRESULT
    @lpVtbl.value.put_frame_as_shown.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frame_as_shown(p : Int16*) : HRESULT
    @lpVtbl.value.get_frame_as_shown.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_selection(v : Int16) : HRESULT
    @lpVtbl.value.put_selection.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_selection(p : Int16*) : HRESULT
    @lpVtbl.value.get_selection.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_selected_pages(v : Int16) : HRESULT
    @lpVtbl.value.put_selected_pages.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_selected_pages(p : Int16*) : HRESULT
    @lpVtbl.value.get_selected_pages.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_current_page(v : Int16) : HRESULT
    @lpVtbl.value.put_current_page.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_current_page(p : Int16*) : HRESULT
    @lpVtbl.value.get_current_page.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_current_page_avail(v : Int16) : HRESULT
    @lpVtbl.value.put_current_page_avail.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_current_page_avail(p : Int16*) : HRESULT
    @lpVtbl.value.get_current_page_avail.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_collate(v : Int16) : HRESULT
    @lpVtbl.value.put_collate.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_collate(p : Int16*) : HRESULT
    @lpVtbl.value.get_collate.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_duplex(p : Int16*) : HRESULT
    @lpVtbl.value.get_duplex.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_copies(v : UInt16) : HRESULT
    @lpVtbl.value.put_copies.unsafe_as(Proc(UInt16, HRESULT)).call(v)
  end
  def get_copies(p : UInt16*) : HRESULT
    @lpVtbl.value.get_copies.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_page_from(v : UInt16) : HRESULT
    @lpVtbl.value.put_page_from.unsafe_as(Proc(UInt16, HRESULT)).call(v)
  end
  def get_page_from(p : UInt16*) : HRESULT
    @lpVtbl.value.get_page_from.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_page_to(v : UInt16) : HRESULT
    @lpVtbl.value.put_page_to.unsafe_as(Proc(UInt16, HRESULT)).call(v)
  end
  def get_page_to(p : UInt16*) : HRESULT
    @lpVtbl.value.get_page_to.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_table_of_links(v : Int16) : HRESULT
    @lpVtbl.value.put_table_of_links.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_table_of_links(p : Int16*) : HRESULT
    @lpVtbl.value.get_table_of_links.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_all_linked_documents(v : Int16) : HRESULT
    @lpVtbl.value.put_all_linked_documents.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_all_linked_documents(p : Int16*) : HRESULT
    @lpVtbl.value.get_all_linked_documents.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_header(v : UInt8*) : HRESULT
    @lpVtbl.value.put_header.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_header(p : UInt8**) : HRESULT
    @lpVtbl.value.get_header.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_footer(v : UInt8*) : HRESULT
    @lpVtbl.value.put_footer.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_footer(p : UInt8**) : HRESULT
    @lpVtbl.value.get_footer.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_margin_left(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_left.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_margin_right(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_right.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_right(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_right.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_margin_top(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_top.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_margin_bottom(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_bottom.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_bottom(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_bottom.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_page_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_page_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_page_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_page_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_right(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_right.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_bottom(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_bottom.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def update_page_status(p : Int32*) : HRESULT
    @lpVtbl.value.update_page_status.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_selection_enabled(v : Int16) : HRESULT
    @lpVtbl.value.put_selection_enabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_selection_enabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_selection_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_frame_active_enabled(v : Int16) : HRESULT
    @lpVtbl.value.put_frame_active_enabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frame_active_enabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_frame_active_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_orientation(v : UInt8*) : HRESULT
    @lpVtbl.value.put_orientation.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_orientation(p : UInt8**) : HRESULT
    @lpVtbl.value.get_orientation.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_use_printer_copy_collate(v : Int16) : HRESULT
    @lpVtbl.value.put_use_printer_copy_collate.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_use_printer_copy_collate(p : Int16*) : HRESULT
    @lpVtbl.value.get_use_printer_copy_collate.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def device_supports(bstrproperty : UInt8*, pvar : VARIANT*) : HRESULT
    @lpVtbl.value.device_supports.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrproperty, pvar)
  end
end
struct LibWin32::ITemplatePrinter3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def start_doc(bstrtitle : UInt8*, p : Int16*) : HRESULT
    @lpVtbl.value.start_doc.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrtitle, p)
  end
  def stop_doc : HRESULT
    @lpVtbl.value.stop_doc.unsafe_as(Proc(HRESULT)).call
  end
  def print_blank_page : HRESULT
    @lpVtbl.value.print_blank_page.unsafe_as(Proc(HRESULT)).call
  end
  def print_page(pelemdisp : IDispatch) : HRESULT
    @lpVtbl.value.print_page.unsafe_as(Proc(IDispatch, HRESULT)).call(pelemdisp)
  end
  def ensure_print_dialog_defaults(p : Int16*) : HRESULT
    @lpVtbl.value.ensure_print_dialog_defaults.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def show_print_dialog(p : Int16*) : HRESULT
    @lpVtbl.value.show_print_dialog.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def show_page_setup_dialog(p : Int16*) : HRESULT
    @lpVtbl.value.show_page_setup_dialog.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def print_non_native(pmarkup : IUnknown, p : Int16*) : HRESULT
    @lpVtbl.value.print_non_native.unsafe_as(Proc(IUnknown, Int16*, HRESULT)).call(pmarkup, p)
  end
  def print_non_native_frames(pmarkup : IUnknown, factiveframe : Int16) : HRESULT
    @lpVtbl.value.print_non_native_frames.unsafe_as(Proc(IUnknown, Int16, HRESULT)).call(pmarkup, factiveframe)
  end
  def put_frameset_document(v : Int16) : HRESULT
    @lpVtbl.value.put_frameset_document.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frameset_document(p : Int16*) : HRESULT
    @lpVtbl.value.get_frameset_document.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_frame_active(v : Int16) : HRESULT
    @lpVtbl.value.put_frame_active.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frame_active(p : Int16*) : HRESULT
    @lpVtbl.value.get_frame_active.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_frame_as_shown(v : Int16) : HRESULT
    @lpVtbl.value.put_frame_as_shown.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frame_as_shown(p : Int16*) : HRESULT
    @lpVtbl.value.get_frame_as_shown.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_selection(v : Int16) : HRESULT
    @lpVtbl.value.put_selection.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_selection(p : Int16*) : HRESULT
    @lpVtbl.value.get_selection.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_selected_pages(v : Int16) : HRESULT
    @lpVtbl.value.put_selected_pages.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_selected_pages(p : Int16*) : HRESULT
    @lpVtbl.value.get_selected_pages.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_current_page(v : Int16) : HRESULT
    @lpVtbl.value.put_current_page.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_current_page(p : Int16*) : HRESULT
    @lpVtbl.value.get_current_page.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_current_page_avail(v : Int16) : HRESULT
    @lpVtbl.value.put_current_page_avail.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_current_page_avail(p : Int16*) : HRESULT
    @lpVtbl.value.get_current_page_avail.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_collate(v : Int16) : HRESULT
    @lpVtbl.value.put_collate.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_collate(p : Int16*) : HRESULT
    @lpVtbl.value.get_collate.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_duplex(p : Int16*) : HRESULT
    @lpVtbl.value.get_duplex.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_copies(v : UInt16) : HRESULT
    @lpVtbl.value.put_copies.unsafe_as(Proc(UInt16, HRESULT)).call(v)
  end
  def get_copies(p : UInt16*) : HRESULT
    @lpVtbl.value.get_copies.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_page_from(v : UInt16) : HRESULT
    @lpVtbl.value.put_page_from.unsafe_as(Proc(UInt16, HRESULT)).call(v)
  end
  def get_page_from(p : UInt16*) : HRESULT
    @lpVtbl.value.get_page_from.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_page_to(v : UInt16) : HRESULT
    @lpVtbl.value.put_page_to.unsafe_as(Proc(UInt16, HRESULT)).call(v)
  end
  def get_page_to(p : UInt16*) : HRESULT
    @lpVtbl.value.get_page_to.unsafe_as(Proc(UInt16*, HRESULT)).call(p)
  end
  def put_table_of_links(v : Int16) : HRESULT
    @lpVtbl.value.put_table_of_links.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_table_of_links(p : Int16*) : HRESULT
    @lpVtbl.value.get_table_of_links.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_all_linked_documents(v : Int16) : HRESULT
    @lpVtbl.value.put_all_linked_documents.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_all_linked_documents(p : Int16*) : HRESULT
    @lpVtbl.value.get_all_linked_documents.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_header(v : UInt8*) : HRESULT
    @lpVtbl.value.put_header.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_header(p : UInt8**) : HRESULT
    @lpVtbl.value.get_header.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_footer(v : UInt8*) : HRESULT
    @lpVtbl.value.put_footer.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_footer(p : UInt8**) : HRESULT
    @lpVtbl.value.get_footer.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_margin_left(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_left.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_margin_right(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_right.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_right(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_right.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_margin_top(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_top.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_margin_bottom(v : Int32) : HRESULT
    @lpVtbl.value.put_margin_bottom.unsafe_as(Proc(Int32, HRESULT)).call(v)
  end
  def get_margin_bottom(p : Int32*) : HRESULT
    @lpVtbl.value.get_margin_bottom.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_page_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_page_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_page_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_page_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_left(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_left.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_top(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_top.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_right(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_right.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_unprintable_bottom(p : Int32*) : HRESULT
    @lpVtbl.value.get_unprintable_bottom.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def update_page_status(p : Int32*) : HRESULT
    @lpVtbl.value.update_page_status.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def put_selection_enabled(v : Int16) : HRESULT
    @lpVtbl.value.put_selection_enabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_selection_enabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_selection_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_frame_active_enabled(v : Int16) : HRESULT
    @lpVtbl.value.put_frame_active_enabled.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_frame_active_enabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_frame_active_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_orientation(v : UInt8*) : HRESULT
    @lpVtbl.value.put_orientation.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_orientation(p : UInt8**) : HRESULT
    @lpVtbl.value.get_orientation.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_use_printer_copy_collate(v : Int16) : HRESULT
    @lpVtbl.value.put_use_printer_copy_collate.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_use_printer_copy_collate(p : Int16*) : HRESULT
    @lpVtbl.value.get_use_printer_copy_collate.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def device_supports(bstrproperty : UInt8*, pvar : VARIANT*) : HRESULT
    @lpVtbl.value.device_supports.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrproperty, pvar)
  end
  def put_header_footer_font(v : UInt8*) : HRESULT
    @lpVtbl.value.put_header_footer_font.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_header_footer_font(p : UInt8**) : HRESULT
    @lpVtbl.value.get_header_footer_font.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_page_margin_top(pagerule : IDispatch, pagewidth : Int32, pageheight : Int32, pmargin : VARIANT*) : HRESULT
    @lpVtbl.value.get_page_margin_top.unsafe_as(Proc(IDispatch, Int32, Int32, VARIANT*, HRESULT)).call(pagerule, pagewidth, pageheight, pmargin)
  end
  def get_page_margin_right(pagerule : IDispatch, pagewidth : Int32, pageheight : Int32, pmargin : VARIANT*) : HRESULT
    @lpVtbl.value.get_page_margin_right.unsafe_as(Proc(IDispatch, Int32, Int32, VARIANT*, HRESULT)).call(pagerule, pagewidth, pageheight, pmargin)
  end
  def get_page_margin_bottom(pagerule : IDispatch, pagewidth : Int32, pageheight : Int32, pmargin : VARIANT*) : HRESULT
    @lpVtbl.value.get_page_margin_bottom.unsafe_as(Proc(IDispatch, Int32, Int32, VARIANT*, HRESULT)).call(pagerule, pagewidth, pageheight, pmargin)
  end
  def get_page_margin_left(pagerule : IDispatch, pagewidth : Int32, pageheight : Int32, pmargin : VARIANT*) : HRESULT
    @lpVtbl.value.get_page_margin_left.unsafe_as(Proc(IDispatch, Int32, Int32, VARIANT*, HRESULT)).call(pagerule, pagewidth, pageheight, pmargin)
  end
  def get_page_margin_top_important(pagerule : IDispatch, pbimportant : Int16*) : HRESULT
    @lpVtbl.value.get_page_margin_top_important.unsafe_as(Proc(IDispatch, Int16*, HRESULT)).call(pagerule, pbimportant)
  end
  def get_page_margin_right_important(pagerule : IDispatch, pbimportant : Int16*) : HRESULT
    @lpVtbl.value.get_page_margin_right_important.unsafe_as(Proc(IDispatch, Int16*, HRESULT)).call(pagerule, pbimportant)
  end
  def get_page_margin_bottom_important(pagerule : IDispatch, pbimportant : Int16*) : HRESULT
    @lpVtbl.value.get_page_margin_bottom_important.unsafe_as(Proc(IDispatch, Int16*, HRESULT)).call(pagerule, pbimportant)
  end
  def get_page_margin_left_important(pagerule : IDispatch, pbimportant : Int16*) : HRESULT
    @lpVtbl.value.get_page_margin_left_important.unsafe_as(Proc(IDispatch, Int16*, HRESULT)).call(pagerule, pbimportant)
  end
end
struct LibWin32::IPrintManagerTemplatePrinter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def start_print : HRESULT
    @lpVtbl.value.start_print.unsafe_as(Proc(HRESULT)).call
  end
  def draw_preview_page(pelemdisp : IDispatch, npage : Int32) : HRESULT
    @lpVtbl.value.draw_preview_page.unsafe_as(Proc(IDispatch, Int32, HRESULT)).call(pelemdisp, npage)
  end
  def set_page_count(npage : Int32) : HRESULT
    @lpVtbl.value.set_page_count.unsafe_as(Proc(Int32, HRESULT)).call(npage)
  end
  def invalidate_preview : HRESULT
    @lpVtbl.value.invalidate_preview.unsafe_as(Proc(HRESULT)).call
  end
  def get_print_task_option_value(bstrkey : UInt8*, pvarin : VARIANT*) : HRESULT
    @lpVtbl.value.get_print_task_option_value.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrkey, pvarin)
  end
  def end_print : HRESULT
    @lpVtbl.value.end_print.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IPrintManagerTemplatePrinter2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def start_print : HRESULT
    @lpVtbl.value.start_print.unsafe_as(Proc(HRESULT)).call
  end
  def draw_preview_page(pelemdisp : IDispatch, npage : Int32) : HRESULT
    @lpVtbl.value.draw_preview_page.unsafe_as(Proc(IDispatch, Int32, HRESULT)).call(pelemdisp, npage)
  end
  def set_page_count(npage : Int32) : HRESULT
    @lpVtbl.value.set_page_count.unsafe_as(Proc(Int32, HRESULT)).call(npage)
  end
  def invalidate_preview : HRESULT
    @lpVtbl.value.invalidate_preview.unsafe_as(Proc(HRESULT)).call
  end
  def get_print_task_option_value(bstrkey : UInt8*, pvarin : VARIANT*) : HRESULT
    @lpVtbl.value.get_print_task_option_value.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrkey, pvarin)
  end
  def end_print : HRESULT
    @lpVtbl.value.end_print.unsafe_as(Proc(HRESULT)).call
  end
  def get_show_header_footer(p : Int16*) : HRESULT
    @lpVtbl.value.get_show_header_footer.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_shrink_to_fit(p : Int16*) : HRESULT
    @lpVtbl.value.get_shrink_to_fit.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_percent_scale(p : Float32*) : HRESULT
    @lpVtbl.value.get_percent_scale.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
end
struct LibWin32::DispCPrintManagerTemplatePrinter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ISVGTextPathElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def putref_start_offset(v : ISVGAnimatedLength) : HRESULT
    @lpVtbl.value.putref_start_offset.unsafe_as(Proc(ISVGAnimatedLength, HRESULT)).call(v)
  end
  def get_start_offset(p : ISVGAnimatedLength*) : HRESULT
    @lpVtbl.value.get_start_offset.unsafe_as(Proc(ISVGAnimatedLength*, HRESULT)).call(p)
  end
  def putref_method(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_method.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_method(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_method.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
  def putref_spacing(v : ISVGAnimatedEnumeration) : HRESULT
    @lpVtbl.value.putref_spacing.unsafe_as(Proc(ISVGAnimatedEnumeration, HRESULT)).call(v)
  end
  def get_spacing(p : ISVGAnimatedEnumeration*) : HRESULT
    @lpVtbl.value.get_spacing.unsafe_as(Proc(ISVGAnimatedEnumeration*, HRESULT)).call(p)
  end
end
struct LibWin32::DispSVGTextPathElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMXmlSerializer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def serialize_to_string(pnode : IHTMLDOMNode, pstring : UInt8**) : HRESULT
    @lpVtbl.value.serialize_to_string.unsafe_as(Proc(IHTMLDOMNode, UInt8**, HRESULT)).call(pnode, pstring)
  end
end
struct LibWin32::IDOMParser
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def parse_from_string(xmlsource : UInt8*, mimetype : UInt8*, ppnode : IHTMLDocument2*) : HRESULT
    @lpVtbl.value.parse_from_string.unsafe_as(Proc(UInt8*, UInt8*, IHTMLDocument2*, HRESULT)).call(xmlsource, mimetype, ppnode)
  end
end
struct LibWin32::DispXMLSerializer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispDOMParser
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMXmlSerializerFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create(midl__idomxmlserializerfactory0000 : IDOMXmlSerializer*) : HRESULT
    @lpVtbl.value.create.unsafe_as(Proc(IDOMXmlSerializer*, HRESULT)).call(midl__idomxmlserializerfactory0000)
  end
end
struct LibWin32::IDOMParserFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def create(midl__idomparserfactory0000 : IDOMParser*) : HRESULT
    @lpVtbl.value.create.unsafe_as(Proc(IDOMParser*, HRESULT)).call(midl__idomparserfactory0000)
  end
end
struct LibWin32::DispHTMLSemanticElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLProgressElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_value(v : Float32) : HRESULT
    @lpVtbl.value.put_value.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_value(p : Float32*) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def put_max(v : Float32) : HRESULT
    @lpVtbl.value.put_max.unsafe_as(Proc(Float32, HRESULT)).call(v)
  end
  def get_max(p : Float32*) : HRESULT
    @lpVtbl.value.get_max.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def get_position(p : Float32*) : HRESULT
    @lpVtbl.value.get_position.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def get_form(p : IHTMLFormElement*) : HRESULT
    @lpVtbl.value.get_form.unsafe_as(Proc(IHTMLFormElement*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLProgressElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMMSTransitionEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_property_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_property_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_elapsed_time(p : Float32*) : HRESULT
    @lpVtbl.value.get_elapsed_time.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def init_ms_transition_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, propertyname : UInt8*, elapsedtime : Float32) : HRESULT
    @lpVtbl.value.init_ms_transition_event.unsafe_as(Proc(UInt8*, Int16, Int16, UInt8*, Float32, HRESULT)).call(eventtype, canbubble, cancelable, propertyname, elapsedtime)
  end
end
struct LibWin32::DispDOMMSTransitionEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMMSAnimationEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_animation_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_animation_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_elapsed_time(p : Float32*) : HRESULT
    @lpVtbl.value.get_elapsed_time.unsafe_as(Proc(Float32*, HRESULT)).call(p)
  end
  def init_ms_animation_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, animationname : UInt8*, elapsedtime : Float32) : HRESULT
    @lpVtbl.value.init_ms_animation_event.unsafe_as(Proc(UInt8*, Int16, Int16, UInt8*, Float32, HRESULT)).call(eventtype, canbubble, cancelable, animationname, elapsedtime)
  end
end
struct LibWin32::DispDOMMSAnimationEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IWebGeocoordinates
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_latitude(p : Float64*) : HRESULT
    @lpVtbl.value.get_latitude.unsafe_as(Proc(Float64*, HRESULT)).call(p)
  end
  def get_longitude(p : Float64*) : HRESULT
    @lpVtbl.value.get_longitude.unsafe_as(Proc(Float64*, HRESULT)).call(p)
  end
  def get_altitude(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_altitude.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_accuracy(p : Float64*) : HRESULT
    @lpVtbl.value.get_accuracy.unsafe_as(Proc(Float64*, HRESULT)).call(p)
  end
  def get_altitude_accuracy(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_altitude_accuracy.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_heading(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_heading.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_speed(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_speed.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
end
struct LibWin32::IWebGeopositionError
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_code(p : Int32*) : HRESULT
    @lpVtbl.value.get_code.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_message(p : UInt8**) : HRESULT
    @lpVtbl.value.get_message.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IWebGeoposition
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_coords(p : IWebGeocoordinates*) : HRESULT
    @lpVtbl.value.get_coords.unsafe_as(Proc(IWebGeocoordinates*, HRESULT)).call(p)
  end
  def get_timestamp(p : UInt64*) : HRESULT
    @lpVtbl.value.get_timestamp.unsafe_as(Proc(UInt64*, HRESULT)).call(p)
  end
end
struct LibWin32::DispWebGeolocation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispWebGeocoordinates
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispWebGeopositionError
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispWebGeoposition
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IClientCaps
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_java_enabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_java_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_cookie_enabled(p : Int16*) : HRESULT
    @lpVtbl.value.get_cookie_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_cpu_class(p : UInt8**) : HRESULT
    @lpVtbl.value.get_cpu_class.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_system_language(p : UInt8**) : HRESULT
    @lpVtbl.value.get_system_language.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_user_language(p : UInt8**) : HRESULT
    @lpVtbl.value.get_user_language.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_platform(p : UInt8**) : HRESULT
    @lpVtbl.value.get_platform.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_connection_speed(p : Int32*) : HRESULT
    @lpVtbl.value.get_connection_speed.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_on_line(p : Int16*) : HRESULT
    @lpVtbl.value.get_on_line.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_color_depth(p : Int32*) : HRESULT
    @lpVtbl.value.get_color_depth.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_buffer_depth(p : Int32*) : HRESULT
    @lpVtbl.value.get_buffer_depth.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_avail_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_avail_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_avail_width(p : Int32*) : HRESULT
    @lpVtbl.value.get_avail_width.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_connection_type(p : UInt8**) : HRESULT
    @lpVtbl.value.get_connection_type.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def is_component_installed(bstrname : UInt8*, bstrurl : UInt8*, bstrver : UInt8*, p : Int16*) : HRESULT
    @lpVtbl.value.is_component_installed.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, Int16*, HRESULT)).call(bstrname, bstrurl, bstrver, p)
  end
  def get_component_version(bstrname : UInt8*, bstrurl : UInt8*, pbstrver : UInt8**) : HRESULT
    @lpVtbl.value.get_component_version.unsafe_as(Proc(UInt8*, UInt8*, UInt8**, HRESULT)).call(bstrname, bstrurl, pbstrver)
  end
  def compare_versions(bstrver1 : UInt8*, bstrver2 : UInt8*, p : Int32*) : HRESULT
    @lpVtbl.value.compare_versions.unsafe_as(Proc(UInt8*, UInt8*, Int32*, HRESULT)).call(bstrver1, bstrver2, p)
  end
  def add_component_request(bstrname : UInt8*, bstrurl : UInt8*, bstrver : UInt8*) : HRESULT
    @lpVtbl.value.add_component_request.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, HRESULT)).call(bstrname, bstrurl, bstrver)
  end
  def do_component_request(p : Int16*) : HRESULT
    @lpVtbl.value.do_component_request.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def clear_component_request : HRESULT
    @lpVtbl.value.clear_component_request.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IDOMMSManipulationEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_last_state(p : Int32*) : HRESULT
    @lpVtbl.value.get_last_state.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_current_state(p : Int32*) : HRESULT
    @lpVtbl.value.get_current_state.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def init_ms_manipulation_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, viewarg : IHTMLWindow2, detailarg : Int32, laststate : Int32, currentstate : Int32) : HRESULT
    @lpVtbl.value.init_ms_manipulation_event.unsafe_as(Proc(UInt8*, Int16, Int16, IHTMLWindow2, Int32, Int32, Int32, HRESULT)).call(eventtype, canbubble, cancelable, viewarg, detailarg, laststate, currentstate)
  end
end
struct LibWin32::DispDOMMSManipulationEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IDOMCloseEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_was_clean(p : Int16*) : HRESULT
    @lpVtbl.value.get_was_clean.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def init_close_event(eventtype : UInt8*, canbubble : Int16, cancelable : Int16, wasclean : Int16, code : Int32, reason : UInt8*) : HRESULT
    @lpVtbl.value.init_close_event.unsafe_as(Proc(UInt8*, Int16, Int16, Int16, Int32, UInt8*, HRESULT)).call(eventtype, canbubble, cancelable, wasclean, code, reason)
  end
end
struct LibWin32::DispDOMCloseEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispApplicationCache
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::ICSSFilterSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_element(element : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(element)
  end
  def fire_on_filter_change_event : HRESULT
    @lpVtbl.value.fire_on_filter_change_event.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IMarkupPointer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def owning_doc(ppdoc : IHTMLDocument2*) : HRESULT
    @lpVtbl.value.owning_doc.unsafe_as(Proc(IHTMLDocument2*, HRESULT)).call(ppdoc)
  end
  def gravity(pgravity : POINTER_GRAVITY*) : HRESULT
    @lpVtbl.value.gravity.unsafe_as(Proc(POINTER_GRAVITY*, HRESULT)).call(pgravity)
  end
  def set_gravity(gravity : POINTER_GRAVITY) : HRESULT
    @lpVtbl.value.set_gravity.unsafe_as(Proc(POINTER_GRAVITY, HRESULT)).call(gravity)
  end
  def cling(pfcling : LibC::BOOL*) : HRESULT
    @lpVtbl.value.cling.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfcling)
  end
  def set_cling(fcling : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_cling.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fcling)
  end
  def unposition : HRESULT
    @lpVtbl.value.unposition.unsafe_as(Proc(HRESULT)).call
  end
  def is_positioned(pfpositioned : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_positioned.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfpositioned)
  end
  def get_container(ppcontainer : IMarkupContainer*) : HRESULT
    @lpVtbl.value.get_container.unsafe_as(Proc(IMarkupContainer*, HRESULT)).call(ppcontainer)
  end
  def move_adjacent_to_element(pelement : IHTMLElement, eadj : ELEMENT_ADJACENCY) : HRESULT
    @lpVtbl.value.move_adjacent_to_element.unsafe_as(Proc(IHTMLElement, ELEMENT_ADJACENCY, HRESULT)).call(pelement, eadj)
  end
  def move_to_pointer(ppointer : IMarkupPointer) : HRESULT
    @lpVtbl.value.move_to_pointer.unsafe_as(Proc(IMarkupPointer, HRESULT)).call(ppointer)
  end
  def move_to_container(pcontainer : IMarkupContainer, fatstart : LibC::BOOL) : HRESULT
    @lpVtbl.value.move_to_container.unsafe_as(Proc(IMarkupContainer, LibC::BOOL, HRESULT)).call(pcontainer, fatstart)
  end
  def left(fmove : LibC::BOOL, pcontext : MARKUP_CONTEXT_TYPE*, ppelement : IHTMLElement*, pcch : Int32*, pchtext : Char*) : HRESULT
    @lpVtbl.value.left.unsafe_as(Proc(LibC::BOOL, MARKUP_CONTEXT_TYPE*, IHTMLElement*, Int32*, Char*, HRESULT)).call(fmove, pcontext, ppelement, pcch, pchtext)
  end
  def right(fmove : LibC::BOOL, pcontext : MARKUP_CONTEXT_TYPE*, ppelement : IHTMLElement*, pcch : Int32*, pchtext : Char*) : HRESULT
    @lpVtbl.value.right.unsafe_as(Proc(LibC::BOOL, MARKUP_CONTEXT_TYPE*, IHTMLElement*, Int32*, Char*, HRESULT)).call(fmove, pcontext, ppelement, pcch, pchtext)
  end
  def current_scope(ppelemcurrent : IHTMLElement*) : HRESULT
    @lpVtbl.value.current_scope.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(ppelemcurrent)
  end
  def is_left_of(ppointerthat : IMarkupPointer, pfresult : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_left_of.unsafe_as(Proc(IMarkupPointer, LibC::BOOL*, HRESULT)).call(ppointerthat, pfresult)
  end
  def is_left_of_or_equal_to(ppointerthat : IMarkupPointer, pfresult : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_left_of_or_equal_to.unsafe_as(Proc(IMarkupPointer, LibC::BOOL*, HRESULT)).call(ppointerthat, pfresult)
  end
  def is_right_of(ppointerthat : IMarkupPointer, pfresult : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_right_of.unsafe_as(Proc(IMarkupPointer, LibC::BOOL*, HRESULT)).call(ppointerthat, pfresult)
  end
  def is_right_of_or_equal_to(ppointerthat : IMarkupPointer, pfresult : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_right_of_or_equal_to.unsafe_as(Proc(IMarkupPointer, LibC::BOOL*, HRESULT)).call(ppointerthat, pfresult)
  end
  def is_equal_to(ppointerthat : IMarkupPointer, pfareequal : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_equal_to.unsafe_as(Proc(IMarkupPointer, LibC::BOOL*, HRESULT)).call(ppointerthat, pfareequal)
  end
  def move_unit(muaction : MOVEUNIT_ACTION) : HRESULT
    @lpVtbl.value.move_unit.unsafe_as(Proc(MOVEUNIT_ACTION, HRESULT)).call(muaction)
  end
  def find_text(pchfindtext : LibC::LPWSTR, dwflags : UInt32, piendmatch : IMarkupPointer, piendsearch : IMarkupPointer) : HRESULT
    @lpVtbl.value.find_text.unsafe_as(Proc(LibC::LPWSTR, UInt32, IMarkupPointer, IMarkupPointer, HRESULT)).call(pchfindtext, dwflags, piendmatch, piendsearch)
  end
end
struct LibWin32::IMarkupContainer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def owning_doc(ppdoc : IHTMLDocument2*) : HRESULT
    @lpVtbl.value.owning_doc.unsafe_as(Proc(IHTMLDocument2*, HRESULT)).call(ppdoc)
  end
end
struct LibWin32::IMarkupContainer2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def owning_doc(ppdoc : IHTMLDocument2*) : HRESULT
    @lpVtbl.value.owning_doc.unsafe_as(Proc(IHTMLDocument2*, HRESULT)).call(ppdoc)
  end
  def create_change_log(pchangesink : IHTMLChangeSink, ppchangelog : IHTMLChangeLog*, fforward : LibC::BOOL, fbackward : LibC::BOOL) : HRESULT
    @lpVtbl.value.create_change_log.unsafe_as(Proc(IHTMLChangeSink, IHTMLChangeLog*, LibC::BOOL, LibC::BOOL, HRESULT)).call(pchangesink, ppchangelog, fforward, fbackward)
  end
  def register_for_dirty_range(pchangesink : IHTMLChangeSink, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.register_for_dirty_range.unsafe_as(Proc(IHTMLChangeSink, UInt32*, HRESULT)).call(pchangesink, pdwcookie)
  end
  def un_register_for_dirty_range(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.un_register_for_dirty_range.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def get_and_clear_dirty_range(dwcookie : UInt32, pipointerbegin : IMarkupPointer, pipointerend : IMarkupPointer) : HRESULT
    @lpVtbl.value.get_and_clear_dirty_range.unsafe_as(Proc(UInt32, IMarkupPointer, IMarkupPointer, HRESULT)).call(dwcookie, pipointerbegin, pipointerend)
  end
  def get_version_number : Int32
    @lpVtbl.value.get_version_number.unsafe_as(Proc(Int32)).call
  end
  def get_master_element(ppelementmaster : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_master_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(ppelementmaster)
  end
end
struct LibWin32::IHTMLChangeLog
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_next_change(pbbuffer : UInt8*, nbuffersize : Int32, pnrecordlength : Int32*) : HRESULT
    @lpVtbl.value.get_next_change.unsafe_as(Proc(UInt8*, Int32, Int32*, HRESULT)).call(pbbuffer, nbuffersize, pnrecordlength)
  end
end
struct LibWin32::IHTMLChangeSink
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def notify : HRESULT
    @lpVtbl.value.notify.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ISegmentList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_iterator(ppiiter : ISegmentListIterator*) : HRESULT
    @lpVtbl.value.create_iterator.unsafe_as(Proc(ISegmentListIterator*, HRESULT)).call(ppiiter)
  end
  def get_type(petype : SELECTION_TYPE*) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(SELECTION_TYPE*, HRESULT)).call(petype)
  end
  def is_empty(pfempty : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_empty.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfempty)
  end
end
struct LibWin32::ISegmentListIterator
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def current(ppisegment : ISegment*) : HRESULT
    @lpVtbl.value.current.unsafe_as(Proc(ISegment*, HRESULT)).call(ppisegment)
  end
  def first : HRESULT
    @lpVtbl.value.first.unsafe_as(Proc(HRESULT)).call
  end
  def is_done : HRESULT
    @lpVtbl.value.is_done.unsafe_as(Proc(HRESULT)).call
  end
  def advance : HRESULT
    @lpVtbl.value.advance.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IHTMLCaret
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def move_caret_to_pointer(pdisppointer : IDisplayPointer, fscrollintoview : LibC::BOOL, edir : CARET_DIRECTION) : HRESULT
    @lpVtbl.value.move_caret_to_pointer.unsafe_as(Proc(IDisplayPointer, LibC::BOOL, CARET_DIRECTION, HRESULT)).call(pdisppointer, fscrollintoview, edir)
  end
  def move_caret_to_pointer_ex(pdisppointer : IDisplayPointer, fvisible : LibC::BOOL, fscrollintoview : LibC::BOOL, edir : CARET_DIRECTION) : HRESULT
    @lpVtbl.value.move_caret_to_pointer_ex.unsafe_as(Proc(IDisplayPointer, LibC::BOOL, LibC::BOOL, CARET_DIRECTION, HRESULT)).call(pdisppointer, fvisible, fscrollintoview, edir)
  end
  def move_markup_pointer_to_caret(pimarkuppointer : IMarkupPointer) : HRESULT
    @lpVtbl.value.move_markup_pointer_to_caret.unsafe_as(Proc(IMarkupPointer, HRESULT)).call(pimarkuppointer)
  end
  def move_display_pointer_to_caret(pdisppointer : IDisplayPointer) : HRESULT
    @lpVtbl.value.move_display_pointer_to_caret.unsafe_as(Proc(IDisplayPointer, HRESULT)).call(pdisppointer)
  end
  def is_visible(pisvisible : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_visible.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pisvisible)
  end
  def show(fscrollintoview : LibC::BOOL) : HRESULT
    @lpVtbl.value.show.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fscrollintoview)
  end
  def hide : HRESULT
    @lpVtbl.value.hide.unsafe_as(Proc(HRESULT)).call
  end
  def insert_text(ptext : LibC::LPWSTR, llen : Int32) : HRESULT
    @lpVtbl.value.insert_text.unsafe_as(Proc(LibC::LPWSTR, Int32, HRESULT)).call(ptext, llen)
  end
  def scroll_into_view : HRESULT
    @lpVtbl.value.scroll_into_view.unsafe_as(Proc(HRESULT)).call
  end
  def get_location(ppoint : POINT*, ftranslate : LibC::BOOL) : HRESULT
    @lpVtbl.value.get_location.unsafe_as(Proc(POINT*, LibC::BOOL, HRESULT)).call(ppoint, ftranslate)
  end
  def get_caret_direction(pedir : CARET_DIRECTION*) : HRESULT
    @lpVtbl.value.get_caret_direction.unsafe_as(Proc(CARET_DIRECTION*, HRESULT)).call(pedir)
  end
  def set_caret_direction(edir : CARET_DIRECTION) : HRESULT
    @lpVtbl.value.set_caret_direction.unsafe_as(Proc(CARET_DIRECTION, HRESULT)).call(edir)
  end
end
struct LibWin32::ISegment
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_pointers(pistart : IMarkupPointer, piend : IMarkupPointer) : HRESULT
    @lpVtbl.value.get_pointers.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, HRESULT)).call(pistart, piend)
  end
end
struct LibWin32::IElementSegment
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_pointers(pistart : IMarkupPointer, piend : IMarkupPointer) : HRESULT
    @lpVtbl.value.get_pointers.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, HRESULT)).call(pistart, piend)
  end
  def get_element(ppielement : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(ppielement)
  end
  def set_primary(fprimary : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_primary.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fprimary)
  end
  def is_primary(pfprimary : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_primary.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfprimary)
  end
end
struct LibWin32::IHighlightSegment
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_pointers(pistart : IMarkupPointer, piend : IMarkupPointer) : HRESULT
    @lpVtbl.value.get_pointers.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, HRESULT)).call(pistart, piend)
  end
end
struct LibWin32::IHighlightRenderingServices
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_segment(pdisppointerstart : IDisplayPointer, pdisppointerend : IDisplayPointer, pirenderstyle : IHTMLRenderStyle, ppisegment : IHighlightSegment*) : HRESULT
    @lpVtbl.value.add_segment.unsafe_as(Proc(IDisplayPointer, IDisplayPointer, IHTMLRenderStyle, IHighlightSegment*, HRESULT)).call(pdisppointerstart, pdisppointerend, pirenderstyle, ppisegment)
  end
  def move_segment_to_pointers(pisegment : IHighlightSegment, pdisppointerstart : IDisplayPointer, pdisppointerend : IDisplayPointer) : HRESULT
    @lpVtbl.value.move_segment_to_pointers.unsafe_as(Proc(IHighlightSegment, IDisplayPointer, IDisplayPointer, HRESULT)).call(pisegment, pdisppointerstart, pdisppointerend)
  end
  def remove_segment(pisegment : IHighlightSegment) : HRESULT
    @lpVtbl.value.remove_segment.unsafe_as(Proc(IHighlightSegment, HRESULT)).call(pisegment)
  end
end
struct LibWin32::ILineInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_x(p : Int32*) : HRESULT
    @lpVtbl.value.get_x.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_base_line(p : Int32*) : HRESULT
    @lpVtbl.value.get_base_line.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_text_descent(p : Int32*) : HRESULT
    @lpVtbl.value.get_text_descent.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_text_height(p : Int32*) : HRESULT
    @lpVtbl.value.get_text_height.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_line_direction(p : Int32*) : HRESULT
    @lpVtbl.value.get_line_direction.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
end
struct LibWin32::IDisplayPointer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def move_to_point(ptpoint : POINT, ecoordsystem : COORD_SYSTEM, pelementcontext : IHTMLElement, dwhittestoptions : UInt32, pdwhittestresults : UInt32*) : HRESULT
    @lpVtbl.value.move_to_point.unsafe_as(Proc(POINT, COORD_SYSTEM, IHTMLElement, UInt32, UInt32*, HRESULT)).call(ptpoint, ecoordsystem, pelementcontext, dwhittestoptions, pdwhittestresults)
  end
  def move_unit(emoveunit : DISPLAY_MOVEUNIT, lxpos : Int32) : HRESULT
    @lpVtbl.value.move_unit.unsafe_as(Proc(DISPLAY_MOVEUNIT, Int32, HRESULT)).call(emoveunit, lxpos)
  end
  def position_markup_pointer(pmarkuppointer : IMarkupPointer) : HRESULT
    @lpVtbl.value.position_markup_pointer.unsafe_as(Proc(IMarkupPointer, HRESULT)).call(pmarkuppointer)
  end
  def move_to_pointer(pdisppointer : IDisplayPointer) : HRESULT
    @lpVtbl.value.move_to_pointer.unsafe_as(Proc(IDisplayPointer, HRESULT)).call(pdisppointer)
  end
  def set_pointer_gravity(egravity : POINTER_GRAVITY) : HRESULT
    @lpVtbl.value.set_pointer_gravity.unsafe_as(Proc(POINTER_GRAVITY, HRESULT)).call(egravity)
  end
  def get_pointer_gravity(pegravity : POINTER_GRAVITY*) : HRESULT
    @lpVtbl.value.get_pointer_gravity.unsafe_as(Proc(POINTER_GRAVITY*, HRESULT)).call(pegravity)
  end
  def set_display_gravity(egravity : DISPLAY_GRAVITY) : HRESULT
    @lpVtbl.value.set_display_gravity.unsafe_as(Proc(DISPLAY_GRAVITY, HRESULT)).call(egravity)
  end
  def get_display_gravity(pegravity : DISPLAY_GRAVITY*) : HRESULT
    @lpVtbl.value.get_display_gravity.unsafe_as(Proc(DISPLAY_GRAVITY*, HRESULT)).call(pegravity)
  end
  def is_positioned(pfpositioned : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_positioned.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfpositioned)
  end
  def unposition : HRESULT
    @lpVtbl.value.unposition.unsafe_as(Proc(HRESULT)).call
  end
  def is_equal_to(pdisppointer : IDisplayPointer, pfisequal : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_equal_to.unsafe_as(Proc(IDisplayPointer, LibC::BOOL*, HRESULT)).call(pdisppointer, pfisequal)
  end
  def is_left_of(pdisppointer : IDisplayPointer, pfisleftof : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_left_of.unsafe_as(Proc(IDisplayPointer, LibC::BOOL*, HRESULT)).call(pdisppointer, pfisleftof)
  end
  def is_right_of(pdisppointer : IDisplayPointer, pfisrightof : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_right_of.unsafe_as(Proc(IDisplayPointer, LibC::BOOL*, HRESULT)).call(pdisppointer, pfisrightof)
  end
  def is_at_bol(pfbol : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_at_bol.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfbol)
  end
  def move_to_markup_pointer(ppointer : IMarkupPointer, pdisplinecontext : IDisplayPointer) : HRESULT
    @lpVtbl.value.move_to_markup_pointer.unsafe_as(Proc(IMarkupPointer, IDisplayPointer, HRESULT)).call(ppointer, pdisplinecontext)
  end
  def scroll_into_view : HRESULT
    @lpVtbl.value.scroll_into_view.unsafe_as(Proc(HRESULT)).call
  end
  def get_line_info(pplineinfo : ILineInfo*) : HRESULT
    @lpVtbl.value.get_line_info.unsafe_as(Proc(ILineInfo*, HRESULT)).call(pplineinfo)
  end
  def get_flow_element(pplayoutelement : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_flow_element.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(pplayoutelement)
  end
  def query_breaks(pdwbreaks : UInt32*) : HRESULT
    @lpVtbl.value.query_breaks.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwbreaks)
  end
end
struct LibWin32::IDisplayServices
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_display_pointer(ppdisppointer : IDisplayPointer*) : HRESULT
    @lpVtbl.value.create_display_pointer.unsafe_as(Proc(IDisplayPointer*, HRESULT)).call(ppdisppointer)
  end
  def transform_rect(prect : RECT*, esource : COORD_SYSTEM, edestination : COORD_SYSTEM, pielement : IHTMLElement) : HRESULT
    @lpVtbl.value.transform_rect.unsafe_as(Proc(RECT*, COORD_SYSTEM, COORD_SYSTEM, IHTMLElement, HRESULT)).call(prect, esource, edestination, pielement)
  end
  def transform_point(ppoint : POINT*, esource : COORD_SYSTEM, edestination : COORD_SYSTEM, pielement : IHTMLElement) : HRESULT
    @lpVtbl.value.transform_point.unsafe_as(Proc(POINT*, COORD_SYSTEM, COORD_SYSTEM, IHTMLElement, HRESULT)).call(ppoint, esource, edestination, pielement)
  end
  def get_caret(ppcaret : IHTMLCaret*) : HRESULT
    @lpVtbl.value.get_caret.unsafe_as(Proc(IHTMLCaret*, HRESULT)).call(ppcaret)
  end
  def get_computed_style(ppointer : IMarkupPointer, ppcomputedstyle : IHTMLComputedStyle*) : HRESULT
    @lpVtbl.value.get_computed_style.unsafe_as(Proc(IMarkupPointer, IHTMLComputedStyle*, HRESULT)).call(ppointer, ppcomputedstyle)
  end
  def scroll_rect_into_view(pielement : IHTMLElement, rect : RECT) : HRESULT
    @lpVtbl.value.scroll_rect_into_view.unsafe_as(Proc(IHTMLElement, RECT, HRESULT)).call(pielement, rect)
  end
  def has_flow_layout(pielement : IHTMLElement, pfhasflowlayout : LibC::BOOL*) : HRESULT
    @lpVtbl.value.has_flow_layout.unsafe_as(Proc(IHTMLElement, LibC::BOOL*, HRESULT)).call(pielement, pfhasflowlayout)
  end
end
struct LibWin32::IHtmlDlgSafeHelper
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def choosecolordlg(initcolor : VARIANT, rgbcolor : VARIANT*) : HRESULT
    @lpVtbl.value.choosecolordlg.unsafe_as(Proc(VARIANT, VARIANT*, HRESULT)).call(initcolor, rgbcolor)
  end
  def get_charset(fontname : UInt8*, charset : VARIANT*) : HRESULT
    @lpVtbl.value.get_charset.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(fontname, charset)
  end
  def get_fonts(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_fonts.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_block_formats(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_block_formats.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
end
struct LibWin32::IBlockFormats
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def get_count(p : Int32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(pvarindex : VARIANT*, pbstrblockformat : UInt8**) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT*, UInt8**, HRESULT)).call(pvarindex, pbstrblockformat)
  end
end
struct LibWin32::IFontNames
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def get_count(p : Int32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(pvarindex : VARIANT*, pbstrfontname : UInt8**) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT*, UInt8**, HRESULT)).call(pvarindex, pbstrfontname)
  end
end
struct LibWin32::ICSSFilter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_site(psink : ICSSFilterSite) : HRESULT
    @lpVtbl.value.set_site.unsafe_as(Proc(ICSSFilterSite, HRESULT)).call(psink)
  end
  def on_ambient_property_change(dispid : Int32) : HRESULT
    @lpVtbl.value.on_ambient_property_change.unsafe_as(Proc(Int32, HRESULT)).call(dispid)
  end
end
struct LibWin32::ISecureUrlHost
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def validate_secure_url(pfallow : LibC::BOOL*, pchurlinquestion : LibC::LPWSTR, dwflags : UInt32) : HRESULT
    @lpVtbl.value.validate_secure_url.unsafe_as(Proc(LibC::BOOL*, LibC::LPWSTR, UInt32, HRESULT)).call(pfallow, pchurlinquestion, dwflags)
  end
end
struct LibWin32::IMarkupServices
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_markup_pointer(pppointer : IMarkupPointer*) : HRESULT
    @lpVtbl.value.create_markup_pointer.unsafe_as(Proc(IMarkupPointer*, HRESULT)).call(pppointer)
  end
  def create_markup_container(ppmarkupcontainer : IMarkupContainer*) : HRESULT
    @lpVtbl.value.create_markup_container.unsafe_as(Proc(IMarkupContainer*, HRESULT)).call(ppmarkupcontainer)
  end
  def create_element(tagid : ELEMENT_TAG_ID, pchattributes : LibC::LPWSTR, ppelement : IHTMLElement*) : HRESULT
    @lpVtbl.value.create_element.unsafe_as(Proc(ELEMENT_TAG_ID, LibC::LPWSTR, IHTMLElement*, HRESULT)).call(tagid, pchattributes, ppelement)
  end
  def clone_element(pelemclonethis : IHTMLElement, ppelementtheclone : IHTMLElement*) : HRESULT
    @lpVtbl.value.clone_element.unsafe_as(Proc(IHTMLElement, IHTMLElement*, HRESULT)).call(pelemclonethis, ppelementtheclone)
  end
  def insert_element(pelementinsert : IHTMLElement, ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer) : HRESULT
    @lpVtbl.value.insert_element.unsafe_as(Proc(IHTMLElement, IMarkupPointer, IMarkupPointer, HRESULT)).call(pelementinsert, ppointerstart, ppointerfinish)
  end
  def remove_element(pelementremove : IHTMLElement) : HRESULT
    @lpVtbl.value.remove_element.unsafe_as(Proc(IHTMLElement, HRESULT)).call(pelementremove)
  end
  def remove(ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer) : HRESULT
    @lpVtbl.value.remove.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, HRESULT)).call(ppointerstart, ppointerfinish)
  end
  def copy(ppointersourcestart : IMarkupPointer, ppointersourcefinish : IMarkupPointer, ppointertarget : IMarkupPointer) : HRESULT
    @lpVtbl.value.copy.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, IMarkupPointer, HRESULT)).call(ppointersourcestart, ppointersourcefinish, ppointertarget)
  end
  def move(ppointersourcestart : IMarkupPointer, ppointersourcefinish : IMarkupPointer, ppointertarget : IMarkupPointer) : HRESULT
    @lpVtbl.value.move.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, IMarkupPointer, HRESULT)).call(ppointersourcestart, ppointersourcefinish, ppointertarget)
  end
  def insert_text(pchtext : LibC::LPWSTR, cch : Int32, ppointertarget : IMarkupPointer) : HRESULT
    @lpVtbl.value.insert_text.unsafe_as(Proc(LibC::LPWSTR, Int32, IMarkupPointer, HRESULT)).call(pchtext, cch, ppointertarget)
  end
  def parse_string(pchhtml : LibC::LPWSTR, dwflags : UInt32, ppcontainerresult : IMarkupContainer*, pppointerstart : IMarkupPointer, pppointerfinish : IMarkupPointer) : HRESULT
    @lpVtbl.value.parse_string.unsafe_as(Proc(LibC::LPWSTR, UInt32, IMarkupContainer*, IMarkupPointer, IMarkupPointer, HRESULT)).call(pchhtml, dwflags, ppcontainerresult, pppointerstart, pppointerfinish)
  end
  def parse_global(hglobalhtml : LibC::IntPtrT, dwflags : UInt32, ppcontainerresult : IMarkupContainer*, ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer) : HRESULT
    @lpVtbl.value.parse_global.unsafe_as(Proc(LibC::IntPtrT, UInt32, IMarkupContainer*, IMarkupPointer, IMarkupPointer, HRESULT)).call(hglobalhtml, dwflags, ppcontainerresult, ppointerstart, ppointerfinish)
  end
  def is_scoped_element(pelement : IHTMLElement, pfscoped : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_scoped_element.unsafe_as(Proc(IHTMLElement, LibC::BOOL*, HRESULT)).call(pelement, pfscoped)
  end
  def get_element_tag_id(pelement : IHTMLElement, ptagid : ELEMENT_TAG_ID*) : HRESULT
    @lpVtbl.value.get_element_tag_id.unsafe_as(Proc(IHTMLElement, ELEMENT_TAG_ID*, HRESULT)).call(pelement, ptagid)
  end
  def get_tag_id_for_name(bstrname : UInt8*, ptagid : ELEMENT_TAG_ID*) : HRESULT
    @lpVtbl.value.get_tag_id_for_name.unsafe_as(Proc(UInt8*, ELEMENT_TAG_ID*, HRESULT)).call(bstrname, ptagid)
  end
  def get_name_for_tag_id(tagid : ELEMENT_TAG_ID, pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.get_name_for_tag_id.unsafe_as(Proc(ELEMENT_TAG_ID, UInt8**, HRESULT)).call(tagid, pbstrname)
  end
  def move_pointers_to_range(pirange : IHTMLTxtRange, ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer) : HRESULT
    @lpVtbl.value.move_pointers_to_range.unsafe_as(Proc(IHTMLTxtRange, IMarkupPointer, IMarkupPointer, HRESULT)).call(pirange, ppointerstart, ppointerfinish)
  end
  def move_range_to_pointers(ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer, pirange : IHTMLTxtRange) : HRESULT
    @lpVtbl.value.move_range_to_pointers.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, IHTMLTxtRange, HRESULT)).call(ppointerstart, ppointerfinish, pirange)
  end
  def begin_undo_unit(pchtitle : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.begin_undo_unit.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pchtitle)
  end
  def end_undo_unit : HRESULT
    @lpVtbl.value.end_undo_unit.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IMarkupServices2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_markup_pointer(pppointer : IMarkupPointer*) : HRESULT
    @lpVtbl.value.create_markup_pointer.unsafe_as(Proc(IMarkupPointer*, HRESULT)).call(pppointer)
  end
  def create_markup_container(ppmarkupcontainer : IMarkupContainer*) : HRESULT
    @lpVtbl.value.create_markup_container.unsafe_as(Proc(IMarkupContainer*, HRESULT)).call(ppmarkupcontainer)
  end
  def create_element(tagid : ELEMENT_TAG_ID, pchattributes : LibC::LPWSTR, ppelement : IHTMLElement*) : HRESULT
    @lpVtbl.value.create_element.unsafe_as(Proc(ELEMENT_TAG_ID, LibC::LPWSTR, IHTMLElement*, HRESULT)).call(tagid, pchattributes, ppelement)
  end
  def clone_element(pelemclonethis : IHTMLElement, ppelementtheclone : IHTMLElement*) : HRESULT
    @lpVtbl.value.clone_element.unsafe_as(Proc(IHTMLElement, IHTMLElement*, HRESULT)).call(pelemclonethis, ppelementtheclone)
  end
  def insert_element(pelementinsert : IHTMLElement, ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer) : HRESULT
    @lpVtbl.value.insert_element.unsafe_as(Proc(IHTMLElement, IMarkupPointer, IMarkupPointer, HRESULT)).call(pelementinsert, ppointerstart, ppointerfinish)
  end
  def remove_element(pelementremove : IHTMLElement) : HRESULT
    @lpVtbl.value.remove_element.unsafe_as(Proc(IHTMLElement, HRESULT)).call(pelementremove)
  end
  def remove(ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer) : HRESULT
    @lpVtbl.value.remove.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, HRESULT)).call(ppointerstart, ppointerfinish)
  end
  def copy(ppointersourcestart : IMarkupPointer, ppointersourcefinish : IMarkupPointer, ppointertarget : IMarkupPointer) : HRESULT
    @lpVtbl.value.copy.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, IMarkupPointer, HRESULT)).call(ppointersourcestart, ppointersourcefinish, ppointertarget)
  end
  def move(ppointersourcestart : IMarkupPointer, ppointersourcefinish : IMarkupPointer, ppointertarget : IMarkupPointer) : HRESULT
    @lpVtbl.value.move.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, IMarkupPointer, HRESULT)).call(ppointersourcestart, ppointersourcefinish, ppointertarget)
  end
  def insert_text(pchtext : LibC::LPWSTR, cch : Int32, ppointertarget : IMarkupPointer) : HRESULT
    @lpVtbl.value.insert_text.unsafe_as(Proc(LibC::LPWSTR, Int32, IMarkupPointer, HRESULT)).call(pchtext, cch, ppointertarget)
  end
  def parse_string(pchhtml : LibC::LPWSTR, dwflags : UInt32, ppcontainerresult : IMarkupContainer*, pppointerstart : IMarkupPointer, pppointerfinish : IMarkupPointer) : HRESULT
    @lpVtbl.value.parse_string.unsafe_as(Proc(LibC::LPWSTR, UInt32, IMarkupContainer*, IMarkupPointer, IMarkupPointer, HRESULT)).call(pchhtml, dwflags, ppcontainerresult, pppointerstart, pppointerfinish)
  end
  def parse_global(hglobalhtml : LibC::IntPtrT, dwflags : UInt32, ppcontainerresult : IMarkupContainer*, ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer) : HRESULT
    @lpVtbl.value.parse_global.unsafe_as(Proc(LibC::IntPtrT, UInt32, IMarkupContainer*, IMarkupPointer, IMarkupPointer, HRESULT)).call(hglobalhtml, dwflags, ppcontainerresult, ppointerstart, ppointerfinish)
  end
  def is_scoped_element(pelement : IHTMLElement, pfscoped : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_scoped_element.unsafe_as(Proc(IHTMLElement, LibC::BOOL*, HRESULT)).call(pelement, pfscoped)
  end
  def get_element_tag_id(pelement : IHTMLElement, ptagid : ELEMENT_TAG_ID*) : HRESULT
    @lpVtbl.value.get_element_tag_id.unsafe_as(Proc(IHTMLElement, ELEMENT_TAG_ID*, HRESULT)).call(pelement, ptagid)
  end
  def get_tag_id_for_name(bstrname : UInt8*, ptagid : ELEMENT_TAG_ID*) : HRESULT
    @lpVtbl.value.get_tag_id_for_name.unsafe_as(Proc(UInt8*, ELEMENT_TAG_ID*, HRESULT)).call(bstrname, ptagid)
  end
  def get_name_for_tag_id(tagid : ELEMENT_TAG_ID, pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.get_name_for_tag_id.unsafe_as(Proc(ELEMENT_TAG_ID, UInt8**, HRESULT)).call(tagid, pbstrname)
  end
  def move_pointers_to_range(pirange : IHTMLTxtRange, ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer) : HRESULT
    @lpVtbl.value.move_pointers_to_range.unsafe_as(Proc(IHTMLTxtRange, IMarkupPointer, IMarkupPointer, HRESULT)).call(pirange, ppointerstart, ppointerfinish)
  end
  def move_range_to_pointers(ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer, pirange : IHTMLTxtRange) : HRESULT
    @lpVtbl.value.move_range_to_pointers.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, IHTMLTxtRange, HRESULT)).call(ppointerstart, ppointerfinish, pirange)
  end
  def begin_undo_unit(pchtitle : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.begin_undo_unit.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pchtitle)
  end
  def end_undo_unit : HRESULT
    @lpVtbl.value.end_undo_unit.unsafe_as(Proc(HRESULT)).call
  end
  def parse_global_ex(hglobalhtml : LibC::IntPtrT, dwflags : UInt32, pcontext : IMarkupContainer, ppcontainerresult : IMarkupContainer*, ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer) : HRESULT
    @lpVtbl.value.parse_global_ex.unsafe_as(Proc(LibC::IntPtrT, UInt32, IMarkupContainer, IMarkupContainer*, IMarkupPointer, IMarkupPointer, HRESULT)).call(hglobalhtml, dwflags, pcontext, ppcontainerresult, ppointerstart, ppointerfinish)
  end
  def validate_elements(ppointerstart : IMarkupPointer, ppointerfinish : IMarkupPointer, ppointertarget : IMarkupPointer, ppointerstatus : IMarkupPointer, ppelemfailbottom : IHTMLElement*, ppelemfailtop : IHTMLElement*) : HRESULT
    @lpVtbl.value.validate_elements.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, IMarkupPointer, IMarkupPointer, IHTMLElement*, IHTMLElement*, HRESULT)).call(ppointerstart, ppointerfinish, ppointertarget, ppointerstatus, ppelemfailbottom, ppelemfailtop)
  end
  def save_segments_to_clipboard(psegmentlist : ISegmentList, dwflags : UInt32) : HRESULT
    @lpVtbl.value.save_segments_to_clipboard.unsafe_as(Proc(ISegmentList, UInt32, HRESULT)).call(psegmentlist, dwflags)
  end
end
struct LibWin32::IHTMLChangePlayback
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def exec_change(pbrecord : UInt8*, fforward : LibC::BOOL) : HRESULT
    @lpVtbl.value.exec_change.unsafe_as(Proc(UInt8*, LibC::BOOL, HRESULT)).call(pbrecord, fforward)
  end
end
struct LibWin32::IMarkupPointer2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def owning_doc(ppdoc : IHTMLDocument2*) : HRESULT
    @lpVtbl.value.owning_doc.unsafe_as(Proc(IHTMLDocument2*, HRESULT)).call(ppdoc)
  end
  def gravity(pgravity : POINTER_GRAVITY*) : HRESULT
    @lpVtbl.value.gravity.unsafe_as(Proc(POINTER_GRAVITY*, HRESULT)).call(pgravity)
  end
  def set_gravity(gravity : POINTER_GRAVITY) : HRESULT
    @lpVtbl.value.set_gravity.unsafe_as(Proc(POINTER_GRAVITY, HRESULT)).call(gravity)
  end
  def cling(pfcling : LibC::BOOL*) : HRESULT
    @lpVtbl.value.cling.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfcling)
  end
  def set_cling(fcling : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_cling.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fcling)
  end
  def unposition : HRESULT
    @lpVtbl.value.unposition.unsafe_as(Proc(HRESULT)).call
  end
  def is_positioned(pfpositioned : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_positioned.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfpositioned)
  end
  def get_container(ppcontainer : IMarkupContainer*) : HRESULT
    @lpVtbl.value.get_container.unsafe_as(Proc(IMarkupContainer*, HRESULT)).call(ppcontainer)
  end
  def move_adjacent_to_element(pelement : IHTMLElement, eadj : ELEMENT_ADJACENCY) : HRESULT
    @lpVtbl.value.move_adjacent_to_element.unsafe_as(Proc(IHTMLElement, ELEMENT_ADJACENCY, HRESULT)).call(pelement, eadj)
  end
  def move_to_pointer(ppointer : IMarkupPointer) : HRESULT
    @lpVtbl.value.move_to_pointer.unsafe_as(Proc(IMarkupPointer, HRESULT)).call(ppointer)
  end
  def move_to_container(pcontainer : IMarkupContainer, fatstart : LibC::BOOL) : HRESULT
    @lpVtbl.value.move_to_container.unsafe_as(Proc(IMarkupContainer, LibC::BOOL, HRESULT)).call(pcontainer, fatstart)
  end
  def left(fmove : LibC::BOOL, pcontext : MARKUP_CONTEXT_TYPE*, ppelement : IHTMLElement*, pcch : Int32*, pchtext : Char*) : HRESULT
    @lpVtbl.value.left.unsafe_as(Proc(LibC::BOOL, MARKUP_CONTEXT_TYPE*, IHTMLElement*, Int32*, Char*, HRESULT)).call(fmove, pcontext, ppelement, pcch, pchtext)
  end
  def right(fmove : LibC::BOOL, pcontext : MARKUP_CONTEXT_TYPE*, ppelement : IHTMLElement*, pcch : Int32*, pchtext : Char*) : HRESULT
    @lpVtbl.value.right.unsafe_as(Proc(LibC::BOOL, MARKUP_CONTEXT_TYPE*, IHTMLElement*, Int32*, Char*, HRESULT)).call(fmove, pcontext, ppelement, pcch, pchtext)
  end
  def current_scope(ppelemcurrent : IHTMLElement*) : HRESULT
    @lpVtbl.value.current_scope.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(ppelemcurrent)
  end
  def is_left_of(ppointerthat : IMarkupPointer, pfresult : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_left_of.unsafe_as(Proc(IMarkupPointer, LibC::BOOL*, HRESULT)).call(ppointerthat, pfresult)
  end
  def is_left_of_or_equal_to(ppointerthat : IMarkupPointer, pfresult : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_left_of_or_equal_to.unsafe_as(Proc(IMarkupPointer, LibC::BOOL*, HRESULT)).call(ppointerthat, pfresult)
  end
  def is_right_of(ppointerthat : IMarkupPointer, pfresult : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_right_of.unsafe_as(Proc(IMarkupPointer, LibC::BOOL*, HRESULT)).call(ppointerthat, pfresult)
  end
  def is_right_of_or_equal_to(ppointerthat : IMarkupPointer, pfresult : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_right_of_or_equal_to.unsafe_as(Proc(IMarkupPointer, LibC::BOOL*, HRESULT)).call(ppointerthat, pfresult)
  end
  def is_equal_to(ppointerthat : IMarkupPointer, pfareequal : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_equal_to.unsafe_as(Proc(IMarkupPointer, LibC::BOOL*, HRESULT)).call(ppointerthat, pfareequal)
  end
  def move_unit(muaction : MOVEUNIT_ACTION) : HRESULT
    @lpVtbl.value.move_unit.unsafe_as(Proc(MOVEUNIT_ACTION, HRESULT)).call(muaction)
  end
  def find_text(pchfindtext : LibC::LPWSTR, dwflags : UInt32, piendmatch : IMarkupPointer, piendsearch : IMarkupPointer) : HRESULT
    @lpVtbl.value.find_text.unsafe_as(Proc(LibC::LPWSTR, UInt32, IMarkupPointer, IMarkupPointer, HRESULT)).call(pchfindtext, dwflags, piendmatch, piendsearch)
  end
  def is_at_word_break(pfatbreak : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_at_word_break.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfatbreak)
  end
  def get_markup_position(plmp : Int32*) : HRESULT
    @lpVtbl.value.get_markup_position.unsafe_as(Proc(Int32*, HRESULT)).call(plmp)
  end
  def move_to_markup_position(pcontainer : IMarkupContainer, lmp : Int32) : HRESULT
    @lpVtbl.value.move_to_markup_position.unsafe_as(Proc(IMarkupContainer, Int32, HRESULT)).call(pcontainer, lmp)
  end
  def move_unit_bounded(muaction : MOVEUNIT_ACTION, piboundary : IMarkupPointer) : HRESULT
    @lpVtbl.value.move_unit_bounded.unsafe_as(Proc(MOVEUNIT_ACTION, IMarkupPointer, HRESULT)).call(muaction, piboundary)
  end
  def is_inside_url(pright : IMarkupPointer, pfresult : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_inside_url.unsafe_as(Proc(IMarkupPointer, LibC::BOOL*, HRESULT)).call(pright, pfresult)
  end
  def move_to_content(pielement : IHTMLElement, fatstart : LibC::BOOL) : HRESULT
    @lpVtbl.value.move_to_content.unsafe_as(Proc(IHTMLElement, LibC::BOOL, HRESULT)).call(pielement, fatstart)
  end
end
struct LibWin32::IMarkupTextFrags
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_text_frag_count(pcfrags : Int32*) : HRESULT
    @lpVtbl.value.get_text_frag_count.unsafe_as(Proc(Int32*, HRESULT)).call(pcfrags)
  end
  def get_text_frag(ifrag : Int32, pbstrfrag : UInt8**, ppointerfrag : IMarkupPointer) : HRESULT
    @lpVtbl.value.get_text_frag.unsafe_as(Proc(Int32, UInt8**, IMarkupPointer, HRESULT)).call(ifrag, pbstrfrag, ppointerfrag)
  end
  def remove_text_frag(ifrag : Int32) : HRESULT
    @lpVtbl.value.remove_text_frag.unsafe_as(Proc(Int32, HRESULT)).call(ifrag)
  end
  def insert_text_frag(ifrag : Int32, bstrinsert : UInt8*, ppointerinsert : IMarkupPointer) : HRESULT
    @lpVtbl.value.insert_text_frag.unsafe_as(Proc(Int32, UInt8*, IMarkupPointer, HRESULT)).call(ifrag, bstrinsert, ppointerinsert)
  end
  def find_text_frag_from_markup_pointer(ppointerfind : IMarkupPointer, pifrag : Int32*, pffragfound : LibC::BOOL*) : HRESULT
    @lpVtbl.value.find_text_frag_from_markup_pointer.unsafe_as(Proc(IMarkupPointer, Int32*, LibC::BOOL*, HRESULT)).call(ppointerfind, pifrag, pffragfound)
  end
end
struct LibWin32::IXMLGenericParse
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_generic_parse(fdogeneric : Int16) : HRESULT
    @lpVtbl.value.set_generic_parse.unsafe_as(Proc(Int16, HRESULT)).call(fdogeneric)
  end
end
struct LibWin32::IHTMLEditHost
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def snap_rect(pielement : IHTMLElement, prcnew : RECT*, ehandle : ELEMENT_CORNER) : HRESULT
    @lpVtbl.value.snap_rect.unsafe_as(Proc(IHTMLElement, RECT*, ELEMENT_CORNER, HRESULT)).call(pielement, prcnew, ehandle)
  end
end
struct LibWin32::IHTMLEditHost2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def snap_rect(pielement : IHTMLElement, prcnew : RECT*, ehandle : ELEMENT_CORNER) : HRESULT
    @lpVtbl.value.snap_rect.unsafe_as(Proc(IHTMLElement, RECT*, ELEMENT_CORNER, HRESULT)).call(pielement, prcnew, ehandle)
  end
  def pre_drag : HRESULT
    @lpVtbl.value.pre_drag.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ISequenceNumber
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_sequence_number(ncurrent : Int32, pnnew : Int32*) : HRESULT
    @lpVtbl.value.get_sequence_number.unsafe_as(Proc(Int32, Int32*, HRESULT)).call(ncurrent, pnnew)
  end
end
struct LibWin32::IIMEServices
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_active_imm(ppactiveimm : IActiveIMMApp*) : HRESULT
    @lpVtbl.value.get_active_imm.unsafe_as(Proc(IActiveIMMApp*, HRESULT)).call(ppactiveimm)
  end
end
struct LibWin32::ISelectionServicesListener
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def begin_selection_undo : HRESULT
    @lpVtbl.value.begin_selection_undo.unsafe_as(Proc(HRESULT)).call
  end
  def end_selection_undo : HRESULT
    @lpVtbl.value.end_selection_undo.unsafe_as(Proc(HRESULT)).call
  end
  def on_selected_element_exit(pielementstart : IMarkupPointer, pielementend : IMarkupPointer, pielementcontentstart : IMarkupPointer, pielementcontentend : IMarkupPointer) : HRESULT
    @lpVtbl.value.on_selected_element_exit.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, IMarkupPointer, IMarkupPointer, HRESULT)).call(pielementstart, pielementend, pielementcontentstart, pielementcontentend)
  end
  def on_change_type(etype : SELECTION_TYPE, pilistener : ISelectionServicesListener) : HRESULT
    @lpVtbl.value.on_change_type.unsafe_as(Proc(SELECTION_TYPE, ISelectionServicesListener, HRESULT)).call(etype, pilistener)
  end
  def get_type_detail(ptypedetail : UInt8**) : HRESULT
    @lpVtbl.value.get_type_detail.unsafe_as(Proc(UInt8**, HRESULT)).call(ptypedetail)
  end
end
struct LibWin32::ISelectionServices
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_selection_type(etype : SELECTION_TYPE, pilistener : ISelectionServicesListener) : HRESULT
    @lpVtbl.value.set_selection_type.unsafe_as(Proc(SELECTION_TYPE, ISelectionServicesListener, HRESULT)).call(etype, pilistener)
  end
  def get_markup_container(ppicontainer : IMarkupContainer*) : HRESULT
    @lpVtbl.value.get_markup_container.unsafe_as(Proc(IMarkupContainer*, HRESULT)).call(ppicontainer)
  end
  def add_segment(pistart : IMarkupPointer, piend : IMarkupPointer, ppisegmentadded : ISegment*) : HRESULT
    @lpVtbl.value.add_segment.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, ISegment*, HRESULT)).call(pistart, piend, ppisegmentadded)
  end
  def add_element_segment(pielement : IHTMLElement, ppisegmentadded : IElementSegment*) : HRESULT
    @lpVtbl.value.add_element_segment.unsafe_as(Proc(IHTMLElement, IElementSegment*, HRESULT)).call(pielement, ppisegmentadded)
  end
  def remove_segment(pisegment : ISegment) : HRESULT
    @lpVtbl.value.remove_segment.unsafe_as(Proc(ISegment, HRESULT)).call(pisegment)
  end
  def get_selection_services_listener(ppiselectionserviceslistener : ISelectionServicesListener*) : HRESULT
    @lpVtbl.value.get_selection_services_listener.unsafe_as(Proc(ISelectionServicesListener*, HRESULT)).call(ppiselectionserviceslistener)
  end
end
struct LibWin32::IHTMLEditDesigner
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def pre_handle_event(inevtdispid : Int32, pieventobj : IHTMLEventObj) : HRESULT
    @lpVtbl.value.pre_handle_event.unsafe_as(Proc(Int32, IHTMLEventObj, HRESULT)).call(inevtdispid, pieventobj)
  end
  def post_handle_event(inevtdispid : Int32, pieventobj : IHTMLEventObj) : HRESULT
    @lpVtbl.value.post_handle_event.unsafe_as(Proc(Int32, IHTMLEventObj, HRESULT)).call(inevtdispid, pieventobj)
  end
  def translate_accelerator(inevtdispid : Int32, pieventobj : IHTMLEventObj) : HRESULT
    @lpVtbl.value.translate_accelerator.unsafe_as(Proc(Int32, IHTMLEventObj, HRESULT)).call(inevtdispid, pieventobj)
  end
  def post_editor_event_notify(inevtdispid : Int32, pieventobj : IHTMLEventObj) : HRESULT
    @lpVtbl.value.post_editor_event_notify.unsafe_as(Proc(Int32, IHTMLEventObj, HRESULT)).call(inevtdispid, pieventobj)
  end
end
struct LibWin32::IHTMLEditServices
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_designer(pidesigner : IHTMLEditDesigner) : HRESULT
    @lpVtbl.value.add_designer.unsafe_as(Proc(IHTMLEditDesigner, HRESULT)).call(pidesigner)
  end
  def remove_designer(pidesigner : IHTMLEditDesigner) : HRESULT
    @lpVtbl.value.remove_designer.unsafe_as(Proc(IHTMLEditDesigner, HRESULT)).call(pidesigner)
  end
  def get_selection_services(picontainer : IMarkupContainer, ppselsvc : ISelectionServices*) : HRESULT
    @lpVtbl.value.get_selection_services.unsafe_as(Proc(IMarkupContainer, ISelectionServices*, HRESULT)).call(picontainer, ppselsvc)
  end
  def move_to_selection_anchor(pistartanchor : IMarkupPointer) : HRESULT
    @lpVtbl.value.move_to_selection_anchor.unsafe_as(Proc(IMarkupPointer, HRESULT)).call(pistartanchor)
  end
  def move_to_selection_end(piendanchor : IMarkupPointer) : HRESULT
    @lpVtbl.value.move_to_selection_end.unsafe_as(Proc(IMarkupPointer, HRESULT)).call(piendanchor)
  end
  def select_range(pstart : IMarkupPointer, pend : IMarkupPointer, etype : SELECTION_TYPE) : HRESULT
    @lpVtbl.value.select_range.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, SELECTION_TYPE, HRESULT)).call(pstart, pend, etype)
  end
end
struct LibWin32::IHTMLEditServices2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_designer(pidesigner : IHTMLEditDesigner) : HRESULT
    @lpVtbl.value.add_designer.unsafe_as(Proc(IHTMLEditDesigner, HRESULT)).call(pidesigner)
  end
  def remove_designer(pidesigner : IHTMLEditDesigner) : HRESULT
    @lpVtbl.value.remove_designer.unsafe_as(Proc(IHTMLEditDesigner, HRESULT)).call(pidesigner)
  end
  def get_selection_services(picontainer : IMarkupContainer, ppselsvc : ISelectionServices*) : HRESULT
    @lpVtbl.value.get_selection_services.unsafe_as(Proc(IMarkupContainer, ISelectionServices*, HRESULT)).call(picontainer, ppselsvc)
  end
  def move_to_selection_anchor(pistartanchor : IMarkupPointer) : HRESULT
    @lpVtbl.value.move_to_selection_anchor.unsafe_as(Proc(IMarkupPointer, HRESULT)).call(pistartanchor)
  end
  def move_to_selection_end(piendanchor : IMarkupPointer) : HRESULT
    @lpVtbl.value.move_to_selection_end.unsafe_as(Proc(IMarkupPointer, HRESULT)).call(piendanchor)
  end
  def select_range(pstart : IMarkupPointer, pend : IMarkupPointer, etype : SELECTION_TYPE) : HRESULT
    @lpVtbl.value.select_range.unsafe_as(Proc(IMarkupPointer, IMarkupPointer, SELECTION_TYPE, HRESULT)).call(pstart, pend, etype)
  end
  def move_to_selection_anchor_ex(pistartanchor : IDisplayPointer) : HRESULT
    @lpVtbl.value.move_to_selection_anchor_ex.unsafe_as(Proc(IDisplayPointer, HRESULT)).call(pistartanchor)
  end
  def move_to_selection_end_ex(piendanchor : IDisplayPointer) : HRESULT
    @lpVtbl.value.move_to_selection_end_ex.unsafe_as(Proc(IDisplayPointer, HRESULT)).call(piendanchor)
  end
  def freeze_virtual_caret_pos(frecompute : LibC::BOOL) : HRESULT
    @lpVtbl.value.freeze_virtual_caret_pos.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(frecompute)
  end
  def un_freeze_virtual_caret_pos(freset : LibC::BOOL) : HRESULT
    @lpVtbl.value.un_freeze_virtual_caret_pos.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(freset)
  end
end
struct LibWin32::IHTMLComputedStyle
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_bold(p : Int16*) : HRESULT
    @lpVtbl.value.get_bold.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_italic(p : Int16*) : HRESULT
    @lpVtbl.value.get_italic.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_underline(p : Int16*) : HRESULT
    @lpVtbl.value.get_underline.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_overline(p : Int16*) : HRESULT
    @lpVtbl.value.get_overline.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_strike_out(p : Int16*) : HRESULT
    @lpVtbl.value.get_strike_out.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_sub_script(p : Int16*) : HRESULT
    @lpVtbl.value.get_sub_script.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_super_script(p : Int16*) : HRESULT
    @lpVtbl.value.get_super_script.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_explicit_face(p : Int16*) : HRESULT
    @lpVtbl.value.get_explicit_face.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_font_weight(p : Int32*) : HRESULT
    @lpVtbl.value.get_font_weight.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_font_size(p : Int32*) : HRESULT
    @lpVtbl.value.get_font_size.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get_font_name(p : Int8*) : HRESULT
    @lpVtbl.value.get_font_name.unsafe_as(Proc(Int8*, HRESULT)).call(p)
  end
  def get_has_bg_color(p : Int16*) : HRESULT
    @lpVtbl.value.get_has_bg_color.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_text_color(p : UInt32*) : HRESULT
    @lpVtbl.value.get_text_color.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def get_background_color(p : UInt32*) : HRESULT
    @lpVtbl.value.get_background_color.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def get_pre_formatted(p : Int16*) : HRESULT
    @lpVtbl.value.get_pre_formatted.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_direction(p : Int16*) : HRESULT
    @lpVtbl.value.get_direction.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_block_direction(p : Int16*) : HRESULT
    @lpVtbl.value.get_block_direction.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def get_ol(p : Int16*) : HRESULT
    @lpVtbl.value.get_ol.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def is_equal(pcomputedstyle : IHTMLComputedStyle, pfequal : Int16*) : HRESULT
    @lpVtbl.value.is_equal.unsafe_as(Proc(IHTMLComputedStyle, Int16*, HRESULT)).call(pcomputedstyle, pfequal)
  end
end
struct LibWin32::IDeveloperConsoleMessageReceiver
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def write(source : LibC::LPWSTR, level : DEV_CONSOLE_MESSAGE_LEVEL, messageid : Int32, messagetext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.write.unsafe_as(Proc(LibC::LPWSTR, DEV_CONSOLE_MESSAGE_LEVEL, Int32, LibC::LPWSTR, HRESULT)).call(source, level, messageid, messagetext)
  end
  def write_with_url(source : LibC::LPWSTR, level : DEV_CONSOLE_MESSAGE_LEVEL, messageid : Int32, messagetext : LibC::LPWSTR, fileurl : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.write_with_url.unsafe_as(Proc(LibC::LPWSTR, DEV_CONSOLE_MESSAGE_LEVEL, Int32, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(source, level, messageid, messagetext, fileurl)
  end
  def write_with_url_and_line(source : LibC::LPWSTR, level : DEV_CONSOLE_MESSAGE_LEVEL, messageid : Int32, messagetext : LibC::LPWSTR, fileurl : LibC::LPWSTR, line : UInt32) : HRESULT
    @lpVtbl.value.write_with_url_and_line.unsafe_as(Proc(LibC::LPWSTR, DEV_CONSOLE_MESSAGE_LEVEL, Int32, LibC::LPWSTR, LibC::LPWSTR, UInt32, HRESULT)).call(source, level, messageid, messagetext, fileurl, line)
  end
  def write_with_url_line_and_column(source : LibC::LPWSTR, level : DEV_CONSOLE_MESSAGE_LEVEL, messageid : Int32, messagetext : LibC::LPWSTR, fileurl : LibC::LPWSTR, line : UInt32, column : UInt32) : HRESULT
    @lpVtbl.value.write_with_url_line_and_column.unsafe_as(Proc(LibC::LPWSTR, DEV_CONSOLE_MESSAGE_LEVEL, Int32, LibC::LPWSTR, LibC::LPWSTR, UInt32, UInt32, HRESULT)).call(source, level, messageid, messagetext, fileurl, line, column)
  end
end
struct LibWin32::IScriptEventHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def function_name(pbstrfunctionname : UInt8**) : HRESULT
    @lpVtbl.value.function_name.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrfunctionname)
  end
  def debug_document_context(ppdebugdocumentcontext : IUnknown*) : HRESULT
    @lpVtbl.value.debug_document_context.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppdebugdocumentcontext)
  end
  def event_handler_dispatch(ppdisphandler : IDispatch*) : HRESULT
    @lpVtbl.value.event_handler_dispatch.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisphandler)
  end
  def uses_capture(pfusescapture : LibC::BOOL*) : HRESULT
    @lpVtbl.value.uses_capture.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfusescapture)
  end
  def cookie(pullcookie : UInt64*) : HRESULT
    @lpVtbl.value.cookie.unsafe_as(Proc(UInt64*, HRESULT)).call(pullcookie)
  end
end
struct LibWin32::IDebugCallbackNotificationHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def requested_callback_types(pcallbackmask : UInt32*) : HRESULT
    @lpVtbl.value.requested_callback_types.unsafe_as(Proc(UInt32*, HRESULT)).call(pcallbackmask)
  end
  def before_dispatch_event(pevent : IUnknown) : HRESULT
    @lpVtbl.value.before_dispatch_event.unsafe_as(Proc(IUnknown, HRESULT)).call(pevent)
  end
  def dispatch_event_complete(pevent : IUnknown, propagationstatus : UInt32) : HRESULT
    @lpVtbl.value.dispatch_event_complete.unsafe_as(Proc(IUnknown, UInt32, HRESULT)).call(pevent, propagationstatus)
  end
  def before_invoke_dom_callback(pevent : IUnknown, pcallback : IScriptEventHandler, estage : DOM_EVENT_PHASE, propagationstatus : UInt32) : HRESULT
    @lpVtbl.value.before_invoke_dom_callback.unsafe_as(Proc(IUnknown, IScriptEventHandler, DOM_EVENT_PHASE, UInt32, HRESULT)).call(pevent, pcallback, estage, propagationstatus)
  end
  def invoke_dom_callback_complete(pevent : IUnknown, pcallback : IScriptEventHandler, estage : DOM_EVENT_PHASE, propagationstatus : UInt32) : HRESULT
    @lpVtbl.value.invoke_dom_callback_complete.unsafe_as(Proc(IUnknown, IScriptEventHandler, DOM_EVENT_PHASE, UInt32, HRESULT)).call(pevent, pcallback, estage, propagationstatus)
  end
  def before_invoke_callback(ecallbacktype : SCRIPT_TIMER_TYPE, callbackcookie : UInt32, pdisphandler : IDispatch, ullhandlercookie : UInt64, functionname : UInt8*, line : UInt32, column : UInt32, cchlength : UInt32, pdebugdocumentcontext : IUnknown) : HRESULT
    @lpVtbl.value.before_invoke_callback.unsafe_as(Proc(SCRIPT_TIMER_TYPE, UInt32, IDispatch, UInt64, UInt8*, UInt32, UInt32, UInt32, IUnknown, HRESULT)).call(ecallbacktype, callbackcookie, pdisphandler, ullhandlercookie, functionname, line, column, cchlength, pdebugdocumentcontext)
  end
  def invoke_callback_complete(ecallbacktype : SCRIPT_TIMER_TYPE, callbackcookie : UInt32, pdisphandler : IDispatch, ullhandlercookie : UInt64, functionname : UInt8*, line : UInt32, column : UInt32, cchlength : UInt32, pdebugdocumentcontext : IUnknown) : HRESULT
    @lpVtbl.value.invoke_callback_complete.unsafe_as(Proc(SCRIPT_TIMER_TYPE, UInt32, IDispatch, UInt64, UInt8*, UInt32, UInt32, UInt32, IUnknown, HRESULT)).call(ecallbacktype, callbackcookie, pdisphandler, ullhandlercookie, functionname, line, column, cchlength, pdebugdocumentcontext)
  end
end
struct LibWin32::IScriptEventHandlerSourceInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_source_info(pbstrfunctionname : UInt8**, line : UInt32*, column : UInt32*, cchlength : UInt32*) : HRESULT
    @lpVtbl.value.get_source_info.unsafe_as(Proc(UInt8**, UInt32*, UInt32*, UInt32*, HRESULT)).call(pbstrfunctionname, line, column, cchlength)
  end
end
struct LibWin32::IDOMEventRegistrationCallback
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_dom_event_listener_added(pszeventtype : LibC::LPWSTR, phandler : IScriptEventHandler) : HRESULT
    @lpVtbl.value.on_dom_event_listener_added.unsafe_as(Proc(LibC::LPWSTR, IScriptEventHandler, HRESULT)).call(pszeventtype, phandler)
  end
  def on_dom_event_listener_removed(ullcookie : UInt64) : HRESULT
    @lpVtbl.value.on_dom_event_listener_removed.unsafe_as(Proc(UInt64, HRESULT)).call(ullcookie)
  end
end
struct LibWin32::IEventTarget2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_registered_event_types(ppeventtypearray : SAFEARRAY**) : HRESULT
    @lpVtbl.value.get_registered_event_types.unsafe_as(Proc(SAFEARRAY**, HRESULT)).call(ppeventtypearray)
  end
  def get_listeners_for_type(pszeventtype : LibC::LPWSTR, ppeventhandlerarray : SAFEARRAY**) : HRESULT
    @lpVtbl.value.get_listeners_for_type.unsafe_as(Proc(LibC::LPWSTR, SAFEARRAY**, HRESULT)).call(pszeventtype, ppeventhandlerarray)
  end
  def register_for_dom_event_listeners(pcallback : IDOMEventRegistrationCallback) : HRESULT
    @lpVtbl.value.register_for_dom_event_listeners.unsafe_as(Proc(IDOMEventRegistrationCallback, HRESULT)).call(pcallback)
  end
  def unregister_for_dom_event_listeners(pcallback : IDOMEventRegistrationCallback) : HRESULT
    @lpVtbl.value.unregister_for_dom_event_listeners.unsafe_as(Proc(IDOMEventRegistrationCallback, HRESULT)).call(pcallback)
  end
end
struct LibWin32::HTMLNamespaceEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLNamespace
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_urn(p : UInt8**) : HRESULT
    @lpVtbl.value.get_urn.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_tag_names(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_tag_names.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_ready_state(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_onreadystatechange(v : VARIANT) : HRESULT
    @lpVtbl.value.put_onreadystatechange.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_onreadystatechange(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_onreadystatechange.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def do_import(bstrimplementationurl : UInt8*) : HRESULT
    @lpVtbl.value.do_import.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrimplementationurl)
  end
  def attach_event(event : UInt8*, pdisp : IDispatch, pfresult : Int16*) : HRESULT
    @lpVtbl.value.attach_event.unsafe_as(Proc(UInt8*, IDispatch, Int16*, HRESULT)).call(event, pdisp, pfresult)
  end
  def detach_event(event : UInt8*, pdisp : IDispatch) : HRESULT
    @lpVtbl.value.detach_event.unsafe_as(Proc(UInt8*, IDispatch, HRESULT)).call(event, pdisp)
  end
end
struct LibWin32::IHTMLNamespaceCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def item(index : VARIANT, ppnamespace : IDispatch*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT, IDispatch*, HRESULT)).call(index, ppnamespace)
  end
  def add(bstrnamespace : UInt8*, bstrurn : UInt8*, implementationurl : VARIANT, ppnamespace : IDispatch*) : HRESULT
    @lpVtbl.value.add.unsafe_as(Proc(UInt8*, UInt8*, VARIANT, IDispatch*, HRESULT)).call(bstrnamespace, bstrurn, implementationurl, ppnamespace)
  end
end
struct LibWin32::DispHTMLNamespace
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispHTMLNamespaceCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLPainter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def draw(rcbounds : RECT, rcupdate : RECT, ldrawflags : Int32, hdc : HDC, pvdrawobject : Void*) : HRESULT
    @lpVtbl.value.draw.unsafe_as(Proc(RECT, RECT, Int32, HDC, Void*, HRESULT)).call(rcbounds, rcupdate, ldrawflags, hdc, pvdrawobject)
  end
  def on_resize(size : SIZE) : HRESULT
    @lpVtbl.value.on_resize.unsafe_as(Proc(SIZE, HRESULT)).call(size)
  end
  def get_painter_info(pinfo : HTML_PAINTER_INFO*) : HRESULT
    @lpVtbl.value.get_painter_info.unsafe_as(Proc(HTML_PAINTER_INFO*, HRESULT)).call(pinfo)
  end
  def hit_test_point(pt : POINT, pbhit : LibC::BOOL*, plpartid : Int32*) : HRESULT
    @lpVtbl.value.hit_test_point.unsafe_as(Proc(POINT, LibC::BOOL*, Int32*, HRESULT)).call(pt, pbhit, plpartid)
  end
end
struct LibWin32::IHTMLPaintSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def invalidate_painter_info : HRESULT
    @lpVtbl.value.invalidate_painter_info.unsafe_as(Proc(HRESULT)).call
  end
  def invalidate_rect(prcinvalid : RECT*) : HRESULT
    @lpVtbl.value.invalidate_rect.unsafe_as(Proc(RECT*, HRESULT)).call(prcinvalid)
  end
  def invalidate_region(rgninvalid : HRGN) : HRESULT
    @lpVtbl.value.invalidate_region.unsafe_as(Proc(HRGN, HRESULT)).call(rgninvalid)
  end
  def get_draw_info(lflags : Int32, pdrawinfo : HTML_PAINT_DRAW_INFO*) : HRESULT
    @lpVtbl.value.get_draw_info.unsafe_as(Proc(Int32, HTML_PAINT_DRAW_INFO*, HRESULT)).call(lflags, pdrawinfo)
  end
  def transform_global_to_local(ptglobal : POINT, pptlocal : POINT*) : HRESULT
    @lpVtbl.value.transform_global_to_local.unsafe_as(Proc(POINT, POINT*, HRESULT)).call(ptglobal, pptlocal)
  end
  def transform_local_to_global(ptlocal : POINT, pptglobal : POINT*) : HRESULT
    @lpVtbl.value.transform_local_to_global.unsafe_as(Proc(POINT, POINT*, HRESULT)).call(ptlocal, pptglobal)
  end
  def get_hit_test_cookie(plcookie : Int32*) : HRESULT
    @lpVtbl.value.get_hit_test_cookie.unsafe_as(Proc(Int32*, HRESULT)).call(plcookie)
  end
end
struct LibWin32::IHTMLPainterEventInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_event_info_flags(pleventinfoflags : Int32*) : HRESULT
    @lpVtbl.value.get_event_info_flags.unsafe_as(Proc(Int32*, HRESULT)).call(pleventinfoflags)
  end
  def get_event_target(ppelement : IHTMLElement*) : HRESULT
    @lpVtbl.value.get_event_target.unsafe_as(Proc(IHTMLElement*, HRESULT)).call(ppelement)
  end
  def set_cursor(lpartid : Int32) : HRESULT
    @lpVtbl.value.set_cursor.unsafe_as(Proc(Int32, HRESULT)).call(lpartid)
  end
  def string_from_part_id(lpartid : Int32, pbstrpart : UInt8**) : HRESULT
    @lpVtbl.value.string_from_part_id.unsafe_as(Proc(Int32, UInt8**, HRESULT)).call(lpartid, pbstrpart)
  end
end
struct LibWin32::IHTMLPainterOverlay
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_move(rcdevice : RECT) : HRESULT
    @lpVtbl.value.on_move.unsafe_as(Proc(RECT, HRESULT)).call(rcdevice)
  end
end
struct LibWin32::IHTMLIPrintCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_length(p : Int32*) : HRESULT
    @lpVtbl.value.get_length.unsafe_as(Proc(Int32*, HRESULT)).call(p)
  end
  def get__new_enum(p : IUnknown*) : HRESULT
    @lpVtbl.value.get__new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def item(index : Int32, ppiprint : IUnknown*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, IUnknown*, HRESULT)).call(index, ppiprint)
  end
end
struct LibWin32::IEnumPrivacyRecords
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def get_size(psize : UInt32*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(UInt32*, HRESULT)).call(psize)
  end
  def get_privacy_impacted(pstate : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_privacy_impacted.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pstate)
  end
  def next(pbstrurl : UInt8**, pbstrpolicyref : UInt8**, pdwreserved : Int32*, pdwprivacyflags : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt8**, UInt8**, Int32*, UInt32*, HRESULT)).call(pbstrurl, pbstrpolicyref, pdwreserved, pdwprivacyflags)
  end
end
struct LibWin32::IWPCBlockedUrls
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_count(pdwcount : UInt32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwcount)
  end
  def get_url(dwidx : UInt32, pbstrurl : UInt8**) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(UInt32, UInt8**, HRESULT)).call(dwidx, pbstrurl)
  end
end
struct LibWin32::IHTMLDOMConstructorCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_attr(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_attr.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_behavior_urns_collection(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_behavior_urns_collection.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_bookmark_collection(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_bookmark_collection.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_compatible_info(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_compatible_info.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_compatible_info_collection(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_compatible_info_collection.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_control_range_collection(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_control_range_collection.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_css_current_style_declaration(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_css_current_style_declaration.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_css_rule_list(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_css_rule_list.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_css_rule_style_declaration(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_css_rule_style_declaration.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_css_style_declaration(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_css_style_declaration.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_css_style_rule(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_css_style_rule.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_css_style_sheet(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_css_style_sheet.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_data_transfer(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_data_transfer.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_dom_implementation(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_dom_implementation.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_event(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_event.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_history(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_history.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_htc_element_behavior_defaults(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_htc_element_behavior_defaults.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_anchor_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_anchor_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_area_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_area_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_areas_collection(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_areas_collection.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_base_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_base_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_base_font_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_base_font_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_htmlbg_sound_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_htmlbg_sound_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_block_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_block_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_body_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_body_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_htmlbr_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_htmlbr_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_button_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_button_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_collection(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_collection.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_comment_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_comment_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_htmldd_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_htmldd_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_div_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_div_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_document(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_htmld_list_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_htmld_list_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_htmldt_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_htmldt_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_embed_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_embed_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_field_set_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_field_set_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_font_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_font_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_form_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_form_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_frame_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_frame_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_frame_set_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_frame_set_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_generic_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_generic_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_head_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_head_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_heading_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_heading_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_htmlhr_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_htmlhr_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_html_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_html_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_htmli_frame_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_htmli_frame_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_image_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_image_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_input_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_input_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_is_index_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_is_index_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_label_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_label_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_legend_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_legend_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_htmlli_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_htmlli_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_link_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_link_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_map_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_map_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_marquee_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_marquee_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_meta_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_meta_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_modeless_dialog(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_modeless_dialog.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_namespace_info(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_namespace_info.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_namespace_info_collection(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_namespace_info_collection.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_next_id_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_next_id_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_no_show_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_no_show_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_object_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_object_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_htmlo_list_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_htmlo_list_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_option_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_option_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_paragraph_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_paragraph_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_param_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_param_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_phrase_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_phrase_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_plugins_collection(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_plugins_collection.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_popup(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_popup.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_script_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_script_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_select_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_select_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_span_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_span_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_style_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_style_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_table_caption_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_table_caption_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_table_cell_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_table_cell_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_table_col_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_table_col_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_table_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_table_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_table_row_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_table_row_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_table_section_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_table_section_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_text_area_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_text_area_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_text_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_text_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_title_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_title_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_htmlu_list_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_htmlu_list_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_html_unknown_element(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_html_unknown_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_image(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_image.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_location(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_location.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_named_node_map(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_named_node_map.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_navigator(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_navigator.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_node_list(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_node_list.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_option(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_option.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_screen(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_screen.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_selection(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_selection.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_static_node_list(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_static_node_list.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_storage(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_storage.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_style_sheet_list(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_style_sheet_list.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_style_sheet_page(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_style_sheet_page.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_style_sheet_page_list(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_style_sheet_page_list.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_text(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_text.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_text_range(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_text_range.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_text_range_collection(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_text_range_collection.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_text_rectangle(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_text_rectangle.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_text_rectangle_list(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_text_rectangle_list.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_window(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_x_domain_request(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_x_domain_request.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_xml_http_request(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_xml_http_request.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDialog
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_dialog_top(v : VARIANT) : HRESULT
    @lpVtbl.value.put_dialog_top.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_dialog_top(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_dialog_top.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_dialog_left(v : VARIANT) : HRESULT
    @lpVtbl.value.put_dialog_left.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_dialog_left(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_dialog_left.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_dialog_width(v : VARIANT) : HRESULT
    @lpVtbl.value.put_dialog_width.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_dialog_width(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_dialog_width.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_dialog_height(v : VARIANT) : HRESULT
    @lpVtbl.value.put_dialog_height.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_dialog_height(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_dialog_height.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_dialog_arguments(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_dialog_arguments.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_menu_arguments(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_menu_arguments.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def put_return_value(v : VARIANT) : HRESULT
    @lpVtbl.value.put_return_value.unsafe_as(Proc(VARIANT, HRESULT)).call(v)
  end
  def get_return_value(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_return_value.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def close : HRESULT
    @lpVtbl.value.close.unsafe_as(Proc(HRESULT)).call
  end
  def to_string(string : UInt8**) : HRESULT
    @lpVtbl.value.to_string.unsafe_as(Proc(UInt8**, HRESULT)).call(string)
  end
end
struct LibWin32::IHTMLDialog2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_status(v : UInt8*) : HRESULT
    @lpVtbl.value.put_status.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_status(p : UInt8**) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_resizable(v : UInt8*) : HRESULT
    @lpVtbl.value.put_resizable.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_resizable(p : UInt8**) : HRESULT
    @lpVtbl.value.get_resizable.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLDialog3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_unadorned(v : UInt8*) : HRESULT
    @lpVtbl.value.put_unadorned.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_unadorned(p : UInt8**) : HRESULT
    @lpVtbl.value.get_unadorned.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_dialog_hide(v : UInt8*) : HRESULT
    @lpVtbl.value.put_dialog_hide.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_dialog_hide(p : UInt8**) : HRESULT
    @lpVtbl.value.get_dialog_hide.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLModelessInit
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_parameters(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_parameters.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_option_string(p : VARIANT*) : HRESULT
    @lpVtbl.value.get_option_string.unsafe_as(Proc(VARIANT*, HRESULT)).call(p)
  end
  def get_moniker(p : IUnknown*) : HRESULT
    @lpVtbl.value.get_moniker.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
  def get_document(p : IUnknown*) : HRESULT
    @lpVtbl.value.get_document.unsafe_as(Proc(IUnknown*, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLPopup
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def show(x : Int32, y : Int32, w : Int32, h : Int32, pelement : VARIANT*) : HRESULT
    @lpVtbl.value.show.unsafe_as(Proc(Int32, Int32, Int32, Int32, VARIANT*, HRESULT)).call(x, y, w, h, pelement)
  end
  def hide : HRESULT
    @lpVtbl.value.hide.unsafe_as(Proc(HRESULT)).call
  end
  def get_document(p : IHTMLDocument*) : HRESULT
    @lpVtbl.value.get_document.unsafe_as(Proc(IHTMLDocument*, HRESULT)).call(p)
  end
  def get_is_open(p : Int16*) : HRESULT
    @lpVtbl.value.get_is_open.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLPopup
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHTMLAppBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_application_name(v : UInt8*) : HRESULT
    @lpVtbl.value.put_application_name.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_application_name(p : UInt8**) : HRESULT
    @lpVtbl.value.get_application_name.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_version(v : UInt8*) : HRESULT
    @lpVtbl.value.put_version.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_version(p : UInt8**) : HRESULT
    @lpVtbl.value.get_version.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_icon(v : UInt8*) : HRESULT
    @lpVtbl.value.put_icon.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_icon(p : UInt8**) : HRESULT
    @lpVtbl.value.get_icon.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_single_instance(v : UInt8*) : HRESULT
    @lpVtbl.value.put_single_instance.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_single_instance(p : UInt8**) : HRESULT
    @lpVtbl.value.get_single_instance.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_minimize_button(v : UInt8*) : HRESULT
    @lpVtbl.value.put_minimize_button.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_minimize_button(p : UInt8**) : HRESULT
    @lpVtbl.value.get_minimize_button.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_maximize_button(v : UInt8*) : HRESULT
    @lpVtbl.value.put_maximize_button.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_maximize_button(p : UInt8**) : HRESULT
    @lpVtbl.value.get_maximize_button.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_border_style(v : UInt8*) : HRESULT
    @lpVtbl.value.put_border_style.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_border_style(p : UInt8**) : HRESULT
    @lpVtbl.value.get_border_style.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_sys_menu(v : UInt8*) : HRESULT
    @lpVtbl.value.put_sys_menu.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_sys_menu(p : UInt8**) : HRESULT
    @lpVtbl.value.get_sys_menu.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_caption(v : UInt8*) : HRESULT
    @lpVtbl.value.put_caption.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_caption(p : UInt8**) : HRESULT
    @lpVtbl.value.get_caption.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_window_state(v : UInt8*) : HRESULT
    @lpVtbl.value.put_window_state.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_window_state(p : UInt8**) : HRESULT
    @lpVtbl.value.get_window_state.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_show_in_task_bar(v : UInt8*) : HRESULT
    @lpVtbl.value.put_show_in_task_bar.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_show_in_task_bar(p : UInt8**) : HRESULT
    @lpVtbl.value.get_show_in_task_bar.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_command_line(p : UInt8**) : HRESULT
    @lpVtbl.value.get_command_line.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLAppBehavior2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_context_menu(v : UInt8*) : HRESULT
    @lpVtbl.value.put_context_menu.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_context_menu(p : UInt8**) : HRESULT
    @lpVtbl.value.get_context_menu.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_inner_border(v : UInt8*) : HRESULT
    @lpVtbl.value.put_inner_border.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_inner_border(p : UInt8**) : HRESULT
    @lpVtbl.value.get_inner_border.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_scroll(v : UInt8*) : HRESULT
    @lpVtbl.value.put_scroll.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_scroll(p : UInt8**) : HRESULT
    @lpVtbl.value.get_scroll.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_scroll_flat(v : UInt8*) : HRESULT
    @lpVtbl.value.put_scroll_flat.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_scroll_flat(p : UInt8**) : HRESULT
    @lpVtbl.value.get_scroll_flat.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_selection(v : UInt8*) : HRESULT
    @lpVtbl.value.put_selection.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_selection(p : UInt8**) : HRESULT
    @lpVtbl.value.get_selection.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHTMLAppBehavior3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_navigable(v : UInt8*) : HRESULT
    @lpVtbl.value.put_navigable.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_navigable(p : UInt8**) : HRESULT
    @lpVtbl.value.get_navigable.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::DispHTMLAppBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispIHTMLInputButtonElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispIHTMLInputTextElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispIHTMLInputFileElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispIHTMLOptionButtonElement
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DispIHTMLInputImage
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IElementNamespace
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_tag(bstrtagname : UInt8*, lflags : Int32) : HRESULT
    @lpVtbl.value.add_tag.unsafe_as(Proc(UInt8*, Int32, HRESULT)).call(bstrtagname, lflags)
  end
end
struct LibWin32::IElementNamespaceTable
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_namespace(bstrnamespace : UInt8*, bstrurn : UInt8*, lflags : Int32, pvarfactory : VARIANT*) : HRESULT
    @lpVtbl.value.add_namespace.unsafe_as(Proc(UInt8*, UInt8*, Int32, VARIANT*, HRESULT)).call(bstrnamespace, bstrurn, lflags, pvarfactory)
  end
end
struct LibWin32::IElementNamespaceFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create(pnamespace : IElementNamespace) : HRESULT
    @lpVtbl.value.create.unsafe_as(Proc(IElementNamespace, HRESULT)).call(pnamespace)
  end
end
struct LibWin32::IElementNamespaceFactory2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create(pnamespace : IElementNamespace) : HRESULT
    @lpVtbl.value.create.unsafe_as(Proc(IElementNamespace, HRESULT)).call(pnamespace)
  end
  def create_with_implementation(pnamespace : IElementNamespace, bstrimplementation : UInt8*) : HRESULT
    @lpVtbl.value.create_with_implementation.unsafe_as(Proc(IElementNamespace, UInt8*, HRESULT)).call(pnamespace, bstrimplementation)
  end
end
struct LibWin32::IElementNamespaceFactoryCallback
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def resolve(bstrnamespace : UInt8*, bstrtagname : UInt8*, bstrattrs : UInt8*, pnamespace : IElementNamespace) : HRESULT
    @lpVtbl.value.resolve.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, IElementNamespace, HRESULT)).call(bstrnamespace, bstrtagname, bstrattrs, pnamespace)
  end
end
struct LibWin32::IElementBehaviorSiteOM2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def register_event(pchevent : LibC::LPWSTR, lflags : Int32, plcookie : Int32*) : HRESULT
    @lpVtbl.value.register_event.unsafe_as(Proc(LibC::LPWSTR, Int32, Int32*, HRESULT)).call(pchevent, lflags, plcookie)
  end
  def get_event_cookie(pchevent : LibC::LPWSTR, plcookie : Int32*) : HRESULT
    @lpVtbl.value.get_event_cookie.unsafe_as(Proc(LibC::LPWSTR, Int32*, HRESULT)).call(pchevent, plcookie)
  end
  def fire_event(lcookie : Int32, peventobject : IHTMLEventObj) : HRESULT
    @lpVtbl.value.fire_event.unsafe_as(Proc(Int32, IHTMLEventObj, HRESULT)).call(lcookie, peventobject)
  end
  def create_event_object(ppeventobject : IHTMLEventObj*) : HRESULT
    @lpVtbl.value.create_event_object.unsafe_as(Proc(IHTMLEventObj*, HRESULT)).call(ppeventobject)
  end
  def register_name(pchname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.register_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pchname)
  end
  def register_urn(pchurn : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.register_urn.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pchurn)
  end
  def get_defaults(ppdefaults : IHTMLElementDefaults*) : HRESULT
    @lpVtbl.value.get_defaults.unsafe_as(Proc(IHTMLElementDefaults*, HRESULT)).call(ppdefaults)
  end
end
struct LibWin32::IElementBehaviorCategory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_category(ppchcategory : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_category.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppchcategory)
  end
end
struct LibWin32::IElementBehaviorSiteCategory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_related_behaviors(ldirection : Int32, pchcategory : LibC::LPWSTR, ppenumerator : IEnumUnknown*) : HRESULT
    @lpVtbl.value.get_related_behaviors.unsafe_as(Proc(Int32, LibC::LPWSTR, IEnumUnknown*, HRESULT)).call(ldirection, pchcategory, ppenumerator)
  end
end
struct LibWin32::IElementBehaviorSubmit
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_submit_info(psubmitdata : IHTMLSubmitData) : HRESULT
    @lpVtbl.value.get_submit_info.unsafe_as(Proc(IHTMLSubmitData, HRESULT)).call(psubmitdata)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IElementBehaviorFocus
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_focus_rect(prect : RECT*) : HRESULT
    @lpVtbl.value.get_focus_rect.unsafe_as(Proc(RECT*, HRESULT)).call(prect)
  end
end
struct LibWin32::IElementBehaviorLayout
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_size(dwflags : Int32, sizecontent : SIZE, ppttranslateby : POINT*, ppttopleft : POINT*, psizeproposed : SIZE*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(Int32, SIZE, POINT*, POINT*, SIZE*, HRESULT)).call(dwflags, sizecontent, ppttranslateby, ppttopleft, psizeproposed)
  end
  def get_layout_info(pllayoutinfo : Int32*) : HRESULT
    @lpVtbl.value.get_layout_info.unsafe_as(Proc(Int32*, HRESULT)).call(pllayoutinfo)
  end
  def get_position(lflags : Int32, ppttopleft : POINT*) : HRESULT
    @lpVtbl.value.get_position.unsafe_as(Proc(Int32, POINT*, HRESULT)).call(lflags, ppttopleft)
  end
  def map_size(psizein : SIZE*, prcout : RECT*) : HRESULT
    @lpVtbl.value.map_size.unsafe_as(Proc(SIZE*, RECT*, HRESULT)).call(psizein, prcout)
  end
end
struct LibWin32::IElementBehaviorLayout2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_text_descent(pldescent : Int32*) : HRESULT
    @lpVtbl.value.get_text_descent.unsafe_as(Proc(Int32*, HRESULT)).call(pldescent)
  end
end
struct LibWin32::IElementBehaviorSiteLayout
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def invalidate_layout_info : HRESULT
    @lpVtbl.value.invalidate_layout_info.unsafe_as(Proc(HRESULT)).call
  end
  def invalidate_size : HRESULT
    @lpVtbl.value.invalidate_size.unsafe_as(Proc(HRESULT)).call
  end
  def get_media_resolution(psizeresolution : SIZE*) : HRESULT
    @lpVtbl.value.get_media_resolution.unsafe_as(Proc(SIZE*, HRESULT)).call(psizeresolution)
  end
end
struct LibWin32::IElementBehaviorSiteLayout2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_font_info(plf : LOGFONTW*) : HRESULT
    @lpVtbl.value.get_font_info.unsafe_as(Proc(LOGFONTW*, HRESULT)).call(plf)
  end
end
struct LibWin32::IHostBehaviorInit
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def populate_namespace_table : HRESULT
    @lpVtbl.value.populate_namespace_table.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ISurfacePresenter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def present(ubuffer : UInt32, pdirty : RECT*) : HRESULT
    @lpVtbl.value.present.unsafe_as(Proc(UInt32, RECT*, HRESULT)).call(ubuffer, pdirty)
  end
  def get_buffer(backbufferindex : UInt32, riid : Guid*, ppbuffer : Void**) : HRESULT
    @lpVtbl.value.get_buffer.unsafe_as(Proc(UInt32, Guid*, Void**, HRESULT)).call(backbufferindex, riid, ppbuffer)
  end
  def is_current(piscurrent : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_current.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(piscurrent)
  end
end
struct LibWin32::IViewObjectPresentSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_surface_presenter(pdevice : IUnknown, width : UInt32, height : UInt32, backbuffercount : UInt32, format : DXGI_FORMAT, mode : VIEW_OBJECT_ALPHA_MODE, ppqueue : ISurfacePresenter*) : HRESULT
    @lpVtbl.value.create_surface_presenter.unsafe_as(Proc(IUnknown, UInt32, UInt32, UInt32, DXGI_FORMAT, VIEW_OBJECT_ALPHA_MODE, ISurfacePresenter*, HRESULT)).call(pdevice, width, height, backbuffercount, format, mode, ppqueue)
  end
  def is_hardware_composition(pishardwarecomposition : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_hardware_composition.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pishardwarecomposition)
  end
  def set_composition_mode(mode : VIEW_OBJECT_COMPOSITION_MODE) : HRESULT
    @lpVtbl.value.set_composition_mode.unsafe_as(Proc(VIEW_OBJECT_COMPOSITION_MODE, HRESULT)).call(mode)
  end
end
struct LibWin32::ICanvasPixelArrayData
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_buffer_pointer(ppbuffer : UInt8**, pbufferlength : UInt32*) : HRESULT
    @lpVtbl.value.get_buffer_pointer.unsafe_as(Proc(UInt8**, UInt32*, HRESULT)).call(ppbuffer, pbufferlength)
  end
end
struct LibWin32::IViewObjectPrint
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_print_bitmap(ppprintbitmap : IUnknown*) : HRESULT
    @lpVtbl.value.get_print_bitmap.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppprintbitmap)
  end
end
struct LibWin32::IViewObjectPresentNotifySite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_surface_presenter(pdevice : IUnknown, width : UInt32, height : UInt32, backbuffercount : UInt32, format : DXGI_FORMAT, mode : VIEW_OBJECT_ALPHA_MODE, ppqueue : ISurfacePresenter*) : HRESULT
    @lpVtbl.value.create_surface_presenter.unsafe_as(Proc(IUnknown, UInt32, UInt32, UInt32, DXGI_FORMAT, VIEW_OBJECT_ALPHA_MODE, ISurfacePresenter*, HRESULT)).call(pdevice, width, height, backbuffercount, format, mode, ppqueue)
  end
  def is_hardware_composition(pishardwarecomposition : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_hardware_composition.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pishardwarecomposition)
  end
  def set_composition_mode(mode : VIEW_OBJECT_COMPOSITION_MODE) : HRESULT
    @lpVtbl.value.set_composition_mode.unsafe_as(Proc(VIEW_OBJECT_COMPOSITION_MODE, HRESULT)).call(mode)
  end
  def request_frame : HRESULT
    @lpVtbl.value.request_frame.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IViewObjectPresentNotify
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_pre_render : HRESULT
    @lpVtbl.value.on_pre_render.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ITrackingProtection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def evaluate_url(bstrurl : UInt8*, pfallowed : LibC::BOOL*) : HRESULT
    @lpVtbl.value.evaluate_url.unsafe_as(Proc(UInt8*, LibC::BOOL*, HRESULT)).call(bstrurl, pfallowed)
  end
  def get_enabled(pfenabled : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_enabled.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfenabled)
  end
end
struct LibWin32::IBFCacheable
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def enter_bf_cache : HRESULT
    @lpVtbl.value.enter_bf_cache.unsafe_as(Proc(HRESULT)).call
  end
  def exit_bf_cache : HRESULT
    @lpVtbl.value.exit_bf_cache.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IDocObjectService
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def fire_before_navigate2(pdispatch : IDispatch, lpszurl : LibC::LPWSTR, dwflags : UInt32, lpszframename : LibC::LPWSTR, ppostdata : UInt8*, cbpostdata : UInt32, lpszheaders : LibC::LPWSTR, fplaynavsound : LibC::BOOL, pfcancel : LibC::BOOL*) : HRESULT
    @lpVtbl.value.fire_before_navigate2.unsafe_as(Proc(IDispatch, LibC::LPWSTR, UInt32, LibC::LPWSTR, UInt8*, UInt32, LibC::LPWSTR, LibC::BOOL, LibC::BOOL*, HRESULT)).call(pdispatch, lpszurl, dwflags, lpszframename, ppostdata, cbpostdata, lpszheaders, fplaynavsound, pfcancel)
  end
  def fire_navigate_complete2(phtmlwindow2 : IHTMLWindow2, dwflags : UInt32) : HRESULT
    @lpVtbl.value.fire_navigate_complete2.unsafe_as(Proc(IHTMLWindow2, UInt32, HRESULT)).call(phtmlwindow2, dwflags)
  end
  def fire_download_begin : HRESULT
    @lpVtbl.value.fire_download_begin.unsafe_as(Proc(HRESULT)).call
  end
  def fire_download_complete : HRESULT
    @lpVtbl.value.fire_download_complete.unsafe_as(Proc(HRESULT)).call
  end
  def fire_document_complete(phtmlwindow : IHTMLWindow2, dwflags : UInt32) : HRESULT
    @lpVtbl.value.fire_document_complete.unsafe_as(Proc(IHTMLWindow2, UInt32, HRESULT)).call(phtmlwindow, dwflags)
  end
  def update_desktop_component(phtmlwindow : IHTMLWindow2) : HRESULT
    @lpVtbl.value.update_desktop_component.unsafe_as(Proc(IHTMLWindow2, HRESULT)).call(phtmlwindow)
  end
  def get_pending_url(pbstrpendingurl : UInt8**) : HRESULT
    @lpVtbl.value.get_pending_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrpendingurl)
  end
  def active_element_changed(phtmlelement : IHTMLElement) : HRESULT
    @lpVtbl.value.active_element_changed.unsafe_as(Proc(IHTMLElement, HRESULT)).call(phtmlelement)
  end
  def get_url_search_component(pbstrsearch : UInt8**) : HRESULT
    @lpVtbl.value.get_url_search_component.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrsearch)
  end
  def is_error_url(lpszurl : LibC::LPWSTR, pfiserror : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_error_url.unsafe_as(Proc(LibC::LPWSTR, LibC::BOOL*, HRESULT)).call(lpszurl, pfiserror)
  end
end
struct LibWin32::IDownloadManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def download(pmk : IMoniker, pbc : IBindCtx, dwbindverb : UInt32, grfbindf : Int32, pbindinfo : BINDINFO*, pszheaders : LibC::LPWSTR, pszredir : LibC::LPWSTR, uicp : UInt32) : HRESULT
    @lpVtbl.value.download.unsafe_as(Proc(IMoniker, IBindCtx, UInt32, Int32, BINDINFO*, LibC::LPWSTR, LibC::LPWSTR, UInt32, HRESULT)).call(pmk, pbc, dwbindverb, grfbindf, pbindinfo, pszheaders, pszredir, uicp)
  end
end
struct LibWin32::IExtensionValidation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def validate(extensionguid : Guid*, extensionmodulepath : LibC::LPWSTR, extensionfileversionms : UInt32, extensionfileversionls : UInt32, htmldocumenttop : IHTMLDocument2, htmldocumentsubframe : IHTMLDocument2, htmlelement : IHTMLElement, contexts : ExtensionValidationContexts, results : ExtensionValidationResults*) : HRESULT
    @lpVtbl.value.validate.unsafe_as(Proc(Guid*, LibC::LPWSTR, UInt32, UInt32, IHTMLDocument2, IHTMLDocument2, IHTMLElement, ExtensionValidationContexts, ExtensionValidationResults*, HRESULT)).call(extensionguid, extensionmodulepath, extensionfileversionms, extensionfileversionls, htmldocumenttop, htmldocumentsubframe, htmlelement, contexts, results)
  end
  def display_name(displayname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.display_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(displayname)
  end
end
struct LibWin32::IHomePageSetting
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_home_page(hwnd : LibC::HANDLE, homepageuri : LibC::LPWSTR, brandingmessage : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_home_page.unsafe_as(Proc(LibC::HANDLE, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(hwnd, homepageuri, brandingmessage)
  end
  def is_home_page(uri : LibC::LPWSTR, isdefault : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_home_page.unsafe_as(Proc(LibC::LPWSTR, LibC::BOOL*, HRESULT)).call(uri, isdefault)
  end
  def set_home_page_to_browser_default : HRESULT
    @lpVtbl.value.set_home_page_to_browser_default.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ITargetNotify
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_create(punkdestination : IUnknown, cbcookie : UInt32) : HRESULT
    @lpVtbl.value.on_create.unsafe_as(Proc(IUnknown, UInt32, HRESULT)).call(punkdestination, cbcookie)
  end
  def on_reuse(punkdestination : IUnknown) : HRESULT
    @lpVtbl.value.on_reuse.unsafe_as(Proc(IUnknown, HRESULT)).call(punkdestination)
  end
end
struct LibWin32::ITargetNotify2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_create(punkdestination : IUnknown, cbcookie : UInt32) : HRESULT
    @lpVtbl.value.on_create.unsafe_as(Proc(IUnknown, UInt32, HRESULT)).call(punkdestination, cbcookie)
  end
  def on_reuse(punkdestination : IUnknown) : HRESULT
    @lpVtbl.value.on_reuse.unsafe_as(Proc(IUnknown, HRESULT)).call(punkdestination)
  end
  def get_option_string(pbstroptions : UInt8**) : HRESULT
    @lpVtbl.value.get_option_string.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstroptions)
  end
end
struct LibWin32::ITargetFrame2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_frame_name(pszframename : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_frame_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszframename)
  end
  def get_frame_name(ppszframename : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_frame_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszframename)
  end
  def get_parent_frame(ppunkparent : IUnknown*) : HRESULT
    @lpVtbl.value.get_parent_frame.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppunkparent)
  end
  def set_frame_src(pszframesrc : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_frame_src.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszframesrc)
  end
  def get_frame_src(ppszframesrc : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_frame_src.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszframesrc)
  end
  def get_frames_container(ppcontainer : IOleContainer*) : HRESULT
    @lpVtbl.value.get_frames_container.unsafe_as(Proc(IOleContainer*, HRESULT)).call(ppcontainer)
  end
  def set_frame_options(dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_frame_options.unsafe_as(Proc(UInt32, HRESULT)).call(dwflags)
  end
  def get_frame_options(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_frame_options.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
  def set_frame_margins(dwwidth : UInt32, dwheight : UInt32) : HRESULT
    @lpVtbl.value.set_frame_margins.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwwidth, dwheight)
  end
  def get_frame_margins(pdwwidth : UInt32*, pdwheight : UInt32*) : HRESULT
    @lpVtbl.value.get_frame_margins.unsafe_as(Proc(UInt32*, UInt32*, HRESULT)).call(pdwwidth, pdwheight)
  end
  def find_frame(psztargetname : LibC::LPWSTR, dwflags : UInt32, ppunktargetframe : IUnknown*) : HRESULT
    @lpVtbl.value.find_frame.unsafe_as(Proc(LibC::LPWSTR, UInt32, IUnknown*, HRESULT)).call(psztargetname, dwflags, ppunktargetframe)
  end
  def get_target_alias(psztargetname : LibC::LPWSTR, ppsztargetalias : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_target_alias.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR*, HRESULT)).call(psztargetname, ppsztargetalias)
  end
end
struct LibWin32::ITargetContainer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_frame_url(ppszframesrc : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_frame_url.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszframesrc)
  end
  def get_frames_container(ppcontainer : IOleContainer*) : HRESULT
    @lpVtbl.value.get_frames_container.unsafe_as(Proc(IOleContainer*, HRESULT)).call(ppcontainer)
  end
end
struct LibWin32::ITargetFrame
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_frame_name(pszframename : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_frame_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszframename)
  end
  def get_frame_name(ppszframename : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_frame_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszframename)
  end
  def get_parent_frame(ppunkparent : IUnknown*) : HRESULT
    @lpVtbl.value.get_parent_frame.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppunkparent)
  end
  def find_frame(psztargetname : LibC::LPWSTR, ppunkcontextframe : IUnknown, dwflags : UInt32, ppunktargetframe : IUnknown*) : HRESULT
    @lpVtbl.value.find_frame.unsafe_as(Proc(LibC::LPWSTR, IUnknown, UInt32, IUnknown*, HRESULT)).call(psztargetname, ppunkcontextframe, dwflags, ppunktargetframe)
  end
  def set_frame_src(pszframesrc : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_frame_src.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszframesrc)
  end
  def get_frame_src(ppszframesrc : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_frame_src.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszframesrc)
  end
  def get_frames_container(ppcontainer : IOleContainer*) : HRESULT
    @lpVtbl.value.get_frames_container.unsafe_as(Proc(IOleContainer*, HRESULT)).call(ppcontainer)
  end
  def set_frame_options(dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_frame_options.unsafe_as(Proc(UInt32, HRESULT)).call(dwflags)
  end
  def get_frame_options(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_frame_options.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
  def set_frame_margins(dwwidth : UInt32, dwheight : UInt32) : HRESULT
    @lpVtbl.value.set_frame_margins.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwwidth, dwheight)
  end
  def get_frame_margins(pdwwidth : UInt32*, pdwheight : UInt32*) : HRESULT
    @lpVtbl.value.get_frame_margins.unsafe_as(Proc(UInt32*, UInt32*, HRESULT)).call(pdwwidth, pdwheight)
  end
  def remote_navigate(clength : UInt32, puldata : UInt32*) : HRESULT
    @lpVtbl.value.remote_navigate.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(clength, puldata)
  end
  def on_child_frame_activate(punkchildframe : IUnknown) : HRESULT
    @lpVtbl.value.on_child_frame_activate.unsafe_as(Proc(IUnknown, HRESULT)).call(punkchildframe)
  end
  def on_child_frame_deactivate(punkchildframe : IUnknown) : HRESULT
    @lpVtbl.value.on_child_frame_deactivate.unsafe_as(Proc(IUnknown, HRESULT)).call(punkchildframe)
  end
end
struct LibWin32::ITargetEmbedding
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_target_frame(pptargetframe : ITargetFrame*) : HRESULT
    @lpVtbl.value.get_target_frame.unsafe_as(Proc(ITargetFrame*, HRESULT)).call(pptargetframe)
  end
end
struct LibWin32::ITargetFramePriv
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def find_frame_downwards(psztargetname : LibC::LPWSTR, dwflags : UInt32, ppunktargetframe : IUnknown*) : HRESULT
    @lpVtbl.value.find_frame_downwards.unsafe_as(Proc(LibC::LPWSTR, UInt32, IUnknown*, HRESULT)).call(psztargetname, dwflags, ppunktargetframe)
  end
  def find_frame_in_context(psztargetname : LibC::LPWSTR, punkcontextframe : IUnknown, dwflags : UInt32, ppunktargetframe : IUnknown*) : HRESULT
    @lpVtbl.value.find_frame_in_context.unsafe_as(Proc(LibC::LPWSTR, IUnknown, UInt32, IUnknown*, HRESULT)).call(psztargetname, punkcontextframe, dwflags, ppunktargetframe)
  end
  def on_child_frame_activate(punkchildframe : IUnknown) : HRESULT
    @lpVtbl.value.on_child_frame_activate.unsafe_as(Proc(IUnknown, HRESULT)).call(punkchildframe)
  end
  def on_child_frame_deactivate(punkchildframe : IUnknown) : HRESULT
    @lpVtbl.value.on_child_frame_deactivate.unsafe_as(Proc(IUnknown, HRESULT)).call(punkchildframe)
  end
  def navigate_hack(grfhlnf : UInt32, pbc : IBindCtx, pibsc : IBindStatusCallback, psztargetname : LibC::LPWSTR, pszurl : LibC::LPWSTR, pszlocation : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.navigate_hack.unsafe_as(Proc(UInt32, IBindCtx, IBindStatusCallback, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(grfhlnf, pbc, pibsc, psztargetname, pszurl, pszlocation)
  end
  def find_browser_by_index(dwid : UInt32, ppunkbrowser : IUnknown*) : HRESULT
    @lpVtbl.value.find_browser_by_index.unsafe_as(Proc(UInt32, IUnknown*, HRESULT)).call(dwid, ppunkbrowser)
  end
end
struct LibWin32::ITargetFramePriv2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def find_frame_downwards(psztargetname : LibC::LPWSTR, dwflags : UInt32, ppunktargetframe : IUnknown*) : HRESULT
    @lpVtbl.value.find_frame_downwards.unsafe_as(Proc(LibC::LPWSTR, UInt32, IUnknown*, HRESULT)).call(psztargetname, dwflags, ppunktargetframe)
  end
  def find_frame_in_context(psztargetname : LibC::LPWSTR, punkcontextframe : IUnknown, dwflags : UInt32, ppunktargetframe : IUnknown*) : HRESULT
    @lpVtbl.value.find_frame_in_context.unsafe_as(Proc(LibC::LPWSTR, IUnknown, UInt32, IUnknown*, HRESULT)).call(psztargetname, punkcontextframe, dwflags, ppunktargetframe)
  end
  def on_child_frame_activate(punkchildframe : IUnknown) : HRESULT
    @lpVtbl.value.on_child_frame_activate.unsafe_as(Proc(IUnknown, HRESULT)).call(punkchildframe)
  end
  def on_child_frame_deactivate(punkchildframe : IUnknown) : HRESULT
    @lpVtbl.value.on_child_frame_deactivate.unsafe_as(Proc(IUnknown, HRESULT)).call(punkchildframe)
  end
  def navigate_hack(grfhlnf : UInt32, pbc : IBindCtx, pibsc : IBindStatusCallback, psztargetname : LibC::LPWSTR, pszurl : LibC::LPWSTR, pszlocation : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.navigate_hack.unsafe_as(Proc(UInt32, IBindCtx, IBindStatusCallback, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(grfhlnf, pbc, pibsc, psztargetname, pszurl, pszlocation)
  end
  def find_browser_by_index(dwid : UInt32, ppunkbrowser : IUnknown*) : HRESULT
    @lpVtbl.value.find_browser_by_index.unsafe_as(Proc(UInt32, IUnknown*, HRESULT)).call(dwid, ppunkbrowser)
  end
  def aggregated_navigation2(grfhlnf : UInt32, pbc : IBindCtx, pibsc : IBindStatusCallback, psztargetname : LibC::LPWSTR, puri : IUri, pszlocation : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.aggregated_navigation2.unsafe_as(Proc(UInt32, IBindCtx, IBindStatusCallback, LibC::LPWSTR, IUri, LibC::LPWSTR, HRESULT)).call(grfhlnf, pbc, pibsc, psztargetname, puri, pszlocation)
  end
end
struct LibWin32::ISurfacePresenterFlipBuffer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def begin_draw(riid : Guid*, ppbuffer : Void**) : HRESULT
    @lpVtbl.value.begin_draw.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppbuffer)
  end
  def end_draw : HRESULT
    @lpVtbl.value.end_draw.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ISurfacePresenterFlip
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def present : HRESULT
    @lpVtbl.value.present.unsafe_as(Proc(HRESULT)).call
  end
  def get_buffer(backbufferindex : UInt32, riid : Guid*, ppbuffer : Void**) : HRESULT
    @lpVtbl.value.get_buffer.unsafe_as(Proc(UInt32, Guid*, Void**, HRESULT)).call(backbufferindex, riid, ppbuffer)
  end
end
struct LibWin32::ISurfacePresenterFlip2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_rotation(dxgirotation : DXGI_MODE_ROTATION) : HRESULT
    @lpVtbl.value.set_rotation.unsafe_as(Proc(DXGI_MODE_ROTATION, HRESULT)).call(dxgirotation)
  end
end
struct LibWin32::IViewObjectPresentFlipSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_surface_presenter_flip(pdevice : IUnknown, width : UInt32, height : UInt32, backbuffercount : UInt32, format : DXGI_FORMAT, mode : VIEW_OBJECT_ALPHA_MODE, ppspflip : ISurfacePresenterFlip*) : HRESULT
    @lpVtbl.value.create_surface_presenter_flip.unsafe_as(Proc(IUnknown, UInt32, UInt32, UInt32, DXGI_FORMAT, VIEW_OBJECT_ALPHA_MODE, ISurfacePresenterFlip*, HRESULT)).call(pdevice, width, height, backbuffercount, format, mode, ppspflip)
  end
  def get_device_luid(pluid : LUID*) : HRESULT
    @lpVtbl.value.get_device_luid.unsafe_as(Proc(LUID*, HRESULT)).call(pluid)
  end
  def enter_full_screen : HRESULT
    @lpVtbl.value.enter_full_screen.unsafe_as(Proc(HRESULT)).call
  end
  def exit_full_screen : HRESULT
    @lpVtbl.value.exit_full_screen.unsafe_as(Proc(HRESULT)).call
  end
  def is_full_screen(pffullscreen : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_full_screen.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pffullscreen)
  end
  def get_bounding_rect(prect : RECT*) : HRESULT
    @lpVtbl.value.get_bounding_rect.unsafe_as(Proc(RECT*, HRESULT)).call(prect)
  end
  def get_metrics(ppos : POINT*, psize : SIZE*, pscalex : Float32*, pscaley : Float32*) : HRESULT
    @lpVtbl.value.get_metrics.unsafe_as(Proc(POINT*, SIZE*, Float32*, Float32*, HRESULT)).call(ppos, psize, pscalex, pscaley)
  end
  def get_full_screen_size(psize : SIZE*) : HRESULT
    @lpVtbl.value.get_full_screen_size.unsafe_as(Proc(SIZE*, HRESULT)).call(psize)
  end
end
struct LibWin32::IViewObjectPresentFlipSite2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_rotation_for_current_output(pdxgirotation : DXGI_MODE_ROTATION*) : HRESULT
    @lpVtbl.value.get_rotation_for_current_output.unsafe_as(Proc(DXGI_MODE_ROTATION*, HRESULT)).call(pdxgirotation)
  end
end
struct LibWin32::IViewObjectPresentFlip
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def notify_render(frecreatepresenter : LibC::BOOL) : HRESULT
    @lpVtbl.value.notify_render.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(frecreatepresenter)
  end
  def render_object_to_bitmap(pbitmap : IUnknown) : HRESULT
    @lpVtbl.value.render_object_to_bitmap.unsafe_as(Proc(IUnknown, HRESULT)).call(pbitmap)
  end
  def render_object_to_shared_buffer(pbuffer : ISurfacePresenterFlipBuffer) : HRESULT
    @lpVtbl.value.render_object_to_shared_buffer.unsafe_as(Proc(ISurfacePresenterFlipBuffer, HRESULT)).call(pbuffer)
  end
end
struct LibWin32::IViewObjectPresentFlip2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def notify_leaving_view : HRESULT
    @lpVtbl.value.notify_leaving_view.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IActiveXUIHandlerSite2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_suspension_exemption(pullcookie : UInt64*) : HRESULT
    @lpVtbl.value.add_suspension_exemption.unsafe_as(Proc(UInt64*, HRESULT)).call(pullcookie)
  end
  def remove_suspension_exemption(ullcookie : UInt64) : HRESULT
    @lpVtbl.value.remove_suspension_exemption.unsafe_as(Proc(UInt64, HRESULT)).call(ullcookie)
  end
end
struct LibWin32::ICaretPositionProvider
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_caret_position(pptcaret : POINT*, pflheight : Float32*) : HRESULT
    @lpVtbl.value.get_caret_position.unsafe_as(Proc(POINT*, Float32*, HRESULT)).call(pptcaret, pflheight)
  end
end
struct LibWin32::ITridentTouchInput
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_pointer_message(msg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM, pfallowmanipulations : LibC::BOOL*) : HRESULT
    @lpVtbl.value.on_pointer_message.unsafe_as(Proc(UInt32, LibC::UINT_PTR, LPARAM, LibC::BOOL*, HRESULT)).call(msg, wparam, lparam, pfallowmanipulations)
  end
end
struct LibWin32::ITridentTouchInputSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_manipulation_mode(mstouchaction : Stylemstouchaction) : HRESULT
    @lpVtbl.value.set_manipulation_mode.unsafe_as(Proc(Stylemstouchaction, HRESULT)).call(mstouchaction)
  end
  def zoom_to_point(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.zoom_to_point.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
end
struct LibWin32::IMediaActivityNotifySite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_media_activity_started(mediaactivitytype : MediaActivityNotifyType) : HRESULT
    @lpVtbl.value.on_media_activity_started.unsafe_as(Proc(MediaActivityNotifyType, HRESULT)).call(mediaactivitytype)
  end
  def on_media_activity_stopped(mediaactivitytype : MediaActivityNotifyType) : HRESULT
    @lpVtbl.value.on_media_activity_stopped.unsafe_as(Proc(MediaActivityNotifyType, HRESULT)).call(mediaactivitytype)
  end
end
struct LibWin32::IAudioSessionSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_audio_session_guid(audiosessionguid : Guid*) : HRESULT
    @lpVtbl.value.get_audio_session_guid.unsafe_as(Proc(Guid*, HRESULT)).call(audiosessionguid)
  end
  def on_audio_stream_created(endpointid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.on_audio_stream_created.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(endpointid)
  end
  def on_audio_stream_destroyed(endpointid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.on_audio_stream_destroyed.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(endpointid)
  end
end
struct LibWin32::IPrintTaskRequestHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def handle_print_task_request(pprinttaskrequest : IInspectable) : HRESULT
    @lpVtbl.value.handle_print_task_request.unsafe_as(Proc(IInspectable, HRESULT)).call(pprinttaskrequest)
  end
end
struct LibWin32::IPrintTaskRequestFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_print_task_request(pprinttaskrequesthandler : IPrintTaskRequestHandler) : HRESULT
    @lpVtbl.value.create_print_task_request.unsafe_as(Proc(IPrintTaskRequestHandler, HRESULT)).call(pprinttaskrequesthandler)
  end
end
struct LibWin32::IScrollableContextMenu
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_item(itemtext : LibC::LPWSTR, cmdid : UInt32) : HRESULT
    @lpVtbl.value.add_item.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(itemtext, cmdid)
  end
  def show_modal(x : Int32, y : Int32, cmdid : UInt32*) : HRESULT
    @lpVtbl.value.show_modal.unsafe_as(Proc(Int32, Int32, UInt32*, HRESULT)).call(x, y, cmdid)
  end
end
struct LibWin32::IScrollableContextMenu2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_item(itemtext : LibC::LPWSTR, cmdid : UInt32) : HRESULT
    @lpVtbl.value.add_item.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(itemtext, cmdid)
  end
  def show_modal(x : Int32, y : Int32, cmdid : UInt32*) : HRESULT
    @lpVtbl.value.show_modal.unsafe_as(Proc(Int32, Int32, UInt32*, HRESULT)).call(x, y, cmdid)
  end
  def add_separator : HRESULT
    @lpVtbl.value.add_separator.unsafe_as(Proc(HRESULT)).call
  end
  def set_placement(scmp : SCROLLABLECONTEXTMENU_PLACEMENT) : HRESULT
    @lpVtbl.value.set_placement.unsafe_as(Proc(SCROLLABLECONTEXTMENU_PLACEMENT, HRESULT)).call(scmp)
  end
end
struct LibWin32::IActiveXUIHandlerSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_scrollable_context_menu(scrollablecontextmenu : IScrollableContextMenu*) : HRESULT
    @lpVtbl.value.create_scrollable_context_menu.unsafe_as(Proc(IScrollableContextMenu*, HRESULT)).call(scrollablecontextmenu)
  end
  def pick_file_and_get_result(filepicker : IUnknown, allowmultipleselections : LibC::BOOL, result : IUnknown*) : HRESULT
    @lpVtbl.value.pick_file_and_get_result.unsafe_as(Proc(IUnknown, LibC::BOOL, IUnknown*, HRESULT)).call(filepicker, allowmultipleselections, result)
  end
end
struct LibWin32::IActiveXUIHandlerSite3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def message_box_w(hwnd : LibC::HANDLE, text : LibC::LPWSTR, caption : LibC::LPWSTR, type : UInt32, result : Int32*) : HRESULT
    @lpVtbl.value.message_box_w.unsafe_as(Proc(LibC::HANDLE, LibC::LPWSTR, LibC::LPWSTR, UInt32, Int32*, HRESULT)).call(hwnd, text, caption, type, result)
  end
end
struct LibWin32::IEnumManagerFrames
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, ppwindows : HANDLE**, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, HANDLE**, UInt32*, HRESULT)).call(celt, ppwindows, pceltfetched)
  end
  def count(pcelt : UInt32*) : HRESULT
    @lpVtbl.value.count.unsafe_as(Proc(UInt32*, HRESULT)).call(pcelt)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumManagerFrames*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumManagerFrames*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::IInternetExplorerManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_object(dwconfig : UInt32, pszurl : LibC::LPWSTR, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.create_object.unsafe_as(Proc(UInt32, LibC::LPWSTR, Guid*, Void**, HRESULT)).call(dwconfig, pszurl, riid, ppv)
  end
end
struct LibWin32::IInternetExplorerManager2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def enum_frame_windows(ppenum : IEnumManagerFrames*) : HRESULT
    @lpVtbl.value.enum_frame_windows.unsafe_as(Proc(IEnumManagerFrames*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::IIEWebDriverSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def window_operation(operationcode : UInt32, hwnd : UInt32) : HRESULT
    @lpVtbl.value.window_operation.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(operationcode, hwnd)
  end
  def detach_webdriver(punkwd : IUnknown) : HRESULT
    @lpVtbl.value.detach_webdriver.unsafe_as(Proc(IUnknown, HRESULT)).call(punkwd)
  end
  def get_capability_value(punkwd : IUnknown, capname : LibC::LPWSTR, capvalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_capability_value.unsafe_as(Proc(IUnknown, LibC::LPWSTR, VARIANT*, HRESULT)).call(punkwd, capname, capvalue)
  end
end
struct LibWin32::IIEWebDriverManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def execute_command(command : LibC::LPWSTR, response : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.execute_command.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR*, HRESULT)).call(command, response)
  end
end
struct LibWin32::IPeerFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
end
struct LibWin32::IHomePage
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def navigate_home_page : HRESULT
    @lpVtbl.value.navigate_home_page.unsafe_as(Proc(HRESULT)).call
  end
  def set_home_page(bstrurl : UInt8*) : HRESULT
    @lpVtbl.value.set_home_page.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrurl)
  end
  def is_home_page(bstrurl : UInt8*, p : Int16*) : HRESULT
    @lpVtbl.value.is_home_page.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrurl, p)
  end
end
struct LibWin32::IIntelliForms
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_enabled(pval : Int16*) : HRESULT
    @lpVtbl.value.get_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pval)
  end
  def put_enabled(bval : Int16) : HRESULT
    @lpVtbl.value.put_enabled.unsafe_as(Proc(Int16, HRESULT)).call(bval)
  end
end
struct LibWin32::Iwfolders
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def navigate(bstrurl : UInt8*, pbstrretval : UInt8**) : HRESULT
    @lpVtbl.value.navigate.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(bstrurl, pbstrretval)
  end
  def navigate_frame(bstrurl : UInt8*, bstrtargetframe : UInt8*, pbstrretval : UInt8**) : HRESULT
    @lpVtbl.value.navigate_frame.unsafe_as(Proc(UInt8*, UInt8*, UInt8**, HRESULT)).call(bstrurl, bstrtargetframe, pbstrretval)
  end
  def navigate_no_site(bstrurl : UInt8*, bstrtargetframe : UInt8*, dwhwnd : UInt32, pwb : IUnknown) : HRESULT
    @lpVtbl.value.navigate_no_site.unsafe_as(Proc(UInt8*, UInt8*, UInt32, IUnknown, HRESULT)).call(bstrurl, bstrtargetframe, dwhwnd, pwb)
  end
end
struct LibWin32::IAnchorClick
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def proc_on_click : HRESULT
    @lpVtbl.value.proc_on_click.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IHTMLUserDataOM
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_xml_document(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_xml_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def save(strname : UInt8*) : HRESULT
    @lpVtbl.value.save.unsafe_as(Proc(UInt8*, HRESULT)).call(strname)
  end
  def load(strname : UInt8*) : HRESULT
    @lpVtbl.value.load.unsafe_as(Proc(UInt8*, HRESULT)).call(strname)
  end
  def get_attribute(name : UInt8*, pvalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_attribute.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(name, pvalue)
  end
  def set_attribute(name : UInt8*, value : VARIANT) : HRESULT
    @lpVtbl.value.set_attribute.unsafe_as(Proc(UInt8*, VARIANT, HRESULT)).call(name, value)
  end
  def remove_attribute(name : UInt8*) : HRESULT
    @lpVtbl.value.remove_attribute.unsafe_as(Proc(UInt8*, HRESULT)).call(name)
  end
  def put_expires(bstr : UInt8*) : HRESULT
    @lpVtbl.value.put_expires.unsafe_as(Proc(UInt8*, HRESULT)).call(bstr)
  end
  def get_expires(pbstr : UInt8**) : HRESULT
    @lpVtbl.value.get_expires.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstr)
  end
end
struct LibWin32::IHTMLPersistDataOM
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_xml_document(p : IDispatch*) : HRESULT
    @lpVtbl.value.get_xml_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(p)
  end
  def get_attribute(name : UInt8*, pvalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_attribute.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(name, pvalue)
  end
  def set_attribute(name : UInt8*, value : VARIANT) : HRESULT
    @lpVtbl.value.set_attribute.unsafe_as(Proc(UInt8*, VARIANT, HRESULT)).call(name, value)
  end
  def remove_attribute(name : UInt8*) : HRESULT
    @lpVtbl.value.remove_attribute.unsafe_as(Proc(UInt8*, HRESULT)).call(name)
  end
end
struct LibWin32::IHTMLPersistData
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def save(punk : IUnknown, ltype : Int32, fcontinuebroacast : Int16*) : HRESULT
    @lpVtbl.value.save.unsafe_as(Proc(IUnknown, Int32, Int16*, HRESULT)).call(punk, ltype, fcontinuebroacast)
  end
  def load(punk : IUnknown, ltype : Int32, fdodefault : Int16*) : HRESULT
    @lpVtbl.value.load.unsafe_as(Proc(IUnknown, Int32, Int16*, HRESULT)).call(punk, ltype, fdodefault)
  end
  def query_type(ltype : Int32, pfsupportstype : Int16*) : HRESULT
    @lpVtbl.value.query_type.unsafe_as(Proc(Int32, Int16*, HRESULT)).call(ltype, pfsupportstype)
  end
end
struct LibWin32::IDownloadBehavior
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def start_download(bstrurl : UInt8*, pdispcallback : IDispatch) : HRESULT
    @lpVtbl.value.start_download.unsafe_as(Proc(UInt8*, IDispatch, HRESULT)).call(bstrurl, pdispcallback)
  end
end
struct LibWin32::ILayoutRect
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def put_next_rect(bstrelementid : UInt8*) : HRESULT
    @lpVtbl.value.put_next_rect.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrelementid)
  end
  def get_next_rect(pbstrelementid : UInt8**) : HRESULT
    @lpVtbl.value.get_next_rect.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrelementid)
  end
  def put_content_src(varcontentsrc : VARIANT) : HRESULT
    @lpVtbl.value.put_content_src.unsafe_as(Proc(VARIANT, HRESULT)).call(varcontentsrc)
  end
  def get_content_src(pvarcontentsrc : VARIANT*) : HRESULT
    @lpVtbl.value.get_content_src.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvarcontentsrc)
  end
  def put_honor_page_breaks(v : Int16) : HRESULT
    @lpVtbl.value.put_honor_page_breaks.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_honor_page_breaks(p : Int16*) : HRESULT
    @lpVtbl.value.get_honor_page_breaks.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_honor_page_rules(v : Int16) : HRESULT
    @lpVtbl.value.put_honor_page_rules.unsafe_as(Proc(Int16, HRESULT)).call(v)
  end
  def get_honor_page_rules(p : Int16*) : HRESULT
    @lpVtbl.value.get_honor_page_rules.unsafe_as(Proc(Int16*, HRESULT)).call(p)
  end
  def put_next_rect_element(pelem : IDispatch) : HRESULT
    @lpVtbl.value.put_next_rect_element.unsafe_as(Proc(IDispatch, HRESULT)).call(pelem)
  end
  def get_next_rect_element(ppelem : IDispatch*) : HRESULT
    @lpVtbl.value.get_next_rect_element.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppelem)
  end
  def get_content_document(pdoc : IDispatch*) : HRESULT
    @lpVtbl.value.get_content_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(pdoc)
  end
end
struct LibWin32::IDeviceRect
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IHeaderFooter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_html_head(p : UInt8**) : HRESULT
    @lpVtbl.value.get_html_head.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_html_foot(p : UInt8**) : HRESULT
    @lpVtbl.value.get_html_foot.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_head(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_head.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_head(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_head.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_foot(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_foot.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_foot(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_foot.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_page(v : UInt32) : HRESULT
    @lpVtbl.value.put_page.unsafe_as(Proc(UInt32, HRESULT)).call(v)
  end
  def get_page(p : UInt32*) : HRESULT
    @lpVtbl.value.get_page.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def put_page_total(v : UInt32) : HRESULT
    @lpVtbl.value.put_page_total.unsafe_as(Proc(UInt32, HRESULT)).call(v)
  end
  def get_page_total(p : UInt32*) : HRESULT
    @lpVtbl.value.get_page_total.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def put_url(v : UInt8*) : HRESULT
    @lpVtbl.value.put_url.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_url(p : UInt8**) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_title(v : UInt8*) : HRESULT
    @lpVtbl.value.put_title.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_title(p : UInt8**) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_date_short(v : UInt8*) : HRESULT
    @lpVtbl.value.put_date_short.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_date_short(p : UInt8**) : HRESULT
    @lpVtbl.value.get_date_short.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_date_long(v : UInt8*) : HRESULT
    @lpVtbl.value.put_date_long.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_date_long(p : UInt8**) : HRESULT
    @lpVtbl.value.get_date_long.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_time_short(v : UInt8*) : HRESULT
    @lpVtbl.value.put_time_short.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_time_short(p : UInt8**) : HRESULT
    @lpVtbl.value.get_time_short.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_time_long(v : UInt8*) : HRESULT
    @lpVtbl.value.put_time_long.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_time_long(p : UInt8**) : HRESULT
    @lpVtbl.value.get_time_long.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHeaderFooter2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_html_head(p : UInt8**) : HRESULT
    @lpVtbl.value.get_html_head.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def get_html_foot(p : UInt8**) : HRESULT
    @lpVtbl.value.get_html_foot.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_head(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_head.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_head(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_head.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_text_foot(v : UInt8*) : HRESULT
    @lpVtbl.value.put_text_foot.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_text_foot(p : UInt8**) : HRESULT
    @lpVtbl.value.get_text_foot.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_page(v : UInt32) : HRESULT
    @lpVtbl.value.put_page.unsafe_as(Proc(UInt32, HRESULT)).call(v)
  end
  def get_page(p : UInt32*) : HRESULT
    @lpVtbl.value.get_page.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def put_page_total(v : UInt32) : HRESULT
    @lpVtbl.value.put_page_total.unsafe_as(Proc(UInt32, HRESULT)).call(v)
  end
  def get_page_total(p : UInt32*) : HRESULT
    @lpVtbl.value.get_page_total.unsafe_as(Proc(UInt32*, HRESULT)).call(p)
  end
  def put_url(v : UInt8*) : HRESULT
    @lpVtbl.value.put_url.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_url(p : UInt8**) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_title(v : UInt8*) : HRESULT
    @lpVtbl.value.put_title.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_title(p : UInt8**) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_date_short(v : UInt8*) : HRESULT
    @lpVtbl.value.put_date_short.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_date_short(p : UInt8**) : HRESULT
    @lpVtbl.value.get_date_short.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_date_long(v : UInt8*) : HRESULT
    @lpVtbl.value.put_date_long.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_date_long(p : UInt8**) : HRESULT
    @lpVtbl.value.get_date_long.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_time_short(v : UInt8*) : HRESULT
    @lpVtbl.value.put_time_short.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_time_short(p : UInt8**) : HRESULT
    @lpVtbl.value.get_time_short.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_time_long(v : UInt8*) : HRESULT
    @lpVtbl.value.put_time_long.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_time_long(p : UInt8**) : HRESULT
    @lpVtbl.value.get_time_long.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
  def put_font(v : UInt8*) : HRESULT
    @lpVtbl.value.put_font.unsafe_as(Proc(UInt8*, HRESULT)).call(v)
  end
  def get_font(p : UInt8**) : HRESULT
    @lpVtbl.value.get_font.unsafe_as(Proc(UInt8**, HRESULT)).call(p)
  end
end
struct LibWin32::IHostDialogHelper
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show_html_dialog(hwndparent : LibC::HANDLE, pmk : IMoniker, pvarargin : VARIANT*, pchoptions : LibC::LPWSTR, pvarargout : VARIANT*, punkhost : IUnknown) : HRESULT
    @lpVtbl.value.show_html_dialog.unsafe_as(Proc(LibC::HANDLE, IMoniker, VARIANT*, LibC::LPWSTR, VARIANT*, IUnknown, HRESULT)).call(hwndparent, pmk, pvarargin, pchoptions, pvarargout, punkhost)
  end
end
struct LibWin32::IDocHostUIHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show_context_menu(dwid : UInt32, ppt : POINT*, pcmdtreserved : IUnknown, pdispreserved : IDispatch) : HRESULT
    @lpVtbl.value.show_context_menu.unsafe_as(Proc(UInt32, POINT*, IUnknown, IDispatch, HRESULT)).call(dwid, ppt, pcmdtreserved, pdispreserved)
  end
  def get_host_info(pinfo : DOCHOSTUIINFO*) : HRESULT
    @lpVtbl.value.get_host_info.unsafe_as(Proc(DOCHOSTUIINFO*, HRESULT)).call(pinfo)
  end
  def show_ui(dwid : UInt32, pactiveobject : IOleInPlaceActiveObject, pcommandtarget : IOleCommandTarget, pframe : IOleInPlaceFrame, pdoc : IOleInPlaceUIWindow) : HRESULT
    @lpVtbl.value.show_ui.unsafe_as(Proc(UInt32, IOleInPlaceActiveObject, IOleCommandTarget, IOleInPlaceFrame, IOleInPlaceUIWindow, HRESULT)).call(dwid, pactiveobject, pcommandtarget, pframe, pdoc)
  end
  def hide_ui : HRESULT
    @lpVtbl.value.hide_ui.unsafe_as(Proc(HRESULT)).call
  end
  def update_ui : HRESULT
    @lpVtbl.value.update_ui.unsafe_as(Proc(HRESULT)).call
  end
  def enable_modeless(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable_modeless.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
  def on_doc_window_activate(factivate : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_doc_window_activate.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(factivate)
  end
  def on_frame_window_activate(factivate : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_frame_window_activate.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(factivate)
  end
  def resize_border(prcborder : RECT*, puiwindow : IOleInPlaceUIWindow, framewindow : LibC::BOOL) : HRESULT
    @lpVtbl.value.resize_border.unsafe_as(Proc(RECT*, IOleInPlaceUIWindow, LibC::BOOL, HRESULT)).call(prcborder, puiwindow, framewindow)
  end
  def translate_accelerator(lpmsg : MSG*, pguidcmdgroup : Guid*, ncmdid : UInt32) : HRESULT
    @lpVtbl.value.translate_accelerator.unsafe_as(Proc(MSG*, Guid*, UInt32, HRESULT)).call(lpmsg, pguidcmdgroup, ncmdid)
  end
  def get_option_key_path(pchkey : LibC::LPWSTR*, dw : UInt32) : HRESULT
    @lpVtbl.value.get_option_key_path.unsafe_as(Proc(LibC::LPWSTR*, UInt32, HRESULT)).call(pchkey, dw)
  end
  def get_drop_target(pdroptarget : IDropTarget, ppdroptarget : IDropTarget*) : HRESULT
    @lpVtbl.value.get_drop_target.unsafe_as(Proc(IDropTarget, IDropTarget*, HRESULT)).call(pdroptarget, ppdroptarget)
  end
  def get_external(ppdispatch : IDispatch*) : HRESULT
    @lpVtbl.value.get_external.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdispatch)
  end
  def translate_url(dwtranslate : UInt32, pchurlin : LibC::LPWSTR, ppchurlout : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.translate_url.unsafe_as(Proc(UInt32, LibC::LPWSTR, LibC::LPWSTR*, HRESULT)).call(dwtranslate, pchurlin, ppchurlout)
  end
  def filter_data_object(pdo : IDataObject, ppdoret : IDataObject*) : HRESULT
    @lpVtbl.value.filter_data_object.unsafe_as(Proc(IDataObject, IDataObject*, HRESULT)).call(pdo, ppdoret)
  end
end
struct LibWin32::IDocHostUIHandler2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show_context_menu(dwid : UInt32, ppt : POINT*, pcmdtreserved : IUnknown, pdispreserved : IDispatch) : HRESULT
    @lpVtbl.value.show_context_menu.unsafe_as(Proc(UInt32, POINT*, IUnknown, IDispatch, HRESULT)).call(dwid, ppt, pcmdtreserved, pdispreserved)
  end
  def get_host_info(pinfo : DOCHOSTUIINFO*) : HRESULT
    @lpVtbl.value.get_host_info.unsafe_as(Proc(DOCHOSTUIINFO*, HRESULT)).call(pinfo)
  end
  def show_ui(dwid : UInt32, pactiveobject : IOleInPlaceActiveObject, pcommandtarget : IOleCommandTarget, pframe : IOleInPlaceFrame, pdoc : IOleInPlaceUIWindow) : HRESULT
    @lpVtbl.value.show_ui.unsafe_as(Proc(UInt32, IOleInPlaceActiveObject, IOleCommandTarget, IOleInPlaceFrame, IOleInPlaceUIWindow, HRESULT)).call(dwid, pactiveobject, pcommandtarget, pframe, pdoc)
  end
  def hide_ui : HRESULT
    @lpVtbl.value.hide_ui.unsafe_as(Proc(HRESULT)).call
  end
  def update_ui : HRESULT
    @lpVtbl.value.update_ui.unsafe_as(Proc(HRESULT)).call
  end
  def enable_modeless(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable_modeless.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
  def on_doc_window_activate(factivate : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_doc_window_activate.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(factivate)
  end
  def on_frame_window_activate(factivate : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_frame_window_activate.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(factivate)
  end
  def resize_border(prcborder : RECT*, puiwindow : IOleInPlaceUIWindow, framewindow : LibC::BOOL) : HRESULT
    @lpVtbl.value.resize_border.unsafe_as(Proc(RECT*, IOleInPlaceUIWindow, LibC::BOOL, HRESULT)).call(prcborder, puiwindow, framewindow)
  end
  def translate_accelerator(lpmsg : MSG*, pguidcmdgroup : Guid*, ncmdid : UInt32) : HRESULT
    @lpVtbl.value.translate_accelerator.unsafe_as(Proc(MSG*, Guid*, UInt32, HRESULT)).call(lpmsg, pguidcmdgroup, ncmdid)
  end
  def get_option_key_path(pchkey : LibC::LPWSTR*, dw : UInt32) : HRESULT
    @lpVtbl.value.get_option_key_path.unsafe_as(Proc(LibC::LPWSTR*, UInt32, HRESULT)).call(pchkey, dw)
  end
  def get_drop_target(pdroptarget : IDropTarget, ppdroptarget : IDropTarget*) : HRESULT
    @lpVtbl.value.get_drop_target.unsafe_as(Proc(IDropTarget, IDropTarget*, HRESULT)).call(pdroptarget, ppdroptarget)
  end
  def get_external(ppdispatch : IDispatch*) : HRESULT
    @lpVtbl.value.get_external.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdispatch)
  end
  def translate_url(dwtranslate : UInt32, pchurlin : LibC::LPWSTR, ppchurlout : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.translate_url.unsafe_as(Proc(UInt32, LibC::LPWSTR, LibC::LPWSTR*, HRESULT)).call(dwtranslate, pchurlin, ppchurlout)
  end
  def filter_data_object(pdo : IDataObject, ppdoret : IDataObject*) : HRESULT
    @lpVtbl.value.filter_data_object.unsafe_as(Proc(IDataObject, IDataObject*, HRESULT)).call(pdo, ppdoret)
  end
  def get_override_key_path(pchkey : LibC::LPWSTR*, dw : UInt32) : HRESULT
    @lpVtbl.value.get_override_key_path.unsafe_as(Proc(LibC::LPWSTR*, UInt32, HRESULT)).call(pchkey, dw)
  end
end
struct LibWin32::ICustomDoc
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_ui_handler(puihandler : IDocHostUIHandler) : HRESULT
    @lpVtbl.value.set_ui_handler.unsafe_as(Proc(IDocHostUIHandler, HRESULT)).call(puihandler)
  end
end
struct LibWin32::IDocHostShowUI
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show_message(hwnd : LibC::HANDLE, lpstrtext : LibC::LPWSTR, lpstrcaption : LibC::LPWSTR, dwtype : UInt32, lpstrhelpfile : LibC::LPWSTR, dwhelpcontext : UInt32, plresult : LRESULT*) : HRESULT
    @lpVtbl.value.show_message.unsafe_as(Proc(LibC::HANDLE, LibC::LPWSTR, LibC::LPWSTR, UInt32, LibC::LPWSTR, UInt32, LRESULT*, HRESULT)).call(hwnd, lpstrtext, lpstrcaption, dwtype, lpstrhelpfile, dwhelpcontext, plresult)
  end
  def show_help(hwnd : LibC::HANDLE, pszhelpfile : LibC::LPWSTR, ucommand : UInt32, dwdata : UInt32, ptmouse : POINT, pdispatchobjecthit : IDispatch) : HRESULT
    @lpVtbl.value.show_help.unsafe_as(Proc(LibC::HANDLE, LibC::LPWSTR, UInt32, UInt32, POINT, IDispatch, HRESULT)).call(hwnd, pszhelpfile, ucommand, dwdata, ptmouse, pdispatchobjecthit)
  end
end
struct LibWin32::IClassFactoryEx
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_instance(punkouter : IUnknown, riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.create_instance.unsafe_as(Proc(IUnknown, Guid*, Void**, HRESULT)).call(punkouter, riid, ppvobject)
  end
  def lock_server(flock : LibC::BOOL) : HRESULT
    @lpVtbl.value.lock_server.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(flock)
  end
  def create_instance_with_context(punkcontext : IUnknown, punkouter : IUnknown, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.create_instance_with_context.unsafe_as(Proc(IUnknown, IUnknown, Guid*, Void**, HRESULT)).call(punkcontext, punkouter, riid, ppv)
  end
end
struct LibWin32::IHTMLOMWindowServices
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def move_to(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.move_to.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
  def move_by(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.move_by.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
  def resize_to(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.resize_to.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
  def resize_by(x : Int32, y : Int32) : HRESULT
    @lpVtbl.value.resize_by.unsafe_as(Proc(Int32, Int32, HRESULT)).call(x, y)
  end
end
struct LibWin32::IDiagnosticsScriptEngineSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_message(pszdata : LibC::LPWSTR*, uldatacount : UInt32) : HRESULT
    @lpVtbl.value.on_message.unsafe_as(Proc(LibC::LPWSTR*, UInt32, HRESULT)).call(pszdata, uldatacount)
  end
  def on_script_error(pscripterror : IActiveScriptError) : HRESULT
    @lpVtbl.value.on_script_error.unsafe_as(Proc(IActiveScriptError, HRESULT)).call(pscripterror)
  end
end
struct LibWin32::IDiagnosticsScriptEngine
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def evaluate_script(pszscript : LibC::LPWSTR, pszscriptname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.evaluate_script.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(pszscript, pszscriptname)
  end
  def fire_script_message_event(psznames : LibC::LPWSTR*, pszvalues : LibC::LPWSTR*, ulpropertycount : UInt32) : HRESULT
    @lpVtbl.value.fire_script_message_event.unsafe_as(Proc(LibC::LPWSTR*, LibC::LPWSTR*, UInt32, HRESULT)).call(psznames, pszvalues, ulpropertycount)
  end
  def detach : HRESULT
    @lpVtbl.value.detach.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IDiagnosticsScriptEngineProvider
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_diagnostics_script_engine(pscriptsite : IDiagnosticsScriptEngineSite, fdebuggingenabled : LibC::BOOL, ulprocessid : UInt32, ppengine : IDiagnosticsScriptEngine*) : HRESULT
    @lpVtbl.value.create_diagnostics_script_engine.unsafe_as(Proc(IDiagnosticsScriptEngineSite, LibC::BOOL, UInt32, IDiagnosticsScriptEngine*, HRESULT)).call(pscriptsite, fdebuggingenabled, ulprocessid, ppengine)
  end
end
struct LibWin32::IOpenServiceActivityInput
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_variable(pwzvariablename : LibC::LPWSTR, pwzvariabletype : LibC::LPWSTR, pbstrvariablecontent : UInt8**) : HRESULT
    @lpVtbl.value.get_variable.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, UInt8**, HRESULT)).call(pwzvariablename, pwzvariabletype, pbstrvariablecontent)
  end
  def has_variable(pwzvariablename : LibC::LPWSTR, pwzvariabletype : LibC::LPWSTR, pfhasvariable : LibC::BOOL*) : HRESULT
    @lpVtbl.value.has_variable.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::BOOL*, HRESULT)).call(pwzvariablename, pwzvariabletype, pfhasvariable)
  end
  def get_type(ptype : OpenServiceActivityContentType*) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(OpenServiceActivityContentType*, HRESULT)).call(ptype)
  end
end
struct LibWin32::IOpenServiceActivityOutputContext
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def navigate(pwzuri : LibC::LPWSTR, pwzmethod : LibC::LPWSTR, pwzheaders : LibC::LPWSTR, ppostdata : IStream) : HRESULT
    @lpVtbl.value.navigate.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, IStream, HRESULT)).call(pwzuri, pwzmethod, pwzheaders, ppostdata)
  end
  def can_navigate(pwzuri : LibC::LPWSTR, pwzmethod : LibC::LPWSTR, pwzheaders : LibC::LPWSTR, ppostdata : IStream, pfcannavigate : LibC::BOOL*) : HRESULT
    @lpVtbl.value.can_navigate.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, IStream, LibC::BOOL*, HRESULT)).call(pwzuri, pwzmethod, pwzheaders, ppostdata, pfcannavigate)
  end
end
struct LibWin32::IOpenService
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def is_default(pfisdefault : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_default.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfisdefault)
  end
  def set_default(fdefault : LibC::BOOL, hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_default.unsafe_as(Proc(LibC::BOOL, LibC::HANDLE, HRESULT)).call(fdefault, hwnd)
  end
  def get_id(pbstrid : UInt8**) : HRESULT
    @lpVtbl.value.get_id.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrid)
  end
end
struct LibWin32::IOpenServiceManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def install_service(pwzserviceurl : LibC::LPWSTR, ppservice : IOpenService*) : HRESULT
    @lpVtbl.value.install_service.unsafe_as(Proc(LibC::LPWSTR, IOpenService*, HRESULT)).call(pwzserviceurl, ppservice)
  end
  def uninstall_service(pservice : IOpenService) : HRESULT
    @lpVtbl.value.uninstall_service.unsafe_as(Proc(IOpenService, HRESULT)).call(pservice)
  end
  def get_service_by_id(pwzid : LibC::LPWSTR, ppservice : IOpenService*) : HRESULT
    @lpVtbl.value.get_service_by_id.unsafe_as(Proc(LibC::LPWSTR, IOpenService*, HRESULT)).call(pwzid, ppservice)
  end
end
struct LibWin32::IOpenServiceActivity
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def is_default(pfisdefault : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_default.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfisdefault)
  end
  def set_default(fdefault : LibC::BOOL, hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_default.unsafe_as(Proc(LibC::BOOL, LibC::HANDLE, HRESULT)).call(fdefault, hwnd)
  end
  def get_id(pbstrid : UInt8**) : HRESULT
    @lpVtbl.value.get_id.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrid)
  end
  def execute(pinput : IOpenServiceActivityInput, poutput : IOpenServiceActivityOutputContext) : HRESULT
    @lpVtbl.value.execute.unsafe_as(Proc(IOpenServiceActivityInput, IOpenServiceActivityOutputContext, HRESULT)).call(pinput, poutput)
  end
  def can_execute(pinput : IOpenServiceActivityInput, poutput : IOpenServiceActivityOutputContext, pfcanexecute : LibC::BOOL*) : HRESULT
    @lpVtbl.value.can_execute.unsafe_as(Proc(IOpenServiceActivityInput, IOpenServiceActivityOutputContext, LibC::BOOL*, HRESULT)).call(pinput, poutput, pfcanexecute)
  end
  def can_execute_type(type : OpenServiceActivityContentType, pfcanexecute : LibC::BOOL*) : HRESULT
    @lpVtbl.value.can_execute_type.unsafe_as(Proc(OpenServiceActivityContentType, LibC::BOOL*, HRESULT)).call(type, pfcanexecute)
  end
  def preview(pinput : IOpenServiceActivityInput, poutput : IOpenServiceActivityOutputContext) : HRESULT
    @lpVtbl.value.preview.unsafe_as(Proc(IOpenServiceActivityInput, IOpenServiceActivityOutputContext, HRESULT)).call(pinput, poutput)
  end
  def can_preview(pinput : IOpenServiceActivityInput, poutput : IOpenServiceActivityOutputContext, pfcanpreview : LibC::BOOL*) : HRESULT
    @lpVtbl.value.can_preview.unsafe_as(Proc(IOpenServiceActivityInput, IOpenServiceActivityOutputContext, LibC::BOOL*, HRESULT)).call(pinput, poutput, pfcanpreview)
  end
  def can_preview_type(type : OpenServiceActivityContentType, pfcanpreview : LibC::BOOL*) : HRESULT
    @lpVtbl.value.can_preview_type.unsafe_as(Proc(OpenServiceActivityContentType, LibC::BOOL*, HRESULT)).call(type, pfcanpreview)
  end
  def get_status_text(pinput : IOpenServiceActivityInput, pbstrstatustext : UInt8**) : HRESULT
    @lpVtbl.value.get_status_text.unsafe_as(Proc(IOpenServiceActivityInput, UInt8**, HRESULT)).call(pinput, pbstrstatustext)
  end
  def get_homepage_url(pbstrhomepageurl : UInt8**) : HRESULT
    @lpVtbl.value.get_homepage_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrhomepageurl)
  end
  def get_display_name(pbstrdisplayname : UInt8**) : HRESULT
    @lpVtbl.value.get_display_name.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrdisplayname)
  end
  def get_description(pbstrdescription : UInt8**) : HRESULT
    @lpVtbl.value.get_description.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrdescription)
  end
  def get_category_name(pbstrcategoryname : UInt8**) : HRESULT
    @lpVtbl.value.get_category_name.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrcategoryname)
  end
  def get_icon_path(pbstriconpath : UInt8**) : HRESULT
    @lpVtbl.value.get_icon_path.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstriconpath)
  end
  def get_icon(fsmallicon : LibC::BOOL, phicon : HANDLE*) : HRESULT
    @lpVtbl.value.get_icon.unsafe_as(Proc(LibC::BOOL, HANDLE*, HRESULT)).call(fsmallicon, phicon)
  end
  def get_description_file_path(pbstrxmlpath : UInt8**) : HRESULT
    @lpVtbl.value.get_description_file_path.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrxmlpath)
  end
  def get_download_url(pbstrxmluri : UInt8**) : HRESULT
    @lpVtbl.value.get_download_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrxmluri)
  end
  def get_install_url(pbstrinstalluri : UInt8**) : HRESULT
    @lpVtbl.value.get_install_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrinstalluri)
  end
  def is_enabled(pfisenabled : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_enabled.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfisenabled)
  end
  def set_enabled(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_enabled.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
end
struct LibWin32::IEnumOpenServiceActivity
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : IOpenServiceActivity*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, IOpenServiceActivity*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumOpenServiceActivity*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumOpenServiceActivity*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::IOpenServiceActivityCategory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def has_default_activity(pfhasdefaultactivity : LibC::BOOL*) : HRESULT
    @lpVtbl.value.has_default_activity.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfhasdefaultactivity)
  end
  def get_default_activity(ppdefaultactivity : IOpenServiceActivity*) : HRESULT
    @lpVtbl.value.get_default_activity.unsafe_as(Proc(IOpenServiceActivity*, HRESULT)).call(ppdefaultactivity)
  end
  def set_default_activity(pactivity : IOpenServiceActivity, hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_default_activity.unsafe_as(Proc(IOpenServiceActivity, LibC::HANDLE, HRESULT)).call(pactivity, hwnd)
  end
  def get_name(pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrname)
  end
  def get_activity_enumerator(pinput : IOpenServiceActivityInput, poutput : IOpenServiceActivityOutputContext, ppenumactivity : IEnumOpenServiceActivity*) : HRESULT
    @lpVtbl.value.get_activity_enumerator.unsafe_as(Proc(IOpenServiceActivityInput, IOpenServiceActivityOutputContext, IEnumOpenServiceActivity*, HRESULT)).call(pinput, poutput, ppenumactivity)
  end
end
struct LibWin32::IEnumOpenServiceActivityCategory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : IOpenServiceActivityCategory*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, IOpenServiceActivityCategory*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumOpenServiceActivityCategory*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumOpenServiceActivityCategory*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::IOpenServiceActivityManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_category_enumerator(etype : OpenServiceActivityContentType, ppenum : IEnumOpenServiceActivityCategory*) : HRESULT
    @lpVtbl.value.get_category_enumerator.unsafe_as(Proc(OpenServiceActivityContentType, IEnumOpenServiceActivityCategory*, HRESULT)).call(etype, ppenum)
  end
  def get_activity_by_id(pwzactivityid : LibC::LPWSTR, ppactivity : IOpenServiceActivity*) : HRESULT
    @lpVtbl.value.get_activity_by_id.unsafe_as(Proc(LibC::LPWSTR, IOpenServiceActivity*, HRESULT)).call(pwzactivityid, ppactivity)
  end
  def get_activity_by_homepage_and_category(pwzhomepage : LibC::LPWSTR, pwzcategory : LibC::LPWSTR, ppactivity : IOpenServiceActivity*) : HRESULT
    @lpVtbl.value.get_activity_by_homepage_and_category.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, IOpenServiceActivity*, HRESULT)).call(pwzhomepage, pwzcategory, ppactivity)
  end
  def get_version_cookie(pdwversioncookie : UInt32*) : HRESULT
    @lpVtbl.value.get_version_cookie.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwversioncookie)
  end
end
struct LibWin32::IPersistHistory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_class_id(pclassid : Guid*) : HRESULT
    @lpVtbl.value.get_class_id.unsafe_as(Proc(Guid*, HRESULT)).call(pclassid)
  end
  def load_history(pstream : IStream, pbc : IBindCtx) : HRESULT
    @lpVtbl.value.load_history.unsafe_as(Proc(IStream, IBindCtx, HRESULT)).call(pstream, pbc)
  end
  def save_history(pstream : IStream) : HRESULT
    @lpVtbl.value.save_history.unsafe_as(Proc(IStream, HRESULT)).call(pstream)
  end
  def set_position_cookie(dwpositioncookie : UInt32) : HRESULT
    @lpVtbl.value.set_position_cookie.unsafe_as(Proc(UInt32, HRESULT)).call(dwpositioncookie)
  end
  def get_position_cookie(pdwpositioncookie : UInt32*) : HRESULT
    @lpVtbl.value.get_position_cookie.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwpositioncookie)
  end
end
struct LibWin32::IEnumSTATURL
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : STATURL*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, STATURL*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumSTATURL*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumSTATURL*, HRESULT)).call(ppenum)
  end
  def set_filter(poszfilter : LibC::LPWSTR, dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_filter.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(poszfilter, dwflags)
  end
end
struct LibWin32::IUrlHistoryStg
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_url(pocsurl : LibC::LPWSTR, pocstitle : LibC::LPWSTR, dwflags : UInt32) : HRESULT
    @lpVtbl.value.add_url.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, UInt32, HRESULT)).call(pocsurl, pocstitle, dwflags)
  end
  def delete_url(pocsurl : LibC::LPWSTR, dwflags : UInt32) : HRESULT
    @lpVtbl.value.delete_url.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(pocsurl, dwflags)
  end
  def query_url(pocsurl : LibC::LPWSTR, dwflags : UInt32, lpstaturl : STATURL*) : HRESULT
    @lpVtbl.value.query_url.unsafe_as(Proc(LibC::LPWSTR, UInt32, STATURL*, HRESULT)).call(pocsurl, dwflags, lpstaturl)
  end
  def bind_to_object(pocsurl : LibC::LPWSTR, riid : Guid*, ppvout : Void**) : HRESULT
    @lpVtbl.value.bind_to_object.unsafe_as(Proc(LibC::LPWSTR, Guid*, Void**, HRESULT)).call(pocsurl, riid, ppvout)
  end
  def enum_urls(ppenum : IEnumSTATURL*) : HRESULT
    @lpVtbl.value.enum_urls.unsafe_as(Proc(IEnumSTATURL*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::IUrlHistoryStg2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_url(pocsurl : LibC::LPWSTR, pocstitle : LibC::LPWSTR, dwflags : UInt32) : HRESULT
    @lpVtbl.value.add_url.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, UInt32, HRESULT)).call(pocsurl, pocstitle, dwflags)
  end
  def delete_url(pocsurl : LibC::LPWSTR, dwflags : UInt32) : HRESULT
    @lpVtbl.value.delete_url.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(pocsurl, dwflags)
  end
  def query_url(pocsurl : LibC::LPWSTR, dwflags : UInt32, lpstaturl : STATURL*) : HRESULT
    @lpVtbl.value.query_url.unsafe_as(Proc(LibC::LPWSTR, UInt32, STATURL*, HRESULT)).call(pocsurl, dwflags, lpstaturl)
  end
  def bind_to_object(pocsurl : LibC::LPWSTR, riid : Guid*, ppvout : Void**) : HRESULT
    @lpVtbl.value.bind_to_object.unsafe_as(Proc(LibC::LPWSTR, Guid*, Void**, HRESULT)).call(pocsurl, riid, ppvout)
  end
  def enum_urls(ppenum : IEnumSTATURL*) : HRESULT
    @lpVtbl.value.enum_urls.unsafe_as(Proc(IEnumSTATURL*, HRESULT)).call(ppenum)
  end
  def add_url_and_notify(pocsurl : LibC::LPWSTR, pocstitle : LibC::LPWSTR, dwflags : UInt32, fwritehistory : LibC::BOOL, poctnotify : IOleCommandTarget, punkisfolder : IUnknown) : HRESULT
    @lpVtbl.value.add_url_and_notify.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, UInt32, LibC::BOOL, IOleCommandTarget, IUnknown, HRESULT)).call(pocsurl, pocstitle, dwflags, fwritehistory, poctnotify, punkisfolder)
  end
  def clear_history : HRESULT
    @lpVtbl.value.clear_history.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IUrlHistoryNotify
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def query_status(pguidcmdgroup : Guid*, ccmds : UInt32, prgcmds : OLECMD*, pcmdtext : OLECMDTEXT*) : HRESULT
    @lpVtbl.value.query_status.unsafe_as(Proc(Guid*, UInt32, OLECMD*, OLECMDTEXT*, HRESULT)).call(pguidcmdgroup, ccmds, prgcmds, pcmdtext)
  end
  def exec(pguidcmdgroup : Guid*, ncmdid : UInt32, ncmdexecopt : UInt32, pvain : VARIANT*, pvaout : VARIANT*) : HRESULT
    @lpVtbl.value.exec.unsafe_as(Proc(Guid*, UInt32, UInt32, VARIANT*, VARIANT*, HRESULT)).call(pguidcmdgroup, ncmdid, ncmdexecopt, pvain, pvaout)
  end
end
struct LibWin32::IWebBrowserEventsService
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def fire_before_navigate2_event(pfcancel : Int16*) : HRESULT
    @lpVtbl.value.fire_before_navigate2_event.unsafe_as(Proc(Int16*, HRESULT)).call(pfcancel)
  end
  def fire_navigate_complete2_event : HRESULT
    @lpVtbl.value.fire_navigate_complete2_event.unsafe_as(Proc(HRESULT)).call
  end
  def fire_download_begin_event : HRESULT
    @lpVtbl.value.fire_download_begin_event.unsafe_as(Proc(HRESULT)).call
  end
  def fire_download_complete_event : HRESULT
    @lpVtbl.value.fire_download_complete_event.unsafe_as(Proc(HRESULT)).call
  end
  def fire_document_complete_event : HRESULT
    @lpVtbl.value.fire_document_complete_event.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IWebBrowserEventsUrlService
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_url_for_events(purl : UInt8**) : HRESULT
    @lpVtbl.value.get_url_for_events.unsafe_as(Proc(UInt8**, HRESULT)).call(purl)
  end
end
struct LibWin32::ITimerService
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_timer(preferencetimer : ITimer, ppnewtimer : ITimer*) : HRESULT
    @lpVtbl.value.create_timer.unsafe_as(Proc(ITimer, ITimer*, HRESULT)).call(preferencetimer, ppnewtimer)
  end
  def get_named_timer(rguidname : Guid*, pptimer : ITimer*) : HRESULT
    @lpVtbl.value.get_named_timer.unsafe_as(Proc(Guid*, ITimer*, HRESULT)).call(rguidname, pptimer)
  end
  def set_named_timer_reference(rguidname : Guid*, preferencetimer : ITimer) : HRESULT
    @lpVtbl.value.set_named_timer_reference.unsafe_as(Proc(Guid*, ITimer, HRESULT)).call(rguidname, preferencetimer)
  end
end
struct LibWin32::ITimer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def advise(vtimemin : VARIANT, vtimemax : VARIANT, vtimeinterval : VARIANT, dwflags : UInt32, ptimersink : ITimerSink, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, UInt32, ITimerSink, UInt32*, HRESULT)).call(vtimemin, vtimemax, vtimeinterval, dwflags, ptimersink, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def freeze(ffreeze : LibC::BOOL) : HRESULT
    @lpVtbl.value.freeze.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(ffreeze)
  end
  def get_time(pvtime : VARIANT*) : HRESULT
    @lpVtbl.value.get_time.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvtime)
  end
end
struct LibWin32::ITimerEx
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def advise(vtimemin : VARIANT, vtimemax : VARIANT, vtimeinterval : VARIANT, dwflags : UInt32, ptimersink : ITimerSink, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, UInt32, ITimerSink, UInt32*, HRESULT)).call(vtimemin, vtimemax, vtimeinterval, dwflags, ptimersink, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def freeze(ffreeze : LibC::BOOL) : HRESULT
    @lpVtbl.value.freeze.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(ffreeze)
  end
  def get_time(pvtime : VARIANT*) : HRESULT
    @lpVtbl.value.get_time.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvtime)
  end
  def set_mode(dwmode : UInt32) : HRESULT
    @lpVtbl.value.set_mode.unsafe_as(Proc(UInt32, HRESULT)).call(dwmode)
  end
end
struct LibWin32::ITimerSink
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_timer(vtimeadvise : VARIANT) : HRESULT
    @lpVtbl.value.on_timer.unsafe_as(Proc(VARIANT, HRESULT)).call(vtimeadvise)
  end
end
struct LibWin32::IMapMIMEToCLSID
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def enable_default_mappings(benable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable_default_mappings.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(benable)
  end
  def map_mime_to_clsid(pszmimetype : LibC::LPWSTR, pclsid : Guid*) : HRESULT
    @lpVtbl.value.map_mime_to_clsid.unsafe_as(Proc(LibC::LPWSTR, Guid*, HRESULT)).call(pszmimetype, pclsid)
  end
  def set_mapping(pszmimetype : LibC::LPWSTR, dwmapmode : UInt32, clsid : Guid*) : HRESULT
    @lpVtbl.value.set_mapping.unsafe_as(Proc(LibC::LPWSTR, UInt32, Guid*, HRESULT)).call(pszmimetype, dwmapmode, clsid)
  end
end
struct LibWin32::IImageDecodeFilter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(peventsink : IImageDecodeEventSink) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(IImageDecodeEventSink, HRESULT)).call(peventsink)
  end
  def process(pstream : IStream) : HRESULT
    @lpVtbl.value.process.unsafe_as(Proc(IStream, HRESULT)).call(pstream)
  end
  def terminate(hrstatus : HRESULT) : HRESULT
    @lpVtbl.value.terminate.unsafe_as(Proc(HRESULT, HRESULT)).call(hrstatus)
  end
end
struct LibWin32::IImageDecodeEventSink
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_surface(nwidth : Int32, nheight : Int32, bfid : Guid*, npasses : UInt32, dwhints : UInt32, ppsurface : IUnknown*) : HRESULT
    @lpVtbl.value.get_surface.unsafe_as(Proc(Int32, Int32, Guid*, UInt32, UInt32, IUnknown*, HRESULT)).call(nwidth, nheight, bfid, npasses, dwhints, ppsurface)
  end
  def on_begin_decode(pdwevents : UInt32*, pnformats : UInt32*, ppformats : Guid**) : HRESULT
    @lpVtbl.value.on_begin_decode.unsafe_as(Proc(UInt32*, UInt32*, Guid**, HRESULT)).call(pdwevents, pnformats, ppformats)
  end
  def on_bits_complete : HRESULT
    @lpVtbl.value.on_bits_complete.unsafe_as(Proc(HRESULT)).call
  end
  def on_decode_complete(hrstatus : HRESULT) : HRESULT
    @lpVtbl.value.on_decode_complete.unsafe_as(Proc(HRESULT, HRESULT)).call(hrstatus)
  end
  def on_palette : HRESULT
    @lpVtbl.value.on_palette.unsafe_as(Proc(HRESULT)).call
  end
  def on_progress(pbounds : RECT*, bcomplete : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_progress.unsafe_as(Proc(RECT*, LibC::BOOL, HRESULT)).call(pbounds, bcomplete)
  end
end
struct LibWin32::IImageDecodeEventSink2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_surface(nwidth : Int32, nheight : Int32, bfid : Guid*, npasses : UInt32, dwhints : UInt32, ppsurface : IUnknown*) : HRESULT
    @lpVtbl.value.get_surface.unsafe_as(Proc(Int32, Int32, Guid*, UInt32, UInt32, IUnknown*, HRESULT)).call(nwidth, nheight, bfid, npasses, dwhints, ppsurface)
  end
  def on_begin_decode(pdwevents : UInt32*, pnformats : UInt32*, ppformats : Guid**) : HRESULT
    @lpVtbl.value.on_begin_decode.unsafe_as(Proc(UInt32*, UInt32*, Guid**, HRESULT)).call(pdwevents, pnformats, ppformats)
  end
  def on_bits_complete : HRESULT
    @lpVtbl.value.on_bits_complete.unsafe_as(Proc(HRESULT)).call
  end
  def on_decode_complete(hrstatus : HRESULT) : HRESULT
    @lpVtbl.value.on_decode_complete.unsafe_as(Proc(HRESULT, HRESULT)).call(hrstatus)
  end
  def on_palette : HRESULT
    @lpVtbl.value.on_palette.unsafe_as(Proc(HRESULT)).call
  end
  def on_progress(pbounds : RECT*, bcomplete : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_progress.unsafe_as(Proc(RECT*, LibC::BOOL, HRESULT)).call(pbounds, bcomplete)
  end
  def is_alpha_premult_required(pfpremultalpha : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_alpha_premult_required.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfpremultalpha)
  end
end
struct LibWin32::ISniffStream
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def init(pstream : IStream) : HRESULT
    @lpVtbl.value.init.unsafe_as(Proc(IStream, HRESULT)).call(pstream)
  end
  def peek(pbuffer : Void*, nbytes : UInt32, pnbytesread : UInt32*) : HRESULT
    @lpVtbl.value.peek.unsafe_as(Proc(Void*, UInt32, UInt32*, HRESULT)).call(pbuffer, nbytes, pnbytesread)
  end
end
struct LibWin32::IDithererImpl
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_dest_color_table(ncolors : UInt32, prgbcolors : RGBQUAD*) : HRESULT
    @lpVtbl.value.set_dest_color_table.unsafe_as(Proc(UInt32, RGBQUAD*, HRESULT)).call(ncolors, prgbcolors)
  end
  def set_event_sink(peventsink : IImageDecodeEventSink) : HRESULT
    @lpVtbl.value.set_event_sink.unsafe_as(Proc(IImageDecodeEventSink, HRESULT)).call(peventsink)
  end
end
