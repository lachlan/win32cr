require "../system/com.cr"
require "../foundation.cr"
require "../ui/windowsandmessaging.cr"
require "../ui/shell/common.cr"
require "../graphics/gdi.cr"
require "../ui/shell/propertiessystem.cr"
require "../system/ole.cr"
require "../ui/controls.cr"
require "../system/com/structuredstorage.cr"
require "../storage/filesystem.cr"
require "../system/registry.cr"
require "../system/search.cr"
require "../system/io.cr"
require "../data/xml/msxml.cr"
require "../system/console.cr"
require "../networkmanagement/wnet.cr"
require "../security.cr"
require "../system/threading.cr"
require "../graphics/directcomposition.cr"
require "../system/com/urlmon.cr"

{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link("delayimp")]
{% end %}
@[Link("user32")]
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/IGNORE:4199")]
{% end %}
{% if compare_versions(Crystal::VERSION, "1.8.2") <= 0 %}
@[Link(ldflags: "/DELAYLOAD:userenv.dll")]
@[Link(ldflags: "/DELAYLOAD:comctl32.dll")]
@[Link(ldflags: "/DELAYLOAD:user32.dll")]
@[Link(ldflags: "/DELAYLOAD:shell32.dll")]
@[Link(ldflags: "/DELAYLOAD:ole32.dll")]
@[Link(ldflags: "/DELAYLOAD:shdocvw.dll")]
@[Link(ldflags: "/DELAYLOAD:shcore.dll")]
@[Link(ldflags: "/DELAYLOAD:shlwapi.dll")]
@[Link(ldflags: "/DELAYLOAD:hlink.dll")]
@[Link(ldflags: "/DELAYLOAD:onecore.dll")]
@[Link(ldflags: "/DELAYLOAD:twinapi.dll")]
{% else %}
@[Link("userenv")]
@[Link("comctl32")]
@[Link("user32")]
@[Link("shell32")]
@[Link("ole32")]
@[Link("shdocvw")]
@[Link("shcore")]
@[Link("shlwapi")]
@[Link("hlink")]
@[Link("onecore")]
@[Link("twinapi")]
{% end %}
lib LibWin32
  alias ShFindChangeNotificationHandle = LibC::IntPtrT
  alias HDROP = LibC::IntPtrT
  alias HPSXA = LibC::IntPtrT

  HLINK_E_FIRST = -2147221248_i32
  HLINK_S_FIRST = 262400_i32
  WM_CPL_LAUNCH = 2024_u32
  WM_CPL_LAUNCHED = 2025_u32
  CPL_DYNAMIC_RES = 0_u32
  CPL_INIT = 1_u32
  CPL_GETCOUNT = 2_u32
  CPL_INQUIRE = 3_u32
  CPL_SELECT = 4_u32
  CPL_DBLCLK = 5_u32
  CPL_STOP = 6_u32
  CPL_EXIT = 7_u32
  CPL_NEWINQUIRE = 8_u32
  CPL_STARTWPARMSA = 9_u32
  CPL_STARTWPARMSW = 10_u32
  CPL_STARTWPARMS = 10_u32
  CPL_SETUP = 200_u32
  HLINK_S_DONTHIDE = 262400_i32
  FOLDERID_NetworkFolder = "d20beec4-5ca8-4905-ae3b-bf251ea09b53"
  FOLDERID_ComputerFolder = "0ac0837c-bbf8-452a-850d-79d08e667ca7"
  FOLDERID_InternetFolder = "4d9f7874-4e0c-4904-967b-40b0d20c3e4b"
  FOLDERID_ControlPanelFolder = "82a74aeb-aeb4-465c-a014-d097ee346d63"
  FOLDERID_PrintersFolder = "76fc4e2d-d6ad-4519-a663-37bd56068185"
  FOLDERID_SyncManagerFolder = "43668bf8-c14e-49b2-97c9-747784d784b7"
  FOLDERID_SyncSetupFolder = "0f214138-b1d3-4a90-bba9-27cbc0c5389a"
  FOLDERID_ConflictFolder = "4bfefb45-347d-4006-a5be-ac0cb0567192"
  FOLDERID_SyncResultsFolder = "289a9a43-be44-4057-a41b-587a76d7e7f9"
  FOLDERID_RecycleBinFolder = "b7534046-3ecb-4c18-be4e-64cd4cb7d6ac"
  FOLDERID_ConnectionsFolder = "6f0cd92b-2e97-45d1-88ff-b0d186b8dedd"
  FOLDERID_Fonts = "fd228cb7-ae11-4ae3-864c-16f3910ab8fe"
  FOLDERID_Desktop = "b4bfcc3a-db2c-424c-b029-7fe99a87c641"
  FOLDERID_Startup = "b97d20bb-f46a-4c97-ba10-5e3608430854"
  FOLDERID_Programs = "a77f5d77-2e2b-44c3-a6a2-aba601054a51"
  FOLDERID_StartMenu = "625b53c3-ab48-4ec1-ba1f-a1ef4146fc19"
  FOLDERID_Recent = "ae50c081-ebd2-438a-8655-8a092e34987a"
  FOLDERID_SendTo = "8983036c-27c0-404b-8f08-102d10dcfd74"
  FOLDERID_Documents = "fdd39ad0-238f-46af-adb4-6c85480369c7"
  FOLDERID_Favorites = "1777f761-68ad-4d8a-87bd-30b759fa33dd"
  FOLDERID_NetHood = "c5abbf53-e17f-4121-8900-86626fc2c973"
  FOLDERID_PrintHood = "9274bd8d-cfd1-41c3-b35e-b13f55a758f4"
  FOLDERID_Templates = "a63293e8-664e-48db-a079-df759e0509f7"
  FOLDERID_CommonStartup = "82a5ea35-d9cd-47c5-9629-e15d2f714e6e"
  FOLDERID_CommonPrograms = "0139d44e-6afe-49f2-8690-3dafcae6ffb8"
  FOLDERID_CommonStartMenu = "a4115719-d62e-491d-aa7c-e74b8be3b067"
  FOLDERID_PublicDesktop = "c4aa340d-f20f-4863-afef-f87ef2e6ba25"
  FOLDERID_ProgramData = "62ab5d82-fdc1-4dc3-a9dd-070d1d495d97"
  FOLDERID_CommonTemplates = "b94237e7-57ac-4347-9151-b08c6c32d1f7"
  FOLDERID_PublicDocuments = "ed4824af-dce4-45a8-81e2-fc7965083634"
  FOLDERID_RoamingAppData = "3eb685db-65f9-4cf6-a03a-e3ef65729f3d"
  FOLDERID_LocalAppData = "f1b32785-6fba-4fcf-9d55-7b8e7f157091"
  FOLDERID_LocalAppDataLow = "a520a1a4-1780-4ff6-bd18-167343c5af16"
  FOLDERID_InternetCache = "352481e8-33be-4251-ba85-6007caedcf9d"
  FOLDERID_Cookies = "2b0f765d-c0e9-4171-908e-08a611b84ff6"
  FOLDERID_History = "d9dc8a3b-b784-432e-a781-5a1130a75963"
  FOLDERID_System = "1ac14e77-02e7-4e5d-b744-2eb1ae5198b7"
  FOLDERID_SystemX86 = "d65231b0-b2f1-4857-a4ce-a8e7c6ea7d27"
  FOLDERID_Windows = "f38bf404-1d43-42f2-9305-67de0b28fc23"
  FOLDERID_Profile = "5e6c858f-0e22-4760-9afe-ea3317b67173"
  FOLDERID_Pictures = "33e28130-4e1e-4676-835a-98395c3bc3bb"
  FOLDERID_ProgramFilesX86 = "7c5a40ef-a0fb-4bfc-874a-c0f2e0b9fa8e"
  FOLDERID_ProgramFilesCommonX86 = "de974d24-d9c6-4d3e-bf91-f4455120b917"
  FOLDERID_ProgramFilesX64 = "6d809377-6af0-444b-8957-a3773f02200e"
  FOLDERID_ProgramFilesCommonX64 = "6365d5a7-0f0d-45e5-87f6-0da56b6a4f7d"
  FOLDERID_ProgramFiles = "905e63b6-c1bf-494e-b29c-65b732d3d21a"
  FOLDERID_ProgramFilesCommon = "f7f1ed05-9f6d-47a2-aaae-29d317c6f066"
  FOLDERID_UserProgramFiles = "5cd7aee2-2219-4a67-b85d-6c9ce15660cb"
  FOLDERID_UserProgramFilesCommon = "bcbd3057-ca5c-4622-b42d-bc56db0ae516"
  FOLDERID_AdminTools = "724ef170-a42d-4fef-9f26-b60e846fba4f"
  FOLDERID_CommonAdminTools = "d0384e7d-bac3-4797-8f14-cba229b392b5"
  FOLDERID_Music = "4bd8d571-6d19-48d3-be97-422220080e43"
  FOLDERID_Videos = "18989b1d-99b5-455b-841c-ab7c74e4ddfc"
  FOLDERID_Ringtones = "c870044b-f49e-4126-a9c3-b52a1ff411e8"
  FOLDERID_PublicPictures = "b6ebfb86-6907-413c-9af7-4fc2abf07cc5"
  FOLDERID_PublicMusic = "3214fab5-9757-4298-bb61-92a9deaa44ff"
  FOLDERID_PublicVideos = "2400183a-6185-49fb-a2d8-4a392a602ba3"
  FOLDERID_PublicRingtones = "e555ab60-153b-4d17-9f04-a5fe99fc15ec"
  FOLDERID_ResourceDir = "8ad10c31-2adb-4296-a8f7-e4701232c972"
  FOLDERID_LocalizedResourcesDir = "2a00375e-224c-49de-b8d1-440df7ef3ddc"
  FOLDERID_CommonOEMLinks = "c1bae2d0-10df-4334-bedd-7aa20b227a9d"
  FOLDERID_CDBurning = "9e52ab10-f80d-49df-acb8-4330f5687855"
  FOLDERID_UserProfiles = "0762d272-c50a-4bb0-a382-697dcd729b80"
  FOLDERID_Playlists = "de92c1c7-837f-4f69-a3bb-86e631204a23"
  FOLDERID_SamplePlaylists = "15ca69b3-30ee-49c1-ace1-6b5ec372afb5"
  FOLDERID_SampleMusic = "b250c668-f57d-4ee1-a63c-290ee7d1aa1f"
  FOLDERID_SamplePictures = "c4900540-2379-4c75-844b-64e6faf8716b"
  FOLDERID_SampleVideos = "859ead94-2e85-48ad-a71a-0969cb56a6cd"
  FOLDERID_PhotoAlbums = "69d2cf90-fc33-4fb7-9a0c-ebb0f0fcb43c"
  FOLDERID_Public = "dfdf76a2-c82a-4d63-906a-5644ac457385"
  FOLDERID_ChangeRemovePrograms = "df7266ac-9274-4867-8d55-3bd661de872d"
  FOLDERID_AppUpdates = "a305ce99-f527-492b-8b1a-7e76fa98d6e4"
  FOLDERID_AddNewPrograms = "de61d971-5ebc-4f02-a3a9-6c82895e5c04"
  FOLDERID_Downloads = "374de290-123f-4565-9164-39c4925e467b"
  FOLDERID_PublicDownloads = "3d644c9b-1fb8-4f30-9b45-f670235f79c0"
  FOLDERID_SavedSearches = "7d1d3a04-debb-4115-95cf-2f29da2920da"
  FOLDERID_QuickLaunch = "52a4f021-7b75-48a9-9f6b-4b87a210bc8f"
  FOLDERID_Contacts = "56784854-c6cb-462b-8169-88e350acb882"
  FOLDERID_SidebarParts = "a75d362e-50fc-4fb7-ac2c-a8beaa314493"
  FOLDERID_SidebarDefaultParts = "7b396e54-9ec5-4300-be0a-2482ebae1a26"
  FOLDERID_PublicGameTasks = "debf2536-e1a8-4c59-b6a2-414586476aea"
  FOLDERID_GameTasks = "054fae61-4dd8-4787-80b6-090220c4b700"
  FOLDERID_SavedGames = "4c5c32ff-bb9d-43b0-b5b4-2d72e54eaaa4"
  FOLDERID_Games = "cac52c1a-b53d-4edc-92d7-6b2e8ac19434"
  FOLDERID_SEARCH_MAPI = "98ec0e18-2098-4d44-8644-66979315a281"
  FOLDERID_SEARCH_CSC = "ee32e446-31ca-4aba-814f-a5ebd2fd6d5e"
  FOLDERID_Links = "bfb9d5e0-c6a9-404c-b2b2-ae6db6af4968"
  FOLDERID_UsersFiles = "f3ce0f7c-4901-4acc-8648-d5d44b04ef8f"
  FOLDERID_UsersLibraries = "a302545d-deff-464b-abe8-61c8648d939b"
  FOLDERID_SearchHome = "190337d1-b8ca-4121-a639-6d472d16972a"
  FOLDERID_OriginalImages = "2c36c0aa-5812-4b87-bfd0-4cd0dfb19b39"
  FOLDERID_DocumentsLibrary = "7b0db17d-9cd2-4a93-9733-46cc89022e7c"
  FOLDERID_MusicLibrary = "2112ab0a-c86a-4ffe-a368-0de96e47012e"
  FOLDERID_PicturesLibrary = "a990ae9f-a03b-4e80-94bc-9912d7504104"
  FOLDERID_VideosLibrary = "491e922f-5643-4af4-a7eb-4e7a138d8174"
  FOLDERID_RecordedTVLibrary = "1a6fdba2-f42d-4358-a798-b74d745926c5"
  FOLDERID_HomeGroup = "52528a6b-b9e3-4add-b60d-588c2dba842d"
  FOLDERID_HomeGroupCurrentUser = "9b74b6a3-0dfd-4f11-9e78-5f7800f2e772"
  FOLDERID_DeviceMetadataStore = "5ce4a5e9-e4eb-479d-b89f-130c02886155"
  FOLDERID_Libraries = "1b3ea5dc-b587-4786-b4ef-bd1dc332aeae"
  FOLDERID_PublicLibraries = "48daf80b-e6cf-4f4e-b800-0e69d84ee384"
  FOLDERID_UserPinned = "9e3995ab-1f9c-4f13-b827-48b24b6c7174"
  FOLDERID_ImplicitAppShortcuts = "bcb5256f-79f6-4cee-b725-dc34e402fd46"
  FOLDERID_AccountPictures = "008ca0b1-55b4-4c56-b8a8-4de4b299d3be"
  FOLDERID_PublicUserTiles = "0482af6c-08f1-4c34-8c90-e17ec98b1e17"
  FOLDERID_AppsFolder = "1e87508d-89c2-42f0-8a7e-645a0f50ca58"
  FOLDERID_StartMenuAllPrograms = "f26305ef-6948-40b9-b255-81453d09c785"
  FOLDERID_CommonStartMenuPlaces = "a440879f-87a0-4f7d-b700-0207b966194a"
  FOLDERID_ApplicationShortcuts = "a3918781-e5f2-4890-b3d9-a7e54332328c"
  FOLDERID_RoamingTiles = "00bcfc5a-ed94-4e48-96a1-3f6217f21990"
  FOLDERID_RoamedTileImages = "aaa8d5a5-f1d6-4259-baa8-78e7ef60835e"
  FOLDERID_Screenshots = "b7bede81-df94-4682-a7d8-57a52620b86f"
  FOLDERID_CameraRoll = "ab5fb87b-7ce2-4f83-915d-550846c9537b"
  FOLDERID_SkyDrive = "a52bba46-e9e1-435f-b3d9-28daa648c0f6"
  FOLDERID_OneDrive = "a52bba46-e9e1-435f-b3d9-28daa648c0f6"
  FOLDERID_SkyDriveDocuments = "24d89e24-2f19-4534-9dde-6a6671fbb8fe"
  FOLDERID_SkyDrivePictures = "339719b5-8c47-4894-94c2-d8f77add44a6"
  FOLDERID_SkyDriveMusic = "c3f2459e-80d6-45dc-bfef-1f769f2be730"
  FOLDERID_SkyDriveCameraRoll = "767e6811-49cb-4273-87c2-20f355e1085b"
  FOLDERID_SearchHistory = "0d4c3db6-03a3-462f-a0e6-08924c41b5d4"
  FOLDERID_SearchTemplates = "7e636bfe-dfa9-4d5e-b456-d7b39851d8a9"
  FOLDERID_CameraRollLibrary = "2b20df75-1eda-4039-8097-38798227d5b7"
  FOLDERID_SavedPictures = "3b193882-d3ad-4eab-965a-69829d1fb59f"
  FOLDERID_SavedPicturesLibrary = "e25b5812-be88-4bd9-94b0-29233477b6c3"
  FOLDERID_RetailDemo = "12d4c69e-24ad-4923-be19-31321c43a767"
  FOLDERID_Device = "1c2ac1dc-4358-4b6c-9733-af21156576f0"
  FOLDERID_DevelopmentFiles = "dbe8e08e-3053-4bbc-b183-2a7b2b191e59"
  FOLDERID_Objects3D = "31c0dd25-9439-4f12-bf41-7ff4eda38722"
  FOLDERID_AppCaptures = "edc0fe71-98d8-4f4a-b920-c8dc133cb165"
  FOLDERID_LocalDocuments = "f42ee2d3-909f-4907-8871-4c22fc0bf756"
  FOLDERID_LocalPictures = "0ddd015d-b06c-45d5-8c4c-f59713854639"
  FOLDERID_LocalVideos = "35286a68-3c57-41a1-bbb1-0eae73d76c95"
  FOLDERID_LocalMusic = "a0c69a99-21c8-4671-8703-7934162fcf1d"
  FOLDERID_LocalDownloads = "7d83ee9b-2244-4e70-b1f5-5393042af1e4"
  FOLDERID_RecordedCalls = "2f8b40c2-83ed-48ee-b383-a1f157ec6f9a"
  FOLDERID_AllAppMods = "7ad67899-66af-43ba-9156-6aad42e6c596"
  FOLDERID_CurrentAppMods = "3db40b20-2a30-4dbe-917e-771dd21dd099"
  FOLDERID_AppDataDesktop = "b2c5e279-7add-439f-b28c-c41fe1bbf672"
  FOLDERID_AppDataDocuments = "7be16610-1f7f-44ac-bff0-83e15f2ffca1"
  FOLDERID_AppDataFavorites = "7cfbefbc-de1f-45aa-b843-a542ac536cc9"
  FOLDERID_AppDataProgramData = "559d40a3-a036-40fa-af61-84cb430a4d34"
  FOLDERID_LocalStorage = "b3eb08d3-a1f3-496b-865a-42b536cda0ec"
  CLSID_InternetShortcut = "fbf23b40-e3f0-101b-8488-00aa003e56f8"
  CLSID_NetworkDomain = "46e06680-4bf0-11d1-83ee-00a0c90dc849"
  CLSID_NetworkServer = "c0542a90-4bf0-11d1-83ee-00a0c90dc849"
  CLSID_NetworkShare = "54a754c0-4bf0-11d1-83ee-00a0c90dc849"
  CLSID_MyComputer = "20d04fe0-3aea-1069-a2d8-08002b30309d"
  CLSID_Internet = "871c5380-42a0-1069-a2ea-08002b30309d"
  CLSID_RecycleBin = "645ff040-5081-101b-9f08-00aa002f954e"
  CLSID_ControlPanel = "21ec2020-3aea-1069-a2dd-08002b30309d"
  CLSID_Printers = "2227a280-3aea-1069-a2de-08002b30309d"
  CLSID_MyDocuments = "450d8fba-ad25-11d0-98a8-0800361b1103"
  CATID_BrowsableShellExt = "00021490-0000-0000-c000-000000000046"
  CATID_BrowseInPlace = "00021491-0000-0000-c000-000000000046"
  CATID_DeskBand = "00021492-0000-0000-c000-000000000046"
  CATID_InfoBand = "00021493-0000-0000-c000-000000000046"
  CATID_CommBand = "00021494-0000-0000-c000-000000000046"
  FMTID_Intshcut = "000214a0-0000-0000-c000-000000000046"
  FMTID_InternetSite = "000214a1-0000-0000-c000-000000000046"
  CGID_Explorer = "000214d0-0000-0000-c000-000000000046"
  CGID_ShellDocView = "000214d1-0000-0000-c000-000000000046"
  CGID_ShellServiceObject = "000214d2-0000-0000-c000-000000000046"
  CGID_ExplorerBarDoc = "000214d3-0000-0000-c000-000000000046"
  CLSID_FolderShortcut = "0afaced1-e828-11d1-9187-b532f1e9575d"
  CLSID_CFSIconOverlayManager = "63b51f81-c868-11d0-999c-00c04fd655e1"
  CLSID_ShellThumbnailDiskCache = "1ebdcf80-a200-11d0-a3a4-00c04fd706ec"
  SID_DefView = "6d12fe80-7911-11cf-9534-0000c05bae0b"
  CGID_DefView = "4af07f10-d231-11d0-b942-00a0c90312e1"
  CLSID_MenuBand = "5b4dae26-b807-11d0-9815-00c04fd91972"
  VID_LargeIcons = "0057d0e0-3573-11cf-ae69-08002b2e1262"
  VID_SmallIcons = "089000c0-3573-11cf-ae69-08002b2e1262"
  VID_List = "0e1fa5e0-3573-11cf-ae69-08002b2e1262"
  VID_Details = "137e7700-3573-11cf-ae69-08002b2e1262"
  VID_Tile = "65f125e5-7be1-4810-ba9d-d271c8432ce3"
  VID_Content = "30c2c434-0889-4c8d-985d-a9f71830b0a9"
  VID_Thumbnails = "8bebb290-52d0-11d0-b7f4-00c04fd706ec"
  VID_ThumbStrip = "8eefa624-d1e9-445b-94b7-74fbce2ea11a"
  SID_SInPlaceBrowser = "1d2ae02b-3655-46cc-b63a-285988153bca"
  SID_SSearchBoxInfo = "142daa61-516b-4713-b49c-fb985ef82998"
  SID_CommandsPropertyBag = "6e043250-4416-485c-b143-e62a760d9fe5"
  CLSID_CUrlHistory = "3c374a40-bae4-11cf-bf7d-00aa006946ee"
  CLSID_CURLSearchHook = "cfbfae00-17a6-11d0-99cb-00c04fd64497"
  CLSID_AutoComplete = "00bb2763-6a77-11d0-a535-00c04fd7d062"
  CLSID_ACLHistory = "00bb2764-6a77-11d0-a535-00c04fd7d062"
  CLSID_ACListISF = "03c036f1-a186-11d0-824a-00aa005b4383"
  CLSID_ACLMRU = "6756a641-de71-11d0-831b-00aa005b4383"
  CLSID_ACLMulti = "00bb2765-6a77-11d0-a535-00c04fd7d062"
  CLSID_ACLCustomMRU = "6935db93-21e8-4ccc-beb9-9fe3c77a297a"
  CLSID_ProgressDialog = "f8383852-fcd3-11d1-a6b9-006097df5bd4"
  SID_STopLevelBrowser = "4c96be40-915c-11cf-99d3-00aa004ae837"
  CLSID_FileTypes = "b091e540-83e3-11cf-a713-0020afd79762"
  CLSID_ActiveDesktop = "75048700-ef1f-11d0-9888-006097deacf9"
  CLSID_QueryAssociations = "a07034fd-6caa-4954-ac3f-97a27216f98a"
  CLSID_LinkColumnProvider = "24f14f02-7b1c-11d1-838f-0000f80461cf"
  CGID_ShortCut = "93a68750-951a-11d1-946f-000000000000"
  CLSID_InternetButtons = "1e796980-9cc5-11d1-a83f-00c04fc99d61"
  CLSID_MSOButtons = "178f34b8-a282-11d2-86c5-00c04f8eea99"
  CLSID_ToolbarExtButtons = "2ce4b5d8-a28f-11d2-86c5-00c04f8eea99"
  CLSID_DarwinAppPublisher = "cfccc7a0-a282-11d1-9082-006008059382"
  CLSID_DocHostUIHandler = "7057e952-bd1b-11d1-8919-00c04fc2c836"
  FMTID_ShellDetails = "28636aa6-953d-11d2-b5d6-00c04fd918d0"
  PID_FINDDATA = 0_u32
  PID_NETRESOURCE = 1_u32
  PID_DESCRIPTIONID = 2_u32
  PID_WHICHFOLDER = 3_u32
  PID_NETWORKLOCATION = 4_u32
  PID_COMPUTERNAME = 5_u32
  FMTID_Storage = "b725f130-47ef-101a-a5f1-02608c9eebac"
  FMTID_ImageProperties = "14b81da1-0135-4d31-96d9-6cbfc9671a99"
  FMTID_CustomImageProperties = "7ecd8b0e-c136-4a9b-9411-4ebd6673ccc3"
  FMTID_LibraryProperties = "5d76b67f-9b3d-44bb-b6ae-25da4f638a67"
  FMTID_Displaced = "9b174b33-40ff-11d2-a27e-00c04fc30871"
  PID_DISPLACED_FROM = 2_u32
  PID_DISPLACED_DATE = 3_u32
  FMTID_Briefcase = "328d8b21-7729-4bfc-954c-902b329d56b0"
  PID_SYNC_COPY_IN = 2_u32
  FMTID_Misc = "9b174b34-40ff-11d2-a27e-00c04fc30871"
  PID_MISC_STATUS = 2_u32
  PID_MISC_ACCESSCOUNT = 3_u32
  PID_MISC_OWNER = 4_u32
  PID_HTMLINFOTIPFILE = 5_u32
  PID_MISC_PICS = 6_u32
  FMTID_WebView = "f2275480-f782-4291-bd94-f13693513aec"
  PID_DISPLAY_PROPERTIES = 0_u32
  PID_INTROTEXT = 1_u32
  FMTID_MUSIC = "56a3372e-ce9c-11d2-9f0e-006097c686f6"
  PIDSI_ARTIST = 2_u32
  PIDSI_SONGTITLE = 3_u32
  PIDSI_ALBUM = 4_u32
  PIDSI_YEAR = 5_u32
  PIDSI_COMMENT = 6_u32
  PIDSI_TRACK = 7_u32
  PIDSI_GENRE = 11_u32
  PIDSI_LYRICS = 12_u32
  FMTID_DRM = "aeac19e4-89ae-4508-b9b7-bb867abee2ed"
  PIDDRSI_PROTECTED = 2_u32
  PIDDRSI_DESCRIPTION = 3_u32
  PIDDRSI_PLAYCOUNT = 4_u32
  PIDDRSI_PLAYSTARTS = 5_u32
  PIDDRSI_PLAYEXPIRES = 6_u32
  PIDVSI_STREAM_NAME = 2_u32
  PIDVSI_FRAME_WIDTH = 3_u32
  PIDVSI_FRAME_HEIGHT = 4_u32
  PIDVSI_TIMELENGTH = 7_u32
  PIDVSI_FRAME_COUNT = 5_u32
  PIDVSI_FRAME_RATE = 6_u32
  PIDVSI_DATA_RATE = 8_u32
  PIDVSI_SAMPLE_SIZE = 9_u32
  PIDVSI_COMPRESSION = 10_u32
  PIDVSI_STREAM_NUMBER = 11_u32
  PIDASI_FORMAT = 2_u32
  PIDASI_TIMELENGTH = 3_u32
  PIDASI_AVG_DATA_RATE = 4_u32
  PIDASI_SAMPLE_RATE = 5_u32
  PIDASI_SAMPLE_SIZE = 6_u32
  PIDASI_CHANNEL_COUNT = 7_u32
  PIDASI_STREAM_NUMBER = 8_u32
  PIDASI_STREAM_NAME = 9_u32
  PIDASI_COMPRESSION = 10_u32
  PID_CONTROLPANEL_CATEGORY = 2_u32
  FMTID_Volume = "9b174b35-40ff-11d2-a27e-00c04fc30871"
  PID_VOLUME_FREE = 2_u32
  PID_VOLUME_CAPACITY = 3_u32
  PID_VOLUME_FILESYSTEM = 4_u32
  PID_SHARE_CSC_STATUS = 2_u32
  PID_LINK_TARGET = 2_u32
  PID_LINK_TARGET_TYPE = 3_u32
  FMTID_Query = "49691c90-7e17-101a-a91c-08002b2ecda9"
  PID_QUERY_RANK = 2_u32
  CLSID_HWShellExecute = "ffb8655f-81b9-4fce-b89c-9a6ba76d13e7"
  CLSID_DragDropHelper = "4657278a-411b-11d2-839a-00c04fd918d0"
  CLSID_CAnchorBrowsePropertyPage = "3050f3bb-98b5-11cf-bb82-00aa00bdce0b"
  CLSID_CImageBrowsePropertyPage = "3050f3b3-98b5-11cf-bb82-00aa00bdce0b"
  CLSID_CDocBrowsePropertyPage = "3050f3b4-98b5-11cf-bb82-00aa00bdce0b"
  SID_STopWindow = "49e1b500-4636-11d3-97f7-00c04f45d0b3"
  SID_SGetViewFromViewDual = "889a935d-971e-4b12-b90c-24dfc9e1e5e8"
  CLSID_FolderItemsMultiLevel = "53c74826-ab99-4d33-aca4-3117f51d3788"
  CLSID_NewMenu = "d969a300-e7ff-11d0-a93b-00a0c90f2719"
  BHID_SFObject = "3981e224-f559-11d3-8e3a-00c04f6837d5"
  BHID_SFUIObject = "3981e225-f559-11d3-8e3a-00c04f6837d5"
  BHID_SFViewObject = "3981e226-f559-11d3-8e3a-00c04f6837d5"
  BHID_Storage = "3981e227-f559-11d3-8e3a-00c04f6837d5"
  BHID_Stream = "1cebb3ab-7c10-499a-a417-92ca16c4cb83"
  BHID_RandomAccessStream = "f16fc93b-77ae-4cfe-bda7-a866eea6878d"
  BHID_LinkTargetItem = "3981e228-f559-11d3-8e3a-00c04f6837d5"
  BHID_StorageEnum = "4621a4e3-f0d6-4773-8a9c-46e77b174840"
  BHID_Transfer = "d5e346a1-f753-4932-b403-4574800e2498"
  BHID_PropertyStore = "0384e1a4-1523-439c-a4c8-ab911052f586"
  BHID_ThumbnailHandler = "7b2e650a-8e20-4f4a-b09e-6597afc72fb0"
  BHID_EnumItems = "94f60519-2850-4924-aa5a-d15e84868039"
  BHID_DataObject = "b8c0bd9f-ed24-455c-83e6-d5390c4fe8c4"
  BHID_AssociationArray = "bea9ef17-82f1-4f60-9284-4f8db75c3be9"
  BHID_Filter = "38d08778-f557-4690-9ebf-ba54706ad8f7"
  BHID_EnumAssocHandlers = "b8ab0b9c-c2ec-4f7a-918d-314900e6280a"
  BHID_StorageItem = "404e2109-77d2-4699-a5a0-4fdf10db9837"
  BHID_FilePlaceholder = "8677dceb-aae0-4005-8d3d-547fa852f825"
  CATID_FilePlaceholderMergeHandler = "3e9c9a51-d4aa-4870-b47c-7424b491f1cc"
  SID_CtxQueryAssociations = "faadfc40-b777-4b69-aa81-77035ef0e6e8"
  CLSID_QuickLinks = "0e5cbf21-d15f-11d0-8301-00aa005b4383"
  CLSID_ISFBand = "d82be2b0-5764-11d0-a96e-00c04fd705a2"
  CLSID_ShellFldSetExt = "6d5313c0-8c62-11d1-b2cd-006097df8c11"
  SID_SMenuBandChild = "ed9cc020-08b9-11d1-9823-00c04fd91972"
  SID_SMenuBandParent = "8c278eec-3eab-11d1-8cb0-00c04fd918d0"
  SID_SMenuPopup = "d1e7afeb-6a2e-11d0-8c78-00c04fd918b4"
  SID_SMenuBandBottomSelected = "165ebaf4-6d51-11d2-83ad-00c04fd918d0"
  SID_SMenuBandBottom = "743ca664-0deb-11d1-9825-00c04fd91972"
  SID_MenuShellFolder = "a6c17eb4-2d65-11d2-838f-00c04fd918d0"
  SID_SMenuBandContextMenuModifier = "39545874-7162-465e-b783-2aa1874fef81"
  SID_SMenuBandBKContextMenu = "164bbd86-1d0d-4de0-9a3b-d9729647c2b8"
  CGID_MENUDESKBAR = "5c9f0a12-959e-11d0-a3a4-00a0c9082636"
  SID_SMenuBandTop = "9493a810-ec38-11d0-bc46-00aa006ce2f5"
  CLSID_MenuToolbarBase = "40b96610-b522-11d1-b3b4-00aa006efde7"
  CLSID_MenuBandSite = "e13ef4e4-d2f2-11d0-9816-00c04fd91972"
  SID_SCommDlgBrowser = "80f30233-b7df-11d2-a33b-006097df5bd4"
  CPFG_LOGON_USERNAME = "da15bbe8-954d-4fd3-b0f4-1fb5b90b174b"
  CPFG_LOGON_PASSWORD = "60624cfa-a477-47b1-8a8e-3a4a19981827"
  CPFG_SMARTCARD_USERNAME = "3e1ecf69-568c-4d96-9d59-46444174e2d6"
  CPFG_SMARTCARD_PIN = "4fe5263b-9181-46c1-b0a4-9dedd4db7dea"
  CPFG_CREDENTIAL_PROVIDER_LOGO = "2d837775-f6cd-464e-a745-482fd0b47493"
  CPFG_CREDENTIAL_PROVIDER_LABEL = "286bbff3-bad4-438f-b007-79b7267c3d48"
  CPFG_STANDALONE_SUBMIT_BUTTON = "0b7b0ad8-cc36-4d59-802b-82f714fa7022"
  CPFG_STYLE_LINK_AS_BUTTON = "088fa508-94a6-4430-a4cb-6fc6e3c0b9e2"
  FOLDERTYPEID_Invalid = "57807898-8c4f-4462-bb63-71042380b109"
  FOLDERTYPEID_Generic = "5c4f28b5-f869-4e84-8e60-f11db97c5cc7"
  FOLDERTYPEID_GenericSearchResults = "7fde1a1e-8b31-49a5-93b8-6be14cfa4943"
  FOLDERTYPEID_GenericLibrary = "5f4eab9a-6833-4f61-899d-31cf46979d49"
  FOLDERTYPEID_Documents = "7d49d726-3c21-4f05-99aa-fdc2c9474656"
  FOLDERTYPEID_Pictures = "b3690e58-e961-423b-b687-386ebfd83239"
  FOLDERTYPEID_Music = "94d6ddcc-4a68-4175-a374-bd584a510b78"
  FOLDERTYPEID_Videos = "5fa96407-7e77-483c-ac93-691d05850de8"
  FOLDERTYPEID_Downloads = "885a186e-a440-4ada-812b-db871b942259"
  FOLDERTYPEID_UserFiles = "cd0fc69b-71e2-46e5-9690-5bcd9f57aab3"
  FOLDERTYPEID_UsersLibraries = "c4d98f09-6124-4fe0-9942-826416082da9"
  FOLDERTYPEID_OtherUsers = "b337fd00-9dd5-4635-a6d4-da33fd102b7a"
  FOLDERTYPEID_PublishedItems = "7f2f5b96-ff74-41da-afd8-1c78a5f3aea2"
  FOLDERTYPEID_Communications = "91475fe5-586b-4eba-8d75-d17434b8cdf6"
  FOLDERTYPEID_Contacts = "de2b70ec-9bf7-4a93-bd3d-243f7881d492"
  FOLDERTYPEID_StartMenu = "ef87b4cb-f2ce-4785-8658-4ca6c63e38c6"
  FOLDERTYPEID_RecordedTV = "5557a28f-5da6-4f83-8809-c2c98a11a6fa"
  FOLDERTYPEID_SavedGames = "d0363307-28cb-4106-9f23-2956e3e5e0e7"
  FOLDERTYPEID_OpenSearch = "8faf9629-1980-46ff-8023-9dceab9c3ee3"
  FOLDERTYPEID_SearchConnector = "982725ee-6f47-479e-b447-812bfa7d2e8f"
  FOLDERTYPEID_AccountPictures = "db2a5d8f-06e6-4007-aba6-af877d526ea6"
  FOLDERTYPEID_Games = "b689b0d0-76d3-4cbb-87f7-585d0e0ce070"
  FOLDERTYPEID_ControlPanelCategory = "de4f0660-fa10-4b8f-a494-068b20b22307"
  FOLDERTYPEID_ControlPanelClassic = "0c3794f3-b545-43aa-a329-c37430c58d2a"
  FOLDERTYPEID_Printers = "2c7bbec6-c844-4a0a-91fa-cef6f59cfda1"
  FOLDERTYPEID_RecycleBin = "d6d9e004-cd87-442b-9d57-5e0aeb4f6f72"
  FOLDERTYPEID_SoftwareExplorer = "d674391b-52d9-4e07-834e-67c98610f39d"
  FOLDERTYPEID_CompressedFolder = "80213e82-bcfd-4c4f-8817-bb27601267a9"
  FOLDERTYPEID_NetworkExplorer = "25cc242b-9a7c-4f51-80e0-7a2928febe42"
  FOLDERTYPEID_Searches = "0b0ba2e3-405f-415e-a6ee-cad625207853"
  FOLDERTYPEID_SearchHome = "834d8a44-0974-4ed6-866e-f203d80b3810"
  FOLDERTYPEID_StorageProviderGeneric = "4f01ebc5-2385-41f2-a28e-2c5c91fb56e0"
  FOLDERTYPEID_StorageProviderDocuments = "dd61bd66-70e8-48dd-9655-65c5e1aac2d1"
  FOLDERTYPEID_StorageProviderPictures = "71d642a9-f2b1-42cd-ad92-eb9300c7cc0a"
  FOLDERTYPEID_StorageProviderMusic = "672ecd7e-af04-4399-875c-0290845b6247"
  FOLDERTYPEID_StorageProviderVideos = "51294da1-d7b1-485b-9e9a-17cffe33e187"
  SYNCMGR_OBJECTID_Icon = "6dbc85c3-5d07-4c72-a777-7fec78072c06"
  SYNCMGR_OBJECTID_EventStore = "4bef34b9-a786-4075-ba88-0c2b9d89a98f"
  SYNCMGR_OBJECTID_ConflictStore = "d78181f4-2389-47e4-a960-60bcc2ed930b"
  SYNCMGR_OBJECTID_BrowseContent = "57cbb584-e9b4-47ae-a120-c4df3335dee2"
  SYNCMGR_OBJECTID_ShowSchedule = "edc6f3e3-8441-4109-adf3-6c1ca0b7de47"
  SYNCMGR_OBJECTID_QueryBeforeActivate = "d882d80b-e7aa-49ed-86b7-e6e1f714cdfe"
  SYNCMGR_OBJECTID_QueryBeforeDeactivate = "a0efc282-60e0-460e-9374-ea88513cfc80"
  SYNCMGR_OBJECTID_QueryBeforeEnable = "04cbf7f0-5beb-4de1-bc90-908345c480f6"
  SYNCMGR_OBJECTID_QueryBeforeDisable = "bb5f64aa-f004-4eb5-8e4d-26751966344c"
  SYNCMGR_OBJECTID_QueryBeforeDelete = "f76c3397-afb3-45d7-a59f-5a49e905437e"
  SYNCMGR_OBJECTID_EventLinkClick = "2203bdc1-1af1-4082-8c30-28399f41384c"
  EP_NavPane = "cb316b22-25f7-42b8-8a09-540d23a43c2f"
  EP_Commands = "d9745868-ca5f-4a76-91cd-f5a129fbb076"
  EP_Commands_Organize = "72e81700-e3ec-4660-bf24-3c3b7b648806"
  EP_Commands_View = "21f7c32d-eeaa-439b-bb51-37b96fd6a943"
  EP_DetailsPane = "43abf98b-89b8-472d-b9ce-e69b8229f019"
  EP_PreviewPane = "893c63d1-45c8-4d17-be19-223be71be365"
  EP_QueryPane = "65bcde4f-4f07-4f27-83a7-1afca4df7ddd"
  EP_AdvQueryPane = "b4e9db8b-34ba-4c39-b5cc-16a1bd2c411c"
  EP_StatusBar = "65fe56ce-5cfe-4bc4-ad8a-7ae3fe7e8f7c"
  EP_Ribbon = "d27524a8-c9f2-4834-a106-df8889fd4f37"
  CATID_LocationFactory = "965c4d51-8b76-4e57-80b7-564d2ea4b55e"
  CATID_LocationProvider = "1b3ca474-2614-414b-b813-1aceca3e3dd8"
  ItemCount_Property_GUID = "abbf5c45-5ccc-47b7-bb4e-87cb87bbd162"
  SelectedItemCount_Property_GUID = "8fe316d2-0e52-460a-9c1e-48f273d470a3"
  ItemIndex_Property_GUID = "92a053da-2969-4021-bf27-514cfc2e4a69"
  CATID_SearchableApplication = "366c292a-d9b3-4dbf-bb70-e62ec3d0bbbf"
  IDD_WIZEXTN_FIRST = 20480_u32
  IDD_WIZEXTN_LAST = 20736_u32
  SHPWHF_NORECOMPRESS = 1_u32
  SHPWHF_NONETPLACECREATE = 2_u32
  SHPWHF_NOFILESELECTOR = 4_u32
  SHPWHF_USEMRU = 8_u32
  SHPWHF_ANYLOCATION = 256_u32
  SHPWHF_VALIDATEVIAWEBFOLDERS = 65536_u32
  ACDD_VISIBLE = 1_u32
  SID_SCommandBarState = "b99eaa5c-3850-4400-bc33-2ce534048bf8"
  NSTCDHPOS_ONTOP = -1_i32
  FVSIF_RECT = 1_u32
  FVSIF_PINNED = 2_u32
  FVSIF_NEWFAILED = 134217728_u32
  FVSIF_NEWFILE = 2147483648_u32
  FVSIF_CANVIEWIT = 1073741824_u32
  FCIDM_TOOLBAR = 40960_u32
  FCIDM_STATUS = 40961_u32
  IDC_OFFLINE_HAND = 103_u32
  IDC_PANTOOL_HAND_OPEN = 104_u32
  IDC_PANTOOL_HAND_CLOSED = 105_u32
  PANE_NONE = 4294967295_u32
  PANE_ZONE = 1_u32
  PANE_OFFLINE = 2_u32
  PANE_PRINTER = 3_u32
  PANE_SSL = 4_u32
  PANE_NAVIGATION = 5_u32
  PANE_PROGRESS = 6_u32
  PANE_PRIVACY = 7_u32
  DWFRF_NORMAL = 0_u32
  DWFRF_DELETECONFIGDATA = 1_u32
  DWFAF_HIDDEN = 1_u32
  DWFAF_GROUP1 = 2_u32
  DWFAF_GROUP2 = 4_u32
  DWFAF_AUTOHIDE = 16_u32
  SHIMSTCAPFLAG_LOCKABLE = 1_u32
  SHIMSTCAPFLAG_PURGEABLE = 2_u32
  ISFB_MASK_STATE = 1_u32
  ISFB_MASK_BKCOLOR = 2_u32
  ISFB_MASK_VIEWMODE = 4_u32
  ISFB_MASK_SHELLFOLDER = 8_u32
  ISFB_MASK_IDLIST = 16_u32
  ISFB_MASK_COLORS = 32_u32
  ISFB_STATE_DEFAULT = 0_u32
  ISFB_STATE_DEBOSSED = 1_u32
  ISFB_STATE_ALLOWRENAME = 2_u32
  ISFB_STATE_NOSHOWTEXT = 4_u32
  ISFB_STATE_CHANNELBAR = 16_u32
  ISFB_STATE_QLINKSMODE = 32_u32
  ISFB_STATE_FULLOPEN = 64_u32
  ISFB_STATE_NONAMESORT = 128_u32
  ISFB_STATE_BTNMINSIZE = 256_u32
  ISFBVIEWMODE_SMALLICONS = 1_u32
  ISFBVIEWMODE_LARGEICONS = 2_u32
  ISFBVIEWMODE_LOGOS = 3_u32
  DBC_GS_IDEAL = 0_u32
  DBC_GS_SIZEDOWN = 1_u32
  DBC_HIDE = 0_u32
  DBC_SHOW = 1_u32
  DBC_SHOWOBSCURE = 2_u32
  SSM_CLEAR = 0_u32
  SSM_SET = 1_u32
  SSM_REFRESH = 2_u32
  SSM_UPDATE = 4_u32
  SCHEME_DISPLAY = 1_u32
  SCHEME_EDIT = 2_u32
  SCHEME_LOCAL = 4_u32
  SCHEME_GLOBAL = 8_u32
  SCHEME_REFRESH = 16_u32
  SCHEME_UPDATE = 32_u32
  SCHEME_DONOTUSE = 64_u32
  SCHEME_CREATE = 128_u32
  GADOF_DIRTY = 1_u32
  SHCDF_UPDATEITEM = 1_u32
  PPCF_ADDQUOTES = 1_u32
  PPCF_ADDARGUMENTS = 3_u32
  PPCF_NODIRECTORIES = 16_u32
  PPCF_FORCEQUALIFY = 64_u32
  PPCF_LONGESTPOSSIBLE = 128_u32
  OPENPROPS_NONE = 0_u32
  OPENPROPS_INHIBITPIF = 32768_u32
  GETPROPS_NONE = 0_u32
  SETPROPS_NONE = 0_u32
  CLOSEPROPS_NONE = 0_u32
  CLOSEPROPS_DISCARD = 1_u32
  TBIF_APPEND = 0_u32
  TBIF_PREPEND = 1_u32
  TBIF_REPLACE = 2_u32
  TBIF_DEFAULT = 0_u32
  TBIF_INTERNETBAR = 65536_u32
  TBIF_STANDARDTOOLBAR = 131072_u32
  TBIF_NOTOOLBAR = 196608_u32
  SFVM_REARRANGE = 1_u32
  SFVM_ADDOBJECT = 3_u32
  SFVM_REMOVEOBJECT = 6_u32
  SFVM_UPDATEOBJECT = 7_u32
  SFVM_GETSELECTEDOBJECTS = 9_u32
  SFVM_SETITEMPOS = 14_u32
  SFVM_SETCLIPBOARD = 16_u32
  SFVM_SETPOINTS = 23_u32
  GIL_OPENICON = 1_u32
  GIL_FORSHELL = 2_u32
  GIL_ASYNC = 32_u32
  GIL_DEFAULTICON = 64_u32
  GIL_FORSHORTCUT = 128_u32
  GIL_CHECKSHIELD = 512_u32
  GIL_SIMULATEDOC = 1_u32
  GIL_PERINSTANCE = 2_u32
  GIL_PERCLASS = 4_u32
  GIL_NOTFILENAME = 8_u32
  GIL_DONTCACHE = 16_u32
  GIL_SHIELD = 512_u32
  GIL_FORCENOSHIELD = 1024_u32
  SIOM_OVERLAYINDEX = 1_u32
  SIOM_ICONINDEX = 2_u32
  SIOM_RESERVED_SHARED = 0_u32
  SIOM_RESERVED_LINK = 1_u32
  SIOM_RESERVED_SLOWFILE = 2_u32
  SIOM_RESERVED_DEFAULT = 3_u32
  OI_DEFAULT = 0_u32
  OI_ASYNC = 4294962926_u32
  IDO_SHGIOI_SHARE = 268435455_u32
  IDO_SHGIOI_LINK = 268435454_u32
  IDO_SHGIOI_SLOWFILE = 4294967293_u64
  IDO_SHGIOI_DEFAULT = 4294967292_u64
  NT_CONSOLE_PROPS_SIG = 2684354562_u32
  NT_FE_CONSOLE_PROPS_SIG = 2684354564_u32
  EXP_DARWIN_ID_SIG = 2684354566_u32
  EXP_SPECIAL_FOLDER_SIG = 2684354565_u32
  EXP_SZ_LINK_SIG = 2684354561_u32
  EXP_SZ_ICON_SIG = 2684354567_u32
  EXP_PROPERTYSTORAGE_SIG = 2684354569_u32
  FCIDM_SHVIEWFIRST = 0_u32
  FCIDM_SHVIEWLAST = 32767_u32
  FCIDM_BROWSERFIRST = 40960_u32
  FCIDM_BROWSERLAST = 48896_u32
  FCIDM_GLOBALFIRST = 32768_u32
  FCIDM_GLOBALLAST = 40959_u32
  FCIDM_MENU_FILE = 32768_u32
  FCIDM_MENU_EDIT = 32832_u32
  FCIDM_MENU_VIEW = 32896_u32
  FCIDM_MENU_VIEW_SEP_OPTIONS = 32897_u32
  FCIDM_MENU_TOOLS = 32960_u32
  FCIDM_MENU_TOOLS_SEP_GOTO = 32961_u32
  FCIDM_MENU_HELP = 33024_u32
  FCIDM_MENU_FIND = 33088_u32
  FCIDM_MENU_EXPLORE = 33104_u32
  FCIDM_MENU_FAVORITES = 33136_u32
  OFASI_EDIT = 1_u32
  OFASI_OPENDESKTOP = 2_u32
  CSIDL_DESKTOP = 0_u32
  CSIDL_INTERNET = 1_u32
  CSIDL_PROGRAMS = 2_u32
  CSIDL_CONTROLS = 3_u32
  CSIDL_PRINTERS = 4_u32
  CSIDL_PERSONAL = 5_u32
  CSIDL_FAVORITES = 6_u32
  CSIDL_STARTUP = 7_u32
  CSIDL_RECENT = 8_u32
  CSIDL_SENDTO = 9_u32
  CSIDL_BITBUCKET = 10_u32
  CSIDL_STARTMENU = 11_u32
  CSIDL_MYDOCUMENTS = 5_u32
  CSIDL_MYMUSIC = 13_u32
  CSIDL_MYVIDEO = 14_u32
  CSIDL_DESKTOPDIRECTORY = 16_u32
  CSIDL_DRIVES = 17_u32
  CSIDL_NETWORK = 18_u32
  CSIDL_NETHOOD = 19_u32
  CSIDL_FONTS = 20_u32
  CSIDL_TEMPLATES = 21_u32
  CSIDL_COMMON_STARTMENU = 22_u32
  CSIDL_COMMON_PROGRAMS = 23_u32
  CSIDL_COMMON_STARTUP = 24_u32
  CSIDL_COMMON_DESKTOPDIRECTORY = 25_u32
  CSIDL_APPDATA = 26_u32
  CSIDL_PRINTHOOD = 27_u32
  CSIDL_LOCAL_APPDATA = 28_u32
  CSIDL_ALTSTARTUP = 29_u32
  CSIDL_COMMON_ALTSTARTUP = 30_u32
  CSIDL_COMMON_FAVORITES = 31_u32
  CSIDL_INTERNET_CACHE = 32_u32
  CSIDL_COOKIES = 33_u32
  CSIDL_HISTORY = 34_u32
  CSIDL_COMMON_APPDATA = 35_u32
  CSIDL_WINDOWS = 36_u32
  CSIDL_SYSTEM = 37_u32
  CSIDL_PROGRAM_FILES = 38_u32
  CSIDL_MYPICTURES = 39_u32
  CSIDL_PROFILE = 40_u32
  CSIDL_SYSTEMX86 = 41_u32
  CSIDL_PROGRAM_FILESX86 = 42_u32
  CSIDL_PROGRAM_FILES_COMMON = 43_u32
  CSIDL_PROGRAM_FILES_COMMONX86 = 44_u32
  CSIDL_COMMON_TEMPLATES = 45_u32
  CSIDL_COMMON_DOCUMENTS = 46_u32
  CSIDL_COMMON_ADMINTOOLS = 47_u32
  CSIDL_ADMINTOOLS = 48_u32
  CSIDL_CONNECTIONS = 49_u32
  CSIDL_COMMON_MUSIC = 53_u32
  CSIDL_COMMON_PICTURES = 54_u32
  CSIDL_COMMON_VIDEO = 55_u32
  CSIDL_RESOURCES = 56_u32
  CSIDL_RESOURCES_LOCALIZED = 57_u32
  CSIDL_COMMON_OEM_LINKS = 58_u32
  CSIDL_CDBURN_AREA = 59_u32
  CSIDL_COMPUTERSNEARME = 61_u32
  CSIDL_FLAG_CREATE = 32768_u32
  CSIDL_FLAG_DONT_VERIFY = 16384_u32
  CSIDL_FLAG_DONT_UNEXPAND = 8192_u32
  CSIDL_FLAG_NO_ALIAS = 4096_u32
  CSIDL_FLAG_PER_USER_INIT = 2048_u32
  CSIDL_FLAG_MASK = 65280_u32
  FCS_READ = 1_u32
  FCS_FORCEWRITE = 2_u32
  FCS_FLAG_DRAGDROP = 2_u32
  FCSM_VIEWID = 1_u32
  FCSM_WEBVIEWTEMPLATE = 2_u32
  FCSM_INFOTIP = 4_u32
  FCSM_CLSID = 8_u32
  FCSM_ICONFILE = 16_u32
  FCSM_LOGO = 32_u32
  FCSM_FLAGS = 64_u32
  BIF_RETURNONLYFSDIRS = 1_u32
  BIF_DONTGOBELOWDOMAIN = 2_u32
  BIF_STATUSTEXT = 4_u32
  BIF_RETURNFSANCESTORS = 8_u32
  BIF_EDITBOX = 16_u32
  BIF_VALIDATE = 32_u32
  BIF_NEWDIALOGSTYLE = 64_u32
  BIF_BROWSEINCLUDEURLS = 128_u32
  BIF_UAHINT = 256_u32
  BIF_NONEWFOLDERBUTTON = 512_u32
  BIF_NOTRANSLATETARGETS = 1024_u32
  BIF_BROWSEFORCOMPUTER = 4096_u32
  BIF_BROWSEFORPRINTER = 8192_u32
  BIF_BROWSEINCLUDEFILES = 16384_u32
  BIF_SHAREABLE = 32768_u32
  BIF_BROWSEFILEJUNCTIONS = 65536_u32
  BFFM_INITIALIZED = 1_u32
  BFFM_SELCHANGED = 2_u32
  BFFM_VALIDATEFAILEDA = 3_u32
  BFFM_VALIDATEFAILEDW = 4_u32
  BFFM_IUNKNOWN = 5_u32
  BFFM_SETSTATUSTEXTA = 1124_u32
  BFFM_ENABLEOK = 1125_u32
  BFFM_SETSELECTIONA = 1126_u32
  BFFM_SETSELECTIONW = 1127_u32
  BFFM_SETSTATUSTEXTW = 1128_u32
  BFFM_SETOKTEXT = 1129_u32
  BFFM_SETEXPANDED = 1130_u32
  BFFM_SETSTATUSTEXT = 1128_u32
  BFFM_SETSELECTION = 1127_u32
  BFFM_VALIDATEFAILED = 4_u32
  CMDID_INTSHORTCUTCREATE = 1_i32
  PROGDLG_NORMAL = 0_u32
  PROGDLG_MODAL = 1_u32
  PROGDLG_AUTOTIME = 2_u32
  PROGDLG_NOTIME = 4_u32
  PROGDLG_NOMINIMIZE = 8_u32
  PROGDLG_NOPROGRESSBAR = 16_u32
  PROGDLG_MARQUEEPROGRESS = 32_u32
  PROGDLG_NOCANCEL = 64_u32
  PDTIMER_RESET = 1_u32
  PDTIMER_PAUSE = 2_u32
  PDTIMER_RESUME = 3_u32
  COMPONENT_TOP = 1073741823_u32
  COMP_TYPE_HTMLDOC = 0_u32
  COMP_TYPE_PICTURE = 1_u32
  COMP_TYPE_WEBSITE = 2_u32
  COMP_TYPE_CONTROL = 3_u32
  COMP_TYPE_CFHTML = 4_u32
  COMP_TYPE_MAX = 4_u32
  IS_NORMAL = 1_u32
  IS_FULLSCREEN = 2_u32
  IS_SPLIT = 4_u32
  AD_APPLY_SAVE = 1_u32
  AD_APPLY_HTMLGEN = 2_u32
  AD_APPLY_REFRESH = 4_u32
  AD_APPLY_FORCE = 8_u32
  AD_APPLY_BUFFERED_REFRESH = 16_u32
  AD_APPLY_DYNAMICREFRESH = 32_u32
  AD_GETWP_BMP = 0_u32
  AD_GETWP_IMAGE = 1_u32
  AD_GETWP_LAST_APPLIED = 2_u32
  WPSTYLE_CENTER = 0_u32
  WPSTYLE_TILE = 1_u32
  WPSTYLE_STRETCH = 2_u32
  WPSTYLE_KEEPASPECT = 3_u32
  WPSTYLE_CROPTOFIT = 4_u32
  WPSTYLE_SPAN = 5_u32
  WPSTYLE_MAX = 6_u32
  COMP_ELEM_TYPE = 1_u32
  COMP_ELEM_CHECKED = 2_u32
  COMP_ELEM_DIRTY = 4_u32
  COMP_ELEM_NOSCROLL = 8_u32
  COMP_ELEM_POS_LEFT = 16_u32
  COMP_ELEM_POS_TOP = 32_u32
  COMP_ELEM_SIZE_WIDTH = 64_u32
  COMP_ELEM_SIZE_HEIGHT = 128_u32
  COMP_ELEM_POS_ZINDEX = 256_u32
  COMP_ELEM_SOURCE = 512_u32
  COMP_ELEM_FRIENDLYNAME = 1024_u32
  COMP_ELEM_SUBSCRIBEDURL = 2048_u32
  COMP_ELEM_ORIGINAL_CSI = 4096_u32
  COMP_ELEM_RESTORED_CSI = 8192_u32
  COMP_ELEM_CURITEMSTATE = 16384_u32
  ADDURL_SILENT = 1_u32
  COMPONENT_DEFAULT_LEFT = 65535_u32
  COMPONENT_DEFAULT_TOP = 65535_u32
  MAX_COLUMN_NAME_LEN = 80_u32
  MAX_COLUMN_DESC_LEN = 128_u32
  DVASPECT_SHORTNAME = 2_u32
  DVASPECT_COPY = 3_u32
  DVASPECT_LINK = 4_u32
  SHCNEE_ORDERCHANGED = 2_i32
  SHCNEE_MSI_CHANGE = 4_i32
  SHCNEE_MSI_UNINSTALL = 5_i32
  NUM_POINTS = 3_u32
  CABINETSTATE_VERSION = 2_u32
  PIFNAMESIZE = 30_u32
  PIFSTARTLOCSIZE = 63_u32
  PIFDEFPATHSIZE = 64_u32
  PIFPARAMSSIZE = 64_u32
  PIFSHPROGSIZE = 64_u32
  PIFSHDATASIZE = 64_u32
  PIFDEFFILESIZE = 80_u32
  PIFMAXFILEPATH = 260_u32
  QCMINFO_PLACE_BEFORE = 0_u32
  QCMINFO_PLACE_AFTER = 1_u32
  SFVSOC_INVALIDATE_ALL = 1_u32
  SFVSOC_NOSCROLL = 2_u32
  SHELLSTATEVERSION_IE4 = 9_u32
  SHELLSTATEVERSION_WIN2K = 10_u32
  SHPPFW_NONE = 0_u32
  SHPPFW_DIRCREATE = 1_u32
  SHPPFW_ASKDIRCREATE = 2_u32
  SHPPFW_IGNOREFILENAME = 4_u32
  SHPPFW_NOWRITECHECK = 8_u32
  SHPPFW_MEDIACHECKONLY = 16_u32
  CMF_NORMAL = 0_u32
  CMF_DEFAULTONLY = 1_u32
  CMF_VERBSONLY = 2_u32
  CMF_EXPLORE = 4_u32
  CMF_NOVERBS = 8_u32
  CMF_CANRENAME = 16_u32
  CMF_NODEFAULT = 32_u32
  CMF_INCLUDESTATIC = 64_u32
  CMF_ITEMMENU = 128_u32
  CMF_EXTENDEDVERBS = 256_u32
  CMF_DISABLEDVERBS = 512_u32
  CMF_ASYNCVERBSTATE = 1024_u32
  CMF_OPTIMIZEFORINVOKE = 2048_u32
  CMF_SYNCCASCADEMENU = 4096_u32
  CMF_DONOTPICKDEFAULT = 8192_u32
  CMF_RESERVED = 4294901760_u32
  GCS_VERBA = 0_u32
  GCS_HELPTEXTA = 1_u32
  GCS_VALIDATEA = 2_u32
  GCS_VERBW = 4_u32
  GCS_HELPTEXTW = 5_u32
  GCS_VALIDATEW = 6_u32
  GCS_VERBICONW = 20_u32
  GCS_UNICODE = 4_u32
  GCS_VERB = 4_u32
  GCS_HELPTEXT = 5_u32
  GCS_VALIDATE = 6_u32
  CMIC_MASK_SHIFT_DOWN = 268435456_u32
  CMIC_MASK_CONTROL_DOWN = 1073741824_u32
  CMIC_MASK_PTINVOKE = 536870912_u32
  IRTIR_TASK_NOT_RUNNING = 0_u32
  IRTIR_TASK_RUNNING = 1_u32
  IRTIR_TASK_SUSPENDED = 2_u32
  IRTIR_TASK_PENDING = 3_u32
  IRTIR_TASK_FINISHED = 4_u32
  ITSAT_DEFAULT_PRIORITY = 268435456_u32
  ITSAT_MAX_PRIORITY = 2147483647_u32
  ITSAT_MIN_PRIORITY = 0_u32
  ITSSFLAG_COMPLETE_ON_DESTROY = 0_u32
  ITSSFLAG_KILL_ON_DESTROY = 1_u32
  ITSSFLAG_FLAGS_MASK = 3_u32
  CSIDL_FLAG_PFTI_TRACKTARGET = 16384_u32
  SHCIDS_ALLFIELDS = -2147483648_i32
  SHCIDS_CANONICALONLY = 268435456_i32
  SHCIDS_BITMASK = -65536_i32
  SHCIDS_COLUMNMASK = 65535_i32
  SFGAO_CANCOPY = 1_u32
  SFGAO_CANMOVE = 2_u32
  SFGAO_CANLINK = 4_u32
  SFGAO_STORAGE = 8_i32
  SFGAO_CANRENAME = 16_i32
  SFGAO_CANDELETE = 32_i32
  SFGAO_HASPROPSHEET = 64_i32
  SFGAO_DROPTARGET = 256_i32
  SFGAO_CAPABILITYMASK = 375_i32
  SFGAO_PLACEHOLDER = 2048_i32
  SFGAO_SYSTEM = 4096_i32
  SFGAO_ENCRYPTED = 8192_i32
  SFGAO_ISSLOW = 16384_i32
  SFGAO_GHOSTED = 32768_i32
  SFGAO_LINK = 65536_i32
  SFGAO_SHARE = 131072_i32
  SFGAO_READONLY = 262144_i32
  SFGAO_HIDDEN = 524288_i32
  SFGAO_DISPLAYATTRMASK = 1032192_i32
  SFGAO_FILESYSANCESTOR = 268435456_i32
  SFGAO_FOLDER = 536870912_i32
  SFGAO_FILESYSTEM = 1073741824_i32
  SFGAO_HASSUBFOLDER = -2147483648_i32
  SFGAO_CONTENTSMASK = -2147483648_i32
  SFGAO_VALIDATE = 16777216_i32
  SFGAO_REMOVABLE = 33554432_i32
  SFGAO_COMPRESSED = 67108864_i32
  SFGAO_BROWSABLE = 134217728_i32
  SFGAO_NONENUMERATED = 1048576_i32
  SFGAO_NEWCONTENT = 2097152_i32
  SFGAO_CANMONIKER = 4194304_i32
  SFGAO_HASSTORAGE = 4194304_i32
  SFGAO_STREAM = 4194304_i32
  SFGAO_STORAGEANCESTOR = 8388608_i32
  SFGAO_STORAGECAPMASK = 1891958792_i32
  SFGAO_PKEYSFGAOMASK = -2130427904_i32
  BIND_INTERRUPTABLE = 4294967295_u32
  CDBOSC_SETFOCUS = 0_u32
  CDBOSC_KILLFOCUS = 1_u32
  CDBOSC_SELCHANGE = 2_u32
  CDBOSC_RENAME = 3_u32
  CDBOSC_STATECHANGE = 4_u32
  CDB2N_CONTEXTMENU_DONE = 1_u32
  CDB2N_CONTEXTMENU_START = 2_u32
  CDB2GVF_SHOWALLFILES = 1_u32
  CDB2GVF_ISFILESAVE = 2_u32
  CDB2GVF_ALLOWPREVIEWPANE = 4_u32
  CDB2GVF_NOSELECTVERB = 8_u32
  CDB2GVF_NOINCLUDEITEM = 16_u32
  CDB2GVF_ISFOLDERPICKER = 32_u32
  CDB2GVF_ADDSHIELD = 64_u32
  SBSP_DEFBROWSER = 0_u32
  SBSP_SAMEBROWSER = 1_u32
  SBSP_NEWBROWSER = 2_u32
  SBSP_DEFMODE = 0_u32
  SBSP_OPENMODE = 16_u32
  SBSP_EXPLOREMODE = 32_u32
  SBSP_HELPMODE = 64_u32
  SBSP_NOTRANSFERHIST = 128_u32
  SBSP_ABSOLUTE = 0_u32
  SBSP_RELATIVE = 4096_u32
  SBSP_PARENT = 8192_u32
  SBSP_NAVIGATEBACK = 16384_u32
  SBSP_NAVIGATEFORWARD = 32768_u32
  SBSP_ALLOW_AUTONAVIGATE = 65536_u32
  SBSP_KEEPSAMETEMPLATE = 131072_u32
  SBSP_KEEPWORDWHEELTEXT = 262144_u32
  SBSP_ACTIVATE_NOFOCUS = 524288_u32
  SBSP_CREATENOHISTORY = 1048576_u32
  SBSP_PLAYNOSOUND = 2097152_u32
  SBSP_CALLERUNTRUSTED = 8388608_u32
  SBSP_TRUSTFIRSTDOWNLOAD = 16777216_u32
  SBSP_UNTRUSTEDFORDOWNLOAD = 33554432_u32
  SBSP_NOAUTOSELECT = 67108864_u32
  SBSP_WRITENOHISTORY = 134217728_u32
  SBSP_TRUSTEDFORACTIVEX = 268435456_u32
  SBSP_FEEDNAVIGATION = 536870912_u32
  SBSP_REDIRECT = 1073741824_u32
  SBSP_INITIATEDBYHLINKFRAME = 2147483648_u32
  FCW_STATUS = 1_u32
  FCW_TOOLBAR = 2_u32
  FCW_TREE = 3_u32
  FCW_INTERNETBAR = 6_u32
  FCW_PROGRESS = 8_u32
  FCT_MERGE = 1_u32
  FCT_CONFIGABLE = 2_u32
  FCT_ADDTOEND = 4_u32
  ARCONTENT_AUTORUNINF = 2_u32
  ARCONTENT_AUDIOCD = 4_u32
  ARCONTENT_DVDMOVIE = 8_u32
  ARCONTENT_BLANKCD = 16_u32
  ARCONTENT_BLANKDVD = 32_u32
  ARCONTENT_UNKNOWNCONTENT = 64_u32
  ARCONTENT_AUTOPLAYPIX = 128_u32
  ARCONTENT_AUTOPLAYMUSIC = 256_u32
  ARCONTENT_AUTOPLAYVIDEO = 512_u32
  ARCONTENT_VCD = 1024_u32
  ARCONTENT_SVCD = 2048_u32
  ARCONTENT_DVDAUDIO = 4096_u32
  ARCONTENT_BLANKBD = 8192_u32
  ARCONTENT_BLURAY = 16384_u32
  ARCONTENT_CAMERASTORAGE = 32768_u32
  ARCONTENT_CUSTOMEVENT = 65536_u32
  ARCONTENT_NONE = 0_u32
  ARCONTENT_MASK = 131070_u32
  ARCONTENT_PHASE_UNKNOWN = 0_u32
  ARCONTENT_PHASE_PRESNIFF = 268435456_u32
  ARCONTENT_PHASE_SNIFFING = 536870912_u32
  ARCONTENT_PHASE_FINAL = 1073741824_u32
  ARCONTENT_PHASE_MASK = 1879048192_u32
  IEI_PRIORITY_MAX = 2147483647_u32
  IEI_PRIORITY_MIN = 0_u32
  IEIT_PRIORITY_NORMAL = 268435456_u32
  IEIFLAG_ASYNC = 1_u32
  IEIFLAG_CACHE = 2_u32
  IEIFLAG_ASPECT = 4_u32
  IEIFLAG_OFFLINE = 8_u32
  IEIFLAG_GLEAM = 16_u32
  IEIFLAG_SCREEN = 32_u32
  IEIFLAG_ORIGSIZE = 64_u32
  IEIFLAG_NOSTAMP = 128_u32
  IEIFLAG_NOBORDER = 256_u32
  IEIFLAG_QUALITY = 512_u32
  IEIFLAG_REFRESH = 1024_u32
  DBIM_MINSIZE = 1_u32
  DBIM_MAXSIZE = 2_u32
  DBIM_INTEGRAL = 4_u32
  DBIM_ACTUAL = 8_u32
  DBIM_TITLE = 16_u32
  DBIM_MODEFLAGS = 32_u32
  DBIM_BKCOLOR = 64_u32
  DBIMF_NORMAL = 0_u32
  DBIMF_FIXED = 1_u32
  DBIMF_FIXEDBMP = 4_u32
  DBIMF_VARIABLEHEIGHT = 8_u32
  DBIMF_UNDELETEABLE = 16_u32
  DBIMF_DEBOSSED = 32_u32
  DBIMF_BKCOLOR = 64_u32
  DBIMF_USECHEVRON = 128_u32
  DBIMF_BREAK = 256_u32
  DBIMF_ADDTOFRONT = 512_u32
  DBIMF_TOPALIGN = 1024_u32
  DBIMF_NOGRIPPER = 2048_u32
  DBIMF_ALWAYSGRIPPER = 4096_u32
  DBIMF_NOMARGINS = 8192_u32
  DBIF_VIEWMODE_NORMAL = 0_u32
  DBIF_VIEWMODE_VERTICAL = 1_u32
  DBIF_VIEWMODE_FLOATING = 2_u32
  DBIF_VIEWMODE_TRANSPARENT = 4_u32
  DBPC_SELECTFIRST = 4294967295_u32
  THBN_CLICKED = 6144_u32
  FOFX_NOSKIPJUNCTIONS = 65536_u32
  FOFX_PREFERHARDLINK = 131072_u32
  FOFX_SHOWELEVATIONPROMPT = 262144_u32
  FOFX_RECYCLEONDELETE = 524288_u32
  FOFX_EARLYFAILURE = 1048576_u32
  FOFX_PRESERVEFILEEXTENSIONS = 2097152_u32
  FOFX_KEEPNEWERFILE = 4194304_u32
  FOFX_NOCOPYHOOKS = 8388608_u32
  FOFX_NOMINIMIZEBOX = 16777216_u32
  FOFX_MOVEACLSACROSSVOLUMES = 33554432_u32
  FOFX_DONTDISPLAYSOURCEPATH = 67108864_u32
  FOFX_DONTDISPLAYDESTPATH = 134217728_u32
  FOFX_REQUIREELEVATION = 268435456_u32
  FOFX_ADDUNDORECORD = 536870912_u32
  FOFX_COPYASDOWNLOAD = 1073741824_u32
  FOFX_DONTDISPLAYLOCATIONS = 2147483648_u32
  BSIM_STATE = 1_u32
  BSIM_STYLE = 2_u32
  BSSF_VISIBLE = 1_u32
  BSSF_NOTITLE = 2_u32
  BSSF_UNDELETEABLE = 4096_u32
  BSIS_AUTOGRIPPER = 0_u32
  BSIS_NOGRIPPER = 1_u32
  BSIS_ALWAYSGRIPPER = 2_u32
  BSIS_LEFTALIGN = 4_u32
  BSIS_SINGLECLICK = 8_u32
  BSIS_NOCONTEXTMENU = 16_u32
  BSIS_NODROPTARGET = 32_u32
  BSIS_NOCAPTION = 64_u32
  BSIS_PREFERNOLINEBREAK = 128_u32
  BSIS_LOCKED = 256_u32
  BSIS_PRESERVEORDERDURINGLAYOUT = 512_u32
  BSIS_FIXEDORDER = 1024_u32
  OF_CAP_CANSWITCHTO = 1_u32
  OF_CAP_CANCLOSE = 2_u32
  SMDM_SHELLFOLDER = 1_u32
  SMDM_HMENU = 2_u32
  SMDM_TOOLBAR = 4_u32
  SMC_INITMENU = 1_u32
  SMC_CREATE = 2_u32
  SMC_EXITMENU = 3_u32
  SMC_GETINFO = 5_u32
  SMC_GETSFINFO = 6_u32
  SMC_GETOBJECT = 7_u32
  SMC_GETSFOBJECT = 8_u32
  SMC_SFEXEC = 9_u32
  SMC_SFSELECTITEM = 10_u32
  SMC_REFRESH = 16_u32
  SMC_DEMOTE = 17_u32
  SMC_PROMOTE = 18_u32
  SMC_DEFAULTICON = 22_u32
  SMC_NEWITEM = 23_u32
  SMC_CHEVRONEXPAND = 25_u32
  SMC_DISPLAYCHEVRONTIP = 42_u32
  SMC_SETSFOBJECT = 45_u32
  SMC_SHCHANGENOTIFY = 46_u32
  SMC_CHEVRONGETTIP = 47_u32
  SMC_SFDDRESTRICTED = 48_u32
  SMC_SFEXEC_MIDDLE = 49_u32
  SMC_GETAUTOEXPANDSTATE = 65_u32
  SMC_AUTOEXPANDCHANGE = 66_u32
  SMC_GETCONTEXTMENUMODIFIER = 67_u32
  SMC_GETBKCONTEXTMENU = 68_u32
  SMC_OPEN = 69_u32
  SMAE_EXPANDED = 1_u32
  SMAE_CONTRACTED = 2_u32
  SMAE_USER = 4_u32
  SMAE_VALID = 7_u32
  SMINIT_DEFAULT = 0_u32
  SMINIT_RESTRICT_DRAGDROP = 2_u32
  SMINIT_TOPLEVEL = 4_u32
  SMINIT_CACHED = 16_u32
  SMINIT_AUTOEXPAND = 256_u32
  SMINIT_AUTOTOOLTIP = 512_u32
  SMINIT_DROPONCONTAINER = 1024_u32
  SMINIT_VERTICAL = 268435456_u32
  SMINIT_HORIZONTAL = 536870912_u32
  SMSET_TOP = 268435456_u32
  SMSET_BOTTOM = 536870912_u32
  SMSET_DONTOWN = 1_u32
  SMINV_REFRESH = 1_u32
  SMINV_ID = 8_u32
  E_PREVIEWHANDLER_DRM_FAIL = -2042494975_i32
  E_PREVIEWHANDLER_NOAUTH = -2042494974_i32
  E_PREVIEWHANDLER_NOTFOUND = -2042494973_i32
  E_PREVIEWHANDLER_CORRUPT = -2042494972_i32
  SID_URLExecutionContext = "fb5f8ebc-bbb6-4d10-a461-777291a09030"
  SID_LaunchSourceViewSizePreference = "80605492-67d9-414f-af89-a1cdf1242bc1"
  SID_LaunchTargetViewSizePreference = "26db2472-b7b7-406b-9702-730a4e20d3bf"
  SID_LaunchSourceAppUserModelId = "2ce78010-74db-48bc-9c6a-10f372495723"
  SID_ShellExecuteNamedPropertyStore = "eb84ada2-00ff-4992-8324-ed5ce061cb29"
  ISIOI_ICONFILE = 1_u32
  ISIOI_ICONINDEX = 2_u32
  ABM_NEW = 0_u32
  ABM_REMOVE = 1_u32
  ABM_QUERYPOS = 2_u32
  ABM_SETPOS = 3_u32
  ABM_GETSTATE = 4_u32
  ABM_GETTASKBARPOS = 5_u32
  ABM_ACTIVATE = 6_u32
  ABM_GETAUTOHIDEBAR = 7_u32
  ABM_SETAUTOHIDEBAR = 8_u32
  ABM_WINDOWPOSCHANGED = 9_u32
  ABM_SETSTATE = 10_u32
  ABM_GETAUTOHIDEBAREX = 11_u32
  ABM_SETAUTOHIDEBAREX = 12_u32
  ABN_STATECHANGE = 0_u32
  ABN_POSCHANGED = 1_u32
  ABN_FULLSCREENAPP = 2_u32
  ABN_WINDOWARRANGE = 3_u32
  ABS_AUTOHIDE = 1_u32
  ABS_ALWAYSONTOP = 2_u32
  ABE_LEFT = 0_u32
  ABE_TOP = 1_u32
  ABE_RIGHT = 2_u32
  ABE_BOTTOM = 3_u32
  FO_MOVE = 1_u32
  FO_COPY = 2_u32
  FO_DELETE = 3_u32
  FO_RENAME = 4_u32
  FOF_MULTIDESTFILES = 1_u32
  FOF_CONFIRMMOUSE = 2_u32
  FOF_SILENT = 4_u32
  FOF_RENAMEONCOLLISION = 8_u32
  FOF_NOCONFIRMATION = 16_u32
  FOF_WANTMAPPINGHANDLE = 32_u32
  FOF_ALLOWUNDO = 64_u32
  FOF_FILESONLY = 128_u32
  FOF_SIMPLEPROGRESS = 256_u32
  FOF_NOCONFIRMMKDIR = 512_u32
  FOF_NOERRORUI = 1024_u32
  FOF_NOCOPYSECURITYATTRIBS = 2048_u32
  FOF_NORECURSION = 4096_u32
  FOF_NO_CONNECTED_ELEMENTS = 8192_u32
  FOF_WANTNUKEWARNING = 16384_u32
  FOF_NORECURSEREPARSE = 32768_u32
  PO_DELETE = 19_u32
  PO_RENAME = 20_u32
  PO_PORTCHANGE = 32_u32
  PO_REN_PORT = 52_u32
  SE_ERR_FNF = 2_u32
  SE_ERR_PNF = 3_u32
  SE_ERR_ACCESSDENIED = 5_u32
  SE_ERR_OOM = 8_u32
  SE_ERR_DLLNOTFOUND = 32_u32
  SE_ERR_SHARE = 26_u32
  SE_ERR_ASSOCINCOMPLETE = 27_u32
  SE_ERR_DDETIMEOUT = 28_u32
  SE_ERR_DDEFAIL = 29_u32
  SE_ERR_DDEBUSY = 30_u32
  SE_ERR_NOASSOC = 31_u32
  SEE_MASK_DEFAULT = 0_u32
  SEE_MASK_CLASSNAME = 1_u32
  SEE_MASK_CLASSKEY = 3_u32
  SEE_MASK_IDLIST = 4_u32
  SEE_MASK_INVOKEIDLIST = 12_u32
  SEE_MASK_ICON = 16_u32
  SEE_MASK_HOTKEY = 32_u32
  SEE_MASK_NOCLOSEPROCESS = 64_u32
  SEE_MASK_CONNECTNETDRV = 128_u32
  SEE_MASK_NOASYNC = 256_u32
  SEE_MASK_FLAG_DDEWAIT = 256_u32
  SEE_MASK_DOENVSUBST = 512_u32
  SEE_MASK_FLAG_NO_UI = 1024_u32
  SEE_MASK_UNICODE = 16384_u32
  SEE_MASK_NO_CONSOLE = 32768_u32
  SEE_MASK_ASYNCOK = 1048576_u32
  SEE_MASK_HMONITOR = 2097152_u32
  SEE_MASK_NOZONECHECKS = 8388608_u32
  SEE_MASK_NOQUERYCLASSSTORE = 16777216_u32
  SEE_MASK_WAITFORINPUTIDLE = 33554432_u32
  SEE_MASK_FLAG_LOG_USAGE = 67108864_u32
  SEE_MASK_FLAG_HINST_IS_SITE = 134217728_u32
  SHERB_NOCONFIRMATION = 1_u32
  SHERB_NOPROGRESSUI = 2_u32
  SHERB_NOSOUND = 4_u32
  NIN_SELECT = 1024_u32
  NINF_KEY = 1_u32
  NIN_BALLOONSHOW = 1026_u32
  NIN_BALLOONHIDE = 1027_u32
  NIN_BALLOONTIMEOUT = 1028_u32
  NIN_BALLOONUSERCLICK = 1029_u32
  NIN_POPUPOPEN = 1030_u32
  NIN_POPUPCLOSE = 1031_u32
  NOTIFYICON_VERSION = 3_u32
  NOTIFYICON_VERSION_4 = 4_u32
  NIS_HIDDEN = 1_u32
  NIS_SHAREDICON = 2_u32
  NIIF_NONE = 0_u32
  NIIF_INFO = 1_u32
  NIIF_WARNING = 2_u32
  NIIF_ERROR = 3_u32
  NIIF_USER = 4_u32
  NIIF_ICON_MASK = 15_u32
  NIIF_NOSOUND = 16_u32
  NIIF_LARGE_ICON = 32_u32
  NIIF_RESPECT_QUIET_TIME = 128_u32
  SHGSI_ICONLOCATION = 0_u32
  SHGNLI_PIDL = 1_u64
  SHGNLI_PREFIXNAME = 2_u64
  SHGNLI_NOUNIQUE = 4_u64
  SHGNLI_NOLNK = 8_u64
  SHGNLI_NOLOCNAME = 16_u64
  SHGNLI_USEURLEXT = 32_u64
  PRINTACTION_OPEN = 0_u32
  PRINTACTION_PROPERTIES = 1_u32
  PRINTACTION_NETINSTALL = 2_u32
  PRINTACTION_NETINSTALLLINK = 3_u32
  PRINTACTION_TESTPAGE = 4_u32
  PRINTACTION_OPENNETPRN = 5_u32
  PRINTACTION_DOCUMENTDEFAULTS = 6_u32
  PRINTACTION_SERVERPROPERTIES = 7_u32
  PRINT_PROP_FORCE_NAME = 1_u32
  OFFLINE_STATUS_LOCAL = 1_u32
  OFFLINE_STATUS_REMOTE = 2_u32
  OFFLINE_STATUS_INCOMPLETE = 4_u32
  SHIL_LARGE = 0_u32
  SHIL_SMALL = 1_u32
  SHIL_EXTRALARGE = 2_u32
  SHIL_SYSSMALL = 3_u32
  SHIL_JUMBO = 4_u32
  SHIL_LAST = 4_u32
  NCM_GETADDRESS = 1025_u32
  NCM_SETALLOWTYPE = 1026_u32
  NCM_GETALLOWTYPE = 1027_u32
  NCM_DISPLAYERRORTIP = 1028_u32
  CREDENTIAL_PROVIDER_NO_DEFAULT = 4294967295_u32
  Identity_LocalUserProvider = "a198529b-730f-4089-b646-a12557f5665e"
  MAX_SYNCMGR_ID = 64_u32
  MAX_SYNCMGR_PROGRESSTEXT = 260_u32
  MAX_SYNCMGR_NAME = 128_u32
  STIF_DEFAULT = 0_i32
  STIF_SUPPORT_HEX = 1_i32
  GCT_INVALID = 0_u32
  GCT_LFNCHAR = 1_u32
  GCT_SHORTCHAR = 2_u32
  GCT_WILD = 4_u32
  GCT_SEPARATOR = 8_u32
  PMSF_NORMAL = 0_u32
  PMSF_MULTIPLE = 1_u32
  PMSF_DONT_STRIP_SPACES = 65536_u32
  URL_UNESCAPE = 268435456_u32
  URL_ESCAPE_UNSAFE = 536870912_u32
  URL_PLUGGABLE_PROTOCOL = 1073741824_u32
  URL_WININET_COMPATIBILITY = 2147483648_u32
  URL_DONT_ESCAPE_EXTRA_INFO = 33554432_u32
  URL_DONT_UNESCAPE_EXTRA_INFO = 33554432_u32
  URL_BROWSER_MODE = 33554432_u32
  URL_ESCAPE_SPACES_ONLY = 67108864_u32
  URL_DONT_SIMPLIFY = 134217728_u32
  URL_NO_META = 134217728_u32
  URL_UNESCAPE_INPLACE = 1048576_u32
  URL_CONVERT_IF_DOSPATH = 2097152_u32
  URL_UNESCAPE_HIGH_ANSI_ONLY = 4194304_u32
  URL_INTERNAL_PATH = 8388608_u32
  URL_FILE_USE_PATHURL = 65536_u32
  URL_DONT_UNESCAPE = 131072_u32
  URL_ESCAPE_AS_UTF8 = 262144_u32
  URL_UNESCAPE_AS_UTF8 = 262144_u32
  URL_ESCAPE_ASCII_URI_COMPONENT = 524288_u32
  URL_UNESCAPE_URI_COMPONENT = 262144_u32
  URL_ESCAPE_PERCENT = 4096_u32
  URL_ESCAPE_SEGMENT_ONLY = 8192_u32
  URL_PARTFLAG_KEEPSCHEME = 1_u32
  URL_APPLY_DEFAULT = 1_u32
  URL_APPLY_GUESSSCHEME = 2_u32
  URL_APPLY_GUESSFILE = 4_u32
  URL_APPLY_FORCEAPPLY = 8_u32
  SRRF_RT_REG_NONE = 1_u32
  SRRF_RT_REG_SZ = 2_u32
  SRRF_RT_REG_EXPAND_SZ = 4_u32
  SRRF_RT_REG_BINARY = 8_u32
  SRRF_RT_REG_DWORD = 16_u32
  SRRF_RT_REG_MULTI_SZ = 32_u32
  SRRF_RT_REG_QWORD = 64_u32
  SRRF_RT_ANY = 65535_u32
  SRRF_RM_ANY = 0_u32
  SRRF_RM_NORMAL = 65536_u32
  SRRF_RM_SAFE = 131072_u32
  SRRF_RM_SAFENETWORK = 262144_u32
  SRRF_NOEXPAND = 268435456_u32
  SRRF_ZEROONFAILURE = 536870912_u32
  SRRF_NOVIRT = 1073741824_u32
  SHREGSET_HKCU = 1_u32
  SHREGSET_FORCE_HKCU = 2_u32
  SHREGSET_HKLM = 4_u32
  SHREGSET_FORCE_HKLM = 8_u32
  SPMODE_SHELL = 1_u32
  SPMODE_DEBUGOUT = 2_u32
  SPMODE_TEST = 4_u32
  SPMODE_BROWSER = 8_u32
  SPMODE_FLUSH = 16_u32
  SPMODE_EVENT = 32_u32
  SPMODE_MSVM = 64_u32
  SPMODE_FORMATTEXT = 128_u32
  SPMODE_PROFILE = 256_u32
  SPMODE_DEBUGBREAK = 512_u32
  SPMODE_MSGTRACE = 1024_u32
  SPMODE_PERFTAGS = 2048_u32
  SPMODE_MEMWATCH = 4096_u32
  SPMODE_DBMON = 8192_u32
  SPMODE_MULTISTOP = 16384_u32
  SPMODE_EVENTTRACE = 32768_u32
  SHGVSPB_PERUSER = 1_u32
  SHGVSPB_ALLUSERS = 2_u32
  SHGVSPB_PERFOLDER = 4_u32
  SHGVSPB_ALLFOLDERS = 8_u32
  SHGVSPB_INHERIT = 16_u32
  SHGVSPB_ROAM = 32_u32
  SHGVSPB_NOAUTODEFAULTS = 2147483648_u32
  FDTF_SHORTTIME = 1_u32
  FDTF_SHORTDATE = 2_u32
  FDTF_LONGDATE = 4_u32
  FDTF_LONGTIME = 8_u32
  FDTF_RELATIVE = 16_u32
  FDTF_LTRDATE = 256_u32
  FDTF_RTLDATE = 512_u32
  FDTF_NOAUTOREADINGORDER = 1024_u32
  PLATFORM_UNKNOWN = 0_u32
  PLATFORM_IE3 = 1_u32
  PLATFORM_BROWSERONLY = 1_u32
  PLATFORM_INTEGRATED = 2_u32
  ILMM_IE4 = 0_u32
  SHACF_DEFAULT = 0_u32
  SHACF_FILESYSTEM = 1_u32
  SHACF_URLHISTORY = 2_u32
  SHACF_URLMRU = 4_u32
  SHACF_USETAB = 8_u32
  SHACF_FILESYS_ONLY = 16_u32
  SHACF_FILESYS_DIRS = 32_u32
  SHACF_VIRTUAL_NAMESPACE = 64_u32
  SHACF_AUTOSUGGEST_FORCE_ON = 268435456_u32
  SHACF_AUTOSUGGEST_FORCE_OFF = 536870912_u32
  SHACF_AUTOAPPEND_FORCE_ON = 1073741824_u32
  SHACF_AUTOAPPEND_FORCE_OFF = 2147483648_u32
  DLLVER_PLATFORM_WINDOWS = 1_u32
  DLLVER_PLATFORM_NT = 2_u32
  DLLVER_MAJOR_MASK = 18446462598732840960_u64
  DLLVER_MINOR_MASK = 281470681743360_u64
  DLLVER_BUILD_MASK = 4294901760_u64
  DLLVER_QFE_MASK = 65535_u64
  WTS_E_FAILEDEXTRACTION = -2147175936_i32
  WTS_E_EXTRACTIONTIMEDOUT = -2147175935_i32
  WTS_E_SURROGATEUNAVAILABLE = -2147175934_i32
  WTS_E_FASTEXTRACTIONNOTSUPPORTED = -2147175933_i32
  WTS_E_DATAFILEUNAVAILABLE = -2147175932_i32
  WTS_E_EXTRACTIONPENDING = -2147175931_i32
  WTS_E_EXTRACTIONBLOCKED = -2147175930_i32
  WTS_E_NOSTORAGEPROVIDERTHUMBNAILHANDLER = -2147175929_i32
  SHIMGDEC_DEFAULT = 0_u32
  SHIMGDEC_THUMBNAIL = 1_u32
  SHIMGDEC_LOADFULL = 2_u32
  E_NOTVALIDFORANIMATEDIMAGE = -2147221503_i32
  S_SYNCMGR_MISSINGITEMS = 262657_i32
  S_SYNCMGR_RETRYSYNC = 262658_i32
  S_SYNCMGR_CANCELITEM = 262659_i32
  S_SYNCMGR_CANCELALL = 262660_i32
  S_SYNCMGR_ITEMDELETED = 262672_i32
  S_SYNCMGR_ENUMITEMS = 262673_i32
  SYNCMGRPROGRESSITEM_STATUSTEXT = 1_u32
  SYNCMGRPROGRESSITEM_STATUSTYPE = 2_u32
  SYNCMGRPROGRESSITEM_PROGVALUE = 4_u32
  SYNCMGRPROGRESSITEM_MAXVALUE = 8_u32
  SYNCMGRLOGERROR_ERRORFLAGS = 1_u32
  SYNCMGRLOGERROR_ERRORID = 2_u32
  SYNCMGRLOGERROR_ITEMID = 4_u32
  SYNCMGRITEM_ITEMFLAGMASK = 127_u32
  MAX_SYNCMGRITEMNAME = 128_u32
  SYNCMGRHANDLERFLAG_MASK = 15_u32
  MAX_SYNCMGRHANDLERNAME = 32_u32
  SYNCMGRREGISTERFLAGS_MASK = 7_u32
  TLOG_BACK = -1_i32
  TLOG_CURRENT = 0_u32
  TLOG_FORE = 1_u32
  TLMENUF_INCLUDECURRENT = 1_u32
  TLMENUF_BACK = 16_u32
  TLMENUF_FORE = 32_u32
  BSF_REGISTERASDROPTARGET = 1_u32
  BSF_THEATERMODE = 2_u32
  BSF_NOLOCALFILEWARNING = 16_u32
  BSF_UISETBYAUTOMATION = 256_u32
  BSF_RESIZABLE = 512_u32
  BSF_CANMAXIMIZE = 1024_u32
  BSF_TOPBROWSER = 2048_u32
  BSF_NAVNOHISTORY = 4096_u32
  BSF_HTMLNAVCANCELED = 8192_u32
  BSF_DONTSHOWNAVCANCELPAGE = 16384_u32
  BSF_SETNAVIGATABLECODEPAGE = 32768_u32
  BSF_DELEGATEDNAVIGATION = 65536_u32
  BSF_TRUSTEDFORACTIVEX = 131072_u32
  BSF_MERGEDMENUS = 262144_u32
  BSF_FEEDNAVIGATION = 524288_u32
  BSF_FEEDSUBSCRIBED = 1048576_u32
  HLNF_CALLERUNTRUSTED = 2097152_u32
  HLNF_TRUSTEDFORACTIVEX = 4194304_u32
  HLNF_DISABLEWINDOWRESTRICTIONS = 8388608_u32
  HLNF_TRUSTFIRSTDOWNLOAD = 16777216_u32
  HLNF_UNTRUSTEDFORDOWNLOAD = 33554432_u32
  SHHLNF_NOAUTOSELECT = 67108864_u32
  SHHLNF_WRITENOHISTORY = 134217728_u32
  HLNF_EXTERNALNAVIGATE = 268435456_u32
  HLNF_ALLOW_AUTONAVIGATE = 536870912_u32
  HLNF_NEWWINDOWSMANAGED = 2147483648_u32
  INTERNET_MAX_PATH_LENGTH = 2048_u32
  INTERNET_MAX_SCHEME_LENGTH = 32_u32
  VIEW_PRIORITY_RESTRICTED = 112_u32
  VIEW_PRIORITY_CACHEHIT = 80_u32
  VIEW_PRIORITY_STALECACHEHIT = 69_u32
  VIEW_PRIORITY_USEASDEFAULT = 67_u32
  VIEW_PRIORITY_SHELLEXT = 64_u32
  VIEW_PRIORITY_CACHEMISS = 48_u32
  VIEW_PRIORITY_INHERIT = 32_u32
  VIEW_PRIORITY_SHELLEXT_ASBACKUP = 21_u32
  VIEW_PRIORITY_DESPERATE = 16_u32
  VIEW_PRIORITY_NONE = 0_u32
  PATHCCH_MAX_CCH = 32768_u32
  IDS_DESCRIPTION = 1_u32
  ID_APP = 100_u32
  DLG_SCRNSAVECONFIGURE = 2003_u32
  MAXFILELEN = 13_u32
  TITLEBARNAMELEN = 40_u32
  APPNAMEBUFFERLEN = 40_u32
  BUFFLEN = 255_u32
  SCRM_VERIFYPW = 32768_u32
  E_FLAGS = -2147217408_i32
  IS_E_EXEC_FAILED = -2147213310_i32
  URL_E_INVALID_SYNTAX = -2147217407_i32
  URL_E_UNREGISTERED_PROTOCOL = -2147217406_i32
  CPLPAGE_MOUSE_BUTTONS = 1_u32
  CPLPAGE_MOUSE_PTRMOTION = 2_u32
  CPLPAGE_MOUSE_WHEEL = 3_u32
  CPLPAGE_KEYBOARD_SPEED = 1_u32
  CPLPAGE_DISPLAY_BACKGROUND = 1_u32
  DISPID_SELECTIONCHANGED = 200_u32
  DISPID_FILELISTENUMDONE = 201_u32
  DISPID_VERBINVOKED = 202_u32
  DISPID_DEFAULTVERBINVOKED = 203_u32
  DISPID_BEGINDRAG = 204_u32
  DISPID_VIEWMODECHANGED = 205_u32
  DISPID_NOITEMSTATE_CHANGED = 206_u32
  DISPID_CONTENTSCHANGED = 207_u32
  DISPID_FOCUSCHANGED = 208_u32
  DISPID_CHECKSTATECHANGED = 209_u32
  DISPID_ORDERCHANGED = 210_u32
  DISPID_VIEWPAINTDONE = 211_u32
  DISPID_COLUMNSCHANGED = 212_u32
  DISPID_CTRLMOUSEWHEEL = 213_u32
  DISPID_SORTDONE = 214_u32
  DISPID_ICONSIZECHANGED = 215_u32
  DISPID_FOLDERCHANGED = 217_u32
  DISPID_FILTERINVOKED = 218_u32
  DISPID_WORDWHEELEDITED = 219_u32
  DISPID_SELECTEDITEMCHANGED = 220_u32
  DISPID_EXPLORERWINDOWREADY = 221_u32
  DISPID_UPDATEIMAGE = 222_u32
  DISPID_INITIALENUMERATIONDONE = 223_u32
  DISPID_ENTERPRISEIDCHANGED = 224_u32
  DISPID_ENTERPRESSED = 200_u32
  DISPID_SEARCHCOMMAND_START = 1_u32
  DISPID_SEARCHCOMMAND_COMPLETE = 2_u32
  DISPID_SEARCHCOMMAND_ABORT = 3_u32
  DISPID_SEARCHCOMMAND_UPDATE = 4_u32
  DISPID_SEARCHCOMMAND_PROGRESSTEXT = 5_u32
  DISPID_SEARCHCOMMAND_ERROR = 6_u32
  DISPID_SEARCHCOMMAND_RESTORE = 7_u32
  DISPID_IADCCTL_DIRTY = 256_u32
  DISPID_IADCCTL_PUBCAT = 257_u32
  DISPID_IADCCTL_SORT = 258_u32
  DISPID_IADCCTL_FORCEX86 = 259_u32
  DISPID_IADCCTL_SHOWPOSTSETUP = 260_u32
  DISPID_IADCCTL_ONDOMAIN = 261_u32
  DISPID_IADCCTL_DEFAULTCAT = 262_u32
  COPYENGINE_S_YES = 2555905_i32
  COPYENGINE_S_NOT_HANDLED = 2555907_i32
  COPYENGINE_S_USER_RETRY = 2555908_i32
  COPYENGINE_S_USER_IGNORED = 2555909_i32
  COPYENGINE_S_MERGE = 2555910_i32
  COPYENGINE_S_DONT_PROCESS_CHILDREN = 2555912_i32
  COPYENGINE_S_ALREADY_DONE = 2555914_i32
  COPYENGINE_S_PENDING = 2555915_i32
  COPYENGINE_S_KEEP_BOTH = 2555916_i32
  COPYENGINE_S_CLOSE_PROGRAM = 2555917_i32
  COPYENGINE_S_COLLISIONRESOLVED = 2555918_i32
  COPYENGINE_S_PROGRESS_PAUSE = 2555919_i32
  COPYENGINE_E_USER_CANCELLED = -2144927744_i32
  COPYENGINE_E_CANCELLED = -2144927743_i32
  COPYENGINE_E_REQUIRES_ELEVATION = -2144927742_i32
  COPYENGINE_E_SAME_FILE = -2144927741_i32
  COPYENGINE_E_DIFF_DIR = -2144927740_i32
  COPYENGINE_E_MANY_SRC_1_DEST = -2144927739_i32
  COPYENGINE_E_DEST_SUBTREE = -2144927735_i32
  COPYENGINE_E_DEST_SAME_TREE = -2144927734_i32
  COPYENGINE_E_FLD_IS_FILE_DEST = -2144927733_i32
  COPYENGINE_E_FILE_IS_FLD_DEST = -2144927732_i32
  COPYENGINE_E_FILE_TOO_LARGE = -2144927731_i32
  COPYENGINE_E_REMOVABLE_FULL = -2144927730_i32
  COPYENGINE_E_DEST_IS_RO_CD = -2144927729_i32
  COPYENGINE_E_DEST_IS_RW_CD = -2144927728_i32
  COPYENGINE_E_DEST_IS_R_CD = -2144927727_i32
  COPYENGINE_E_DEST_IS_RO_DVD = -2144927726_i32
  COPYENGINE_E_DEST_IS_RW_DVD = -2144927725_i32
  COPYENGINE_E_DEST_IS_R_DVD = -2144927724_i32
  COPYENGINE_E_SRC_IS_RO_CD = -2144927723_i32
  COPYENGINE_E_SRC_IS_RW_CD = -2144927722_i32
  COPYENGINE_E_SRC_IS_R_CD = -2144927721_i32
  COPYENGINE_E_SRC_IS_RO_DVD = -2144927720_i32
  COPYENGINE_E_SRC_IS_RW_DVD = -2144927719_i32
  COPYENGINE_E_SRC_IS_R_DVD = -2144927718_i32
  COPYENGINE_E_INVALID_FILES_SRC = -2144927717_i32
  COPYENGINE_E_INVALID_FILES_DEST = -2144927716_i32
  COPYENGINE_E_PATH_TOO_DEEP_SRC = -2144927715_i32
  COPYENGINE_E_PATH_TOO_DEEP_DEST = -2144927714_i32
  COPYENGINE_E_ROOT_DIR_SRC = -2144927713_i32
  COPYENGINE_E_ROOT_DIR_DEST = -2144927712_i32
  COPYENGINE_E_ACCESS_DENIED_SRC = -2144927711_i32
  COPYENGINE_E_ACCESS_DENIED_DEST = -2144927710_i32
  COPYENGINE_E_PATH_NOT_FOUND_SRC = -2144927709_i32
  COPYENGINE_E_PATH_NOT_FOUND_DEST = -2144927708_i32
  COPYENGINE_E_NET_DISCONNECT_SRC = -2144927707_i32
  COPYENGINE_E_NET_DISCONNECT_DEST = -2144927706_i32
  COPYENGINE_E_SHARING_VIOLATION_SRC = -2144927705_i32
  COPYENGINE_E_SHARING_VIOLATION_DEST = -2144927704_i32
  COPYENGINE_E_ALREADY_EXISTS_NORMAL = -2144927703_i32
  COPYENGINE_E_ALREADY_EXISTS_READONLY = -2144927702_i32
  COPYENGINE_E_ALREADY_EXISTS_SYSTEM = -2144927701_i32
  COPYENGINE_E_ALREADY_EXISTS_FOLDER = -2144927700_i32
  COPYENGINE_E_STREAM_LOSS = -2144927699_i32
  COPYENGINE_E_EA_LOSS = -2144927698_i32
  COPYENGINE_E_PROPERTY_LOSS = -2144927697_i32
  COPYENGINE_E_PROPERTIES_LOSS = -2144927696_i32
  COPYENGINE_E_ENCRYPTION_LOSS = -2144927695_i32
  COPYENGINE_E_DISK_FULL = -2144927694_i32
  COPYENGINE_E_DISK_FULL_CLEAN = -2144927693_i32
  COPYENGINE_E_EA_NOT_SUPPORTED = -2144927692_i32
  COPYENGINE_E_CANT_REACH_SOURCE = -2144927691_i32
  COPYENGINE_E_RECYCLE_UNKNOWN_ERROR = -2144927691_i32
  COPYENGINE_E_RECYCLE_FORCE_NUKE = -2144927690_i32
  COPYENGINE_E_RECYCLE_SIZE_TOO_BIG = -2144927689_i32
  COPYENGINE_E_RECYCLE_PATH_TOO_LONG = -2144927688_i32
  COPYENGINE_E_RECYCLE_BIN_NOT_FOUND = -2144927686_i32
  COPYENGINE_E_NEWFILE_NAME_TOO_LONG = -2144927685_i32
  COPYENGINE_E_NEWFOLDER_NAME_TOO_LONG = -2144927684_i32
  COPYENGINE_E_DIR_NOT_EMPTY = -2144927683_i32
  COPYENGINE_E_FAT_MAX_IN_ROOT = -2144927682_i32
  COPYENGINE_E_ACCESSDENIED_READONLY = -2144927681_i32
  COPYENGINE_E_REDIRECTED_TO_WEBPAGE = -2144927680_i32
  COPYENGINE_E_SERVER_BAD_FILE_TYPE = -2144927679_i32
  COPYENGINE_E_INTERNET_ITEM_UNAVAILABLE = -2144927678_i32
  COPYENGINE_E_CANNOT_MOVE_FROM_RECYCLE_BIN = -2144927677_i32
  COPYENGINE_E_CANNOT_MOVE_SHARED_FOLDER = -2144927676_i32
  COPYENGINE_E_INTERNET_ITEM_STORAGE_PROVIDER_ERROR = -2144927675_i32
  COPYENGINE_E_INTERNET_ITEM_STORAGE_PROVIDER_PAUSED = -2144927674_i32
  COPYENGINE_E_REQUIRES_EDP_CONSENT = -2144927673_i32
  COPYENGINE_E_BLOCKED_BY_EDP_POLICY = -2144927672_i32
  COPYENGINE_E_REQUIRES_EDP_CONSENT_FOR_REMOVABLE_DRIVE = -2144927671_i32
  COPYENGINE_E_BLOCKED_BY_EDP_FOR_REMOVABLE_DRIVE = -2144927670_i32
  COPYENGINE_E_RMS_REQUIRES_EDP_CONSENT_FOR_REMOVABLE_DRIVE = -2144927669_i32
  COPYENGINE_E_RMS_BLOCKED_BY_EDP_FOR_REMOVABLE_DRIVE = -2144927668_i32
  COPYENGINE_E_WARNED_BY_DLP_POLICY = -2144927667_i32
  COPYENGINE_E_BLOCKED_BY_DLP_POLICY = -2144927666_i32
  COPYENGINE_E_SILENT_FAIL_BY_DLP_POLICY = -2144927665_i32
  NETCACHE_E_NEGATIVE_CACHE = -2144927488_i32
  EXECUTE_E_LAUNCH_APPLICATION = -2144927487_i32
  SHELL_E_WRONG_BITDEPTH = -2144927486_i32
  LINK_E_DELETE = -2144927485_i32
  STORE_E_NEWER_VERSION_AVAILABLE = -2144927484_i32
  E_FILE_PLACEHOLDER_NOT_INITIALIZED = -2144927472_i32
  E_FILE_PLACEHOLDER_VERSION_MISMATCH = -2144927471_i32
  E_FILE_PLACEHOLDER_SERVER_TIMED_OUT = -2144927470_i32
  E_FILE_PLACEHOLDER_STORAGEPROVIDER_NOT_FOUND = -2144927469_i32
  CAMERAROLL_E_NO_DOWNSAMPLING_REQUIRED = -2144927456_i32
  E_ACTIVATIONDENIED_USERCLOSE = -2144927440_i32
  E_ACTIVATIONDENIED_SHELLERROR = -2144927439_i32
  E_ACTIVATIONDENIED_SHELLRESTART = -2144927438_i32
  E_ACTIVATIONDENIED_UNEXPECTED = -2144927437_i32
  E_ACTIVATIONDENIED_SHELLNOTREADY = -2144927436_i32
  LIBRARY_E_NO_SAVE_LOCATION = -2144927232_i32
  LIBRARY_E_NO_ACCESSIBLE_LOCATION = -2144927231_i32
  E_USERTILE_UNSUPPORTEDFILETYPE = -2144927216_i32
  E_USERTILE_CHANGEDISABLED = -2144927215_i32
  E_USERTILE_LARGEORDYNAMIC = -2144927214_i32
  E_USERTILE_VIDEOFRAMESIZE = -2144927213_i32
  E_USERTILE_FILESIZE = -2144927212_i32
  IMM_ACC_DOCKING_E_INSUFFICIENTHEIGHT = -2144927184_i32
  IMM_ACC_DOCKING_E_DOCKOCCUPIED = -2144927183_i32
  IMSC_E_SHELL_COMPONENT_STARTUP_FAILURE = -2144927181_i32
  SHC_E_SHELL_COMPONENT_STARTUP_FAILURE = -2144927180_i32
  E_TILE_NOTIFICATIONS_PLATFORM_FAILURE = -2144927159_i32
  E_SHELL_EXTENSION_BLOCKED = -2144926975_i32
  E_IMAGEFEED_CHANGEDISABLED = -2144926960_i32
  GPFIDL_DEFAULT = 0_i32
  GPFIDL_ALTNAME = 1_i32
  GPFIDL_UNCPRINTER = 2_i32
  ISHCUTCMDID_DOWNLOADICON = 0_i32
  ISHCUTCMDID_INTSHORTCUTCREATE = 1_i32
  ISHCUTCMDID_COMMITHISTORY = 2_i32
  ISHCUTCMDID_SETUSERAWURL = 3_i32
  SFBID_PIDLCHANGED = 0_i32
  DBCID_EMPTY = 0_i32
  DBCID_ONDRAG = 1_i32
  DBCID_CLSIDOFBAR = 2_i32
  DBCID_RESIZE = 3_i32
  DBCID_GETBAR = 4_i32
  DBCID_UPDATESIZE = 5_i32
  BMICON_LARGE = 0_i32
  BMICON_SMALL = 1_i32
  ASSOCF_NONE = 0_i32
  ASSOCF_INIT_NOREMAPCLSID = 1_i32
  ASSOCF_INIT_BYEXENAME = 2_i32
  ASSOCF_OPEN_BYEXENAME = 2_i32
  ASSOCF_INIT_DEFAULTTOSTAR = 4_i32
  ASSOCF_INIT_DEFAULTTOFOLDER = 8_i32
  ASSOCF_NOUSERSETTINGS = 16_i32
  ASSOCF_NOTRUNCATE = 32_i32
  ASSOCF_VERIFY = 64_i32
  ASSOCF_REMAPRUNDLL = 128_i32
  ASSOCF_NOFIXUPS = 256_i32
  ASSOCF_IGNOREBASECLASS = 512_i32
  ASSOCF_INIT_IGNOREUNKNOWN = 1024_i32
  ASSOCF_INIT_FIXED_PROGID = 2048_i32
  ASSOCF_IS_PROTOCOL = 4096_i32
  ASSOCF_INIT_FOR_FILE = 8192_i32
  ASSOCF_IS_FULL_URI = 16384_i32
  ASSOCF_PER_MACHINE_ONLY = 32768_i32
  ASSOCF_APP_TO_APP = 65536_i32
  CTF_INSIST = 1_i32
  CTF_THREAD_REF = 2_i32
  CTF_PROCESS_REF = 4_i32
  CTF_COINIT_STA = 8_i32
  CTF_COINIT = 8_i32
  CTF_FREELIBANDEXIT = 16_i32
  CTF_REF_COUNTED = 32_i32
  CTF_WAIT_ALLOWCOM = 64_i32
  CTF_UNUSED = 128_i32
  CTF_INHERITWOW64 = 256_i32
  CTF_WAIT_NO_REENTRANCY = 512_i32
  CTF_KEYBOARD_LOCALE = 1024_i32
  CTF_OLEINITIALIZE = 2048_i32
  CTF_COINIT_MTA = 4096_i32
  CTF_NOADDREFLIB = 8192_i32
  CLSID_QueryCancelAutoPlay = LibC::GUID.new(0x331f1768_u32, 0x5a9_u16, 0x4ddd_u16, StaticArray[0xb8_u8, 0x6e_u8, 0xda_u8, 0xe3_u8, 0x4d_u8, 0xdc_u8, 0x99_u8, 0x8a_u8])
  CLSID_TimeCategorizer = LibC::GUID.new(0x3bb4118f_u32, 0xddfd_u16, 0x4d30_u16, StaticArray[0xa3_u8, 0x48_u8, 0x9f_u8, 0xb5_u8, 0xd6_u8, 0xbf_u8, 0x1a_u8, 0xfe_u8])
  CLSID_AlphabeticalCategorizer = LibC::GUID.new(0x3c2654c6_u32, 0x7372_u16, 0x4f6b_u16, StaticArray[0xb3_u8, 0x10_u8, 0x55_u8, 0xd6_u8, 0x12_u8, 0x8f_u8, 0x49_u8, 0xd2_u8])
  CLSID_MergedCategorizer = LibC::GUID.new(0x8e827c11_u32, 0x33e7_u16, 0x4bc1_u16, StaticArray[0xb2_u8, 0x42_u8, 0x8c_u8, 0xd9_u8, 0xa1_u8, 0xc2_u8, 0xb3_u8, 0x4_u8])
  CLSID_ImageProperties = LibC::GUID.new(0x7ab770c7_u32, 0xe23_u16, 0x4d7a_u16, StaticArray[0x8a_u8, 0xa2_u8, 0x19_u8, 0xbf_u8, 0xad_u8, 0x47_u8, 0x98_u8, 0x29_u8])
  CLSID_CDBurn = LibC::GUID.new(0xfbeb8a05_u32, 0xbeee_u16, 0x4442_u16, StaticArray[0x80_u8, 0x4e_u8, 0x40_u8, 0x9d_u8, 0x6c_u8, 0x45_u8, 0x15_u8, 0xe9_u8])
  CLSID_StartMenuPin = LibC::GUID.new(0xa2a9545d_u32, 0xa0c2_u16, 0x42b4_u16, StaticArray[0x97_u8, 0x8_u8, 0xa0_u8, 0xb2_u8, 0xba_u8, 0xdd_u8, 0x77_u8, 0xc8_u8])
  CLSID_WebWizardHost = LibC::GUID.new(0xc827f149_u32, 0x55c1_u16, 0x4d28_u16, StaticArray[0x93_u8, 0x5e_u8, 0x57_u8, 0xe4_u8, 0x7c_u8, 0xae_u8, 0xd9_u8, 0x73_u8])
  CLSID_PublishDropTarget = LibC::GUID.new(0xcc6eeffb_u32, 0x43f6_u16, 0x46c5_u16, StaticArray[0x96_u8, 0x19_u8, 0x51_u8, 0xd5_u8, 0x71_u8, 0x96_u8, 0x7f_u8, 0x7d_u8])
  CLSID_PublishingWizard = LibC::GUID.new(0x6b33163c_u32, 0x76a5_u16, 0x4b6c_u16, StaticArray[0xbf_u8, 0x21_u8, 0x45_u8, 0xde_u8, 0x9c_u8, 0xd5_u8, 0x3_u8, 0xa1_u8])
  CLSID_InternetPrintOrdering = LibC::GUID.new(0xadd36aa8_u32, 0x751a_u16, 0x4579_u16, StaticArray[0xa2_u8, 0x66_u8, 0xd6_u8, 0x6f_u8, 0x52_u8, 0x2_u8, 0xcc_u8, 0xbb_u8])
  CLSID_FolderViewHost = LibC::GUID.new(0x20b1cb23_u32, 0x6968_u16, 0x4eb9_u16, StaticArray[0xb7_u8, 0xd4_u8, 0xa6_u8, 0x6d_u8, 0x0_u8, 0xd0_u8, 0x7c_u8, 0xee_u8])
  CLSID_ExplorerBrowser = LibC::GUID.new(0x71f96385_u32, 0xddd6_u16, 0x48d3_u16, StaticArray[0xa0_u8, 0xc1_u8, 0xae_u8, 0x6_u8, 0xe8_u8, 0xb0_u8, 0x55_u8, 0xfb_u8])
  CLSID_ImageRecompress = LibC::GUID.new(0x6e33091c_u32, 0xd2f8_u16, 0x4740_u16, StaticArray[0xb5_u8, 0x5e_u8, 0x2e_u8, 0x11_u8, 0xd1_u8, 0x47_u8, 0x7a_u8, 0x2c_u8])
  CLSID_TrayBandSiteService = LibC::GUID.new(0xf60ad0a0_u32, 0xe5e1_u16, 0x45cb_u16, StaticArray[0xb5_u8, 0x1a_u8, 0xe1_u8, 0x5b_u8, 0x9f_u8, 0x8b_u8, 0x29_u8, 0x34_u8])
  CLSID_TrayDeskBand = LibC::GUID.new(0xe6442437_u32, 0x6c68_u16, 0x4f52_u16, StaticArray[0x94_u8, 0xdd_u8, 0x2c_u8, 0xfe_u8, 0xd2_u8, 0x67_u8, 0xef_u8, 0xb9_u8])
  CLSID_AttachmentServices = LibC::GUID.new(0x4125dd96_u32, 0xe03a_u16, 0x4103_u16, StaticArray[0x8f_u8, 0x70_u8, 0xe0_u8, 0x59_u8, 0x7d_u8, 0x80_u8, 0x3b_u8, 0x9c_u8])
  CLSID_DocPropShellExtension = LibC::GUID.new(0x883373c3_u32, 0xbf89_u16, 0x11d1_u16, StaticArray[0xbe_u8, 0x35_u8, 0x8_u8, 0x0_u8, 0x36_u8, 0xb1_u8, 0x1a_u8, 0x3_u8])
  CLSID_FSCopyHandler = LibC::GUID.new(0xd197380a_u32, 0xa79_u16, 0x4dc8_u16, StaticArray[0xa0_u8, 0x33_u8, 0xed_u8, 0x88_u8, 0x2c_u8, 0x2f_u8, 0xa1_u8, 0x4b_u8])
  CLSID_PreviousVersions = LibC::GUID.new(0x596ab062_u32, 0xb4d2_u16, 0x4215_u16, StaticArray[0x9f_u8, 0x74_u8, 0xe9_u8, 0x10_u8, 0x9b_u8, 0xa_u8, 0x81_u8, 0x53_u8])
  CLSID_NamespaceTreeControl = LibC::GUID.new(0xae054212_u32, 0x3535_u16, 0x4430_u16, StaticArray[0x83_u8, 0xed_u8, 0xd5_u8, 0x1_u8, 0xaa_u8, 0x66_u8, 0x80_u8, 0xe6_u8])
  CLSID_IENamespaceTreeControl = LibC::GUID.new(0xace52d03_u32, 0xe5cd_u16, 0x4b20_u16, StaticArray[0x82_u8, 0xff_u8, 0xe7_u8, 0x1b_u8, 0x11_u8, 0xbe_u8, 0xae_u8, 0x1d_u8])
  CLSID_ApplicationAssociationRegistrationUI = LibC::GUID.new(0x1968106d_u32, 0xf3b5_u16, 0x44cf_u16, StaticArray[0x89_u8, 0xe_u8, 0x11_u8, 0x6f_u8, 0xcb_u8, 0x9e_u8, 0xce_u8, 0xf1_u8])
  CLSID_DesktopGadget = LibC::GUID.new(0x924ccc1b_u32, 0x6562_u16, 0x4c85_u16, StaticArray[0x86_u8, 0x57_u8, 0xd1_u8, 0x77_u8, 0x92_u8, 0x52_u8, 0x22_u8, 0xb6_u8])
  CLSID_AccessibilityDockingService = LibC::GUID.new(0x29ce1d46_u32, 0xb481_u16, 0x4aa0_u16, StaticArray[0xa0_u8, 0x8a_u8, 0xd3_u8, 0xeb_u8, 0xc8_u8, 0xac_u8, 0xa4_u8, 0x2_u8])
  CLSID_ExecuteFolder = LibC::GUID.new(0x11dbb47c_u32, 0xa525_u16, 0x400b_u16, StaticArray[0x9e_u8, 0x80_u8, 0xa5_u8, 0x46_u8, 0x15_u8, 0xa0_u8, 0x90_u8, 0xc0_u8])
  CLSID_VirtualDesktopManager = LibC::GUID.new(0xaa509086_u32, 0x5ca9_u16, 0x4c25_u16, StaticArray[0x8f_u8, 0x95_u8, 0x58_u8, 0x9d_u8, 0x3c_u8, 0x7_u8, 0xb4_u8, 0x8a_u8])
  CLSID_StorageProviderBanners = LibC::GUID.new(0x7ccdf9f4_u32, 0xe576_u16, 0x455a_u16, StaticArray[0x8b_u8, 0xc7_u8, 0xf6_u8, 0xec_u8, 0x68_u8, 0xd6_u8, 0xf0_u8, 0x63_u8])
  CLSID_DesktopWallpaper = LibC::GUID.new(0xc2cf3110_u32, 0x460e_u16, 0x4fc1_u16, StaticArray[0xb9_u8, 0xd0_u8, 0x8a_u8, 0x1c_u8, 0xc_u8, 0x9c_u8, 0xc4_u8, 0xbd_u8])
  CLSID_ShellDesktop = LibC::GUID.new(0x21400_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  CLSID_ShellFSFolder = LibC::GUID.new(0xf3364ba0_u32, 0x65b9_u16, 0x11ce_u16, StaticArray[0xa9_u8, 0xba_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4a_u8, 0xe8_u8, 0x37_u8])
  CLSID_NetworkPlaces = LibC::GUID.new(0x208d2c60_u32, 0x3aea_u16, 0x1069_u16, StaticArray[0xa2_u8, 0xd7_u8, 0x8_u8, 0x0_u8, 0x2b_u8, 0x30_u8, 0x30_u8, 0x9d_u8])
  CLSID_ShellLink = LibC::GUID.new(0x21401_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  CLSID_DriveSizeCategorizer = LibC::GUID.new(0x94357b53_u32, 0xca29_u16, 0x4b78_u16, StaticArray[0x83_u8, 0xae_u8, 0xe8_u8, 0xfe_u8, 0x74_u8, 0x9_u8, 0x13_u8, 0x4f_u8])
  CLSID_DriveTypeCategorizer = LibC::GUID.new(0xb0a8f3cf_u32, 0x4333_u16, 0x4bab_u16, StaticArray[0x88_u8, 0x73_u8, 0x1c_u8, 0xcb_u8, 0x1c_u8, 0xad_u8, 0xa4_u8, 0x8b_u8])
  CLSID_FreeSpaceCategorizer = LibC::GUID.new(0xb5607793_u32, 0x24ac_u16, 0x44c7_u16, StaticArray[0x82_u8, 0xe2_u8, 0x83_u8, 0x17_u8, 0x26_u8, 0xaa_u8, 0x6c_u8, 0xb7_u8])
  CLSID_SizeCategorizer = LibC::GUID.new(0x55d7b852_u32, 0xf6d1_u16, 0x42f2_u16, StaticArray[0xaa_u8, 0x75_u8, 0x87_u8, 0x28_u8, 0xa1_u8, 0xb2_u8, 0xd2_u8, 0x64_u8])
  CLSID_PropertiesUI = LibC::GUID.new(0xd912f8cf_u32, 0x396_u16, 0x4915_u16, StaticArray[0x88_u8, 0x4e_u8, 0xfb_u8, 0x42_u8, 0x5d_u8, 0x32_u8, 0x94_u8, 0x3b_u8])
  CLSID_UserNotification = LibC::GUID.new(0x10890e_u32, 0x8789_u16, 0x413c_u16, StaticArray[0xad_u8, 0xbc_u8, 0x48_u8, 0xf5_u8, 0xb5_u8, 0x11_u8, 0xb3_u8, 0xaf_u8])
  CLSID_TaskbarList = LibC::GUID.new(0x56fdf344_u32, 0xfd6d_u16, 0x11d0_u16, StaticArray[0x95_u8, 0x8a_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xc9_u8, 0xa0_u8, 0x90_u8])
  CLSID_ShellItem = LibC::GUID.new(0x9ac9fbe1_u32, 0xe0a2_u16, 0x4ad6_u16, StaticArray[0xb4_u8, 0xee_u8, 0xe2_u8, 0x12_u8, 0x1_u8, 0x3e_u8, 0xa9_u8, 0x17_u8])
  CLSID_NamespaceWalker = LibC::GUID.new(0x72eb61e0_u32, 0x8672_u16, 0x4303_u16, StaticArray[0x91_u8, 0x75_u8, 0xf2_u8, 0xe4_u8, 0xc6_u8, 0x8b_u8, 0x2e_u8, 0x7c_u8])
  CLSID_FileOperation = LibC::GUID.new(0x3ad05575_u32, 0x8857_u16, 0x4850_u16, StaticArray[0x92_u8, 0x77_u8, 0x11_u8, 0xb8_u8, 0x5b_u8, 0xdb_u8, 0x8e_u8, 0x9_u8])
  CLSID_FileOpenDialog = LibC::GUID.new(0xdc1c5a9c_u32, 0xe88a_u16, 0x4dde_u16, StaticArray[0xa5_u8, 0xa1_u8, 0x60_u8, 0xf8_u8, 0x2a_u8, 0x20_u8, 0xae_u8, 0xf7_u8])
  CLSID_FileSaveDialog = LibC::GUID.new(0xc0b4e2f3_u32, 0xba21_u16, 0x4773_u16, StaticArray[0x8d_u8, 0xba_u8, 0x33_u8, 0x5e_u8, 0xc9_u8, 0x46_u8, 0xeb_u8, 0x8b_u8])
  CLSID_KnownFolderManager = LibC::GUID.new(0x4df0c730_u32, 0xdf9d_u16, 0x4ae3_u16, StaticArray[0x91_u8, 0x53_u8, 0xaa_u8, 0x6b_u8, 0x82_u8, 0xe9_u8, 0x79_u8, 0x5a_u8])
  CLSID_SharingConfigurationManager = LibC::GUID.new(0x49f371e1_u32, 0x8c5c_u16, 0x4d9c_u16, StaticArray[0x9a_u8, 0x3b_u8, 0x54_u8, 0xa6_u8, 0x82_u8, 0x7f_u8, 0x51_u8, 0x3c_u8])
  CLSID_NetworkConnections = LibC::GUID.new(0x7007acc7_u32, 0x3202_u16, 0x11d1_u16, StaticArray[0xaa_u8, 0xd2_u8, 0x0_u8, 0x80_u8, 0x5f_u8, 0xc1_u8, 0x27_u8, 0xe_u8])
  CLSID_ScheduledTasks = LibC::GUID.new(0xd6277990_u32, 0x4c6a_u16, 0x11cf_u16, StaticArray[0x8d_u8, 0x87_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x60_u8, 0xf5_u8, 0xbf_u8])
  CLSID_ApplicationAssociationRegistration = LibC::GUID.new(0x591209c7_u32, 0x767b_u16, 0x42b2_u16, StaticArray[0x9f_u8, 0xba_u8, 0x44_u8, 0xee_u8, 0x46_u8, 0x15_u8, 0xf2_u8, 0xc7_u8])
  CLSID_SearchFolderItemFactory = LibC::GUID.new(0x14010e02_u32, 0xbbbd_u16, 0x41f0_u16, StaticArray[0x88_u8, 0xe3_u8, 0xed_u8, 0xa3_u8, 0x71_u8, 0x21_u8, 0x65_u8, 0x84_u8])
  CLSID_OpenControlPanel = LibC::GUID.new(0x6622d85_u32, 0x6856_u16, 0x4460_u16, StaticArray[0x8d_u8, 0xe1_u8, 0xa8_u8, 0x19_u8, 0x21_u8, 0xb4_u8, 0x1c_u8, 0x4b_u8])
  CLSID_MailRecipient = LibC::GUID.new(0x9e56be60_u32, 0xc50f_u16, 0x11cf_u16, StaticArray[0x9a_u8, 0x2c_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x90_u8, 0xce_u8])
  CLSID_NetworkExplorerFolder = LibC::GUID.new(0xf02c1a0d_u32, 0xbe21_u16, 0x4350_u16, StaticArray[0x88_u8, 0xb0_u8, 0x73_u8, 0x67_u8, 0xfc_u8, 0x96_u8, 0xef_u8, 0x3c_u8])
  CLSID_DestinationList = LibC::GUID.new(0x77f10cf0_u32, 0x3db5_u16, 0x4966_u16, StaticArray[0xb5_u8, 0x20_u8, 0xb7_u8, 0xc5_u8, 0x4f_u8, 0xd3_u8, 0x5e_u8, 0xd6_u8])
  CLSID_ApplicationDestinations = LibC::GUID.new(0x86c14003_u32, 0x4d6b_u16, 0x4ef3_u16, StaticArray[0xa7_u8, 0xb4_u8, 0x5_u8, 0x6_u8, 0x66_u8, 0x3b_u8, 0x2e_u8, 0x68_u8])
  CLSID_ApplicationDocumentLists = LibC::GUID.new(0x86bec222_u32, 0x30f2_u16, 0x47e0_u16, StaticArray[0x9f_u8, 0x25_u8, 0x60_u8, 0xd1_u8, 0x1c_u8, 0xd7_u8, 0x5c_u8, 0x28_u8])
  CLSID_HomeGroup = LibC::GUID.new(0xde77ba04_u32, 0x3c92_u16, 0x4d11_u16, StaticArray[0xa1_u8, 0xa5_u8, 0x42_u8, 0x35_u8, 0x2a_u8, 0x53_u8, 0xe0_u8, 0xe3_u8])
  CLSID_ShellLibrary = LibC::GUID.new(0xd9b3211d_u32, 0xe57f_u16, 0x4426_u16, StaticArray[0xaa_u8, 0xef_u8, 0x30_u8, 0xa8_u8, 0x6_u8, 0xad_u8, 0xd3_u8, 0x97_u8])
  CLSID_AppStartupLink = LibC::GUID.new(0x273eb5e7_u32, 0x88b0_u16, 0x4843_u16, StaticArray[0xbf_u8, 0xef_u8, 0xe2_u8, 0xc8_u8, 0x1d_u8, 0x43_u8, 0xaa_u8, 0xe5_u8])
  CLSID_EnumerableObjectCollection = LibC::GUID.new(0x2d3468c1_u32, 0x36a7_u16, 0x43b6_u16, StaticArray[0xac_u8, 0x24_u8, 0xd3_u8, 0xf0_u8, 0x2f_u8, 0xd9_u8, 0x60_u8, 0x7a_u8])
  CLSID_FrameworkInputPane = LibC::GUID.new(0xd5120aa3_u32, 0x46ba_u16, 0x44c5_u16, StaticArray[0x82_u8, 0x2d_u8, 0xca_u8, 0x80_u8, 0x92_u8, 0xc1_u8, 0xfc_u8, 0x72_u8])
  CLSID_DefFolderMenu = LibC::GUID.new(0xc63382be_u32, 0x7933_u16, 0x48d0_u16, StaticArray[0x9a_u8, 0xc8_u8, 0x85_u8, 0xfb_u8, 0x46_u8, 0xbe_u8, 0x2f_u8, 0xdd_u8])
  CLSID_AppVisibility = LibC::GUID.new(0x7e5fe3d9_u32, 0x985f_u16, 0x4908_u16, StaticArray[0x91_u8, 0xf9_u8, 0xee_u8, 0x19_u8, 0xf9_u8, 0xfd_u8, 0x15_u8, 0x14_u8])
  CLSID_AppShellVerbHandler = LibC::GUID.new(0x4ed3a719_u32, 0xcea8_u16, 0x4bd9_u16, StaticArray[0x91_u8, 0xd_u8, 0xe2_u8, 0x52_u8, 0xf9_u8, 0x97_u8, 0xaf_u8, 0xc2_u8])
  CLSID_ExecuteUnknown = LibC::GUID.new(0xe44e9428_u32, 0xbdbc_u16, 0x4987_u16, StaticArray[0xa0_u8, 0x99_u8, 0x40_u8, 0xdc_u8, 0x8f_u8, 0xd2_u8, 0x55_u8, 0xe7_u8])
  CLSID_PackageDebugSettings = LibC::GUID.new(0xb1aec16f_u32, 0x2383_u16, 0x4852_u16, StaticArray[0xb0_u8, 0xe9_u8, 0x8f_u8, 0xb_u8, 0x1d_u8, 0xc6_u8, 0x6b_u8, 0x4d_u8])
  CLSID_SuspensionDependencyManager = LibC::GUID.new(0x6b273fc5_u32, 0x61fd_u16, 0x4918_u16, StaticArray[0x95_u8, 0xa2_u8, 0xc3_u8, 0xb5_u8, 0xe9_u8, 0xd7_u8, 0xf5_u8, 0x81_u8])
  CLSID_ApplicationActivationManager = LibC::GUID.new(0x45ba127d_u32, 0x10a8_u16, 0x46ea_u16, StaticArray[0x8a_u8, 0xb7_u8, 0x56_u8, 0xea_u8, 0x90_u8, 0x78_u8, 0x94_u8, 0x3c_u8])
  CLSID_ApplicationDesignModeSettings = LibC::GUID.new(0x958a6fb5_u32, 0xdcb2_u16, 0x4faf_u16, StaticArray[0xaa_u8, 0xfd_u8, 0x7f_u8, 0xb0_u8, 0x54_u8, 0xad_u8, 0x1a_u8, 0x3b_u8])
  CLSID_WebBrowser_V1 = LibC::GUID.new(0xeab22ac3_u32, 0x30c1_u16, 0x11cf_u16, StaticArray[0xa7_u8, 0xeb_u8, 0x0_u8, 0x0_u8, 0xc0_u8, 0x5b_u8, 0xae_u8, 0xb_u8])
  CLSID_WebBrowser = LibC::GUID.new(0x8856f961_u32, 0x340a_u16, 0x11d0_u16, StaticArray[0xa9_u8, 0x6b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x5_u8, 0xa2_u8])
  CLSID_InternetExplorer = LibC::GUID.new(0x2df01_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  CLSID_InternetExplorerMedium = LibC::GUID.new(0xd5e8041d_u32, 0x920f_u16, 0x45e9_u16, StaticArray[0xb8_u8, 0xfb_u8, 0xb1_u8, 0xde_u8, 0xb8_u8, 0x2c_u8, 0x6e_u8, 0x5e_u8])
  CLSID_ShellBrowserWindow = LibC::GUID.new(0xc08afd90_u32, 0xf2a1_u16, 0x11d1_u16, StaticArray[0x84_u8, 0x55_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x1f_u8, 0x38_u8, 0x80_u8])
  CLSID_ShellWindows = LibC::GUID.new(0x9ba05972_u32, 0xf6a8_u16, 0x11cf_u16, StaticArray[0xa4_u8, 0x42_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x8f_u8, 0x39_u8])
  CLSID_ShellUIHelper = LibC::GUID.new(0x64ab4bb7_u32, 0x111e_u16, 0x11d1_u16, StaticArray[0x8f_u8, 0x79_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc2_u8, 0xfb_u8, 0xe1_u8])
  CLSID_ShellNameSpace = LibC::GUID.new(0x55136805_u32, 0xb2de_u16, 0x11d1_u16, StaticArray[0xb9_u8, 0xf2_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x8b_u8, 0xc5_u8, 0x47_u8])
  CLSID_CScriptErrorList = LibC::GUID.new(0xefd01300_u32, 0x160f_u16, 0x11d2_u16, StaticArray[0xbb_u8, 0x2e_u8, 0x0_u8, 0x80_u8, 0x5f_u8, 0xf7_u8, 0xef_u8, 0xca_u8])
  CLSID_ShellFolderViewOC = LibC::GUID.new(0x9ba05971_u32, 0xf6a8_u16, 0x11cf_u16, StaticArray[0xa4_u8, 0x42_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x8f_u8, 0x39_u8])
  CLSID_ShellFolderItem = LibC::GUID.new(0x2fe352ea_u32, 0xfd1f_u16, 0x11d2_u16, StaticArray[0xb1_u8, 0xf4_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xeb_u8, 0x3e_u8])
  CLSID_ShellLinkObject = LibC::GUID.new(0x11219420_u32, 0x1768_u16, 0x11d1_u16, StaticArray[0x95_u8, 0xbe_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0x97_u8, 0xea_u8, 0x4f_u8])
  CLSID_ShellFolderView = LibC::GUID.new(0x62112aa1_u32, 0xebe4_u16, 0x11cf_u16, StaticArray[0xa5_u8, 0xfb_u8, 0x0_u8, 0x20_u8, 0xaf_u8, 0xe7_u8, 0x29_u8, 0x2d_u8])
  CLSID_Shell = LibC::GUID.new(0x13709620_u32, 0xc279_u16, 0x11ce_u16, StaticArray[0xa4_u8, 0x9e_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
  CLSID_ShellDispatchInproc = LibC::GUID.new(0xa89a860_u32, 0xd7b1_u16, 0x11ce_u16, StaticArray[0x83_u8, 0x50_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
  CLSID_FileSearchBand = LibC::GUID.new(0xc4ee31f3_u32, 0x4768_u16, 0x11d2_u16, StaticArray[0xbe_u8, 0x5c_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa8_u8, 0x3d_u8, 0xa1_u8])
  CLSID_PasswordCredentialProvider = LibC::GUID.new(0x60b78e88_u32, 0xead8_u16, 0x445c_u16, StaticArray[0x9c_u8, 0xfd_u8, 0xb_u8, 0x87_u8, 0xf7_u8, 0x4e_u8, 0xa6_u8, 0xcd_u8])
  CLSID_V1PasswordCredentialProvider = LibC::GUID.new(0x6f45dc1e_u32, 0x5384_u16, 0x457a_u16, StaticArray[0xbc_u8, 0x13_u8, 0x2c_u8, 0xd8_u8, 0x1b_u8, 0xd_u8, 0x28_u8, 0xed_u8])
  CLSID_PINLogonCredentialProvider = LibC::GUID.new(0xcb82ea12_u32, 0x9f71_u16, 0x446d_u16, StaticArray[0x89_u8, 0xe1_u8, 0x8d_u8, 0x9_u8, 0x24_u8, 0xe1_u8, 0x25_u8, 0x6e_u8])
  CLSID_NPCredentialProvider = LibC::GUID.new(0x3dd6bec0_u32, 0x8193_u16, 0x4ffe_u16, StaticArray[0xae_u8, 0x25_u8, 0xe0_u8, 0x8e_u8, 0x39_u8, 0xea_u8, 0x40_u8, 0x63_u8])
  CLSID_SmartcardCredentialProvider = LibC::GUID.new(0x8fd7e19c_u32, 0x3bf7_u16, 0x489b_u16, StaticArray[0xa7_u8, 0x2c_u8, 0x84_u8, 0x6a_u8, 0xb3_u8, 0x67_u8, 0x8c_u8, 0x96_u8])
  CLSID_V1SmartcardCredentialProvider = LibC::GUID.new(0x8bf9a910_u32, 0xa8ff_u16, 0x457f_u16, StaticArray[0x99_u8, 0x9f_u8, 0xa5_u8, 0xca_u8, 0x10_u8, 0xb4_u8, 0xa8_u8, 0x85_u8])
  CLSID_SmartcardPinProvider = LibC::GUID.new(0x94596c7e_u32, 0x3744_u16, 0x41ce_u16, StaticArray[0x89_u8, 0x3e_u8, 0xbb_u8, 0xf0_u8, 0x91_u8, 0x22_u8, 0xf7_u8, 0x6a_u8])
  CLSID_SmartcardReaderSelectionProvider = LibC::GUID.new(0x1b283861_u32, 0x754f_u16, 0x4022_u16, StaticArray[0xad_u8, 0x47_u8, 0xa5_u8, 0xea_u8, 0xaa_u8, 0x61_u8, 0x88_u8, 0x94_u8])
  CLSID_SmartcardWinRTProvider = LibC::GUID.new(0x1ee7337f_u32, 0x85ac_u16, 0x45e2_u16, StaticArray[0xa2_u8, 0x3c_u8, 0x37_u8, 0xc7_u8, 0x53_u8, 0x20_u8, 0x97_u8, 0x69_u8])
  CLSID_GenericCredentialProvider = LibC::GUID.new(0x25cbb996_u32, 0x92ed_u16, 0x457e_u16, StaticArray[0xb2_u8, 0x8c_u8, 0x47_u8, 0x74_u8, 0x8_u8, 0x4b_u8, 0xd5_u8, 0x62_u8])
  CLSID_RASProvider = LibC::GUID.new(0x5537e283_u32, 0xb1e7_u16, 0x4ef8_u16, StaticArray[0x9c_u8, 0x6e_u8, 0x7a_u8, 0xb0_u8, 0xaf_u8, 0xe5_u8, 0x5_u8, 0x6d_u8])
  CLSID_OnexCredentialProvider = LibC::GUID.new(0x7aa0886_u32, 0xcc8d_u16, 0x4e19_u16, StaticArray[0xa4_u8, 0x10_u8, 0x1c_u8, 0x75_u8, 0xaf_u8, 0x68_u8, 0x6e_u8, 0x62_u8])
  CLSID_OnexPlapSmartcardCredentialProvider = LibC::GUID.new(0x33c86cd6_u32, 0x705f_u16, 0x4ba1_u16, StaticArray[0x9a_u8, 0xdb_u8, 0x67_u8, 0x7_u8, 0xb_u8, 0x83_u8, 0x77_u8, 0x75_u8])
  CLSID_VaultProvider = LibC::GUID.new(0x503739d0_u32, 0x4c5e_u16, 0x4cfd_u16, StaticArray[0xb3_u8, 0xba_u8, 0xd8_u8, 0x81_u8, 0x33_u8, 0x4f_u8, 0xd_u8, 0xf2_u8])
  CLSID_WinBioCredentialProvider = LibC::GUID.new(0xbec09223_u32, 0xb018_u16, 0x416d_u16, StaticArray[0xa0_u8, 0xac_u8, 0x52_u8, 0x39_u8, 0x71_u8, 0xb6_u8, 0x39_u8, 0xf5_u8])
  CLSID_V1WinBioCredentialProvider = LibC::GUID.new(0xac3ac249_u32, 0xe820_u16, 0x4343_u16, StaticArray[0xa6_u8, 0x5b_u8, 0x37_u8, 0x7a_u8, 0xc6_u8, 0x34_u8, 0xdc_u8, 0x9_u8])
  CLSID_SyncMgrClient = LibC::GUID.new(0x1202db60_u32, 0x1dac_u16, 0x42c5_u16, StaticArray[0xae_u8, 0xd5_u8, 0x1a_u8, 0xbd_u8, 0xd4_u8, 0x32_u8, 0x24_u8, 0x8e_u8])
  CLSID_SyncMgrControl = LibC::GUID.new(0x1a1f4206_u32, 0x688_u16, 0x4e7f_u16, StaticArray[0xbe_u8, 0x3_u8, 0xd8_u8, 0x2e_u8, 0xc6_u8, 0x9d_u8, 0xf9_u8, 0xa5_u8])
  CLSID_SyncMgrScheduleWizard = LibC::GUID.new(0x8d8b8e30_u32, 0xc451_u16, 0x421b_u16, StaticArray[0x85_u8, 0x53_u8, 0xd2_u8, 0x97_u8, 0x6a_u8, 0xfa_u8, 0x64_u8, 0x8c_u8])
  CLSID_SyncMgrFolder = LibC::GUID.new(0x9c73f5e5_u32, 0x7ae7_u16, 0x4e32_u16, StaticArray[0xa8_u8, 0xe8_u8, 0x8d_u8, 0x23_u8, 0xb8_u8, 0x52_u8, 0x55_u8, 0xbf_u8])
  CLSID_SyncSetupFolder = LibC::GUID.new(0x2e9e59c0_u32, 0xb437_u16, 0x4981_u16, StaticArray[0xa6_u8, 0x47_u8, 0x9c_u8, 0x34_u8, 0xb9_u8, 0xb9_u8, 0x8_u8, 0x91_u8])
  CLSID_ConflictFolder = LibC::GUID.new(0x289978ac_u32, 0xa101_u16, 0x4341_u16, StaticArray[0xa8_u8, 0x17_u8, 0x21_u8, 0xeb_u8, 0xa7_u8, 0xfd_u8, 0x4_u8, 0x6d_u8])
  CLSID_SyncResultsFolder = LibC::GUID.new(0x71d99464_u32, 0x3b6b_u16, 0x475c_u16, StaticArray[0xb2_u8, 0x41_u8, 0xe1_u8, 0x58_u8, 0x83_u8, 0x20_u8, 0x75_u8, 0x29_u8])
  CLSID_SimpleConflictPresenter = LibC::GUID.new(0x7a0f6ab7_u32, 0xed84_u16, 0x46b6_u16, StaticArray[0xb4_u8, 0x7e_u8, 0x2_u8, 0xaa_u8, 0x15_u8, 0x9a_u8, 0x15_u8, 0x2b_u8])
  CLSID_InputPanelConfiguration = LibC::GUID.new(0x2853add3_u32, 0xf096_u16, 0x4c63_u16, StaticArray[0xa7_u8, 0x8f_u8, 0x7f_u8, 0xa3_u8, 0xea_u8, 0x83_u8, 0x7f_u8, 0xb7_u8])
  CLSID_LocalThumbnailCache = LibC::GUID.new(0x50ef4544_u32, 0xac9f_u16, 0x4a8e_u16, StaticArray[0xb2_u8, 0x1b_u8, 0x8a_u8, 0x26_u8, 0x18_u8, 0xd_u8, 0xb1_u8, 0x3f_u8])
  CLSID_SharedBitmap = LibC::GUID.new(0x4db26476_u32, 0x6787_u16, 0x4046_u16, StaticArray[0xb8_u8, 0x36_u8, 0xe8_u8, 0x41_u8, 0x2a_u8, 0x9e_u8, 0x8a_u8, 0x27_u8])
  CLSID_ShellImageDataFactory = LibC::GUID.new(0x66e4e4fb_u32, 0xf385_u16, 0x4dd0_u16, StaticArray[0x8d_u8, 0x74_u8, 0xa2_u8, 0xef_u8, 0xd1_u8, 0xbc_u8, 0x61_u8, 0x78_u8])
  CLSID_SyncMgr = LibC::GUID.new(0x6295df27_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])
  CLSID_ThumbnailStreamCache = LibC::GUID.new(0xcbe0fed3_u32, 0x4b91_u16, 0x4e90_u16, StaticArray[0x83_u8, 0x54_u8, 0x8a_u8, 0x8c_u8, 0x84_u8, 0xec_u8, 0x68_u8, 0x72_u8])
  CLSID_TrackShellMenu = LibC::GUID.new(0x8278f931_u32, 0x2a3e_u16, 0x11d2_u16, StaticArray[0x83_u8, 0x8f_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])
  CLSID_ImageTranscode = LibC::GUID.new(0x17b75166_u32, 0x928f_u16, 0x417d_u16, StaticArray[0x96_u8, 0x85_u8, 0x64_u8, 0xaa_u8, 0x13_u8, 0x55_u8, 0x65_u8, 0xc1_u8])
  CLSID_ShowInputPaneAnimationCoordinator = LibC::GUID.new(0x1f046abf_u32, 0x3202_u16, 0x4dc1_u16, StaticArray[0x8c_u8, 0xb5_u8, 0x3c_u8, 0x67_u8, 0x61_u8, 0x7c_u8, 0xe1_u8, 0xfa_u8])
  CLSID_HideInputPaneAnimationCoordinator = LibC::GUID.new(0x384742b1_u32, 0x2a77_u16, 0x4cb3_u16, StaticArray[0x8c_u8, 0xf8_u8, 0x11_u8, 0x36_u8, 0xf5_u8, 0xe1_u8, 0x7e_u8, 0x59_u8])

  type APPSTATE_REGISTRATION = Void
  type APPCONSTRAIN_REGISTRATION = Void
  type NC_ADDRESS_NET_ADDRESS_INFO = Void

  alias SUBCLASSPROC = Proc(LibC::HANDLE, UInt32, LibC::UINT_PTR, LPARAM, LibC::UINT_PTR, LibC::UINT_PTR, LRESULT)
  alias BFFCALLBACK = Proc(LibC::HANDLE, UInt32, LPARAM, LPARAM, Int32)
  alias LPFNDFMCALLBACK = Proc(IShellFolder, LibC::HANDLE, IDataObject, UInt32, LibC::UINT_PTR, LPARAM, HRESULT)
  alias LPFNVIEWCALLBACK = Proc(IShellView, IShellFolder, LibC::HANDLE, UInt32, LibC::UINT_PTR, LPARAM, HRESULT)
  alias PFNCANSHAREFOLDERW = Proc(LibC::LPWSTR, HRESULT)
  alias PFNSHOWSHAREFOLDERUIW = Proc(LibC::HANDLE, LibC::LPWSTR, HRESULT)
  alias DLLGETVERSIONPROC = Proc(DLLVERSIONINFO*, HRESULT)
  alias APPLET_PROC = Proc(LibC::HANDLE, UInt32, LPARAM, LPARAM, Int32)
  alias PAPPSTATE_CHANGE_ROUTINE = Proc(BOOLEAN, Void*, Void)
  alias PAPPCONSTRAIN_CHANGE_ROUTINE = Proc(BOOLEAN, Void*, Void)


  enum SHGFI_FLAGS : Int32
    SHGFI_ADDOVERLAYS = 32
    SHGFI_ATTR_SPECIFIED = 131072
    SHGFI_ATTRIBUTES = 2048
    SHGFI_DISPLAYNAME = 512
    SHGFI_EXETYPE = 8192
    SHGFI_ICON = 256
    SHGFI_ICONLOCATION = 4096
    SHGFI_LARGEICON = 0
    SHGFI_LINKOVERLAY = 32768
    SHGFI_OPENICON = 2
    SHGFI_OVERLAYINDEX = 64
    SHGFI_PIDL = 8
    SHGFI_SELECTED = 65536
    SHGFI_SHELLICONSIZE = 4
    SHGFI_SMALLICON = 1
    SHGFI_SYSICONINDEX = 16384
    SHGFI_TYPENAME = 1024
    SHGFI_USEFILEATTRIBUTES = 16
  end

  enum SHCNE_ID : UInt32
    SHCNE_RENAMEITEM = 1
    SHCNE_CREATE = 2
    SHCNE_DELETE = 4
    SHCNE_MKDIR = 8
    SHCNE_RMDIR = 16
    SHCNE_MEDIAINSERTED = 32
    SHCNE_MEDIAREMOVED = 64
    SHCNE_DRIVEREMOVED = 128
    SHCNE_DRIVEADD = 256
    SHCNE_NETSHARE = 512
    SHCNE_NETUNSHARE = 1024
    SHCNE_ATTRIBUTES = 2048
    SHCNE_UPDATEDIR = 4096
    SHCNE_UPDATEITEM = 8192
    SHCNE_SERVERDISCONNECT = 16384
    SHCNE_UPDATEIMAGE = 32768
    SHCNE_DRIVEADDGUI = 65536
    SHCNE_RENAMEFOLDER = 131072
    SHCNE_FREESPACE = 262144
    SHCNE_EXTENDED_EVENT = 67108864
    SHCNE_ASSOCCHANGED = 134217728
    SHCNE_DISKEVENTS = 145439
    SHCNE_GLOBALEVENTS = 201687520
    SHCNE_ALLEVENTS = 2147483647
    SHCNE_INTERRUPT = 2147483648
  end

  enum SHCNRF_SOURCE : Int32
    SHCNRF_InterruptLevel = 1
    SHCNRF_ShellLevel = 2
    SHCNRF_RecursiveInterrupt = 4096
    SHCNRF_NewDelivery = 32768
  end

  enum SHCNF_FLAGS : UInt32
    SHCNF_IDLIST = 0
    SHCNF_PATHA = 1
    SHCNF_PRINTERA = 2
    SHCNF_DWORD = 3
    SHCNF_PATHW = 5
    SHCNF_PRINTERW = 6
    SHCNF_TYPE = 255
    SHCNF_FLUSH = 4096
    SHCNF_FLUSHNOWAIT = 12288
    SHCNF_NOTIFYRECURSIVE = 65536
    SHCNF_PATH = 5
    SHCNF_PRINTER = 6
  end

  enum QITIPF_FLAGS : Int32
    QITIPF_DEFAULT = 0
    QITIPF_USENAME = 1
    QITIPF_LINKNOTARGET = 2
    QITIPF_LINKUSETARGET = 4
    QITIPF_USESLOWTIP = 8
    QITIPF_SINGLELINE = 16
    QIF_CACHED = 1
    QIF_DONTEXPANDFOLDER = 2
  end

  enum SHDID_ID : Int32
    SHDID_ROOT_REGITEM = 1
    SHDID_FS_FILE = 2
    SHDID_FS_DIRECTORY = 3
    SHDID_FS_OTHER = 4
    SHDID_COMPUTER_DRIVE35 = 5
    SHDID_COMPUTER_DRIVE525 = 6
    SHDID_COMPUTER_REMOVABLE = 7
    SHDID_COMPUTER_FIXED = 8
    SHDID_COMPUTER_NETDRIVE = 9
    SHDID_COMPUTER_CDROM = 10
    SHDID_COMPUTER_RAMDISK = 11
    SHDID_COMPUTER_OTHER = 12
    SHDID_NET_DOMAIN = 13
    SHDID_NET_SERVER = 14
    SHDID_NET_SHARE = 15
    SHDID_NET_RESTOFNET = 16
    SHDID_NET_OTHER = 17
    SHDID_COMPUTER_IMAGING = 18
    SHDID_COMPUTER_AUDIO = 19
    SHDID_COMPUTER_SHAREDDOCS = 20
    SHDID_MOBILE_DEVICE = 21
    SHDID_REMOTE_DESKTOP_DRIVE = 22
  end

  enum SHGDFIL_FORMAT : Int32
    SHGDFIL_FINDDATA = 1
    SHGDFIL_NETRESOURCE = 2
    SHGDFIL_DESCRIPTIONID = 3
  end

  enum PRF_FLAGS : Int32
    PRF_VERIFYEXISTS = 1
    PRF_TRYPROGRAMEXTENSIONS = 3
    PRF_FIRSTDIRDEF = 4
    PRF_DONTFINDLNK = 8
    PRF_REQUIREABSOLUTE = 16
  end

  enum PCS_RET : UInt32
    PCS_FATAL = 2147483648
    PCS_REPLACEDCHAR = 1
    PCS_REMOVEDCHAR = 2
    PCS_TRUNCATED = 4
    PCS_PATHTOOLONG = 8
  end

  enum MM_FLAGS : UInt32
    MM_ADDSEPARATOR = 1
    MM_SUBMENUSHAVEIDS = 2
    MM_DONTREMOVESEPS = 4
  end

  enum SHOP_TYPE : Int32
    SHOP_PRINTERNAME = 1
    SHOP_FILEPATH = 2
    SHOP_VOLUMEGUID = 4
  end

  enum SHFMT_ID : UInt32
    SHFMT_ID_DEFAULT = 65535
  end

  enum SHFMT_OPT : Int32
    SHFMT_OPT_NONE = 0
    SHFMT_OPT_FULL = 1
    SHFMT_OPT_SYSONLY = 2
  end

  enum SHFMT_RET : UInt32
    SHFMT_ERROR = 4294967295
    SHFMT_CANCEL = 4294967294
    SHFMT_NOFORMAT = 4294967293
  end

  enum VALIDATEUNC_OPTION : Int32
    VALIDATEUNC_CONNECT = 1
    VALIDATEUNC_NOUI = 2
    VALIDATEUNC_PRINT = 4
    VALIDATEUNC_PERSIST = 8
    VALIDATEUNC_VALID = 15
  end

  enum SFVM_MESSAGE_ID : Int32
    SFVM_MERGEMENU = 1
    SFVM_INVOKECOMMAND = 2
    SFVM_GETHELPTEXT = 3
    SFVM_GETTOOLTIPTEXT = 4
    SFVM_GETBUTTONINFO = 5
    SFVM_GETBUTTONS = 6
    SFVM_INITMENUPOPUP = 7
    SFVM_FSNOTIFY = 14
    SFVM_WINDOWCREATED = 15
    SFVM_GETDETAILSOF = 23
    SFVM_COLUMNCLICK = 24
    SFVM_QUERYFSNOTIFY = 25
    SFVM_DEFITEMCOUNT = 26
    SFVM_DEFVIEWMODE = 27
    SFVM_UNMERGEMENU = 28
    SFVM_UPDATESTATUSBAR = 31
    SFVM_BACKGROUNDENUM = 32
    SFVM_DIDDRAGDROP = 36
    SFVM_SETISFV = 39
    SFVM_THISIDLIST = 41
    SFVM_ADDPROPERTYPAGES = 47
    SFVM_BACKGROUNDENUMDONE = 48
    SFVM_GETNOTIFY = 49
    SFVM_GETSORTDEFAULTS = 53
    SFVM_SIZE = 57
    SFVM_GETZONE = 58
    SFVM_GETPANE = 59
    SFVM_GETHELPTOPIC = 63
    SFVM_GETANIMATION = 68
  end

  enum SFVS_SELECT : Int32
    SFVS_SELECT_NONE = 0
    SFVS_SELECT_ALLITEMS = 1
    SFVS_SELECT_INVERT = 2
  end

  enum DFM_MESSAGE_ID : Int32
    DFM_MERGECONTEXTMENU = 1
    DFM_INVOKECOMMAND = 2
    DFM_GETHELPTEXT = 5
    DFM_WM_MEASUREITEM = 6
    DFM_WM_DRAWITEM = 7
    DFM_WM_INITMENUPOPUP = 8
    DFM_VALIDATECMD = 9
    DFM_MERGECONTEXTMENU_TOP = 10
    DFM_GETHELPTEXTW = 11
    DFM_INVOKECOMMANDEX = 12
    DFM_MAPCOMMANDNAME = 13
    DFM_GETDEFSTATICID = 14
    DFM_GETVERBW = 15
    DFM_GETVERBA = 16
    DFM_MERGECONTEXTMENU_BOTTOM = 17
    DFM_MODIFYQCMFLAGS = 18
  end

  enum DFM_CMD : Int32
    DFM_CMD_DELETE = -1
    DFM_CMD_MOVE = -2
    DFM_CMD_COPY = -3
    DFM_CMD_LINK = -4
    DFM_CMD_PROPERTIES = -5
    DFM_CMD_NEWFOLDER = -6
    DFM_CMD_PASTE = -7
    DFM_CMD_VIEWLIST = -8
    DFM_CMD_VIEWDETAILS = -9
    DFM_CMD_PASTELINK = -10
    DFM_CMD_PASTESPECIAL = -11
    DFM_CMD_MODALPROP = -12
    DFM_CMD_RENAME = -13
  end

  enum PID_IS : Int32
    PID_IS_URL = 2
    PID_IS_NAME = 4
    PID_IS_WORKINGDIR = 5
    PID_IS_HOTKEY = 6
    PID_IS_SHOWCMD = 7
    PID_IS_ICONINDEX = 8
    PID_IS_ICONFILE = 9
    PID_IS_WHATSNEW = 10
    PID_IS_AUTHOR = 11
    PID_IS_DESCRIPTION = 12
    PID_IS_COMMENT = 13
    PID_IS_ROAMED = 15
  end

  enum PID_INTSITE : Int32
    PID_INTSITE_WHATSNEW = 2
    PID_INTSITE_AUTHOR = 3
    PID_INTSITE_LASTVISIT = 4
    PID_INTSITE_LASTMOD = 5
    PID_INTSITE_VISITCOUNT = 6
    PID_INTSITE_DESCRIPTION = 7
    PID_INTSITE_COMMENT = 8
    PID_INTSITE_FLAGS = 9
    PID_INTSITE_CONTENTLEN = 10
    PID_INTSITE_CONTENTCODE = 11
    PID_INTSITE_RECURSE = 12
    PID_INTSITE_WATCH = 13
    PID_INTSITE_SUBSCRIPTION = 14
    PID_INTSITE_URL = 15
    PID_INTSITE_TITLE = 16
    PID_INTSITE_CODEPAGE = 18
    PID_INTSITE_TRACKING = 19
    PID_INTSITE_ICONINDEX = 20
    PID_INTSITE_ICONFILE = 21
    PID_INTSITE_ROAMED = 34
  end

  enum PIDISF_FLAGS : Int32
    PIDISF_RECENTLYCHANGED = 1
    PIDISF_CACHEDSTICKY = 2
    PIDISF_CACHEIMAGES = 16
    PIDISF_FOLLOWALLLINKS = 32
  end

  enum PIDISM_OPTIONS : Int32
    PIDISM_GLOBAL = 0
    PIDISM_WATCH = 1
    PIDISM_DONTWATCH = 2
  end

  enum PIDISR_INFO : Int32
    PIDISR_UP_TO_DATE = 0
    PIDISR_NEEDS_ADD = 1
    PIDISR_NEEDS_UPDATE = 2
    PIDISR_NEEDS_DELETE = 3
  end

  enum SSF_MASK : UInt32
    SSF_SHOWALLOBJECTS = 1
    SSF_SHOWEXTENSIONS = 2
    SSF_HIDDENFILEEXTS = 4
    SSF_SERVERADMINUI = 4
    SSF_SHOWCOMPCOLOR = 8
    SSF_SORTCOLUMNS = 16
    SSF_SHOWSYSFILES = 32
    SSF_DOUBLECLICKINWEBVIEW = 128
    SSF_SHOWATTRIBCOL = 256
    SSF_DESKTOPHTML = 512
    SSF_WIN95CLASSIC = 1024
    SSF_DONTPRETTYPATH = 2048
    SSF_SHOWINFOTIP = 8192
    SSF_MAPNETDRVBUTTON = 4096
    SSF_NOCONFIRMRECYCLE = 32768
    SSF_HIDEICONS = 16384
    SSF_FILTER = 65536
    SSF_WEBVIEW = 131072
    SSF_SHOWSUPERHIDDEN = 262144
    SSF_SEPPROCESS = 524288
    SSF_NONETCRAWLING = 1048576
    SSF_STARTPANELON = 2097152
    SSF_SHOWSTARTPAGE = 4194304
    SSF_AUTOCHECKSELECT = 8388608
    SSF_ICONSONLY = 16777216
    SSF_SHOWTYPEOVERLAY = 33554432
    SSF_SHOWSTATUSBAR = 67108864
  end

  enum NOTIFY_ICON_MESSAGE : UInt32
    NIM_ADD = 0
    NIM_MODIFY = 1
    NIM_DELETE = 2
    NIM_SETFOCUS = 3
    NIM_SETVERSION = 4
  end

  enum NOTIFY_ICON_DATA_FLAGS : UInt32
    NIF_MESSAGE = 1
    NIF_ICON = 2
    NIF_TIP = 4
    NIF_STATE = 8
    NIF_INFO = 16
    NIF_GUID = 32
    NIF_REALTIME = 64
    NIF_SHOWTIP = 128
  end

  enum OS : UInt32
    OS_WINDOWS = 0
    OS_NT = 1
    OS_WIN95ORGREATER = 2
    OS_NT4ORGREATER = 3
    OS_WIN98ORGREATER = 5
    OS_WIN98_GOLD = 6
    OS_WIN2000ORGREATER = 7
    OS_WIN2000PRO = 8
    OS_WIN2000SERVER = 9
    OS_WIN2000ADVSERVER = 10
    OS_WIN2000DATACENTER = 11
    OS_WIN2000TERMINAL = 12
    OS_EMBEDDED = 13
    OS_TERMINALCLIENT = 14
    OS_TERMINALREMOTEADMIN = 15
    OS_WIN95_GOLD = 16
    OS_MEORGREATER = 17
    OS_XPORGREATER = 18
    OS_HOME = 19
    OS_PROFESSIONAL = 20
    OS_DATACENTER = 21
    OS_ADVSERVER = 22
    OS_SERVER = 23
    OS_TERMINALSERVER = 24
    OS_PERSONALTERMINALSERVER = 25
    OS_FASTUSERSWITCHING = 26
    OS_WELCOMELOGONUI = 27
    OS_DOMAINMEMBER = 28
    OS_ANYSERVER = 29
    OS_WOW6432 = 30
    OS_WEBSERVER = 31
    OS_SMALLBUSINESSSERVER = 32
    OS_TABLETPC = 33
    OS_SERVERADMINUI = 34
    OS_MEDIACENTER = 35
    OS_APPLIANCE = 36
  end

  enum SHGDNF : Int32
    SHGDN_NORMAL = 0
    SHGDN_INFOLDER = 1
    SHGDN_FOREDITING = 4096
    SHGDN_FORADDRESSBAR = 16384
    SHGDN_FORPARSING = 32768
  end

  enum SHCONTF : Int32
    SHCONTF_CHECKING_FOR_CHILDREN = 16
    SHCONTF_FOLDERS = 32
    SHCONTF_NONFOLDERS = 64
    SHCONTF_INCLUDEHIDDEN = 128
    SHCONTF_INIT_ON_FIRST_NEXT = 256
    SHCONTF_NETPRINTERSRCH = 512
    SHCONTF_SHAREABLE = 1024
    SHCONTF_STORAGE = 2048
    SHCONTF_NAVIGATION_ENUM = 4096
    SHCONTF_FASTITEMS = 8192
    SHCONTF_FLATLIST = 16384
    SHCONTF_ENABLE_ASYNC = 32768
    SHCONTF_INCLUDESUPERHIDDEN = 65536
  end

  enum STORAGE_PROVIDER_FILE_FLAGS : Int32
    SPFF_NONE = 0
    SPFF_DOWNLOAD_BY_DEFAULT = 1
    SPFF_CREATED_ON_THIS_DEVICE = 2
  end

  enum MERGE_UPDATE_STATUS : Int32
    MUS_COMPLETE = 0
    MUS_USERINPUTNEEDED = 1
    MUS_FAILED = 2
  end

  enum FOLDER_ENUM_MODE : Int32
    FEM_VIEWRESULT = 0
    FEM_NAVIGATION = 1
  end

  enum FOLDERFLAGS : Int32
    FWF_NONE = 0
    FWF_AUTOARRANGE = 1
    FWF_ABBREVIATEDNAMES = 2
    FWF_SNAPTOGRID = 4
    FWF_OWNERDATA = 8
    FWF_BESTFITWINDOW = 16
    FWF_DESKTOP = 32
    FWF_SINGLESEL = 64
    FWF_NOSUBFOLDERS = 128
    FWF_TRANSPARENT = 256
    FWF_NOCLIENTEDGE = 512
    FWF_NOSCROLL = 1024
    FWF_ALIGNLEFT = 2048
    FWF_NOICONS = 4096
    FWF_SHOWSELALWAYS = 8192
    FWF_NOVISIBLE = 16384
    FWF_SINGLECLICKACTIVATE = 32768
    FWF_NOWEBVIEW = 65536
    FWF_HIDEFILENAMES = 131072
    FWF_CHECKSELECT = 262144
    FWF_NOENUMREFRESH = 524288
    FWF_NOGROUPING = 1048576
    FWF_FULLROWSELECT = 2097152
    FWF_NOFILTERS = 4194304
    FWF_NOCOLUMNHEADER = 8388608
    FWF_NOHEADERINALLVIEWS = 16777216
    FWF_EXTENDEDTILES = 33554432
    FWF_TRICHECKSELECT = 67108864
    FWF_AUTOCHECKSELECT = 134217728
    FWF_NOBROWSERVIEWSTATE = 268435456
    FWF_SUBSETGROUPS = 536870912
    FWF_USESEARCHFOLDER = 1073741824
    FWF_ALLOWRTLREADING = -2147483648
  end

  enum FOLDERVIEWMODE : Int32
    FVM_AUTO = -1
    FVM_FIRST = 1
    FVM_ICON = 1
    FVM_SMALLICON = 2
    FVM_LIST = 3
    FVM_DETAILS = 4
    FVM_THUMBNAIL = 5
    FVM_TILE = 6
    FVM_THUMBSTRIP = 7
    FVM_CONTENT = 8
    FVM_LAST = 8
  end

  enum FOLDERLOGICALVIEWMODE : Int32
    FLVM_UNSPECIFIED = -1
    FLVM_FIRST = 1
    FLVM_DETAILS = 1
    FLVM_TILES = 2
    FLVM_ICONS = 3
    FLVM_LIST = 4
    FLVM_CONTENT = 5
    FLVM_LAST = 5
  end

  enum SVSIF : Int32
    SVSI_DESELECT = 0
    SVSI_SELECT = 1
    SVSI_EDIT = 3
    SVSI_DESELECTOTHERS = 4
    SVSI_ENSUREVISIBLE = 8
    SVSI_FOCUSED = 16
    SVSI_TRANSLATEPT = 32
    SVSI_SELECTIONMARK = 64
    SVSI_POSITIONITEM = 128
    SVSI_CHECK = 256
    SVSI_CHECK2 = 512
    SVSI_KEYBOARDSELECT = 1025
    SVSI_NOTAKEFOCUS = 1073741824
  end

  enum SVGIO : Int32
    SVGIO_BACKGROUND = 0
    SVGIO_SELECTION = 1
    SVGIO_ALLVIEW = 2
    SVGIO_CHECKED = 3
    SVGIO_TYPE_MASK = 15
    SVGIO_FLAG_VIEWORDER = -2147483648
  end

  enum SVUIA_STATUS : Int32
    SVUIA_DEACTIVATE = 0
    SVUIA_ACTIVATE_NOFOCUS = 1
    SVUIA_ACTIVATE_FOCUS = 2
    SVUIA_INPLACEACTIVATE = 3
  end

  enum SORTDIRECTION : Int32
    SORT_DESCENDING = -1
    SORT_ASCENDING = 1
  end

  enum FVTEXTTYPE : Int32
    FVST_EMPTYTEXT = 0
  end

  enum CM_MASK : Int32
    CM_MASK_WIDTH = 1
    CM_MASK_DEFAULTWIDTH = 2
    CM_MASK_IDEALWIDTH = 4
    CM_MASK_NAME = 8
    CM_MASK_STATE = 16
  end

  enum CM_STATE : Int32
    CM_STATE_NONE = 0
    CM_STATE_VISIBLE = 1
    CM_STATE_FIXEDWIDTH = 2
    CM_STATE_NOSORTBYFOLDERNESS = 4
    CM_STATE_ALWAYSVISIBLE = 8
  end

  enum CM_ENUM_FLAGS : Int32
    CM_ENUM_ALL = 1
    CM_ENUM_VISIBLE = 2
  end

  enum CM_SET_WIDTH_VALUE : Int32
    CM_WIDTH_USEDEFAULT = -1
    CM_WIDTH_AUTOSIZE = -2
  end

  enum SIGDN : Int32
    SIGDN_NORMALDISPLAY = 0
    SIGDN_PARENTRELATIVEPARSING = -2147385343
    SIGDN_DESKTOPABSOLUTEPARSING = -2147319808
    SIGDN_PARENTRELATIVEEDITING = -2147282943
    SIGDN_DESKTOPABSOLUTEEDITING = -2147172352
    SIGDN_FILESYSPATH = -2147123200
    SIGDN_URL = -2147057664
    SIGDN_PARENTRELATIVEFORADDRESSBAR = -2146975743
    SIGDN_PARENTRELATIVE = -2146959359
    SIGDN_PARENTRELATIVEFORUI = -2146877439
  end

  enum SICHINTF : Int32
    SICHINT_DISPLAY = 0
    SICHINT_ALLFIELDS = -2147483648
    SICHINT_CANONICAL = 268435456
    SICHINT_TEST_FILESYSPATH_IF_NOT_EQUAL = 536870912
  end

  enum DATAOBJ_GET_ITEM_FLAGS : Int32
    DOGIF_DEFAULT = 0
    DOGIF_TRAVERSE_LINK = 1
    DOGIF_NO_HDROP = 2
    DOGIF_NO_URL = 4
    DOGIF_ONLY_IF_ONE = 8
  end

  enum SIIGBF : Int32
    SIIGBF_RESIZETOFIT = 0
    SIIGBF_BIGGERSIZEOK = 1
    SIIGBF_MEMORYONLY = 2
    SIIGBF_ICONONLY = 4
    SIIGBF_THUMBNAILONLY = 8
    SIIGBF_INCACHEONLY = 16
    SIIGBF_CROPTOSQUARE = 32
    SIIGBF_WIDETHUMBNAILS = 64
    SIIGBF_ICONBACKGROUND = 128
    SIIGBF_SCALEUP = 256
  end

  enum STGOP : Int32
    STGOP_MOVE = 1
    STGOP_COPY = 2
    STGOP_SYNC = 3
    STGOP_REMOVE = 5
    STGOP_RENAME = 6
    STGOP_APPLYPROPERTIES = 8
    STGOP_NEW = 10
  end

  enum TRANSFER_SOURCE_FLAGS : Int32
    TSF_NORMAL = 0
    TSF_FAIL_EXIST = 0
    TSF_RENAME_EXIST = 1
    TSF_OVERWRITE_EXIST = 2
    TSF_ALLOW_DECRYPTION = 4
    TSF_NO_SECURITY = 8
    TSF_COPY_CREATION_TIME = 16
    TSF_COPY_WRITE_TIME = 32
    TSF_USE_FULL_ACCESS = 64
    TSF_DELETE_RECYCLE_IF_POSSIBLE = 128
    TSF_COPY_HARD_LINK = 256
    TSF_COPY_LOCALIZED_NAME = 512
    TSF_MOVE_AS_COPY_DELETE = 1024
    TSF_SUSPEND_SHELLEVENTS = 2048
  end

  enum TRANSFER_ADVISE_STATE : Int32
    TS_NONE = 0
    TS_PERFORMING = 1
    TS_PREPARING = 2
    TS_INDETERMINATE = 4
  end

  enum SIATTRIBFLAGS : Int32
    SIATTRIBFLAGS_AND = 1
    SIATTRIBFLAGS_OR = 2
    SIATTRIBFLAGS_APPCOMPAT = 3
    SIATTRIBFLAGS_MASK = 3
    SIATTRIBFLAGS_ALLITEMS = 16384
  end

  enum CATEGORYINFO_FLAGS : Int32
    CATINFO_NORMAL = 0
    CATINFO_COLLAPSED = 1
    CATINFO_HIDDEN = 2
    CATINFO_EXPANDED = 4
    CATINFO_NOHEADER = 8
    CATINFO_NOTCOLLAPSIBLE = 16
    CATINFO_NOHEADERCOUNT = 32
    CATINFO_SUBSETTED = 64
    CATINFO_SEPARATE_IMAGES = 128
    CATINFO_SHOWEMPTY = 256
  end

  enum CATSORT_FLAGS : Int32
    CATSORT_DEFAULT = 0
    CATSORT_NAME = 1
  end

  enum SLR_FLAGS : Int32
    SLR_NONE = 0
    SLR_NO_UI = 1
    SLR_ANY_MATCH = 2
    SLR_UPDATE = 4
    SLR_NOUPDATE = 8
    SLR_NOSEARCH = 16
    SLR_NOTRACK = 32
    SLR_NOLINKINFO = 64
    SLR_INVOKE_MSI = 128
    SLR_NO_UI_WITH_MSG_PUMP = 257
    SLR_OFFER_DELETE_WITHOUT_FILE = 512
    SLR_KNOWNFOLDER = 1024
    SLR_MACHINE_IN_LOCAL_TARGET = 2048
    SLR_UPDATE_MACHINE_AND_SID = 4096
    SLR_NO_OBJECT_ID = 8192
  end

  enum SLGP_FLAGS : Int32
    SLGP_SHORTPATH = 1
    SLGP_UNCPRIORITY = 2
    SLGP_RAWPATH = 4
    SLGP_RELATIVEPRIORITY = 8
  end

  enum SPINITF : Int32
    SPINITF_NORMAL = 0
    SPINITF_MODAL = 1
    SPINITF_NOMINIMIZE = 8
  end

  enum SPBEGINF : Int32
    SPBEGINF_NORMAL = 0
    SPBEGINF_AUTOTIME = 2
    SPBEGINF_NOPROGRESSBAR = 16
    SPBEGINF_MARQUEEPROGRESS = 32
    SPBEGINF_NOCANCELBUTTON = 64
  end

  enum SPACTION : Int32
    SPACTION_NONE = 0
    SPACTION_MOVING = 1
    SPACTION_COPYING = 2
    SPACTION_RECYCLING = 3
    SPACTION_APPLYINGATTRIBS = 4
    SPACTION_DOWNLOADING = 5
    SPACTION_SEARCHING_INTERNET = 6
    SPACTION_CALCULATING = 7
    SPACTION_UPLOADING = 8
    SPACTION_SEARCHING_FILES = 9
    SPACTION_DELETING = 10
    SPACTION_RENAMING = 11
    SPACTION_FORMATTING = 12
    SPACTION_COPY_MOVING = 13
  end

  enum SPTEXT : Int32
    SPTEXT_ACTIONDESCRIPTION = 1
    SPTEXT_ACTIONDETAIL = 2
  end

  enum EXPPS : Int32
    EXPPS_FILETYPES = 1
  end

  enum DESKBANDCID : Int32
    DBID_BANDINFOCHANGED = 0
    DBID_SHOWONLY = 1
    DBID_MAXIMIZEBAND = 2
    DBID_PUSHCHEVRON = 3
    DBID_DELAYINIT = 4
    DBID_FINISHINIT = 5
    DBID_SETWINDOWTHEME = 6
    DBID_PERMITAUTOHIDE = 7
  end

  enum THUMBBUTTONFLAGS : Int32
    THBF_ENABLED = 0
    THBF_DISABLED = 1
    THBF_DISMISSONCLICK = 2
    THBF_NOBACKGROUND = 4
    THBF_HIDDEN = 8
    THBF_NONINTERACTIVE = 16
  end

  enum THUMBBUTTONMASK : Int32
    THB_BITMAP = 1
    THB_ICON = 2
    THB_TOOLTIP = 4
    THB_FLAGS = 8
  end

  enum TBPFLAG : Int32
    TBPF_NOPROGRESS = 0
    TBPF_INDETERMINATE = 1
    TBPF_NORMAL = 2
    TBPF_ERROR = 4
    TBPF_PAUSED = 8
  end

  enum STPFLAG : Int32
    STPF_NONE = 0
    STPF_USEAPPTHUMBNAILALWAYS = 1
    STPF_USEAPPTHUMBNAILWHENACTIVE = 2
    STPF_USEAPPPEEKALWAYS = 4
    STPF_USEAPPPEEKWHENACTIVE = 8
  end

  enum EXPLORER_BROWSER_OPTIONS : Int32
    EBO_NONE = 0
    EBO_NAVIGATEONCE = 1
    EBO_SHOWFRAMES = 2
    EBO_ALWAYSNAVIGATE = 4
    EBO_NOTRAVELLOG = 8
    EBO_NOWRAPPERWINDOW = 16
    EBO_HTMLSHAREPOINTVIEW = 32
    EBO_NOBORDER = 64
    EBO_NOPERSISTVIEWSTATE = 128
  end

  enum EXPLORER_BROWSER_FILL_FLAGS : Int32
    EBF_NONE = 0
    EBF_SELECTFROMDATAOBJECT = 256
    EBF_NODROPTARGET = 512
  end

  enum OPPROGDLGF : Int32
    OPPROGDLG_DEFAULT = 0
    OPPROGDLG_ENABLEPAUSE = 128
    OPPROGDLG_ALLOWUNDO = 256
    OPPROGDLG_DONTDISPLAYSOURCEPATH = 512
    OPPROGDLG_DONTDISPLAYDESTPATH = 1024
    OPPROGDLG_NOMULTIDAYESTIMATES = 2048
    OPPROGDLG_DONTDISPLAYLOCATIONS = 4096
  end

  enum PDMODE : Int32
    PDM_DEFAULT = 0
    PDM_RUN = 1
    PDM_PREFLIGHT = 2
    PDM_UNDOING = 4
    PDM_ERRORSBLOCKING = 8
    PDM_INDETERMINATE = 16
  end

  enum FILE_OPERATION_FLAGS2 : Int32
    FOF2_NONE = 0
    FOF2_MERGEFOLDERSONCOLLISION = 1
  end

  enum NAMESPACEWALKFLAG : Int32
    NSWF_DEFAULT = 0
    NSWF_NONE_IMPLIES_ALL = 1
    NSWF_ONE_IMPLIES_ALL = 2
    NSWF_DONT_TRAVERSE_LINKS = 4
    NSWF_DONT_ACCUMULATE_RESULT = 8
    NSWF_TRAVERSE_STREAM_JUNCTIONS = 16
    NSWF_FILESYSTEM_ONLY = 32
    NSWF_SHOW_PROGRESS = 64
    NSWF_FLAG_VIEWORDER = 128
    NSWF_IGNORE_AUTOPLAY_HIDA = 256
    NSWF_ASYNC = 512
    NSWF_DONT_RESOLVE_LINKS = 1024
    NSWF_ACCUMULATE_FOLDERS = 2048
    NSWF_DONT_SORT = 4096
    NSWF_USE_TRANSFER_MEDIUM = 8192
    NSWF_DONT_TRAVERSE_STREAM_JUNCTIONS = 16384
    NSWF_ANY_IMPLIES_ALL = 32768
  end

  enum BANDSITECID : Int32
    BSID_BANDADDED = 0
    BSID_BANDREMOVED = 1
  end

  enum MENUBANDHANDLERCID : Int32
    MBHANDCID_PIDLSELECT = 0
  end

  enum MENUPOPUPSELECT : Int32
    MPOS_EXECUTE = 0
    MPOS_FULLCANCEL = 1
    MPOS_CANCELLEVEL = 2
    MPOS_SELECTLEFT = 3
    MPOS_SELECTRIGHT = 4
    MPOS_CHILDTRACKING = 5
  end

  enum MENUPOPUPPOPUPFLAGS : Int32
    MPPF_SETFOCUS = 1
    MPPF_INITIALSELECT = 2
    MPPF_NOANIMATE = 4
    MPPF_KEYBOARD = 16
    MPPF_REPOSITION = 32
    MPPF_FORCEZORDER = 64
    MPPF_FINALSELECT = 128
    MPPF_TOP = 536870912
    MPPF_LEFT = 1073741824
    MPPF_RIGHT = 1610612736
    MPPF_BOTTOM = -2147483648
    MPPF_POS_MASK = -536870912
    MPPF_ALIGN_LEFT = 33554432
    MPPF_ALIGN_RIGHT = 67108864
  end

  enum FILE_USAGE_TYPE : Int32
    FUT_PLAYING = 0
    FUT_EDITING = 1
    FUT_GENERIC = 2
  end

  enum FDE_OVERWRITE_RESPONSE : Int32
    FDEOR_DEFAULT = 0
    FDEOR_ACCEPT = 1
    FDEOR_REFUSE = 2
  end

  enum FDE_SHAREVIOLATION_RESPONSE : Int32
    FDESVR_DEFAULT = 0
    FDESVR_ACCEPT = 1
    FDESVR_REFUSE = 2
  end

  enum FDAP : Int32
    FDAP_BOTTOM = 0
    FDAP_TOP = 1
  end

  enum FILEOPENDIALOGOPTIONS : Int32
    FOS_OVERWRITEPROMPT = 2
    FOS_STRICTFILETYPES = 4
    FOS_NOCHANGEDIR = 8
    FOS_PICKFOLDERS = 32
    FOS_FORCEFILESYSTEM = 64
    FOS_ALLNONSTORAGEITEMS = 128
    FOS_NOVALIDATE = 256
    FOS_ALLOWMULTISELECT = 512
    FOS_PATHMUSTEXIST = 2048
    FOS_FILEMUSTEXIST = 4096
    FOS_CREATEPROMPT = 8192
    FOS_SHAREAWARE = 16384
    FOS_NOREADONLYRETURN = 32768
    FOS_NOTESTFILECREATE = 65536
    FOS_HIDEMRUPLACES = 131072
    FOS_HIDEPINNEDPLACES = 262144
    FOS_NODEREFERENCELINKS = 1048576
    FOS_OKBUTTONNEEDSINTERACTION = 2097152
    FOS_DONTADDTORECENT = 33554432
    FOS_FORCESHOWHIDDEN = 268435456
    FOS_DEFAULTNOMINIMODE = 536870912
    FOS_FORCEPREVIEWPANEON = 1073741824
    FOS_SUPPORTSTREAMABLEITEMS = -2147483648
  end

  enum CDCONTROLSTATEF : Int32
    CDCS_INACTIVE = 0
    CDCS_ENABLED = 1
    CDCS_VISIBLE = 2
    CDCS_ENABLEDVISIBLE = 3
  end

  enum ASSOCIATIONLEVEL : Int32
    AL_MACHINE = 0
    AL_EFFECTIVE = 1
    AL_USER = 2
  end

  enum ASSOCIATIONTYPE : Int32
    AT_FILEEXTENSION = 0
    AT_URLPROTOCOL = 1
    AT_STARTMENUCLIENT = 2
    AT_MIMETYPE = 3
  end

  enum BROWSERFRAMEOPTIONS : Int32
    BFO_NONE = 0
    BFO_BROWSER_PERSIST_SETTINGS = 1
    BFO_RENAME_FOLDER_OPTIONS_TOINTERNET = 2
    BFO_BOTH_OPTIONS = 4
    BIF_PREFER_INTERNET_SHORTCUT = 8
    BFO_BROWSE_NO_IN_NEW_PROCESS = 16
    BFO_ENABLE_HYPERLINK_TRACKING = 32
    BFO_USE_IE_OFFLINE_SUPPORT = 64
    BFO_SUBSTITUE_INTERNET_START_PAGE = 128
    BFO_USE_IE_LOGOBANDING = 256
    BFO_ADD_IE_TOCAPTIONBAR = 512
    BFO_USE_DIALUP_REF = 1024
    BFO_USE_IE_TOOLBAR = 2048
    BFO_NO_PARENT_FOLDER_SUPPORT = 4096
    BFO_NO_REOPEN_NEXT_RESTART = 8192
    BFO_GO_HOME_PAGE = 16384
    BFO_PREFER_IEPROCESS = 32768
    BFO_SHOW_NAVIGATION_CANCELLED = 65536
    BFO_USE_IE_STATUSBAR = 131072
    BFO_QUERY_ALL = -1
  end

  enum NWMF : Int32
    NWMF_UNLOADING = 1
    NWMF_USERINITED = 2
    NWMF_FIRST = 4
    NWMF_OVERRIDEKEY = 8
    NWMF_SHOWHELP = 16
    NWMF_HTMLDIALOG = 32
    NWMF_FROMDIALOGCHILD = 64
    NWMF_USERREQUESTED = 128
    NWMF_USERALLOWED = 256
    NWMF_FORCEWINDOW = 65536
    NWMF_FORCETAB = 131072
    NWMF_SUGGESTWINDOW = 262144
    NWMF_SUGGESTTAB = 524288
    NWMF_INACTIVETAB = 1048576
  end

  enum ATTACHMENT_PROMPT : Int32
    ATTACHMENT_PROMPT_NONE = 0
    ATTACHMENT_PROMPT_SAVE = 1
    ATTACHMENT_PROMPT_EXEC = 2
    ATTACHMENT_PROMPT_EXEC_OR_SAVE = 3
  end

  enum ATTACHMENT_ACTION : Int32
    ATTACHMENT_ACTION_CANCEL = 0
    ATTACHMENT_ACTION_SAVE = 1
    ATTACHMENT_ACTION_EXEC = 2
  end

  enum SMINFOMASK : Int32
    SMIM_TYPE = 1
    SMIM_FLAGS = 2
    SMIM_ICON = 4
  end

  enum SMINFOTYPE : Int32
    SMIT_SEPARATOR = 1
    SMIT_STRING = 2
  end

  enum SMINFOFLAGS : Int32
    SMIF_ICON = 1
    SMIF_ACCELERATOR = 2
    SMIF_DROPTARGET = 4
    SMIF_SUBMENU = 8
    SMIF_CHECKED = 32
    SMIF_DROPCASCADE = 64
    SMIF_HIDDEN = 128
    SMIF_DISABLED = 256
    SMIF_TRACKPOPUP = 512
    SMIF_DEMOTED = 1024
    SMIF_ALTSTATE = 2048
    SMIF_DRAGNDROP = 4096
    SMIF_NEW = 8192
  end

  enum KF_CATEGORY : Int32
    KF_CATEGORY_VIRTUAL = 1
    KF_CATEGORY_FIXED = 2
    KF_CATEGORY_COMMON = 3
    KF_CATEGORY_PERUSER = 4
  end

  enum KF_DEFINITION_FLAGS : Int32
    KFDF_LOCAL_REDIRECT_ONLY = 2
    KFDF_ROAMABLE = 4
    KFDF_PRECREATE = 8
    KFDF_STREAM = 16
    KFDF_PUBLISHEXPANDEDPATH = 32
    KFDF_NO_REDIRECT_UI = 64
  end

  enum KF_REDIRECT_FLAGS : Int32
    KF_REDIRECT_USER_EXCLUSIVE = 1
    KF_REDIRECT_COPY_SOURCE_DACL = 2
    KF_REDIRECT_OWNER_USER = 4
    KF_REDIRECT_SET_OWNER_EXPLICIT = 8
    KF_REDIRECT_CHECK_ONLY = 16
    KF_REDIRECT_WITH_UI = 32
    KF_REDIRECT_UNPIN = 64
    KF_REDIRECT_PIN = 128
    KF_REDIRECT_COPY_CONTENTS = 512
    KF_REDIRECT_DEL_SOURCE_CONTENTS = 1024
    KF_REDIRECT_EXCLUDE_ALL_KNOWN_SUBFOLDERS = 2048
  end

  enum KF_REDIRECTION_CAPABILITIES : Int32
    KF_REDIRECTION_CAPABILITIES_ALLOW_ALL = 255
    KF_REDIRECTION_CAPABILITIES_REDIRECTABLE = 1
    KF_REDIRECTION_CAPABILITIES_DENY_ALL = 1048320
    KF_REDIRECTION_CAPABILITIES_DENY_POLICY_REDIRECTED = 256
    KF_REDIRECTION_CAPABILITIES_DENY_POLICY = 512
    KF_REDIRECTION_CAPABILITIES_DENY_PERMISSIONS = 1024
  end

  enum FFFP_MODE : Int32
    FFFP_EXACTMATCH = 0
    FFFP_NEARESTPARENTMATCH = 1
  end

  enum SHARE_ROLE : Int32
    SHARE_ROLE_INVALID = -1
    SHARE_ROLE_READER = 0
    SHARE_ROLE_CONTRIBUTOR = 1
    SHARE_ROLE_CO_OWNER = 2
    SHARE_ROLE_OWNER = 3
    SHARE_ROLE_CUSTOM = 4
    SHARE_ROLE_MIXED = 5
  end

  enum DEF_SHARE_ID : Int32
    DEFSHAREID_USERS = 1
    DEFSHAREID_PUBLIC = 2
  end

  enum NMCII_FLAGS : Int32
    NMCII_NONE = 0
    NMCII_ITEMS = 1
    NMCII_FOLDERS = 2
  end

  enum NMCSAEI_FLAGS : Int32
    NMCSAEI_SELECT = 0
    NMCSAEI_EDIT = 1
  end

  enum NSTCSTYLE : Int32
    NSTCS_HASEXPANDOS = 1
    NSTCS_HASLINES = 2
    NSTCS_SINGLECLICKEXPAND = 4
    NSTCS_FULLROWSELECT = 8
    NSTCS_SPRINGEXPAND = 16
    NSTCS_HORIZONTALSCROLL = 32
    NSTCS_ROOTHASEXPANDO = 64
    NSTCS_SHOWSELECTIONALWAYS = 128
    NSTCS_NOINFOTIP = 512
    NSTCS_EVENHEIGHT = 1024
    NSTCS_NOREPLACEOPEN = 2048
    NSTCS_DISABLEDRAGDROP = 4096
    NSTCS_NOORDERSTREAM = 8192
    NSTCS_RICHTOOLTIP = 16384
    NSTCS_BORDER = 32768
    NSTCS_NOEDITLABELS = 65536
    NSTCS_TABSTOP = 131072
    NSTCS_FAVORITESMODE = 524288
    NSTCS_AUTOHSCROLL = 1048576
    NSTCS_FADEINOUTEXPANDOS = 2097152
    NSTCS_EMPTYTEXT = 4194304
    NSTCS_CHECKBOXES = 8388608
    NSTCS_PARTIALCHECKBOXES = 16777216
    NSTCS_EXCLUSIONCHECKBOXES = 33554432
    NSTCS_DIMMEDCHECKBOXES = 67108864
    NSTCS_NOINDENTCHECKS = 134217728
    NSTCS_ALLOWJUNCTIONS = 268435456
    NSTCS_SHOWTABSBUTTON = 536870912
    NSTCS_SHOWDELETEBUTTON = 1073741824
    NSTCS_SHOWREFRESHBUTTON = -2147483648
  end

  enum NSTCROOTSTYLE : Int32
    NSTCRS_VISIBLE = 0
    NSTCRS_HIDDEN = 1
    NSTCRS_EXPANDED = 2
  end

  enum NSTCITEMSTATE : Int32
    NSTCIS_NONE = 0
    NSTCIS_SELECTED = 1
    NSTCIS_EXPANDED = 2
    NSTCIS_BOLD = 4
    NSTCIS_DISABLED = 8
    NSTCIS_SELECTEDNOEXPAND = 16
  end

  enum NSTCGNI : Int32
    NSTCGNI_NEXT = 0
    NSTCGNI_NEXTVISIBLE = 1
    NSTCGNI_PREV = 2
    NSTCGNI_PREVVISIBLE = 3
    NSTCGNI_PARENT = 4
    NSTCGNI_CHILD = 5
    NSTCGNI_FIRSTVISIBLE = 6
    NSTCGNI_LASTVISIBLE = 7
  end

  enum NSTCFOLDERCAPABILITIES : Int32
    NSTCFC_NONE = 0
    NSTCFC_PINNEDITEMFILTERING = 1
    NSTCFC_DELAY_REGISTER_NOTIFY = 2
  end

  enum EXPLORERPANESTATE : Int32
    EPS_DONTCARE = 0
    EPS_DEFAULT_ON = 1
    EPS_DEFAULT_OFF = 2
    EPS_STATEMASK = 65535
    EPS_INITIALSTATE = 65536
    EPS_FORCE = 131072
  end

  enum EXPCMDSTATE : Int32
    ECS_ENABLED = 0
    ECS_DISABLED = 1
    ECS_HIDDEN = 2
    ECS_CHECKBOX = 4
    ECS_CHECKED = 8
    ECS_RADIOCHECK = 16
  end

  enum EXPCMDFLAGS : Int32
    ECF_DEFAULT = 0
    ECF_HASSUBCOMMANDS = 1
    ECF_HASSPLITBUTTON = 2
    ECF_HIDELABEL = 4
    ECF_ISSEPARATOR = 8
    ECF_HASLUASHIELD = 16
    ECF_SEPARATORBEFORE = 32
    ECF_SEPARATORAFTER = 64
    ECF_ISDROPDOWN = 128
    ECF_TOGGLEABLE = 256
    ECF_AUTOMENUICONS = 512
  end

  enum CPVIEW : Int32
    CPVIEW_CLASSIC = 0
    CPVIEW_ALLITEMS = 0
    CPVIEW_CATEGORY = 1
    CPVIEW_HOME = 1
  end

  enum KNOWNDESTCATEGORY : Int32
    KDC_FREQUENT = 1
    KDC_RECENT = 2
  end

  enum APPDOCLISTTYPE : Int32
    ADLT_RECENT = 0
    ADLT_FREQUENT = 1
  end

  enum DESKTOP_SLIDESHOW_OPTIONS : Int32
    DSO_SHUFFLEIMAGES = 1
  end

  enum DESKTOP_SLIDESHOW_STATE : Int32
    DSS_ENABLED = 1
    DSS_SLIDESHOW = 2
    DSS_DISABLED_BY_REMOTE_SESSION = 4
  end

  enum DESKTOP_SLIDESHOW_DIRECTION : Int32
    DSD_FORWARD = 0
    DSD_BACKWARD = 1
  end

  enum DESKTOP_WALLPAPER_POSITION : Int32
    DWPOS_CENTER = 0
    DWPOS_TILE = 1
    DWPOS_STRETCH = 2
    DWPOS_FIT = 3
    DWPOS_FILL = 4
    DWPOS_SPAN = 5
  end

  enum HOMEGROUPSHARINGCHOICES : Int32
    HGSC_NONE = 0
    HGSC_MUSICLIBRARY = 1
    HGSC_PICTURESLIBRARY = 2
    HGSC_VIDEOSLIBRARY = 4
    HGSC_DOCUMENTSLIBRARY = 8
    HGSC_PRINTERS = 16
  end

  enum LIBRARYFOLDERFILTER : Int32
    LFF_FORCEFILESYSTEM = 1
    LFF_STORAGEITEMS = 2
    LFF_ALLITEMS = 3
  end

  enum LIBRARYOPTIONFLAGS : Int32
    LOF_DEFAULT = 0
    LOF_PINNEDTONAVPANE = 1
    LOF_MASK_ALL = 1
  end

  enum DEFAULTSAVEFOLDERTYPE : Int32
    DSFT_DETECT = 1
    DSFT_PRIVATE = 2
    DSFT_PUBLIC = 3
  end

  enum LIBRARYSAVEFLAGS : Int32
    LSF_FAILIFTHERE = 0
    LSF_OVERRIDEEXISTING = 1
    LSF_MAKEUNIQUENAME = 2
  end

  enum DEFAULT_FOLDER_MENU_RESTRICTIONS : Int32
    DFMR_DEFAULT = 0
    DFMR_NO_STATIC_VERBS = 8
    DFMR_STATIC_VERBS_ONLY = 16
    DFMR_NO_RESOURCE_VERBS = 32
    DFMR_OPTIN_HANDLERS_ONLY = 64
    DFMR_RESOURCE_AND_FOLDER_VERBS_ONLY = 128
    DFMR_USE_SPECIFIED_HANDLERS = 256
    DFMR_USE_SPECIFIED_VERBS = 512
    DFMR_NO_ASYNC_VERBS = 1024
    DFMR_NO_NATIVECPU_VERBS = 2048
    DFMR_NO_NONWOW_VERBS = 4096
  end

  enum ACTIVATEOPTIONS : Int32
    AO_NONE = 0
    AO_DESIGNMODE = 1
    AO_NOERRORUI = 2
    AO_NOSPLASHSCREEN = 4
    AO_PRELAUNCH = 33554432
  end

  enum LIBRARYMANAGEDIALOGOPTIONS : Int32
    LMD_DEFAULT = 0
    LMD_ALLOWUNINDEXABLENETWORKLOCATIONS = 1
  end

  enum AHTYPE : Int32
    AHTYPE_UNDEFINED = 0
    AHTYPE_USER_APPLICATION = 8
    AHTYPE_ANY_APPLICATION = 16
    AHTYPE_MACHINEDEFAULT = 32
    AHTYPE_PROGID = 64
    AHTYPE_APPLICATION = 128
    AHTYPE_CLASS_APPLICATION = 256
    AHTYPE_ANY_PROGID = 512
  end

  enum ASSOC_FILTER : Int32
    ASSOC_FILTER_NONE = 0
    ASSOC_FILTER_RECOMMENDED = 1
  end

  enum MONITOR_APP_VISIBILITY : Int32
    MAV_UNKNOWN = 0
    MAV_NO_APP_VISIBLE = 1
    MAV_APP_VISIBLE = 2
  end

  enum PACKAGE_EXECUTION_STATE : Int32
    PES_UNKNOWN = 0
    PES_RUNNING = 1
    PES_SUSPENDING = 2
    PES_SUSPENDED = 3
    PES_TERMINATED = 4
  end

  enum AHE_TYPE : Int32
    AHE_DESKTOP = 0
    AHE_IMMERSIVE = 1
  end

  enum EC_HOST_UI_MODE : Int32
    ECHUIM_DESKTOP = 0
    ECHUIM_IMMERSIVE = 1
    ECHUIM_SYSTEM_LAUNCHER = 2
  end

  enum APPLICATION_VIEW_STATE : Int32
    AVS_FULLSCREEN_LANDSCAPE = 0
    AVS_FILLED = 1
    AVS_SNAPPED = 2
    AVS_FULLSCREEN_PORTRAIT = 3
  end

  enum EDGE_GESTURE_KIND : Int32
    EGK_TOUCH = 0
    EGK_KEYBOARD = 1
    EGK_MOUSE = 2
  end

  enum NATIVE_DISPLAY_ORIENTATION : Int32
    NDO_LANDSCAPE = 0
    NDO_PORTRAIT = 1
  end

  enum APPLICATION_VIEW_ORIENTATION : Int32
    AVO_LANDSCAPE = 0
    AVO_PORTRAIT = 1
  end

  enum ADJACENT_DISPLAY_EDGES : Int32
    ADE_NONE = 0
    ADE_LEFT = 1
    ADE_RIGHT = 2
  end

  enum APPLICATION_VIEW_MIN_WIDTH : Int32
    AVMW_DEFAULT = 0
    AVMW_320 = 1
    AVMW_500 = 2
  end

  enum APPLICATION_VIEW_SIZE_PREFERENCE : Int32
    AVSP_DEFAULT = 0
    AVSP_USE_LESS = 1
    AVSP_USE_HALF = 2
    AVSP_USE_MORE = 3
    AVSP_USE_MINIMUM = 4
    AVSP_USE_NONE = 5
    AVSP_CUSTOM = 6
  end

  enum FLYOUT_PLACEMENT : Int32
    FP_DEFAULT = 0
    FP_ABOVE = 1
    FP_BELOW = 2
    FP_LEFT = 3
    FP_RIGHT = 4
  end

  enum BANNER_NOTIFICATION_EVENT : Int32
    BNE_Rendered = 0
    BNE_Hovered = 1
    BNE_Closed = 2
    BNE_Dismissed = 3
    BNE_Button1Clicked = 4
    BNE_Button2Clicked = 5
  end

  enum SORT_ORDER_TYPE : Int32
    SOT_DEFAULT = 0
    SOT_IGNORE_FOLDERNESS = 1
  end

  enum FOLDERVIEWOPTIONS : Int32
    FVO_DEFAULT = 0
    FVO_VISTALAYOUT = 1
    FVO_CUSTOMPOSITION = 2
    FVO_CUSTOMORDERING = 4
    FVO_SUPPORTHYPERLINKS = 8
    FVO_NOANIMATIONS = 16
    FVO_NOSCROLLTIPS = 32
  end

  enum SV3CVW3_FLAGS : Int32
    SV3CVW3_DEFAULT = 0
    SV3CVW3_NONINTERACTIVE = 1
    SV3CVW3_FORCEVIEWMODE = 2
    SV3CVW3_FORCEFOLDERFLAGS = 4
  end

  enum VPWATERMARKFLAGS : Int32
    VPWF_DEFAULT = 0
    VPWF_ALPHABLEND = 1
  end

  enum VPCOLORFLAGS : Int32
    VPCF_TEXT = 1
    VPCF_BACKGROUND = 2
    VPCF_SORTCOLUMN = 3
    VPCF_SUBTEXT = 4
    VPCF_TEXTBACKGROUND = 5
  end

  enum DSH_FLAGS : Int32
    DSH_ALLOWDROPDESCRIPTIONTEXT = 1
  end

  enum CDBURNINGEXTENSIONRET : Int32
    CDBE_RET_DEFAULT = 0
    CDBE_RET_DONTRUNOTHEREXTS = 1
    CDBE_RET_STOPWIZARD = 2
  end

  enum CDBE_ACTIONS : Int32
    CDBE_TYPE_MUSIC = 1
    CDBE_TYPE_DATA = 2
    CDBE_TYPE_ALL = -1
  end

  enum NSTCSTYLE2 : Int32
    NSTCS2_DEFAULT = 0
    NSTCS2_INTERRUPTNOTIFICATIONS = 1
    NSTCS2_SHOWNULLSPACEMENU = 2
    NSTCS2_DISPLAYPADDING = 4
    NSTCS2_DISPLAYPINNEDONLY = 8
    NTSCS2_NOSINGLETONAUTOEXPAND = 16
    NTSCS2_NEVERINSERTNONENUMERATED = 32
  end

  enum NSTCEHITTEST : Int32
    NSTCEHT_NOWHERE = 1
    NSTCEHT_ONITEMICON = 2
    NSTCEHT_ONITEMLABEL = 4
    NSTCEHT_ONITEMINDENT = 8
    NSTCEHT_ONITEMBUTTON = 16
    NSTCEHT_ONITEMRIGHT = 32
    NSTCEHT_ONITEMSTATEICON = 64
    NSTCEHT_ONITEM = 70
    NSTCEHT_ONITEMTABBUTTON = 4096
  end

  enum NSTCECLICKTYPE : Int32
    NSTCECT_LBUTTON = 1
    NSTCECT_MBUTTON = 2
    NSTCECT_RBUTTON = 3
    NSTCECT_BUTTON = 3
    NSTCECT_DBLCLICK = 4
  end

  enum UNDOCK_REASON : Int32
    UR_RESOLUTION_CHANGE = 0
    UR_MONITOR_DISCONNECT = 1
  end

  enum CommandStateChangeConstants : Int32
    CSC_UPDATECOMMANDS = -1
    CSC_NAVIGATEFORWARD = 1
    CSC_NAVIGATEBACK = 2
  end

  enum SecureLockIconConstants : Int32
    Securelockiconunsecure = 0
    Securelockiconmixed = 1
    Securelockiconsecureunknownbits = 2
    Securelockiconsecure40bit = 3
    Securelockiconsecure56bit = 4
    Securelockiconsecurefortezza = 5
    Securelockiconsecure128bit = 6
  end

  enum NewProcessCauseConstants : Int32
    ProtectedModeRedirect = 1
  end

  enum ShellWindowTypeConstants : Int32
    SWC_EXPLORER = 0
    SWC_BROWSER = 1
    SWC_3RDPARTY = 2
    SWC_CALLBACK = 4
    SWC_DESKTOP = 8
  end

  enum ShellWindowFindWindowOptions : Int32
    SWFO_NEEDDISPATCH = 1
    SWFO_INCLUDEPENDING = 2
    SWFO_COOKIEPASSED = 4
  end

  enum BrowserNavConstants : Int32
    Navopeninnewwindow = 1
    Navnohistory = 2
    Navnoreadfromcache = 4
    Navnowritetocache = 8
    Navallowautosearch = 16
    Navbrowserbar = 32
    Navhyperlink = 64
    Navenforcerestricted = 128
    Navnewwindowsmanaged = 256
    Navuntrustedfordownload = 512
    Navtrustedforactivex = 1024
    Navopeninnewtab = 2048
    Navopeninbackgroundtab = 4096
    Navkeepwordwheeltext = 8192
    Navvirtualtab = 16384
    Navblockredirectsxdomain = 32768
    Navopennewforegroundtab = 65536
    Navtravellogscreenshot = 131072
    Navdeferunload = 262144
    Navspeculative = 524288
    Navsuggestnewwindow = 1048576
    Navsuggestnewtab = 2097152
    Navreserved1 = 4194304
    Navhomepagenavigate = 8388608
    Navrefresh = 16777216
    Navhostnavigation = 33554432
    Navreserved2 = 67108864
    Navreserved3 = 134217728
    Navreserved4 = 268435456
    Navreserved5 = 536870912
    Navreserved6 = 1073741824
    Navreserved7 = -2147483648
  end

  enum RefreshConstants : Int32
    REFRESH_NORMAL = 0
    REFRESH_IFEXPIRED = 1
    REFRESH_COMPLETELY = 3
  end

  enum OfflineFolderStatus : Int32
    OFS_INACTIVE = -1
    OFS_ONLINE = 0
    OFS_OFFLINE = 1
    OFS_SERVERBACK = 2
    OFS_DIRTYCACHE = 3
  end

  enum ShellFolderViewOptions : Int32
    SFVVO_SHOWALLOBJECTS = 1
    SFVVO_SHOWEXTENSIONS = 2
    SFVVO_SHOWCOMPCOLOR = 8
    SFVVO_SHOWSYSFILES = 32
    SFVVO_WIN95CLASSIC = 64
    SFVVO_DOUBLECLICKINWEBVIEW = 128
    SFVVO_DESKTOPHTML = 512
  end

  enum ShellSpecialFolderConstants : Int32
    Ssfdesktop = 0
    Ssfprograms = 2
    Ssfcontrols = 3
    Ssfprinters = 4
    Ssfpersonal = 5
    Ssffavorites = 6
    Ssfstartup = 7
    Ssfrecent = 8
    Ssfsendto = 9
    Ssfbitbucket = 10
    Ssfstartmenu = 11
    Ssfdesktopdirectory = 16
    Ssfdrives = 17
    Ssfnetwork = 18
    Ssfnethood = 19
    Ssffonts = 20
    Ssftemplates = 21
    Ssfcommonstartmenu = 22
    Ssfcommonprograms = 23
    Ssfcommonstartup = 24
    Ssfcommondesktopdir = 25
    Ssfappdata = 26
    Ssfprinthood = 27
    Ssflocalappdata = 28
    Ssfaltstartup = 29
    Ssfcommonaltstartup = 30
    Ssfcommonfavorites = 31
    Ssfinternetcache = 32
    Ssfcookies = 33
    Ssfhistory = 34
    Ssfcommonappdata = 35
    Ssfwindows = 36
    Ssfsystem = 37
    Ssfprogramfiles = 38
    Ssfmypictures = 39
    Ssfprofile = 40
    Ssfsystemx86 = 41
    Ssfprogramfilesx86 = 48
  end

  enum AUTOCOMPLETEOPTIONS : Int32
    ACO_NONE = 0
    ACO_AUTOSUGGEST = 1
    ACO_AUTOAPPEND = 2
    ACO_SEARCH = 4
    ACO_FILTERPREFIXES = 8
    ACO_USETAB = 16
    ACO_UPDOWNKEYDROPSLIST = 32
    ACO_RTLREADING = 64
    ACO_WORD_FILTER = 128
    ACO_NOPREFIXFILTERING = 256
  end

  enum ACENUMOPTION : Int32
    ACEO_NONE = 0
    ACEO_MOSTRECENTFIRST = 1
    ACEO_FIRSTUNUSED = 65536
  end

  enum SHELL_LINK_DATA_FLAGS : Int32
    SLDF_DEFAULT = 0
    SLDF_HAS_ID_LIST = 1
    SLDF_HAS_LINK_INFO = 2
    SLDF_HAS_NAME = 4
    SLDF_HAS_RELPATH = 8
    SLDF_HAS_WORKINGDIR = 16
    SLDF_HAS_ARGS = 32
    SLDF_HAS_ICONLOCATION = 64
    SLDF_UNICODE = 128
    SLDF_FORCE_NO_LINKINFO = 256
    SLDF_HAS_EXP_SZ = 512
    SLDF_RUN_IN_SEPARATE = 1024
    SLDF_HAS_DARWINID = 4096
    SLDF_RUNAS_USER = 8192
    SLDF_HAS_EXP_ICON_SZ = 16384
    SLDF_NO_PIDL_ALIAS = 32768
    SLDF_FORCE_UNCNAME = 65536
    SLDF_RUN_WITH_SHIMLAYER = 131072
    SLDF_FORCE_NO_LINKTRACK = 262144
    SLDF_ENABLE_TARGET_METADATA = 524288
    SLDF_DISABLE_LINK_PATH_TRACKING = 1048576
    SLDF_DISABLE_KNOWNFOLDER_RELATIVE_TRACKING = 2097152
    SLDF_NO_KF_ALIAS = 4194304
    SLDF_ALLOW_LINK_TO_LINK = 8388608
    SLDF_UNALIAS_ON_SAVE = 16777216
    SLDF_PREFER_ENVIRONMENT_PATH = 33554432
    SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET = 67108864
    SLDF_PERSIST_VOLUME_ID_RELATIVE = 134217728
    SLDF_VALID = 268433407
    SLDF_RESERVED = -2147483648
  end

  enum SHGFP_TYPE : Int32
    SHGFP_TYPE_CURRENT = 0
    SHGFP_TYPE_DEFAULT = 1
  end

  enum KNOWN_FOLDER_FLAG : Int32
    KF_FLAG_DEFAULT = 0
    KF_FLAG_FORCE_APP_DATA_REDIRECTION = 524288
    KF_FLAG_RETURN_FILTER_REDIRECTION_TARGET = 262144
    KF_FLAG_FORCE_PACKAGE_REDIRECTION = 131072
    KF_FLAG_NO_PACKAGE_REDIRECTION = 65536
    KF_FLAG_FORCE_APPCONTAINER_REDIRECTION = 131072
    KF_FLAG_NO_APPCONTAINER_REDIRECTION = 65536
    KF_FLAG_CREATE = 32768
    KF_FLAG_DONT_VERIFY = 16384
    KF_FLAG_DONT_UNEXPAND = 8192
    KF_FLAG_NO_ALIAS = 4096
    KF_FLAG_INIT = 2048
    KF_FLAG_DEFAULT_PATH = 1024
    KF_FLAG_NOT_PARENT_RELATIVE = 512
    KF_FLAG_SIMPLE_IDLIST = 256
    KF_FLAG_ALIAS_ONLY = -2147483648
  end

  enum AUTOCOMPLETELISTOPTIONS : Int32
    ACLO_NONE = 0
    ACLO_CURRENTDIR = 1
    ACLO_MYCOMPUTER = 2
    ACLO_DESKTOP = 4
    ACLO_FAVORITES = 8
    ACLO_FILESYSONLY = 16
    ACLO_FILESYSDIRS = 32
    ACLO_VIRTUALNAMESPACE = 64
  end

  enum FD_FLAGS : Int32
    FD_CLSID = 1
    FD_SIZEPOINT = 2
    FD_ATTRIBUTES = 4
    FD_CREATETIME = 8
    FD_ACCESSTIME = 16
    FD_WRITESTIME = 32
    FD_FILESIZE = 64
    FD_PROGRESSUI = 16384
    FD_LINKUI = 32768
    FD_UNICODE = -2147483648
  end

  enum DROPIMAGETYPE : Int32
    DROPIMAGE_INVALID = -1
    DROPIMAGE_NONE = 0
    DROPIMAGE_COPY = 1
    DROPIMAGE_MOVE = 2
    DROPIMAGE_LINK = 4
    DROPIMAGE_LABEL = 6
    DROPIMAGE_WARNING = 7
    DROPIMAGE_NOIMAGE = 8
  end

  enum SHARD : Int32
    SHARD_PIDL = 1
    SHARD_PATHA = 2
    SHARD_PATHW = 3
    SHARD_APPIDINFO = 4
    SHARD_APPIDINFOIDLIST = 5
    SHARD_LINK = 6
    SHARD_APPIDINFOLINK = 7
    SHARD_SHELLITEM = 8
  end

  enum SCNRT_STATUS : Int32
    SCNRT_ENABLE = 0
    SCNRT_DISABLE = 1
  end

  enum RESTRICTIONS : Int32
    REST_NONE = 0
    REST_NORUN = 1
    REST_NOCLOSE = 2
    REST_NOSAVESET = 4
    REST_NOFILEMENU = 8
    REST_NOSETFOLDERS = 16
    REST_NOSETTASKBAR = 32
    REST_NODESKTOP = 64
    REST_NOFIND = 128
    REST_NODRIVES = 256
    REST_NODRIVEAUTORUN = 512
    REST_NODRIVETYPEAUTORUN = 1024
    REST_NONETHOOD = 2048
    REST_STARTBANNER = 4096
    REST_RESTRICTRUN = 8192
    REST_NOPRINTERTABS = 16384
    REST_NOPRINTERDELETE = 32768
    REST_NOPRINTERADD = 65536
    REST_NOSTARTMENUSUBFOLDERS = 131072
    REST_MYDOCSONNET = 262144
    REST_NOEXITTODOS = 524288
    REST_ENFORCESHELLEXTSECURITY = 1048576
    REST_LINKRESOLVEIGNORELINKINFO = 2097152
    REST_NOCOMMONGROUPS = 4194304
    REST_SEPARATEDESKTOPPROCESS = 8388608
    REST_NOWEB = 16777216
    REST_NOTRAYCONTEXTMENU = 33554432
    REST_NOVIEWCONTEXTMENU = 67108864
    REST_NONETCONNECTDISCONNECT = 134217728
    REST_STARTMENULOGOFF = 268435456
    REST_NOSETTINGSASSIST = 536870912
    REST_NOINTERNETICON = 1073741825
    REST_NORECENTDOCSHISTORY = 1073741826
    REST_NORECENTDOCSMENU = 1073741827
    REST_NOACTIVEDESKTOP = 1073741828
    REST_NOACTIVEDESKTOPCHANGES = 1073741829
    REST_NOFAVORITESMENU = 1073741830
    REST_CLEARRECENTDOCSONEXIT = 1073741831
    REST_CLASSICSHELL = 1073741832
    REST_NOCUSTOMIZEWEBVIEW = 1073741833
    REST_NOHTMLWALLPAPER = 1073741840
    REST_NOCHANGINGWALLPAPER = 1073741841
    REST_NODESKCOMP = 1073741842
    REST_NOADDDESKCOMP = 1073741843
    REST_NODELDESKCOMP = 1073741844
    REST_NOCLOSEDESKCOMP = 1073741845
    REST_NOCLOSE_DRAGDROPBAND = 1073741846
    REST_NOMOVINGBAND = 1073741847
    REST_NOEDITDESKCOMP = 1073741848
    REST_NORESOLVESEARCH = 1073741849
    REST_NORESOLVETRACK = 1073741850
    REST_FORCECOPYACLWITHFILE = 1073741851
    REST_NOFORGETSOFTWAREUPDATE = 1073741853
    REST_NOSETACTIVEDESKTOP = 1073741854
    REST_NOUPDATEWINDOWS = 1073741855
    REST_NOCHANGESTARMENU = 1073741856
    REST_NOFOLDEROPTIONS = 1073741857
    REST_HASFINDCOMPUTERS = 1073741858
    REST_INTELLIMENUS = 1073741859
    REST_RUNDLGMEMCHECKBOX = 1073741860
    REST_ARP_ShowPostSetup = 1073741861
    REST_NOCSC = 1073741862
    REST_NOCONTROLPANEL = 1073741863
    REST_ENUMWORKGROUP = 1073741864
    REST_ARP_NOARP = 1073741865
    REST_ARP_NOREMOVEPAGE = 1073741866
    REST_ARP_NOADDPAGE = 1073741867
    REST_ARP_NOWINSETUPPAGE = 1073741868
    REST_GREYMSIADS = 1073741869
    REST_NOCHANGEMAPPEDDRIVELABEL = 1073741870
    REST_NOCHANGEMAPPEDDRIVECOMMENT = 1073741871
    REST_MaxRecentDocs = 1073741872
    REST_NONETWORKCONNECTIONS = 1073741873
    REST_FORCESTARTMENULOGOFF = 1073741874
    REST_NOWEBVIEW = 1073741875
    REST_NOCUSTOMIZETHISFOLDER = 1073741876
    REST_NOENCRYPTION = 1073741877
    REST_DONTSHOWSUPERHIDDEN = 1073741879
    REST_NOSHELLSEARCHBUTTON = 1073741880
    REST_NOHARDWARETAB = 1073741881
    REST_NORUNASINSTALLPROMPT = 1073741882
    REST_PROMPTRUNASINSTALLNETPATH = 1073741883
    REST_NOMANAGEMYCOMPUTERVERB = 1073741884
    REST_DISALLOWRUN = 1073741886
    REST_NOWELCOMESCREEN = 1073741887
    REST_RESTRICTCPL = 1073741888
    REST_DISALLOWCPL = 1073741889
    REST_NOSMBALLOONTIP = 1073741890
    REST_NOSMHELP = 1073741891
    REST_NOWINKEYS = 1073741892
    REST_NOENCRYPTONMOVE = 1073741893
    REST_NOLOCALMACHINERUN = 1073741894
    REST_NOCURRENTUSERRUN = 1073741895
    REST_NOLOCALMACHINERUNONCE = 1073741896
    REST_NOCURRENTUSERRUNONCE = 1073741897
    REST_FORCEACTIVEDESKTOPON = 1073741898
    REST_NOVIEWONDRIVE = 1073741900
    REST_NONETCRAWL = 1073741901
    REST_NOSHAREDDOCUMENTS = 1073741902
    REST_NOSMMYDOCS = 1073741903
    REST_NOSMMYPICS = 1073741904
    REST_ALLOWBITBUCKDRIVES = 1073741905
    REST_NONLEGACYSHELLMODE = 1073741906
    REST_NOCONTROLPANELBARRICADE = 1073741907
    REST_NOSTARTPAGE = 1073741908
    REST_NOAUTOTRAYNOTIFY = 1073741909
    REST_NOTASKGROUPING = 1073741910
    REST_NOCDBURNING = 1073741911
    REST_MYCOMPNOPROP = 1073741912
    REST_MYDOCSNOPROP = 1073741913
    REST_NOSTARTPANEL = 1073741914
    REST_NODISPLAYAPPEARANCEPAGE = 1073741915
    REST_NOTHEMESTAB = 1073741916
    REST_NOVISUALSTYLECHOICE = 1073741917
    REST_NOSIZECHOICE = 1073741918
    REST_NOCOLORCHOICE = 1073741919
    REST_SETVISUALSTYLE = 1073741920
    REST_STARTRUNNOHOMEPATH = 1073741921
    REST_NOUSERNAMEINSTARTPANEL = 1073741922
    REST_NOMYCOMPUTERICON = 1073741923
    REST_NOSMNETWORKPLACES = 1073741924
    REST_NOSMPINNEDLIST = 1073741925
    REST_NOSMMYMUSIC = 1073741926
    REST_NOSMEJECTPC = 1073741927
    REST_NOSMMOREPROGRAMS = 1073741928
    REST_NOSMMFUPROGRAMS = 1073741929
    REST_NOTRAYITEMSDISPLAY = 1073741930
    REST_NOTOOLBARSONTASKBAR = 1073741931
    REST_NOSMCONFIGUREPROGRAMS = 1073741935
    REST_HIDECLOCK = 1073741936
    REST_NOLOWDISKSPACECHECKS = 1073741937
    REST_NOENTIRENETWORK = 1073741938
    REST_NODESKTOPCLEANUP = 1073741939
    REST_BITBUCKNUKEONDELETE = 1073741940
    REST_BITBUCKCONFIRMDELETE = 1073741941
    REST_BITBUCKNOPROP = 1073741942
    REST_NODISPBACKGROUND = 1073741943
    REST_NODISPSCREENSAVEPG = 1073741944
    REST_NODISPSETTINGSPG = 1073741945
    REST_NODISPSCREENSAVEPREVIEW = 1073741946
    REST_NODISPLAYCPL = 1073741947
    REST_HIDERUNASVERB = 1073741948
    REST_NOTHUMBNAILCACHE = 1073741949
    REST_NOSTRCMPLOGICAL = 1073741950
    REST_NOPUBLISHWIZARD = 1073741951
    REST_NOONLINEPRINTSWIZARD = 1073741952
    REST_NOWEBSERVICES = 1073741953
    REST_ALLOWUNHASHEDWEBVIEW = 1073741954
    REST_ALLOWLEGACYWEBVIEW = 1073741955
    REST_REVERTWEBVIEWSECURITY = 1073741956
    REST_INHERITCONSOLEHANDLES = 1073741958
    REST_NOREMOTERECURSIVEEVENTS = 1073741961
    REST_NOREMOTECHANGENOTIFY = 1073741969
    REST_NOENUMENTIRENETWORK = 1073741971
    REST_NOINTERNETOPENWITH = 1073741973
    REST_DONTRETRYBADNETNAME = 1073741979
    REST_ALLOWFILECLSIDJUNCTIONS = 1073741980
    REST_NOUPNPINSTALL = 1073741981
    REST_ARP_DONTGROUPPATCHES = 1073741996
    REST_ARP_NOCHOOSEPROGRAMSPAGE = 1073741997
    REST_NODISCONNECT = 1090519041
    REST_NOSECURITY = 1090519042
    REST_NOFILEASSOCIATE = 1090519043
    REST_ALLOWCOMMENTTOGGLE = 1090519044
  end

  enum OPEN_AS_INFO_FLAGS : UInt32
    OAIF_ALLOW_REGISTRATION = 1
    OAIF_REGISTER_EXT = 2
    OAIF_EXEC = 4
    OAIF_FORCE_REGISTRATION = 8
    OAIF_HIDE_REGISTRATION = 32
    OAIF_URL_PROTOCOL = 64
    OAIF_FILE_IS_URI = 128
  end

  enum IESHORTCUTFLAGS : Int32
    IESHORTCUT_NEWBROWSER = 1
    IESHORTCUT_OPENNEWTAB = 2
    IESHORTCUT_FORCENAVIGATE = 4
    IESHORTCUT_BACKGROUNDTAB = 8
  end

  enum DISPLAY_DEVICE_TYPE : Int32
    DEVICE_PRIMARY = 0
    DEVICE_IMMERSIVE = 1
  end

  enum SCALE_CHANGE_FLAGS : UInt32
    SCF_VALUE_NONE = 0
    SCF_SCALE = 1
    SCF_PHYSICAL = 2
  end

  enum SHELL_UI_COMPONENT : Int32
    SHELL_UI_COMPONENT_TASKBARS = 0
    SHELL_UI_COMPONENT_NOTIFICATIONAREA = 1
    SHELL_UI_COMPONENT_DESKBAND = 2
  end

  enum ASSOCCLASS : Int32
    ASSOCCLASS_SHELL_KEY = 0
    ASSOCCLASS_PROGID_KEY = 1
    ASSOCCLASS_PROGID_STR = 2
    ASSOCCLASS_CLSID_KEY = 3
    ASSOCCLASS_CLSID_STR = 4
    ASSOCCLASS_APP_KEY = 5
    ASSOCCLASS_APP_STR = 6
    ASSOCCLASS_SYSTEM_STR = 7
    ASSOCCLASS_FOLDER = 8
    ASSOCCLASS_STAR = 9
    ASSOCCLASS_FIXED_PROGID_STR = 10
    ASSOCCLASS_PROTOCOL_STR = 11
  end

  enum QUERY_USER_NOTIFICATION_STATE : Int32
    QUNS_NOT_PRESENT = 1
    QUNS_BUSY = 2
    QUNS_RUNNING_D3D_FULL_SCREEN = 3
    QUNS_PRESENTATION_MODE = 4
    QUNS_ACCEPTS_NOTIFICATIONS = 5
    QUNS_QUIET_TIME = 6
    QUNS_APP = 7
  end

  enum SHSTOCKICONID : Int32
    SIID_DOCNOASSOC = 0
    SIID_DOCASSOC = 1
    SIID_APPLICATION = 2
    SIID_FOLDER = 3
    SIID_FOLDEROPEN = 4
    SIID_DRIVE525 = 5
    SIID_DRIVE35 = 6
    SIID_DRIVEREMOVE = 7
    SIID_DRIVEFIXED = 8
    SIID_DRIVENET = 9
    SIID_DRIVENETDISABLED = 10
    SIID_DRIVECD = 11
    SIID_DRIVERAM = 12
    SIID_WORLD = 13
    SIID_SERVER = 15
    SIID_PRINTER = 16
    SIID_MYNETWORK = 17
    SIID_FIND = 22
    SIID_HELP = 23
    SIID_SHARE = 28
    SIID_LINK = 29
    SIID_SLOWFILE = 30
    SIID_RECYCLER = 31
    SIID_RECYCLERFULL = 32
    SIID_MEDIACDAUDIO = 40
    SIID_LOCK = 47
    SIID_AUTOLIST = 49
    SIID_PRINTERNET = 50
    SIID_SERVERSHARE = 51
    SIID_PRINTERFAX = 52
    SIID_PRINTERFAXNET = 53
    SIID_PRINTERFILE = 54
    SIID_STACK = 55
    SIID_MEDIASVCD = 56
    SIID_STUFFEDFOLDER = 57
    SIID_DRIVEUNKNOWN = 58
    SIID_DRIVEDVD = 59
    SIID_MEDIADVD = 60
    SIID_MEDIADVDRAM = 61
    SIID_MEDIADVDRW = 62
    SIID_MEDIADVDR = 63
    SIID_MEDIADVDROM = 64
    SIID_MEDIACDAUDIOPLUS = 65
    SIID_MEDIACDRW = 66
    SIID_MEDIACDR = 67
    SIID_MEDIACDBURN = 68
    SIID_MEDIABLANKCD = 69
    SIID_MEDIACDROM = 70
    SIID_AUDIOFILES = 71
    SIID_IMAGEFILES = 72
    SIID_VIDEOFILES = 73
    SIID_MIXEDFILES = 74
    SIID_FOLDERBACK = 75
    SIID_FOLDERFRONT = 76
    SIID_SHIELD = 77
    SIID_WARNING = 78
    SIID_INFO = 79
    SIID_ERROR = 80
    SIID_KEY = 81
    SIID_SOFTWARE = 82
    SIID_RENAME = 83
    SIID_DELETE = 84
    SIID_MEDIAAUDIODVD = 85
    SIID_MEDIAMOVIEDVD = 86
    SIID_MEDIAENHANCEDCD = 87
    SIID_MEDIAENHANCEDDVD = 88
    SIID_MEDIAHDDVD = 89
    SIID_MEDIABLURAY = 90
    SIID_MEDIAVCD = 91
    SIID_MEDIADVDPLUSR = 92
    SIID_MEDIADVDPLUSRW = 93
    SIID_DESKTOPPC = 94
    SIID_MOBILEPC = 95
    SIID_USERS = 96
    SIID_MEDIASMARTMEDIA = 97
    SIID_MEDIACOMPACTFLASH = 98
    SIID_DEVICECELLPHONE = 99
    SIID_DEVICECAMERA = 100
    SIID_DEVICEVIDEOCAMERA = 101
    SIID_DEVICEAUDIOPLAYER = 102
    SIID_NETWORKCONNECT = 103
    SIID_INTERNET = 104
    SIID_ZIPFILE = 105
    SIID_SETTINGS = 106
    SIID_DRIVEHDDVD = 132
    SIID_DRIVEBD = 133
    SIID_MEDIAHDDVDROM = 134
    SIID_MEDIAHDDVDR = 135
    SIID_MEDIAHDDVDRAM = 136
    SIID_MEDIABDROM = 137
    SIID_MEDIABDR = 138
    SIID_MEDIABDRE = 139
    SIID_CLUSTEREDDRIVE = 140
    SIID_MAX_ICONS = 181
  end

  enum SFBS_FLAGS : Int32
    SFBS_FLAGS_ROUND_TO_NEAREST_DISPLAYED_DIGIT = 1
    SFBS_FLAGS_TRUNCATE_UNDISPLAYED_DECIMAL_DIGITS = 2
  end

  enum URL_SCHEME : Int32
    URL_SCHEME_INVALID = -1
    URL_SCHEME_UNKNOWN = 0
    URL_SCHEME_FTP = 1
    URL_SCHEME_HTTP = 2
    URL_SCHEME_GOPHER = 3
    URL_SCHEME_MAILTO = 4
    URL_SCHEME_NEWS = 5
    URL_SCHEME_NNTP = 6
    URL_SCHEME_TELNET = 7
    URL_SCHEME_WAIS = 8
    URL_SCHEME_FILE = 9
    URL_SCHEME_MK = 10
    URL_SCHEME_HTTPS = 11
    URL_SCHEME_SHELL = 12
    URL_SCHEME_SNEWS = 13
    URL_SCHEME_LOCAL = 14
    URL_SCHEME_JAVASCRIPT = 15
    URL_SCHEME_VBSCRIPT = 16
    URL_SCHEME_ABOUT = 17
    URL_SCHEME_RES = 18
    URL_SCHEME_MSSHELLROOTED = 19
    URL_SCHEME_MSSHELLIDLIST = 20
    URL_SCHEME_MSHELP = 21
    URL_SCHEME_MSSHELLDEVICE = 22
    URL_SCHEME_WILDCARD = 23
    URL_SCHEME_SEARCH_MS = 24
    URL_SCHEME_SEARCH = 25
    URL_SCHEME_KNOWNFOLDER = 26
    URL_SCHEME_MAXVALUE = 27
  end

  enum URL_PART : Int32
    URL_PART_NONE = 0
    URL_PART_SCHEME = 1
    URL_PART_HOSTNAME = 2
    URL_PART_USERNAME = 3
    URL_PART_PASSWORD = 4
    URL_PART_PORT = 5
    URL_PART_QUERY = 6
  end

  enum URLIS : Int32
    URLIS_URL = 0
    URLIS_OPAQUE = 1
    URLIS_NOHISTORY = 2
    URLIS_FILEURL = 3
    URLIS_APPLIABLE = 4
    URLIS_DIRECTORY = 5
    URLIS_HASQUERY = 6
  end

  enum SHREGDEL_FLAGS : Int32
    SHREGDEL_DEFAULT = 0
    SHREGDEL_HKCU = 1
    SHREGDEL_HKLM = 16
    SHREGDEL_BOTH = 17
  end

  enum SHREGENUM_FLAGS : Int32
    SHREGENUM_DEFAULT = 0
    SHREGENUM_HKCU = 1
    SHREGENUM_HKLM = 16
    SHREGENUM_BOTH = 17
  end

  enum ASSOCSTR : Int32
    ASSOCSTR_COMMAND = 1
    ASSOCSTR_EXECUTABLE = 2
    ASSOCSTR_FRIENDLYDOCNAME = 3
    ASSOCSTR_FRIENDLYAPPNAME = 4
    ASSOCSTR_NOOPEN = 5
    ASSOCSTR_SHELLNEWVALUE = 6
    ASSOCSTR_DDECOMMAND = 7
    ASSOCSTR_DDEIFEXEC = 8
    ASSOCSTR_DDEAPPLICATION = 9
    ASSOCSTR_DDETOPIC = 10
    ASSOCSTR_INFOTIP = 11
    ASSOCSTR_QUICKTIP = 12
    ASSOCSTR_TILEINFO = 13
    ASSOCSTR_CONTENTTYPE = 14
    ASSOCSTR_DEFAULTICON = 15
    ASSOCSTR_SHELLEXTENSION = 16
    ASSOCSTR_DROPTARGET = 17
    ASSOCSTR_DELEGATEEXECUTE = 18
    ASSOCSTR_SUPPORTED_URI_PROTOCOLS = 19
    ASSOCSTR_PROGID = 20
    ASSOCSTR_APPID = 21
    ASSOCSTR_APPPUBLISHER = 22
    ASSOCSTR_APPICONREFERENCE = 23
    ASSOCSTR_MAX = 24
  end

  enum ASSOCKEY : Int32
    ASSOCKEY_SHELLEXECCLASS = 1
    ASSOCKEY_APP = 2
    ASSOCKEY_CLASS = 3
    ASSOCKEY_BASECLASS = 4
    ASSOCKEY_MAX = 5
  end

  enum ASSOCDATA : Int32
    ASSOCDATA_MSIDESCRIPTOR = 1
    ASSOCDATA_NOACTIVATEHANDLER = 2
    ASSOCDATA_UNUSED1 = 3
    ASSOCDATA_HASPERUSERASSOC = 4
    ASSOCDATA_EDITFLAGS = 5
    ASSOCDATA_VALUE = 6
    ASSOCDATA_MAX = 7
  end

  enum ASSOCENUM : Int32
    ASSOCENUM_NONE = 0
  end

  enum FILETYPEATTRIBUTEFLAGS : Int32
    FTA_None = 0
    FTA_Exclude = 1
    FTA_Show = 2
    FTA_HasExtension = 4
    FTA_NoEdit = 8
    FTA_NoRemove = 16
    FTA_NoNewVerb = 32
    FTA_NoEditVerb = 64
    FTA_NoRemoveVerb = 128
    FTA_NoEditDesc = 256
    FTA_NoEditIcon = 512
    FTA_NoEditDflt = 1024
    FTA_NoEditVerbCmd = 2048
    FTA_NoEditVerbExe = 4096
    FTA_NoDDE = 8192
    FTA_NoEditMIME = 32768
    FTA_OpenIsSafe = 65536
    FTA_AlwaysUnsafe = 131072
    FTA_NoRecentDocs = 1048576
    FTA_SafeForElevation = 2097152
    FTA_AlwaysUseDirectInvoke = 4194304
  end

  enum SHGLOBALCOUNTER : Int32
    GLOBALCOUNTER_SEARCHMANAGER = 0
    GLOBALCOUNTER_SEARCHOPTIONS = 1
    GLOBALCOUNTER_FOLDERSETTINGSCHANGE = 2
    GLOBALCOUNTER_RATINGS = 3
    GLOBALCOUNTER_APPROVEDSITES = 4
    GLOBALCOUNTER_RESTRICTIONS = 5
    GLOBALCOUNTER_SHELLSETTINGSCHANGED = 6
    GLOBALCOUNTER_SYSTEMPIDLCHANGE = 7
    GLOBALCOUNTER_OVERLAYMANAGER = 8
    GLOBALCOUNTER_QUERYASSOCIATIONS = 9
    GLOBALCOUNTER_IESESSIONS = 10
    GLOBALCOUNTER_IEONLY_SESSIONS = 11
    GLOBALCOUNTER_APPLICATION_DESTINATIONS = 12
    UNUSED_RECYCLE_WAS_GLOBALCOUNTER_CSCSYNCINPROGRESS = 13
    GLOBALCOUNTER_BITBUCKETNUMDELETERS = 14
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SHARES = 15
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_A = 16
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_B = 17
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_C = 18
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_D = 19
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_E = 20
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_F = 21
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_G = 22
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_H = 23
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_I = 24
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_J = 25
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_K = 26
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_L = 27
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_M = 28
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_N = 29
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_O = 30
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_P = 31
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Q = 32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_R = 33
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_S = 34
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_T = 35
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_U = 36
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_V = 37
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_W = 38
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_X = 39
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Y = 40
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Z = 41
    UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SERVERDRIVE = 42
    UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEGLOBALDIRTYCOUNT = 43
    GLOBALCOUNTER_RECYCLEBINENUM = 44
    GLOBALCOUNTER_RECYCLEBINCORRUPTED = 45
    GLOBALCOUNTER_RATINGS_STATECOUNTER = 46
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE = 47
    GLOBALCOUNTER_INTERNETTOOLBAR_LAYOUT = 48
    GLOBALCOUNTER_FOLDERDEFINITION_CACHE = 49
    GLOBALCOUNTER_COMMONPLACES_LIST_CACHE = 50
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE_MACHINEWIDE = 51
    GLOBALCOUNTER_ASSOCCHANGED = 52
    GLOBALCOUNTER_APP_ITEMS_STATE_STORE_CACHE = 53
    GLOBALCOUNTER_SETTINGSYNC_ENABLED = 54
    GLOBALCOUNTER_APPSFOLDER_FILETYPEASSOCIATION_COUNTER = 55
    GLOBALCOUNTER_USERINFOCHANGED = 56
    GLOBALCOUNTER_SYNC_ENGINE_INFORMATION_CACHE_MACHINEWIDE = 57
    GLOBALCOUNTER_BANNERS_DATAMODEL_CACHE_MACHINEWIDE = 58
    GLOBALCOUNTER_MAXIMUMVALUE = 59
  end

  enum APPINFODATAFLAGS : Int32
    AIM_DISPLAYNAME = 1
    AIM_VERSION = 2
    AIM_PUBLISHER = 4
    AIM_PRODUCTID = 8
    AIM_REGISTEREDOWNER = 16
    AIM_REGISTEREDCOMPANY = 32
    AIM_LANGUAGE = 64
    AIM_SUPPORTURL = 128
    AIM_SUPPORTTELEPHONE = 256
    AIM_HELPLINK = 512
    AIM_INSTALLLOCATION = 1024
    AIM_INSTALLSOURCE = 2048
    AIM_INSTALLDATE = 4096
    AIM_CONTACT = 16384
    AIM_COMMENTS = 32768
    AIM_IMAGE = 131072
    AIM_READMEURL = 262144
    AIM_UPDATEINFOURL = 524288
  end

  enum APPACTIONFLAGS : Int32
    APPACTION_INSTALL = 1
    APPACTION_UNINSTALL = 2
    APPACTION_MODIFY = 4
    APPACTION_REPAIR = 8
    APPACTION_UPGRADE = 16
    APPACTION_CANGETSIZE = 32
    APPACTION_MODIFYREMOVE = 128
    APPACTION_ADDLATER = 256
    APPACTION_UNSCHEDULE = 512
  end

  enum PUBAPPINFOFLAGS : Int32
    PAI_SOURCE = 1
    PAI_ASSIGNEDTIME = 2
    PAI_PUBLISHEDTIME = 4
    PAI_SCHEDULEDTIME = 8
    PAI_EXPIRETIME = 16
  end

  enum CREDENTIAL_PROVIDER_USAGE_SCENARIO : Int32
    CPUS_INVALID = 0
    CPUS_LOGON = 1
    CPUS_UNLOCK_WORKSTATION = 2
    CPUS_CHANGE_PASSWORD = 3
    CPUS_CREDUI = 4
    CPUS_PLAP = 5
  end

  enum CREDENTIAL_PROVIDER_FIELD_TYPE : Int32
    CPFT_INVALID = 0
    CPFT_LARGE_TEXT = 1
    CPFT_SMALL_TEXT = 2
    CPFT_COMMAND_LINK = 3
    CPFT_EDIT_TEXT = 4
    CPFT_PASSWORD_TEXT = 5
    CPFT_TILE_IMAGE = 6
    CPFT_CHECKBOX = 7
    CPFT_COMBOBOX = 8
    CPFT_SUBMIT_BUTTON = 9
  end

  enum CREDENTIAL_PROVIDER_FIELD_STATE : Int32
    CPFS_HIDDEN = 0
    CPFS_DISPLAY_IN_SELECTED_TILE = 1
    CPFS_DISPLAY_IN_DESELECTED_TILE = 2
    CPFS_DISPLAY_IN_BOTH = 3
  end

  enum CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE : Int32
    CPFIS_NONE = 0
    CPFIS_READONLY = 1
    CPFIS_DISABLED = 2
    CPFIS_FOCUSED = 3
  end

  enum CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE : Int32
    CPGSR_NO_CREDENTIAL_NOT_FINISHED = 0
    CPGSR_NO_CREDENTIAL_FINISHED = 1
    CPGSR_RETURN_CREDENTIAL_FINISHED = 2
    CPGSR_RETURN_NO_CREDENTIAL_FINISHED = 3
  end

  enum CREDENTIAL_PROVIDER_STATUS_ICON : Int32
    CPSI_NONE = 0
    CPSI_ERROR = 1
    CPSI_WARNING = 2
    CPSI_SUCCESS = 3
  end

  enum CREDENTIAL_PROVIDER_ACCOUNT_OPTIONS : Int32
    CPAO_NONE = 0
    CPAO_EMPTY_LOCAL = 1
    CPAO_EMPTY_CONNECTED = 2
  end

  enum CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS : Int32
    CPCFO_NONE = 0
    CPCFO_ENABLE_PASSWORD_REVEAL = 1
    CPCFO_IS_EMAIL_ADDRESS = 2
    CPCFO_ENABLE_TOUCH_KEYBOARD_AUTO_INVOKE = 4
    CPCFO_NUMBERS_ONLY = 8
    CPCFO_SHOW_ENGLISH_KEYBOARD = 16
  end

  enum SYNCMGR_HANDLER_CAPABILITIES : Int32
    SYNCMGR_HCM_NONE = 0
    SYNCMGR_HCM_PROVIDES_ICON = 1
    SYNCMGR_HCM_EVENT_STORE = 2
    SYNCMGR_HCM_CONFLICT_STORE = 4
    SYNCMGR_HCM_SUPPORTS_CONCURRENT_SESSIONS = 16
    SYNCMGR_HCM_CAN_BROWSE_CONTENT = 65536
    SYNCMGR_HCM_CAN_SHOW_SCHEDULE = 131072
    SYNCMGR_HCM_QUERY_BEFORE_ACTIVATE = 1048576
    SYNCMGR_HCM_QUERY_BEFORE_DEACTIVATE = 2097152
    SYNCMGR_HCM_QUERY_BEFORE_ENABLE = 4194304
    SYNCMGR_HCM_QUERY_BEFORE_DISABLE = 8388608
    SYNCMGR_HCM_VALID_MASK = 15925271
  end

  enum SYNCMGR_HANDLER_POLICIES : Int32
    SYNCMGR_HPM_NONE = 0
    SYNCMGR_HPM_PREVENT_ACTIVATE = 1
    SYNCMGR_HPM_PREVENT_DEACTIVATE = 2
    SYNCMGR_HPM_PREVENT_ENABLE = 4
    SYNCMGR_HPM_PREVENT_DISABLE = 8
    SYNCMGR_HPM_PREVENT_START_SYNC = 16
    SYNCMGR_HPM_PREVENT_STOP_SYNC = 32
    SYNCMGR_HPM_DISABLE_ENABLE = 256
    SYNCMGR_HPM_DISABLE_DISABLE = 512
    SYNCMGR_HPM_DISABLE_START_SYNC = 1024
    SYNCMGR_HPM_DISABLE_STOP_SYNC = 2048
    SYNCMGR_HPM_DISABLE_BROWSE = 4096
    SYNCMGR_HPM_DISABLE_SCHEDULE = 8192
    SYNCMGR_HPM_HIDDEN_BY_DEFAULT = 65536
    SYNCMGR_HPM_BACKGROUND_SYNC_ONLY = 48
    SYNCMGR_HPM_VALID_MASK = 77631
  end

  enum SYNCMGR_HANDLER_TYPE : Int32
    SYNCMGR_HT_UNSPECIFIED = 0
    SYNCMGR_HT_APPLICATION = 1
    SYNCMGR_HT_DEVICE = 2
    SYNCMGR_HT_FOLDER = 3
    SYNCMGR_HT_SERVICE = 4
    SYNCMGR_HT_COMPUTER = 5
    SYNCMGR_HT_MIN = 0
    SYNCMGR_HT_MAX = 5
  end

  enum SYNCMGR_ITEM_CAPABILITIES : Int32
    SYNCMGR_ICM_NONE = 0
    SYNCMGR_ICM_PROVIDES_ICON = 1
    SYNCMGR_ICM_EVENT_STORE = 2
    SYNCMGR_ICM_CONFLICT_STORE = 4
    SYNCMGR_ICM_CAN_DELETE = 16
    SYNCMGR_ICM_CAN_BROWSE_CONTENT = 65536
    SYNCMGR_ICM_QUERY_BEFORE_ENABLE = 1048576
    SYNCMGR_ICM_QUERY_BEFORE_DISABLE = 2097152
    SYNCMGR_ICM_QUERY_BEFORE_DELETE = 4194304
    SYNCMGR_ICM_VALID_MASK = 7405591
  end

  enum SYNCMGR_ITEM_POLICIES : Int32
    SYNCMGR_IPM_NONE = 0
    SYNCMGR_IPM_PREVENT_ENABLE = 1
    SYNCMGR_IPM_PREVENT_DISABLE = 2
    SYNCMGR_IPM_PREVENT_START_SYNC = 4
    SYNCMGR_IPM_PREVENT_STOP_SYNC = 8
    SYNCMGR_IPM_DISABLE_ENABLE = 16
    SYNCMGR_IPM_DISABLE_DISABLE = 32
    SYNCMGR_IPM_DISABLE_START_SYNC = 64
    SYNCMGR_IPM_DISABLE_STOP_SYNC = 128
    SYNCMGR_IPM_DISABLE_BROWSE = 256
    SYNCMGR_IPM_DISABLE_DELETE = 512
    SYNCMGR_IPM_HIDDEN_BY_DEFAULT = 65536
    SYNCMGR_IPM_VALID_MASK = 66303
  end

  enum SYNCMGR_PROGRESS_STATUS : Int32
    SYNCMGR_PS_UPDATING = 1
    SYNCMGR_PS_UPDATING_INDETERMINATE = 2
    SYNCMGR_PS_SUCCEEDED = 3
    SYNCMGR_PS_FAILED = 4
    SYNCMGR_PS_CANCELED = 5
    SYNCMGR_PS_DISCONNECTED = 6
    SYNCMGR_PS_MAX = 6
  end

  enum SYNCMGR_CANCEL_REQUEST : Int32
    SYNCMGR_CR_NONE = 0
    SYNCMGR_CR_CANCEL_ITEM = 1
    SYNCMGR_CR_CANCEL_ALL = 2
    SYNCMGR_CR_MAX = 2
  end

  enum SYNCMGR_EVENT_LEVEL : Int32
    SYNCMGR_EL_INFORMATION = 1
    SYNCMGR_EL_WARNING = 2
    SYNCMGR_EL_ERROR = 3
    SYNCMGR_EL_MAX = 3
  end

  enum SYNCMGR_EVENT_FLAGS : Int32
    SYNCMGR_EF_NONE = 0
    SYNCMGR_EF_VALID = 0
  end

  enum SYNCMGR_CONTROL_FLAGS : Int32
    SYNCMGR_CF_NONE = 0
    SYNCMGR_CF_NOWAIT = 0
    SYNCMGR_CF_WAIT = 1
    SYNCMGR_CF_NOUI = 2
    SYNCMGR_CF_VALID = 3
  end

  enum SYNCMGR_SYNC_CONTROL_FLAGS : Int32
    SYNCMGR_SCF_NONE = 0
    SYNCMGR_SCF_IGNORE_IF_ALREADY_SYNCING = 1
    SYNCMGR_SCF_VALID = 1
  end

  enum SYNCMGR_UPDATE_REASON : Int32
    SYNCMGR_UR_ADDED = 0
    SYNCMGR_UR_CHANGED = 1
    SYNCMGR_UR_REMOVED = 2
    SYNCMGR_UR_MAX = 2
  end

  enum SYNCMGR_CONFLICT_ITEM_TYPE : Int32
    SYNCMGR_CIT_UPDATED = 1
    SYNCMGR_CIT_DELETED = 2
  end

  enum SYNCMGR_RESOLUTION_ABILITIES : Int32
    SYNCMGR_RA_KEEPOTHER = 1
    SYNCMGR_RA_KEEPRECENT = 2
    SYNCMGR_RA_REMOVEFROMSYNCSET = 4
    SYNCMGR_RA_KEEP_SINGLE = 8
    SYNCMGR_RA_KEEP_MULTIPLE = 16
    SYNCMGR_RA_VALID = 31
  end

  enum SYNCMGR_RESOLUTION_FEEDBACK : Int32
    SYNCMGR_RF_CONTINUE = 0
    SYNCMGR_RF_REFRESH = 1
    SYNCMGR_RF_CANCEL = 2
  end

  enum SYNCMGR_PRESENTER_NEXT_STEP : Int32
    SYNCMGR_PNS_CONTINUE = 0
    SYNCMGR_PNS_DEFAULT = 1
    SYNCMGR_PNS_CANCEL = 2
  end

  enum SYNCMGR_PRESENTER_CHOICE : Int32
    SYNCMGR_PC_NO_CHOICE = 0
    SYNCMGR_PC_KEEP_ONE = 1
    SYNCMGR_PC_KEEP_MULTIPLE = 2
    SYNCMGR_PC_KEEP_RECENT = 3
    SYNCMGR_PC_REMOVE_FROM_SYNC_SET = 4
    SYNCMGR_PC_SKIP = 5
  end

  enum WTS_FLAGS : Int32
    WTS_NONE = 0
    WTS_EXTRACT = 0
    WTS_INCACHEONLY = 1
    WTS_FASTEXTRACT = 2
    WTS_FORCEEXTRACTION = 4
    WTS_SLOWRECLAIM = 8
    WTS_EXTRACTDONOTCACHE = 32
    WTS_SCALETOREQUESTEDSIZE = 64
    WTS_SKIPFASTEXTRACT = 128
    WTS_EXTRACTINPROC = 256
    WTS_CROPTOSQUARE = 512
    WTS_INSTANCESURROGATE = 1024
    WTS_REQUIRESURROGATE = 2048
    WTS_APPSTYLE = 8192
    WTS_WIDETHUMBNAILS = 16384
    WTS_IDEALCACHESIZEONLY = 32768
    WTS_SCALEUP = 65536
  end

  enum WTS_CACHEFLAGS : Int32
    WTS_DEFAULT = 0
    WTS_LOWQUALITY = 1
    WTS_CACHED = 2
  end

  enum WTS_CONTEXTFLAGS : Int32
    WTSCF_DEFAULT = 0
    WTSCF_APPSTYLE = 1
    WTSCF_SQUARE = 2
    WTSCF_WIDE = 4
    WTSCF_FAST = 8
  end

  enum WTS_ALPHATYPE : Int32
    WTSAT_UNKNOWN = 0
    WTSAT_RGB = 1
    WTSAT_ARGB = 2
  end

  enum SYNCMGRSTATUS : Int32
    SYNCMGRSTATUS_STOPPED = 0
    SYNCMGRSTATUS_SKIPPED = 1
    SYNCMGRSTATUS_PENDING = 2
    SYNCMGRSTATUS_UPDATING = 3
    SYNCMGRSTATUS_SUCCEEDED = 4
    SYNCMGRSTATUS_FAILED = 5
    SYNCMGRSTATUS_PAUSED = 6
    SYNCMGRSTATUS_RESUMING = 7
    SYNCMGRSTATUS_UPDATING_INDETERMINATE = 8
    SYNCMGRSTATUS_DELETED = 256
  end

  enum SYNCMGRLOGLEVEL : Int32
    SYNCMGRLOGLEVEL_INFORMATION = 1
    SYNCMGRLOGLEVEL_WARNING = 2
    SYNCMGRLOGLEVEL_ERROR = 3
    SYNCMGRLOGLEVEL_LOGLEVELMAX = 3
  end

  enum SYNCMGRERRORFLAGS : Int32
    SYNCMGRERRORFLAG_ENABLEJUMPTEXT = 1
  end

  enum SYNCMGRITEMFLAGS : Int32
    SYNCMGRITEM_HASPROPERTIES = 1
    SYNCMGRITEM_TEMPORARY = 2
    SYNCMGRITEM_ROAMINGUSER = 4
    SYNCMGRITEM_LASTUPDATETIME = 8
    SYNCMGRITEM_MAYDELETEITEM = 16
    SYNCMGRITEM_HIDDEN = 32
  end

  enum SYNCMGRFLAG : Int32
    SYNCMGRFLAG_CONNECT = 1
    SYNCMGRFLAG_PENDINGDISCONNECT = 2
    SYNCMGRFLAG_MANUAL = 3
    SYNCMGRFLAG_IDLE = 4
    SYNCMGRFLAG_INVOKE = 5
    SYNCMGRFLAG_SCHEDULED = 6
    SYNCMGRFLAG_EVENTMASK = 255
    SYNCMGRFLAG_SETTINGS = 256
    SYNCMGRFLAG_MAYBOTHERUSER = 512
  end

  enum SYNCMGRHANDLERFLAGS : Int32
    SYNCMGRHANDLER_HASPROPERTIES = 1
    SYNCMGRHANDLER_MAYESTABLISHCONNECTION = 2
    SYNCMGRHANDLER_ALWAYSLISTHANDLER = 4
    SYNCMGRHANDLER_HIDDEN = 8
  end

  enum SYNCMGRITEMSTATE : Int32
    SYNCMGRITEMSTATE_UNCHECKED = 0
    SYNCMGRITEMSTATE_CHECKED = 1
  end

  enum SYNCMGRINVOKEFLAGS : Int32
    SYNCMGRINVOKE_STARTSYNC = 2
    SYNCMGRINVOKE_MINIMIZED = 4
  end

  enum SYNCMGRREGISTERFLAGS : Int32
    SYNCMGRREGISTERFLAG_CONNECT = 1
    SYNCMGRREGISTERFLAG_PENDINGDISCONNECT = 2
    SYNCMGRREGISTERFLAG_IDLE = 4
  end

  enum ThumbnailStreamCacheOptions : Int32
    ExtractIfNotCached = 0
    ReturnOnlyIfCached = 1
    ResizeThumbnail = 2
    AllowSmallerSize = 4
  end

  enum TLENUMF : Int32
    TLEF_RELATIVE_INCLUDE_CURRENT = 1
    TLEF_RELATIVE_BACK = 16
    TLEF_RELATIVE_FORE = 32
    TLEF_INCLUDE_UNINVOKEABLE = 64
    TLEF_ABSOLUTE = 49
    TLEF_EXCLUDE_SUBFRAME_ENTRIES = 128
    TLEF_EXCLUDE_ABOUT_PAGES = 256
  end

  enum HLSR_NOREDEF10 : Int32
    HLSR_HOME = 0
    HLSR_SEARCHPAGE = 1
    HLSR_HISTORYFOLDER = 2
  end

  enum HLSHORTCUTF__NOREDEF10 : Int32
    HLSHORTCUTF_DEFAULT = 0
    HLSHORTCUTF_DONTACTUALLYCREATE = 1
    HLSHORTCUTF_USEFILENAMEFROMFRIENDLYNAME = 2
    HLSHORTCUTF_USEUNIQUEFILENAME = 4
    HLSHORTCUTF_MAYUSEEXISTINGSHORTCUT = 8
  end

  enum HLTRANSLATEF_NOREDEF10 : Int32
    HLTRANSLATEF_DEFAULT = 0
    HLTRANSLATEF_DONTAPPLYDEFAULTPREFIX = 1
  end

  enum HLNF : UInt32
    HLNF_INTERNALJUMP = 1
    HLNF_OPENINNEWWINDOW = 2
    HLNF_NAVIGATINGBACK = 4
    HLNF_NAVIGATINGFORWARD = 8
    HLNF_NAVIGATINGTOSTACKITEM = 16
    HLNF_CREATENOHISTORY = 32
  end

  enum HLINKGETREF : Int32
    HLINKGETREF_DEFAULT = 0
    HLINKGETREF_ABSOLUTE = 1
    HLINKGETREF_RELATIVE = 2
  end

  enum HLFNAMEF : UInt32
    HLFNAMEF_DEFAULT = 0
    HLFNAMEF_TRYCACHE = 1
    HLFNAMEF_TRYPRETTYTARGET = 2
    HLFNAMEF_TRYFULLTARGET = 4
    HLFNAMEF_TRYWIN95SHORTCUT = 8
  end

  enum HLINKMISC : Int32
    HLINKMISC_RELATIVE = 1
  end

  enum HLINKSETF : Int32
    HLINKSETF_TARGET = 1
    HLINKSETF_LOCATION = 2
  end

  enum HLINKWHICHMK : Int32
    HLINKWHICHMK_CONTAINER = 1
    HLINKWHICHMK_BASE = 2
  end

  enum HLTB_INFO : Int32
    HLTB_DOCKEDLEFT = 0
    HLTB_DOCKEDTOP = 1
    HLTB_DOCKEDRIGHT = 2
    HLTB_DOCKEDBOTTOM = 3
    HLTB_FLOATING = 4
  end

  enum HLBWIF_FLAGS : UInt32
    HLBWIF_HASFRAMEWNDINFO = 1
    HLBWIF_HASDOCWNDINFO = 2
    HLBWIF_FRAMEWNDMAXIMIZED = 4
    HLBWIF_DOCWNDMAXIMIZED = 8
    HLBWIF_HASWEBTOOLBARINFO = 16
    HLBWIF_WEBTOOLBARHIDDEN = 32
  end

  enum HLID_INFO : UInt32
    HLID_INVALID = 0
    HLID_PREVIOUS = 4294967295
    HLID_NEXT = 4294967294
    HLID_CURRENT = 4294967293
    HLID_STACKBOTTOM = 4294967292
    HLID_STACKTOP = 4294967291
  end

  enum HLQF_INFO : Int32
    HLQF_ISVALID = 1
    HLQF_ISCURRENT = 2
  end

  enum BNSTATE : Int32
    BNS_NORMAL = 0
    BNS_BEGIN_NAVIGATE = 1
    BNS_NAVIGATE = 2
  end

  enum SHELLBROWSERSHOWCONTROL : Int32
    SBSC_HIDE = 0
    SBSC_SHOW = 1
    SBSC_TOGGLE = 2
    SBSC_QUERY = 3
  end

  enum SECURELOCKCODE : Int32
    SECURELOCK_NOCHANGE = -1
    SECURELOCK_SET_UNSECURE = 0
    SECURELOCK_SET_MIXED = 1
    SECURELOCK_SET_SECUREUNKNOWNBIT = 2
    SECURELOCK_SET_SECURE40BIT = 3
    SECURELOCK_SET_SECURE56BIT = 4
    SECURELOCK_SET_FORTEZZA = 5
    SECURELOCK_SET_SECURE128BIT = 6
    SECURELOCK_FIRSTSUGGEST = 7
    SECURELOCK_SUGGEST_UNSECURE = 7
    SECURELOCK_SUGGEST_MIXED = 8
    SECURELOCK_SUGGEST_SECUREUNKNOWNBIT = 9
    SECURELOCK_SUGGEST_SECURE40BIT = 10
    SECURELOCK_SUGGEST_SECURE56BIT = 11
    SECURELOCK_SUGGEST_FORTEZZA = 12
    SECURELOCK_SUGGEST_SECURE128BIT = 13
  end

  enum IEPDNFLAGS : Int32
    IEPDN_BINDINGUI = 1
  end

  enum TI_FLAGS : Int32
    TI_BITMAP = 1
    TI_JPEG = 2
  end

  enum PATHCCH_OPTIONS : Int32
    PATHCCH_NONE = 0
    PATHCCH_ALLOW_LONG_PATHS = 1
    PATHCCH_FORCE_ENABLE_LONG_NAME_PROCESS = 2
    PATHCCH_FORCE_DISABLE_LONG_NAME_PROCESS = 4
    PATHCCH_DO_NOT_NORMALIZE_SEGMENTS = 8
    PATHCCH_ENSURE_IS_EXTENDED_LENGTH_PATH = 16
    PATHCCH_ENSURE_TRAILING_SLASH = 32
    PATHCCH_CANONICALIZE_SLASHES = 64
  end

  enum Iurl_seturl_flags : Int32
    IURL_SETURL_FL_GUESS_PROTOCOL = 1
    IURL_SETURL_FL_USE_DEFAULT_PROTOCOL = 2
  end

  enum Iurl_invokecommand_flags : Int32
    IURL_INVOKECOMMAND_FL_ALLOW_UI = 1
    IURL_INVOKECOMMAND_FL_USE_DEFAULT_VERB = 2
    IURL_INVOKECOMMAND_FL_DDEWAIT = 4
    IURL_INVOKECOMMAND_FL_ASYNCOK = 8
    IURL_INVOKECOMMAND_FL_LOG_USAGE = 16
  end

  enum Translateurl_in_flags : Int32
    TRANSLATEURL_FL_GUESS_PROTOCOL = 1
    TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL = 2
  end

  enum Urlassociationdialog_in_flags : Int32
    URLASSOCDLG_FL_USE_DEFAULT_NAME = 1
    URLASSOCDLG_FL_REGISTER_ASSOC = 2
  end

  enum Mimeassociationdialog_in_flags : Int32
    MIMEASSOCDLG_FL_REGISTER_ASSOC = 1
  end

  union SHELLEXECUTEINFOA_Anonymous_e__Union
    h_icon : LibC::HANDLE
    h_monitor : LibC::HANDLE
  end
  union SHELLEXECUTEINFOW_Anonymous_e__Union
    h_icon : LibC::HANDLE
    h_monitor : LibC::HANDLE
  end
  union NOTIFYICONDATAA_Anonymous_e__Union
    u_timeout : UInt32
    u_version : UInt32
  end
  union NOTIFYICONDATAW_Anonymous_e__Union
    u_timeout : UInt32
    u_version : UInt32
  end

  struct APPCATEGORYINFO
    locale : UInt32
    psz_description : LibC::LPWSTR
    app_category_id : Guid
  end
  struct APPCATEGORYINFOLIST
    c_category : UInt32
    p_category_info : APPCATEGORYINFO*
  end
  struct HELPINFO
    cb_size : UInt32
    i_context_type : Int32
    i_ctrl_id : Int32
    h_item_handle : LibC::HANDLE
    dw_context_id : LibC::UINT_PTR
    mouse_pos : POINT
  end
  struct MULTIKEYHELPA
    mk_size : UInt32
    mk_keylist : CHAR
    sz_keyphrase : CHAR[0]*
  end
  struct MULTIKEYHELPW
    mk_size : UInt32
    mk_keylist : Char
    sz_keyphrase : Char[0]*
  end
  struct HELPWININFOA
    w_struct_size : Int32
    x : Int32
    y : Int32
    dx : Int32
    dy : Int32
    w_max : Int32
    rgch_member : CHAR[2]*
  end
  struct HELPWININFOW
    w_struct_size : Int32
    x : Int32
    y : Int32
    dx : Int32
    dy : Int32
    w_max : Int32
    rgch_member : Char[2]*
  end
  struct CMINVOKECOMMANDINFO
    cb_size : UInt32
    f_mask : UInt32
    hwnd : HANDLE
    lp_verb : PSTR
    lp_parameters : PSTR
    lp_directory : PSTR
    n_show : Int32
    dw_hot_key : UInt32
    h_icon : LibC::HANDLE
  end
  struct CMINVOKECOMMANDINFOEX
    cb_size : UInt32
    f_mask : UInt32
    hwnd : HANDLE
    lp_verb : PSTR
    lp_parameters : PSTR
    lp_directory : PSTR
    n_show : Int32
    dw_hot_key : UInt32
    h_icon : LibC::HANDLE
    lp_title : PSTR
    lp_verb_w : LibC::LPWSTR
    lp_parameters_w : LibC::LPWSTR
    lp_directory_w : LibC::LPWSTR
    lp_title_w : LibC::LPWSTR
    pt_invoke : POINT
  end
  struct CMINVOKECOMMANDINFOEX_REMOTE
    cb_size : UInt32
    f_mask : UInt32
    hwnd : HANDLE
    lp_verb_string : PSTR
    lp_parameters : PSTR
    lp_directory : PSTR
    n_show : Int32
    dw_hot_key : UInt32
    lp_title : PSTR
    lp_verb_w_string : LibC::LPWSTR
    lp_parameters_w : LibC::LPWSTR
    lp_directory_w : LibC::LPWSTR
    lp_title_w : LibC::LPWSTR
    pt_invoke : POINT
    lp_verb_int : UInt32
    lp_verb_w_int : UInt32
  end
  struct PERSIST_FOLDER_TARGET_INFO
    pidl_target_folder : ITEMIDLIST*
    sz_target_parsing_name : Char[260]*
    sz_network_provider : Char[260]*
    dw_attributes : UInt32
    csidl : Int32
  end
  struct EXTRASEARCH
    guid_search : Guid
    wsz_friendly_name : Char[80]*
    wsz_url : Char[2084]*
  end
  struct FOLDERSETTINGS
    view_mode : UInt32
    f_flags : UInt32
  end
  struct SV2CVW2_PARAMS
    cb_size : UInt32
    psv_prev : IShellView
    pfs : FOLDERSETTINGS*
    psb_owner : IShellBrowser
    prc_view : RECT*
    pvid : Guid*
    hwnd_view : HANDLE
  end
  struct SORTCOLUMN
    propkey : PROPERTYKEY
    direction : SORTDIRECTION
  end
  struct CM_COLUMNINFO
    cb_size : UInt32
    dw_mask : UInt32
    dw_state : UInt32
    u_width : UInt32
    u_default_width : UInt32
    u_ideal_width : UInt32
    wsz_name : Char[80]*
  end
  struct SHELL_ITEM_RESOURCE
    guid_type : Guid
    sz_name : Char[260]*
  end
  struct CATEGORY_INFO
    cif : CATEGORYINFO_FLAGS
    wsz_name : Char[260]*
  end
  struct SHDRAGIMAGE
    size_drag_image : SIZE
    pt_offset : POINT
    hbmp_drag_image : HBITMAP
    cr_color_key : UInt32
  end
  struct DESKBANDINFO
    dw_mask : UInt32
    pt_min_size : POINTL
    pt_max_size : POINTL
    pt_integral : POINTL
    pt_actual : POINTL
    wsz_title : Char[256]*
    dw_mode_flags : UInt32
    cr_bkgnd : UInt32
  end
  struct THUMBBUTTON
    dw_mask : THUMBBUTTONMASK
    i_id : UInt32
    i_bitmap : UInt32
    h_icon : HANDLE
    sz_tip : Char[260]*
    dw_flags : THUMBBUTTONFLAGS
  end
  struct BANDSITEINFO
    dw_mask : UInt32
    dw_state : UInt32
    dw_style : UInt32
  end
  struct DELEGATEITEMID
    cb_size : UInt16
    w_outer : UInt16
    cb_inner : UInt16
    rgb : UInt8[0]*
  end
  struct SMDATA
    dw_mask : UInt32
    dw_flags : UInt32
    hmenu : HANDLE
    hwnd : HANDLE
    u_id : UInt32
    u_id_parent : UInt32
    u_id_ancestor : UInt32
    punk : IUnknown
    pidl_folder : ITEMIDLIST*
    pidl_item : ITEMIDLIST*
    psf : IShellFolder
    pv_user_data : Void*
  end
  struct SMINFO
    dw_mask : UInt32
    dw_type : UInt32
    dw_flags : UInt32
    i_icon : Int32
  end
  struct SMCSHCHANGENOTIFYSTRUCT
    l_event : Int32
    pidl1 : ITEMIDLIST*
    pidl2 : ITEMIDLIST*
  end
  struct KNOWNFOLDER_DEFINITION
    category : KF_CATEGORY
    psz_name : LibC::LPWSTR
    psz_description : LibC::LPWSTR
    fid_parent : Guid
    psz_relative_path : LibC::LPWSTR
    psz_parsing_name : LibC::LPWSTR
    psz_tooltip : LibC::LPWSTR
    psz_localized_name : LibC::LPWSTR
    psz_icon : LibC::LPWSTR
    psz_security : LibC::LPWSTR
    dw_attributes : UInt32
    kfd_flags : UInt32
    ftid_type : Guid
  end
  struct PREVIEWHANDLERFRAMEINFO
    haccel : HANDLE
    c_accel_entries : UInt32
  end
  struct BANNER_NOTIFICATION
    event : BANNER_NOTIFICATION_EVENT
    provider_identity : LibC::LPWSTR
    content_id : LibC::LPWSTR
  end
  struct NSTCCUSTOMDRAW
    psi : IShellItem
    u_item_state : UInt32
    nstcis : UInt32
    psz_text : LibC::LPWSTR
    i_image : Int32
    himl : HIMAGELIST
    i_level : Int32
    i_indent : Int32
  end
  struct DATABLOCK_HEADER
    cb_size : UInt32
    dw_signature : UInt32
  end
  struct NT_CONSOLE_PROPS
    dbh : DATABLOCK_HEADER
    w_fill_attribute : UInt16
    w_popup_fill_attribute : UInt16
    dw_screen_buffer_size : COORD
    dw_window_size : COORD
    dw_window_origin : COORD
    n_font : UInt32
    n_input_buffer_size : UInt32
    dw_font_size : COORD
    u_font_family : UInt32
    u_font_weight : UInt32
    face_name : Char[32]*
    u_cursor_size : UInt32
    b_full_screen : LibC::BOOL
    b_quick_edit : LibC::BOOL
    b_insert_mode : LibC::BOOL
    b_auto_position : LibC::BOOL
    u_history_buffer_size : UInt32
    u_number_of_history_buffers : UInt32
    b_history_no_dup : LibC::BOOL
    color_table : UInt32[16]*
  end
  struct NT_FE_CONSOLE_PROPS
    dbh : DATABLOCK_HEADER
    u_code_page : UInt32
  end
  struct EXP_DARWIN_LINK
    dbh : DATABLOCK_HEADER
    sz_darwin_id : CHAR[260]*
    szw_darwin_id : Char[260]*
  end
  struct EXP_SPECIAL_FOLDER
    cb_size : UInt32
    dw_signature : UInt32
    id_special_folder : UInt32
    cb_offset : UInt32
  end
  struct EXP_SZ_LINK
    cb_size : UInt32
    dw_signature : UInt32
    sz_target : CHAR[260]*
    swz_target : Char[260]*
  end
  struct EXP_PROPERTYSTORAGE
    cb_size : UInt32
    dw_signature : UInt32
    ab_property_storage : UInt8[0]*
  end
  struct SHFOLDERCUSTOMSETTINGS
    dw_size : UInt32
    dw_mask : UInt32
    pvid : Guid*
    psz_web_view_template : LibC::LPWSTR
    cch_web_view_template : UInt32
    psz_web_view_template_version : LibC::LPWSTR
    psz_info_tip : LibC::LPWSTR
    cch_info_tip : UInt32
    pclsid : Guid*
    dw_flags : UInt32
    psz_icon_file : LibC::LPWSTR
    cch_icon_file : UInt32
    i_icon_index : Int32
    psz_logo : LibC::LPWSTR
    cch_logo : UInt32
  end
  struct BROWSEINFOA
    hwnd_owner : HANDLE
    pidl_root : ITEMIDLIST*
    psz_display_name : PSTR
    lpsz_title : PSTR
    ul_flags : UInt32
    lpfn : BFFCALLBACK
    l_param : LPARAM
    i_image : Int32
  end
  struct BROWSEINFOW
    hwnd_owner : HANDLE
    pidl_root : ITEMIDLIST*
    psz_display_name : LibC::LPWSTR
    lpsz_title : LibC::LPWSTR
    ul_flags : UInt32
    lpfn : BFFCALLBACK
    l_param : LPARAM
    i_image : Int32
  end
  struct NRESARRAY
    c_items : UInt32
    nr : NETRESOURCEA[0]*
  end
  struct CIDA
    cidl : UInt32
    aoffset : UInt32[0]*
  end
  struct FILEDESCRIPTORA
    dw_flags : UInt32
    clsid : Guid
    sizel : SIZE
    pointl : POINTL
    dw_file_attributes : UInt32
    ft_creation_time : FILETIME
    ft_last_access_time : FILETIME
    ft_last_write_time : FILETIME
    n_file_size_high : UInt32
    n_file_size_low : UInt32
    c_file_name : CHAR[260]*
  end
  struct FILEDESCRIPTORW
    dw_flags : UInt32
    clsid : Guid
    sizel : SIZE
    pointl : POINTL
    dw_file_attributes : UInt32
    ft_creation_time : FILETIME
    ft_last_access_time : FILETIME
    ft_last_write_time : FILETIME
    n_file_size_high : UInt32
    n_file_size_low : UInt32
    c_file_name : Char[260]*
  end
  struct FILEGROUPDESCRIPTORA
    c_items : UInt32
    fgd : FILEDESCRIPTORA[0]*
  end
  struct FILEGROUPDESCRIPTORW
    c_items : UInt32
    fgd : FILEDESCRIPTORW[0]*
  end
  struct DROPFILES
    p_files : UInt32
    pt : POINT
    f_nc : LibC::BOOL
    f_wide : LibC::BOOL
  end
  struct FILE_ATTRIBUTES_ARRAY
    c_items : UInt32
    dw_sum_file_attributes : UInt32
    dw_product_file_attributes : UInt32
    rgdw_file_attributes : UInt32[0]*
  end
  struct DROPDESCRIPTION
    type : DROPIMAGETYPE
    sz_message : Char[260]*
    sz_insert : Char[260]*
  end
  struct SHChangeNotifyEntry
    pidl : ITEMIDLIST*
    f_recursive : LibC::BOOL
  end
  struct SHARDAPPIDINFO
    psi : IShellItem
    psz_app_id : LibC::LPWSTR
  end
  struct SHARDAPPIDINFOIDLIST
    pidl : ITEMIDLIST*
    psz_app_id : LibC::LPWSTR
  end
  struct SHARDAPPIDINFOLINK
    psl : IShellLinkA
    psz_app_id : LibC::LPWSTR
  end
  struct SHChangeDWORDAsIDList
    cb : UInt16
    dw_item1 : UInt32
    dw_item2 : UInt32
    cb_zero : UInt16
  end
  struct SHChangeUpdateImageIDList
    cb : UInt16
    i_icon_index : Int32
    i_cur_index : Int32
    u_flags : UInt32
    dw_process_id : UInt32
    sz_name : Char[260]*
    cb_zero : UInt16
  end
  struct SHDESCRIPTIONID
    dw_description_id : SHDID_ID
    clsid : Guid
  end
  struct AUTO_SCROLL_DATA
    i_next_sample : Int32
    dw_last_scroll : UInt32
    b_full : LibC::BOOL
    pts : POINT[3]*
    dw_times : UInt32[3]*
  end
  struct CABINETSTATE
    c_length : UInt16
    n_version : UInt16
    _bitfield : Int32
    f_menu_enum_filter : UInt32
  end
  struct OPENASINFO
    pcsz_file : LibC::LPWSTR
    pcsz_class : LibC::LPWSTR
    oaif_in_flags : OPEN_AS_INFO_FLAGS
  end
  struct QCMINFO_IDMAP_PLACEMENT
    id : UInt32
    f_flags : UInt32
  end
  struct QCMINFO_IDMAP
    n_max_ids : UInt32
    p_id_list : QCMINFO_IDMAP_PLACEMENT[0]*
  end
  struct QCMINFO
    hmenu : HANDLE
    index_menu : UInt32
    id_cmd_first : UInt32
    id_cmd_last : UInt32
    p_id_map : QCMINFO_IDMAP*
  end
  struct DETAILSINFO
    pidl : ITEMIDLIST*
    fmt : Int32
    cx_char : Int32
    str : STRRET
    i_image : Int32
  end
  struct SFVM_PROPPAGE_DATA
    dw_reserved : UInt32
    pfn : LPFNSVADDPROPSHEETPAGE
    l_param : LPARAM
  end
  struct SFVM_HELPTOPIC_DATA
    wsz_help_file : Char[260]*
    wsz_help_topic : Char[260]*
  end
  struct ITEMSPACING
    cx_small : Int32
    cy_small : Int32
    cx_large : Int32
    cy_large : Int32
  end
  struct SFV_CREATE
    cb_size : UInt32
    pshf : IShellFolder
    psv_outer : IShellView
    psfvcb : IShellFolderViewCB
  end
  struct DEFCONTEXTMENU
    hwnd : HANDLE
    pcmcb : IContextMenuCB
    pidl_folder : ITEMIDLIST*
    psf : IShellFolder
    cidl : UInt32
    apidl : ITEMIDLIST**
    punk_association_info : IUnknown
    c_keys : UInt32
    a_keys : HKEY*
  end
  struct DFMICS
    cb_size : UInt32
    f_mask : UInt32
    l_param : LPARAM
    id_cmd_first : UInt32
    id_def_max : UInt32
    pici : CMINVOKECOMMANDINFO*
    punk_site : IUnknown
  end
  struct CSFV
    cb_size : UInt32
    pshf : IShellFolder
    psv_outer : IShellView
    pidl : ITEMIDLIST*
    l_events : Int32
    pfn_callback : LPFNVIEWCALLBACK
    fvm : FOLDERVIEWMODE
  end
  struct SHELLSTATEA
    _bitfield1 : Int32
    dw_win95_unused : UInt32
    u_win95_unused : UInt32
    l_param_sort : Int32
    i_sort_direction : Int32
    version : UInt32
    u_not_used : UInt32
    _bitfield2 : Int32
  end
  struct SHELLSTATEW
    _bitfield1 : Int32
    dw_win95_unused : UInt32
    u_win95_unused : UInt32
    l_param_sort : Int32
    i_sort_direction : Int32
    version : UInt32
    u_not_used : UInt32
    _bitfield2 : Int32
  end
  struct SHELLFLAGSTATE
    _bitfield : Int32
  end
  struct BANDINFOSFB
    dw_mask : UInt32
    dw_state_mask : UInt32
    dw_state : UInt32
    cr_bkgnd : UInt32
    cr_btn_lt : UInt32
    cr_btn_dk : UInt32
    w_view_mode : UInt16
    w_align : UInt16
    psf : IShellFolder
    pidl : ITEMIDLIST*
  end
  struct SHCOLUMNINFO
    scid : PROPERTYKEY
    vt : UInt16
    fmt : UInt32
    c_chars : UInt32
    cs_flags : UInt32
    wsz_title : Char[80]*
    wsz_description : Char[128]*
  end
  struct SHCOLUMNINIT
    dw_flags : UInt32
    dw_reserved : UInt32
    wsz_folder : Char[260]*
  end
  struct SHCOLUMNDATA
    dw_flags : UInt32
    dw_file_attributes : UInt32
    dw_reserved : UInt32
    pwsz_ext : LibC::LPWSTR
    wsz_file : Char[260]*
  end
  struct SHChangeProductKeyAsIDList
    cb : UInt16
    wsz_product_key : Char[39]*
    cb_zero : UInt16
  end
  struct TBINFO
    cbuttons : UInt32
    u_flags : UInt32
  end
  struct SFV_SETITEMPOS
    pidl : ITEMIDLIST*
    pt : POINT
  end
  struct AASHELLMENUFILENAME
    cb_total : Int16
    rgb_reserved : UInt8[12]*
    sz_file_name : Char[0]*
  end
  struct AASHELLMENUITEM
    lp_reserved1 : Void*
    i_reserved : Int32
    ui_reserved : UInt32
    lp_name : AASHELLMENUFILENAME*
    psz : LibC::LPWSTR
  end
  struct DRAGINFOA
    u_size : UInt32
    pt : POINT
    f_nc : LibC::BOOL
    lp_file_list : PSTR
    grf_key_state : UInt32
  end
  struct DRAGINFOW
    u_size : UInt32
    pt : POINT
    f_nc : LibC::BOOL
    lp_file_list : LibC::LPWSTR
    grf_key_state : UInt32
  end
  struct APPBARDATA
    cb_size : UInt32
    h_wnd : HANDLE
    u_callback_message : UInt32
    u_edge : UInt32
    rc : RECT
    l_param : LPARAM
  end
  struct SHFILEOPSTRUCTA
    hwnd : HANDLE
    w_func : UInt32
    p_from : Int8*
    p_to : Int8*
    f_flags : UInt16
    f_any_operations_aborted : LibC::BOOL
    h_name_mappings : Void*
    lpsz_progress_title : PSTR
  end
  struct SHFILEOPSTRUCTW
    hwnd : HANDLE
    w_func : UInt32
    p_from : LibC::LPWSTR
    p_to : LibC::LPWSTR
    f_flags : UInt16
    f_any_operations_aborted : LibC::BOOL
    h_name_mappings : Void*
    lpsz_progress_title : LibC::LPWSTR
  end
  struct SHNAMEMAPPINGA
    psz_old_path : PSTR
    psz_new_path : PSTR
    cch_old_path : Int32
    cch_new_path : Int32
  end
  struct SHNAMEMAPPINGW
    psz_old_path : LibC::LPWSTR
    psz_new_path : LibC::LPWSTR
    cch_old_path : Int32
    cch_new_path : Int32
  end
  struct SHELLEXECUTEINFOA
    cb_size : UInt32
    f_mask : UInt32
    hwnd : HANDLE
    lp_verb : PSTR
    lp_file : PSTR
    lp_parameters : PSTR
    lp_directory : PSTR
    n_show : Int32
    h_inst_app : HINSTANCE
    lp_id_list : Void*
    lp_class : PSTR
    hkey_class : HKEY
    dw_hot_key : UInt32
    anonymous : SHELLEXECUTEINFOA_Anonymous_e__Union
    h_process : LibC::HANDLE
  end
  struct SHELLEXECUTEINFOW
    cb_size : UInt32
    f_mask : UInt32
    hwnd : HANDLE
    lp_verb : LibC::LPWSTR
    lp_file : LibC::LPWSTR
    lp_parameters : LibC::LPWSTR
    lp_directory : LibC::LPWSTR
    n_show : Int32
    h_inst_app : HINSTANCE
    lp_id_list : Void*
    lp_class : LibC::LPWSTR
    hkey_class : HKEY
    dw_hot_key : UInt32
    anonymous : SHELLEXECUTEINFOW_Anonymous_e__Union
    h_process : LibC::HANDLE
  end
  struct SHCREATEPROCESSINFOW
    cb_size : UInt32
    f_mask : UInt32
    hwnd : HANDLE
    psz_file : LibC::LPWSTR
    psz_parameters : LibC::LPWSTR
    psz_current_directory : LibC::LPWSTR
    h_user_token : LibC::HANDLE
    lp_process_attributes : SECURITY_ATTRIBUTES*
    lp_thread_attributes : SECURITY_ATTRIBUTES*
    b_inherit_handles : LibC::BOOL
    dw_creation_flags : UInt32
    lp_startup_info : STARTUPINFOW*
    lp_process_information : PROCESS_INFORMATION*
  end
  struct ASSOCIATIONELEMENT
    ac : ASSOCCLASS
    hk_class : HKEY
    psz_class : LibC::LPWSTR
  end
  struct SHQUERYRBINFO
    cb_size : UInt32
    i64_size : Int64
    i64_num_items : Int64
  end
  struct NOTIFYICONDATAA
    cb_size : UInt32
    h_wnd : HANDLE
    u_id : UInt32
    u_flags : NOTIFY_ICON_DATA_FLAGS
    u_callback_message : UInt32
    h_icon : HANDLE
    sz_tip : CHAR[128]*
    dw_state : UInt32
    dw_state_mask : UInt32
    sz_info : CHAR[256]*
    anonymous : NOTIFYICONDATAA_Anonymous_e__Union
    sz_info_title : CHAR[64]*
    dw_info_flags : UInt32
    guid_item : Guid
    h_balloon_icon : HANDLE
  end
  struct NOTIFYICONDATAW
    cb_size : UInt32
    h_wnd : HANDLE
    u_id : UInt32
    u_flags : NOTIFY_ICON_DATA_FLAGS
    u_callback_message : UInt32
    h_icon : HANDLE
    sz_tip : Char[128]*
    dw_state : UInt32
    dw_state_mask : UInt32
    sz_info : Char[256]*
    anonymous : NOTIFYICONDATAW_Anonymous_e__Union
    sz_info_title : Char[64]*
    dw_info_flags : UInt32
    guid_item : Guid
    h_balloon_icon : HANDLE
  end
  struct NOTIFYICONIDENTIFIER
    cb_size : UInt32
    h_wnd : HANDLE
    u_id : UInt32
    guid_item : Guid
  end
  struct SHFILEINFOA
    h_icon : HANDLE
    i_icon : Int32
    dw_attributes : UInt32
    sz_display_name : CHAR[260]*
    sz_type_name : CHAR[80]*
  end
  struct SHFILEINFOW
    h_icon : HANDLE
    i_icon : Int32
    dw_attributes : UInt32
    sz_display_name : Char[260]*
    sz_type_name : Char[80]*
  end
  struct SHSTOCKICONINFO
    cb_size : UInt32
    h_icon : HANDLE
    i_sys_image_index : Int32
    i_icon : Int32
    sz_path : Char[260]*
  end
  struct OPEN_PRINTER_PROPS_INFOA
    dw_size : UInt32
    psz_sheet_name : PSTR
    u_sheet_index : UInt32
    dw_flags : UInt32
    b_modal : LibC::BOOL
  end
  struct OPEN_PRINTER_PROPS_INFOW
    dw_size : UInt32
    psz_sheet_name : LibC::LPWSTR
    u_sheet_index : UInt32
    dw_flags : UInt32
    b_modal : LibC::BOOL
  end
  struct NC_ADDRESS
    p_addr_info : NC_ADDRESS_NET_ADDRESS_INFO*
    port_number : UInt16
    prefix_length : UInt8
  end
  struct PARSEDURLA
    cb_size : UInt32
    psz_protocol : PSTR
    cch_protocol : UInt32
    psz_suffix : PSTR
    cch_suffix : UInt32
    n_scheme : UInt32
  end
  struct PARSEDURLW
    cb_size : UInt32
    psz_protocol : LibC::LPWSTR
    cch_protocol : UInt32
    psz_suffix : LibC::LPWSTR
    cch_suffix : UInt32
    n_scheme : UInt32
  end
  struct QITAB
    piid : Guid*
    dw_offset : UInt32
  end
  struct DLLVERSIONINFO
    cb_size : UInt32
    dw_major_version : UInt32
    dw_minor_version : UInt32
    dw_build_number : UInt32
    dw_platform_id : UInt32
  end
  struct DLLVERSIONINFO2
    info1 : DLLVERSIONINFO
    dw_flags : UInt32
    ull_version : UInt64
  end
  struct APPINFODATA
    cb_size : UInt32
    dw_mask : UInt32
    psz_display_name : LibC::LPWSTR
    psz_version : LibC::LPWSTR
    psz_publisher : LibC::LPWSTR
    psz_product_id : LibC::LPWSTR
    psz_registered_owner : LibC::LPWSTR
    psz_registered_company : LibC::LPWSTR
    psz_language : LibC::LPWSTR
    psz_support_url : LibC::LPWSTR
    psz_support_telephone : LibC::LPWSTR
    psz_help_link : LibC::LPWSTR
    psz_install_location : LibC::LPWSTR
    psz_install_source : LibC::LPWSTR
    psz_install_date : LibC::LPWSTR
    psz_contact : LibC::LPWSTR
    psz_comments : LibC::LPWSTR
    psz_image : LibC::LPWSTR
    psz_readme_url : LibC::LPWSTR
    psz_update_info_url : LibC::LPWSTR
  end
  struct SLOWAPPINFO
    ull_size : UInt64
    ft_last_used : FILETIME
    i_times_used : Int32
    psz_image : LibC::LPWSTR
  end
  struct PUBAPPINFO
    cb_size : UInt32
    dw_mask : UInt32
    psz_source : LibC::LPWSTR
    st_assigned : SYSTEMTIME
    st_published : SYSTEMTIME
    st_scheduled : SYSTEMTIME
    st_expire : SYSTEMTIME
  end
  struct CREDENTIAL_PROVIDER_FIELD_DESCRIPTOR
    dw_field_id : UInt32
    cpft : CREDENTIAL_PROVIDER_FIELD_TYPE
    psz_label : LibC::LPWSTR
    guid_field_type : Guid
  end
  struct CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION
    ul_authentication_package : UInt32
    clsid_credential_provider : Guid
    cb_serialization : UInt32
    rgb_serialization : UInt8*
  end
  struct SYNCMGR_CONFLICT_ID_INFO
    pblob_id : BYTE_BLOB*
    pblob_extra : BYTE_BLOB*
  end
  struct CONFIRM_CONFLICT_ITEM
    p_shell_item : IShellItem2
    psz_original_name : LibC::LPWSTR
    psz_alternate_name : LibC::LPWSTR
    psz_location_short : LibC::LPWSTR
    psz_location_full : LibC::LPWSTR
    n_type : SYNCMGR_CONFLICT_ITEM_TYPE
  end
  struct CONFIRM_CONFLICT_RESULT_INFO
    psz_new_name : LibC::LPWSTR
    i_item_index : UInt32
  end
  struct WTS_THUMBNAILID
    rgb_key : UInt8[16]*
  end
  struct SYNCMGRPROGRESSITEM
    cb_size : UInt32
    mask : UInt32
    lpc_status_text : LibC::LPWSTR
    dw_status_type : UInt32
    i_prog_value : Int32
    i_max_value : Int32
  end
  struct SYNCMGRLOGERRORINFO
    cb_size : UInt32
    mask : UInt32
    dw_sync_mgr_error_flags : UInt32
    error_id : Guid
    item_id : Guid
  end
  struct SYNCMGRITEM
    cb_size : UInt32
    dw_flags : UInt32
    item_id : Guid
    dw_item_state : UInt32
    h_icon : HANDLE
    wsz_item_name : Char[128]*
    ft_last_update : FILETIME
  end
  struct SYNCMGRHANDLERINFO
    cb_size : UInt32
    h_icon : HANDLE
    sync_mgr_handler_flags : UInt32
    wsz_handler_name : Char[32]*
  end
  struct WINDOWDATA
    dw_window_id : UInt32
    ui_cp : UInt32
    pidl : ITEMIDLIST*
    lpsz_url : LibC::LPWSTR
    lpsz_url_location : LibC::LPWSTR
    lpsz_title : LibC::LPWSTR
  end
  struct HLITEM
    u_hlid : UInt32
    pwz_friendly_name : LibC::LPWSTR
  end
  struct HLTBINFO
    u_dock_type : UInt32
    rc_tb_pos : RECT
  end
  struct HLBWINFO
    cb_size : UInt32
    grf_hlbwif : UInt32
    rc_frame_pos : RECT
    rc_doc_pos : RECT
    hltbinfo : HLTBINFO
  end
  struct BASEBROWSERDATAXP
    _hwnd : HANDLE
    _ptl : ITravelLog
    _phlf : IHlinkFrame
    _pauto_wb2 : IWebBrowser2
    _pauto_eds : IExpDispSupportXP
    _pauto_ss : IShellService
    _e_secure_lock_icon : Int32
    _bitfield : UInt32
    _u_activate_state : UInt32
    _pidl_view_state : ITEMIDLIST*
    _pct_view : IOleCommandTarget
    _pidl_cur : ITEMIDLIST*
    _psv : IShellView
    _psf : IShellFolder
    _hwnd_view : HANDLE
    _psz_title_cur : LibC::LPWSTR
    _pidl_pending : ITEMIDLIST*
    _psv_pending : IShellView
    _psf_pending : IShellFolder
    _hwnd_view_pending : HANDLE
    _psz_title_pending : LibC::LPWSTR
    _f_is_view_mshtml : LibC::BOOL
    _f_privacy_impacted : LibC::BOOL
    _clsid_view : Guid
    _clsid_view_pending : Guid
    _hwnd_frame : HANDLE
  end
  struct BASEBROWSERDATALH
    _hwnd : HANDLE
    _ptl : ITravelLog
    _phlf : IHlinkFrame
    _pauto_wb2 : IWebBrowser2
    _pauto_eds : IExpDispSupport
    _pauto_ss : IShellService
    _e_secure_lock_icon : Int32
    _bitfield : UInt32
    _u_activate_state : UInt32
    _pidl_view_state : ITEMIDLIST*
    _pct_view : IOleCommandTarget
    _pidl_cur : ITEMIDLIST*
    _psv : IShellView
    _psf : IShellFolder
    _hwnd_view : HANDLE
    _psz_title_cur : LibC::LPWSTR
    _pidl_pending : ITEMIDLIST*
    _psv_pending : IShellView
    _psf_pending : IShellFolder
    _hwnd_view_pending : HANDLE
    _psz_title_pending : LibC::LPWSTR
    _f_is_view_mshtml : LibC::BOOL
    _f_privacy_impacted : LibC::BOOL
    _clsid_view : Guid
    _clsid_view_pending : Guid
    _hwnd_frame : HANDLE
    _l_phishing_filter_status : Int32
  end
  struct FOLDERSETDATA
    _fs : FOLDERSETTINGS
    _vid_restore : Guid
    _dw_view_priority : UInt32
  end
  struct TOOLBARITEM
    ptbar : IDockingWindow
    rc_border_tool : RECT
    pwsz_item : LibC::LPWSTR
    f_show : LibC::BOOL
    h_mon : HMONITOR
  end
  struct CPLINFO
    id_icon : Int32
    id_name : Int32
    id_info : Int32
    l_data : LibC::IntPtrT
  end
  struct NEWCPLINFOA
    dw_size : UInt32
    dw_flags : UInt32
    dw_help_context : UInt32
    l_data : LibC::IntPtrT
    h_icon : HANDLE
    sz_name : CHAR[32]*
    sz_info : CHAR[64]*
    sz_help_file : CHAR[128]*
  end
  struct NEWCPLINFOW
    dw_size : UInt32
    dw_flags : UInt32
    dw_help_context : UInt32
    l_data : LibC::IntPtrT
    h_icon : HANDLE
    sz_name : Char[32]*
    sz_info : Char[64]*
    sz_help_file : Char[128]*
  end
  struct PROFILEINFOA
    dw_size : UInt32
    dw_flags : UInt32
    lp_user_name : PSTR
    lp_profile_path : PSTR
    lp_default_path : PSTR
    lp_server_name : PSTR
    lp_policy_path : PSTR
    h_profile : LibC::HANDLE
  end
  struct PROFILEINFOW
    dw_size : UInt32
    dw_flags : UInt32
    lp_user_name : LibC::LPWSTR
    lp_profile_path : LibC::LPWSTR
    lp_default_path : LibC::LPWSTR
    lp_server_name : LibC::LPWSTR
    lp_policy_path : LibC::LPWSTR
    h_profile : LibC::HANDLE
  end
  struct Urlinvokecommandinfoa
    dwcb_size : UInt32
    dw_flags : UInt32
    hwnd_parent : HANDLE
    pcsz_verb : PSTR
  end
  struct Urlinvokecommandinfow
    dwcb_size : UInt32
    dw_flags : UInt32
    hwnd_parent : HANDLE
    pcsz_verb : LibC::LPWSTR
  end


  struct INotifyReplicaVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    you_are_a_replica : UInt64
  end

  INotifyReplica_GUID = "99180163-da16-101a-935c-444553540000"
  IID_INotifyReplica = LibC::GUID.new(0x99180163_u32, 0xda16_u16, 0x101a_u16, StaticArray[0x93_u8, 0x5c_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
  struct INotifyReplica
    lpVtbl : INotifyReplicaVTbl*
  end

  struct IContextMenuVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    query_context_menu : UInt64
    invoke_command : UInt64
    get_command_string : UInt64
  end

  IContextMenu_GUID = "000214e4-0000-0000-c000-000000000046"
  IID_IContextMenu = LibC::GUID.new(0x214e4_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IContextMenu
    lpVtbl : IContextMenuVTbl*
  end

  struct IContextMenu2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    query_context_menu : UInt64
    invoke_command : UInt64
    get_command_string : UInt64
    handle_menu_msg : UInt64
  end

  IContextMenu2_GUID = "000214f4-0000-0000-c000-000000000046"
  IID_IContextMenu2 = LibC::GUID.new(0x214f4_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IContextMenu2
    lpVtbl : IContextMenu2VTbl*
  end

  struct IContextMenu3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    query_context_menu : UInt64
    invoke_command : UInt64
    get_command_string : UInt64
    handle_menu_msg : UInt64
    handle_menu_msg2 : UInt64
  end

  IContextMenu3_GUID = "bcfce0a0-ec17-11d0-8d10-00a0c90f2719"
  IID_IContextMenu3 = LibC::GUID.new(0xbcfce0a0_u32, 0xec17_u16, 0x11d0_u16, StaticArray[0x8d_u8, 0x10_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xf_u8, 0x27_u8, 0x19_u8])
  struct IContextMenu3
    lpVtbl : IContextMenu3VTbl*
  end

  struct IExecuteCommandVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_key_state : UInt64
    set_parameters : UInt64
    set_position : UInt64
    set_show_window : UInt64
    set_no_show_ui : UInt64
    set_directory : UInt64
    execute : UInt64
  end

  IExecuteCommand_GUID = "7f9185b0-cb92-43c5-80a9-92277a4f7b54"
  IID_IExecuteCommand = LibC::GUID.new(0x7f9185b0_u32, 0xcb92_u16, 0x43c5_u16, StaticArray[0x80_u8, 0xa9_u8, 0x92_u8, 0x27_u8, 0x7a_u8, 0x4f_u8, 0x7b_u8, 0x54_u8])
  struct IExecuteCommand
    lpVtbl : IExecuteCommandVTbl*
  end

  struct IPersistFolderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_class_id : UInt64
    initialize : UInt64
  end

  IPersistFolder_GUID = "000214ea-0000-0000-c000-000000000046"
  IID_IPersistFolder = LibC::GUID.new(0x214ea_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IPersistFolder
    lpVtbl : IPersistFolderVTbl*
  end

  struct IRunnableTaskVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    run : UInt64
    kill : UInt64
    suspend : UInt64
    resume : UInt64
    is_running : UInt64
  end

  IRunnableTask_GUID = "85788d00-6807-11d0-b810-00c04fd706ec"
  IID_IRunnableTask = LibC::GUID.new(0x85788d00_u32, 0x6807_u16, 0x11d0_u16, StaticArray[0xb8_u8, 0x10_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x6_u8, 0xec_u8])
  struct IRunnableTask
    lpVtbl : IRunnableTaskVTbl*
  end

  struct IShellTaskSchedulerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_task : UInt64
    remove_tasks : UInt64
    count_tasks : UInt64
    status : UInt64
  end

  IShellTaskScheduler_GUID = "6ccb7be0-6807-11d0-b810-00c04fd706ec"
  IID_IShellTaskScheduler = LibC::GUID.new(0x6ccb7be0_u32, 0x6807_u16, 0x11d0_u16, StaticArray[0xb8_u8, 0x10_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x6_u8, 0xec_u8])
  struct IShellTaskScheduler
    lpVtbl : IShellTaskSchedulerVTbl*
  end

  struct IPersistFolder2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_class_id : UInt64
    initialize : UInt64
    get_cur_folder : UInt64
  end

  IPersistFolder2_GUID = "1ac3d9f0-175c-11d1-95be-00609797ea4f"
  IID_IPersistFolder2 = LibC::GUID.new(0x1ac3d9f0_u32, 0x175c_u16, 0x11d1_u16, StaticArray[0x95_u8, 0xbe_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0x97_u8, 0xea_u8, 0x4f_u8])
  struct IPersistFolder2
    lpVtbl : IPersistFolder2VTbl*
  end

  struct IPersistFolder3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_class_id : UInt64
    initialize : UInt64
    get_cur_folder : UInt64
    initialize_ex : UInt64
    get_folder_target_info : UInt64
  end

  IPersistFolder3_GUID = "cef04fdf-fe72-11d2-87a5-00c04f6837cf"
  IID_IPersistFolder3 = LibC::GUID.new(0xcef04fdf_u32, 0xfe72_u16, 0x11d2_u16, StaticArray[0x87_u8, 0xa5_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x68_u8, 0x37_u8, 0xcf_u8])
  struct IPersistFolder3
    lpVtbl : IPersistFolder3VTbl*
  end

  struct IPersistIDListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_class_id : UInt64
    set_id_list : UInt64
    get_id_list : UInt64
  end

  IPersistIDList_GUID = "1079acfc-29bd-11d3-8e0d-00c04f6837d5"
  IID_IPersistIDList = LibC::GUID.new(0x1079acfc_u32, 0x29bd_u16, 0x11d3_u16, StaticArray[0x8e_u8, 0xd_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x68_u8, 0x37_u8, 0xd5_u8])
  struct IPersistIDList
    lpVtbl : IPersistIDListVTbl*
  end

  struct IEnumIDListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumIDList_GUID = "000214f2-0000-0000-c000-000000000046"
  IID_IEnumIDList = LibC::GUID.new(0x214f2_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IEnumIDList
    lpVtbl : IEnumIDListVTbl*
  end

  struct IEnumFullIDListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumFullIDList_GUID = "d0191542-7954-4908-bc06-b2360bbe45ba"
  IID_IEnumFullIDList = LibC::GUID.new(0xd0191542_u32, 0x7954_u16, 0x4908_u16, StaticArray[0xbc_u8, 0x6_u8, 0xb2_u8, 0x36_u8, 0xb_u8, 0xbe_u8, 0x45_u8, 0xba_u8])
  struct IEnumFullIDList
    lpVtbl : IEnumFullIDListVTbl*
  end

  struct IFileSyncMergeHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    merge : UInt64
    show_resolve_conflict_ui_async : UInt64
  end

  IFileSyncMergeHandler_GUID = "d97b5aac-c792-433c-975d-35c4eadc7a9d"
  IID_IFileSyncMergeHandler = LibC::GUID.new(0xd97b5aac_u32, 0xc792_u16, 0x433c_u16, StaticArray[0x97_u8, 0x5d_u8, 0x35_u8, 0xc4_u8, 0xea_u8, 0xdc_u8, 0x7a_u8, 0x9d_u8])
  struct IFileSyncMergeHandler
    lpVtbl : IFileSyncMergeHandlerVTbl*
  end

  struct IObjectWithFolderEnumModeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_mode : UInt64
    get_mode : UInt64
  end

  IObjectWithFolderEnumMode_GUID = "6a9d9026-0e6e-464c-b000-42ecc07de673"
  IID_IObjectWithFolderEnumMode = LibC::GUID.new(0x6a9d9026_u32, 0xe6e_u16, 0x464c_u16, StaticArray[0xb0_u8, 0x0_u8, 0x42_u8, 0xec_u8, 0xc0_u8, 0x7d_u8, 0xe6_u8, 0x73_u8])
  struct IObjectWithFolderEnumMode
    lpVtbl : IObjectWithFolderEnumModeVTbl*
  end

  struct IParseAndCreateItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_item : UInt64
    get_item : UInt64
  end

  IParseAndCreateItem_GUID = "67efed0e-e827-4408-b493-78f3982b685c"
  IID_IParseAndCreateItem = LibC::GUID.new(0x67efed0e_u32, 0xe827_u16, 0x4408_u16, StaticArray[0xb4_u8, 0x93_u8, 0x78_u8, 0xf3_u8, 0x98_u8, 0x2b_u8, 0x68_u8, 0x5c_u8])
  struct IParseAndCreateItem
    lpVtbl : IParseAndCreateItemVTbl*
  end

  struct IShellFolderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    parse_display_name : UInt64
    enum_objects : UInt64
    bind_to_object : UInt64
    bind_to_storage : UInt64
    compare_i_ds : UInt64
    create_view_object : UInt64
    get_attributes_of : UInt64
    get_ui_object_of : UInt64
    get_display_name_of : UInt64
    set_name_of : UInt64
  end

  IShellFolder_GUID = "000214e6-0000-0000-c000-000000000046"
  IID_IShellFolder = LibC::GUID.new(0x214e6_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IShellFolder
    lpVtbl : IShellFolderVTbl*
  end

  struct IEnumExtraSearchVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumExtraSearch_GUID = "0e700be1-9db6-11d1-a1ce-00c04fd75d13"
  IID_IEnumExtraSearch = LibC::GUID.new(0xe700be1_u32, 0x9db6_u16, 0x11d1_u16, StaticArray[0xa1_u8, 0xce_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x5d_u8, 0x13_u8])
  struct IEnumExtraSearch
    lpVtbl : IEnumExtraSearchVTbl*
  end

  struct IShellFolder2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    parse_display_name : UInt64
    enum_objects : UInt64
    bind_to_object : UInt64
    bind_to_storage : UInt64
    compare_i_ds : UInt64
    create_view_object : UInt64
    get_attributes_of : UInt64
    get_ui_object_of : UInt64
    get_display_name_of : UInt64
    set_name_of : UInt64
    get_default_search_guid : UInt64
    enum_searches : UInt64
    get_default_column : UInt64
    get_default_column_state : UInt64
    get_details_ex : UInt64
    get_details_of : UInt64
    map_column_to_scid : UInt64
  end

  IShellFolder2_GUID = "93f2f68c-1d1b-11d3-a30e-00c04f79abd1"
  IID_IShellFolder2 = LibC::GUID.new(0x93f2f68c_u32, 0x1d1b_u16, 0x11d3_u16, StaticArray[0xa3_u8, 0xe_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x79_u8, 0xab_u8, 0xd1_u8])
  struct IShellFolder2
    lpVtbl : IShellFolder2VTbl*
  end

  struct IShellViewVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    translate_accelerator : UInt64
    enable_modeless : UInt64
    ui_activate : UInt64
    refresh : UInt64
    create_view_window : UInt64
    destroy_view_window : UInt64
    get_current_info : UInt64
    add_property_sheet_pages : UInt64
    save_view_state : UInt64
    select_item : UInt64
    get_item_object : UInt64
  end

  IShellView_GUID = "000214e3-0000-0000-c000-000000000046"
  IID_IShellView = LibC::GUID.new(0x214e3_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IShellView
    lpVtbl : IShellViewVTbl*
  end

  struct IShellView2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    translate_accelerator : UInt64
    enable_modeless : UInt64
    ui_activate : UInt64
    refresh : UInt64
    create_view_window : UInt64
    destroy_view_window : UInt64
    get_current_info : UInt64
    add_property_sheet_pages : UInt64
    save_view_state : UInt64
    select_item : UInt64
    get_item_object : UInt64
    get_view : UInt64
    create_view_window2 : UInt64
    handle_rename : UInt64
    select_and_position_item : UInt64
  end

  IShellView2_GUID = "88e39e80-3578-11cf-ae69-08002b2e1262"
  IID_IShellView2 = LibC::GUID.new(0x88e39e80_u32, 0x3578_u16, 0x11cf_u16, StaticArray[0xae_u8, 0x69_u8, 0x8_u8, 0x0_u8, 0x2b_u8, 0x2e_u8, 0x12_u8, 0x62_u8])
  struct IShellView2
    lpVtbl : IShellView2VTbl*
  end

  struct IFolderViewVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_current_view_mode : UInt64
    set_current_view_mode : UInt64
    get_folder : UInt64
    item : UInt64
    item_count : UInt64
    items : UInt64
    get_selection_marked_item : UInt64
    get_focused_item : UInt64
    get_item_position : UInt64
    get_spacing : UInt64
    get_default_spacing : UInt64
    get_auto_arrange : UInt64
    select_item : UInt64
    select_and_position_items : UInt64
  end

  IFolderView_GUID = "cde725b0-ccc9-4519-917e-325d72fab4ce"
  IID_IFolderView = LibC::GUID.new(0xcde725b0_u32, 0xccc9_u16, 0x4519_u16, StaticArray[0x91_u8, 0x7e_u8, 0x32_u8, 0x5d_u8, 0x72_u8, 0xfa_u8, 0xb4_u8, 0xce_u8])
  struct IFolderView
    lpVtbl : IFolderViewVTbl*
  end

  struct IFolderView2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_current_view_mode : UInt64
    set_current_view_mode : UInt64
    get_folder : UInt64
    item : UInt64
    item_count : UInt64
    items : UInt64
    get_selection_marked_item : UInt64
    get_focused_item : UInt64
    get_item_position : UInt64
    get_spacing : UInt64
    get_default_spacing : UInt64
    get_auto_arrange : UInt64
    select_item : UInt64
    select_and_position_items : UInt64
    set_group_by : UInt64
    get_group_by : UInt64
    set_view_property : UInt64
    get_view_property : UInt64
    set_tile_view_properties : UInt64
    set_extended_tile_view_properties : UInt64
    set_text : UInt64
    set_current_folder_flags : UInt64
    get_current_folder_flags : UInt64
    get_sort_column_count : UInt64
    set_sort_columns : UInt64
    get_sort_columns : UInt64
    get_item : UInt64
    get_visible_item : UInt64
    get_selected_item : UInt64
    get_selection : UInt64
    get_selection_state : UInt64
    invoke_verb_on_selection : UInt64
    set_view_mode_and_icon_size : UInt64
    get_view_mode_and_icon_size : UInt64
    set_group_subset_count : UInt64
    get_group_subset_count : UInt64
    set_redraw : UInt64
    is_move_in_same_folder : UInt64
    do_rename : UInt64
  end

  IFolderView2_GUID = "1af3a467-214f-4298-908e-06b03e0b39f9"
  IID_IFolderView2 = LibC::GUID.new(0x1af3a467_u32, 0x214f_u16, 0x4298_u16, StaticArray[0x90_u8, 0x8e_u8, 0x6_u8, 0xb0_u8, 0x3e_u8, 0xb_u8, 0x39_u8, 0xf9_u8])
  struct IFolderView2
    lpVtbl : IFolderView2VTbl*
  end

  struct IFolderViewSettingsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_column_property_list : UInt64
    get_group_by_property : UInt64
    get_view_mode : UInt64
    get_icon_size : UInt64
    get_folder_flags : UInt64
    get_sort_columns : UInt64
    get_group_subset_count : UInt64
  end

  IFolderViewSettings_GUID = "ae8c987d-8797-4ed3-be72-2a47dd938db0"
  IID_IFolderViewSettings = LibC::GUID.new(0xae8c987d_u32, 0x8797_u16, 0x4ed3_u16, StaticArray[0xbe_u8, 0x72_u8, 0x2a_u8, 0x47_u8, 0xdd_u8, 0x93_u8, 0x8d_u8, 0xb0_u8])
  struct IFolderViewSettings
    lpVtbl : IFolderViewSettingsVTbl*
  end

  struct IInitializeNetworkFolderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
  end

  IInitializeNetworkFolder_GUID = "6e0f9881-42a8-4f2a-97f8-8af4e026d92d"
  IID_IInitializeNetworkFolder = LibC::GUID.new(0x6e0f9881_u32, 0x42a8_u16, 0x4f2a_u16, StaticArray[0x97_u8, 0xf8_u8, 0x8a_u8, 0xf4_u8, 0xe0_u8, 0x26_u8, 0xd9_u8, 0x2d_u8])
  struct IInitializeNetworkFolder
    lpVtbl : IInitializeNetworkFolderVTbl*
  end

  struct INetworkFolderInternalVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_resource_display_type : UInt64
    get_id_list : UInt64
    get_provider : UInt64
  end

  INetworkFolderInternal_GUID = "ceb38218-c971-47bb-a703-f0bc99ccdb81"
  IID_INetworkFolderInternal = LibC::GUID.new(0xceb38218_u32, 0xc971_u16, 0x47bb_u16, StaticArray[0xa7_u8, 0x3_u8, 0xf0_u8, 0xbc_u8, 0x99_u8, 0xcc_u8, 0xdb_u8, 0x81_u8])
  struct INetworkFolderInternal
    lpVtbl : INetworkFolderInternalVTbl*
  end

  struct IPreviewHandlerVisualsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_background_color : UInt64
    set_font : UInt64
    set_text_color : UInt64
  end

  IPreviewHandlerVisuals_GUID = "196bf9a5-b346-4ef0-aa1e-5dcdb76768b1"
  IID_IPreviewHandlerVisuals = LibC::GUID.new(0x196bf9a5_u32, 0xb346_u16, 0x4ef0_u16, StaticArray[0xaa_u8, 0x1e_u8, 0x5d_u8, 0xcd_u8, 0xb7_u8, 0x67_u8, 0x68_u8, 0xb1_u8])
  struct IPreviewHandlerVisuals
    lpVtbl : IPreviewHandlerVisualsVTbl*
  end

  struct ICommDlgBrowserVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_default_command : UInt64
    on_state_change : UInt64
    include_object : UInt64
  end

  ICommDlgBrowser_GUID = "000214f1-0000-0000-c000-000000000046"
  IID_ICommDlgBrowser = LibC::GUID.new(0x214f1_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct ICommDlgBrowser
    lpVtbl : ICommDlgBrowserVTbl*
  end

  struct ICommDlgBrowser2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_default_command : UInt64
    on_state_change : UInt64
    include_object : UInt64
    notify : UInt64
    get_default_menu_text : UInt64
    get_view_flags : UInt64
  end

  ICommDlgBrowser2_GUID = "10339516-2894-11d2-9039-00c04f8eeb3e"
  IID_ICommDlgBrowser2 = LibC::GUID.new(0x10339516_u32, 0x2894_u16, 0x11d2_u16, StaticArray[0x90_u8, 0x39_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xeb_u8, 0x3e_u8])
  struct ICommDlgBrowser2
    lpVtbl : ICommDlgBrowser2VTbl*
  end

  struct IColumnManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_column_info : UInt64
    get_column_info : UInt64
    get_column_count : UInt64
    get_columns : UInt64
    set_columns : UInt64
  end

  IColumnManager_GUID = "d8ec27bb-3f3b-4042-b10a-4acfd924d453"
  IID_IColumnManager = LibC::GUID.new(0xd8ec27bb_u32, 0x3f3b_u16, 0x4042_u16, StaticArray[0xb1_u8, 0xa_u8, 0x4a_u8, 0xcf_u8, 0xd9_u8, 0x24_u8, 0xd4_u8, 0x53_u8])
  struct IColumnManager
    lpVtbl : IColumnManagerVTbl*
  end

  struct IFolderFilterSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_filter : UInt64
  end

  IFolderFilterSite_GUID = "c0a651f5-b48b-11d2-b5ed-006097c686f6"
  IID_IFolderFilterSite = LibC::GUID.new(0xc0a651f5_u32, 0xb48b_u16, 0x11d2_u16, StaticArray[0xb5_u8, 0xed_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xc6_u8, 0x86_u8, 0xf6_u8])
  struct IFolderFilterSite
    lpVtbl : IFolderFilterSiteVTbl*
  end

  struct IFolderFilterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    should_show : UInt64
    get_enum_flags : UInt64
  end

  IFolderFilter_GUID = "9cc22886-dc8e-11d2-b1d0-00c04f8eeb3e"
  IID_IFolderFilter = LibC::GUID.new(0x9cc22886_u32, 0xdc8e_u16, 0x11d2_u16, StaticArray[0xb1_u8, 0xd0_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xeb_u8, 0x3e_u8])
  struct IFolderFilter
    lpVtbl : IFolderFilterVTbl*
  end

  struct IInputObjectSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_focus_change_is : UInt64
  end

  IInputObjectSite_GUID = "f1db8392-7331-11d0-8c99-00a0c92dbfe8"
  IID_IInputObjectSite = LibC::GUID.new(0xf1db8392_u32, 0x7331_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0x99_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
  struct IInputObjectSite
    lpVtbl : IInputObjectSiteVTbl*
  end

  struct IInputObjectVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    ui_activate_io : UInt64
    has_focus_io : UInt64
    translate_accelerator_io : UInt64
  end

  IInputObject_GUID = "68284faa-6a48-11d0-8c78-00c04fd918b4"
  IID_IInputObject = LibC::GUID.new(0x68284faa_u32, 0x6a48_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0x78_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xb4_u8])
  struct IInputObject
    lpVtbl : IInputObjectVTbl*
  end

  struct IInputObject2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    ui_activate_io : UInt64
    has_focus_io : UInt64
    translate_accelerator_io : UInt64
    translate_accelerator_global : UInt64
  end

  IInputObject2_GUID = "6915c085-510b-44cd-94af-28dfa56cf92b"
  IID_IInputObject2 = LibC::GUID.new(0x6915c085_u32, 0x510b_u16, 0x44cd_u16, StaticArray[0x94_u8, 0xaf_u8, 0x28_u8, 0xdf_u8, 0xa5_u8, 0x6c_u8, 0xf9_u8, 0x2b_u8])
  struct IInputObject2
    lpVtbl : IInputObject2VTbl*
  end

  struct IShellIconVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_icon_of : UInt64
  end

  IShellIcon_GUID = "000214e5-0000-0000-c000-000000000046"
  IID_IShellIcon = LibC::GUID.new(0x214e5_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IShellIcon
    lpVtbl : IShellIconVTbl*
  end

  struct IShellBrowserVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    insert_menus_sb : UInt64
    set_menu_sb : UInt64
    remove_menus_sb : UInt64
    set_status_text_sb : UInt64
    enable_modeless_sb : UInt64
    translate_accelerator_sb : UInt64
    browse_object : UInt64
    get_view_state_stream : UInt64
    get_control_window : UInt64
    send_control_msg : UInt64
    query_active_shell_view : UInt64
    on_view_window_active : UInt64
    set_toolbar_items : UInt64
  end

  IShellBrowser_GUID = "000214e2-0000-0000-c000-000000000046"
  IID_IShellBrowser = LibC::GUID.new(0x214e2_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IShellBrowser
    lpVtbl : IShellBrowserVTbl*
  end

  struct IProfferServiceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    proffer_service : UInt64
    revoke_service : UInt64
  end

  IProfferService_GUID = "cb728b20-f786-11ce-92ad-00aa00a74cd0"
  IID_IProfferService = LibC::GUID.new(0xcb728b20_u32, 0xf786_u16, 0x11ce_u16, StaticArray[0x92_u8, 0xad_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xa7_u8, 0x4c_u8, 0xd0_u8])
  struct IProfferService
    lpVtbl : IProfferServiceVTbl*
  end

  struct IGetServiceIdsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_service_ids : UInt64
  end

  IGetServiceIds_GUID = "4a073526-6103-4e21-b7bc-f519d1524e5d"
  IID_IGetServiceIds = LibC::GUID.new(0x4a073526_u32, 0x6103_u16, 0x4e21_u16, StaticArray[0xb7_u8, 0xbc_u8, 0xf5_u8, 0x19_u8, 0xd1_u8, 0x52_u8, 0x4e_u8, 0x5d_u8])
  struct IGetServiceIds
    lpVtbl : IGetServiceIdsVTbl*
  end

  struct IShellItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    bind_to_handler : UInt64
    get_parent : UInt64
    get_display_name : UInt64
    get_attributes : UInt64
    compare : UInt64
  end

  IShellItem_GUID = "43826d1e-e718-42ee-bc55-a1e261c37bfe"
  IID_IShellItem = LibC::GUID.new(0x43826d1e_u32, 0xe718_u16, 0x42ee_u16, StaticArray[0xbc_u8, 0x55_u8, 0xa1_u8, 0xe2_u8, 0x61_u8, 0xc3_u8, 0x7b_u8, 0xfe_u8])
  struct IShellItem
    lpVtbl : IShellItemVTbl*
  end

  struct IShellItem2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    bind_to_handler : UInt64
    get_parent : UInt64
    get_display_name : UInt64
    get_attributes : UInt64
    compare : UInt64
    get_property_store : UInt64
    get_property_store_with_create_object : UInt64
    get_property_store_for_keys : UInt64
    get_property_description_list : UInt64
    update : UInt64
    get_property : UInt64
    get_clsid : UInt64
    get_file_time : UInt64
    get_int32 : UInt64
    get_string : UInt64
    get_u_int32 : UInt64
    get_u_int64 : UInt64
    get_bool : UInt64
  end

  IShellItem2_GUID = "7e9fb0d3-919f-4307-ab2e-9b1860310c93"
  IID_IShellItem2 = LibC::GUID.new(0x7e9fb0d3_u32, 0x919f_u16, 0x4307_u16, StaticArray[0xab_u8, 0x2e_u8, 0x9b_u8, 0x18_u8, 0x60_u8, 0x31_u8, 0xc_u8, 0x93_u8])
  struct IShellItem2
    lpVtbl : IShellItem2VTbl*
  end

  struct IShellItemImageFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_image : UInt64
  end

  IShellItemImageFactory_GUID = "bcc18b79-ba16-442f-80c4-8a59c30c463b"
  IID_IShellItemImageFactory = LibC::GUID.new(0xbcc18b79_u32, 0xba16_u16, 0x442f_u16, StaticArray[0x80_u8, 0xc4_u8, 0x8a_u8, 0x59_u8, 0xc3_u8, 0xc_u8, 0x46_u8, 0x3b_u8])
  struct IShellItemImageFactory
    lpVtbl : IShellItemImageFactoryVTbl*
  end

  struct IEnumShellItemsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumShellItems_GUID = "70629033-e363-4a28-a567-0db78006e6d7"
  IID_IEnumShellItems = LibC::GUID.new(0x70629033_u32, 0xe363_u16, 0x4a28_u16, StaticArray[0xa5_u8, 0x67_u8, 0xd_u8, 0xb7_u8, 0x80_u8, 0x6_u8, 0xe6_u8, 0xd7_u8])
  struct IEnumShellItems
    lpVtbl : IEnumShellItemsVTbl*
  end

  struct ITransferAdviseSinkVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    update_progress : UInt64
    update_transfer_state : UInt64
    confirm_overwrite : UInt64
    confirm_encryption_loss : UInt64
    file_failure : UInt64
    sub_stream_failure : UInt64
    property_failure : UInt64
  end

  ITransferAdviseSink_GUID = "d594d0d8-8da7-457b-b3b4-ce5dbaac0b88"
  IID_ITransferAdviseSink = LibC::GUID.new(0xd594d0d8_u32, 0x8da7_u16, 0x457b_u16, StaticArray[0xb3_u8, 0xb4_u8, 0xce_u8, 0x5d_u8, 0xba_u8, 0xac_u8, 0xb_u8, 0x88_u8])
  struct ITransferAdviseSink
    lpVtbl : ITransferAdviseSinkVTbl*
  end

  struct ITransferSourceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    advise : UInt64
    unadvise : UInt64
    set_properties : UInt64
    open_item : UInt64
    move_item : UInt64
    recycle_item : UInt64
    remove_item : UInt64
    rename_item : UInt64
    link_item : UInt64
    apply_properties_to_item : UInt64
    get_default_destination_name : UInt64
    enter_folder : UInt64
    leave_folder : UInt64
  end

  ITransferSource_GUID = "00adb003-bde9-45c6-8e29-d09f9353e108"
  IID_ITransferSource = LibC::GUID.new(0xadb003_u32, 0xbde9_u16, 0x45c6_u16, StaticArray[0x8e_u8, 0x29_u8, 0xd0_u8, 0x9f_u8, 0x93_u8, 0x53_u8, 0xe1_u8, 0x8_u8])
  struct ITransferSource
    lpVtbl : ITransferSourceVTbl*
  end

  struct IEnumResourcesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumResources_GUID = "2dd81fe3-a83c-4da9-a330-47249d345ba1"
  IID_IEnumResources = LibC::GUID.new(0x2dd81fe3_u32, 0xa83c_u16, 0x4da9_u16, StaticArray[0xa3_u8, 0x30_u8, 0x47_u8, 0x24_u8, 0x9d_u8, 0x34_u8, 0x5b_u8, 0xa1_u8])
  struct IEnumResources
    lpVtbl : IEnumResourcesVTbl*
  end

  struct IShellItemResourcesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_attributes : UInt64
    get_size : UInt64
    get_times : UInt64
    set_times : UInt64
    get_resource_description : UInt64
    enum_resources : UInt64
    supports_resource : UInt64
    open_resource : UInt64
    create_resource : UInt64
    mark_for_delete : UInt64
  end

  IShellItemResources_GUID = "ff5693be-2ce0-4d48-b5c5-40817d1acdb9"
  IID_IShellItemResources = LibC::GUID.new(0xff5693be_u32, 0x2ce0_u16, 0x4d48_u16, StaticArray[0xb5_u8, 0xc5_u8, 0x40_u8, 0x81_u8, 0x7d_u8, 0x1a_u8, 0xcd_u8, 0xb9_u8])
  struct IShellItemResources
    lpVtbl : IShellItemResourcesVTbl*
  end

  struct ITransferDestinationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    advise : UInt64
    unadvise : UInt64
    create_item : UInt64
  end

  ITransferDestination_GUID = "48addd32-3ca5-4124-abe3-b5a72531b207"
  IID_ITransferDestination = LibC::GUID.new(0x48addd32_u32, 0x3ca5_u16, 0x4124_u16, StaticArray[0xab_u8, 0xe3_u8, 0xb5_u8, 0xa7_u8, 0x25_u8, 0x31_u8, 0xb2_u8, 0x7_u8])
  struct ITransferDestination
    lpVtbl : ITransferDestinationVTbl*
  end

  struct IFileOperationProgressSinkVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    start_operations : UInt64
    finish_operations : UInt64
    pre_rename_item : UInt64
    post_rename_item : UInt64
    pre_move_item : UInt64
    post_move_item : UInt64
    pre_copy_item : UInt64
    post_copy_item : UInt64
    pre_delete_item : UInt64
    post_delete_item : UInt64
    pre_new_item : UInt64
    post_new_item : UInt64
    update_progress : UInt64
    reset_timer : UInt64
    pause_timer : UInt64
    resume_timer : UInt64
  end

  IFileOperationProgressSink_GUID = "04b0f1a7-9490-44bc-96e1-4296a31252e2"
  IID_IFileOperationProgressSink = LibC::GUID.new(0x4b0f1a7_u32, 0x9490_u16, 0x44bc_u16, StaticArray[0x96_u8, 0xe1_u8, 0x42_u8, 0x96_u8, 0xa3_u8, 0x12_u8, 0x52_u8, 0xe2_u8])
  struct IFileOperationProgressSink
    lpVtbl : IFileOperationProgressSinkVTbl*
  end

  struct IShellItemArrayVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    bind_to_handler : UInt64
    get_property_store : UInt64
    get_property_description_list : UInt64
    get_attributes : UInt64
    get_count : UInt64
    get_item_at : UInt64
    enum_items : UInt64
  end

  IShellItemArray_GUID = "b63ea76d-1f85-456f-a19c-48159efa858b"
  IID_IShellItemArray = LibC::GUID.new(0xb63ea76d_u32, 0x1f85_u16, 0x456f_u16, StaticArray[0xa1_u8, 0x9c_u8, 0x48_u8, 0x15_u8, 0x9e_u8, 0xfa_u8, 0x85_u8, 0x8b_u8])
  struct IShellItemArray
    lpVtbl : IShellItemArrayVTbl*
  end

  struct IInitializeWithItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
  end

  IInitializeWithItem_GUID = "7f73be3f-fb79-493c-a6c7-7ee14e245841"
  IID_IInitializeWithItem = LibC::GUID.new(0x7f73be3f_u32, 0xfb79_u16, 0x493c_u16, StaticArray[0xa6_u8, 0xc7_u8, 0x7e_u8, 0xe1_u8, 0x4e_u8, 0x24_u8, 0x58_u8, 0x41_u8])
  struct IInitializeWithItem
    lpVtbl : IInitializeWithItemVTbl*
  end

  struct IObjectWithSelectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_selection : UInt64
    get_selection : UInt64
  end

  IObjectWithSelection_GUID = "1c9cd5bb-98e9-4491-a60f-31aacc72b83c"
  IID_IObjectWithSelection = LibC::GUID.new(0x1c9cd5bb_u32, 0x98e9_u16, 0x4491_u16, StaticArray[0xa6_u8, 0xf_u8, 0x31_u8, 0xaa_u8, 0xcc_u8, 0x72_u8, 0xb8_u8, 0x3c_u8])
  struct IObjectWithSelection
    lpVtbl : IObjectWithSelectionVTbl*
  end

  struct IObjectWithBackReferencesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    remove_back_references : UInt64
  end

  IObjectWithBackReferences_GUID = "321a6a6a-d61f-4bf3-97ae-14be2986bb36"
  IID_IObjectWithBackReferences = LibC::GUID.new(0x321a6a6a_u32, 0xd61f_u16, 0x4bf3_u16, StaticArray[0x97_u8, 0xae_u8, 0x14_u8, 0xbe_u8, 0x29_u8, 0x86_u8, 0xbb_u8, 0x36_u8])
  struct IObjectWithBackReferences
    lpVtbl : IObjectWithBackReferencesVTbl*
  end

  struct ICategoryProviderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    can_categorize_on_scid : UInt64
    get_default_category : UInt64
    get_category_for_scid : UInt64
    enum_categories : UInt64
    get_category_name : UInt64
    create_category : UInt64
  end

  ICategoryProvider_GUID = "9af64809-5864-4c26-a720-c1f78c086ee3"
  IID_ICategoryProvider = LibC::GUID.new(0x9af64809_u32, 0x5864_u16, 0x4c26_u16, StaticArray[0xa7_u8, 0x20_u8, 0xc1_u8, 0xf7_u8, 0x8c_u8, 0x8_u8, 0x6e_u8, 0xe3_u8])
  struct ICategoryProvider
    lpVtbl : ICategoryProviderVTbl*
  end

  struct ICategorizerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_description : UInt64
    get_category : UInt64
    get_category_info : UInt64
    compare_category : UInt64
  end

  ICategorizer_GUID = "a3b14589-9174-49a8-89a3-06a1ae2b9ba7"
  IID_ICategorizer = LibC::GUID.new(0xa3b14589_u32, 0x9174_u16, 0x49a8_u16, StaticArray[0x89_u8, 0xa3_u8, 0x6_u8, 0xa1_u8, 0xae_u8, 0x2b_u8, 0x9b_u8, 0xa7_u8])
  struct ICategorizer
    lpVtbl : ICategorizerVTbl*
  end

  struct IDropTargetHelperVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    drag_enter : UInt64
    drag_leave : UInt64
    drag_over : UInt64
    drop : UInt64
    show : UInt64
  end

  IDropTargetHelper_GUID = "4657278b-411b-11d2-839a-00c04fd918d0"
  IID_IDropTargetHelper = LibC::GUID.new(0x4657278b_u32, 0x411b_u16, 0x11d2_u16, StaticArray[0x83_u8, 0x9a_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])
  struct IDropTargetHelper
    lpVtbl : IDropTargetHelperVTbl*
  end

  struct IDragSourceHelperVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize_from_bitmap : UInt64
    initialize_from_window : UInt64
  end

  IDragSourceHelper_GUID = "de5bf786-477a-11d2-839d-00c04fd918d0"
  IID_IDragSourceHelper = LibC::GUID.new(0xde5bf786_u32, 0x477a_u16, 0x11d2_u16, StaticArray[0x83_u8, 0x9d_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])
  struct IDragSourceHelper
    lpVtbl : IDragSourceHelperVTbl*
  end

  struct IShellLinkAVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_path : UInt64
    get_id_list : UInt64
    set_id_list : UInt64
    get_description : UInt64
    set_description : UInt64
    get_working_directory : UInt64
    set_working_directory : UInt64
    get_arguments : UInt64
    set_arguments : UInt64
    get_hotkey : UInt64
    set_hotkey : UInt64
    get_show_cmd : UInt64
    set_show_cmd : UInt64
    get_icon_location : UInt64
    set_icon_location : UInt64
    set_relative_path : UInt64
    resolve : UInt64
    set_path : UInt64
  end

  IShellLinkA_GUID = "000214ee-0000-0000-c000-000000000046"
  IID_IShellLinkA = LibC::GUID.new(0x214ee_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IShellLinkA
    lpVtbl : IShellLinkAVTbl*
  end

  struct IShellLinkWVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_path : UInt64
    get_id_list : UInt64
    set_id_list : UInt64
    get_description : UInt64
    set_description : UInt64
    get_working_directory : UInt64
    set_working_directory : UInt64
    get_arguments : UInt64
    set_arguments : UInt64
    get_hotkey : UInt64
    set_hotkey : UInt64
    get_show_cmd : UInt64
    set_show_cmd : UInt64
    get_icon_location : UInt64
    set_icon_location : UInt64
    set_relative_path : UInt64
    resolve : UInt64
    set_path : UInt64
  end

  IShellLinkW_GUID = "000214f9-0000-0000-c000-000000000046"
  IID_IShellLinkW = LibC::GUID.new(0x214f9_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IShellLinkW
    lpVtbl : IShellLinkWVTbl*
  end

  struct IShellLinkDataListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_data_block : UInt64
    copy_data_block : UInt64
    remove_data_block : UInt64
    get_flags : UInt64
    set_flags : UInt64
  end

  IShellLinkDataList_GUID = "45e2b4ae-b1c3-11d0-b92f-00a0c90312e1"
  IID_IShellLinkDataList = LibC::GUID.new(0x45e2b4ae_u32, 0xb1c3_u16, 0x11d0_u16, StaticArray[0xb9_u8, 0x2f_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x3_u8, 0x12_u8, 0xe1_u8])
  struct IShellLinkDataList
    lpVtbl : IShellLinkDataListVTbl*
  end

  struct IResolveShellLinkVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    resolve_shell_link : UInt64
  end

  IResolveShellLink_GUID = "5cd52983-9449-11d2-963a-00c04f79adf0"
  IID_IResolveShellLink = LibC::GUID.new(0x5cd52983_u32, 0x9449_u16, 0x11d2_u16, StaticArray[0x96_u8, 0x3a_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x79_u8, 0xad_u8, 0xf0_u8])
  struct IResolveShellLink
    lpVtbl : IResolveShellLinkVTbl*
  end

  struct IActionProgressDialogVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    stop : UInt64
  end

  IActionProgressDialog_GUID = "49ff1172-eadc-446d-9285-156453a6431c"
  IID_IActionProgressDialog = LibC::GUID.new(0x49ff1172_u32, 0xeadc_u16, 0x446d_u16, StaticArray[0x92_u8, 0x85_u8, 0x15_u8, 0x64_u8, 0x53_u8, 0xa6_u8, 0x43_u8, 0x1c_u8])
  struct IActionProgressDialog
    lpVtbl : IActionProgressDialogVTbl*
  end

  struct IActionProgressVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    begin_ : UInt64
    update_progress : UInt64
    update_text : UInt64
    query_cancel : UInt64
    reset_cancel : UInt64
    end_ : UInt64
  end

  IActionProgress_GUID = "49ff1173-eadc-446d-9285-156453a6431c"
  IID_IActionProgress = LibC::GUID.new(0x49ff1173_u32, 0xeadc_u16, 0x446d_u16, StaticArray[0x92_u8, 0x85_u8, 0x15_u8, 0x64_u8, 0x53_u8, 0xa6_u8, 0x43_u8, 0x1c_u8])
  struct IActionProgress
    lpVtbl : IActionProgressVTbl*
  end

  struct IShellExtInitVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
  end

  IShellExtInit_GUID = "000214e8-0000-0000-c000-000000000046"
  IID_IShellExtInit = LibC::GUID.new(0x214e8_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IShellExtInit
    lpVtbl : IShellExtInitVTbl*
  end

  struct IShellPropSheetExtVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_pages : UInt64
    replace_page : UInt64
  end

  IShellPropSheetExt_GUID = "000214e9-0000-0000-c000-000000000046"
  IID_IShellPropSheetExt = LibC::GUID.new(0x214e9_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IShellPropSheetExt
    lpVtbl : IShellPropSheetExtVTbl*
  end

  struct IRemoteComputerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
  end

  IRemoteComputer_GUID = "000214fe-0000-0000-c000-000000000046"
  IID_IRemoteComputer = LibC::GUID.new(0x214fe_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IRemoteComputer
    lpVtbl : IRemoteComputerVTbl*
  end

  struct IQueryContinueVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    query_continue : UInt64
  end

  IQueryContinue_GUID = "7307055c-b24a-486b-9f25-163e597a28a9"
  IID_IQueryContinue = LibC::GUID.new(0x7307055c_u32, 0xb24a_u16, 0x486b_u16, StaticArray[0x9f_u8, 0x25_u8, 0x16_u8, 0x3e_u8, 0x59_u8, 0x7a_u8, 0x28_u8, 0xa9_u8])
  struct IQueryContinue
    lpVtbl : IQueryContinueVTbl*
  end

  struct IObjectWithCancelEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_cancel_event : UInt64
  end

  IObjectWithCancelEvent_GUID = "f279b885-0ae9-4b85-ac06-ddecf9408941"
  IID_IObjectWithCancelEvent = LibC::GUID.new(0xf279b885_u32, 0xae9_u16, 0x4b85_u16, StaticArray[0xac_u8, 0x6_u8, 0xdd_u8, 0xec_u8, 0xf9_u8, 0x40_u8, 0x89_u8, 0x41_u8])
  struct IObjectWithCancelEvent
    lpVtbl : IObjectWithCancelEventVTbl*
  end

  struct IUserNotificationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_balloon_info : UInt64
    set_balloon_retry : UInt64
    set_icon_info : UInt64
    show : UInt64
    play_sound : UInt64
  end

  IUserNotification_GUID = "ba9711ba-5893-4787-a7e1-41277151550b"
  IID_IUserNotification = LibC::GUID.new(0xba9711ba_u32, 0x5893_u16, 0x4787_u16, StaticArray[0xa7_u8, 0xe1_u8, 0x41_u8, 0x27_u8, 0x71_u8, 0x51_u8, 0x55_u8, 0xb_u8])
  struct IUserNotification
    lpVtbl : IUserNotificationVTbl*
  end

  struct IItemNameLimitsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_valid_characters : UInt64
    get_max_length : UInt64
  end

  IItemNameLimits_GUID = "1df0d7f1-b267-4d28-8b10-12e23202a5c4"
  IID_IItemNameLimits = LibC::GUID.new(0x1df0d7f1_u32, 0xb267_u16, 0x4d28_u16, StaticArray[0x8b_u8, 0x10_u8, 0x12_u8, 0xe2_u8, 0x32_u8, 0x2_u8, 0xa5_u8, 0xc4_u8])
  struct IItemNameLimits
    lpVtbl : IItemNameLimitsVTbl*
  end

  struct ISearchFolderItemFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_display_name : UInt64
    set_folder_type_id : UInt64
    set_folder_logical_view_mode : UInt64
    set_icon_size : UInt64
    set_visible_columns : UInt64
    set_sort_columns : UInt64
    set_group_column : UInt64
    set_stacks : UInt64
    set_scope : UInt64
    set_condition : UInt64
    get_shell_item : UInt64
    get_id_list : UInt64
  end

  ISearchFolderItemFactory_GUID = "a0ffbc28-5482-4366-be27-3e81e78e06c2"
  IID_ISearchFolderItemFactory = LibC::GUID.new(0xa0ffbc28_u32, 0x5482_u16, 0x4366_u16, StaticArray[0xbe_u8, 0x27_u8, 0x3e_u8, 0x81_u8, 0xe7_u8, 0x8e_u8, 0x6_u8, 0xc2_u8])
  struct ISearchFolderItemFactory
    lpVtbl : ISearchFolderItemFactoryVTbl*
  end

  struct IExtractImageVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_location : UInt64
    extract : UInt64
  end

  IExtractImage_GUID = "bb2e617c-0920-11d1-9a0b-00c04fc2d6c1"
  IID_IExtractImage = LibC::GUID.new(0xbb2e617c_u32, 0x920_u16, 0x11d1_u16, StaticArray[0x9a_u8, 0xb_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc2_u8, 0xd6_u8, 0xc1_u8])
  struct IExtractImage
    lpVtbl : IExtractImageVTbl*
  end

  struct IExtractImage2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_location : UInt64
    extract : UInt64
    get_date_stamp : UInt64
  end

  IExtractImage2_GUID = "953bb1ee-93b4-11d1-98a3-00c04fb687da"
  IID_IExtractImage2 = LibC::GUID.new(0x953bb1ee_u32, 0x93b4_u16, 0x11d1_u16, StaticArray[0x98_u8, 0xa3_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb6_u8, 0x87_u8, 0xda_u8])
  struct IExtractImage2
    lpVtbl : IExtractImage2VTbl*
  end

  struct IThumbnailHandlerFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_thumbnail_handler : UInt64
  end

  IThumbnailHandlerFactory_GUID = "e35b4b2e-00da-4bc1-9f13-38bc11f5d417"
  IID_IThumbnailHandlerFactory = LibC::GUID.new(0xe35b4b2e_u32, 0xda_u16, 0x4bc1_u16, StaticArray[0x9f_u8, 0x13_u8, 0x38_u8, 0xbc_u8, 0x11_u8, 0xf5_u8, 0xd4_u8, 0x17_u8])
  struct IThumbnailHandlerFactory
    lpVtbl : IThumbnailHandlerFactoryVTbl*
  end

  struct IParentAndItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_parent_and_item : UInt64
    get_parent_and_item : UInt64
  end

  IParentAndItem_GUID = "b3a4b685-b685-4805-99d9-5dead2873236"
  IID_IParentAndItem = LibC::GUID.new(0xb3a4b685_u32, 0xb685_u16, 0x4805_u16, StaticArray[0x99_u8, 0xd9_u8, 0x5d_u8, 0xea_u8, 0xd2_u8, 0x87_u8, 0x32_u8, 0x36_u8])
  struct IParentAndItem
    lpVtbl : IParentAndItemVTbl*
  end

  struct IDockingWindowVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    show_dw : UInt64
    close_dw : UInt64
    resize_border_dw : UInt64
  end

  IDockingWindow_GUID = "012dd920-7b26-11d0-8ca9-00a0c92dbfe8"
  IID_IDockingWindow = LibC::GUID.new(0x12dd920_u32, 0x7b26_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0xa9_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
  struct IDockingWindow
    lpVtbl : IDockingWindowVTbl*
  end

  struct IDeskBandVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    show_dw : UInt64
    close_dw : UInt64
    resize_border_dw : UInt64
    get_band_info : UInt64
  end

  IDeskBand_GUID = "eb0fe172-1a3a-11d0-89b3-00a0c90a90ac"
  IID_IDeskBand = LibC::GUID.new(0xeb0fe172_u32, 0x1a3a_u16, 0x11d0_u16, StaticArray[0x89_u8, 0xb3_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x90_u8, 0xac_u8])
  struct IDeskBand
    lpVtbl : IDeskBandVTbl*
  end

  struct IDeskBandInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_default_band_width : UInt64
  end

  IDeskBandInfo_GUID = "77e425fc-cbf9-4307-ba6a-bb5727745661"
  IID_IDeskBandInfo = LibC::GUID.new(0x77e425fc_u32, 0xcbf9_u16, 0x4307_u16, StaticArray[0xba_u8, 0x6a_u8, 0xbb_u8, 0x57_u8, 0x27_u8, 0x74_u8, 0x56_u8, 0x61_u8])
  struct IDeskBandInfo
    lpVtbl : IDeskBandInfoVTbl*
  end

  struct ITaskbarListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    hr_init : UInt64
    add_tab : UInt64
    delete_tab : UInt64
    activate_tab : UInt64
    set_active_alt : UInt64
  end

  ITaskbarList_GUID = "56fdf342-fd6d-11d0-958a-006097c9a090"
  IID_ITaskbarList = LibC::GUID.new(0x56fdf342_u32, 0xfd6d_u16, 0x11d0_u16, StaticArray[0x95_u8, 0x8a_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xc9_u8, 0xa0_u8, 0x90_u8])
  struct ITaskbarList
    lpVtbl : ITaskbarListVTbl*
  end

  struct ITaskbarList2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    hr_init : UInt64
    add_tab : UInt64
    delete_tab : UInt64
    activate_tab : UInt64
    set_active_alt : UInt64
    mark_fullscreen_window : UInt64
  end

  ITaskbarList2_GUID = "602d4995-b13a-429b-a66e-1935e44f4317"
  IID_ITaskbarList2 = LibC::GUID.new(0x602d4995_u32, 0xb13a_u16, 0x429b_u16, StaticArray[0xa6_u8, 0x6e_u8, 0x19_u8, 0x35_u8, 0xe4_u8, 0x4f_u8, 0x43_u8, 0x17_u8])
  struct ITaskbarList2
    lpVtbl : ITaskbarList2VTbl*
  end

  struct ITaskbarList3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    hr_init : UInt64
    add_tab : UInt64
    delete_tab : UInt64
    activate_tab : UInt64
    set_active_alt : UInt64
    mark_fullscreen_window : UInt64
    set_progress_value : UInt64
    set_progress_state : UInt64
    register_tab : UInt64
    unregister_tab : UInt64
    set_tab_order : UInt64
    set_tab_active : UInt64
    thumb_bar_add_buttons : UInt64
    thumb_bar_update_buttons : UInt64
    thumb_bar_set_image_list : UInt64
    set_overlay_icon : UInt64
    set_thumbnail_tooltip : UInt64
    set_thumbnail_clip : UInt64
  end

  ITaskbarList3_GUID = "ea1afb91-9e28-4b86-90e9-9e9f8a5eefaf"
  IID_ITaskbarList3 = LibC::GUID.new(0xea1afb91_u32, 0x9e28_u16, 0x4b86_u16, StaticArray[0x90_u8, 0xe9_u8, 0x9e_u8, 0x9f_u8, 0x8a_u8, 0x5e_u8, 0xef_u8, 0xaf_u8])
  struct ITaskbarList3
    lpVtbl : ITaskbarList3VTbl*
  end

  struct ITaskbarList4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    hr_init : UInt64
    add_tab : UInt64
    delete_tab : UInt64
    activate_tab : UInt64
    set_active_alt : UInt64
    mark_fullscreen_window : UInt64
    set_progress_value : UInt64
    set_progress_state : UInt64
    register_tab : UInt64
    unregister_tab : UInt64
    set_tab_order : UInt64
    set_tab_active : UInt64
    thumb_bar_add_buttons : UInt64
    thumb_bar_update_buttons : UInt64
    thumb_bar_set_image_list : UInt64
    set_overlay_icon : UInt64
    set_thumbnail_tooltip : UInt64
    set_thumbnail_clip : UInt64
    set_tab_properties : UInt64
  end

  ITaskbarList4_GUID = "c43dc798-95d1-4bea-9030-bb99e2983a1a"
  IID_ITaskbarList4 = LibC::GUID.new(0xc43dc798_u32, 0x95d1_u16, 0x4bea_u16, StaticArray[0x90_u8, 0x30_u8, 0xbb_u8, 0x99_u8, 0xe2_u8, 0x98_u8, 0x3a_u8, 0x1a_u8])
  struct ITaskbarList4
    lpVtbl : ITaskbarList4VTbl*
  end

  struct IExplorerBrowserEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_navigation_pending : UInt64
    on_view_created : UInt64
    on_navigation_complete : UInt64
    on_navigation_failed : UInt64
  end

  IExplorerBrowserEvents_GUID = "361bbdc7-e6ee-4e13-be58-58e2240c810f"
  IID_IExplorerBrowserEvents = LibC::GUID.new(0x361bbdc7_u32, 0xe6ee_u16, 0x4e13_u16, StaticArray[0xbe_u8, 0x58_u8, 0x58_u8, 0xe2_u8, 0x24_u8, 0xc_u8, 0x81_u8, 0xf_u8])
  struct IExplorerBrowserEvents
    lpVtbl : IExplorerBrowserEventsVTbl*
  end

  struct IExplorerBrowserVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    destroy : UInt64
    set_rect : UInt64
    set_property_bag : UInt64
    set_empty_text : UInt64
    set_folder_settings : UInt64
    advise : UInt64
    unadvise : UInt64
    set_options : UInt64
    get_options : UInt64
    browse_to_id_list : UInt64
    browse_to_object : UInt64
    fill_from_object : UInt64
    remove_all : UInt64
    get_current_view : UInt64
  end

  IExplorerBrowser_GUID = "dfd3b6b5-c10c-4be9-85f6-a66969f402f6"
  IID_IExplorerBrowser = LibC::GUID.new(0xdfd3b6b5_u32, 0xc10c_u16, 0x4be9_u16, StaticArray[0x85_u8, 0xf6_u8, 0xa6_u8, 0x69_u8, 0x69_u8, 0xf4_u8, 0x2_u8, 0xf6_u8])
  struct IExplorerBrowser
    lpVtbl : IExplorerBrowserVTbl*
  end

  struct IEnumObjectsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumObjects_GUID = "2c1c7e2e-2d0e-4059-831e-1e6f82335c2e"
  IID_IEnumObjects = LibC::GUID.new(0x2c1c7e2e_u32, 0x2d0e_u16, 0x4059_u16, StaticArray[0x83_u8, 0x1e_u8, 0x1e_u8, 0x6f_u8, 0x82_u8, 0x33_u8, 0x5c_u8, 0x2e_u8])
  struct IEnumObjects
    lpVtbl : IEnumObjectsVTbl*
  end

  struct IOperationsProgressDialogVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    start_progress_dialog : UInt64
    stop_progress_dialog : UInt64
    set_operation : UInt64
    set_mode : UInt64
    update_progress : UInt64
    update_locations : UInt64
    reset_timer : UInt64
    pause_timer : UInt64
    resume_timer : UInt64
    get_milliseconds : UInt64
    get_operation_status : UInt64
  end

  IOperationsProgressDialog_GUID = "0c9fb851-e5c9-43eb-a370-f0677b13874c"
  IID_IOperationsProgressDialog = LibC::GUID.new(0xc9fb851_u32, 0xe5c9_u16, 0x43eb_u16, StaticArray[0xa3_u8, 0x70_u8, 0xf0_u8, 0x67_u8, 0x7b_u8, 0x13_u8, 0x87_u8, 0x4c_u8])
  struct IOperationsProgressDialog
    lpVtbl : IOperationsProgressDialogVTbl*
  end

  struct IIOCancelInformationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_cancel_information : UInt64
    get_cancel_information : UInt64
  end

  IIOCancelInformation_GUID = "f5b0bf81-8cb5-4b1b-9449-1a159e0c733c"
  IID_IIOCancelInformation = LibC::GUID.new(0xf5b0bf81_u32, 0x8cb5_u16, 0x4b1b_u16, StaticArray[0x94_u8, 0x49_u8, 0x1a_u8, 0x15_u8, 0x9e_u8, 0xc_u8, 0x73_u8, 0x3c_u8])
  struct IIOCancelInformation
    lpVtbl : IIOCancelInformationVTbl*
  end

  struct IFileOperationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    advise : UInt64
    unadvise : UInt64
    set_operation_flags : UInt64
    set_progress_message : UInt64
    set_progress_dialog : UInt64
    set_properties : UInt64
    set_owner_window : UInt64
    apply_properties_to_item : UInt64
    apply_properties_to_items : UInt64
    rename_item : UInt64
    rename_items : UInt64
    move_item : UInt64
    move_items : UInt64
    copy_item : UInt64
    copy_items : UInt64
    delete_item : UInt64
    delete_items : UInt64
    new_item : UInt64
    perform_operations : UInt64
    get_any_operations_aborted : UInt64
  end

  IFileOperation_GUID = "947aab5f-0a5c-4c13-b4d6-4bf7836fc9f8"
  IID_IFileOperation = LibC::GUID.new(0x947aab5f_u32, 0xa5c_u16, 0x4c13_u16, StaticArray[0xb4_u8, 0xd6_u8, 0x4b_u8, 0xf7_u8, 0x83_u8, 0x6f_u8, 0xc9_u8, 0xf8_u8])
  struct IFileOperation
    lpVtbl : IFileOperationVTbl*
  end

  struct IFileOperation2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    advise : UInt64
    unadvise : UInt64
    set_operation_flags : UInt64
    set_progress_message : UInt64
    set_progress_dialog : UInt64
    set_properties : UInt64
    set_owner_window : UInt64
    apply_properties_to_item : UInt64
    apply_properties_to_items : UInt64
    rename_item : UInt64
    rename_items : UInt64
    move_item : UInt64
    move_items : UInt64
    copy_item : UInt64
    copy_items : UInt64
    delete_item : UInt64
    delete_items : UInt64
    new_item : UInt64
    perform_operations : UInt64
    get_any_operations_aborted : UInt64
    set_operation_flags2 : UInt64
  end

  IFileOperation2_GUID = "cd8f23c1-8f61-4916-909d-55bdd0918753"
  IID_IFileOperation2 = LibC::GUID.new(0xcd8f23c1_u32, 0x8f61_u16, 0x4916_u16, StaticArray[0x90_u8, 0x9d_u8, 0x55_u8, 0xbd_u8, 0xd0_u8, 0x91_u8, 0x87_u8, 0x53_u8])
  struct IFileOperation2
    lpVtbl : IFileOperation2VTbl*
  end

  struct IObjectProviderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    query_object : UInt64
  end

  IObjectProvider_GUID = "a6087428-3be3-4d73-b308-7c04a540bf1a"
  IID_IObjectProvider = LibC::GUID.new(0xa6087428_u32, 0x3be3_u16, 0x4d73_u16, StaticArray[0xb3_u8, 0x8_u8, 0x7c_u8, 0x4_u8, 0xa5_u8, 0x40_u8, 0xbf_u8, 0x1a_u8])
  struct IObjectProvider
    lpVtbl : IObjectProviderVTbl*
  end

  struct INamespaceWalkCBVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    found_item : UInt64
    enter_folder : UInt64
    leave_folder : UInt64
    initialize_progress_dialog : UInt64
  end

  INamespaceWalkCB_GUID = "d92995f8-cf5e-4a76-bf59-ead39ea2b97e"
  IID_INamespaceWalkCB = LibC::GUID.new(0xd92995f8_u32, 0xcf5e_u16, 0x4a76_u16, StaticArray[0xbf_u8, 0x59_u8, 0xea_u8, 0xd3_u8, 0x9e_u8, 0xa2_u8, 0xb9_u8, 0x7e_u8])
  struct INamespaceWalkCB
    lpVtbl : INamespaceWalkCBVTbl*
  end

  struct INamespaceWalkCB2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    found_item : UInt64
    enter_folder : UInt64
    leave_folder : UInt64
    initialize_progress_dialog : UInt64
    walk_complete : UInt64
  end

  INamespaceWalkCB2_GUID = "7ac7492b-c38e-438a-87db-68737844ff70"
  IID_INamespaceWalkCB2 = LibC::GUID.new(0x7ac7492b_u32, 0xc38e_u16, 0x438a_u16, StaticArray[0x87_u8, 0xdb_u8, 0x68_u8, 0x73_u8, 0x78_u8, 0x44_u8, 0xff_u8, 0x70_u8])
  struct INamespaceWalkCB2
    lpVtbl : INamespaceWalkCB2VTbl*
  end

  struct INamespaceWalkVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    walk : UInt64
    get_id_array_result : UInt64
  end

  INamespaceWalk_GUID = "57ced8a7-3f4a-432c-9350-30f24483f74f"
  IID_INamespaceWalk = LibC::GUID.new(0x57ced8a7_u32, 0x3f4a_u16, 0x432c_u16, StaticArray[0x93_u8, 0x50_u8, 0x30_u8, 0xf2_u8, 0x44_u8, 0x83_u8, 0xf7_u8, 0x4f_u8])
  struct INamespaceWalk
    lpVtbl : INamespaceWalkVTbl*
  end

  struct IBandSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_band : UInt64
    enum_bands : UInt64
    query_band : UInt64
    set_band_state : UInt64
    remove_band : UInt64
    get_band_object : UInt64
    set_band_site_info : UInt64
    get_band_site_info : UInt64
  end

  IBandSite_GUID = "4cf504b0-de96-11d0-8b3f-00a0c911e8e5"
  IID_IBandSite = LibC::GUID.new(0x4cf504b0_u32, 0xde96_u16, 0x11d0_u16, StaticArray[0x8b_u8, 0x3f_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x11_u8, 0xe8_u8, 0xe5_u8])
  struct IBandSite
    lpVtbl : IBandSiteVTbl*
  end

  struct IModalWindowVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show : UInt64
  end

  IModalWindow_GUID = "b4db1657-70d7-485e-8e3e-6fcb5a5c1802"
  IID_IModalWindow = LibC::GUID.new(0xb4db1657_u32, 0x70d7_u16, 0x485e_u16, StaticArray[0x8e_u8, 0x3e_u8, 0x6f_u8, 0xcb_u8, 0x5a_u8, 0x5c_u8, 0x18_u8, 0x2_u8])
  struct IModalWindow
    lpVtbl : IModalWindowVTbl*
  end

  struct IContextMenuSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    do_context_menu_popup : UInt64
  end

  IContextMenuSite_GUID = "0811aebe-0b87-4c54-9e72-548cf649016b"
  IID_IContextMenuSite = LibC::GUID.new(0x811aebe_u32, 0xb87_u16, 0x4c54_u16, StaticArray[0x9e_u8, 0x72_u8, 0x54_u8, 0x8c_u8, 0xf6_u8, 0x49_u8, 0x1_u8, 0x6b_u8])
  struct IContextMenuSite
    lpVtbl : IContextMenuSiteVTbl*
  end

  struct IMenuBandVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    is_menu_message : UInt64
    translate_menu_message : UInt64
  end

  IMenuBand_GUID = "568804cd-cbd7-11d0-9816-00c04fd91972"
  IID_IMenuBand = LibC::GUID.new(0x568804cd_u32, 0xcbd7_u16, 0x11d0_u16, StaticArray[0x98_u8, 0x16_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x19_u8, 0x72_u8])
  struct IMenuBand
    lpVtbl : IMenuBandVTbl*
  end

  struct IRegTreeItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_check_state : UInt64
    set_check_state : UInt64
  end

  IRegTreeItem_GUID = "a9521922-0812-4d44-9ec3-7fd38c726f3d"
  IID_IRegTreeItem = LibC::GUID.new(0xa9521922_u32, 0x812_u16, 0x4d44_u16, StaticArray[0x9e_u8, 0xc3_u8, 0x7f_u8, 0xd3_u8, 0x8c_u8, 0x72_u8, 0x6f_u8, 0x3d_u8])
  struct IRegTreeItem
    lpVtbl : IRegTreeItemVTbl*
  end

  struct IDeskBarVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    set_client : UInt64
    get_client : UInt64
    on_pos_rect_change_db : UInt64
  end

  IDeskBar_GUID = "eb0fe173-1a3a-11d0-89b3-00a0c90a90ac"
  IID_IDeskBar = LibC::GUID.new(0xeb0fe173_u32, 0x1a3a_u16, 0x11d0_u16, StaticArray[0x89_u8, 0xb3_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x90_u8, 0xac_u8])
  struct IDeskBar
    lpVtbl : IDeskBarVTbl*
  end

  struct IMenuPopupVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    set_client : UInt64
    get_client : UInt64
    on_pos_rect_change_db : UInt64
    popup : UInt64
    on_select : UInt64
    set_sub_menu : UInt64
  end

  IMenuPopup_GUID = "d1e7afeb-6a2e-11d0-8c78-00c04fd918b4"
  IID_IMenuPopup = LibC::GUID.new(0xd1e7afeb_u32, 0x6a2e_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0x78_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xb4_u8])
  struct IMenuPopup
    lpVtbl : IMenuPopupVTbl*
  end

  struct IFileIsInUseVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_app_name : UInt64
    get_usage : UInt64
    get_capabilities : UInt64
    get_switch_to_hwnd : UInt64
    close_file : UInt64
  end

  IFileIsInUse_GUID = "64a1cbf0-3a1a-4461-9158-376969693950"
  IID_IFileIsInUse = LibC::GUID.new(0x64a1cbf0_u32, 0x3a1a_u16, 0x4461_u16, StaticArray[0x91_u8, 0x58_u8, 0x37_u8, 0x69_u8, 0x69_u8, 0x69_u8, 0x39_u8, 0x50_u8])
  struct IFileIsInUse
    lpVtbl : IFileIsInUseVTbl*
  end

  struct IFileDialogEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_file_ok : UInt64
    on_folder_changing : UInt64
    on_folder_change : UInt64
    on_selection_change : UInt64
    on_share_violation : UInt64
    on_type_change : UInt64
    on_overwrite : UInt64
  end

  IFileDialogEvents_GUID = "973510db-7d7f-452b-8975-74a85828d354"
  IID_IFileDialogEvents = LibC::GUID.new(0x973510db_u32, 0x7d7f_u16, 0x452b_u16, StaticArray[0x89_u8, 0x75_u8, 0x74_u8, 0xa8_u8, 0x58_u8, 0x28_u8, 0xd3_u8, 0x54_u8])
  struct IFileDialogEvents
    lpVtbl : IFileDialogEventsVTbl*
  end

  struct IFileDialogVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show : UInt64
    set_file_types : UInt64
    set_file_type_index : UInt64
    get_file_type_index : UInt64
    advise : UInt64
    unadvise : UInt64
    set_options : UInt64
    get_options : UInt64
    set_default_folder : UInt64
    set_folder : UInt64
    get_folder : UInt64
    get_current_selection : UInt64
    set_file_name : UInt64
    get_file_name : UInt64
    set_title : UInt64
    set_ok_button_label : UInt64
    set_file_name_label : UInt64
    get_result : UInt64
    add_place : UInt64
    set_default_extension : UInt64
    close : UInt64
    set_client_guid : UInt64
    clear_client_data : UInt64
    set_filter : UInt64
  end

  IFileDialog_GUID = "42f85136-db7e-439c-85f1-e4075d135fc8"
  IID_IFileDialog = LibC::GUID.new(0x42f85136_u32, 0xdb7e_u16, 0x439c_u16, StaticArray[0x85_u8, 0xf1_u8, 0xe4_u8, 0x7_u8, 0x5d_u8, 0x13_u8, 0x5f_u8, 0xc8_u8])
  struct IFileDialog
    lpVtbl : IFileDialogVTbl*
  end

  struct IFileSaveDialogVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show : UInt64
    set_file_types : UInt64
    set_file_type_index : UInt64
    get_file_type_index : UInt64
    advise : UInt64
    unadvise : UInt64
    set_options : UInt64
    get_options : UInt64
    set_default_folder : UInt64
    set_folder : UInt64
    get_folder : UInt64
    get_current_selection : UInt64
    set_file_name : UInt64
    get_file_name : UInt64
    set_title : UInt64
    set_ok_button_label : UInt64
    set_file_name_label : UInt64
    get_result : UInt64
    add_place : UInt64
    set_default_extension : UInt64
    close : UInt64
    set_client_guid : UInt64
    clear_client_data : UInt64
    set_filter : UInt64
    set_save_as_item : UInt64
    set_properties : UInt64
    set_collected_properties : UInt64
    get_properties : UInt64
    apply_properties : UInt64
  end

  IFileSaveDialog_GUID = "84bccd23-5fde-4cdb-aea4-af64b83d78ab"
  IID_IFileSaveDialog = LibC::GUID.new(0x84bccd23_u32, 0x5fde_u16, 0x4cdb_u16, StaticArray[0xae_u8, 0xa4_u8, 0xaf_u8, 0x64_u8, 0xb8_u8, 0x3d_u8, 0x78_u8, 0xab_u8])
  struct IFileSaveDialog
    lpVtbl : IFileSaveDialogVTbl*
  end

  struct IFileOpenDialogVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show : UInt64
    set_file_types : UInt64
    set_file_type_index : UInt64
    get_file_type_index : UInt64
    advise : UInt64
    unadvise : UInt64
    set_options : UInt64
    get_options : UInt64
    set_default_folder : UInt64
    set_folder : UInt64
    get_folder : UInt64
    get_current_selection : UInt64
    set_file_name : UInt64
    get_file_name : UInt64
    set_title : UInt64
    set_ok_button_label : UInt64
    set_file_name_label : UInt64
    get_result : UInt64
    add_place : UInt64
    set_default_extension : UInt64
    close : UInt64
    set_client_guid : UInt64
    clear_client_data : UInt64
    set_filter : UInt64
    get_results : UInt64
    get_selected_items : UInt64
  end

  IFileOpenDialog_GUID = "d57c7288-d4ad-4768-be02-9d969532d960"
  IID_IFileOpenDialog = LibC::GUID.new(0xd57c7288_u32, 0xd4ad_u16, 0x4768_u16, StaticArray[0xbe_u8, 0x2_u8, 0x9d_u8, 0x96_u8, 0x95_u8, 0x32_u8, 0xd9_u8, 0x60_u8])
  struct IFileOpenDialog
    lpVtbl : IFileOpenDialogVTbl*
  end

  struct IFileDialogCustomizeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    enable_open_drop_down : UInt64
    add_menu : UInt64
    add_push_button : UInt64
    add_combo_box : UInt64
    add_radio_button_list : UInt64
    add_check_button : UInt64
    add_edit_box : UInt64
    add_separator : UInt64
    add_text : UInt64
    set_control_label : UInt64
    get_control_state : UInt64
    set_control_state : UInt64
    get_edit_box_text : UInt64
    set_edit_box_text : UInt64
    get_check_button_state : UInt64
    set_check_button_state : UInt64
    add_control_item : UInt64
    remove_control_item : UInt64
    remove_all_control_items : UInt64
    get_control_item_state : UInt64
    set_control_item_state : UInt64
    get_selected_control_item : UInt64
    set_selected_control_item : UInt64
    start_visual_group : UInt64
    end_visual_group : UInt64
    make_prominent : UInt64
    set_control_item_text : UInt64
  end

  IFileDialogCustomize_GUID = "e6fdd21a-163f-4975-9c8c-a69f1ba37034"
  IID_IFileDialogCustomize = LibC::GUID.new(0xe6fdd21a_u32, 0x163f_u16, 0x4975_u16, StaticArray[0x9c_u8, 0x8c_u8, 0xa6_u8, 0x9f_u8, 0x1b_u8, 0xa3_u8, 0x70_u8, 0x34_u8])
  struct IFileDialogCustomize
    lpVtbl : IFileDialogCustomizeVTbl*
  end

  struct IApplicationAssociationRegistrationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    query_current_default : UInt64
    query_app_is_default : UInt64
    query_app_is_default_all : UInt64
    set_app_as_default : UInt64
    set_app_as_default_all : UInt64
    clear_user_associations : UInt64
  end

  IApplicationAssociationRegistration_GUID = "4e530b0a-e611-4c77-a3ac-9031d022281b"
  IID_IApplicationAssociationRegistration = LibC::GUID.new(0x4e530b0a_u32, 0xe611_u16, 0x4c77_u16, StaticArray[0xa3_u8, 0xac_u8, 0x90_u8, 0x31_u8, 0xd0_u8, 0x22_u8, 0x28_u8, 0x1b_u8])
  struct IApplicationAssociationRegistration
    lpVtbl : IApplicationAssociationRegistrationVTbl*
  end

  struct IDelegateFolderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_item_alloc : UInt64
  end

  IDelegateFolder_GUID = "add8ba80-002b-11d0-8f0f-00c04fd7d062"
  IID_IDelegateFolder = LibC::GUID.new(0xadd8ba80_u32, 0x2b_u16, 0x11d0_u16, StaticArray[0x8f_u8, 0xf_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0xd0_u8, 0x62_u8])
  struct IDelegateFolder
    lpVtbl : IDelegateFolderVTbl*
  end

  struct IBrowserFrameOptionsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_frame_options : UInt64
  end

  IBrowserFrameOptions_GUID = "10df43c8-1dbe-11d3-8b34-006097df5bd4"
  IID_IBrowserFrameOptions = LibC::GUID.new(0x10df43c8_u32, 0x1dbe_u16, 0x11d3_u16, StaticArray[0x8b_u8, 0x34_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xdf_u8, 0x5b_u8, 0xd4_u8])
  struct IBrowserFrameOptions
    lpVtbl : IBrowserFrameOptionsVTbl*
  end

  struct INewWindowManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    evaluate_new_window : UInt64
  end

  INewWindowManager_GUID = "d2bc4c84-3f72-4a52-a604-7bcbf3982cbb"
  IID_INewWindowManager = LibC::GUID.new(0xd2bc4c84_u32, 0x3f72_u16, 0x4a52_u16, StaticArray[0xa6_u8, 0x4_u8, 0x7b_u8, 0xcb_u8, 0xf3_u8, 0x98_u8, 0x2c_u8, 0xbb_u8])
  struct INewWindowManager
    lpVtbl : INewWindowManagerVTbl*
  end

  struct IAttachmentExecuteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_client_title : UInt64
    set_client_guid : UInt64
    set_local_path : UInt64
    set_file_name : UInt64
    set_source : UInt64
    set_referrer : UInt64
    check_policy : UInt64
    prompt : UInt64
    save : UInt64
    execute : UInt64
    save_with_ui : UInt64
    clear_client_state : UInt64
  end

  IAttachmentExecute_GUID = "73db1241-1e85-4581-8e4f-a81e1d0f8c57"
  IID_IAttachmentExecute = LibC::GUID.new(0x73db1241_u32, 0x1e85_u16, 0x4581_u16, StaticArray[0x8e_u8, 0x4f_u8, 0xa8_u8, 0x1e_u8, 0x1d_u8, 0xf_u8, 0x8c_u8, 0x57_u8])
  struct IAttachmentExecute
    lpVtbl : IAttachmentExecuteVTbl*
  end

  struct IShellMenuCallbackVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    callback_sm : UInt64
  end

  IShellMenuCallback_GUID = "4ca300a1-9b8d-11d1-8b22-00c04fd918d0"
  IID_IShellMenuCallback = LibC::GUID.new(0x4ca300a1_u32, 0x9b8d_u16, 0x11d1_u16, StaticArray[0x8b_u8, 0x22_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])
  struct IShellMenuCallback
    lpVtbl : IShellMenuCallbackVTbl*
  end

  struct IShellMenuVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    get_menu_info : UInt64
    set_shell_folder : UInt64
    get_shell_folder : UInt64
    set_menu : UInt64
    get_menu : UInt64
    invalidate_item : UInt64
    get_state : UInt64
    set_menu_toolbar : UInt64
  end

  IShellMenu_GUID = "ee1f7637-e138-11d1-8379-00c04fd918d0"
  IID_IShellMenu = LibC::GUID.new(0xee1f7637_u32, 0xe138_u16, 0x11d1_u16, StaticArray[0x83_u8, 0x79_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])
  struct IShellMenu
    lpVtbl : IShellMenuVTbl*
  end

  struct IKnownFolderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_id : UInt64
    get_category : UInt64
    get_shell_item : UInt64
    get_path : UInt64
    set_path : UInt64
    get_id_list : UInt64
    get_folder_type : UInt64
    get_redirection_capabilities : UInt64
    get_folder_definition : UInt64
  end

  IKnownFolder_GUID = "3aa7af7e-9b36-420c-a8e3-f77d4674a488"
  IID_IKnownFolder = LibC::GUID.new(0x3aa7af7e_u32, 0x9b36_u16, 0x420c_u16, StaticArray[0xa8_u8, 0xe3_u8, 0xf7_u8, 0x7d_u8, 0x46_u8, 0x74_u8, 0xa4_u8, 0x88_u8])
  struct IKnownFolder
    lpVtbl : IKnownFolderVTbl*
  end

  struct IKnownFolderManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    folder_id_from_csidl : UInt64
    folder_id_to_csidl : UInt64
    get_folder_ids : UInt64
    get_folder : UInt64
    get_folder_by_name : UInt64
    register_folder : UInt64
    unregister_folder : UInt64
    find_folder_from_path : UInt64
    find_folder_from_id_list : UInt64
    redirect : UInt64
  end

  IKnownFolderManager_GUID = "8be2d872-86aa-4d47-b776-32cca40c7018"
  IID_IKnownFolderManager = LibC::GUID.new(0x8be2d872_u32, 0x86aa_u16, 0x4d47_u16, StaticArray[0xb7_u8, 0x76_u8, 0x32_u8, 0xcc_u8, 0xa4_u8, 0xc_u8, 0x70_u8, 0x18_u8])
  struct IKnownFolderManager
    lpVtbl : IKnownFolderManagerVTbl*
  end

  struct ISharingConfigurationManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_share : UInt64
    delete_share : UInt64
    share_exists : UInt64
    get_share_permissions : UInt64
    share_printers : UInt64
    stop_sharing_printers : UInt64
    are_printers_shared : UInt64
  end

  ISharingConfigurationManager_GUID = "b4cd448a-9c86-4466-9201-2e62105b87ae"
  IID_ISharingConfigurationManager = LibC::GUID.new(0xb4cd448a_u32, 0x9c86_u16, 0x4466_u16, StaticArray[0x92_u8, 0x1_u8, 0x2e_u8, 0x62_u8, 0x10_u8, 0x5b_u8, 0x87_u8, 0xae_u8])
  struct ISharingConfigurationManager
    lpVtbl : ISharingConfigurationManagerVTbl*
  end

  struct IRelatedItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_item_id_list : UInt64
    get_item : UInt64
  end

  IRelatedItem_GUID = "a73ce67a-8ab1-44f1-8d43-d2fcbf6b1cd0"
  IID_IRelatedItem = LibC::GUID.new(0xa73ce67a_u32, 0x8ab1_u16, 0x44f1_u16, StaticArray[0x8d_u8, 0x43_u8, 0xd2_u8, 0xfc_u8, 0xbf_u8, 0x6b_u8, 0x1c_u8, 0xd0_u8])
  struct IRelatedItem
    lpVtbl : IRelatedItemVTbl*
  end

  struct IIdentityNameVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_item_id_list : UInt64
    get_item : UInt64
  end

  IIdentityName_GUID = "7d903fca-d6f9-4810-8332-946c0177e247"
  IID_IIdentityName = LibC::GUID.new(0x7d903fca_u32, 0xd6f9_u16, 0x4810_u16, StaticArray[0x83_u8, 0x32_u8, 0x94_u8, 0x6c_u8, 0x1_u8, 0x77_u8, 0xe2_u8, 0x47_u8])
  struct IIdentityName
    lpVtbl : IIdentityNameVTbl*
  end

  struct IDelegateItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_item_id_list : UInt64
    get_item : UInt64
  end

  IDelegateItem_GUID = "3c5a1c94-c951-4cb7-bb6d-3b93f30cce93"
  IID_IDelegateItem = LibC::GUID.new(0x3c5a1c94_u32, 0xc951_u16, 0x4cb7_u16, StaticArray[0xbb_u8, 0x6d_u8, 0x3b_u8, 0x93_u8, 0xf3_u8, 0xc_u8, 0xce_u8, 0x93_u8])
  struct IDelegateItem
    lpVtbl : IDelegateItemVTbl*
  end

  struct ICurrentItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_item_id_list : UInt64
    get_item : UInt64
  end

  ICurrentItem_GUID = "240a7174-d653-4a1d-a6d3-d4943cfbfe3d"
  IID_ICurrentItem = LibC::GUID.new(0x240a7174_u32, 0xd653_u16, 0x4a1d_u16, StaticArray[0xa6_u8, 0xd3_u8, 0xd4_u8, 0x94_u8, 0x3c_u8, 0xfb_u8, 0xfe_u8, 0x3d_u8])
  struct ICurrentItem
    lpVtbl : ICurrentItemVTbl*
  end

  struct ITransferMediumItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_item_id_list : UInt64
    get_item : UInt64
  end

  ITransferMediumItem_GUID = "77f295d5-2d6f-4e19-b8ae-322f3e721ab5"
  IID_ITransferMediumItem = LibC::GUID.new(0x77f295d5_u32, 0x2d6f_u16, 0x4e19_u16, StaticArray[0xb8_u8, 0xae_u8, 0x32_u8, 0x2f_u8, 0x3e_u8, 0x72_u8, 0x1a_u8, 0xb5_u8])
  struct ITransferMediumItem
    lpVtbl : ITransferMediumItemVTbl*
  end

  struct IDisplayItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_item_id_list : UInt64
    get_item : UInt64
  end

  IDisplayItem_GUID = "c6fd5997-9f6b-4888-8703-94e80e8cde3f"
  IID_IDisplayItem = LibC::GUID.new(0xc6fd5997_u32, 0x9f6b_u16, 0x4888_u16, StaticArray[0x87_u8, 0x3_u8, 0x94_u8, 0xe8_u8, 0xe_u8, 0x8c_u8, 0xde_u8, 0x3f_u8])
  struct IDisplayItem
    lpVtbl : IDisplayItemVTbl*
  end

  struct IViewStateIdentityItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_item_id_list : UInt64
    get_item : UInt64
  end

  IViewStateIdentityItem_GUID = "9d264146-a94f-4195-9f9f-3bb12ce0c955"
  IID_IViewStateIdentityItem = LibC::GUID.new(0x9d264146_u32, 0xa94f_u16, 0x4195_u16, StaticArray[0x9f_u8, 0x9f_u8, 0x3b_u8, 0xb1_u8, 0x2c_u8, 0xe0_u8, 0xc9_u8, 0x55_u8])
  struct IViewStateIdentityItem
    lpVtbl : IViewStateIdentityItemVTbl*
  end

  struct IPreviewItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_item_id_list : UInt64
    get_item : UInt64
  end

  IPreviewItem_GUID = "36149969-0a8f-49c8-8b00-4aecb20222fb"
  IID_IPreviewItem = LibC::GUID.new(0x36149969_u32, 0xa8f_u16, 0x49c8_u16, StaticArray[0x8b_u8, 0x0_u8, 0x4a_u8, 0xec_u8, 0xb2_u8, 0x2_u8, 0x22_u8, 0xfb_u8])
  struct IPreviewItem
    lpVtbl : IPreviewItemVTbl*
  end

  struct IDestinationStreamFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_destination_stream : UInt64
  end

  IDestinationStreamFactory_GUID = "8a87781b-39a7-4a1f-aab3-a39b9c34a7d9"
  IID_IDestinationStreamFactory = LibC::GUID.new(0x8a87781b_u32, 0x39a7_u16, 0x4a1f_u16, StaticArray[0xaa_u8, 0xb3_u8, 0xa3_u8, 0x9b_u8, 0x9c_u8, 0x34_u8, 0xa7_u8, 0xd9_u8])
  struct IDestinationStreamFactory
    lpVtbl : IDestinationStreamFactoryVTbl*
  end

  struct ICreateProcessInputsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_create_flags : UInt64
    set_create_flags : UInt64
    add_create_flags : UInt64
    set_hot_key : UInt64
    add_startup_flags : UInt64
    set_title : UInt64
    set_environment_variable : UInt64
  end

  ICreateProcessInputs_GUID = "f6ef6140-e26f-4d82-bac4-e9ba5fd239a8"
  IID_ICreateProcessInputs = LibC::GUID.new(0xf6ef6140_u32, 0xe26f_u16, 0x4d82_u16, StaticArray[0xba_u8, 0xc4_u8, 0xe9_u8, 0xba_u8, 0x5f_u8, 0xd2_u8, 0x39_u8, 0xa8_u8])
  struct ICreateProcessInputs
    lpVtbl : ICreateProcessInputsVTbl*
  end

  struct ICreatingProcessVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_creating : UInt64
  end

  ICreatingProcess_GUID = "c2b937a9-3110-4398-8a56-f34c6342d244"
  IID_ICreatingProcess = LibC::GUID.new(0xc2b937a9_u32, 0x3110_u16, 0x4398_u16, StaticArray[0x8a_u8, 0x56_u8, 0xf3_u8, 0x4c_u8, 0x63_u8, 0x42_u8, 0xd2_u8, 0x44_u8])
  struct ICreatingProcess
    lpVtbl : ICreatingProcessVTbl*
  end

  struct ILaunchUIContextVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_associated_window : UInt64
    set_tab_grouping_preference : UInt64
  end

  ILaunchUIContext_GUID = "1791e8f6-21c7-4340-882a-a6a93e3fd73b"
  IID_ILaunchUIContext = LibC::GUID.new(0x1791e8f6_u32, 0x21c7_u16, 0x4340_u16, StaticArray[0x88_u8, 0x2a_u8, 0xa6_u8, 0xa9_u8, 0x3e_u8, 0x3f_u8, 0xd7_u8, 0x3b_u8])
  struct ILaunchUIContext
    lpVtbl : ILaunchUIContextVTbl*
  end

  struct ILaunchUIContextProviderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    update_context : UInt64
  end

  ILaunchUIContextProvider_GUID = "0d12c4c8-a3d9-4e24-94c1-0e20c5a956c4"
  IID_ILaunchUIContextProvider = LibC::GUID.new(0xd12c4c8_u32, 0xa3d9_u16, 0x4e24_u16, StaticArray[0x94_u8, 0xc1_u8, 0xe_u8, 0x20_u8, 0xc5_u8, 0xa9_u8, 0x56_u8, 0xc4_u8])
  struct ILaunchUIContextProvider
    lpVtbl : ILaunchUIContextProviderVTbl*
  end

  struct INewMenuClientVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    include_items : UInt64
    select_and_edit_item : UInt64
  end

  INewMenuClient_GUID = "dcb07fdc-3bb5-451c-90be-966644fed7b0"
  IID_INewMenuClient = LibC::GUID.new(0xdcb07fdc_u32, 0x3bb5_u16, 0x451c_u16, StaticArray[0x90_u8, 0xbe_u8, 0x96_u8, 0x66_u8, 0x44_u8, 0xfe_u8, 0xd7_u8, 0xb0_u8])
  struct INewMenuClient
    lpVtbl : INewMenuClientVTbl*
  end

  struct IInitializeWithBindCtxVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
  end

  IInitializeWithBindCtx_GUID = "71c0d2bc-726d-45cc-a6c0-2e31c1db2159"
  IID_IInitializeWithBindCtx = LibC::GUID.new(0x71c0d2bc_u32, 0x726d_u16, 0x45cc_u16, StaticArray[0xa6_u8, 0xc0_u8, 0x2e_u8, 0x31_u8, 0xc1_u8, 0xdb_u8, 0x21_u8, 0x59_u8])
  struct IInitializeWithBindCtx
    lpVtbl : IInitializeWithBindCtxVTbl*
  end

  struct IShellItemFilterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    include_item : UInt64
    get_enum_flags_for_item : UInt64
  end

  IShellItemFilter_GUID = "2659b475-eeb8-48b7-8f07-b378810f48cf"
  IID_IShellItemFilter = LibC::GUID.new(0x2659b475_u32, 0xeeb8_u16, 0x48b7_u16, StaticArray[0x8f_u8, 0x7_u8, 0xb3_u8, 0x78_u8, 0x81_u8, 0xf_u8, 0x48_u8, 0xcf_u8])
  struct IShellItemFilter
    lpVtbl : IShellItemFilterVTbl*
  end

  struct INameSpaceTreeControlVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    tree_advise : UInt64
    tree_unadvise : UInt64
    append_root : UInt64
    insert_root : UInt64
    remove_root : UInt64
    remove_all_roots : UInt64
    get_root_items : UInt64
    set_item_state : UInt64
    get_item_state : UInt64
    get_selected_items : UInt64
    get_item_custom_state : UInt64
    set_item_custom_state : UInt64
    ensure_item_visible : UInt64
    set_theme : UInt64
    get_next_item : UInt64
    hit_test : UInt64
    get_item_rect : UInt64
    collapse_all : UInt64
  end

  INameSpaceTreeControl_GUID = "028212a3-b627-47e9-8856-c14265554e4f"
  IID_INameSpaceTreeControl = LibC::GUID.new(0x28212a3_u32, 0xb627_u16, 0x47e9_u16, StaticArray[0x88_u8, 0x56_u8, 0xc1_u8, 0x42_u8, 0x65_u8, 0x55_u8, 0x4e_u8, 0x4f_u8])
  struct INameSpaceTreeControl
    lpVtbl : INameSpaceTreeControlVTbl*
  end

  struct INameSpaceTreeControlFolderCapabilitiesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_folder_capabilities : UInt64
  end

  INameSpaceTreeControlFolderCapabilities_GUID = "e9701183-e6b3-4ff2-8568-813615fec7be"
  IID_INameSpaceTreeControlFolderCapabilities = LibC::GUID.new(0xe9701183_u32, 0xe6b3_u16, 0x4ff2_u16, StaticArray[0x85_u8, 0x68_u8, 0x81_u8, 0x36_u8, 0x15_u8, 0xfe_u8, 0xc7_u8, 0xbe_u8])
  struct INameSpaceTreeControlFolderCapabilities
    lpVtbl : INameSpaceTreeControlFolderCapabilitiesVTbl*
  end

  struct IPreviewHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_window : UInt64
    set_rect : UInt64
    do_preview : UInt64
    unload : UInt64
    set_focus : UInt64
    query_focus : UInt64
    translate_accelerator : UInt64
  end

  IPreviewHandler_GUID = "8895b1c6-b41f-4c1c-a562-0d564250836f"
  IID_IPreviewHandler = LibC::GUID.new(0x8895b1c6_u32, 0xb41f_u16, 0x4c1c_u16, StaticArray[0xa5_u8, 0x62_u8, 0xd_u8, 0x56_u8, 0x42_u8, 0x50_u8, 0x83_u8, 0x6f_u8])
  struct IPreviewHandler
    lpVtbl : IPreviewHandlerVTbl*
  end

  struct IPreviewHandlerFrameVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window_context : UInt64
    translate_accelerator : UInt64
  end

  IPreviewHandlerFrame_GUID = "fec87aaf-35f9-447a-adb7-20234491401a"
  IID_IPreviewHandlerFrame = LibC::GUID.new(0xfec87aaf_u32, 0x35f9_u16, 0x447a_u16, StaticArray[0xad_u8, 0xb7_u8, 0x20_u8, 0x23_u8, 0x44_u8, 0x91_u8, 0x40_u8, 0x1a_u8])
  struct IPreviewHandlerFrame
    lpVtbl : IPreviewHandlerFrameVTbl*
  end

  struct IExplorerPaneVisibilityVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_pane_state : UInt64
  end

  IExplorerPaneVisibility_GUID = "e07010ec-bc17-44c0-97b0-46c7c95b9edc"
  IID_IExplorerPaneVisibility = LibC::GUID.new(0xe07010ec_u32, 0xbc17_u16, 0x44c0_u16, StaticArray[0x97_u8, 0xb0_u8, 0x46_u8, 0xc7_u8, 0xc9_u8, 0x5b_u8, 0x9e_u8, 0xdc_u8])
  struct IExplorerPaneVisibility
    lpVtbl : IExplorerPaneVisibilityVTbl*
  end

  struct IContextMenuCBVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    call_back : UInt64
  end

  IContextMenuCB_GUID = "3409e930-5a39-11d1-83fa-00a0c90dc849"
  IID_IContextMenuCB = LibC::GUID.new(0x3409e930_u32, 0x5a39_u16, 0x11d1_u16, StaticArray[0x83_u8, 0xfa_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xd_u8, 0xc8_u8, 0x49_u8])
  struct IContextMenuCB
    lpVtbl : IContextMenuCBVTbl*
  end

  struct IDefaultExtractIconInitVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_flags : UInt64
    set_key : UInt64
    set_normal_icon : UInt64
    set_open_icon : UInt64
    set_shortcut_icon : UInt64
    set_default_icon : UInt64
  end

  IDefaultExtractIconInit_GUID = "41ded17d-d6b3-4261-997d-88c60e4b1d58"
  IID_IDefaultExtractIconInit = LibC::GUID.new(0x41ded17d_u32, 0xd6b3_u16, 0x4261_u16, StaticArray[0x99_u8, 0x7d_u8, 0x88_u8, 0xc6_u8, 0xe_u8, 0x4b_u8, 0x1d_u8, 0x58_u8])
  struct IDefaultExtractIconInit
    lpVtbl : IDefaultExtractIconInitVTbl*
  end

  struct IExplorerCommandVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_title : UInt64
    get_icon : UInt64
    get_tool_tip : UInt64
    get_canonical_name : UInt64
    get_state : UInt64
    invoke : UInt64
    get_flags : UInt64
    enum_sub_commands : UInt64
  end

  IExplorerCommand_GUID = "a08ce4d0-fa25-44ab-b57c-c7b1c323e0b9"
  IID_IExplorerCommand = LibC::GUID.new(0xa08ce4d0_u32, 0xfa25_u16, 0x44ab_u16, StaticArray[0xb5_u8, 0x7c_u8, 0xc7_u8, 0xb1_u8, 0xc3_u8, 0x23_u8, 0xe0_u8, 0xb9_u8])
  struct IExplorerCommand
    lpVtbl : IExplorerCommandVTbl*
  end

  struct IExplorerCommandStateVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_state : UInt64
  end

  IExplorerCommandState_GUID = "bddacb60-7657-47ae-8445-d23e1acf82ae"
  IID_IExplorerCommandState = LibC::GUID.new(0xbddacb60_u32, 0x7657_u16, 0x47ae_u16, StaticArray[0x84_u8, 0x45_u8, 0xd2_u8, 0x3e_u8, 0x1a_u8, 0xcf_u8, 0x82_u8, 0xae_u8])
  struct IExplorerCommandState
    lpVtbl : IExplorerCommandStateVTbl*
  end

  struct IInitializeCommandVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
  end

  IInitializeCommand_GUID = "85075acf-231f-40ea-9610-d26b7b58f638"
  IID_IInitializeCommand = LibC::GUID.new(0x85075acf_u32, 0x231f_u16, 0x40ea_u16, StaticArray[0x96_u8, 0x10_u8, 0xd2_u8, 0x6b_u8, 0x7b_u8, 0x58_u8, 0xf6_u8, 0x38_u8])
  struct IInitializeCommand
    lpVtbl : IInitializeCommandVTbl*
  end

  struct IEnumExplorerCommandVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumExplorerCommand_GUID = "a88826f8-186f-4987-aade-ea0cef8fbfe8"
  IID_IEnumExplorerCommand = LibC::GUID.new(0xa88826f8_u32, 0x186f_u16, 0x4987_u16, StaticArray[0xaa_u8, 0xde_u8, 0xea_u8, 0xc_u8, 0xef_u8, 0x8f_u8, 0xbf_u8, 0xe8_u8])
  struct IEnumExplorerCommand
    lpVtbl : IEnumExplorerCommandVTbl*
  end

  struct IExplorerCommandProviderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_commands : UInt64
    get_command : UInt64
  end

  IExplorerCommandProvider_GUID = "64961751-0835-43c0-8ffe-d57686530e64"
  IID_IExplorerCommandProvider = LibC::GUID.new(0x64961751_u32, 0x835_u16, 0x43c0_u16, StaticArray[0x8f_u8, 0xfe_u8, 0xd5_u8, 0x76_u8, 0x86_u8, 0x53_u8, 0xe_u8, 0x64_u8])
  struct IExplorerCommandProvider
    lpVtbl : IExplorerCommandProviderVTbl*
  end

  struct IOpenControlPanelVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    open : UInt64
    get_path : UInt64
    get_current_view : UInt64
  end

  IOpenControlPanel_GUID = "d11ad862-66de-4df4-bf6c-1f5621996af1"
  IID_IOpenControlPanel = LibC::GUID.new(0xd11ad862_u32, 0x66de_u16, 0x4df4_u16, StaticArray[0xbf_u8, 0x6c_u8, 0x1f_u8, 0x56_u8, 0x21_u8, 0x99_u8, 0x6a_u8, 0xf1_u8])
  struct IOpenControlPanel
    lpVtbl : IOpenControlPanelVTbl*
  end

  struct IFileSystemBindDataVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_find_data : UInt64
    get_find_data : UInt64
  end

  IFileSystemBindData_GUID = "01e18d10-4d8b-11d2-855d-006008059367"
  IID_IFileSystemBindData = LibC::GUID.new(0x1e18d10_u32, 0x4d8b_u16, 0x11d2_u16, StaticArray[0x85_u8, 0x5d_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x67_u8])
  struct IFileSystemBindData
    lpVtbl : IFileSystemBindDataVTbl*
  end

  struct IFileSystemBindData2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_find_data : UInt64
    get_find_data : UInt64
    set_file_id : UInt64
    get_file_id : UInt64
    set_junction_clsid : UInt64
    get_junction_clsid : UInt64
  end

  IFileSystemBindData2_GUID = "3acf075f-71db-4afa-81f0-3fc4fdf2a5b8"
  IID_IFileSystemBindData2 = LibC::GUID.new(0x3acf075f_u32, 0x71db_u16, 0x4afa_u16, StaticArray[0x81_u8, 0xf0_u8, 0x3f_u8, 0xc4_u8, 0xfd_u8, 0xf2_u8, 0xa5_u8, 0xb8_u8])
  struct IFileSystemBindData2
    lpVtbl : IFileSystemBindData2VTbl*
  end

  struct ICustomDestinationListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_app_id : UInt64
    begin_list : UInt64
    append_category : UInt64
    append_known_category : UInt64
    add_user_tasks : UInt64
    commit_list : UInt64
    get_removed_destinations : UInt64
    delete_list : UInt64
    abort_list : UInt64
  end

  ICustomDestinationList_GUID = "6332debf-87b5-4670-90c0-5e57b408a49e"
  IID_ICustomDestinationList = LibC::GUID.new(0x6332debf_u32, 0x87b5_u16, 0x4670_u16, StaticArray[0x90_u8, 0xc0_u8, 0x5e_u8, 0x57_u8, 0xb4_u8, 0x8_u8, 0xa4_u8, 0x9e_u8])
  struct ICustomDestinationList
    lpVtbl : ICustomDestinationListVTbl*
  end

  struct IApplicationDestinationsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_app_id : UInt64
    remove_destination : UInt64
    remove_all_destinations : UInt64
  end

  IApplicationDestinations_GUID = "12337d35-94c6-48a0-bce7-6a9c69d4d600"
  IID_IApplicationDestinations = LibC::GUID.new(0x12337d35_u32, 0x94c6_u16, 0x48a0_u16, StaticArray[0xbc_u8, 0xe7_u8, 0x6a_u8, 0x9c_u8, 0x69_u8, 0xd4_u8, 0xd6_u8, 0x0_u8])
  struct IApplicationDestinations
    lpVtbl : IApplicationDestinationsVTbl*
  end

  struct IApplicationDocumentListsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_app_id : UInt64
    get_list : UInt64
  end

  IApplicationDocumentLists_GUID = "3c594f9f-9f30-47a1-979a-c9e83d3d0a06"
  IID_IApplicationDocumentLists = LibC::GUID.new(0x3c594f9f_u32, 0x9f30_u16, 0x47a1_u16, StaticArray[0x97_u8, 0x9a_u8, 0xc9_u8, 0xe8_u8, 0x3d_u8, 0x3d_u8, 0xa_u8, 0x6_u8])
  struct IApplicationDocumentLists
    lpVtbl : IApplicationDocumentListsVTbl*
  end

  struct IObjectWithAppUserModelIDVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_app_id : UInt64
    get_app_id : UInt64
  end

  IObjectWithAppUserModelID_GUID = "36db0196-9665-46d1-9ba7-d3709eecf9ed"
  IID_IObjectWithAppUserModelID = LibC::GUID.new(0x36db0196_u32, 0x9665_u16, 0x46d1_u16, StaticArray[0x9b_u8, 0xa7_u8, 0xd3_u8, 0x70_u8, 0x9e_u8, 0xec_u8, 0xf9_u8, 0xed_u8])
  struct IObjectWithAppUserModelID
    lpVtbl : IObjectWithAppUserModelIDVTbl*
  end

  struct IObjectWithProgIDVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_prog_id : UInt64
    get_prog_id : UInt64
  end

  IObjectWithProgID_GUID = "71e806fb-8dee-46fc-bf8c-7748a8a1ae13"
  IID_IObjectWithProgID = LibC::GUID.new(0x71e806fb_u32, 0x8dee_u16, 0x46fc_u16, StaticArray[0xbf_u8, 0x8c_u8, 0x77_u8, 0x48_u8, 0xa8_u8, 0xa1_u8, 0xae_u8, 0x13_u8])
  struct IObjectWithProgID
    lpVtbl : IObjectWithProgIDVTbl*
  end

  struct IUpdateIDListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    update : UInt64
  end

  IUpdateIDList_GUID = "6589b6d2-5f8d-4b9e-b7e0-23cdd9717d8c"
  IID_IUpdateIDList = LibC::GUID.new(0x6589b6d2_u32, 0x5f8d_u16, 0x4b9e_u16, StaticArray[0xb7_u8, 0xe0_u8, 0x23_u8, 0xcd_u8, 0xd9_u8, 0x71_u8, 0x7d_u8, 0x8c_u8])
  struct IUpdateIDList
    lpVtbl : IUpdateIDListVTbl*
  end

  struct IDesktopWallpaperVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_wallpaper : UInt64
    get_wallpaper : UInt64
    get_monitor_device_path_at : UInt64
    get_monitor_device_path_count : UInt64
    get_monitor_rect : UInt64
    set_background_color : UInt64
    get_background_color : UInt64
    set_position : UInt64
    get_position : UInt64
    set_slideshow : UInt64
    get_slideshow : UInt64
    set_slideshow_options : UInt64
    get_slideshow_options : UInt64
    advance_slideshow : UInt64
    get_status : UInt64
    enable : UInt64
  end

  IDesktopWallpaper_GUID = "b92b56a9-8b55-4e14-9a89-0199bbb6f93b"
  IID_IDesktopWallpaper = LibC::GUID.new(0xb92b56a9_u32, 0x8b55_u16, 0x4e14_u16, StaticArray[0x9a_u8, 0x89_u8, 0x1_u8, 0x99_u8, 0xbb_u8, 0xb6_u8, 0xf9_u8, 0x3b_u8])
  struct IDesktopWallpaper
    lpVtbl : IDesktopWallpaperVTbl*
  end

  struct IHomeGroupVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    is_member : UInt64
    show_sharing_wizard : UInt64
  end

  IHomeGroup_GUID = "7a3bd1d9-35a9-4fb3-a467-f48cac35e2d0"
  IID_IHomeGroup = LibC::GUID.new(0x7a3bd1d9_u32, 0x35a9_u16, 0x4fb3_u16, StaticArray[0xa4_u8, 0x67_u8, 0xf4_u8, 0x8c_u8, 0xac_u8, 0x35_u8, 0xe2_u8, 0xd0_u8])
  struct IHomeGroup
    lpVtbl : IHomeGroupVTbl*
  end

  struct IInitializeWithPropertyStoreVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
  end

  IInitializeWithPropertyStore_GUID = "c3e12eb5-7d8d-44f8-b6dd-0e77b34d6de4"
  IID_IInitializeWithPropertyStore = LibC::GUID.new(0xc3e12eb5_u32, 0x7d8d_u16, 0x44f8_u16, StaticArray[0xb6_u8, 0xdd_u8, 0xe_u8, 0x77_u8, 0xb3_u8, 0x4d_u8, 0x6d_u8, 0xe4_u8])
  struct IInitializeWithPropertyStore
    lpVtbl : IInitializeWithPropertyStoreVTbl*
  end

  struct IOpenSearchSourceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_results : UInt64
  end

  IOpenSearchSource_GUID = "f0ee7333-e6fc-479b-9f25-a860c234a38e"
  IID_IOpenSearchSource = LibC::GUID.new(0xf0ee7333_u32, 0xe6fc_u16, 0x479b_u16, StaticArray[0x9f_u8, 0x25_u8, 0xa8_u8, 0x60_u8, 0xc2_u8, 0x34_u8, 0xa3_u8, 0x8e_u8])
  struct IOpenSearchSource
    lpVtbl : IOpenSearchSourceVTbl*
  end

  struct IShellLibraryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    load_library_from_item : UInt64
    load_library_from_known_folder : UInt64
    add_folder : UInt64
    remove_folder : UInt64
    get_folders : UInt64
    resolve_folder : UInt64
    get_default_save_folder : UInt64
    set_default_save_folder : UInt64
    get_options : UInt64
    set_options : UInt64
    get_folder_type : UInt64
    set_folder_type : UInt64
    get_icon : UInt64
    set_icon : UInt64
    commit : UInt64
    save : UInt64
    save_in_known_folder : UInt64
  end

  IShellLibrary_GUID = "11a66efa-382e-451a-9234-1e0e12ef3085"
  IID_IShellLibrary = LibC::GUID.new(0x11a66efa_u32, 0x382e_u16, 0x451a_u16, StaticArray[0x92_u8, 0x34_u8, 0x1e_u8, 0xe_u8, 0x12_u8, 0xef_u8, 0x30_u8, 0x85_u8])
  struct IShellLibrary
    lpVtbl : IShellLibraryVTbl*
  end

  struct IDefaultFolderMenuInitializeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    set_menu_restrictions : UInt64
    get_menu_restrictions : UInt64
    set_handler_clsid : UInt64
  end

  IDefaultFolderMenuInitialize_GUID = "7690aa79-f8fc-4615-a327-36f7d18f5d91"
  IID_IDefaultFolderMenuInitialize = LibC::GUID.new(0x7690aa79_u32, 0xf8fc_u16, 0x4615_u16, StaticArray[0xa3_u8, 0x27_u8, 0x36_u8, 0xf7_u8, 0xd1_u8, 0x8f_u8, 0x5d_u8, 0x91_u8])
  struct IDefaultFolderMenuInitialize
    lpVtbl : IDefaultFolderMenuInitializeVTbl*
  end

  struct IApplicationActivationManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    activate_application : UInt64
    activate_for_file : UInt64
    activate_for_protocol : UInt64
  end

  IApplicationActivationManager_GUID = "2e941141-7f97-4756-ba1d-9decde894a3d"
  IID_IApplicationActivationManager = LibC::GUID.new(0x2e941141_u32, 0x7f97_u16, 0x4756_u16, StaticArray[0xba_u8, 0x1d_u8, 0x9d_u8, 0xec_u8, 0xde_u8, 0x89_u8, 0x4a_u8, 0x3d_u8])
  struct IApplicationActivationManager
    lpVtbl : IApplicationActivationManagerVTbl*
  end

  struct IVirtualDesktopManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    is_window_on_current_virtual_desktop : UInt64
    get_window_desktop_id : UInt64
    move_window_to_desktop : UInt64
  end

  IVirtualDesktopManager_GUID = "a5cd92ff-29be-454c-8d04-d82879fb3f1b"
  IID_IVirtualDesktopManager = LibC::GUID.new(0xa5cd92ff_u32, 0x29be_u16, 0x454c_u16, StaticArray[0x8d_u8, 0x4_u8, 0xd8_u8, 0x28_u8, 0x79_u8, 0xfb_u8, 0x3f_u8, 0x1b_u8])
  struct IVirtualDesktopManager
    lpVtbl : IVirtualDesktopManagerVTbl*
  end

  struct IAssocHandlerInvokerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    supports_selection : UInt64
    invoke : UInt64
  end

  IAssocHandlerInvoker_GUID = "92218cab-ecaa-4335-8133-807fd234c2ee"
  IID_IAssocHandlerInvoker = LibC::GUID.new(0x92218cab_u32, 0xecaa_u16, 0x4335_u16, StaticArray[0x81_u8, 0x33_u8, 0x80_u8, 0x7f_u8, 0xd2_u8, 0x34_u8, 0xc2_u8, 0xee_u8])
  struct IAssocHandlerInvoker
    lpVtbl : IAssocHandlerInvokerVTbl*
  end

  struct IAssocHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_name : UInt64
    get_ui_name : UInt64
    get_icon_location : UInt64
    is_recommended : UInt64
    make_default : UInt64
    invoke : UInt64
    create_invoker : UInt64
  end

  IAssocHandler_GUID = "f04061ac-1659-4a3f-a954-775aa57fc083"
  IID_IAssocHandler = LibC::GUID.new(0xf04061ac_u32, 0x1659_u16, 0x4a3f_u16, StaticArray[0xa9_u8, 0x54_u8, 0x77_u8, 0x5a_u8, 0xa5_u8, 0x7f_u8, 0xc0_u8, 0x83_u8])
  struct IAssocHandler
    lpVtbl : IAssocHandlerVTbl*
  end

  struct IEnumAssocHandlersVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
  end

  IEnumAssocHandlers_GUID = "973810ae-9599-4b88-9e4d-6ee98c9552da"
  IID_IEnumAssocHandlers = LibC::GUID.new(0x973810ae_u32, 0x9599_u16, 0x4b88_u16, StaticArray[0x9e_u8, 0x4d_u8, 0x6e_u8, 0xe9_u8, 0x8c_u8, 0x95_u8, 0x52_u8, 0xda_u8])
  struct IEnumAssocHandlers
    lpVtbl : IEnumAssocHandlersVTbl*
  end

  struct IDataObjectProviderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_data_object : UInt64
    set_data_object : UInt64
  end

  IDataObjectProvider_GUID = "3d25f6d6-4b2a-433c-9184-7c33ad35d001"
  IID_IDataObjectProvider = LibC::GUID.new(0x3d25f6d6_u32, 0x4b2a_u16, 0x433c_u16, StaticArray[0x91_u8, 0x84_u8, 0x7c_u8, 0x33_u8, 0xad_u8, 0x35_u8, 0xd0_u8, 0x1_u8])
  struct IDataObjectProvider
    lpVtbl : IDataObjectProviderVTbl*
  end

  struct IDataTransferManagerInteropVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_for_window : UInt64
    show_share_ui_for_window : UInt64
  end

  IDataTransferManagerInterop_GUID = "3a3dcd6c-3eab-43dc-bcde-45671ce800c8"
  IID_IDataTransferManagerInterop = LibC::GUID.new(0x3a3dcd6c_u32, 0x3eab_u16, 0x43dc_u16, StaticArray[0xbc_u8, 0xde_u8, 0x45_u8, 0x67_u8, 0x1c_u8, 0xe8_u8, 0x0_u8, 0xc8_u8])
  struct IDataTransferManagerInterop
    lpVtbl : IDataTransferManagerInteropVTbl*
  end

  struct IFrameworkInputPaneHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    showing : UInt64
    hiding : UInt64
  end

  IFrameworkInputPaneHandler_GUID = "226c537b-1e76-4d9e-a760-33db29922f18"
  IID_IFrameworkInputPaneHandler = LibC::GUID.new(0x226c537b_u32, 0x1e76_u16, 0x4d9e_u16, StaticArray[0xa7_u8, 0x60_u8, 0x33_u8, 0xdb_u8, 0x29_u8, 0x92_u8, 0x2f_u8, 0x18_u8])
  struct IFrameworkInputPaneHandler
    lpVtbl : IFrameworkInputPaneHandlerVTbl*
  end

  struct IFrameworkInputPaneVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    advise : UInt64
    advise_with_hwnd : UInt64
    unadvise : UInt64
    location : UInt64
  end

  IFrameworkInputPane_GUID = "5752238b-24f0-495a-82f1-2fd593056796"
  IID_IFrameworkInputPane = LibC::GUID.new(0x5752238b_u32, 0x24f0_u16, 0x495a_u16, StaticArray[0x82_u8, 0xf1_u8, 0x2f_u8, 0xd5_u8, 0x93_u8, 0x5_u8, 0x67_u8, 0x96_u8])
  struct IFrameworkInputPane
    lpVtbl : IFrameworkInputPaneVTbl*
  end

  struct IAppVisibilityEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    app_visibility_on_monitor_changed : UInt64
    launcher_visibility_change : UInt64
  end

  IAppVisibilityEvents_GUID = "6584ce6b-7d82-49c2-89c9-c6bc02ba8c38"
  IID_IAppVisibilityEvents = LibC::GUID.new(0x6584ce6b_u32, 0x7d82_u16, 0x49c2_u16, StaticArray[0x89_u8, 0xc9_u8, 0xc6_u8, 0xbc_u8, 0x2_u8, 0xba_u8, 0x8c_u8, 0x38_u8])
  struct IAppVisibilityEvents
    lpVtbl : IAppVisibilityEventsVTbl*
  end

  struct IAppVisibilityVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_app_visibility_on_monitor : UInt64
    is_launcher_visible : UInt64
    advise : UInt64
    unadvise : UInt64
  end

  IAppVisibility_GUID = "2246ea2d-caea-4444-a3c4-6de827e44313"
  IID_IAppVisibility = LibC::GUID.new(0x2246ea2d_u32, 0xcaea_u16, 0x4444_u16, StaticArray[0xa3_u8, 0xc4_u8, 0x6d_u8, 0xe8_u8, 0x27_u8, 0xe4_u8, 0x43_u8, 0x13_u8])
  struct IAppVisibility
    lpVtbl : IAppVisibilityVTbl*
  end

  struct IPackageExecutionStateChangeNotificationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_state_changed : UInt64
  end

  IPackageExecutionStateChangeNotification_GUID = "1bb12a62-2ad8-432b-8ccf-0c2c52afcd5b"
  IID_IPackageExecutionStateChangeNotification = LibC::GUID.new(0x1bb12a62_u32, 0x2ad8_u16, 0x432b_u16, StaticArray[0x8c_u8, 0xcf_u8, 0xc_u8, 0x2c_u8, 0x52_u8, 0xaf_u8, 0xcd_u8, 0x5b_u8])
  struct IPackageExecutionStateChangeNotification
    lpVtbl : IPackageExecutionStateChangeNotificationVTbl*
  end

  struct IPackageDebugSettingsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    enable_debugging : UInt64
    disable_debugging : UInt64
    suspend : UInt64
    resume : UInt64
    terminate_all_processes : UInt64
    set_target_session_id : UInt64
    enumerate_background_tasks : UInt64
    activate_background_task : UInt64
    start_servicing : UInt64
    stop_servicing : UInt64
    start_session_redirection : UInt64
    stop_session_redirection : UInt64
    get_package_execution_state : UInt64
    register_for_package_state_changes : UInt64
    unregister_for_package_state_changes : UInt64
  end

  IPackageDebugSettings_GUID = "f27c3930-8029-4ad1-94e3-3dba417810c1"
  IID_IPackageDebugSettings = LibC::GUID.new(0xf27c3930_u32, 0x8029_u16, 0x4ad1_u16, StaticArray[0x94_u8, 0xe3_u8, 0x3d_u8, 0xba_u8, 0x41_u8, 0x78_u8, 0x10_u8, 0xc1_u8])
  struct IPackageDebugSettings
    lpVtbl : IPackageDebugSettingsVTbl*
  end

  struct IPackageDebugSettings2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    enable_debugging : UInt64
    disable_debugging : UInt64
    suspend : UInt64
    resume : UInt64
    terminate_all_processes : UInt64
    set_target_session_id : UInt64
    enumerate_background_tasks : UInt64
    activate_background_task : UInt64
    start_servicing : UInt64
    stop_servicing : UInt64
    start_session_redirection : UInt64
    stop_session_redirection : UInt64
    get_package_execution_state : UInt64
    register_for_package_state_changes : UInt64
    unregister_for_package_state_changes : UInt64
    enumerate_apps : UInt64
  end

  IPackageDebugSettings2_GUID = "6e3194bb-ab82-4d22-93f5-fabda40e7b16"
  IID_IPackageDebugSettings2 = LibC::GUID.new(0x6e3194bb_u32, 0xab82_u16, 0x4d22_u16, StaticArray[0x93_u8, 0xf5_u8, 0xfa_u8, 0xbd_u8, 0xa4_u8, 0xe_u8, 0x7b_u8, 0x16_u8])
  struct IPackageDebugSettings2
    lpVtbl : IPackageDebugSettings2VTbl*
  end

  struct ISuspensionDependencyManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    register_as_child : UInt64
    group_child_with_parent : UInt64
    ungroup_child_from_parent : UInt64
  end

  ISuspensionDependencyManager_GUID = "52b83a42-2543-416a-81d9-c0de7969c8b3"
  IID_ISuspensionDependencyManager = LibC::GUID.new(0x52b83a42_u32, 0x2543_u16, 0x416a_u16, StaticArray[0x81_u8, 0xd9_u8, 0xc0_u8, 0xde_u8, 0x79_u8, 0x69_u8, 0xc8_u8, 0xb3_u8])
  struct ISuspensionDependencyManager
    lpVtbl : ISuspensionDependencyManagerVTbl*
  end

  struct IExecuteCommandApplicationHostEnvironmentVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_value : UInt64
  end

  IExecuteCommandApplicationHostEnvironment_GUID = "18b21aa9-e184-4ff0-9f5e-f882d03771b3"
  IID_IExecuteCommandApplicationHostEnvironment = LibC::GUID.new(0x18b21aa9_u32, 0xe184_u16, 0x4ff0_u16, StaticArray[0x9f_u8, 0x5e_u8, 0xf8_u8, 0x82_u8, 0xd0_u8, 0x37_u8, 0x71_u8, 0xb3_u8])
  struct IExecuteCommandApplicationHostEnvironment
    lpVtbl : IExecuteCommandApplicationHostEnvironmentVTbl*
  end

  struct IExecuteCommandHostVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_ui_mode : UInt64
  end

  IExecuteCommandHost_GUID = "4b6832a2-5f04-4c9d-b89d-727a15d103e7"
  IID_IExecuteCommandHost = LibC::GUID.new(0x4b6832a2_u32, 0x5f04_u16, 0x4c9d_u16, StaticArray[0xb8_u8, 0x9d_u8, 0x72_u8, 0x7a_u8, 0x15_u8, 0xd1_u8, 0x3_u8, 0xe7_u8])
  struct IExecuteCommandHost
    lpVtbl : IExecuteCommandHostVTbl*
  end

  struct IApplicationDesignModeSettingsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_native_display_size : UInt64
    set_scale_factor : UInt64
    set_application_view_state : UInt64
    compute_application_size : UInt64
    is_application_view_state_supported : UInt64
    trigger_edge_gesture : UInt64
  end

  IApplicationDesignModeSettings_GUID = "2a3dee9a-e31d-46d6-8508-bcc597db3557"
  IID_IApplicationDesignModeSettings = LibC::GUID.new(0x2a3dee9a_u32, 0xe31d_u16, 0x46d6_u16, StaticArray[0x85_u8, 0x8_u8, 0xbc_u8, 0xc5_u8, 0x97_u8, 0xdb_u8, 0x35_u8, 0x57_u8])
  struct IApplicationDesignModeSettings
    lpVtbl : IApplicationDesignModeSettingsVTbl*
  end

  struct IApplicationDesignModeSettings2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_native_display_size : UInt64
    set_scale_factor : UInt64
    set_application_view_state : UInt64
    compute_application_size : UInt64
    is_application_view_state_supported : UInt64
    trigger_edge_gesture : UInt64
    set_native_display_orientation : UInt64
    set_application_view_orientation : UInt64
    set_adjacent_display_edges : UInt64
    set_is_on_lock_screen : UInt64
    set_application_view_min_width : UInt64
    get_application_size_bounds : UInt64
    get_application_view_orientation : UInt64
  end

  IApplicationDesignModeSettings2_GUID = "490514e1-675a-4d6e-a58d-e54901b4ca2f"
  IID_IApplicationDesignModeSettings2 = LibC::GUID.new(0x490514e1_u32, 0x675a_u16, 0x4d6e_u16, StaticArray[0xa5_u8, 0x8d_u8, 0xe5_u8, 0x49_u8, 0x1_u8, 0xb4_u8, 0xca_u8, 0x2f_u8])
  struct IApplicationDesignModeSettings2
    lpVtbl : IApplicationDesignModeSettings2VTbl*
  end

  struct ILaunchTargetMonitorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_monitor : UInt64
  end

  ILaunchTargetMonitor_GUID = "266fbc7e-490d-46ed-a96b-2274db252003"
  IID_ILaunchTargetMonitor = LibC::GUID.new(0x266fbc7e_u32, 0x490d_u16, 0x46ed_u16, StaticArray[0xa9_u8, 0x6b_u8, 0x22_u8, 0x74_u8, 0xdb_u8, 0x25_u8, 0x20_u8, 0x3_u8])
  struct ILaunchTargetMonitor
    lpVtbl : ILaunchTargetMonitorVTbl*
  end

  struct ILaunchSourceViewSizePreferenceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_source_view_to_position : UInt64
    get_source_view_size_preference : UInt64
  end

  ILaunchSourceViewSizePreference_GUID = "e5aa01f7-1fb8-4830-8720-4e6734cbd5f3"
  IID_ILaunchSourceViewSizePreference = LibC::GUID.new(0xe5aa01f7_u32, 0x1fb8_u16, 0x4830_u16, StaticArray[0x87_u8, 0x20_u8, 0x4e_u8, 0x67_u8, 0x34_u8, 0xcb_u8, 0xd5_u8, 0xf3_u8])
  struct ILaunchSourceViewSizePreference
    lpVtbl : ILaunchSourceViewSizePreferenceVTbl*
  end

  struct ILaunchTargetViewSizePreferenceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_target_view_size_preference : UInt64
  end

  ILaunchTargetViewSizePreference_GUID = "2f0666c6-12f7-4360-b511-a394a0553725"
  IID_ILaunchTargetViewSizePreference = LibC::GUID.new(0x2f0666c6_u32, 0x12f7_u16, 0x4360_u16, StaticArray[0xb5_u8, 0x11_u8, 0xa3_u8, 0x94_u8, 0xa0_u8, 0x55_u8, 0x37_u8, 0x25_u8])
  struct ILaunchTargetViewSizePreference
    lpVtbl : ILaunchTargetViewSizePreferenceVTbl*
  end

  struct ILaunchSourceAppUserModelIdVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_app_user_model_id : UInt64
  end

  ILaunchSourceAppUserModelId_GUID = "989191ac-28ff-4cf0-9584-e0d078bc2396"
  IID_ILaunchSourceAppUserModelId = LibC::GUID.new(0x989191ac_u32, 0x28ff_u16, 0x4cf0_u16, StaticArray[0x95_u8, 0x84_u8, 0xe0_u8, 0xd0_u8, 0x78_u8, 0xbc_u8, 0x23_u8, 0x96_u8])
  struct ILaunchSourceAppUserModelId
    lpVtbl : ILaunchSourceAppUserModelIdVTbl*
  end

  struct IInitializeWithWindowVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
  end

  IInitializeWithWindow_GUID = "3e68d4bd-7135-4d10-8018-9fb6d9f33fa1"
  IID_IInitializeWithWindow = LibC::GUID.new(0x3e68d4bd_u32, 0x7135_u16, 0x4d10_u16, StaticArray[0x80_u8, 0x18_u8, 0x9f_u8, 0xb6_u8, 0xd9_u8, 0xf3_u8, 0x3f_u8, 0xa1_u8])
  struct IInitializeWithWindow
    lpVtbl : IInitializeWithWindowVTbl*
  end

  struct IHandlerInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_application_display_name : UInt64
    get_application_publisher : UInt64
    get_application_icon_reference : UInt64
  end

  IHandlerInfo_GUID = "997706ef-f880-453b-8118-39e1a2d2655a"
  IID_IHandlerInfo = LibC::GUID.new(0x997706ef_u32, 0xf880_u16, 0x453b_u16, StaticArray[0x81_u8, 0x18_u8, 0x39_u8, 0xe1_u8, 0xa2_u8, 0xd2_u8, 0x65_u8, 0x5a_u8])
  struct IHandlerInfo
    lpVtbl : IHandlerInfoVTbl*
  end

  struct IHandlerInfo2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_application_display_name : UInt64
    get_application_publisher : UInt64
    get_application_icon_reference : UInt64
    get_application_id : UInt64
  end

  IHandlerInfo2_GUID = "31cca04c-04d3-4ea9-90de-97b15e87a532"
  IID_IHandlerInfo2 = LibC::GUID.new(0x31cca04c_u32, 0x4d3_u16, 0x4ea9_u16, StaticArray[0x90_u8, 0xde_u8, 0x97_u8, 0xb1_u8, 0x5e_u8, 0x87_u8, 0xa5_u8, 0x32_u8])
  struct IHandlerInfo2
    lpVtbl : IHandlerInfo2VTbl*
  end

  struct IHandlerActivationHostVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    before_co_create_instance : UInt64
    before_create_process : UInt64
  end

  IHandlerActivationHost_GUID = "35094a87-8bb1-4237-96c6-c417eebdb078"
  IID_IHandlerActivationHost = LibC::GUID.new(0x35094a87_u32, 0x8bb1_u16, 0x4237_u16, StaticArray[0x96_u8, 0xc6_u8, 0xc4_u8, 0x17_u8, 0xee_u8, 0xbd_u8, 0xb0_u8, 0x78_u8])
  struct IHandlerActivationHost
    lpVtbl : IHandlerActivationHostVTbl*
  end

  struct IAppActivationUIInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_monitor : UInt64
    get_invoke_point : UInt64
    get_show_command : UInt64
    get_show_ui : UInt64
    get_key_state : UInt64
  end

  IAppActivationUIInfo_GUID = "abad189d-9fa3-4278-b3ca-8ca448a88dcb"
  IID_IAppActivationUIInfo = LibC::GUID.new(0xabad189d_u32, 0x9fa3_u16, 0x4278_u16, StaticArray[0xb3_u8, 0xca_u8, 0x8c_u8, 0xa4_u8, 0x48_u8, 0xa8_u8, 0x8d_u8, 0xcb_u8])
  struct IAppActivationUIInfo
    lpVtbl : IAppActivationUIInfoVTbl*
  end

  struct IContactManagerInteropVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show_contact_card_for_window : UInt64
  end

  IContactManagerInterop_GUID = "99eacba7-e073-43b6-a896-55afe48a0833"
  IID_IContactManagerInterop = LibC::GUID.new(0x99eacba7_u32, 0xe073_u16, 0x43b6_u16, StaticArray[0xa8_u8, 0x96_u8, 0x55_u8, 0xaf_u8, 0xe4_u8, 0x8a_u8, 0x8_u8, 0x33_u8])
  struct IContactManagerInterop
    lpVtbl : IContactManagerInteropVTbl*
  end

  struct IShellIconOverlayIdentifierVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    is_member_of : UInt64
    get_overlay_info : UInt64
    get_priority : UInt64
  end

  IShellIconOverlayIdentifier_GUID = "0c6c4200-c589-11d0-999a-00c04fd655e1"
  IID_IShellIconOverlayIdentifier = LibC::GUID.new(0xc6c4200_u32, 0xc589_u16, 0x11d0_u16, StaticArray[0x99_u8, 0x9a_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd6_u8, 0x55_u8, 0xe1_u8])
  struct IShellIconOverlayIdentifier
    lpVtbl : IShellIconOverlayIdentifierVTbl*
  end

  struct IBannerNotificationHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_banner_event : UInt64
  end

  IBannerNotificationHandler_GUID = "8d7b2ba7-db05-46a8-823c-d2b6de08ee91"
  IID_IBannerNotificationHandler = LibC::GUID.new(0x8d7b2ba7_u32, 0xdb05_u16, 0x46a8_u16, StaticArray[0x82_u8, 0x3c_u8, 0xd2_u8, 0xb6_u8, 0xde_u8, 0x8_u8, 0xee_u8, 0x91_u8])
  struct IBannerNotificationHandler
    lpVtbl : IBannerNotificationHandlerVTbl*
  end

  struct ISortColumnArrayVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_count : UInt64
    get_at : UInt64
    get_sort_type : UInt64
  end

  ISortColumnArray_GUID = "6dfc60fb-f2e9-459b-beb5-288f1a7c7d54"
  IID_ISortColumnArray = LibC::GUID.new(0x6dfc60fb_u32, 0xf2e9_u16, 0x459b_u16, StaticArray[0xbe_u8, 0xb5_u8, 0x28_u8, 0x8f_u8, 0x1a_u8, 0x7c_u8, 0x7d_u8, 0x54_u8])
  struct ISortColumnArray
    lpVtbl : ISortColumnArrayVTbl*
  end

  struct IPropertyKeyStoreVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_key_count : UInt64
    get_key_at : UInt64
    append_key : UInt64
    delete_key : UInt64
    is_key_in_store : UInt64
    remove_key : UInt64
  end

  IPropertyKeyStore_GUID = "75bd59aa-f23b-4963-aba4-0b355752a91b"
  IID_IPropertyKeyStore = LibC::GUID.new(0x75bd59aa_u32, 0xf23b_u16, 0x4963_u16, StaticArray[0xab_u8, 0xa4_u8, 0xb_u8, 0x35_u8, 0x57_u8, 0x52_u8, 0xa9_u8, 0x1b_u8])
  struct IPropertyKeyStore
    lpVtbl : IPropertyKeyStoreVTbl*
  end

  struct IQueryCodePageVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_code_page : UInt64
    set_code_page : UInt64
  end

  IQueryCodePage_GUID = "c7b236ce-ee80-11d0-985f-006008059382"
  IID_IQueryCodePage = LibC::GUID.new(0xc7b236ce_u32, 0xee80_u16, 0x11d0_u16, StaticArray[0x98_u8, 0x5f_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x82_u8])
  struct IQueryCodePage
    lpVtbl : IQueryCodePageVTbl*
  end

  struct IFolderViewOptionsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_folder_view_options : UInt64
    get_folder_view_options : UInt64
  end

  IFolderViewOptions_GUID = "3cc974d2-b302-4d36-ad3e-06d93f695d3f"
  IID_IFolderViewOptions = LibC::GUID.new(0x3cc974d2_u32, 0xb302_u16, 0x4d36_u16, StaticArray[0xad_u8, 0x3e_u8, 0x6_u8, 0xd9_u8, 0x3f_u8, 0x69_u8, 0x5d_u8, 0x3f_u8])
  struct IFolderViewOptions
    lpVtbl : IFolderViewOptionsVTbl*
  end

  struct IShellView3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    translate_accelerator : UInt64
    enable_modeless : UInt64
    ui_activate : UInt64
    refresh : UInt64
    create_view_window : UInt64
    destroy_view_window : UInt64
    get_current_info : UInt64
    add_property_sheet_pages : UInt64
    save_view_state : UInt64
    select_item : UInt64
    get_item_object : UInt64
    get_view : UInt64
    create_view_window2 : UInt64
    handle_rename : UInt64
    select_and_position_item : UInt64
    create_view_window3 : UInt64
  end

  IShellView3_GUID = "ec39fa88-f8af-41c5-8421-38bed28f4673"
  IID_IShellView3 = LibC::GUID.new(0xec39fa88_u32, 0xf8af_u16, 0x41c5_u16, StaticArray[0x84_u8, 0x21_u8, 0x38_u8, 0xbe_u8, 0xd2_u8, 0x8f_u8, 0x46_u8, 0x73_u8])
  struct IShellView3
    lpVtbl : IShellView3VTbl*
  end

  struct ISearchBoxInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_condition : UInt64
    get_text : UInt64
  end

  ISearchBoxInfo_GUID = "6af6e03f-d664-4ef4-9626-f7e0ed36755e"
  IID_ISearchBoxInfo = LibC::GUID.new(0x6af6e03f_u32, 0xd664_u16, 0x4ef4_u16, StaticArray[0x96_u8, 0x26_u8, 0xf7_u8, 0xe0_u8, 0xed_u8, 0x36_u8, 0x75_u8, 0x5e_u8])
  struct ISearchBoxInfo
    lpVtbl : ISearchBoxInfoVTbl*
  end

  struct IVisualPropertiesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_watermark : UInt64
    set_color : UInt64
    get_color : UInt64
    set_item_height : UInt64
    get_item_height : UInt64
    set_font : UInt64
    get_font : UInt64
    set_theme : UInt64
  end

  IVisualProperties_GUID = "e693cf68-d967-4112-8763-99172aee5e5a"
  IID_IVisualProperties = LibC::GUID.new(0xe693cf68_u32, 0xd967_u16, 0x4112_u16, StaticArray[0x87_u8, 0x63_u8, 0x99_u8, 0x17_u8, 0x2a_u8, 0xee_u8, 0x5e_u8, 0x5a_u8])
  struct IVisualProperties
    lpVtbl : IVisualPropertiesVTbl*
  end

  struct ICommDlgBrowser3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_default_command : UInt64
    on_state_change : UInt64
    include_object : UInt64
    notify : UInt64
    get_default_menu_text : UInt64
    get_view_flags : UInt64
    on_column_clicked : UInt64
    get_current_filter : UInt64
    on_pre_view_created : UInt64
  end

  ICommDlgBrowser3_GUID = "c8ad25a1-3294-41ee-8165-71174bd01c57"
  IID_ICommDlgBrowser3 = LibC::GUID.new(0xc8ad25a1_u32, 0x3294_u16, 0x41ee_u16, StaticArray[0x81_u8, 0x65_u8, 0x71_u8, 0x17_u8, 0x4b_u8, 0xd0_u8, 0x1c_u8, 0x57_u8])
  struct ICommDlgBrowser3
    lpVtbl : ICommDlgBrowser3VTbl*
  end

  struct IUserAccountChangeCallbackVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_picture_change : UInt64
  end

  IUserAccountChangeCallback_GUID = "a561e69a-b4b8-4113-91a5-64c6bcca3430"
  IID_IUserAccountChangeCallback = LibC::GUID.new(0xa561e69a_u32, 0xb4b8_u16, 0x4113_u16, StaticArray[0x91_u8, 0xa5_u8, 0x64_u8, 0xc6_u8, 0xbc_u8, 0xca_u8, 0x34_u8, 0x30_u8])
  struct IUserAccountChangeCallback
    lpVtbl : IUserAccountChangeCallbackVTbl*
  end

  struct IStreamAsyncVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    read : UInt64
    write : UInt64
    seek : UInt64
    set_size : UInt64
    copy_to : UInt64
    commit : UInt64
    revert : UInt64
    lock_region : UInt64
    unlock_region : UInt64
    stat : UInt64
    clone : UInt64
    read_async : UInt64
    write_async : UInt64
    overlapped_result : UInt64
    cancel_io : UInt64
  end

  IStreamAsync_GUID = "fe0b6665-e0ca-49b9-a178-2b5cb48d92a5"
  IID_IStreamAsync = LibC::GUID.new(0xfe0b6665_u32, 0xe0ca_u16, 0x49b9_u16, StaticArray[0xa1_u8, 0x78_u8, 0x2b_u8, 0x5c_u8, 0xb4_u8, 0x8d_u8, 0x92_u8, 0xa5_u8])
  struct IStreamAsync
    lpVtbl : IStreamAsyncVTbl*
  end

  struct IStreamUnbufferedInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_sector_size : UInt64
  end

  IStreamUnbufferedInfo_GUID = "8a68fdda-1fdc-4c20-8ceb-416643b5a625"
  IID_IStreamUnbufferedInfo = LibC::GUID.new(0x8a68fdda_u32, 0x1fdc_u16, 0x4c20_u16, StaticArray[0x8c_u8, 0xeb_u8, 0x41_u8, 0x66_u8, 0x43_u8, 0xb5_u8, 0xa6_u8, 0x25_u8])
  struct IStreamUnbufferedInfo
    lpVtbl : IStreamUnbufferedInfoVTbl*
  end

  struct IDragSourceHelper2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize_from_bitmap : UInt64
    initialize_from_window : UInt64
    set_flags : UInt64
  end

  IDragSourceHelper2_GUID = "83e07d0d-0c5f-4163-bf1a-60b274051e40"
  IID_IDragSourceHelper2 = LibC::GUID.new(0x83e07d0d_u32, 0xc5f_u16, 0x4163_u16, StaticArray[0xbf_u8, 0x1a_u8, 0x60_u8, 0xb2_u8, 0x74_u8, 0x5_u8, 0x1e_u8, 0x40_u8])
  struct IDragSourceHelper2
    lpVtbl : IDragSourceHelper2VTbl*
  end

  struct IHWEventHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    handle_event : UInt64
    handle_event_with_content : UInt64
  end

  IHWEventHandler_GUID = "c1fb73d0-ec3a-4ba2-b512-8cdb9187b6d1"
  IID_IHWEventHandler = LibC::GUID.new(0xc1fb73d0_u32, 0xec3a_u16, 0x4ba2_u16, StaticArray[0xb5_u8, 0x12_u8, 0x8c_u8, 0xdb_u8, 0x91_u8, 0x87_u8, 0xb6_u8, 0xd1_u8])
  struct IHWEventHandler
    lpVtbl : IHWEventHandlerVTbl*
  end

  struct IHWEventHandler2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    handle_event : UInt64
    handle_event_with_content : UInt64
    handle_event_with_hwnd : UInt64
  end

  IHWEventHandler2_GUID = "cfcc809f-295d-42e8-9ffc-424b33c487e6"
  IID_IHWEventHandler2 = LibC::GUID.new(0xcfcc809f_u32, 0x295d_u16, 0x42e8_u16, StaticArray[0x9f_u8, 0xfc_u8, 0x42_u8, 0x4b_u8, 0x33_u8, 0xc4_u8, 0x87_u8, 0xe6_u8])
  struct IHWEventHandler2
    lpVtbl : IHWEventHandler2VTbl*
  end

  struct IQueryCancelAutoPlayVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    allow_auto_play : UInt64
  end

  IQueryCancelAutoPlay_GUID = "ddefe873-6997-4e68-be26-39b633adbe12"
  IID_IQueryCancelAutoPlay = LibC::GUID.new(0xddefe873_u32, 0x6997_u16, 0x4e68_u16, StaticArray[0xbe_u8, 0x26_u8, 0x39_u8, 0xb6_u8, 0x33_u8, 0xad_u8, 0xbe_u8, 0x12_u8])
  struct IQueryCancelAutoPlay
    lpVtbl : IQueryCancelAutoPlayVTbl*
  end

  struct IDynamicHWHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_dynamic_info : UInt64
  end

  IDynamicHWHandler_GUID = "dc2601d7-059e-42fc-a09d-2afd21b6d5f7"
  IID_IDynamicHWHandler = LibC::GUID.new(0xdc2601d7_u32, 0x59e_u16, 0x42fc_u16, StaticArray[0xa0_u8, 0x9d_u8, 0x2a_u8, 0xfd_u8, 0x21_u8, 0xb6_u8, 0xd5_u8, 0xf7_u8])
  struct IDynamicHWHandler
    lpVtbl : IDynamicHWHandlerVTbl*
  end

  struct IUserNotificationCallbackVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_balloon_user_click : UInt64
    on_left_click : UInt64
    on_context_menu : UInt64
  end

  IUserNotificationCallback_GUID = "19108294-0441-4aff-8013-fa0a730b0bea"
  IID_IUserNotificationCallback = LibC::GUID.new(0x19108294_u32, 0x441_u16, 0x4aff_u16, StaticArray[0x80_u8, 0x13_u8, 0xfa_u8, 0xa_u8, 0x73_u8, 0xb_u8, 0xb_u8, 0xea_u8])
  struct IUserNotificationCallback
    lpVtbl : IUserNotificationCallbackVTbl*
  end

  struct IUserNotification2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_balloon_info : UInt64
    set_balloon_retry : UInt64
    set_icon_info : UInt64
    show : UInt64
    play_sound : UInt64
  end

  IUserNotification2_GUID = "215913cc-57eb-4fab-ab5a-e5fa7bea2a6c"
  IID_IUserNotification2 = LibC::GUID.new(0x215913cc_u32, 0x57eb_u16, 0x4fab_u16, StaticArray[0xab_u8, 0x5a_u8, 0xe5_u8, 0xfa_u8, 0x7b_u8, 0xea_u8, 0x2a_u8, 0x6c_u8])
  struct IUserNotification2
    lpVtbl : IUserNotification2VTbl*
  end

  struct IDeskBand2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    show_dw : UInt64
    close_dw : UInt64
    resize_border_dw : UInt64
    get_band_info : UInt64
    can_render_composited : UInt64
    set_composition_state : UInt64
    get_composition_state : UInt64
  end

  IDeskBand2_GUID = "79d16de4-abee-4021-8d9d-9169b261d657"
  IID_IDeskBand2 = LibC::GUID.new(0x79d16de4_u32, 0xabee_u16, 0x4021_u16, StaticArray[0x8d_u8, 0x9d_u8, 0x91_u8, 0x69_u8, 0xb2_u8, 0x61_u8, 0xd6_u8, 0x57_u8])
  struct IDeskBand2
    lpVtbl : IDeskBand2VTbl*
  end

  struct IStartMenuPinnedListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    remove_from_list : UInt64
  end

  IStartMenuPinnedList_GUID = "4cd19ada-25a5-4a32-b3b7-347bee5be36b"
  IID_IStartMenuPinnedList = LibC::GUID.new(0x4cd19ada_u32, 0x25a5_u16, 0x4a32_u16, StaticArray[0xb3_u8, 0xb7_u8, 0x34_u8, 0x7b_u8, 0xee_u8, 0x5b_u8, 0xe3_u8, 0x6b_u8])
  struct IStartMenuPinnedList
    lpVtbl : IStartMenuPinnedListVTbl*
  end

  struct ICDBurnVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_recorder_drive_letter : UInt64
    burn : UInt64
    has_recordable_drive : UInt64
  end

  ICDBurn_GUID = "3d73a659-e5d0-4d42-afc0-5121ba425c8d"
  IID_ICDBurn = LibC::GUID.new(0x3d73a659_u32, 0xe5d0_u16, 0x4d42_u16, StaticArray[0xaf_u8, 0xc0_u8, 0x51_u8, 0x21_u8, 0xba_u8, 0x42_u8, 0x5c_u8, 0x8d_u8])
  struct ICDBurn
    lpVtbl : ICDBurnVTbl*
  end

  struct IWizardSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_previous_page : UInt64
    get_next_page : UInt64
    get_cancelled_page : UInt64
  end

  IWizardSite_GUID = "88960f5b-422f-4e7b-8013-73415381c3c3"
  IID_IWizardSite = LibC::GUID.new(0x88960f5b_u32, 0x422f_u16, 0x4e7b_u16, StaticArray[0x80_u8, 0x13_u8, 0x73_u8, 0x41_u8, 0x53_u8, 0x81_u8, 0xc3_u8, 0xc3_u8])
  struct IWizardSite
    lpVtbl : IWizardSiteVTbl*
  end

  struct IWizardExtensionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_pages : UInt64
    get_first_page : UInt64
    get_last_page : UInt64
  end

  IWizardExtension_GUID = "c02ea696-86cc-491e-9b23-74394a0444a8"
  IID_IWizardExtension = LibC::GUID.new(0xc02ea696_u32, 0x86cc_u16, 0x491e_u16, StaticArray[0x9b_u8, 0x23_u8, 0x74_u8, 0x39_u8, 0x4a_u8, 0x4_u8, 0x44_u8, 0xa8_u8])
  struct IWizardExtension
    lpVtbl : IWizardExtensionVTbl*
  end

  struct IWebWizardExtensionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_pages : UInt64
    get_first_page : UInt64
    get_last_page : UInt64
    set_initial_url : UInt64
    set_error_url : UInt64
  end

  IWebWizardExtension_GUID = "0e6b3f66-98d1-48c0-a222-fbde74e2fbc5"
  IID_IWebWizardExtension = LibC::GUID.new(0xe6b3f66_u32, 0x98d1_u16, 0x48c0_u16, StaticArray[0xa2_u8, 0x22_u8, 0xfb_u8, 0xde_u8, 0x74_u8, 0xe2_u8, 0xfb_u8, 0xc5_u8])
  struct IWebWizardExtension
    lpVtbl : IWebWizardExtensionVTbl*
  end

  struct IPublishingWizardVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_pages : UInt64
    get_first_page : UInt64
    get_last_page : UInt64
    initialize : UInt64
    get_transfer_manifest : UInt64
  end

  IPublishingWizard_GUID = "aa9198bb-ccec-472d-beed-19a4f6733f7a"
  IID_IPublishingWizard = LibC::GUID.new(0xaa9198bb_u32, 0xccec_u16, 0x472d_u16, StaticArray[0xbe_u8, 0xed_u8, 0x19_u8, 0xa4_u8, 0xf6_u8, 0x73_u8, 0x3f_u8, 0x7a_u8])
  struct IPublishingWizard
    lpVtbl : IPublishingWizardVTbl*
  end

  struct IFolderViewHostVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
  end

  IFolderViewHost_GUID = "1ea58f02-d55a-411d-b09e-9e65ac21605b"
  IID_IFolderViewHost = LibC::GUID.new(0x1ea58f02_u32, 0xd55a_u16, 0x411d_u16, StaticArray[0xb0_u8, 0x9e_u8, 0x9e_u8, 0x65_u8, 0xac_u8, 0x21_u8, 0x60_u8, 0x5b_u8])
  struct IFolderViewHost
    lpVtbl : IFolderViewHostVTbl*
  end

  struct IAccessibleObjectVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_accessible_name : UInt64
  end

  IAccessibleObject_GUID = "95a391c5-9ed4-4c28-8401-ab9e06719e11"
  IID_IAccessibleObject = LibC::GUID.new(0x95a391c5_u32, 0x9ed4_u16, 0x4c28_u16, StaticArray[0x84_u8, 0x1_u8, 0xab_u8, 0x9e_u8, 0x6_u8, 0x71_u8, 0x9e_u8, 0x11_u8])
  struct IAccessibleObject
    lpVtbl : IAccessibleObjectVTbl*
  end

  struct IResultsFolderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_item : UInt64
    add_id_list : UInt64
    remove_item : UInt64
    remove_id_list : UInt64
    remove_all : UInt64
  end

  IResultsFolder_GUID = "96e5ae6d-6ae1-4b1c-900c-c6480eaa8828"
  IID_IResultsFolder = LibC::GUID.new(0x96e5ae6d_u32, 0x6ae1_u16, 0x4b1c_u16, StaticArray[0x90_u8, 0xc_u8, 0xc6_u8, 0x48_u8, 0xe_u8, 0xaa_u8, 0x88_u8, 0x28_u8])
  struct IResultsFolder
    lpVtbl : IResultsFolderVTbl*
  end

  struct IAutoCompleteDropDownVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_drop_down_status : UInt64
    reset_enumerator : UInt64
  end

  IAutoCompleteDropDown_GUID = "3cd141f4-3c6a-11d2-bcaa-00c04fd929db"
  IID_IAutoCompleteDropDown = LibC::GUID.new(0x3cd141f4_u32, 0x3c6a_u16, 0x11d2_u16, StaticArray[0xbc_u8, 0xaa_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x29_u8, 0xdb_u8])
  struct IAutoCompleteDropDown
    lpVtbl : IAutoCompleteDropDownVTbl*
  end

  struct ICDBurnExtVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_supported_action_types : UInt64
  end

  ICDBurnExt_GUID = "2271dcca-74fc-4414-8fb7-c56b05ace2d7"
  IID_ICDBurnExt = LibC::GUID.new(0x2271dcca_u32, 0x74fc_u16, 0x4414_u16, StaticArray[0x8f_u8, 0xb7_u8, 0xc5_u8, 0x6b_u8, 0x5_u8, 0xac_u8, 0xe2_u8, 0xd7_u8])
  struct ICDBurnExt
    lpVtbl : ICDBurnExtVTbl*
  end

  struct IEnumReadyCallbackVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    enum_ready : UInt64
  end

  IEnumReadyCallback_GUID = "61e00d45-8fff-4e60-924e-6537b61612dd"
  IID_IEnumReadyCallback = LibC::GUID.new(0x61e00d45_u32, 0x8fff_u16, 0x4e60_u16, StaticArray[0x92_u8, 0x4e_u8, 0x65_u8, 0x37_u8, 0xb6_u8, 0x16_u8, 0x12_u8, 0xdd_u8])
  struct IEnumReadyCallback
    lpVtbl : IEnumReadyCallbackVTbl*
  end

  struct IEnumerableViewVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_enum_ready_callback : UInt64
    create_enum_id_list_from_contents : UInt64
  end

  IEnumerableView_GUID = "8c8bf236-1aec-495f-9894-91d57c3c686f"
  IID_IEnumerableView = LibC::GUID.new(0x8c8bf236_u32, 0x1aec_u16, 0x495f_u16, StaticArray[0x98_u8, 0x94_u8, 0x91_u8, 0xd5_u8, 0x7c_u8, 0x3c_u8, 0x68_u8, 0x6f_u8])
  struct IEnumerableView
    lpVtbl : IEnumerableViewVTbl*
  end

  struct IInsertItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    insert_item : UInt64
  end

  IInsertItem_GUID = "d2b57227-3d23-4b95-93c0-492bd454c356"
  IID_IInsertItem = LibC::GUID.new(0xd2b57227_u32, 0x3d23_u16, 0x4b95_u16, StaticArray[0x93_u8, 0xc0_u8, 0x49_u8, 0x2b_u8, 0xd4_u8, 0x54_u8, 0xc3_u8, 0x56_u8])
  struct IInsertItem
    lpVtbl : IInsertItemVTbl*
  end

  struct IFolderBandPrivVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_cascade : UInt64
    set_accelerators : UInt64
    set_no_icons : UInt64
    set_no_text : UInt64
  end

  IFolderBandPriv_GUID = "47c01f95-e185-412c-b5c5-4f27df965aea"
  IID_IFolderBandPriv = LibC::GUID.new(0x47c01f95_u32, 0xe185_u16, 0x412c_u16, StaticArray[0xb5_u8, 0xc5_u8, 0x4f_u8, 0x27_u8, 0xdf_u8, 0x96_u8, 0x5a_u8, 0xea_u8])
  struct IFolderBandPriv
    lpVtbl : IFolderBandPrivVTbl*
  end

  struct IImageRecompressVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    recompress_image : UInt64
  end

  IImageRecompress_GUID = "505f1513-6b3e-4892-a272-59f8889a4d3e"
  IID_IImageRecompress = LibC::GUID.new(0x505f1513_u32, 0x6b3e_u16, 0x4892_u16, StaticArray[0xa2_u8, 0x72_u8, 0x59_u8, 0xf8_u8, 0x88_u8, 0x9a_u8, 0x4d_u8, 0x3e_u8])
  struct IImageRecompress
    lpVtbl : IImageRecompressVTbl*
  end

  struct IFileDialogControlEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_item_selected : UInt64
    on_button_clicked : UInt64
    on_check_button_toggled : UInt64
    on_control_activating : UInt64
  end

  IFileDialogControlEvents_GUID = "36116642-d713-4b97-9b83-7484a9d00433"
  IID_IFileDialogControlEvents = LibC::GUID.new(0x36116642_u32, 0xd713_u16, 0x4b97_u16, StaticArray[0x9b_u8, 0x83_u8, 0x74_u8, 0x84_u8, 0xa9_u8, 0xd0_u8, 0x4_u8, 0x33_u8])
  struct IFileDialogControlEvents
    lpVtbl : IFileDialogControlEventsVTbl*
  end

  struct IFileDialog2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show : UInt64
    set_file_types : UInt64
    set_file_type_index : UInt64
    get_file_type_index : UInt64
    advise : UInt64
    unadvise : UInt64
    set_options : UInt64
    get_options : UInt64
    set_default_folder : UInt64
    set_folder : UInt64
    get_folder : UInt64
    get_current_selection : UInt64
    set_file_name : UInt64
    get_file_name : UInt64
    set_title : UInt64
    set_ok_button_label : UInt64
    set_file_name_label : UInt64
    get_result : UInt64
    add_place : UInt64
    set_default_extension : UInt64
    close : UInt64
    set_client_guid : UInt64
    clear_client_data : UInt64
    set_filter : UInt64
    set_cancel_button_label : UInt64
    set_navigation_root : UInt64
  end

  IFileDialog2_GUID = "61744fc7-85b5-4791-a9b0-272276309b13"
  IID_IFileDialog2 = LibC::GUID.new(0x61744fc7_u32, 0x85b5_u16, 0x4791_u16, StaticArray[0xa9_u8, 0xb0_u8, 0x27_u8, 0x22_u8, 0x76_u8, 0x30_u8, 0x9b_u8, 0x13_u8])
  struct IFileDialog2
    lpVtbl : IFileDialog2VTbl*
  end

  struct IApplicationAssociationRegistrationUIVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    launch_advanced_association_ui : UInt64
  end

  IApplicationAssociationRegistrationUI_GUID = "1f76a169-f994-40ac-8fc8-0959e8874710"
  IID_IApplicationAssociationRegistrationUI = LibC::GUID.new(0x1f76a169_u32, 0xf994_u16, 0x40ac_u16, StaticArray[0x8f_u8, 0xc8_u8, 0x9_u8, 0x59_u8, 0xe8_u8, 0x87_u8, 0x47_u8, 0x10_u8])
  struct IApplicationAssociationRegistrationUI
    lpVtbl : IApplicationAssociationRegistrationUIVTbl*
  end

  struct IShellRunDllVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    run : UInt64
  end

  IShellRunDll_GUID = "fce4bde0-4b68-4b80-8e9c-7426315a7388"
  IID_IShellRunDll = LibC::GUID.new(0xfce4bde0_u32, 0x4b68_u16, 0x4b80_u16, StaticArray[0x8e_u8, 0x9c_u8, 0x74_u8, 0x26_u8, 0x31_u8, 0x5a_u8, 0x73_u8, 0x88_u8])
  struct IShellRunDll
    lpVtbl : IShellRunDllVTbl*
  end

  struct IPreviousVersionsInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    are_snapshots_available : UInt64
  end

  IPreviousVersionsInfo_GUID = "76e54780-ad74-48e3-a695-3ba9a0aff10d"
  IID_IPreviousVersionsInfo = LibC::GUID.new(0x76e54780_u32, 0xad74_u16, 0x48e3_u16, StaticArray[0xa6_u8, 0x95_u8, 0x3b_u8, 0xa9_u8, 0xa0_u8, 0xaf_u8, 0xf1_u8, 0xd_u8])
  struct IPreviousVersionsInfo
    lpVtbl : IPreviousVersionsInfoVTbl*
  end

  struct IUseToBrowseItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_item_id_list : UInt64
    get_item : UInt64
  end

  IUseToBrowseItem_GUID = "05edda5c-98a3-4717-8adb-c5e7da991eb1"
  IID_IUseToBrowseItem = LibC::GUID.new(0x5edda5c_u32, 0x98a3_u16, 0x4717_u16, StaticArray[0x8a_u8, 0xdb_u8, 0xc5_u8, 0xe7_u8, 0xda_u8, 0x99_u8, 0x1e_u8, 0xb1_u8])
  struct IUseToBrowseItem
    lpVtbl : IUseToBrowseItemVTbl*
  end

  struct INameSpaceTreeControl2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    tree_advise : UInt64
    tree_unadvise : UInt64
    append_root : UInt64
    insert_root : UInt64
    remove_root : UInt64
    remove_all_roots : UInt64
    get_root_items : UInt64
    set_item_state : UInt64
    get_item_state : UInt64
    get_selected_items : UInt64
    get_item_custom_state : UInt64
    set_item_custom_state : UInt64
    ensure_item_visible : UInt64
    set_theme : UInt64
    get_next_item : UInt64
    hit_test : UInt64
    get_item_rect : UInt64
    collapse_all : UInt64
    set_control_style : UInt64
    get_control_style : UInt64
    set_control_style2 : UInt64
    get_control_style2 : UInt64
  end

  INameSpaceTreeControl2_GUID = "7cc7aed8-290e-49bc-8945-c1401cc9306c"
  IID_INameSpaceTreeControl2 = LibC::GUID.new(0x7cc7aed8_u32, 0x290e_u16, 0x49bc_u16, StaticArray[0x89_u8, 0x45_u8, 0xc1_u8, 0x40_u8, 0x1c_u8, 0xc9_u8, 0x30_u8, 0x6c_u8])
  struct INameSpaceTreeControl2
    lpVtbl : INameSpaceTreeControl2VTbl*
  end

  struct INameSpaceTreeControlEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_item_click : UInt64
    on_property_item_commit : UInt64
    on_item_state_changing : UInt64
    on_item_state_changed : UInt64
    on_selection_changed : UInt64
    on_keyboard_input : UInt64
    on_before_expand : UInt64
    on_after_expand : UInt64
    on_begin_label_edit : UInt64
    on_end_label_edit : UInt64
    on_get_tool_tip : UInt64
    on_before_item_delete : UInt64
    on_item_added : UInt64
    on_item_deleted : UInt64
    on_before_context_menu : UInt64
    on_after_context_menu : UInt64
    on_before_state_image_change : UInt64
    on_get_default_icon_index : UInt64
  end

  INameSpaceTreeControlEvents_GUID = "93d77985-b3d8-4484-8318-672cdda002ce"
  IID_INameSpaceTreeControlEvents = LibC::GUID.new(0x93d77985_u32, 0xb3d8_u16, 0x4484_u16, StaticArray[0x83_u8, 0x18_u8, 0x67_u8, 0x2c_u8, 0xdd_u8, 0xa0_u8, 0x2_u8, 0xce_u8])
  struct INameSpaceTreeControlEvents
    lpVtbl : INameSpaceTreeControlEventsVTbl*
  end

  struct INameSpaceTreeControlDropHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_drag_enter : UInt64
    on_drag_over : UInt64
    on_drag_position : UInt64
    on_drop : UInt64
    on_drop_position : UInt64
    on_drag_leave : UInt64
  end

  INameSpaceTreeControlDropHandler_GUID = "f9c665d6-c2f2-4c19-bf33-8322d7352f51"
  IID_INameSpaceTreeControlDropHandler = LibC::GUID.new(0xf9c665d6_u32, 0xc2f2_u16, 0x4c19_u16, StaticArray[0xbf_u8, 0x33_u8, 0x83_u8, 0x22_u8, 0xd7_u8, 0x35_u8, 0x2f_u8, 0x51_u8])
  struct INameSpaceTreeControlDropHandler
    lpVtbl : INameSpaceTreeControlDropHandlerVTbl*
  end

  struct INameSpaceTreeAccessibleVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_get_default_accessibility_action : UInt64
    on_do_default_accessibility_action : UInt64
    on_get_accessibility_role : UInt64
  end

  INameSpaceTreeAccessible_GUID = "71f312de-43ed-4190-8477-e9536b82350b"
  IID_INameSpaceTreeAccessible = LibC::GUID.new(0x71f312de_u32, 0x43ed_u16, 0x4190_u16, StaticArray[0x84_u8, 0x77_u8, 0xe9_u8, 0x53_u8, 0x6b_u8, 0x82_u8, 0x35_u8, 0xb_u8])
  struct INameSpaceTreeAccessible
    lpVtbl : INameSpaceTreeAccessibleVTbl*
  end

  struct INameSpaceTreeControlCustomDrawVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    pre_paint : UInt64
    post_paint : UInt64
    item_pre_paint : UInt64
    item_post_paint : UInt64
  end

  INameSpaceTreeControlCustomDraw_GUID = "2d3ba758-33ee-42d5-bb7b-5f3431d86c78"
  IID_INameSpaceTreeControlCustomDraw = LibC::GUID.new(0x2d3ba758_u32, 0x33ee_u16, 0x42d5_u16, StaticArray[0xbb_u8, 0x7b_u8, 0x5f_u8, 0x34_u8, 0x31_u8, 0xd8_u8, 0x6c_u8, 0x78_u8])
  struct INameSpaceTreeControlCustomDraw
    lpVtbl : INameSpaceTreeControlCustomDrawVTbl*
  end

  struct ITrayDeskBandVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show_desk_band : UInt64
    hide_desk_band : UInt64
    is_desk_band_shown : UInt64
    desk_band_registration_changed : UInt64
  end

  ITrayDeskBand_GUID = "6d67e846-5b9c-4db8-9cbc-dde12f4254f1"
  IID_ITrayDeskBand = LibC::GUID.new(0x6d67e846_u32, 0x5b9c_u16, 0x4db8_u16, StaticArray[0x9c_u8, 0xbc_u8, 0xdd_u8, 0xe1_u8, 0x2f_u8, 0x42_u8, 0x54_u8, 0xf1_u8])
  struct ITrayDeskBand
    lpVtbl : ITrayDeskBandVTbl*
  end

  struct IBandHostVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_band : UInt64
    set_band_availability : UInt64
    destroy_band : UInt64
  end

  IBandHost_GUID = "b9075c7c-d48e-403f-ab99-d6c77a1084ac"
  IID_IBandHost = LibC::GUID.new(0xb9075c7c_u32, 0xd48e_u16, 0x403f_u16, StaticArray[0xab_u8, 0x99_u8, 0xd6_u8, 0xc7_u8, 0x7a_u8, 0x10_u8, 0x84_u8, 0xac_u8])
  struct IBandHost
    lpVtbl : IBandHostVTbl*
  end

  struct IComputerInfoChangeNotifyVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    computer_info_changed : UInt64
  end

  IComputerInfoChangeNotify_GUID = "0df60d92-6818-46d6-b358-d66170dde466"
  IID_IComputerInfoChangeNotify = LibC::GUID.new(0xdf60d92_u32, 0x6818_u16, 0x46d6_u16, StaticArray[0xb3_u8, 0x58_u8, 0xd6_u8, 0x61_u8, 0x70_u8, 0xdd_u8, 0xe4_u8, 0x66_u8])
  struct IComputerInfoChangeNotify
    lpVtbl : IComputerInfoChangeNotifyVTbl*
  end

  struct IDesktopGadgetVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    run_gadget : UInt64
  end

  IDesktopGadget_GUID = "c1646bc4-f298-4f91-a204-eb2dd1709d1a"
  IID_IDesktopGadget = LibC::GUID.new(0xc1646bc4_u32, 0xf298_u16, 0x4f91_u16, StaticArray[0xa2_u8, 0x4_u8, 0xeb_u8, 0x2d_u8, 0xd1_u8, 0x70_u8, 0x9d_u8, 0x1a_u8])
  struct IDesktopGadget
    lpVtbl : IDesktopGadgetVTbl*
  end

  struct IAccessibilityDockingServiceCallbackVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    undocked : UInt64
  end

  IAccessibilityDockingServiceCallback_GUID = "157733fd-a592-42e5-b594-248468c5a81b"
  IID_IAccessibilityDockingServiceCallback = LibC::GUID.new(0x157733fd_u32, 0xa592_u16, 0x42e5_u16, StaticArray[0xb5_u8, 0x94_u8, 0x24_u8, 0x84_u8, 0x68_u8, 0xc5_u8, 0xa8_u8, 0x1b_u8])
  struct IAccessibilityDockingServiceCallback
    lpVtbl : IAccessibilityDockingServiceCallbackVTbl*
  end

  struct IAccessibilityDockingServiceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_available_size : UInt64
    dock_window : UInt64
    undock_window : UInt64
  end

  IAccessibilityDockingService_GUID = "8849dc22-cedf-4c95-998d-051419dd3f76"
  IID_IAccessibilityDockingService = LibC::GUID.new(0x8849dc22_u32, 0xcedf_u16, 0x4c95_u16, StaticArray[0x99_u8, 0x8d_u8, 0x5_u8, 0x14_u8, 0x19_u8, 0xdd_u8, 0x3f_u8, 0x76_u8])
  struct IAccessibilityDockingService
    lpVtbl : IAccessibilityDockingServiceVTbl*
  end

  struct IStorageProviderBannersVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_banner : UInt64
    clear_banner : UInt64
    clear_all_banners : UInt64
    get_banner : UInt64
  end

  IStorageProviderBanners_GUID = "5efb46d7-47c0-4b68-acda-ded47c90ec91"
  IID_IStorageProviderBanners = LibC::GUID.new(0x5efb46d7_u32, 0x47c0_u16, 0x4b68_u16, StaticArray[0xac_u8, 0xda_u8, 0xde_u8, 0xd4_u8, 0x7c_u8, 0x90_u8, 0xec_u8, 0x91_u8])
  struct IStorageProviderBanners
    lpVtbl : IStorageProviderBannersVTbl*
  end

  struct IStorageProviderCopyHookVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    copy_callback : UInt64
  end

  IStorageProviderCopyHook_GUID = "7bf992a9-af7a-4dba-b2e5-4d080b1ecbc6"
  IID_IStorageProviderCopyHook = LibC::GUID.new(0x7bf992a9_u32, 0xaf7a_u16, 0x4dba_u16, StaticArray[0xb2_u8, 0xe5_u8, 0x4d_u8, 0x8_u8, 0xb_u8, 0x1e_u8, 0xcb_u8, 0xc6_u8])
  struct IStorageProviderCopyHook
    lpVtbl : IStorageProviderCopyHookVTbl*
  end

  struct IWebBrowserVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    go_back : UInt64
    go_forward : UInt64
    go_home : UInt64
    go_search : UInt64
    navigate : UInt64
    refresh : UInt64
    refresh2 : UInt64
    stop : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_container : UInt64
    get_document : UInt64
    get_top_level_container : UInt64
    get_type : UInt64
    get_left : UInt64
    put_left : UInt64
    get_top : UInt64
    put_top : UInt64
    get_width : UInt64
    put_width : UInt64
    get_height : UInt64
    put_height : UInt64
    get_location_name : UInt64
    get_location_url : UInt64
    get_busy : UInt64
  end

  IWebBrowser_GUID = "eab22ac1-30c1-11cf-a7eb-0000c05bae0b"
  IID_IWebBrowser = LibC::GUID.new(0xeab22ac1_u32, 0x30c1_u16, 0x11cf_u16, StaticArray[0xa7_u8, 0xeb_u8, 0x0_u8, 0x0_u8, 0xc0_u8, 0x5b_u8, 0xae_u8, 0xb_u8])
  struct IWebBrowser
    lpVtbl : IWebBrowserVTbl*
  end

  struct DWebBrowserEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DWebBrowserEvents_GUID = "eab22ac2-30c1-11cf-a7eb-0000c05bae0b"
  IID_DWebBrowserEvents = LibC::GUID.new(0xeab22ac2_u32, 0x30c1_u16, 0x11cf_u16, StaticArray[0xa7_u8, 0xeb_u8, 0x0_u8, 0x0_u8, 0xc0_u8, 0x5b_u8, 0xae_u8, 0xb_u8])
  struct DWebBrowserEvents
    lpVtbl : DWebBrowserEventsVTbl*
  end

  struct IWebBrowserAppVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    go_back : UInt64
    go_forward : UInt64
    go_home : UInt64
    go_search : UInt64
    navigate : UInt64
    refresh : UInt64
    refresh2 : UInt64
    stop : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_container : UInt64
    get_document : UInt64
    get_top_level_container : UInt64
    get_type : UInt64
    get_left : UInt64
    put_left : UInt64
    get_top : UInt64
    put_top : UInt64
    get_width : UInt64
    put_width : UInt64
    get_height : UInt64
    put_height : UInt64
    get_location_name : UInt64
    get_location_url : UInt64
    get_busy : UInt64
    quit : UInt64
    client_to_window : UInt64
    put_property : UInt64
    get_property : UInt64
    get_name : UInt64
    get_hwnd : UInt64
    get_full_name : UInt64
    get_path : UInt64
    get_visible : UInt64
    put_visible : UInt64
    get_status_bar : UInt64
    put_status_bar : UInt64
    get_status_text : UInt64
    put_status_text : UInt64
    get_tool_bar : UInt64
    put_tool_bar : UInt64
    get_menu_bar : UInt64
    put_menu_bar : UInt64
    get_full_screen : UInt64
    put_full_screen : UInt64
  end

  IWebBrowserApp_GUID = "0002df05-0000-0000-c000-000000000046"
  IID_IWebBrowserApp = LibC::GUID.new(0x2df05_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IWebBrowserApp
    lpVtbl : IWebBrowserAppVTbl*
  end

  struct IWebBrowser2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    go_back : UInt64
    go_forward : UInt64
    go_home : UInt64
    go_search : UInt64
    navigate : UInt64
    refresh : UInt64
    refresh2 : UInt64
    stop : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_container : UInt64
    get_document : UInt64
    get_top_level_container : UInt64
    get_type : UInt64
    get_left : UInt64
    put_left : UInt64
    get_top : UInt64
    put_top : UInt64
    get_width : UInt64
    put_width : UInt64
    get_height : UInt64
    put_height : UInt64
    get_location_name : UInt64
    get_location_url : UInt64
    get_busy : UInt64
    quit : UInt64
    client_to_window : UInt64
    put_property : UInt64
    get_property : UInt64
    get_name : UInt64
    get_hwnd : UInt64
    get_full_name : UInt64
    get_path : UInt64
    get_visible : UInt64
    put_visible : UInt64
    get_status_bar : UInt64
    put_status_bar : UInt64
    get_status_text : UInt64
    put_status_text : UInt64
    get_tool_bar : UInt64
    put_tool_bar : UInt64
    get_menu_bar : UInt64
    put_menu_bar : UInt64
    get_full_screen : UInt64
    put_full_screen : UInt64
    navigate2 : UInt64
    query_status_wb : UInt64
    exec_wb : UInt64
    show_browser_bar : UInt64
    get_ready_state : UInt64
    get_offline : UInt64
    put_offline : UInt64
    get_silent : UInt64
    put_silent : UInt64
    get_register_as_browser : UInt64
    put_register_as_browser : UInt64
    get_register_as_drop_target : UInt64
    put_register_as_drop_target : UInt64
    get_theater_mode : UInt64
    put_theater_mode : UInt64
    get_address_bar : UInt64
    put_address_bar : UInt64
    get_resizable : UInt64
    put_resizable : UInt64
  end

  IWebBrowser2_GUID = "d30c1661-cdaf-11d0-8a3e-00c04fc9e26e"
  IID_IWebBrowser2 = LibC::GUID.new(0xd30c1661_u32, 0xcdaf_u16, 0x11d0_u16, StaticArray[0x8a_u8, 0x3e_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc9_u8, 0xe2_u8, 0x6e_u8])
  struct IWebBrowser2
    lpVtbl : IWebBrowser2VTbl*
  end

  struct DWebBrowserEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DWebBrowserEvents2_GUID = "34a715a0-6587-11d0-924a-0020afc7ac4d"
  IID_DWebBrowserEvents2 = LibC::GUID.new(0x34a715a0_u32, 0x6587_u16, 0x11d0_u16, StaticArray[0x92_u8, 0x4a_u8, 0x0_u8, 0x20_u8, 0xaf_u8, 0xc7_u8, 0xac_u8, 0x4d_u8])
  struct DWebBrowserEvents2
    lpVtbl : DWebBrowserEvents2VTbl*
  end

  struct DShellWindowsEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DShellWindowsEvents_GUID = "fe4106e0-399a-11d0-a48c-00a0c90a8f39"
  IID_DShellWindowsEvents = LibC::GUID.new(0xfe4106e0_u32, 0x399a_u16, 0x11d0_u16, StaticArray[0xa4_u8, 0x8c_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x8f_u8, 0x39_u8])
  struct DShellWindowsEvents
    lpVtbl : DShellWindowsEventsVTbl*
  end

  struct IShellWindowsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_count : UInt64
    item : UInt64
    _new_enum : UInt64
    register : UInt64
    register_pending : UInt64
    revoke : UInt64
    on_navigate : UInt64
    on_activated : UInt64
    find_window_sw : UInt64
    on_created : UInt64
    process_attach_detach : UInt64
  end

  IShellWindows_GUID = "85cb6900-4d95-11cf-960c-0080c7f4ee85"
  IID_IShellWindows = LibC::GUID.new(0x85cb6900_u32, 0x4d95_u16, 0x11cf_u16, StaticArray[0x96_u8, 0xc_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0xf4_u8, 0xee_u8, 0x85_u8])
  struct IShellWindows
    lpVtbl : IShellWindowsVTbl*
  end

  struct IShellUIHelperVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    reset_first_boot_mode : UInt64
    reset_safe_mode : UInt64
    refresh_offline_desktop : UInt64
    add_favorite : UInt64
    add_channel : UInt64
    add_desktop_component : UInt64
    is_subscribed : UInt64
    navigate_and_find : UInt64
    import_export_favorites : UInt64
    auto_complete_save_form : UInt64
    auto_scan : UInt64
    auto_complete_attach : UInt64
    show_browser_ui : UInt64
  end

  IShellUIHelper_GUID = "729fe2f8-1ea8-11d1-8f85-00c04fc2fbe1"
  IID_IShellUIHelper = LibC::GUID.new(0x729fe2f8_u32, 0x1ea8_u16, 0x11d1_u16, StaticArray[0x8f_u8, 0x85_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc2_u8, 0xfb_u8, 0xe1_u8])
  struct IShellUIHelper
    lpVtbl : IShellUIHelperVTbl*
  end

  struct IShellUIHelper2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    reset_first_boot_mode : UInt64
    reset_safe_mode : UInt64
    refresh_offline_desktop : UInt64
    add_favorite : UInt64
    add_channel : UInt64
    add_desktop_component : UInt64
    is_subscribed : UInt64
    navigate_and_find : UInt64
    import_export_favorites : UInt64
    auto_complete_save_form : UInt64
    auto_scan : UInt64
    auto_complete_attach : UInt64
    show_browser_ui : UInt64
    add_search_provider : UInt64
    run_once_shown : UInt64
    skip_run_once : UInt64
    customize_settings : UInt64
    sqm_enabled : UInt64
    phishing_enabled : UInt64
    brand_image_uri : UInt64
    skip_tabs_welcome : UInt64
    diagnose_connection : UInt64
    customize_clear_type : UInt64
    is_search_provider_installed : UInt64
    is_search_migrated : UInt64
    default_search_provider : UInt64
    run_once_required_settings_complete : UInt64
    run_once_has_shown : UInt64
    search_guide_url : UInt64
  end

  IShellUIHelper2_GUID = "a7fe6eda-1932-4281-b881-87b31b8bc52c"
  IID_IShellUIHelper2 = LibC::GUID.new(0xa7fe6eda_u32, 0x1932_u16, 0x4281_u16, StaticArray[0xb8_u8, 0x81_u8, 0x87_u8, 0xb3_u8, 0x1b_u8, 0x8b_u8, 0xc5_u8, 0x2c_u8])
  struct IShellUIHelper2
    lpVtbl : IShellUIHelper2VTbl*
  end

  struct IShellUIHelper3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    reset_first_boot_mode : UInt64
    reset_safe_mode : UInt64
    refresh_offline_desktop : UInt64
    add_favorite : UInt64
    add_channel : UInt64
    add_desktop_component : UInt64
    is_subscribed : UInt64
    navigate_and_find : UInt64
    import_export_favorites : UInt64
    auto_complete_save_form : UInt64
    auto_scan : UInt64
    auto_complete_attach : UInt64
    show_browser_ui : UInt64
    add_search_provider : UInt64
    run_once_shown : UInt64
    skip_run_once : UInt64
    customize_settings : UInt64
    sqm_enabled : UInt64
    phishing_enabled : UInt64
    brand_image_uri : UInt64
    skip_tabs_welcome : UInt64
    diagnose_connection : UInt64
    customize_clear_type : UInt64
    is_search_provider_installed : UInt64
    is_search_migrated : UInt64
    default_search_provider : UInt64
    run_once_required_settings_complete : UInt64
    run_once_has_shown : UInt64
    search_guide_url : UInt64
    add_service : UInt64
    is_service_installed : UInt64
    in_private_filtering_enabled : UInt64
    add_to_favorites_bar : UInt64
    build_new_tab_page : UInt64
    set_recently_closed_visible : UInt64
    set_activities_visible : UInt64
    content_discovery_reset : UInt64
    is_suggested_sites_enabled : UInt64
    enable_suggested_sites : UInt64
    navigate_to_suggested_sites : UInt64
    show_tabs_help : UInt64
    show_in_private_help : UInt64
  end

  IShellUIHelper3_GUID = "528df2ec-d419-40bc-9b6d-dcdbf9c1b25d"
  IID_IShellUIHelper3 = LibC::GUID.new(0x528df2ec_u32, 0xd419_u16, 0x40bc_u16, StaticArray[0x9b_u8, 0x6d_u8, 0xdc_u8, 0xdb_u8, 0xf9_u8, 0xc1_u8, 0xb2_u8, 0x5d_u8])
  struct IShellUIHelper3
    lpVtbl : IShellUIHelper3VTbl*
  end

  struct IShellUIHelper4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    reset_first_boot_mode : UInt64
    reset_safe_mode : UInt64
    refresh_offline_desktop : UInt64
    add_favorite : UInt64
    add_channel : UInt64
    add_desktop_component : UInt64
    is_subscribed : UInt64
    navigate_and_find : UInt64
    import_export_favorites : UInt64
    auto_complete_save_form : UInt64
    auto_scan : UInt64
    auto_complete_attach : UInt64
    show_browser_ui : UInt64
    add_search_provider : UInt64
    run_once_shown : UInt64
    skip_run_once : UInt64
    customize_settings : UInt64
    sqm_enabled : UInt64
    phishing_enabled : UInt64
    brand_image_uri : UInt64
    skip_tabs_welcome : UInt64
    diagnose_connection : UInt64
    customize_clear_type : UInt64
    is_search_provider_installed : UInt64
    is_search_migrated : UInt64
    default_search_provider : UInt64
    run_once_required_settings_complete : UInt64
    run_once_has_shown : UInt64
    search_guide_url : UInt64
    add_service : UInt64
    is_service_installed : UInt64
    in_private_filtering_enabled : UInt64
    add_to_favorites_bar : UInt64
    build_new_tab_page : UInt64
    set_recently_closed_visible : UInt64
    set_activities_visible : UInt64
    content_discovery_reset : UInt64
    is_suggested_sites_enabled : UInt64
    enable_suggested_sites : UInt64
    navigate_to_suggested_sites : UInt64
    show_tabs_help : UInt64
    show_in_private_help : UInt64
    ms_is_site_mode : UInt64
    ms_site_mode_show_thumb_bar : UInt64
    ms_site_mode_add_thumb_bar_button : UInt64
    ms_site_mode_update_thumb_bar_button : UInt64
    ms_site_mode_set_icon_overlay : UInt64
    ms_site_mode_clear_icon_overlay : UInt64
    ms_add_site_mode : UInt64
    ms_site_mode_create_jump_list : UInt64
    ms_site_mode_add_jump_list_item : UInt64
    ms_site_mode_clear_jump_list : UInt64
    ms_site_mode_show_jump_list : UInt64
    ms_site_mode_add_button_style : UInt64
    ms_site_mode_show_button_style : UInt64
    ms_site_mode_activate : UInt64
    ms_is_site_mode_first_run : UInt64
    ms_add_tracking_protection_list : UInt64
    ms_tracking_protection_enabled : UInt64
    ms_active_x_filtering_enabled : UInt64
  end

  IShellUIHelper4_GUID = "b36e6a53-8073-499e-824c-d776330a333e"
  IID_IShellUIHelper4 = LibC::GUID.new(0xb36e6a53_u32, 0x8073_u16, 0x499e_u16, StaticArray[0x82_u8, 0x4c_u8, 0xd7_u8, 0x76_u8, 0x33_u8, 0xa_u8, 0x33_u8, 0x3e_u8])
  struct IShellUIHelper4
    lpVtbl : IShellUIHelper4VTbl*
  end

  struct IShellUIHelper5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    reset_first_boot_mode : UInt64
    reset_safe_mode : UInt64
    refresh_offline_desktop : UInt64
    add_favorite : UInt64
    add_channel : UInt64
    add_desktop_component : UInt64
    is_subscribed : UInt64
    navigate_and_find : UInt64
    import_export_favorites : UInt64
    auto_complete_save_form : UInt64
    auto_scan : UInt64
    auto_complete_attach : UInt64
    show_browser_ui : UInt64
    add_search_provider : UInt64
    run_once_shown : UInt64
    skip_run_once : UInt64
    customize_settings : UInt64
    sqm_enabled : UInt64
    phishing_enabled : UInt64
    brand_image_uri : UInt64
    skip_tabs_welcome : UInt64
    diagnose_connection : UInt64
    customize_clear_type : UInt64
    is_search_provider_installed : UInt64
    is_search_migrated : UInt64
    default_search_provider : UInt64
    run_once_required_settings_complete : UInt64
    run_once_has_shown : UInt64
    search_guide_url : UInt64
    add_service : UInt64
    is_service_installed : UInt64
    in_private_filtering_enabled : UInt64
    add_to_favorites_bar : UInt64
    build_new_tab_page : UInt64
    set_recently_closed_visible : UInt64
    set_activities_visible : UInt64
    content_discovery_reset : UInt64
    is_suggested_sites_enabled : UInt64
    enable_suggested_sites : UInt64
    navigate_to_suggested_sites : UInt64
    show_tabs_help : UInt64
    show_in_private_help : UInt64
    ms_is_site_mode : UInt64
    ms_site_mode_show_thumb_bar : UInt64
    ms_site_mode_add_thumb_bar_button : UInt64
    ms_site_mode_update_thumb_bar_button : UInt64
    ms_site_mode_set_icon_overlay : UInt64
    ms_site_mode_clear_icon_overlay : UInt64
    ms_add_site_mode : UInt64
    ms_site_mode_create_jump_list : UInt64
    ms_site_mode_add_jump_list_item : UInt64
    ms_site_mode_clear_jump_list : UInt64
    ms_site_mode_show_jump_list : UInt64
    ms_site_mode_add_button_style : UInt64
    ms_site_mode_show_button_style : UInt64
    ms_site_mode_activate : UInt64
    ms_is_site_mode_first_run : UInt64
    ms_add_tracking_protection_list : UInt64
    ms_tracking_protection_enabled : UInt64
    ms_active_x_filtering_enabled : UInt64
    ms_provision_networks : UInt64
    ms_report_safe_url : UInt64
    ms_site_mode_refresh_badge : UInt64
    ms_site_mode_clear_badge : UInt64
    ms_diagnose_connection_ui_less : UInt64
    ms_launch_network_client_help : UInt64
    ms_change_default_browser : UInt64
  end

  IShellUIHelper5_GUID = "a2a08b09-103d-4d3f-b91c-ea455ca82efa"
  IID_IShellUIHelper5 = LibC::GUID.new(0xa2a08b09_u32, 0x103d_u16, 0x4d3f_u16, StaticArray[0xb9_u8, 0x1c_u8, 0xea_u8, 0x45_u8, 0x5c_u8, 0xa8_u8, 0x2e_u8, 0xfa_u8])
  struct IShellUIHelper5
    lpVtbl : IShellUIHelper5VTbl*
  end

  struct IShellUIHelper6VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    reset_first_boot_mode : UInt64
    reset_safe_mode : UInt64
    refresh_offline_desktop : UInt64
    add_favorite : UInt64
    add_channel : UInt64
    add_desktop_component : UInt64
    is_subscribed : UInt64
    navigate_and_find : UInt64
    import_export_favorites : UInt64
    auto_complete_save_form : UInt64
    auto_scan : UInt64
    auto_complete_attach : UInt64
    show_browser_ui : UInt64
    add_search_provider : UInt64
    run_once_shown : UInt64
    skip_run_once : UInt64
    customize_settings : UInt64
    sqm_enabled : UInt64
    phishing_enabled : UInt64
    brand_image_uri : UInt64
    skip_tabs_welcome : UInt64
    diagnose_connection : UInt64
    customize_clear_type : UInt64
    is_search_provider_installed : UInt64
    is_search_migrated : UInt64
    default_search_provider : UInt64
    run_once_required_settings_complete : UInt64
    run_once_has_shown : UInt64
    search_guide_url : UInt64
    add_service : UInt64
    is_service_installed : UInt64
    in_private_filtering_enabled : UInt64
    add_to_favorites_bar : UInt64
    build_new_tab_page : UInt64
    set_recently_closed_visible : UInt64
    set_activities_visible : UInt64
    content_discovery_reset : UInt64
    is_suggested_sites_enabled : UInt64
    enable_suggested_sites : UInt64
    navigate_to_suggested_sites : UInt64
    show_tabs_help : UInt64
    show_in_private_help : UInt64
    ms_is_site_mode : UInt64
    ms_site_mode_show_thumb_bar : UInt64
    ms_site_mode_add_thumb_bar_button : UInt64
    ms_site_mode_update_thumb_bar_button : UInt64
    ms_site_mode_set_icon_overlay : UInt64
    ms_site_mode_clear_icon_overlay : UInt64
    ms_add_site_mode : UInt64
    ms_site_mode_create_jump_list : UInt64
    ms_site_mode_add_jump_list_item : UInt64
    ms_site_mode_clear_jump_list : UInt64
    ms_site_mode_show_jump_list : UInt64
    ms_site_mode_add_button_style : UInt64
    ms_site_mode_show_button_style : UInt64
    ms_site_mode_activate : UInt64
    ms_is_site_mode_first_run : UInt64
    ms_add_tracking_protection_list : UInt64
    ms_tracking_protection_enabled : UInt64
    ms_active_x_filtering_enabled : UInt64
    ms_provision_networks : UInt64
    ms_report_safe_url : UInt64
    ms_site_mode_refresh_badge : UInt64
    ms_site_mode_clear_badge : UInt64
    ms_diagnose_connection_ui_less : UInt64
    ms_launch_network_client_help : UInt64
    ms_change_default_browser : UInt64
    ms_stop_periodic_tile_update : UInt64
    ms_start_periodic_tile_update : UInt64
    ms_start_periodic_tile_update_batch : UInt64
    ms_clear_tile : UInt64
    ms_enable_tile_notification_queue : UInt64
    ms_pinned_site_state : UInt64
    ms_enable_tile_notification_queue_for_square150x150 : UInt64
    ms_enable_tile_notification_queue_for_wide310x150 : UInt64
    ms_enable_tile_notification_queue_for_square310x310 : UInt64
    ms_scheduled_tile_notification : UInt64
    ms_remove_scheduled_tile_notification : UInt64
    ms_start_periodic_badge_update : UInt64
    ms_stop_periodic_badge_update : UInt64
    ms_launch_internet_options : UInt64
  end

  IShellUIHelper6_GUID = "987a573e-46ee-4e89-96ab-ddf7f8fdc98c"
  IID_IShellUIHelper6 = LibC::GUID.new(0x987a573e_u32, 0x46ee_u16, 0x4e89_u16, StaticArray[0x96_u8, 0xab_u8, 0xdd_u8, 0xf7_u8, 0xf8_u8, 0xfd_u8, 0xc9_u8, 0x8c_u8])
  struct IShellUIHelper6
    lpVtbl : IShellUIHelper6VTbl*
  end

  struct IShellUIHelper7VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    reset_first_boot_mode : UInt64
    reset_safe_mode : UInt64
    refresh_offline_desktop : UInt64
    add_favorite : UInt64
    add_channel : UInt64
    add_desktop_component : UInt64
    is_subscribed : UInt64
    navigate_and_find : UInt64
    import_export_favorites : UInt64
    auto_complete_save_form : UInt64
    auto_scan : UInt64
    auto_complete_attach : UInt64
    show_browser_ui : UInt64
    add_search_provider : UInt64
    run_once_shown : UInt64
    skip_run_once : UInt64
    customize_settings : UInt64
    sqm_enabled : UInt64
    phishing_enabled : UInt64
    brand_image_uri : UInt64
    skip_tabs_welcome : UInt64
    diagnose_connection : UInt64
    customize_clear_type : UInt64
    is_search_provider_installed : UInt64
    is_search_migrated : UInt64
    default_search_provider : UInt64
    run_once_required_settings_complete : UInt64
    run_once_has_shown : UInt64
    search_guide_url : UInt64
    add_service : UInt64
    is_service_installed : UInt64
    in_private_filtering_enabled : UInt64
    add_to_favorites_bar : UInt64
    build_new_tab_page : UInt64
    set_recently_closed_visible : UInt64
    set_activities_visible : UInt64
    content_discovery_reset : UInt64
    is_suggested_sites_enabled : UInt64
    enable_suggested_sites : UInt64
    navigate_to_suggested_sites : UInt64
    show_tabs_help : UInt64
    show_in_private_help : UInt64
    ms_is_site_mode : UInt64
    ms_site_mode_show_thumb_bar : UInt64
    ms_site_mode_add_thumb_bar_button : UInt64
    ms_site_mode_update_thumb_bar_button : UInt64
    ms_site_mode_set_icon_overlay : UInt64
    ms_site_mode_clear_icon_overlay : UInt64
    ms_add_site_mode : UInt64
    ms_site_mode_create_jump_list : UInt64
    ms_site_mode_add_jump_list_item : UInt64
    ms_site_mode_clear_jump_list : UInt64
    ms_site_mode_show_jump_list : UInt64
    ms_site_mode_add_button_style : UInt64
    ms_site_mode_show_button_style : UInt64
    ms_site_mode_activate : UInt64
    ms_is_site_mode_first_run : UInt64
    ms_add_tracking_protection_list : UInt64
    ms_tracking_protection_enabled : UInt64
    ms_active_x_filtering_enabled : UInt64
    ms_provision_networks : UInt64
    ms_report_safe_url : UInt64
    ms_site_mode_refresh_badge : UInt64
    ms_site_mode_clear_badge : UInt64
    ms_diagnose_connection_ui_less : UInt64
    ms_launch_network_client_help : UInt64
    ms_change_default_browser : UInt64
    ms_stop_periodic_tile_update : UInt64
    ms_start_periodic_tile_update : UInt64
    ms_start_periodic_tile_update_batch : UInt64
    ms_clear_tile : UInt64
    ms_enable_tile_notification_queue : UInt64
    ms_pinned_site_state : UInt64
    ms_enable_tile_notification_queue_for_square150x150 : UInt64
    ms_enable_tile_notification_queue_for_wide310x150 : UInt64
    ms_enable_tile_notification_queue_for_square310x310 : UInt64
    ms_scheduled_tile_notification : UInt64
    ms_remove_scheduled_tile_notification : UInt64
    ms_start_periodic_badge_update : UInt64
    ms_stop_periodic_badge_update : UInt64
    ms_launch_internet_options : UInt64
    set_experimental_flag : UInt64
    get_experimental_flag : UInt64
    set_experimental_value : UInt64
    get_experimental_value : UInt64
    reset_all_experimental_flags_and_values : UInt64
    get_need_ie_auto_launch_flag : UInt64
    set_need_ie_auto_launch_flag : UInt64
    has_need_ie_auto_launch_flag : UInt64
    launch_ie : UInt64
  end

  IShellUIHelper7_GUID = "60e567c8-9573-4ab2-a264-637c6c161cb1"
  IID_IShellUIHelper7 = LibC::GUID.new(0x60e567c8_u32, 0x9573_u16, 0x4ab2_u16, StaticArray[0xa2_u8, 0x64_u8, 0x63_u8, 0x7c_u8, 0x6c_u8, 0x16_u8, 0x1c_u8, 0xb1_u8])
  struct IShellUIHelper7
    lpVtbl : IShellUIHelper7VTbl*
  end

  struct IShellUIHelper8VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    reset_first_boot_mode : UInt64
    reset_safe_mode : UInt64
    refresh_offline_desktop : UInt64
    add_favorite : UInt64
    add_channel : UInt64
    add_desktop_component : UInt64
    is_subscribed : UInt64
    navigate_and_find : UInt64
    import_export_favorites : UInt64
    auto_complete_save_form : UInt64
    auto_scan : UInt64
    auto_complete_attach : UInt64
    show_browser_ui : UInt64
    add_search_provider : UInt64
    run_once_shown : UInt64
    skip_run_once : UInt64
    customize_settings : UInt64
    sqm_enabled : UInt64
    phishing_enabled : UInt64
    brand_image_uri : UInt64
    skip_tabs_welcome : UInt64
    diagnose_connection : UInt64
    customize_clear_type : UInt64
    is_search_provider_installed : UInt64
    is_search_migrated : UInt64
    default_search_provider : UInt64
    run_once_required_settings_complete : UInt64
    run_once_has_shown : UInt64
    search_guide_url : UInt64
    add_service : UInt64
    is_service_installed : UInt64
    in_private_filtering_enabled : UInt64
    add_to_favorites_bar : UInt64
    build_new_tab_page : UInt64
    set_recently_closed_visible : UInt64
    set_activities_visible : UInt64
    content_discovery_reset : UInt64
    is_suggested_sites_enabled : UInt64
    enable_suggested_sites : UInt64
    navigate_to_suggested_sites : UInt64
    show_tabs_help : UInt64
    show_in_private_help : UInt64
    ms_is_site_mode : UInt64
    ms_site_mode_show_thumb_bar : UInt64
    ms_site_mode_add_thumb_bar_button : UInt64
    ms_site_mode_update_thumb_bar_button : UInt64
    ms_site_mode_set_icon_overlay : UInt64
    ms_site_mode_clear_icon_overlay : UInt64
    ms_add_site_mode : UInt64
    ms_site_mode_create_jump_list : UInt64
    ms_site_mode_add_jump_list_item : UInt64
    ms_site_mode_clear_jump_list : UInt64
    ms_site_mode_show_jump_list : UInt64
    ms_site_mode_add_button_style : UInt64
    ms_site_mode_show_button_style : UInt64
    ms_site_mode_activate : UInt64
    ms_is_site_mode_first_run : UInt64
    ms_add_tracking_protection_list : UInt64
    ms_tracking_protection_enabled : UInt64
    ms_active_x_filtering_enabled : UInt64
    ms_provision_networks : UInt64
    ms_report_safe_url : UInt64
    ms_site_mode_refresh_badge : UInt64
    ms_site_mode_clear_badge : UInt64
    ms_diagnose_connection_ui_less : UInt64
    ms_launch_network_client_help : UInt64
    ms_change_default_browser : UInt64
    ms_stop_periodic_tile_update : UInt64
    ms_start_periodic_tile_update : UInt64
    ms_start_periodic_tile_update_batch : UInt64
    ms_clear_tile : UInt64
    ms_enable_tile_notification_queue : UInt64
    ms_pinned_site_state : UInt64
    ms_enable_tile_notification_queue_for_square150x150 : UInt64
    ms_enable_tile_notification_queue_for_wide310x150 : UInt64
    ms_enable_tile_notification_queue_for_square310x310 : UInt64
    ms_scheduled_tile_notification : UInt64
    ms_remove_scheduled_tile_notification : UInt64
    ms_start_periodic_badge_update : UInt64
    ms_stop_periodic_badge_update : UInt64
    ms_launch_internet_options : UInt64
    set_experimental_flag : UInt64
    get_experimental_flag : UInt64
    set_experimental_value : UInt64
    get_experimental_value : UInt64
    reset_all_experimental_flags_and_values : UInt64
    get_need_ie_auto_launch_flag : UInt64
    set_need_ie_auto_launch_flag : UInt64
    has_need_ie_auto_launch_flag : UInt64
    launch_ie : UInt64
    get_cv_list_data : UInt64
    get_cv_list_local_data : UInt64
    get_emie_list_data : UInt64
    get_emie_list_local_data : UInt64
    open_favorites_pane : UInt64
    open_favorites_settings : UInt64
    launch_in_hvsi : UInt64
  end

  IShellUIHelper8_GUID = "66debcf2-05b0-4f07-b49b-b96241a65db2"
  IID_IShellUIHelper8 = LibC::GUID.new(0x66debcf2_u32, 0x5b0_u16, 0x4f07_u16, StaticArray[0xb4_u8, 0x9b_u8, 0xb9_u8, 0x62_u8, 0x41_u8, 0xa6_u8, 0x5d_u8, 0xb2_u8])
  struct IShellUIHelper8
    lpVtbl : IShellUIHelper8VTbl*
  end

  struct IShellUIHelper9VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    reset_first_boot_mode : UInt64
    reset_safe_mode : UInt64
    refresh_offline_desktop : UInt64
    add_favorite : UInt64
    add_channel : UInt64
    add_desktop_component : UInt64
    is_subscribed : UInt64
    navigate_and_find : UInt64
    import_export_favorites : UInt64
    auto_complete_save_form : UInt64
    auto_scan : UInt64
    auto_complete_attach : UInt64
    show_browser_ui : UInt64
    add_search_provider : UInt64
    run_once_shown : UInt64
    skip_run_once : UInt64
    customize_settings : UInt64
    sqm_enabled : UInt64
    phishing_enabled : UInt64
    brand_image_uri : UInt64
    skip_tabs_welcome : UInt64
    diagnose_connection : UInt64
    customize_clear_type : UInt64
    is_search_provider_installed : UInt64
    is_search_migrated : UInt64
    default_search_provider : UInt64
    run_once_required_settings_complete : UInt64
    run_once_has_shown : UInt64
    search_guide_url : UInt64
    add_service : UInt64
    is_service_installed : UInt64
    in_private_filtering_enabled : UInt64
    add_to_favorites_bar : UInt64
    build_new_tab_page : UInt64
    set_recently_closed_visible : UInt64
    set_activities_visible : UInt64
    content_discovery_reset : UInt64
    is_suggested_sites_enabled : UInt64
    enable_suggested_sites : UInt64
    navigate_to_suggested_sites : UInt64
    show_tabs_help : UInt64
    show_in_private_help : UInt64
    ms_is_site_mode : UInt64
    ms_site_mode_show_thumb_bar : UInt64
    ms_site_mode_add_thumb_bar_button : UInt64
    ms_site_mode_update_thumb_bar_button : UInt64
    ms_site_mode_set_icon_overlay : UInt64
    ms_site_mode_clear_icon_overlay : UInt64
    ms_add_site_mode : UInt64
    ms_site_mode_create_jump_list : UInt64
    ms_site_mode_add_jump_list_item : UInt64
    ms_site_mode_clear_jump_list : UInt64
    ms_site_mode_show_jump_list : UInt64
    ms_site_mode_add_button_style : UInt64
    ms_site_mode_show_button_style : UInt64
    ms_site_mode_activate : UInt64
    ms_is_site_mode_first_run : UInt64
    ms_add_tracking_protection_list : UInt64
    ms_tracking_protection_enabled : UInt64
    ms_active_x_filtering_enabled : UInt64
    ms_provision_networks : UInt64
    ms_report_safe_url : UInt64
    ms_site_mode_refresh_badge : UInt64
    ms_site_mode_clear_badge : UInt64
    ms_diagnose_connection_ui_less : UInt64
    ms_launch_network_client_help : UInt64
    ms_change_default_browser : UInt64
    ms_stop_periodic_tile_update : UInt64
    ms_start_periodic_tile_update : UInt64
    ms_start_periodic_tile_update_batch : UInt64
    ms_clear_tile : UInt64
    ms_enable_tile_notification_queue : UInt64
    ms_pinned_site_state : UInt64
    ms_enable_tile_notification_queue_for_square150x150 : UInt64
    ms_enable_tile_notification_queue_for_wide310x150 : UInt64
    ms_enable_tile_notification_queue_for_square310x310 : UInt64
    ms_scheduled_tile_notification : UInt64
    ms_remove_scheduled_tile_notification : UInt64
    ms_start_periodic_badge_update : UInt64
    ms_stop_periodic_badge_update : UInt64
    ms_launch_internet_options : UInt64
    set_experimental_flag : UInt64
    get_experimental_flag : UInt64
    set_experimental_value : UInt64
    get_experimental_value : UInt64
    reset_all_experimental_flags_and_values : UInt64
    get_need_ie_auto_launch_flag : UInt64
    set_need_ie_auto_launch_flag : UInt64
    has_need_ie_auto_launch_flag : UInt64
    launch_ie : UInt64
    get_cv_list_data : UInt64
    get_cv_list_local_data : UInt64
    get_emie_list_data : UInt64
    get_emie_list_local_data : UInt64
    open_favorites_pane : UInt64
    open_favorites_settings : UInt64
    launch_in_hvsi : UInt64
    get_os_sku : UInt64
  end

  IShellUIHelper9_GUID = "6cdf73b0-7f2f-451f-bc0f-63e0f3284e54"
  IID_IShellUIHelper9 = LibC::GUID.new(0x6cdf73b0_u32, 0x7f2f_u16, 0x451f_u16, StaticArray[0xbc_u8, 0xf_u8, 0x63_u8, 0xe0_u8, 0xf3_u8, 0x28_u8, 0x4e_u8, 0x54_u8])
  struct IShellUIHelper9
    lpVtbl : IShellUIHelper9VTbl*
  end

  struct DShellNameSpaceEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DShellNameSpaceEvents_GUID = "55136806-b2de-11d1-b9f2-00a0c98bc547"
  IID_DShellNameSpaceEvents = LibC::GUID.new(0x55136806_u32, 0xb2de_u16, 0x11d1_u16, StaticArray[0xb9_u8, 0xf2_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x8b_u8, 0xc5_u8, 0x47_u8])
  struct DShellNameSpaceEvents
    lpVtbl : DShellNameSpaceEventsVTbl*
  end

  struct IShellFavoritesNameSpaceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    move_selection_up : UInt64
    move_selection_down : UInt64
    reset_sort : UInt64
    new_folder : UInt64
    synchronize : UInt64
    import : UInt64
    export : UInt64
    invoke_context_menu_command : UInt64
    move_selection_to : UInt64
    get_subscriptions_enabled : UInt64
    create_subscription_for_selection : UInt64
    delete_subscription_for_selection : UInt64
    set_root : UInt64
  end

  IShellFavoritesNameSpace_GUID = "55136804-b2de-11d1-b9f2-00a0c98bc547"
  IID_IShellFavoritesNameSpace = LibC::GUID.new(0x55136804_u32, 0xb2de_u16, 0x11d1_u16, StaticArray[0xb9_u8, 0xf2_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x8b_u8, 0xc5_u8, 0x47_u8])
  struct IShellFavoritesNameSpace
    lpVtbl : IShellFavoritesNameSpaceVTbl*
  end

  struct IShellNameSpaceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    move_selection_up : UInt64
    move_selection_down : UInt64
    reset_sort : UInt64
    new_folder : UInt64
    synchronize : UInt64
    import : UInt64
    export : UInt64
    invoke_context_menu_command : UInt64
    move_selection_to : UInt64
    get_subscriptions_enabled : UInt64
    create_subscription_for_selection : UInt64
    delete_subscription_for_selection : UInt64
    set_root : UInt64
    get_enum_options : UInt64
    put_enum_options : UInt64
    get_selected_item : UInt64
    put_selected_item : UInt64
    get_root : UInt64
    put_root : UInt64
    get_depth : UInt64
    put_depth : UInt64
    get_mode : UInt64
    put_mode : UInt64
    get_flags : UInt64
    put_flags : UInt64
    put_tv_flags : UInt64
    get_tv_flags : UInt64
    get_columns : UInt64
    put_columns : UInt64
    get_count_view_types : UInt64
    set_view_type : UInt64
    selected_items : UInt64
    expand : UInt64
    unselect_all : UInt64
  end

  IShellNameSpace_GUID = "e572d3c9-37be-4ae2-825d-d521763e3108"
  IID_IShellNameSpace = LibC::GUID.new(0xe572d3c9_u32, 0x37be_u16, 0x4ae2_u16, StaticArray[0x82_u8, 0x5d_u8, 0xd5_u8, 0x21_u8, 0x76_u8, 0x3e_u8, 0x31_u8, 0x8_u8])
  struct IShellNameSpace
    lpVtbl : IShellNameSpaceVTbl*
  end

  struct IScriptErrorListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    advance_error : UInt64
    retreat_error : UInt64
    can_advance_error : UInt64
    can_retreat_error : UInt64
    get_error_line : UInt64
    get_error_char : UInt64
    get_error_code : UInt64
    get_error_msg : UInt64
    get_error_url : UInt64
    get_always_show_lock_state : UInt64
    get_details_pane_open : UInt64
    set_details_pane_open : UInt64
    get_per_error_display : UInt64
    set_per_error_display : UInt64
  end

  IScriptErrorList_GUID = "f3470f24-15fd-11d2-bb2e-00805ff7efca"
  IID_IScriptErrorList = LibC::GUID.new(0xf3470f24_u32, 0x15fd_u16, 0x11d2_u16, StaticArray[0xbb_u8, 0x2e_u8, 0x0_u8, 0x80_u8, 0x5f_u8, 0xf7_u8, 0xef_u8, 0xca_u8])
  struct IScriptErrorList
    lpVtbl : IScriptErrorListVTbl*
  end

  struct IFolderViewOCVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    set_folder_view : UInt64
  end

  IFolderViewOC_GUID = "9ba05970-f6a8-11cf-a442-00a0c90a8f39"
  IID_IFolderViewOC = LibC::GUID.new(0x9ba05970_u32, 0xf6a8_u16, 0x11cf_u16, StaticArray[0xa4_u8, 0x42_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x8f_u8, 0x39_u8])
  struct IFolderViewOC
    lpVtbl : IFolderViewOCVTbl*
  end

  struct DShellFolderViewEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
  end

  DShellFolderViewEvents_GUID = "62112aa2-ebe4-11cf-a5fb-0020afe7292d"
  IID_DShellFolderViewEvents = LibC::GUID.new(0x62112aa2_u32, 0xebe4_u16, 0x11cf_u16, StaticArray[0xa5_u8, 0xfb_u8, 0x0_u8, 0x20_u8, 0xaf_u8, 0xe7_u8, 0x29_u8, 0x2d_u8])
  struct DShellFolderViewEvents
    lpVtbl : DShellFolderViewEventsVTbl*
  end

  struct DFConstraintVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_name : UInt64
    get_value : UInt64
  end

  DFConstraint_GUID = "4a3df050-23bd-11d2-939f-00a0c91eedba"
  IID_DFConstraint = LibC::GUID.new(0x4a3df050_u32, 0x23bd_u16, 0x11d2_u16, StaticArray[0x93_u8, 0x9f_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x1e_u8, 0xed_u8, 0xba_u8])
  struct DFConstraint
    lpVtbl : DFConstraintVTbl*
  end

  struct FolderItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_name : UInt64
    put_name : UInt64
    get_path : UInt64
    get_get_link : UInt64
    get_get_folder : UInt64
    get_is_link : UInt64
    get_is_folder : UInt64
    get_is_file_system : UInt64
    get_is_browsable : UInt64
    get_modify_date : UInt64
    put_modify_date : UInt64
    get_size : UInt64
    get_type : UInt64
    verbs : UInt64
    invoke_verb : UInt64
  end

  FolderItem_GUID = "fac32c80-cbe4-11ce-8350-444553540000"
  IID_FolderItem = LibC::GUID.new(0xfac32c80_u32, 0xcbe4_u16, 0x11ce_u16, StaticArray[0x83_u8, 0x50_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
  struct FolderItem
    lpVtbl : FolderItemVTbl*
  end

  struct FolderItemsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_count : UInt64
    get_application : UInt64
    get_parent : UInt64
    item : UInt64
    _new_enum : UInt64
  end

  FolderItems_GUID = "744129e0-cbe5-11ce-8350-444553540000"
  IID_FolderItems = LibC::GUID.new(0x744129e0_u32, 0xcbe5_u16, 0x11ce_u16, StaticArray[0x83_u8, 0x50_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
  struct FolderItems
    lpVtbl : FolderItemsVTbl*
  end

  struct FolderItemVerbVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_name : UInt64
    do_it : UInt64
  end

  FolderItemVerb_GUID = "08ec3e00-50b0-11cf-960c-0080c7f4ee85"
  IID_FolderItemVerb = LibC::GUID.new(0x8ec3e00_u32, 0x50b0_u16, 0x11cf_u16, StaticArray[0x96_u8, 0xc_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0xf4_u8, 0xee_u8, 0x85_u8])
  struct FolderItemVerb
    lpVtbl : FolderItemVerbVTbl*
  end

  struct FolderItemVerbsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_count : UInt64
    get_application : UInt64
    get_parent : UInt64
    item : UInt64
    _new_enum : UInt64
  end

  FolderItemVerbs_GUID = "1f8352c0-50b0-11cf-960c-0080c7f4ee85"
  IID_FolderItemVerbs = LibC::GUID.new(0x1f8352c0_u32, 0x50b0_u16, 0x11cf_u16, StaticArray[0x96_u8, 0xc_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0xf4_u8, 0xee_u8, 0x85_u8])
  struct FolderItemVerbs
    lpVtbl : FolderItemVerbsVTbl*
  end

  struct FolderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_title : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_parent_folder : UInt64
    items : UInt64
    parse_name : UInt64
    new_folder : UInt64
    move_here : UInt64
    copy_here : UInt64
    get_details_of : UInt64
  end

  Folder_GUID = "bbcbde60-c3ff-11ce-8350-444553540000"
  IID_Folder = LibC::GUID.new(0xbbcbde60_u32, 0xc3ff_u16, 0x11ce_u16, StaticArray[0x83_u8, 0x50_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
  struct Folder
    lpVtbl : FolderVTbl*
  end

  struct Folder2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_title : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_parent_folder : UInt64
    items : UInt64
    parse_name : UInt64
    new_folder : UInt64
    move_here : UInt64
    copy_here : UInt64
    get_details_of : UInt64
    get_self : UInt64
    get_offline_status : UInt64
    synchronize : UInt64
    get_have_to_show_web_view_barricade : UInt64
    dismissed_web_view_barricade : UInt64
  end

  Folder2_GUID = "f0d2d8ef-3890-11d2-bf8b-00c04fb93661"
  IID_Folder2 = LibC::GUID.new(0xf0d2d8ef_u32, 0x3890_u16, 0x11d2_u16, StaticArray[0xbf_u8, 0x8b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb9_u8, 0x36_u8, 0x61_u8])
  struct Folder2
    lpVtbl : Folder2VTbl*
  end

  struct Folder3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_title : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_parent_folder : UInt64
    items : UInt64
    parse_name : UInt64
    new_folder : UInt64
    move_here : UInt64
    copy_here : UInt64
    get_details_of : UInt64
    get_self : UInt64
    get_offline_status : UInt64
    synchronize : UInt64
    get_have_to_show_web_view_barricade : UInt64
    dismissed_web_view_barricade : UInt64
    get_show_web_view_barricade : UInt64
    put_show_web_view_barricade : UInt64
  end

  Folder3_GUID = "a7ae5f64-c4d7-4d7f-9307-4d24ee54b841"
  IID_Folder3 = LibC::GUID.new(0xa7ae5f64_u32, 0xc4d7_u16, 0x4d7f_u16, StaticArray[0x93_u8, 0x7_u8, 0x4d_u8, 0x24_u8, 0xee_u8, 0x54_u8, 0xb8_u8, 0x41_u8])
  struct Folder3
    lpVtbl : Folder3VTbl*
  end

  struct FolderItem2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_name : UInt64
    put_name : UInt64
    get_path : UInt64
    get_get_link : UInt64
    get_get_folder : UInt64
    get_is_link : UInt64
    get_is_folder : UInt64
    get_is_file_system : UInt64
    get_is_browsable : UInt64
    get_modify_date : UInt64
    put_modify_date : UInt64
    get_size : UInt64
    get_type : UInt64
    verbs : UInt64
    invoke_verb : UInt64
    invoke_verb_ex : UInt64
    extended_property : UInt64
  end

  FolderItem2_GUID = "edc817aa-92b8-11d1-b075-00c04fc33aa5"
  IID_FolderItem2 = LibC::GUID.new(0xedc817aa_u32, 0x92b8_u16, 0x11d1_u16, StaticArray[0xb0_u8, 0x75_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc3_u8, 0x3a_u8, 0xa5_u8])
  struct FolderItem2
    lpVtbl : FolderItem2VTbl*
  end

  struct FolderItems2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_count : UInt64
    get_application : UInt64
    get_parent : UInt64
    item : UInt64
    _new_enum : UInt64
    invoke_verb_ex : UInt64
  end

  FolderItems2_GUID = "c94f0ad0-f363-11d2-a327-00c04f8eec7f"
  IID_FolderItems2 = LibC::GUID.new(0xc94f0ad0_u32, 0xf363_u16, 0x11d2_u16, StaticArray[0xa3_u8, 0x27_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xec_u8, 0x7f_u8])
  struct FolderItems2
    lpVtbl : FolderItems2VTbl*
  end

  struct FolderItems3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_count : UInt64
    get_application : UInt64
    get_parent : UInt64
    item : UInt64
    _new_enum : UInt64
    invoke_verb_ex : UInt64
    filter : UInt64
    get_verbs : UInt64
  end

  FolderItems3_GUID = "eaa7c309-bbec-49d5-821d-64d966cb667f"
  IID_FolderItems3 = LibC::GUID.new(0xeaa7c309_u32, 0xbbec_u16, 0x49d5_u16, StaticArray[0x82_u8, 0x1d_u8, 0x64_u8, 0xd9_u8, 0x66_u8, 0xcb_u8, 0x66_u8, 0x7f_u8])
  struct FolderItems3
    lpVtbl : FolderItems3VTbl*
  end

  struct IShellLinkDualVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_path : UInt64
    put_path : UInt64
    get_description : UInt64
    put_description : UInt64
    get_working_directory : UInt64
    put_working_directory : UInt64
    get_arguments : UInt64
    put_arguments : UInt64
    get_hotkey : UInt64
    put_hotkey : UInt64
    get_show_command : UInt64
    put_show_command : UInt64
    resolve : UInt64
    get_icon_location : UInt64
    set_icon_location : UInt64
    save : UInt64
  end

  IShellLinkDual_GUID = "88a05c00-f000-11ce-8350-444553540000"
  IID_IShellLinkDual = LibC::GUID.new(0x88a05c00_u32, 0xf000_u16, 0x11ce_u16, StaticArray[0x83_u8, 0x50_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
  struct IShellLinkDual
    lpVtbl : IShellLinkDualVTbl*
  end

  struct IShellLinkDual2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_path : UInt64
    put_path : UInt64
    get_description : UInt64
    put_description : UInt64
    get_working_directory : UInt64
    put_working_directory : UInt64
    get_arguments : UInt64
    put_arguments : UInt64
    get_hotkey : UInt64
    put_hotkey : UInt64
    get_show_command : UInt64
    put_show_command : UInt64
    resolve : UInt64
    get_icon_location : UInt64
    set_icon_location : UInt64
    save : UInt64
    get_target : UInt64
  end

  IShellLinkDual2_GUID = "317ee249-f12e-11d2-b1e4-00c04f8eeb3e"
  IID_IShellLinkDual2 = LibC::GUID.new(0x317ee249_u32, 0xf12e_u16, 0x11d2_u16, StaticArray[0xb1_u8, 0xe4_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x8e_u8, 0xeb_u8, 0x3e_u8])
  struct IShellLinkDual2
    lpVtbl : IShellLinkDual2VTbl*
  end

  struct IShellFolderViewDualVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_folder : UInt64
    selected_items : UInt64
    get_focused_item : UInt64
    select_item : UInt64
    popup_item_menu : UInt64
    get_script : UInt64
    get_view_options : UInt64
  end

  IShellFolderViewDual_GUID = "e7a1af80-4d96-11cf-960c-0080c7f4ee85"
  IID_IShellFolderViewDual = LibC::GUID.new(0xe7a1af80_u32, 0x4d96_u16, 0x11cf_u16, StaticArray[0x96_u8, 0xc_u8, 0x0_u8, 0x80_u8, 0xc7_u8, 0xf4_u8, 0xee_u8, 0x85_u8])
  struct IShellFolderViewDual
    lpVtbl : IShellFolderViewDualVTbl*
  end

  struct IShellFolderViewDual2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_folder : UInt64
    selected_items : UInt64
    get_focused_item : UInt64
    select_item : UInt64
    popup_item_menu : UInt64
    get_script : UInt64
    get_view_options : UInt64
    get_current_view_mode : UInt64
    put_current_view_mode : UInt64
    select_item_relative : UInt64
  end

  IShellFolderViewDual2_GUID = "31c147b6-0ade-4a3c-b514-ddf932ef6d17"
  IID_IShellFolderViewDual2 = LibC::GUID.new(0x31c147b6_u32, 0xade_u16, 0x4a3c_u16, StaticArray[0xb5_u8, 0x14_u8, 0xdd_u8, 0xf9_u8, 0x32_u8, 0xef_u8, 0x6d_u8, 0x17_u8])
  struct IShellFolderViewDual2
    lpVtbl : IShellFolderViewDual2VTbl*
  end

  struct IShellFolderViewDual3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    get_folder : UInt64
    selected_items : UInt64
    get_focused_item : UInt64
    select_item : UInt64
    popup_item_menu : UInt64
    get_script : UInt64
    get_view_options : UInt64
    get_current_view_mode : UInt64
    put_current_view_mode : UInt64
    select_item_relative : UInt64
    get_group_by : UInt64
    put_group_by : UInt64
    get_folder_flags : UInt64
    put_folder_flags : UInt64
    get_sort_columns : UInt64
    put_sort_columns : UInt64
    put_icon_size : UInt64
    get_icon_size : UInt64
    filter_view : UInt64
  end

  IShellFolderViewDual3_GUID = "29ec8e6c-46d3-411f-baaa-611a6c9cac66"
  IID_IShellFolderViewDual3 = LibC::GUID.new(0x29ec8e6c_u32, 0x46d3_u16, 0x411f_u16, StaticArray[0xba_u8, 0xaa_u8, 0x61_u8, 0x1a_u8, 0x6c_u8, 0x9c_u8, 0xac_u8, 0x66_u8])
  struct IShellFolderViewDual3
    lpVtbl : IShellFolderViewDual3VTbl*
  end

  struct IShellDispatchVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    name_space : UInt64
    browse_for_folder : UInt64
    windows : UInt64
    open : UInt64
    explore : UInt64
    minimize_all : UInt64
    undo_minimize_all : UInt64
    file_run : UInt64
    cascade_windows : UInt64
    tile_vertically : UInt64
    tile_horizontally : UInt64
    shutdown_windows : UInt64
    suspend : UInt64
    eject_pc : UInt64
    set_time : UInt64
    tray_properties : UInt64
    help : UInt64
    find_files : UInt64
    find_computer : UInt64
    refresh_menu : UInt64
    control_panel_item : UInt64
  end

  IShellDispatch_GUID = "d8f015c0-c278-11ce-a49e-444553540000"
  IID_IShellDispatch = LibC::GUID.new(0xd8f015c0_u32, 0xc278_u16, 0x11ce_u16, StaticArray[0xa4_u8, 0x9e_u8, 0x44_u8, 0x45_u8, 0x53_u8, 0x54_u8, 0x0_u8, 0x0_u8])
  struct IShellDispatch
    lpVtbl : IShellDispatchVTbl*
  end

  struct IShellDispatch2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    name_space : UInt64
    browse_for_folder : UInt64
    windows : UInt64
    open : UInt64
    explore : UInt64
    minimize_all : UInt64
    undo_minimize_all : UInt64
    file_run : UInt64
    cascade_windows : UInt64
    tile_vertically : UInt64
    tile_horizontally : UInt64
    shutdown_windows : UInt64
    suspend : UInt64
    eject_pc : UInt64
    set_time : UInt64
    tray_properties : UInt64
    help : UInt64
    find_files : UInt64
    find_computer : UInt64
    refresh_menu : UInt64
    control_panel_item : UInt64
    is_restricted : UInt64
    shell_execute : UInt64
    find_printer : UInt64
    get_system_information : UInt64
    service_start : UInt64
    service_stop : UInt64
    is_service_running : UInt64
    can_start_stop_service : UInt64
    show_browser_bar : UInt64
  end

  IShellDispatch2_GUID = "a4c6892c-3ba9-11d2-9dea-00c04fb16162"
  IID_IShellDispatch2 = LibC::GUID.new(0xa4c6892c_u32, 0x3ba9_u16, 0x11d2_u16, StaticArray[0x9d_u8, 0xea_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xb1_u8, 0x61_u8, 0x62_u8])
  struct IShellDispatch2
    lpVtbl : IShellDispatch2VTbl*
  end

  struct IShellDispatch3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    name_space : UInt64
    browse_for_folder : UInt64
    windows : UInt64
    open : UInt64
    explore : UInt64
    minimize_all : UInt64
    undo_minimize_all : UInt64
    file_run : UInt64
    cascade_windows : UInt64
    tile_vertically : UInt64
    tile_horizontally : UInt64
    shutdown_windows : UInt64
    suspend : UInt64
    eject_pc : UInt64
    set_time : UInt64
    tray_properties : UInt64
    help : UInt64
    find_files : UInt64
    find_computer : UInt64
    refresh_menu : UInt64
    control_panel_item : UInt64
    is_restricted : UInt64
    shell_execute : UInt64
    find_printer : UInt64
    get_system_information : UInt64
    service_start : UInt64
    service_stop : UInt64
    is_service_running : UInt64
    can_start_stop_service : UInt64
    show_browser_bar : UInt64
    add_to_recent : UInt64
  end

  IShellDispatch3_GUID = "177160ca-bb5a-411c-841d-bd38facdeaa0"
  IID_IShellDispatch3 = LibC::GUID.new(0x177160ca_u32, 0xbb5a_u16, 0x411c_u16, StaticArray[0x84_u8, 0x1d_u8, 0xbd_u8, 0x38_u8, 0xfa_u8, 0xcd_u8, 0xea_u8, 0xa0_u8])
  struct IShellDispatch3
    lpVtbl : IShellDispatch3VTbl*
  end

  struct IShellDispatch4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    name_space : UInt64
    browse_for_folder : UInt64
    windows : UInt64
    open : UInt64
    explore : UInt64
    minimize_all : UInt64
    undo_minimize_all : UInt64
    file_run : UInt64
    cascade_windows : UInt64
    tile_vertically : UInt64
    tile_horizontally : UInt64
    shutdown_windows : UInt64
    suspend : UInt64
    eject_pc : UInt64
    set_time : UInt64
    tray_properties : UInt64
    help : UInt64
    find_files : UInt64
    find_computer : UInt64
    refresh_menu : UInt64
    control_panel_item : UInt64
    is_restricted : UInt64
    shell_execute : UInt64
    find_printer : UInt64
    get_system_information : UInt64
    service_start : UInt64
    service_stop : UInt64
    is_service_running : UInt64
    can_start_stop_service : UInt64
    show_browser_bar : UInt64
    add_to_recent : UInt64
    windows_security : UInt64
    toggle_desktop : UInt64
    explorer_policy : UInt64
    get_setting : UInt64
  end

  IShellDispatch4_GUID = "efd84b2d-4bcf-4298-be25-eb542a59fbda"
  IID_IShellDispatch4 = LibC::GUID.new(0xefd84b2d_u32, 0x4bcf_u16, 0x4298_u16, StaticArray[0xbe_u8, 0x25_u8, 0xeb_u8, 0x54_u8, 0x2a_u8, 0x59_u8, 0xfb_u8, 0xda_u8])
  struct IShellDispatch4
    lpVtbl : IShellDispatch4VTbl*
  end

  struct IShellDispatch5VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    name_space : UInt64
    browse_for_folder : UInt64
    windows : UInt64
    open : UInt64
    explore : UInt64
    minimize_all : UInt64
    undo_minimize_all : UInt64
    file_run : UInt64
    cascade_windows : UInt64
    tile_vertically : UInt64
    tile_horizontally : UInt64
    shutdown_windows : UInt64
    suspend : UInt64
    eject_pc : UInt64
    set_time : UInt64
    tray_properties : UInt64
    help : UInt64
    find_files : UInt64
    find_computer : UInt64
    refresh_menu : UInt64
    control_panel_item : UInt64
    is_restricted : UInt64
    shell_execute : UInt64
    find_printer : UInt64
    get_system_information : UInt64
    service_start : UInt64
    service_stop : UInt64
    is_service_running : UInt64
    can_start_stop_service : UInt64
    show_browser_bar : UInt64
    add_to_recent : UInt64
    windows_security : UInt64
    toggle_desktop : UInt64
    explorer_policy : UInt64
    get_setting : UInt64
    window_switcher : UInt64
  end

  IShellDispatch5_GUID = "866738b9-6cf2-4de8-8767-f794ebe74f4e"
  IID_IShellDispatch5 = LibC::GUID.new(0x866738b9_u32, 0x6cf2_u16, 0x4de8_u16, StaticArray[0x87_u8, 0x67_u8, 0xf7_u8, 0x94_u8, 0xeb_u8, 0xe7_u8, 0x4f_u8, 0x4e_u8])
  struct IShellDispatch5
    lpVtbl : IShellDispatch5VTbl*
  end

  struct IShellDispatch6VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    get_application : UInt64
    get_parent : UInt64
    name_space : UInt64
    browse_for_folder : UInt64
    windows : UInt64
    open : UInt64
    explore : UInt64
    minimize_all : UInt64
    undo_minimize_all : UInt64
    file_run : UInt64
    cascade_windows : UInt64
    tile_vertically : UInt64
    tile_horizontally : UInt64
    shutdown_windows : UInt64
    suspend : UInt64
    eject_pc : UInt64
    set_time : UInt64
    tray_properties : UInt64
    help : UInt64
    find_files : UInt64
    find_computer : UInt64
    refresh_menu : UInt64
    control_panel_item : UInt64
    is_restricted : UInt64
    shell_execute : UInt64
    find_printer : UInt64
    get_system_information : UInt64
    service_start : UInt64
    service_stop : UInt64
    is_service_running : UInt64
    can_start_stop_service : UInt64
    show_browser_bar : UInt64
    add_to_recent : UInt64
    windows_security : UInt64
    toggle_desktop : UInt64
    explorer_policy : UInt64
    get_setting : UInt64
    window_switcher : UInt64
    search_command : UInt64
  end

  IShellDispatch6_GUID = "286e6f1b-7113-4355-9562-96b7e9d64c54"
  IID_IShellDispatch6 = LibC::GUID.new(0x286e6f1b_u32, 0x7113_u16, 0x4355_u16, StaticArray[0x95_u8, 0x62_u8, 0x96_u8, 0xb7_u8, 0xe9_u8, 0xd6_u8, 0x4c_u8, 0x54_u8])
  struct IShellDispatch6
    lpVtbl : IShellDispatch6VTbl*
  end

  struct IFileSearchBandVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    set_focus : UInt64
    set_search_parameters : UInt64
    get_search_id : UInt64
    get_scope : UInt64
    get_query_file : UInt64
  end

  IFileSearchBand_GUID = "2d91eea1-9932-11d2-be86-00a0c9a83da1"
  IID_IFileSearchBand = LibC::GUID.new(0x2d91eea1_u32, 0x9932_u16, 0x11d2_u16, StaticArray[0xbe_u8, 0x86_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa8_u8, 0x3d_u8, 0xa1_u8])
  struct IFileSearchBand
    lpVtbl : IFileSearchBandVTbl*
  end

  struct IWebWizardHostVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    final_back : UInt64
    final_next : UInt64
    cancel : UInt64
    put_caption : UInt64
    get_caption : UInt64
    put_property : UInt64
    get_property : UInt64
    set_wizard_buttons : UInt64
    set_header_text : UInt64
  end

  IWebWizardHost_GUID = "18bcc359-4990-4bfb-b951-3c83702be5f9"
  IID_IWebWizardHost = LibC::GUID.new(0x18bcc359_u32, 0x4990_u16, 0x4bfb_u16, StaticArray[0xb9_u8, 0x51_u8, 0x3c_u8, 0x83_u8, 0x70_u8, 0x2b_u8, 0xe5_u8, 0xf9_u8])
  struct IWebWizardHost
    lpVtbl : IWebWizardHostVTbl*
  end

  struct IWebWizardHost2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    final_back : UInt64
    final_next : UInt64
    cancel : UInt64
    put_caption : UInt64
    get_caption : UInt64
    put_property : UInt64
    get_property : UInt64
    set_wizard_buttons : UInt64
    set_header_text : UInt64
    sign_string : UInt64
  end

  IWebWizardHost2_GUID = "f9c013dc-3c23-4041-8e39-cfb402f7ea59"
  IID_IWebWizardHost2 = LibC::GUID.new(0xf9c013dc_u32, 0x3c23_u16, 0x4041_u16, StaticArray[0x8e_u8, 0x39_u8, 0xcf_u8, 0xb4_u8, 0x2_u8, 0xf7_u8, 0xea_u8, 0x59_u8])
  struct IWebWizardHost2
    lpVtbl : IWebWizardHost2VTbl*
  end

  struct INewWDEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_info_count : UInt64
    get_type_info : UInt64
    get_i_ds_of_names : UInt64
    invoke : UInt64
    final_back : UInt64
    final_next : UInt64
    cancel : UInt64
    put_caption : UInt64
    get_caption : UInt64
    put_property : UInt64
    get_property : UInt64
    set_wizard_buttons : UInt64
    set_header_text : UInt64
    passport_authenticate : UInt64
  end

  INewWDEvents_GUID = "0751c551-7568-41c9-8e5b-e22e38919236"
  IID_INewWDEvents = LibC::GUID.new(0x751c551_u32, 0x7568_u16, 0x41c9_u16, StaticArray[0x8e_u8, 0x5b_u8, 0xe2_u8, 0x2e_u8, 0x38_u8, 0x91_u8, 0x92_u8, 0x36_u8])
  struct INewWDEvents
    lpVtbl : INewWDEventsVTbl*
  end

  struct IAutoCompleteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    init : UInt64
    enable : UInt64
  end

  IAutoComplete_GUID = "00bb2762-6a77-11d0-a535-00c04fd7d062"
  IID_IAutoComplete = LibC::GUID.new(0xbb2762_u32, 0x6a77_u16, 0x11d0_u16, StaticArray[0xa5_u8, 0x35_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0xd0_u8, 0x62_u8])
  struct IAutoComplete
    lpVtbl : IAutoCompleteVTbl*
  end

  struct IAutoComplete2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    init : UInt64
    enable : UInt64
    set_options : UInt64
    get_options : UInt64
  end

  IAutoComplete2_GUID = "eac04bc0-3791-11d2-bb95-0060977b464c"
  IID_IAutoComplete2 = LibC::GUID.new(0xeac04bc0_u32, 0x3791_u16, 0x11d2_u16, StaticArray[0xbb_u8, 0x95_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0x7b_u8, 0x46_u8, 0x4c_u8])
  struct IAutoComplete2
    lpVtbl : IAutoComplete2VTbl*
  end

  struct IEnumACStringVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
    next_item : UInt64
    set_enum_options : UInt64
    get_enum_options : UInt64
  end

  IEnumACString_GUID = "8e74c210-cf9d-4eaf-a403-7356428f0a5a"
  IID_IEnumACString = LibC::GUID.new(0x8e74c210_u32, 0xcf9d_u16, 0x4eaf_u16, StaticArray[0xa4_u8, 0x3_u8, 0x73_u8, 0x56_u8, 0x42_u8, 0x8f_u8, 0xa_u8, 0x5a_u8])
  struct IEnumACString
    lpVtbl : IEnumACStringVTbl*
  end

  struct IDataObjectAsyncCapabilityVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_async_mode : UInt64
    get_async_mode : UInt64
    start_operation : UInt64
    in_operation : UInt64
    end_operation : UInt64
  end

  IDataObjectAsyncCapability_GUID = "3d8b0590-f691-11d2-8ea9-006097df5bd4"
  IID_IDataObjectAsyncCapability = LibC::GUID.new(0x3d8b0590_u32, 0xf691_u16, 0x11d2_u16, StaticArray[0x8e_u8, 0xa9_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xdf_u8, 0x5b_u8, 0xd4_u8])
  struct IDataObjectAsyncCapability
    lpVtbl : IDataObjectAsyncCapabilityVTbl*
  end

  struct IExtractIconAVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_icon_location : UInt64
    extract : UInt64
  end

  IExtractIconA_GUID = "000214eb-0000-0000-c000-000000000046"
  IID_IExtractIconA = LibC::GUID.new(0x214eb_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IExtractIconA
    lpVtbl : IExtractIconAVTbl*
  end

  struct IExtractIconWVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_icon_location : UInt64
    extract : UInt64
  end

  IExtractIconW_GUID = "000214fa-0000-0000-c000-000000000046"
  IID_IExtractIconW = LibC::GUID.new(0x214fa_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IExtractIconW
    lpVtbl : IExtractIconWVTbl*
  end

  struct IShellIconOverlayManagerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_file_overlay_info : UInt64
    get_reserved_overlay_info : UInt64
    refresh_overlay_images : UInt64
    load_nonloaded_overlay_identifiers : UInt64
    overlay_index_from_image_index : UInt64
  end

  IShellIconOverlayManager_GUID = "f10b5e34-dd3b-42a7-aa7d-2f4ec54bb09b"
  IID_IShellIconOverlayManager = LibC::GUID.new(0xf10b5e34_u32, 0xdd3b_u16, 0x42a7_u16, StaticArray[0xaa_u8, 0x7d_u8, 0x2f_u8, 0x4e_u8, 0xc5_u8, 0x4b_u8, 0xb0_u8, 0x9b_u8])
  struct IShellIconOverlayManager
    lpVtbl : IShellIconOverlayManagerVTbl*
  end

  struct IShellIconOverlayVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_overlay_index : UInt64
    get_overlay_icon_index : UInt64
  end

  IShellIconOverlay_GUID = "7d688a70-c613-11d0-999b-00c04fd655e1"
  IID_IShellIconOverlay = LibC::GUID.new(0x7d688a70_u32, 0xc613_u16, 0x11d0_u16, StaticArray[0x99_u8, 0x9b_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd6_u8, 0x55_u8, 0xe1_u8])
  struct IShellIconOverlay
    lpVtbl : IShellIconOverlayVTbl*
  end

  struct IURLSearchHookVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    translate : UInt64
  end

  IURLSearchHook_GUID = "ac60f6a0-0fd9-11d0-99cb-00c04fd64497"
  IID_IURLSearchHook = LibC::GUID.new(0xac60f6a0_u32, 0xfd9_u16, 0x11d0_u16, StaticArray[0x99_u8, 0xcb_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd6_u8, 0x44_u8, 0x97_u8])
  struct IURLSearchHook
    lpVtbl : IURLSearchHookVTbl*
  end

  struct ISearchContextVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_search_url : UInt64
    get_search_text : UInt64
    get_search_style : UInt64
  end

  ISearchContext_GUID = "09f656a2-41af-480c-88f7-16cc0d164615"
  IID_ISearchContext = LibC::GUID.new(0x9f656a2_u32, 0x41af_u16, 0x480c_u16, StaticArray[0x88_u8, 0xf7_u8, 0x16_u8, 0xcc_u8, 0xd_u8, 0x16_u8, 0x46_u8, 0x15_u8])
  struct ISearchContext
    lpVtbl : ISearchContextVTbl*
  end

  struct IURLSearchHook2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    translate : UInt64
    translate_with_search_context : UInt64
  end

  IURLSearchHook2_GUID = "5ee44da4-6d32-46e3-86bc-07540dedd0e0"
  IID_IURLSearchHook2 = LibC::GUID.new(0x5ee44da4_u32, 0x6d32_u16, 0x46e3_u16, StaticArray[0x86_u8, 0xbc_u8, 0x7_u8, 0x54_u8, 0xd_u8, 0xed_u8, 0xd0_u8, 0xe0_u8])
  struct IURLSearchHook2
    lpVtbl : IURLSearchHook2VTbl*
  end

  struct IShellDetailsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_details_of : UInt64
    column_click : UInt64
  end

  IShellDetails_GUID = "000214ec-0000-0000-c000-000000000046"
  IID_IShellDetails = LibC::GUID.new(0x214ec_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IShellDetails
    lpVtbl : IShellDetailsVTbl*
  end

  struct IObjMgrVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    append : UInt64
    remove : UInt64
  end

  IObjMgr_GUID = "00bb2761-6a77-11d0-a535-00c04fd7d062"
  IID_IObjMgr = LibC::GUID.new(0xbb2761_u32, 0x6a77_u16, 0x11d0_u16, StaticArray[0xa5_u8, 0x35_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0xd0_u8, 0x62_u8])
  struct IObjMgr
    lpVtbl : IObjMgrVTbl*
  end

  struct IACListVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    expand : UInt64
  end

  IACList_GUID = "77a130b0-94fd-11d0-a544-00c04fd7d062"
  IID_IACList = LibC::GUID.new(0x77a130b0_u32, 0x94fd_u16, 0x11d0_u16, StaticArray[0xa5_u8, 0x44_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0xd0_u8, 0x62_u8])
  struct IACList
    lpVtbl : IACListVTbl*
  end

  struct IACList2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    expand : UInt64
    set_options : UInt64
    get_options : UInt64
  end

  IACList2_GUID = "470141a0-5186-11d2-bbb6-0060977b464c"
  IID_IACList2 = LibC::GUID.new(0x470141a0_u32, 0x5186_u16, 0x11d2_u16, StaticArray[0xbb_u8, 0xb6_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0x7b_u8, 0x46_u8, 0x4c_u8])
  struct IACList2
    lpVtbl : IACList2VTbl*
  end

  struct IProgressDialogVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    start_progress_dialog : UInt64
    stop_progress_dialog : UInt64
    set_title : UInt64
    set_animation : UInt64
    has_user_cancelled : UInt64
    set_progress : UInt64
    set_progress64 : UInt64
    set_line : UInt64
    set_cancel_msg : UInt64
    timer : UInt64
  end

  IProgressDialog_GUID = "ebbc7c04-315e-11d2-b62f-006097df5bd4"
  IID_IProgressDialog = LibC::GUID.new(0xebbc7c04_u32, 0x315e_u16, 0x11d2_u16, StaticArray[0xb6_u8, 0x2f_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xdf_u8, 0x5b_u8, 0xd4_u8])
  struct IProgressDialog
    lpVtbl : IProgressDialogVTbl*
  end

  struct IDockingWindowSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    get_border_dw : UInt64
    request_border_space_dw : UInt64
    set_border_space_dw : UInt64
  end

  IDockingWindowSite_GUID = "2a342fc2-7b26-11d0-8ca9-00a0c92dbfe8"
  IID_IDockingWindowSite = LibC::GUID.new(0x2a342fc2_u32, 0x7b26_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0xa9_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
  struct IDockingWindowSite
    lpVtbl : IDockingWindowSiteVTbl*
  end

  struct IShellChangeNotifyVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_change : UInt64
  end

  IShellChangeNotify_GUID = "d82be2b1-5764-11d0-a96e-00c04fd705a2"
  IID_IShellChangeNotify = LibC::GUID.new(0xd82be2b1_u32, 0x5764_u16, 0x11d0_u16, StaticArray[0xa9_u8, 0x6e_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x5_u8, 0xa2_u8])
  struct IShellChangeNotify
    lpVtbl : IShellChangeNotifyVTbl*
  end

  struct IQueryInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_info_tip : UInt64
    get_info_flags : UInt64
  end

  IQueryInfo_GUID = "00021500-0000-0000-c000-000000000046"
  IID_IQueryInfo = LibC::GUID.new(0x21500_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct IQueryInfo
    lpVtbl : IQueryInfoVTbl*
  end

  struct IShellFolderViewCBVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    message_sfvcb : UInt64
  end

  IShellFolderViewCB_GUID = "2047e320-f2a9-11ce-ae65-08002b2e1262"
  IID_IShellFolderViewCB = LibC::GUID.new(0x2047e320_u32, 0xf2a9_u16, 0x11ce_u16, StaticArray[0xae_u8, 0x65_u8, 0x8_u8, 0x0_u8, 0x2b_u8, 0x2e_u8, 0x12_u8, 0x62_u8])
  struct IShellFolderViewCB
    lpVtbl : IShellFolderViewCBVTbl*
  end

  struct IShellFolderViewVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    rearrange : UInt64
    get_arrange_param : UInt64
    arrange_grid : UInt64
    auto_arrange : UInt64
    get_auto_arrange : UInt64
    add_object : UInt64
    get_object : UInt64
    remove_object : UInt64
    get_object_count : UInt64
    set_object_count : UInt64
    update_object : UInt64
    refresh_object : UInt64
    set_redraw : UInt64
    get_selected_count : UInt64
    get_selected_objects : UInt64
    is_drop_on_source : UInt64
    get_drag_point : UInt64
    get_drop_point : UInt64
    move_icons : UInt64
    set_item_pos : UInt64
    is_bk_drop_target : UInt64
    set_clipboard : UInt64
    set_points : UInt64
    get_item_spacing : UInt64
    set_callback : UInt64
    select : UInt64
    query_support : UInt64
    set_automation_object : UInt64
  end

  IShellFolderView_GUID = "37a378c0-f82d-11ce-ae65-08002b2e1262"
  IID_IShellFolderView = LibC::GUID.new(0x37a378c0_u32, 0xf82d_u16, 0x11ce_u16, StaticArray[0xae_u8, 0x65_u8, 0x8_u8, 0x0_u8, 0x2b_u8, 0x2e_u8, 0x12_u8, 0x62_u8])
  struct IShellFolderView
    lpVtbl : IShellFolderViewVTbl*
  end

  struct INamedPropertyBagVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    read_property_npb : UInt64
    write_property_npb : UInt64
    remove_property_npb : UInt64
  end

  INamedPropertyBag_GUID = "fb700430-952c-11d1-946f-000000000000"
  IID_INamedPropertyBag = LibC::GUID.new(0xfb700430_u32, 0x952c_u16, 0x11d1_u16, StaticArray[0x94_u8, 0x6f_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8])
  struct INamedPropertyBag
    lpVtbl : INamedPropertyBagVTbl*
  end

  struct INewShortcutHookAVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_referent : UInt64
    get_referent : UInt64
    set_folder : UInt64
    get_folder : UInt64
    get_name : UInt64
    get_extension : UInt64
  end

  INewShortcutHookA_GUID = "000214e1-0000-0000-c000-000000000046"
  IID_INewShortcutHookA = LibC::GUID.new(0x214e1_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct INewShortcutHookA
    lpVtbl : INewShortcutHookAVTbl*
  end

  struct INewShortcutHookWVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_referent : UInt64
    get_referent : UInt64
    set_folder : UInt64
    get_folder : UInt64
    get_name : UInt64
    get_extension : UInt64
  end

  INewShortcutHookW_GUID = "000214f7-0000-0000-c000-000000000046"
  IID_INewShortcutHookW = LibC::GUID.new(0x214f7_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct INewShortcutHookW
    lpVtbl : INewShortcutHookWVTbl*
  end

  struct ICopyHookAVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    copy_callback : UInt64
  end

  ICopyHookA_GUID = "000214ef-0000-0000-c000-000000000046"
  IID_ICopyHookA = LibC::GUID.new(0x214ef_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct ICopyHookA
    lpVtbl : ICopyHookAVTbl*
  end

  struct ICopyHookWVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    copy_callback : UInt64
  end

  ICopyHookW_GUID = "000214fc-0000-0000-c000-000000000046"
  IID_ICopyHookW = LibC::GUID.new(0x214fc_u32, 0x0_u16, 0x0_u16, StaticArray[0xc0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x0_u8, 0x46_u8])
  struct ICopyHookW
    lpVtbl : ICopyHookWVTbl*
  end

  struct ICurrentWorkingDirectoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_directory : UInt64
    set_directory : UInt64
  end

  ICurrentWorkingDirectory_GUID = "91956d21-9276-11d1-921a-006097df5bd4"
  IID_ICurrentWorkingDirectory = LibC::GUID.new(0x91956d21_u32, 0x9276_u16, 0x11d1_u16, StaticArray[0x92_u8, 0x1a_u8, 0x0_u8, 0x60_u8, 0x97_u8, 0xdf_u8, 0x5b_u8, 0xd4_u8])
  struct ICurrentWorkingDirectory
    lpVtbl : ICurrentWorkingDirectoryVTbl*
  end

  struct IDockingWindowFrameVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    add_toolbar : UInt64
    remove_toolbar : UInt64
    find_toolbar : UInt64
  end

  IDockingWindowFrame_GUID = "47d2657a-7b27-11d0-8ca9-00a0c92dbfe8"
  IID_IDockingWindowFrame = LibC::GUID.new(0x47d2657a_u32, 0x7b27_u16, 0x11d0_u16, StaticArray[0x8c_u8, 0xa9_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
  struct IDockingWindowFrame
    lpVtbl : IDockingWindowFrameVTbl*
  end

  struct IThumbnailCaptureVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    capture_thumbnail : UInt64
  end

  IThumbnailCapture_GUID = "4ea39266-7211-409f-b622-f63dbd16c533"
  IID_IThumbnailCapture = LibC::GUID.new(0x4ea39266_u32, 0x7211_u16, 0x409f_u16, StaticArray[0xb6_u8, 0x22_u8, 0xf6_u8, 0x3d_u8, 0xbd_u8, 0x16_u8, 0xc5_u8, 0x33_u8])
  struct IThumbnailCapture
    lpVtbl : IThumbnailCaptureVTbl*
  end

  struct IShellFolderBandVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize_sfb : UInt64
    set_band_info_sfb : UInt64
    get_band_info_sfb : UInt64
  end

  IShellFolderBand_GUID = "7fe80cc8-c247-11d0-b93a-00a0c90312e1"
  IID_IShellFolderBand = LibC::GUID.new(0x7fe80cc8_u32, 0xc247_u16, 0x11d0_u16, StaticArray[0xb9_u8, 0x3a_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x3_u8, 0x12_u8, 0xe1_u8])
  struct IShellFolderBand
    lpVtbl : IShellFolderBandVTbl*
  end

  struct IDeskBarClientVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_window : UInt64
    context_sensitive_help : UInt64
    set_desk_bar_site : UInt64
    set_mode_dbc : UInt64
    ui_activate_dbc : UInt64
    get_size : UInt64
  end

  IDeskBarClient_GUID = "eb0fe175-1a3a-11d0-89b3-00a0c90a90ac"
  IID_IDeskBarClient = LibC::GUID.new(0xeb0fe175_u32, 0x1a3a_u16, 0x11d0_u16, StaticArray[0x89_u8, 0xb3_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa_u8, 0x90_u8, 0xac_u8])
  struct IDeskBarClient
    lpVtbl : IDeskBarClientVTbl*
  end

  struct IColumnProviderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    get_column_info : UInt64
    get_item_data : UInt64
  end

  IColumnProvider_GUID = "e8025004-1c42-11d2-be2c-00a0c9a83da1"
  IID_IColumnProvider = LibC::GUID.new(0xe8025004_u32, 0x1c42_u16, 0x11d2_u16, StaticArray[0xbe_u8, 0x2c_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xa8_u8, 0x3d_u8, 0xa1_u8])
  struct IColumnProvider
    lpVtbl : IColumnProviderVTbl*
  end

  struct IDocViewSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    on_set_title : UInt64
  end

  IDocViewSite_GUID = "87d605e0-c511-11cf-89a9-00a0c9054129"
  IID_IDocViewSite = LibC::GUID.new(0x87d605e0_u32, 0xc511_u16, 0x11cf_u16, StaticArray[0x89_u8, 0xa9_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x5_u8, 0x41_u8, 0x29_u8])
  struct IDocViewSite
    lpVtbl : IDocViewSiteVTbl*
  end

  struct IInitializeObjectVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
  end

  IInitializeObject_GUID = "4622ad16-ff23-11d0-8d34-00a0c90f2719"
  IID_IInitializeObject = LibC::GUID.new(0x4622ad16_u32, 0xff23_u16, 0x11d0_u16, StaticArray[0x8d_u8, 0x34_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xf_u8, 0x27_u8, 0x19_u8])
  struct IInitializeObject
    lpVtbl : IInitializeObjectVTbl*
  end

  struct IBanneredBarVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_icon_size : UInt64
    get_icon_size : UInt64
    set_bitmap : UInt64
    get_bitmap : UInt64
  end

  IBanneredBar_GUID = "596a9a94-013e-11d1-8d34-00a0c90f2719"
  IID_IBanneredBar = LibC::GUID.new(0x596a9a94_u32, 0x13e_u16, 0x11d1_u16, StaticArray[0x8d_u8, 0x34_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0xf_u8, 0x27_u8, 0x19_u8])
  struct IBanneredBar
    lpVtbl : IBanneredBarVTbl*
  end

  struct IQueryAssociationsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    init : UInt64
    get_string : UInt64
    get_key : UInt64
    get_data : UInt64
    get_enum : UInt64
  end

  IQueryAssociations_GUID = "c46ca590-3c3f-11d2-bee6-0000f805ca57"
  IID_IQueryAssociations = LibC::GUID.new(0xc46ca590_u32, 0x3c3f_u16, 0x11d2_u16, StaticArray[0xbe_u8, 0xe6_u8, 0x0_u8, 0x0_u8, 0xf8_u8, 0x5_u8, 0xca_u8, 0x57_u8])
  struct IQueryAssociations
    lpVtbl : IQueryAssociationsVTbl*
  end

  struct IShellAppVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_app_info : UInt64
    get_possible_actions : UInt64
    get_slow_app_info : UInt64
    get_cached_slow_app_info : UInt64
    is_installed : UInt64
  end

  IShellApp_GUID = "a3e14960-935f-11d1-b8b8-006008059382"
  IID_IShellApp = LibC::GUID.new(0xa3e14960_u32, 0x935f_u16, 0x11d1_u16, StaticArray[0xb8_u8, 0xb8_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x82_u8])
  struct IShellApp
    lpVtbl : IShellAppVTbl*
  end

  struct IPublishedAppVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_app_info : UInt64
    get_possible_actions : UInt64
    get_slow_app_info : UInt64
    get_cached_slow_app_info : UInt64
    is_installed : UInt64
    install : UInt64
    get_published_app_info : UInt64
    unschedule : UInt64
  end

  IPublishedApp_GUID = "1bc752e0-9046-11d1-b8b3-006008059382"
  IID_IPublishedApp = LibC::GUID.new(0x1bc752e0_u32, 0x9046_u16, 0x11d1_u16, StaticArray[0xb8_u8, 0xb3_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x82_u8])
  struct IPublishedApp
    lpVtbl : IPublishedAppVTbl*
  end

  struct IPublishedApp2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_app_info : UInt64
    get_possible_actions : UInt64
    get_slow_app_info : UInt64
    get_cached_slow_app_info : UInt64
    is_installed : UInt64
    install : UInt64
    get_published_app_info : UInt64
    unschedule : UInt64
    install2 : UInt64
  end

  IPublishedApp2_GUID = "12b81347-1b3a-4a04-aa61-3f768b67fd7e"
  IID_IPublishedApp2 = LibC::GUID.new(0x12b81347_u32, 0x1b3a_u16, 0x4a04_u16, StaticArray[0xaa_u8, 0x61_u8, 0x3f_u8, 0x76_u8, 0x8b_u8, 0x67_u8, 0xfd_u8, 0x7e_u8])
  struct IPublishedApp2
    lpVtbl : IPublishedApp2VTbl*
  end

  struct IEnumPublishedAppsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    reset : UInt64
  end

  IEnumPublishedApps_GUID = "0b124f8c-91f0-11d1-b8b5-006008059382"
  IID_IEnumPublishedApps = LibC::GUID.new(0xb124f8c_u32, 0x91f0_u16, 0x11d1_u16, StaticArray[0xb8_u8, 0xb5_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x82_u8])
  struct IEnumPublishedApps
    lpVtbl : IEnumPublishedAppsVTbl*
  end

  struct IAppPublisherVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_number_of_categories : UInt64
    get_categories : UInt64
    get_number_of_apps : UInt64
    enum_apps : UInt64
  end

  IAppPublisher_GUID = "07250a10-9cf9-11d1-9076-006008059382"
  IID_IAppPublisher = LibC::GUID.new(0x7250a10_u32, 0x9cf9_u16, 0x11d1_u16, StaticArray[0x90_u8, 0x76_u8, 0x0_u8, 0x60_u8, 0x8_u8, 0x5_u8, 0x93_u8, 0x82_u8])
  struct IAppPublisher
    lpVtbl : IAppPublisherVTbl*
  end

  struct ICredentialProviderCredentialVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    advise : UInt64
    un_advise : UInt64
    set_selected : UInt64
    set_deselected : UInt64
    get_field_state : UInt64
    get_string_value : UInt64
    get_bitmap_value : UInt64
    get_checkbox_value : UInt64
    get_submit_button_value : UInt64
    get_combo_box_value_count : UInt64
    get_combo_box_value_at : UInt64
    set_string_value : UInt64
    set_checkbox_value : UInt64
    set_combo_box_selected_value : UInt64
    command_link_clicked : UInt64
    get_serialization : UInt64
    report_result : UInt64
  end

  ICredentialProviderCredential_GUID = "63913a93-40c1-481a-818d-4072ff8c70cc"
  IID_ICredentialProviderCredential = LibC::GUID.new(0x63913a93_u32, 0x40c1_u16, 0x481a_u16, StaticArray[0x81_u8, 0x8d_u8, 0x40_u8, 0x72_u8, 0xff_u8, 0x8c_u8, 0x70_u8, 0xcc_u8])
  struct ICredentialProviderCredential
    lpVtbl : ICredentialProviderCredentialVTbl*
  end

  struct IQueryContinueWithStatusVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    query_continue : UInt64
    set_status_message : UInt64
  end

  IQueryContinueWithStatus_GUID = "9090be5b-502b-41fb-bccc-0049a6c7254b"
  IID_IQueryContinueWithStatus = LibC::GUID.new(0x9090be5b_u32, 0x502b_u16, 0x41fb_u16, StaticArray[0xbc_u8, 0xcc_u8, 0x0_u8, 0x49_u8, 0xa6_u8, 0xc7_u8, 0x25_u8, 0x4b_u8])
  struct IQueryContinueWithStatus
    lpVtbl : IQueryContinueWithStatusVTbl*
  end

  struct IConnectableCredentialProviderCredentialVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    advise : UInt64
    un_advise : UInt64
    set_selected : UInt64
    set_deselected : UInt64
    get_field_state : UInt64
    get_string_value : UInt64
    get_bitmap_value : UInt64
    get_checkbox_value : UInt64
    get_submit_button_value : UInt64
    get_combo_box_value_count : UInt64
    get_combo_box_value_at : UInt64
    set_string_value : UInt64
    set_checkbox_value : UInt64
    set_combo_box_selected_value : UInt64
    command_link_clicked : UInt64
    get_serialization : UInt64
    report_result : UInt64
    connect : UInt64
    disconnect : UInt64
  end

  IConnectableCredentialProviderCredential_GUID = "9387928b-ac75-4bf9-8ab2-2b93c4a55290"
  IID_IConnectableCredentialProviderCredential = LibC::GUID.new(0x9387928b_u32, 0xac75_u16, 0x4bf9_u16, StaticArray[0x8a_u8, 0xb2_u8, 0x2b_u8, 0x93_u8, 0xc4_u8, 0xa5_u8, 0x52_u8, 0x90_u8])
  struct IConnectableCredentialProviderCredential
    lpVtbl : IConnectableCredentialProviderCredentialVTbl*
  end

  struct ICredentialProviderCredentialEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_field_state : UInt64
    set_field_interactive_state : UInt64
    set_field_string : UInt64
    set_field_checkbox : UInt64
    set_field_bitmap : UInt64
    set_field_combo_box_selected_item : UInt64
    delete_field_combo_box_item : UInt64
    append_field_combo_box_item : UInt64
    set_field_submit_button : UInt64
    on_creating_window : UInt64
  end

  ICredentialProviderCredentialEvents_GUID = "fa6fa76b-66b7-4b11-95f1-86171118e816"
  IID_ICredentialProviderCredentialEvents = LibC::GUID.new(0xfa6fa76b_u32, 0x66b7_u16, 0x4b11_u16, StaticArray[0x95_u8, 0xf1_u8, 0x86_u8, 0x17_u8, 0x11_u8, 0x18_u8, 0xe8_u8, 0x16_u8])
  struct ICredentialProviderCredentialEvents
    lpVtbl : ICredentialProviderCredentialEventsVTbl*
  end

  struct ICredentialProviderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_usage_scenario : UInt64
    set_serialization : UInt64
    advise : UInt64
    un_advise : UInt64
    get_field_descriptor_count : UInt64
    get_field_descriptor_at : UInt64
    get_credential_count : UInt64
    get_credential_at : UInt64
  end

  ICredentialProvider_GUID = "d27c3481-5a1c-45b2-8aaa-c20ebbe8229e"
  IID_ICredentialProvider = LibC::GUID.new(0xd27c3481_u32, 0x5a1c_u16, 0x45b2_u16, StaticArray[0x8a_u8, 0xaa_u8, 0xc2_u8, 0xe_u8, 0xbb_u8, 0xe8_u8, 0x22_u8, 0x9e_u8])
  struct ICredentialProvider
    lpVtbl : ICredentialProviderVTbl*
  end

  struct ICredentialProviderEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    credentials_changed : UInt64
  end

  ICredentialProviderEvents_GUID = "34201e5a-a787-41a3-a5a4-bd6dcf2a854e"
  IID_ICredentialProviderEvents = LibC::GUID.new(0x34201e5a_u32, 0xa787_u16, 0x41a3_u16, StaticArray[0xa5_u8, 0xa4_u8, 0xbd_u8, 0x6d_u8, 0xcf_u8, 0x2a_u8, 0x85_u8, 0x4e_u8])
  struct ICredentialProviderEvents
    lpVtbl : ICredentialProviderEventsVTbl*
  end

  struct ICredentialProviderFilterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    filter : UInt64
    update_remote_credential : UInt64
  end

  ICredentialProviderFilter_GUID = "a5da53f9-d475-4080-a120-910c4a739880"
  IID_ICredentialProviderFilter = LibC::GUID.new(0xa5da53f9_u32, 0xd475_u16, 0x4080_u16, StaticArray[0xa1_u8, 0x20_u8, 0x91_u8, 0xc_u8, 0x4a_u8, 0x73_u8, 0x98_u8, 0x80_u8])
  struct ICredentialProviderFilter
    lpVtbl : ICredentialProviderFilterVTbl*
  end

  struct ICredentialProviderCredential2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    advise : UInt64
    un_advise : UInt64
    set_selected : UInt64
    set_deselected : UInt64
    get_field_state : UInt64
    get_string_value : UInt64
    get_bitmap_value : UInt64
    get_checkbox_value : UInt64
    get_submit_button_value : UInt64
    get_combo_box_value_count : UInt64
    get_combo_box_value_at : UInt64
    set_string_value : UInt64
    set_checkbox_value : UInt64
    set_combo_box_selected_value : UInt64
    command_link_clicked : UInt64
    get_serialization : UInt64
    report_result : UInt64
    get_user_sid : UInt64
  end

  ICredentialProviderCredential2_GUID = "fd672c54-40ea-4d6e-9b49-cfb1a7507bd7"
  IID_ICredentialProviderCredential2 = LibC::GUID.new(0xfd672c54_u32, 0x40ea_u16, 0x4d6e_u16, StaticArray[0x9b_u8, 0x49_u8, 0xcf_u8, 0xb1_u8, 0xa7_u8, 0x50_u8, 0x7b_u8, 0xd7_u8])
  struct ICredentialProviderCredential2
    lpVtbl : ICredentialProviderCredential2VTbl*
  end

  struct ICredentialProviderCredentialWithFieldOptionsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_field_options : UInt64
  end

  ICredentialProviderCredentialWithFieldOptions_GUID = "dbc6fb30-c843-49e3-a645-573e6f39446a"
  IID_ICredentialProviderCredentialWithFieldOptions = LibC::GUID.new(0xdbc6fb30_u32, 0xc843_u16, 0x49e3_u16, StaticArray[0xa6_u8, 0x45_u8, 0x57_u8, 0x3e_u8, 0x6f_u8, 0x39_u8, 0x44_u8, 0x6a_u8])
  struct ICredentialProviderCredentialWithFieldOptions
    lpVtbl : ICredentialProviderCredentialWithFieldOptionsVTbl*
  end

  struct ICredentialProviderCredentialEvents2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_field_state : UInt64
    set_field_interactive_state : UInt64
    set_field_string : UInt64
    set_field_checkbox : UInt64
    set_field_bitmap : UInt64
    set_field_combo_box_selected_item : UInt64
    delete_field_combo_box_item : UInt64
    append_field_combo_box_item : UInt64
    set_field_submit_button : UInt64
    on_creating_window : UInt64
    begin_field_updates : UInt64
    end_field_updates : UInt64
    set_field_options : UInt64
  end

  ICredentialProviderCredentialEvents2_GUID = "b53c00b6-9922-4b78-b1f4-ddfe774dc39b"
  IID_ICredentialProviderCredentialEvents2 = LibC::GUID.new(0xb53c00b6_u32, 0x9922_u16, 0x4b78_u16, StaticArray[0xb1_u8, 0xf4_u8, 0xdd_u8, 0xfe_u8, 0x77_u8, 0x4d_u8, 0xc3_u8, 0x9b_u8])
  struct ICredentialProviderCredentialEvents2
    lpVtbl : ICredentialProviderCredentialEvents2VTbl*
  end

  struct ICredentialProviderUserVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_sid : UInt64
    get_provider_id : UInt64
    get_string_value : UInt64
    get_value : UInt64
  end

  ICredentialProviderUser_GUID = "13793285-3ea6-40fd-b420-15f47da41fbb"
  IID_ICredentialProviderUser = LibC::GUID.new(0x13793285_u32, 0x3ea6_u16, 0x40fd_u16, StaticArray[0xb4_u8, 0x20_u8, 0x15_u8, 0xf4_u8, 0x7d_u8, 0xa4_u8, 0x1f_u8, 0xbb_u8])
  struct ICredentialProviderUser
    lpVtbl : ICredentialProviderUserVTbl*
  end

  struct ICredentialProviderUserArrayVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_provider_filter : UInt64
    get_account_options : UInt64
    get_count : UInt64
    get_at : UInt64
  end

  ICredentialProviderUserArray_GUID = "90c119ae-0f18-4520-a1f1-114366a40fe8"
  IID_ICredentialProviderUserArray = LibC::GUID.new(0x90c119ae_u32, 0xf18_u16, 0x4520_u16, StaticArray[0xa1_u8, 0xf1_u8, 0x11_u8, 0x43_u8, 0x66_u8, 0xa4_u8, 0xf_u8, 0xe8_u8])
  struct ICredentialProviderUserArray
    lpVtbl : ICredentialProviderUserArrayVTbl*
  end

  struct ICredentialProviderSetUserArrayVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_user_array : UInt64
  end

  ICredentialProviderSetUserArray_GUID = "095c1484-1c0c-4388-9c6d-500e61bf84bd"
  IID_ICredentialProviderSetUserArray = LibC::GUID.new(0x95c1484_u32, 0x1c0c_u16, 0x4388_u16, StaticArray[0x9c_u8, 0x6d_u8, 0x50_u8, 0xe_u8, 0x61_u8, 0xbf_u8, 0x84_u8, 0xbd_u8])
  struct ICredentialProviderSetUserArray
    lpVtbl : ICredentialProviderSetUserArrayVTbl*
  end

  struct ISyncMgrHandlerCollectionVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_handler_enumerator : UInt64
    bind_to_handler : UInt64
  end

  ISyncMgrHandlerCollection_GUID = "a7f337a3-d20b-45cb-9ed7-87d094ca5045"
  IID_ISyncMgrHandlerCollection = LibC::GUID.new(0xa7f337a3_u32, 0xd20b_u16, 0x45cb_u16, StaticArray[0x9e_u8, 0xd7_u8, 0x87_u8, 0xd0_u8, 0x94_u8, 0xca_u8, 0x50_u8, 0x45_u8])
  struct ISyncMgrHandlerCollection
    lpVtbl : ISyncMgrHandlerCollectionVTbl*
  end

  struct ISyncMgrHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_name : UInt64
    get_handler_info : UInt64
    get_object : UInt64
    get_capabilities : UInt64
    get_policies : UInt64
    activate : UInt64
    enable : UInt64
    synchronize : UInt64
  end

  ISyncMgrHandler_GUID = "04ec2e43-ac77-49f9-9b98-0307ef7a72a2"
  IID_ISyncMgrHandler = LibC::GUID.new(0x4ec2e43_u32, 0xac77_u16, 0x49f9_u16, StaticArray[0x9b_u8, 0x98_u8, 0x3_u8, 0x7_u8, 0xef_u8, 0x7a_u8, 0x72_u8, 0xa2_u8])
  struct ISyncMgrHandler
    lpVtbl : ISyncMgrHandlerVTbl*
  end

  struct ISyncMgrHandlerInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type : UInt64
    get_type_label : UInt64
    get_comment : UInt64
    get_last_sync_time : UInt64
    is_active : UInt64
    is_enabled : UInt64
    is_connected : UInt64
  end

  ISyncMgrHandlerInfo_GUID = "4ff1d798-ecf7-4524-aa81-1e362a0aef3a"
  IID_ISyncMgrHandlerInfo = LibC::GUID.new(0x4ff1d798_u32, 0xecf7_u16, 0x4524_u16, StaticArray[0xaa_u8, 0x81_u8, 0x1e_u8, 0x36_u8, 0x2a_u8, 0xa_u8, 0xef_u8, 0x3a_u8])
  struct ISyncMgrHandlerInfo
    lpVtbl : ISyncMgrHandlerInfoVTbl*
  end

  struct ISyncMgrSyncItemContainerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_sync_item : UInt64
    get_sync_item_enumerator : UInt64
    get_sync_item_count : UInt64
  end

  ISyncMgrSyncItemContainer_GUID = "90701133-be32-4129-a65c-99e616cafff4"
  IID_ISyncMgrSyncItemContainer = LibC::GUID.new(0x90701133_u32, 0xbe32_u16, 0x4129_u16, StaticArray[0xa6_u8, 0x5c_u8, 0x99_u8, 0xe6_u8, 0x16_u8, 0xca_u8, 0xff_u8, 0xf4_u8])
  struct ISyncMgrSyncItemContainer
    lpVtbl : ISyncMgrSyncItemContainerVTbl*
  end

  struct ISyncMgrSyncItemVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_item_id : UInt64
    get_name : UInt64
    get_item_info : UInt64
    get_object : UInt64
    get_capabilities : UInt64
    get_policies : UInt64
    enable : UInt64
    delete : UInt64
  end

  ISyncMgrSyncItem_GUID = "b20b24ce-2593-4f04-bd8b-7ad6c45051cd"
  IID_ISyncMgrSyncItem = LibC::GUID.new(0xb20b24ce_u32, 0x2593_u16, 0x4f04_u16, StaticArray[0xbd_u8, 0x8b_u8, 0x7a_u8, 0xd6_u8, 0xc4_u8, 0x50_u8, 0x51_u8, 0xcd_u8])
  struct ISyncMgrSyncItem
    lpVtbl : ISyncMgrSyncItemVTbl*
  end

  struct ISyncMgrSyncItemInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_type_label : UInt64
    get_comment : UInt64
    get_last_sync_time : UInt64
    is_enabled : UInt64
    is_connected : UInt64
  end

  ISyncMgrSyncItemInfo_GUID = "e7fd9502-be0c-4464-90a1-2b5277031232"
  IID_ISyncMgrSyncItemInfo = LibC::GUID.new(0xe7fd9502_u32, 0xbe0c_u16, 0x4464_u16, StaticArray[0x90_u8, 0xa1_u8, 0x2b_u8, 0x52_u8, 0x77_u8, 0x3_u8, 0x12_u8, 0x32_u8])
  struct ISyncMgrSyncItemInfo
    lpVtbl : ISyncMgrSyncItemInfoVTbl*
  end

  struct IEnumSyncMgrSyncItemsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumSyncMgrSyncItems_GUID = "54b3abf3-f085-4181-b546-e29c403c726b"
  IID_IEnumSyncMgrSyncItems = LibC::GUID.new(0x54b3abf3_u32, 0xf085_u16, 0x4181_u16, StaticArray[0xb5_u8, 0x46_u8, 0xe2_u8, 0x9c_u8, 0x40_u8, 0x3c_u8, 0x72_u8, 0x6b_u8])
  struct IEnumSyncMgrSyncItems
    lpVtbl : IEnumSyncMgrSyncItemsVTbl*
  end

  struct ISyncMgrSessionCreatorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_session : UInt64
  end

  ISyncMgrSessionCreator_GUID = "17f48517-f305-4321-a08d-b25a834918fd"
  IID_ISyncMgrSessionCreator = LibC::GUID.new(0x17f48517_u32, 0xf305_u16, 0x4321_u16, StaticArray[0xa0_u8, 0x8d_u8, 0xb2_u8, 0x5a_u8, 0x83_u8, 0x49_u8, 0x18_u8, 0xfd_u8])
  struct ISyncMgrSessionCreator
    lpVtbl : ISyncMgrSessionCreatorVTbl*
  end

  struct ISyncMgrSyncCallbackVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    report_progress : UInt64
    set_handler_progress_text : UInt64
    report_event : UInt64
    can_continue : UInt64
    query_for_additional_items : UInt64
    add_item_to_session : UInt64
    add_i_unknown_to_session : UInt64
    propose_item : UInt64
    commit_item : UInt64
    report_manual_sync : UInt64
  end

  ISyncMgrSyncCallback_GUID = "884ccd87-b139-4937-a4ba-4f8e19513fbe"
  IID_ISyncMgrSyncCallback = LibC::GUID.new(0x884ccd87_u32, 0xb139_u16, 0x4937_u16, StaticArray[0xa4_u8, 0xba_u8, 0x4f_u8, 0x8e_u8, 0x19_u8, 0x51_u8, 0x3f_u8, 0xbe_u8])
  struct ISyncMgrSyncCallback
    lpVtbl : ISyncMgrSyncCallbackVTbl*
  end

  struct ISyncMgrUIOperationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    run : UInt64
  end

  ISyncMgrUIOperation_GUID = "fc7cfa47-dfe1-45b5-a049-8cfd82bec271"
  IID_ISyncMgrUIOperation = LibC::GUID.new(0xfc7cfa47_u32, 0xdfe1_u16, 0x45b5_u16, StaticArray[0xa0_u8, 0x49_u8, 0x8c_u8, 0xfd_u8, 0x82_u8, 0xbe_u8, 0xc2_u8, 0x71_u8])
  struct ISyncMgrUIOperation
    lpVtbl : ISyncMgrUIOperationVTbl*
  end

  struct ISyncMgrEventLinkUIOperationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    run : UInt64
    init : UInt64
  end

  ISyncMgrEventLinkUIOperation_GUID = "64522e52-848b-4015-89ce-5a36f00b94ff"
  IID_ISyncMgrEventLinkUIOperation = LibC::GUID.new(0x64522e52_u32, 0x848b_u16, 0x4015_u16, StaticArray[0x89_u8, 0xce_u8, 0x5a_u8, 0x36_u8, 0xf0_u8, 0xb_u8, 0x94_u8, 0xff_u8])
  struct ISyncMgrEventLinkUIOperation
    lpVtbl : ISyncMgrEventLinkUIOperationVTbl*
  end

  struct ISyncMgrScheduleWizardUIOperationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    run : UInt64
    init_wizard : UInt64
  end

  ISyncMgrScheduleWizardUIOperation_GUID = "459a6c84-21d2-4ddc-8a53-f023a46066f2"
  IID_ISyncMgrScheduleWizardUIOperation = LibC::GUID.new(0x459a6c84_u32, 0x21d2_u16, 0x4ddc_u16, StaticArray[0x8a_u8, 0x53_u8, 0xf0_u8, 0x23_u8, 0xa4_u8, 0x60_u8, 0x66_u8, 0xf2_u8])
  struct ISyncMgrScheduleWizardUIOperation
    lpVtbl : ISyncMgrScheduleWizardUIOperationVTbl*
  end

  struct ISyncMgrSyncResultVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    result : UInt64
  end

  ISyncMgrSyncResult_GUID = "2b90f17e-5a3e-4b33-bb7f-1bc48056b94d"
  IID_ISyncMgrSyncResult = LibC::GUID.new(0x2b90f17e_u32, 0x5a3e_u16, 0x4b33_u16, StaticArray[0xbb_u8, 0x7f_u8, 0x1b_u8, 0xc4_u8, 0x80_u8, 0x56_u8, 0xb9_u8, 0x4d_u8])
  struct ISyncMgrSyncResult
    lpVtbl : ISyncMgrSyncResultVTbl*
  end

  struct ISyncMgrControlVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    start_handler_sync : UInt64
    start_item_sync : UInt64
    start_sync_all : UInt64
    stop_handler_sync : UInt64
    stop_item_sync : UInt64
    stop_sync_all : UInt64
    update_handler_collection : UInt64
    update_handler : UInt64
    update_item : UInt64
    update_events : UInt64
    update_conflict : UInt64
    update_conflicts : UInt64
    activate_handler : UInt64
    enable_handler : UInt64
    enable_item : UInt64
  end

  ISyncMgrControl_GUID = "9b63616c-36b2-46bc-959f-c1593952d19b"
  IID_ISyncMgrControl = LibC::GUID.new(0x9b63616c_u32, 0x36b2_u16, 0x46bc_u16, StaticArray[0x95_u8, 0x9f_u8, 0xc1_u8, 0x59_u8, 0x39_u8, 0x52_u8, 0xd1_u8, 0x9b_u8])
  struct ISyncMgrControl
    lpVtbl : ISyncMgrControlVTbl*
  end

  struct ISyncMgrEventStoreVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_event_enumerator : UInt64
    get_event_count : UInt64
    get_event : UInt64
    remove_event : UInt64
  end

  ISyncMgrEventStore_GUID = "37e412f9-016e-44c2-81ff-db3add774266"
  IID_ISyncMgrEventStore = LibC::GUID.new(0x37e412f9_u32, 0x16e_u16, 0x44c2_u16, StaticArray[0x81_u8, 0xff_u8, 0xdb_u8, 0x3a_u8, 0xdd_u8, 0x77_u8, 0x42_u8, 0x66_u8])
  struct ISyncMgrEventStore
    lpVtbl : ISyncMgrEventStoreVTbl*
  end

  struct ISyncMgrEventVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_event_id : UInt64
    get_handler_id : UInt64
    get_item_id : UInt64
    get_level : UInt64
    get_flags : UInt64
    get_time : UInt64
    get_name : UInt64
    get_description : UInt64
    get_link_text : UInt64
    get_link_reference : UInt64
    get_context : UInt64
  end

  ISyncMgrEvent_GUID = "fee0ef8b-46bd-4db4-b7e6-ff2c687313bc"
  IID_ISyncMgrEvent = LibC::GUID.new(0xfee0ef8b_u32, 0x46bd_u16, 0x4db4_u16, StaticArray[0xb7_u8, 0xe6_u8, 0xff_u8, 0x2c_u8, 0x68_u8, 0x73_u8, 0x13_u8, 0xbc_u8])
  struct ISyncMgrEvent
    lpVtbl : ISyncMgrEventVTbl*
  end

  struct IEnumSyncMgrEventsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumSyncMgrEvents_GUID = "c81a1d4e-8cf7-4683-80e0-bcae88d677b6"
  IID_IEnumSyncMgrEvents = LibC::GUID.new(0xc81a1d4e_u32, 0x8cf7_u16, 0x4683_u16, StaticArray[0x80_u8, 0xe0_u8, 0xbc_u8, 0xae_u8, 0x88_u8, 0xd6_u8, 0x77_u8, 0xb6_u8])
  struct IEnumSyncMgrEvents
    lpVtbl : IEnumSyncMgrEventsVTbl*
  end

  struct ISyncMgrConflictStoreVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    enum_conflicts : UInt64
    bind_to_conflict : UInt64
    remove_conflicts : UInt64
    get_count : UInt64
  end

  ISyncMgrConflictStore_GUID = "cf8fc579-c396-4774-85f1-d908a831156e"
  IID_ISyncMgrConflictStore = LibC::GUID.new(0xcf8fc579_u32, 0xc396_u16, 0x4774_u16, StaticArray[0x85_u8, 0xf1_u8, 0xd9_u8, 0x8_u8, 0xa8_u8, 0x31_u8, 0x15_u8, 0x6e_u8])
  struct ISyncMgrConflictStore
    lpVtbl : ISyncMgrConflictStoreVTbl*
  end

  struct IEnumSyncMgrConflictVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumSyncMgrConflict_GUID = "82705914-dda3-4893-ba99-49de6c8c8036"
  IID_IEnumSyncMgrConflict = LibC::GUID.new(0x82705914_u32, 0xdda3_u16, 0x4893_u16, StaticArray[0xba_u8, 0x99_u8, 0x49_u8, 0xde_u8, 0x6c_u8, 0x8c_u8, 0x80_u8, 0x36_u8])
  struct IEnumSyncMgrConflict
    lpVtbl : IEnumSyncMgrConflictVTbl*
  end

  struct ISyncMgrConflictVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_property : UInt64
    get_conflict_id_info : UInt64
    get_items_array : UInt64
    resolve : UInt64
    get_resolution_handler : UInt64
  end

  ISyncMgrConflict_GUID = "9c204249-c443-4ba4-85ed-c972681db137"
  IID_ISyncMgrConflict = LibC::GUID.new(0x9c204249_u32, 0xc443_u16, 0x4ba4_u16, StaticArray[0x85_u8, 0xed_u8, 0xc9_u8, 0x72_u8, 0x68_u8, 0x1d_u8, 0xb1_u8, 0x37_u8])
  struct ISyncMgrConflict
    lpVtbl : ISyncMgrConflictVTbl*
  end

  struct ISyncMgrResolutionHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    query_abilities : UInt64
    keep_other : UInt64
    keep_recent : UInt64
    remove_from_sync_set : UInt64
    keep_items : UInt64
  end

  ISyncMgrResolutionHandler_GUID = "40a3d052-8bff-4c4b-a338-d4a395700de9"
  IID_ISyncMgrResolutionHandler = LibC::GUID.new(0x40a3d052_u32, 0x8bff_u16, 0x4c4b_u16, StaticArray[0xa3_u8, 0x38_u8, 0xd4_u8, 0xa3_u8, 0x95_u8, 0x70_u8, 0xd_u8, 0xe9_u8])
  struct ISyncMgrResolutionHandler
    lpVtbl : ISyncMgrResolutionHandlerVTbl*
  end

  struct ISyncMgrConflictPresenterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    present_conflict : UInt64
  end

  ISyncMgrConflictPresenter_GUID = "0b4f5353-fd2b-42cd-8763-4779f2d508a3"
  IID_ISyncMgrConflictPresenter = LibC::GUID.new(0xb4f5353_u32, 0xfd2b_u16, 0x42cd_u16, StaticArray[0x87_u8, 0x63_u8, 0x47_u8, 0x79_u8, 0xf2_u8, 0xd5_u8, 0x8_u8, 0xa3_u8])
  struct ISyncMgrConflictPresenter
    lpVtbl : ISyncMgrConflictPresenterVTbl*
  end

  struct ISyncMgrConflictResolveInfoVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_iteration_info : UInt64
    get_presenter_next_step : UInt64
    get_presenter_choice : UInt64
    get_item_choice_count : UInt64
    get_item_choice : UInt64
    set_presenter_next_step : UInt64
    set_presenter_choice : UInt64
    set_item_choices : UInt64
  end

  ISyncMgrConflictResolveInfo_GUID = "c405a219-25a2-442e-8743-b845a2cee93f"
  IID_ISyncMgrConflictResolveInfo = LibC::GUID.new(0xc405a219_u32, 0x25a2_u16, 0x442e_u16, StaticArray[0x87_u8, 0x43_u8, 0xb8_u8, 0x45_u8, 0xa2_u8, 0xce_u8, 0xe9_u8, 0x3f_u8])
  struct ISyncMgrConflictResolveInfo
    lpVtbl : ISyncMgrConflictResolveInfoVTbl*
  end

  struct ISyncMgrConflictFolderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_conflict_id_list : UInt64
  end

  ISyncMgrConflictFolder_GUID = "59287f5e-bc81-4fca-a7f1-e5a8ecdb1d69"
  IID_ISyncMgrConflictFolder = LibC::GUID.new(0x59287f5e_u32, 0xbc81_u16, 0x4fca_u16, StaticArray[0xa7_u8, 0xf1_u8, 0xe5_u8, 0xa8_u8, 0xec_u8, 0xdb_u8, 0x1d_u8, 0x69_u8])
  struct ISyncMgrConflictFolder
    lpVtbl : ISyncMgrConflictFolderVTbl*
  end

  struct ISyncMgrConflictItemsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_count : UInt64
    get_item : UInt64
  end

  ISyncMgrConflictItems_GUID = "9c7ead52-8023-4936-a4db-d2a9a99e436a"
  IID_ISyncMgrConflictItems = LibC::GUID.new(0x9c7ead52_u32, 0x8023_u16, 0x4936_u16, StaticArray[0xa4_u8, 0xdb_u8, 0xd2_u8, 0xa9_u8, 0xa9_u8, 0x9e_u8, 0x43_u8, 0x6a_u8])
  struct ISyncMgrConflictItems
    lpVtbl : ISyncMgrConflictItemsVTbl*
  end

  struct ISyncMgrConflictResolutionItemsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_count : UInt64
    get_item : UInt64
  end

  ISyncMgrConflictResolutionItems_GUID = "458725b9-129d-4135-a998-9ceafec27007"
  IID_ISyncMgrConflictResolutionItems = LibC::GUID.new(0x458725b9_u32, 0x129d_u16, 0x4135_u16, StaticArray[0xa9_u8, 0x98_u8, 0x9c_u8, 0xea_u8, 0xfe_u8, 0xc2_u8, 0x70_u8, 0x7_u8])
  struct ISyncMgrConflictResolutionItems
    lpVtbl : ISyncMgrConflictResolutionItemsVTbl*
  end

  struct IInputPanelConfigurationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    enable_focus_tracking : UInt64
  end

  IInputPanelConfiguration_GUID = "41c81592-514c-48bd-a22e-e6af638521a6"
  IID_IInputPanelConfiguration = LibC::GUID.new(0x41c81592_u32, 0x514c_u16, 0x48bd_u16, StaticArray[0xa2_u8, 0x2e_u8, 0xe6_u8, 0xaf_u8, 0x63_u8, 0x85_u8, 0x21_u8, 0xa6_u8])
  struct IInputPanelConfiguration
    lpVtbl : IInputPanelConfigurationVTbl*
  end

  struct IInputPanelInvocationConfigurationVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    require_touch_in_edit_control : UInt64
  end

  IInputPanelInvocationConfiguration_GUID = "a213f136-3b45-4362-a332-efb6547cd432"
  IID_IInputPanelInvocationConfiguration = LibC::GUID.new(0xa213f136_u32, 0x3b45_u16, 0x4362_u16, StaticArray[0xa3_u8, 0x32_u8, 0xef_u8, 0xb6_u8, 0x54_u8, 0x7c_u8, 0xd4_u8, 0x32_u8])
  struct IInputPanelInvocationConfiguration
    lpVtbl : IInputPanelInvocationConfigurationVTbl*
  end

  struct ISharedBitmapVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_shared_bitmap : UInt64
    get_size : UInt64
    get_format : UInt64
    initialize_bitmap : UInt64
    detach : UInt64
  end

  ISharedBitmap_GUID = "091162a4-bc96-411f-aae8-c5122cd03363"
  IID_ISharedBitmap = LibC::GUID.new(0x91162a4_u32, 0xbc96_u16, 0x411f_u16, StaticArray[0xaa_u8, 0xe8_u8, 0xc5_u8, 0x12_u8, 0x2c_u8, 0xd0_u8, 0x33_u8, 0x63_u8])
  struct ISharedBitmap
    lpVtbl : ISharedBitmapVTbl*
  end

  struct IThumbnailCacheVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_thumbnail : UInt64
    get_thumbnail_by_id : UInt64
  end

  IThumbnailCache_GUID = "f676c15d-596a-4ce2-8234-33996f445db1"
  IID_IThumbnailCache = LibC::GUID.new(0xf676c15d_u32, 0x596a_u16, 0x4ce2_u16, StaticArray[0x82_u8, 0x34_u8, 0x33_u8, 0x99_u8, 0x6f_u8, 0x44_u8, 0x5d_u8, 0xb1_u8])
  struct IThumbnailCache
    lpVtbl : IThumbnailCacheVTbl*
  end

  struct IThumbnailProviderVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_thumbnail : UInt64
  end

  IThumbnailProvider_GUID = "e357fccd-a995-4576-b01f-234630154e96"
  IID_IThumbnailProvider = LibC::GUID.new(0xe357fccd_u32, 0xa995_u16, 0x4576_u16, StaticArray[0xb0_u8, 0x1f_u8, 0x23_u8, 0x46_u8, 0x30_u8, 0x15_u8, 0x4e_u8, 0x96_u8])
  struct IThumbnailProvider
    lpVtbl : IThumbnailProviderVTbl*
  end

  struct IThumbnailSettingsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_context : UInt64
  end

  IThumbnailSettings_GUID = "f4376f00-bef5-4d45-80f3-1e023bbf1209"
  IID_IThumbnailSettings = LibC::GUID.new(0xf4376f00_u32, 0xbef5_u16, 0x4d45_u16, StaticArray[0x80_u8, 0xf3_u8, 0x1e_u8, 0x2_u8, 0x3b_u8, 0xbf_u8, 0x12_u8, 0x9_u8])
  struct IThumbnailSettings
    lpVtbl : IThumbnailSettingsVTbl*
  end

  struct IThumbnailCachePrimerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    page_in_thumbnail : UInt64
  end

  IThumbnailCachePrimer_GUID = "0f03f8fe-2b26-46f0-965a-212aa8d66b76"
  IID_IThumbnailCachePrimer = LibC::GUID.new(0xf03f8fe_u32, 0x2b26_u16, 0x46f0_u16, StaticArray[0x96_u8, 0x5a_u8, 0x21_u8, 0x2a_u8, 0xa8_u8, 0xd6_u8, 0x6b_u8, 0x76_u8])
  struct IThumbnailCachePrimer
    lpVtbl : IThumbnailCachePrimerVTbl*
  end

  struct IShellImageDataFactoryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_i_shell_image_data : UInt64
    create_image_from_file : UInt64
    create_image_from_stream : UInt64
    get_data_format_from_path : UInt64
  end

  IShellImageDataFactory_GUID = "9be8ed5c-edab-4d75-90f3-bd5bdbb21c82"
  IID_IShellImageDataFactory = LibC::GUID.new(0x9be8ed5c_u32, 0xedab_u16, 0x4d75_u16, StaticArray[0x90_u8, 0xf3_u8, 0xbd_u8, 0x5b_u8, 0xdb_u8, 0xb2_u8, 0x1c_u8, 0x82_u8])
  struct IShellImageDataFactory
    lpVtbl : IShellImageDataFactoryVTbl*
  end

  struct IShellImageDataVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    decode : UInt64
    draw : UInt64
    next_frame : UInt64
    next_page : UInt64
    prev_page : UInt64
    is_transparent : UInt64
    is_animated : UInt64
    is_vector : UInt64
    is_multipage : UInt64
    is_editable : UInt64
    is_printable : UInt64
    is_decoded : UInt64
    get_current_page : UInt64
    get_page_count : UInt64
    select_page : UInt64
    get_size : UInt64
    get_raw_data_format : UInt64
    get_pixel_format : UInt64
    get_delay : UInt64
    get_properties : UInt64
    rotate : UInt64
    scale : UInt64
    discard_edit : UInt64
    set_encoder_params : UInt64
    display_name : UInt64
    get_resolution : UInt64
    get_encoder_params : UInt64
    register_abort : UInt64
    clone_frame : UInt64
    replace_frame : UInt64
  end

  IShellImageData_GUID = "bfdeec12-8040-4403-a5ea-9e07dafcf530"
  IID_IShellImageData = LibC::GUID.new(0xbfdeec12_u32, 0x8040_u16, 0x4403_u16, StaticArray[0xa5_u8, 0xea_u8, 0x9e_u8, 0x7_u8, 0xda_u8, 0xfc_u8, 0xf5_u8, 0x30_u8])
  struct IShellImageData
    lpVtbl : IShellImageDataVTbl*
  end

  struct IShellImageDataAbortVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    query_abort : UInt64
  end

  IShellImageDataAbort_GUID = "53fb8e58-50c0-4003-b4aa-0c8df28e7f3a"
  IID_IShellImageDataAbort = LibC::GUID.new(0x53fb8e58_u32, 0x50c0_u16, 0x4003_u16, StaticArray[0xb4_u8, 0xaa_u8, 0xc_u8, 0x8d_u8, 0xf2_u8, 0x8e_u8, 0x7f_u8, 0x3a_u8])
  struct IShellImageDataAbort
    lpVtbl : IShellImageDataAbortVTbl*
  end

  struct IStorageProviderPropertyHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    retrieve_properties : UInt64
    save_properties : UInt64
  end

  IStorageProviderPropertyHandler_GUID = "301dfbe5-524c-4b0f-8b2d-21c40b3a2988"
  IID_IStorageProviderPropertyHandler = LibC::GUID.new(0x301dfbe5_u32, 0x524c_u16, 0x4b0f_u16, StaticArray[0x8b_u8, 0x2d_u8, 0x21_u8, 0xc4_u8, 0xb_u8, 0x3a_u8, 0x29_u8, 0x88_u8])
  struct IStorageProviderPropertyHandler
    lpVtbl : IStorageProviderPropertyHandlerVTbl*
  end

  struct IStorageProviderHandlerVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_property_handler_from_path : UInt64
    get_property_handler_from_uri : UInt64
    get_property_handler_from_file_id : UInt64
  end

  IStorageProviderHandler_GUID = "162c6fb5-44d3-435b-903d-e613fa093fb5"
  IID_IStorageProviderHandler = LibC::GUID.new(0x162c6fb5_u32, 0x44d3_u16, 0x435b_u16, StaticArray[0x90_u8, 0x3d_u8, 0xe6_u8, 0x13_u8, 0xfa_u8, 0x9_u8, 0x3f_u8, 0xb5_u8])
  struct IStorageProviderHandler
    lpVtbl : IStorageProviderHandlerVTbl*
  end

  struct ISyncMgrSynchronizeCallbackVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    show_properties_completed : UInt64
    prepare_for_sync_completed : UInt64
    synchronize_completed : UInt64
    show_error_completed : UInt64
    enable_modeless : UInt64
    progress : UInt64
    log_error : UInt64
    delete_log_error : UInt64
    establish_connection : UInt64
  end

  ISyncMgrSynchronizeCallback_GUID = "6295df41-35ee-11d1-8707-00c04fd93327"
  IID_ISyncMgrSynchronizeCallback = LibC::GUID.new(0x6295df41_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])
  struct ISyncMgrSynchronizeCallback
    lpVtbl : ISyncMgrSynchronizeCallbackVTbl*
  end

  struct ISyncMgrEnumItemsVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  ISyncMgrEnumItems_GUID = "6295df2a-35ee-11d1-8707-00c04fd93327"
  IID_ISyncMgrEnumItems = LibC::GUID.new(0x6295df2a_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])
  struct ISyncMgrEnumItems
    lpVtbl : ISyncMgrEnumItemsVTbl*
  end

  struct ISyncMgrSynchronizeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    get_handler_info : UInt64
    enum_sync_mgr_items : UInt64
    get_item_object : UInt64
    show_properties : UInt64
    set_progress_callback : UInt64
    prepare_for_sync : UInt64
    synchronize : UInt64
    set_item_status : UInt64
    show_error : UInt64
  end

  ISyncMgrSynchronize_GUID = "6295df40-35ee-11d1-8707-00c04fd93327"
  IID_ISyncMgrSynchronize = LibC::GUID.new(0x6295df40_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])
  struct ISyncMgrSynchronize
    lpVtbl : ISyncMgrSynchronizeVTbl*
  end

  struct ISyncMgrSynchronizeInvokeVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    update_items : UInt64
    update_all : UInt64
  end

  ISyncMgrSynchronizeInvoke_GUID = "6295df2c-35ee-11d1-8707-00c04fd93327"
  IID_ISyncMgrSynchronizeInvoke = LibC::GUID.new(0x6295df2c_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])
  struct ISyncMgrSynchronizeInvoke
    lpVtbl : ISyncMgrSynchronizeInvokeVTbl*
  end

  struct ISyncMgrRegisterVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    register_sync_mgr_handler : UInt64
    unregister_sync_mgr_handler : UInt64
    get_handler_registration_info : UInt64
  end

  ISyncMgrRegister_GUID = "6295df42-35ee-11d1-8707-00c04fd93327"
  IID_ISyncMgrRegister = LibC::GUID.new(0x6295df42_u32, 0x35ee_u16, 0x11d1_u16, StaticArray[0x87_u8, 0x7_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x33_u8, 0x27_u8])
  struct ISyncMgrRegister
    lpVtbl : ISyncMgrRegisterVTbl*
  end

  struct IThumbnailStreamCacheVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_thumbnail_stream : UInt64
    set_thumbnail_stream : UInt64
  end

  IThumbnailStreamCache_GUID = "90e11430-9569-41d8-ae75-6d4d2ae7cca0"
  IID_IThumbnailStreamCache = LibC::GUID.new(0x90e11430_u32, 0x9569_u16, 0x41d8_u16, StaticArray[0xae_u8, 0x75_u8, 0x6d_u8, 0x4d_u8, 0x2a_u8, 0xe7_u8, 0xcc_u8, 0xa0_u8])
  struct IThumbnailStreamCache
    lpVtbl : IThumbnailStreamCacheVTbl*
  end

  struct ITravelLogEntryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_title : UInt64
    get_url : UInt64
  end

  ITravelLogEntry_GUID = "7ebfdd87-ad18-11d3-a4c5-00c04f72d6b8"
  IID_ITravelLogEntry = LibC::GUID.new(0x7ebfdd87_u32, 0xad18_u16, 0x11d3_u16, StaticArray[0xa4_u8, 0xc5_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x72_u8, 0xd6_u8, 0xb8_u8])
  struct ITravelLogEntry
    lpVtbl : ITravelLogEntryVTbl*
  end

  struct ITravelLogClientVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    find_window_by_index : UInt64
    get_window_data : UInt64
    load_history_position : UInt64
  end

  ITravelLogClient_GUID = "241c033e-e659-43da-aa4d-4086dbc4758d"
  IID_ITravelLogClient = LibC::GUID.new(0x241c033e_u32, 0xe659_u16, 0x43da_u16, StaticArray[0xaa_u8, 0x4d_u8, 0x40_u8, 0x86_u8, 0xdb_u8, 0xc4_u8, 0x75_u8, 0x8d_u8])
  struct ITravelLogClient
    lpVtbl : ITravelLogClientVTbl*
  end

  struct IEnumTravelLogEntryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumTravelLogEntry_GUID = "7ebfdd85-ad18-11d3-a4c5-00c04f72d6b8"
  IID_IEnumTravelLogEntry = LibC::GUID.new(0x7ebfdd85_u32, 0xad18_u16, 0x11d3_u16, StaticArray[0xa4_u8, 0xc5_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x72_u8, 0xd6_u8, 0xb8_u8])
  struct IEnumTravelLogEntry
    lpVtbl : IEnumTravelLogEntryVTbl*
  end

  struct ITravelLogStgVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    create_entry : UInt64
    travel_to : UInt64
    enum_entries : UInt64
    find_entries : UInt64
    get_count : UInt64
    remove_entry : UInt64
    get_relative_entry : UInt64
  end

  ITravelLogStg_GUID = "7ebfdd80-ad18-11d3-a4c5-00c04f72d6b8"
  IID_ITravelLogStg = LibC::GUID.new(0x7ebfdd80_u32, 0xad18_u16, 0x11d3_u16, StaticArray[0xa4_u8, 0xc5_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0x72_u8, 0xd6_u8, 0xb8_u8])
  struct ITravelLogStg
    lpVtbl : ITravelLogStgVTbl*
  end

  struct IHlinkVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_hlink_site : UInt64
    get_hlink_site : UInt64
    set_moniker_reference : UInt64
    get_moniker_reference : UInt64
    set_string_reference : UInt64
    get_string_reference : UInt64
    set_friendly_name : UInt64
    get_friendly_name : UInt64
    set_target_frame_name : UInt64
    get_target_frame_name : UInt64
    get_misc_status : UInt64
    navigate : UInt64
    set_additional_params : UInt64
    get_additional_params : UInt64
  end

  IHlink_GUID = "79eac9c3-baf9-11ce-8c82-00aa004ba90b"
  IID_IHlink = LibC::GUID.new(0x79eac9c3_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
  struct IHlink
    lpVtbl : IHlinkVTbl*
  end

  struct IHlinkSiteVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    query_service : UInt64
    get_moniker : UInt64
    ready_to_navigate : UInt64
    on_navigation_complete : UInt64
  end

  IHlinkSite_GUID = "79eac9c2-baf9-11ce-8c82-00aa004ba90b"
  IID_IHlinkSite = LibC::GUID.new(0x79eac9c2_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
  struct IHlinkSite
    lpVtbl : IHlinkSiteVTbl*
  end

  struct IHlinkTargetVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_browse_context : UInt64
    get_browse_context : UInt64
    navigate : UInt64
    get_moniker : UInt64
    get_friendly_name : UInt64
  end

  IHlinkTarget_GUID = "79eac9c4-baf9-11ce-8c82-00aa004ba90b"
  IID_IHlinkTarget = LibC::GUID.new(0x79eac9c4_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
  struct IHlinkTarget
    lpVtbl : IHlinkTargetVTbl*
  end

  struct IHlinkFrameVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_browse_context : UInt64
    get_browse_context : UInt64
    navigate : UInt64
    on_navigate : UInt64
    update_hlink : UInt64
  end

  IHlinkFrame_GUID = "79eac9c5-baf9-11ce-8c82-00aa004ba90b"
  IID_IHlinkFrame = LibC::GUID.new(0x79eac9c5_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
  struct IHlinkFrame
    lpVtbl : IHlinkFrameVTbl*
  end

  struct IEnumHLITEMVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    next : UInt64
    skip : UInt64
    reset : UInt64
    clone : UInt64
  end

  IEnumHLITEM_GUID = "79eac9c6-baf9-11ce-8c82-00aa004ba90b"
  IID_IEnumHLITEM = LibC::GUID.new(0x79eac9c6_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
  struct IEnumHLITEM
    lpVtbl : IEnumHLITEMVTbl*
  end

  struct IHlinkBrowseContextVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    register : UInt64
    get_object : UInt64
    revoke : UInt64
    set_browse_window_info : UInt64
    get_browse_window_info : UInt64
    set_initial_hlink : UInt64
    on_navigate_hlink : UInt64
    update_hlink : UInt64
    enum_navigation_stack : UInt64
    query_hlink : UInt64
    get_hlink : UInt64
    set_current_hlink : UInt64
    clone : UInt64
    close : UInt64
  end

  IHlinkBrowseContext_GUID = "79eac9c7-baf9-11ce-8c82-00aa004ba90b"
  IID_IHlinkBrowseContext = LibC::GUID.new(0x79eac9c7_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
  struct IHlinkBrowseContext
    lpVtbl : IHlinkBrowseContextVTbl*
  end

  struct IExtensionServicesVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_additional_headers : UInt64
    set_authenticate_data : UInt64
  end

  IExtensionServices_GUID = "79eac9cb-baf9-11ce-8c82-00aa004ba90b"
  IID_IExtensionServices = LibC::GUID.new(0x79eac9cb_u32, 0xbaf9_u16, 0x11ce_u16, StaticArray[0x8c_u8, 0x82_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4b_u8, 0xa9_u8, 0xb_u8])
  struct IExtensionServices
    lpVtbl : IExtensionServicesVTbl*
  end

  struct ITravelEntryVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    invoke : UInt64
    update : UInt64
    get_pidl : UInt64
  end

  ITravelEntry_GUID = "f46edb3b-bc2f-11d0-9412-00aa00a3ebd3"
  IID_ITravelEntry = LibC::GUID.new(0xf46edb3b_u32, 0xbc2f_u16, 0x11d0_u16, StaticArray[0x94_u8, 0x12_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0xa3_u8, 0xeb_u8, 0xd3_u8])
  struct ITravelEntry
    lpVtbl : ITravelEntryVTbl*
  end

  struct ITravelLogVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_entry : UInt64
    update_entry : UInt64
    update_external : UInt64
    travel : UInt64
    get_travel_entry : UInt64
    find_travel_entry : UInt64
    get_tool_tip_text : UInt64
    insert_menu_entries : UInt64
    clone : UInt64
    count_entries : UInt64
    revert : UInt64
  end

  ITravelLog_GUID = "66a9cb08-4802-11d2-a561-00a0c92dbfe8"
  IID_ITravelLog = LibC::GUID.new(0x66a9cb08_u32, 0x4802_u16, 0x11d2_u16, StaticArray[0xa5_u8, 0x61_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
  struct ITravelLog
    lpVtbl : ITravelLogVTbl*
  end

  struct CIE4ConnectionPointVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_connection_interface : UInt64
    get_connection_point_container : UInt64
    advise : UInt64
    unadvise : UInt64
    enum_connections : UInt64
    do_invoke_ie4 : UInt64
    do_invoke_pidlie4 : UInt64
  end

  struct CIE4ConnectionPoint
    lpVtbl : CIE4ConnectionPointVTbl*
  end

  struct IExpDispSupportXPVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    find_cie4_connection_point : UInt64
    on_translate_accelerator : UInt64
    on_invoke : UInt64
  end

  IExpDispSupportXP_GUID = "2f0dd58c-f789-4f14-99fb-9293b3c9c212"
  IID_IExpDispSupportXP = LibC::GUID.new(0x2f0dd58c_u32, 0xf789_u16, 0x4f14_u16, StaticArray[0x99_u8, 0xfb_u8, 0x92_u8, 0x93_u8, 0xb3_u8, 0xc9_u8, 0xc2_u8, 0x12_u8])
  struct IExpDispSupportXP
    lpVtbl : IExpDispSupportXPVTbl*
  end

  struct IExpDispSupportVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    find_connection_point : UInt64
    on_translate_accelerator : UInt64
    on_invoke : UInt64
  end

  IExpDispSupport_GUID = "0d7d1d00-6fc0-11d0-a974-00c04fd705a2"
  IID_IExpDispSupport = LibC::GUID.new(0xd7d1d00_u32, 0x6fc0_u16, 0x11d0_u16, StaticArray[0xa9_u8, 0x74_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd7_u8, 0x5_u8, 0xa2_u8])
  struct IExpDispSupport
    lpVtbl : IExpDispSupportVTbl*
  end

  struct IBrowserServiceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_parent_site : UInt64
    set_title : UInt64
    get_title : UInt64
    get_ole_object : UInt64
    get_travel_log : UInt64
    show_control_window : UInt64
    is_control_window_shown : UInt64
    ie_get_display_name : UInt64
    ie_parse_display_name : UInt64
    display_parse_error : UInt64
    navigate_to_pidl : UInt64
    set_navigate_state : UInt64
    get_navigate_state : UInt64
    notify_redirect : UInt64
    update_window_list : UInt64
    update_back_forward_state : UInt64
    set_flags : UInt64
    get_flags : UInt64
    can_navigate_now : UInt64
    get_pidl : UInt64
    set_referrer : UInt64
    get_browser_index : UInt64
    get_browser_by_index : UInt64
    get_history_object : UInt64
    set_history_object : UInt64
    cache_ole_server : UInt64
    get_set_code_page : UInt64
    on_http_equiv : UInt64
    get_palette : UInt64
    register_window : UInt64
  end

  IBrowserService_GUID = "02ba3b52-0547-11d1-b833-00c04fc9b31f"
  IID_IBrowserService = LibC::GUID.new(0x2ba3b52_u32, 0x547_u16, 0x11d1_u16, StaticArray[0xb8_u8, 0x33_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xc9_u8, 0xb3_u8, 0x1f_u8])
  struct IBrowserService
    lpVtbl : IBrowserServiceVTbl*
  end

  struct IShellServiceVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_owner : UInt64
  end

  IShellService_GUID = "5836fb00-8187-11cf-a12b-00aa004ae837"
  IID_IShellService = LibC::GUID.new(0x5836fb00_u32, 0x8187_u16, 0x11cf_u16, StaticArray[0xa1_u8, 0x2b_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x4a_u8, 0xe8_u8, 0x37_u8])
  struct IShellService
    lpVtbl : IShellServiceVTbl*
  end

  struct IBrowserService2VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_parent_site : UInt64
    set_title : UInt64
    get_title : UInt64
    get_ole_object : UInt64
    get_travel_log : UInt64
    show_control_window : UInt64
    is_control_window_shown : UInt64
    ie_get_display_name : UInt64
    ie_parse_display_name : UInt64
    display_parse_error : UInt64
    navigate_to_pidl : UInt64
    set_navigate_state : UInt64
    get_navigate_state : UInt64
    notify_redirect : UInt64
    update_window_list : UInt64
    update_back_forward_state : UInt64
    set_flags : UInt64
    get_flags : UInt64
    can_navigate_now : UInt64
    get_pidl : UInt64
    set_referrer : UInt64
    get_browser_index : UInt64
    get_browser_by_index : UInt64
    get_history_object : UInt64
    set_history_object : UInt64
    cache_ole_server : UInt64
    get_set_code_page : UInt64
    on_http_equiv : UInt64
    get_palette : UInt64
    register_window : UInt64
    wnd_proc_bs : UInt64
    set_as_def_folder_settings : UInt64
    get_view_rect : UInt64
    on_size : UInt64
    on_create : UInt64
    on_command : UInt64
    on_destroy : UInt64
    on_notify : UInt64
    on_set_focus : UInt64
    on_frame_window_activate_bs : UInt64
    release_shell_view : UInt64
    activate_pending_view : UInt64
    create_view_window : UInt64
    create_browser_prop_sheet_ext : UInt64
    get_view_window : UInt64
    get_base_browser_data : UInt64
    put_base_browser_data : UInt64
    initialize_travel_log : UInt64
    set_top_browser : UInt64
    offline : UInt64
    allow_view_resize : UInt64
    set_activate_state : UInt64
    update_secure_lock_icon : UInt64
    initialize_download_manager : UInt64
    initialize_transition_site : UInt64
    _initialize : UInt64
    _cancel_pending_navigation_async : UInt64
    _cancel_pending_view : UInt64
    _may_save_changes : UInt64
    _pause_or_resume_view : UInt64
    _disable_modeless : UInt64
    _navigate_to_pidl2 : UInt64
    _try_shell2_rename : UInt64
    _switch_activation_now : UInt64
    _exec_children : UInt64
    _send_children : UInt64
    get_folder_set_data : UInt64
    _on_focus_change : UInt64
    v_show_hide_child_windows : UInt64
    _get_itb_last_focus : UInt64
    _put_itb_last_focus : UInt64
    _ui_activate_view : UInt64
    _get_view_border_rect : UInt64
    _update_view_rect_size : UInt64
    _resize_next_border : UInt64
    _resize_view : UInt64
    _get_effective_client_area : UInt64
    v_get_view_stream : UInt64
    forward_view_msg : UInt64
    set_accelerator_menu : UInt64
    _get_toolbar_count : UInt64
    _get_toolbar_item : UInt64
    _save_toolbars : UInt64
    _load_toolbars : UInt64
    _close_and_release_toolbars : UInt64
    v_may_get_next_toolbar_focus : UInt64
    _resize_next_border_helper : UInt64
    _find_t_bar : UInt64
    _set_focus : UInt64
    v_may_translate_accelerator : UInt64
    _get_border_dw_helper : UInt64
    v_check_zone_crossing : UInt64
  end

  IBrowserService2_GUID = "68bd21cc-438b-11d2-a560-00a0c92dbfe8"
  IID_IBrowserService2 = LibC::GUID.new(0x68bd21cc_u32, 0x438b_u16, 0x11d2_u16, StaticArray[0xa5_u8, 0x60_u8, 0x0_u8, 0xa0_u8, 0xc9_u8, 0x2d_u8, 0xbf_u8, 0xe8_u8])
  struct IBrowserService2
    lpVtbl : IBrowserService2VTbl*
  end

  struct IBrowserService3VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_parent_site : UInt64
    set_title : UInt64
    get_title : UInt64
    get_ole_object : UInt64
    get_travel_log : UInt64
    show_control_window : UInt64
    is_control_window_shown : UInt64
    ie_get_display_name : UInt64
    ie_parse_display_name : UInt64
    display_parse_error : UInt64
    navigate_to_pidl : UInt64
    set_navigate_state : UInt64
    get_navigate_state : UInt64
    notify_redirect : UInt64
    update_window_list : UInt64
    update_back_forward_state : UInt64
    set_flags : UInt64
    get_flags : UInt64
    can_navigate_now : UInt64
    get_pidl : UInt64
    set_referrer : UInt64
    get_browser_index : UInt64
    get_browser_by_index : UInt64
    get_history_object : UInt64
    set_history_object : UInt64
    cache_ole_server : UInt64
    get_set_code_page : UInt64
    on_http_equiv : UInt64
    get_palette : UInt64
    register_window : UInt64
    wnd_proc_bs : UInt64
    set_as_def_folder_settings : UInt64
    get_view_rect : UInt64
    on_size : UInt64
    on_create : UInt64
    on_command : UInt64
    on_destroy : UInt64
    on_notify : UInt64
    on_set_focus : UInt64
    on_frame_window_activate_bs : UInt64
    release_shell_view : UInt64
    activate_pending_view : UInt64
    create_view_window : UInt64
    create_browser_prop_sheet_ext : UInt64
    get_view_window : UInt64
    get_base_browser_data : UInt64
    put_base_browser_data : UInt64
    initialize_travel_log : UInt64
    set_top_browser : UInt64
    offline : UInt64
    allow_view_resize : UInt64
    set_activate_state : UInt64
    update_secure_lock_icon : UInt64
    initialize_download_manager : UInt64
    initialize_transition_site : UInt64
    _initialize : UInt64
    _cancel_pending_navigation_async : UInt64
    _cancel_pending_view : UInt64
    _may_save_changes : UInt64
    _pause_or_resume_view : UInt64
    _disable_modeless : UInt64
    _navigate_to_pidl2 : UInt64
    _try_shell2_rename : UInt64
    _switch_activation_now : UInt64
    _exec_children : UInt64
    _send_children : UInt64
    get_folder_set_data : UInt64
    _on_focus_change : UInt64
    v_show_hide_child_windows : UInt64
    _get_itb_last_focus : UInt64
    _put_itb_last_focus : UInt64
    _ui_activate_view : UInt64
    _get_view_border_rect : UInt64
    _update_view_rect_size : UInt64
    _resize_next_border : UInt64
    _resize_view : UInt64
    _get_effective_client_area : UInt64
    v_get_view_stream : UInt64
    forward_view_msg : UInt64
    set_accelerator_menu : UInt64
    _get_toolbar_count : UInt64
    _get_toolbar_item : UInt64
    _save_toolbars : UInt64
    _load_toolbars : UInt64
    _close_and_release_toolbars : UInt64
    v_may_get_next_toolbar_focus : UInt64
    _resize_next_border_helper : UInt64
    _find_t_bar : UInt64
    _set_focus : UInt64
    v_may_translate_accelerator : UInt64
    _get_border_dw_helper : UInt64
    v_check_zone_crossing : UInt64
    _position_view_window : UInt64
    ie_parse_display_name_ex : UInt64
  end

  IBrowserService3_GUID = "27d7ce21-762d-48f3-86f3-40e2fd3749c4"
  IID_IBrowserService3 = LibC::GUID.new(0x27d7ce21_u32, 0x762d_u16, 0x48f3_u16, StaticArray[0x86_u8, 0xf3_u8, 0x40_u8, 0xe2_u8, 0xfd_u8, 0x37_u8, 0x49_u8, 0xc4_u8])
  struct IBrowserService3
    lpVtbl : IBrowserService3VTbl*
  end

  struct IBrowserService4VTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    get_parent_site : UInt64
    set_title : UInt64
    get_title : UInt64
    get_ole_object : UInt64
    get_travel_log : UInt64
    show_control_window : UInt64
    is_control_window_shown : UInt64
    ie_get_display_name : UInt64
    ie_parse_display_name : UInt64
    display_parse_error : UInt64
    navigate_to_pidl : UInt64
    set_navigate_state : UInt64
    get_navigate_state : UInt64
    notify_redirect : UInt64
    update_window_list : UInt64
    update_back_forward_state : UInt64
    set_flags : UInt64
    get_flags : UInt64
    can_navigate_now : UInt64
    get_pidl : UInt64
    set_referrer : UInt64
    get_browser_index : UInt64
    get_browser_by_index : UInt64
    get_history_object : UInt64
    set_history_object : UInt64
    cache_ole_server : UInt64
    get_set_code_page : UInt64
    on_http_equiv : UInt64
    get_palette : UInt64
    register_window : UInt64
    wnd_proc_bs : UInt64
    set_as_def_folder_settings : UInt64
    get_view_rect : UInt64
    on_size : UInt64
    on_create : UInt64
    on_command : UInt64
    on_destroy : UInt64
    on_notify : UInt64
    on_set_focus : UInt64
    on_frame_window_activate_bs : UInt64
    release_shell_view : UInt64
    activate_pending_view : UInt64
    create_view_window : UInt64
    create_browser_prop_sheet_ext : UInt64
    get_view_window : UInt64
    get_base_browser_data : UInt64
    put_base_browser_data : UInt64
    initialize_travel_log : UInt64
    set_top_browser : UInt64
    offline : UInt64
    allow_view_resize : UInt64
    set_activate_state : UInt64
    update_secure_lock_icon : UInt64
    initialize_download_manager : UInt64
    initialize_transition_site : UInt64
    _initialize : UInt64
    _cancel_pending_navigation_async : UInt64
    _cancel_pending_view : UInt64
    _may_save_changes : UInt64
    _pause_or_resume_view : UInt64
    _disable_modeless : UInt64
    _navigate_to_pidl2 : UInt64
    _try_shell2_rename : UInt64
    _switch_activation_now : UInt64
    _exec_children : UInt64
    _send_children : UInt64
    get_folder_set_data : UInt64
    _on_focus_change : UInt64
    v_show_hide_child_windows : UInt64
    _get_itb_last_focus : UInt64
    _put_itb_last_focus : UInt64
    _ui_activate_view : UInt64
    _get_view_border_rect : UInt64
    _update_view_rect_size : UInt64
    _resize_next_border : UInt64
    _resize_view : UInt64
    _get_effective_client_area : UInt64
    v_get_view_stream : UInt64
    forward_view_msg : UInt64
    set_accelerator_menu : UInt64
    _get_toolbar_count : UInt64
    _get_toolbar_item : UInt64
    _save_toolbars : UInt64
    _load_toolbars : UInt64
    _close_and_release_toolbars : UInt64
    v_may_get_next_toolbar_focus : UInt64
    _resize_next_border_helper : UInt64
    _find_t_bar : UInt64
    _set_focus : UInt64
    v_may_translate_accelerator : UInt64
    _get_border_dw_helper : UInt64
    v_check_zone_crossing : UInt64
    _position_view_window : UInt64
    ie_parse_display_name_ex : UInt64
    activate_view : UInt64
    save_view_state : UInt64
    _resize_all_borders : UInt64
  end

  IBrowserService4_GUID = "639f1bff-e135-4096-abd8-e0f504d649a4"
  IID_IBrowserService4 = LibC::GUID.new(0x639f1bff_u32, 0xe135_u16, 0x4096_u16, StaticArray[0xab_u8, 0xd8_u8, 0xe0_u8, 0xf5_u8, 0x4_u8, 0xd6_u8, 0x49_u8, 0xa4_u8])
  struct IBrowserService4
    lpVtbl : IBrowserService4VTbl*
  end

  struct ITrackShellMenuVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    initialize : UInt64
    get_menu_info : UInt64
    set_shell_folder : UInt64
    get_shell_folder : UInt64
    set_menu : UInt64
    get_menu : UInt64
    invalidate_item : UInt64
    get_state : UInt64
    set_menu_toolbar : UInt64
    set_obscured : UInt64
    popup : UInt64
  end

  ITrackShellMenu_GUID = "8278f932-2a3e-11d2-838f-00c04fd918d0"
  IID_ITrackShellMenu = LibC::GUID.new(0x8278f932_u32, 0x2a3e_u16, 0x11d2_u16, StaticArray[0x83_u8, 0x8f_u8, 0x0_u8, 0xc0_u8, 0x4f_u8, 0xd9_u8, 0x18_u8, 0xd0_u8])
  struct ITrackShellMenu
    lpVtbl : ITrackShellMenuVTbl*
  end

  struct ITranscodeImageVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    transcode_image : UInt64
  end

  ITranscodeImage_GUID = "bae86ddd-dc11-421c-b7ab-cc55d1d65c44"
  IID_ITranscodeImage = LibC::GUID.new(0xbae86ddd_u32, 0xdc11_u16, 0x421c_u16, StaticArray[0xb7_u8, 0xab_u8, 0xcc_u8, 0x55_u8, 0xd1_u8, 0xd6_u8, 0x5c_u8, 0x44_u8])
  struct ITranscodeImage
    lpVtbl : ITranscodeImageVTbl*
  end

  struct IUniformResourceLocatorAVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_url : UInt64
    get_url : UInt64
    invoke_command : UInt64
  end

  IUniformResourceLocatorA_GUID = "fbf23b80-e3f0-101b-8488-00aa003e56f8"
  IID_IUniformResourceLocatorA = LibC::GUID.new(0xfbf23b80_u32, 0xe3f0_u16, 0x101b_u16, StaticArray[0x84_u8, 0x88_u8, 0x0_u8, 0xaa_u8, 0x0_u8, 0x3e_u8, 0x56_u8, 0xf8_u8])
  struct IUniformResourceLocatorA
    lpVtbl : IUniformResourceLocatorAVTbl*
  end

  struct IUniformResourceLocatorWVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    set_url : UInt64
    get_url : UInt64
    invoke_command : UInt64
  end

  IUniformResourceLocatorW_GUID = "cabb0da0-da57-11cf-9974-0020afd79762"
  IID_IUniformResourceLocatorW = LibC::GUID.new(0xcabb0da0_u32, 0xda57_u16, 0x11cf_u16, StaticArray[0x99_u8, 0x74_u8, 0x0_u8, 0x20_u8, 0xaf_u8, 0xd7_u8, 0x97_u8, 0x62_u8])
  struct IUniformResourceLocatorW
    lpVtbl : IUniformResourceLocatorWVTbl*
  end

  struct IInputPaneAnimationCoordinatorVTbl
    query_interface : UInt64
    add_ref : UInt64
    release : UInt64
    add_animation : UInt64
  end

  IInputPaneAnimationCoordinator_GUID = "2af16ba9-2de5-4b75-82d9-01372afbffb4"
  IID_IInputPaneAnimationCoordinator = LibC::GUID.new(0x2af16ba9_u32, 0x2de5_u16, 0x4b75_u16, StaticArray[0x82_u8, 0xd9_u8, 0x1_u8, 0x37_u8, 0x2a_u8, 0xfb_u8, 0xff_u8, 0xb4_u8])
  struct IInputPaneAnimationCoordinator
    lpVtbl : IInputPaneAnimationCoordinatorVTbl*
  end


  # Params # htoken : LibC::HANDLE [In],lpprofileinfo : PROFILEINFOA* [In]
  fun LoadUserProfileA(htoken : LibC::HANDLE, lpprofileinfo : PROFILEINFOA*) : LibC::BOOL

  # Params # htoken : LibC::HANDLE [In],lpprofileinfo : PROFILEINFOW* [In]
  fun LoadUserProfileW(htoken : LibC::HANDLE, lpprofileinfo : PROFILEINFOW*) : LibC::BOOL

  # Params # htoken : LibC::HANDLE [In],hprofile : LibC::HANDLE [In]
  fun UnloadUserProfile(htoken : LibC::HANDLE, hprofile : LibC::HANDLE) : LibC::BOOL

  # Params # lpprofiledir : UInt8* [In],lpcchsize : UInt32* [In]
  fun GetProfilesDirectoryA(lpprofiledir : UInt8*, lpcchsize : UInt32*) : LibC::BOOL

  # Params # lpprofiledir : Char* [In],lpcchsize : UInt32* [In]
  fun GetProfilesDirectoryW(lpprofiledir : Char*, lpcchsize : UInt32*) : LibC::BOOL

  # Params # dwflags : UInt32* [In]
  fun GetProfileType(dwflags : UInt32*) : LibC::BOOL

  # Params # lpsidstring : PSTR [In],lpprofilepath : PSTR [In],lpcomputername : PSTR [In]
  fun DeleteProfileA(lpsidstring : PSTR, lpprofilepath : PSTR, lpcomputername : PSTR) : LibC::BOOL

  # Params # lpsidstring : LibC::LPWSTR [In],lpprofilepath : LibC::LPWSTR [In],lpcomputername : LibC::LPWSTR [In]
  fun DeleteProfileW(lpsidstring : LibC::LPWSTR, lpprofilepath : LibC::LPWSTR, lpcomputername : LibC::LPWSTR) : LibC::BOOL

  # Params # pszusersid : LibC::LPWSTR [In],pszusername : LibC::LPWSTR [In],pszprofilepath : Char* [In],cchprofilepath : UInt32 [In]
  fun CreateProfile(pszusersid : LibC::LPWSTR, pszusername : LibC::LPWSTR, pszprofilepath : Char*, cchprofilepath : UInt32) : HRESULT

  # Params # lpprofiledir : UInt8* [In],lpcchsize : UInt32* [In]
  fun GetDefaultUserProfileDirectoryA(lpprofiledir : UInt8*, lpcchsize : UInt32*) : LibC::BOOL

  # Params # lpprofiledir : Char* [In],lpcchsize : UInt32* [In]
  fun GetDefaultUserProfileDirectoryW(lpprofiledir : Char*, lpcchsize : UInt32*) : LibC::BOOL

  # Params # lpprofiledir : UInt8* [In],lpcchsize : UInt32* [In]
  fun GetAllUsersProfileDirectoryA(lpprofiledir : UInt8*, lpcchsize : UInt32*) : LibC::BOOL

  # Params # lpprofiledir : Char* [In],lpcchsize : UInt32* [In]
  fun GetAllUsersProfileDirectoryW(lpprofiledir : Char*, lpcchsize : UInt32*) : LibC::BOOL

  # Params # htoken : LibC::HANDLE [In],lpprofiledir : UInt8* [In],lpcchsize : UInt32* [In]
  fun GetUserProfileDirectoryA(htoken : LibC::HANDLE, lpprofiledir : UInt8*, lpcchsize : UInt32*) : LibC::BOOL

  # Params # htoken : LibC::HANDLE [In],lpprofiledir : Char* [In],lpcchsize : UInt32* [In]
  fun GetUserProfileDirectoryW(htoken : LibC::HANDLE, lpprofiledir : Char*, lpcchsize : UInt32*) : LibC::BOOL

  # Params # hwnd : LibC::HANDLE [In],pfnsubclass : SUBCLASSPROC [In],uidsubclass : LibC::UINT_PTR [In],dwrefdata : LibC::UINT_PTR [In]
  fun SetWindowSubclass(hwnd : LibC::HANDLE, pfnsubclass : SUBCLASSPROC, uidsubclass : LibC::UINT_PTR, dwrefdata : LibC::UINT_PTR) : LibC::BOOL

  # Params # hwnd : LibC::HANDLE [In],pfnsubclass : SUBCLASSPROC [In],uidsubclass : LibC::UINT_PTR [In],pdwrefdata : LibC::UINT_PTR* [In]
  fun GetWindowSubclass(hwnd : LibC::HANDLE, pfnsubclass : SUBCLASSPROC, uidsubclass : LibC::UINT_PTR, pdwrefdata : LibC::UINT_PTR*) : LibC::BOOL

  # Params # hwnd : LibC::HANDLE [In],pfnsubclass : SUBCLASSPROC [In],uidsubclass : LibC::UINT_PTR [In]
  fun RemoveWindowSubclass(hwnd : LibC::HANDLE, pfnsubclass : SUBCLASSPROC, uidsubclass : LibC::UINT_PTR) : LibC::BOOL

  # Params # hwnd : LibC::HANDLE [In],umsg : UInt32 [In],wparam : LibC::UINT_PTR [In],lparam : LPARAM [In]
  fun DefSubclassProc(hwnd : LibC::HANDLE, umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT

  # Params # param0 : LibC::HANDLE [In],param1 : UInt32 [In]
  fun SetWindowContextHelpId(param0 : LibC::HANDLE, param1 : UInt32) : LibC::BOOL

  # Params # param0 : LibC::HANDLE [In]
  fun GetWindowContextHelpId(param0 : LibC::HANDLE) : UInt32

  # Params # param0 : LibC::HANDLE [In],param1 : UInt32 [In]
  fun SetMenuContextHelpId(param0 : LibC::HANDLE, param1 : UInt32) : LibC::BOOL

  # Params # param0 : LibC::HANDLE [In]
  fun GetMenuContextHelpId(param0 : LibC::HANDLE) : UInt32

  # Params # hwndmain : LibC::HANDLE [In],lpszhelp : PSTR [In],ucommand : UInt32 [In],dwdata : LibC::UINT_PTR [In]
  fun WinHelpA(hwndmain : LibC::HANDLE, lpszhelp : PSTR, ucommand : UInt32, dwdata : LibC::UINT_PTR) : LibC::BOOL

  # Params # hwndmain : LibC::HANDLE [In],lpszhelp : LibC::LPWSTR [In],ucommand : UInt32 [In],dwdata : LibC::UINT_PTR [In]
  fun WinHelpW(hwndmain : LibC::HANDLE, lpszhelp : LibC::LPWSTR, ucommand : UInt32, dwdata : LibC::UINT_PTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun SHSimpleIDListFromPath(pszpath : LibC::LPWSTR) : ITEMIDLIST*

  # Params # pidl : ITEMIDLIST* [In],riid : Guid* [In],ppv : Void** [In]
  fun SHCreateItemFromIDList(pidl : ITEMIDLIST*, riid : Guid*, ppv : Void**) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In],pbc : IBindCtx [In],riid : Guid* [In],ppv : Void** [In]
  fun SHCreateItemFromParsingName(pszpath : LibC::LPWSTR, pbc : IBindCtx, riid : Guid*, ppv : Void**) : HRESULT

  # Params # pidlparent : ITEMIDLIST* [In],psfparent : IShellFolder [In],pidl : ITEMIDLIST* [In],riid : Guid* [In],ppvitem : Void** [In]
  fun SHCreateItemWithParent(pidlparent : ITEMIDLIST*, psfparent : IShellFolder, pidl : ITEMIDLIST*, riid : Guid*, ppvitem : Void**) : HRESULT

  # Params # psiparent : IShellItem [In],pszname : LibC::LPWSTR [In],pbc : IBindCtx [In],riid : Guid* [In],ppv : Void** [In]
  fun SHCreateItemFromRelativeName(psiparent : IShellItem, pszname : LibC::LPWSTR, pbc : IBindCtx, riid : Guid*, ppv : Void**) : HRESULT

  # Params # kfid : Guid* [In],dwkfflags : UInt32 [In],pszitem : LibC::LPWSTR [In],riid : Guid* [In],ppv : Void** [In]
  fun SHCreateItemInKnownFolder(kfid : Guid*, dwkfflags : UInt32, pszitem : LibC::LPWSTR, riid : Guid*, ppv : Void**) : HRESULT

  # Params # punk : IUnknown [In],ppidl : ITEMIDLIST** [In]
  fun SHGetIDListFromObject(punk : IUnknown, ppidl : ITEMIDLIST**) : HRESULT

  # Params # punk : IUnknown [In],riid : Guid* [In],ppv : Void** [In]
  fun SHGetItemFromObject(punk : IUnknown, riid : Guid*, ppv : Void**) : HRESULT

  # Params # pidl : ITEMIDLIST* [In],sigdnname : SIGDN [In],ppszname : LibC::LPWSTR* [In]
  fun SHGetNameFromIDList(pidl : ITEMIDLIST*, sigdnname : SIGDN, ppszname : LibC::LPWSTR*) : HRESULT

  # Params # pdtobj : IDataObject [In],dwflags : DATAOBJ_GET_ITEM_FLAGS [In],riid : Guid* [In],ppv : Void** [In]
  fun SHGetItemFromDataObject(pdtobj : IDataObject, dwflags : DATAOBJ_GET_ITEM_FLAGS, riid : Guid*, ppv : Void**) : HRESULT

  # Params # pidlparent : ITEMIDLIST* [In],psf : IShellFolder [In],cidl : UInt32 [In],ppidl : ITEMIDLIST** [In],ppsiitemarray : IShellItemArray* [In]
  fun SHCreateShellItemArray(pidlparent : ITEMIDLIST*, psf : IShellFolder, cidl : UInt32, ppidl : ITEMIDLIST**, ppsiitemarray : IShellItemArray*) : HRESULT

  # Params # pdo : IDataObject [In],riid : Guid* [In],ppv : Void** [In]
  fun SHCreateShellItemArrayFromDataObject(pdo : IDataObject, riid : Guid*, ppv : Void**) : HRESULT

  # Params # cidl : UInt32 [In],rgpidl : ITEMIDLIST** [In],ppsiitemarray : IShellItemArray* [In]
  fun SHCreateShellItemArrayFromIDLists(cidl : UInt32, rgpidl : ITEMIDLIST**, ppsiitemarray : IShellItemArray*) : HRESULT

  # Params # psi : IShellItem [In],riid : Guid* [In],ppv : Void** [In]
  fun SHCreateShellItemArrayFromShellItem(psi : IShellItem, riid : Guid*, ppv : Void**) : HRESULT

  # Params # riid : Guid* [In],ppv : Void** [In]
  fun SHCreateAssociationRegistration(riid : Guid*, ppv : Void**) : HRESULT

  # Params # riid : Guid* [In],ppv : Void** [In]
  fun SHCreateDefaultExtractIcon(riid : Guid*, ppv : Void**) : HRESULT

  # Params # appid : LibC::LPWSTR [In]
  fun SetCurrentProcessExplicitAppUserModelID(appid : LibC::LPWSTR) : HRESULT

  # Params # appid : LibC::LPWSTR* [In]
  fun GetCurrentProcessExplicitAppUserModelID(appid : LibC::LPWSTR*) : HRESULT

  # Params # psi : IShellItem [In],propkey : PROPERTYKEY* [In],ppropvar : PROPVARIANT* [In]
  fun SHGetTemporaryPropertyForItem(psi : IShellItem, propkey : PROPERTYKEY*, ppropvar : PROPVARIANT*) : HRESULT

  # Params # psi : IShellItem [In],propkey : PROPERTYKEY* [In],propvar : PROPVARIANT* [In]
  fun SHSetTemporaryPropertyForItem(psi : IShellItem, propkey : PROPERTYKEY*, propvar : PROPVARIANT*) : HRESULT

  # Params # psilibrary : IShellItem [In],hwndowner : LibC::HANDLE [In],psztitle : LibC::LPWSTR [In],pszinstruction : LibC::LPWSTR [In],lmdoptions : LIBRARYMANAGEDIALOGOPTIONS [In]
  fun SHShowManageLibraryUI(psilibrary : IShellItem, hwndowner : LibC::HANDLE, psztitle : LibC::LPWSTR, pszinstruction : LibC::LPWSTR, lmdoptions : LIBRARYMANAGEDIALOGOPTIONS) : HRESULT

  # Params # psilibrary : IShellItem [In]
  fun SHResolveLibrary(psilibrary : IShellItem) : HRESULT

  # Params # pszextra : LibC::LPWSTR [In],affilter : ASSOC_FILTER [In],ppenumhandler : IEnumAssocHandlers* [In]
  fun SHAssocEnumHandlers(pszextra : LibC::LPWSTR, affilter : ASSOC_FILTER, ppenumhandler : IEnumAssocHandlers*) : HRESULT

  # Params # protocol : LibC::LPWSTR [In],riid : Guid* [In],enumhandlers : Void** [In]
  fun SHAssocEnumHandlersForProtocolByApplication(protocol : LibC::LPWSTR, riid : Guid*, enumhandlers : Void**) : HRESULT

  # Params # param0 : UInt32* [In],param1 : UInt32 [In],param2 : HMONITOR* [In]
  fun HMONITOR_UserSize(param0 : UInt32*, param1 : UInt32, param2 : HMONITOR*) : UInt32

  # Params # param0 : UInt32* [In],param1 : UInt8* [In],param2 : HMONITOR* [In]
  fun HMONITOR_UserMarshal(param0 : UInt32*, param1 : UInt8*, param2 : HMONITOR*) : UInt8*

  # Params # param0 : UInt32* [In],param1 : UInt8* [In],param2 : HMONITOR* [In]
  fun HMONITOR_UserUnmarshal(param0 : UInt32*, param1 : UInt8*, param2 : HMONITOR*) : UInt8*

  # Params # param0 : UInt32* [In],param1 : HMONITOR* [In]
  fun HMONITOR_UserFree(param0 : UInt32*, param1 : HMONITOR*) : Void

  # Params # param0 : UInt32* [In],param1 : UInt32 [In],param2 : HMONITOR* [In]
  fun HMONITOR_UserSize64(param0 : UInt32*, param1 : UInt32, param2 : HMONITOR*) : UInt32

  # Params # param0 : UInt32* [In],param1 : UInt8* [In],param2 : HMONITOR* [In]
  fun HMONITOR_UserMarshal64(param0 : UInt32*, param1 : UInt8*, param2 : HMONITOR*) : UInt8*

  # Params # param0 : UInt32* [In],param1 : UInt8* [In],param2 : HMONITOR* [In]
  fun HMONITOR_UserUnmarshal64(param0 : UInt32*, param1 : UInt8*, param2 : HMONITOR*) : UInt8*

  # Params # param0 : UInt32* [In],param1 : HMONITOR* [In]
  fun HMONITOR_UserFree64(param0 : UInt32*, param1 : HMONITOR*) : Void

  # Params # psi : IShellItem [In],ppfileop : IFileOperation* [In]
  fun SHCreateDefaultPropertiesOp(psi : IShellItem, ppfileop : IFileOperation*) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],psi : IShellItem [In],dwfileopflags : UInt32 [In],pfops : IFileOperationProgressSink [In]
  fun SHSetDefaultProperties(hwnd : LibC::HANDLE, psi : IShellItem, dwfileopflags : UInt32, pfops : IFileOperationProgressSink) : HRESULT

  # Params # ppmalloc : IMalloc* [In]
  fun SHGetMalloc(ppmalloc : IMalloc*) : HRESULT

  # Params # cb : LibC::UINT_PTR [In]
  fun SHAlloc(cb : LibC::UINT_PTR) : Void*

  # Params # pv : Void* [In]
  fun SHFree(pv : Void*) : Void

  # Params # psziconpath : PSTR [In],iiconindex : Int32 [In]
  fun SHGetIconOverlayIndexA(psziconpath : PSTR, iiconindex : Int32) : Int32

  # Params # psziconpath : LibC::LPWSTR [In],iiconindex : Int32 [In]
  fun SHGetIconOverlayIndexW(psziconpath : LibC::LPWSTR, iiconindex : Int32) : Int32

  # Params # pidl : ITEMIDLIST* [In]
  fun ILClone(pidl : ITEMIDLIST*) : ITEMIDLIST*

  # Params # pidl : ITEMIDLIST* [In]
  fun ILCloneFirst(pidl : ITEMIDLIST*) : ITEMIDLIST*

  # Params # pidl1 : ITEMIDLIST* [In],pidl2 : ITEMIDLIST* [In]
  fun ILCombine(pidl1 : ITEMIDLIST*, pidl2 : ITEMIDLIST*) : ITEMIDLIST*

  # Params # pidl : ITEMIDLIST* [In]
  fun ILFree(pidl : ITEMIDLIST*) : Void

  # Params # pidl : ITEMIDLIST* [In]
  fun ILGetNext(pidl : ITEMIDLIST*) : ITEMIDLIST*

  # Params # pidl : ITEMIDLIST* [In]
  fun ILGetSize(pidl : ITEMIDLIST*) : UInt32

  # Params # pidlparent : ITEMIDLIST* [In],pidlchild : ITEMIDLIST* [In]
  fun ILFindChild(pidlparent : ITEMIDLIST*, pidlchild : ITEMIDLIST*) : ITEMIDLIST*

  # Params # pidl : ITEMIDLIST* [In]
  fun ILFindLastID(pidl : ITEMIDLIST*) : ITEMIDLIST*

  # Params # pidl : ITEMIDLIST* [In]
  fun ILRemoveLastID(pidl : ITEMIDLIST*) : LibC::BOOL

  # Params # pidl1 : ITEMIDLIST* [In],pidl2 : ITEMIDLIST* [In]
  fun ILIsEqual(pidl1 : ITEMIDLIST*, pidl2 : ITEMIDLIST*) : LibC::BOOL

  # Params # pidl1 : ITEMIDLIST* [In],pidl2 : ITEMIDLIST* [In],fimmediate : LibC::BOOL [In]
  fun ILIsParent(pidl1 : ITEMIDLIST*, pidl2 : ITEMIDLIST*, fimmediate : LibC::BOOL) : LibC::BOOL

  # Params # pstm : IStream [In],pidl : ITEMIDLIST* [In]
  fun ILSaveToStream(pstm : IStream, pidl : ITEMIDLIST*) : HRESULT

  # Params # pstm : IStream [In],pidl : ITEMIDLIST** [In]
  fun ILLoadFromStreamEx(pstm : IStream, pidl : ITEMIDLIST**) : HRESULT

  # Params # pszpath : PSTR [In]
  fun ILCreateFromPathA(pszpath : PSTR) : ITEMIDLIST*

  # Params # pszpath : LibC::LPWSTR [In]
  fun ILCreateFromPathW(pszpath : LibC::LPWSTR) : ITEMIDLIST*

  # Params # pszpath : LibC::LPWSTR [In],ppidl : ITEMIDLIST** [In],rgfinout : UInt32* [In]
  fun SHILCreateFromPath(pszpath : LibC::LPWSTR, ppidl : ITEMIDLIST**, rgfinout : UInt32*) : HRESULT

  # Params # pidl : ITEMIDLIST* [In],pmkid : SHITEMID* [In],fappend : LibC::BOOL [In]
  fun ILAppendID(pidl : ITEMIDLIST*, pmkid : SHITEMID*, fappend : LibC::BOOL) : ITEMIDLIST*

  # Params # pidl : ITEMIDLIST* [In],pszpath : Char* [In],cchpath : UInt32 [In],uopts : Int32 [In]
  fun SHGetPathFromIDListEx(pidl : ITEMIDLIST*, pszpath : Char*, cchpath : UInt32, uopts : Int32) : LibC::BOOL

  # Params # pidl : ITEMIDLIST* [In],pszpath : UInt8* [In]
  fun SHGetPathFromIDListA(pidl : ITEMIDLIST*, pszpath : UInt8*) : LibC::BOOL

  # Params # pidl : ITEMIDLIST* [In],pszpath : Char* [In]
  fun SHGetPathFromIDListW(pidl : ITEMIDLIST*, pszpath : Char*) : LibC::BOOL

  # Params # hwnd : LibC::HANDLE [In],pszpath : LibC::LPWSTR [In]
  fun SHCreateDirectory(hwnd : LibC::HANDLE, pszpath : LibC::LPWSTR) : Int32

  # Params # hwnd : LibC::HANDLE [In],pszpath : PSTR [In],psa : SECURITY_ATTRIBUTES* [In]
  fun SHCreateDirectoryExA(hwnd : LibC::HANDLE, pszpath : PSTR, psa : SECURITY_ATTRIBUTES*) : Int32

  # Params # hwnd : LibC::HANDLE [In],pszpath : LibC::LPWSTR [In],psa : SECURITY_ATTRIBUTES* [In]
  fun SHCreateDirectoryExW(hwnd : LibC::HANDLE, pszpath : LibC::LPWSTR, psa : SECURITY_ATTRIBUTES*) : Int32

  # Params # pidlfolder : ITEMIDLIST* [In],cidl : UInt32 [In],apidl : ITEMIDLIST** [In],dwflags : UInt32 [In]
  fun SHOpenFolderAndSelectItems(pidlfolder : ITEMIDLIST*, cidl : UInt32, apidl : ITEMIDLIST**, dwflags : UInt32) : HRESULT

  # Params # pidlparent : ITEMIDLIST* [In],psfparent : IShellFolder [In],pidl : ITEMIDLIST* [In],ppsi : IShellItem* [In]
  fun SHCreateShellItem(pidlparent : ITEMIDLIST*, psfparent : IShellFolder, pidl : ITEMIDLIST*, ppsi : IShellItem*) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],csidl : Int32 [In],ppidl : ITEMIDLIST** [In]
  fun SHGetSpecialFolderLocation(hwnd : LibC::HANDLE, csidl : Int32, ppidl : ITEMIDLIST**) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],csidl : Int32 [In],fcreate : LibC::BOOL [In]
  fun SHCloneSpecialIDList(hwnd : LibC::HANDLE, csidl : Int32, fcreate : LibC::BOOL) : ITEMIDLIST*

  # Params # hwnd : LibC::HANDLE [In],pszpath : UInt8* [In],csidl : Int32 [In],fcreate : LibC::BOOL [In]
  fun SHGetSpecialFolderPathA(hwnd : LibC::HANDLE, pszpath : UInt8*, csidl : Int32, fcreate : LibC::BOOL) : LibC::BOOL

  # Params # hwnd : LibC::HANDLE [In],pszpath : Char* [In],csidl : Int32 [In],fcreate : LibC::BOOL [In]
  fun SHGetSpecialFolderPathW(hwnd : LibC::HANDLE, pszpath : Char*, csidl : Int32, fcreate : LibC::BOOL) : LibC::BOOL

  # Params # 
  fun SHFlushSFCache : Void

  # Params # hwnd : LibC::HANDLE [In],csidl : Int32 [In],htoken : LibC::HANDLE [In],dwflags : UInt32 [In],pszpath : UInt8* [In]
  fun SHGetFolderPathA(hwnd : LibC::HANDLE, csidl : Int32, htoken : LibC::HANDLE, dwflags : UInt32, pszpath : UInt8*) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],csidl : Int32 [In],htoken : LibC::HANDLE [In],dwflags : UInt32 [In],pszpath : Char* [In]
  fun SHGetFolderPathW(hwnd : LibC::HANDLE, csidl : Int32, htoken : LibC::HANDLE, dwflags : UInt32, pszpath : Char*) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],csidl : Int32 [In],htoken : LibC::HANDLE [In],dwflags : UInt32 [In],ppidl : ITEMIDLIST** [In]
  fun SHGetFolderLocation(hwnd : LibC::HANDLE, csidl : Int32, htoken : LibC::HANDLE, dwflags : UInt32, ppidl : ITEMIDLIST**) : HRESULT

  # Params # csidl : Int32 [In],htoken : LibC::HANDLE [In],dwflags : UInt32 [In],pszpath : PSTR [In]
  fun SHSetFolderPathA(csidl : Int32, htoken : LibC::HANDLE, dwflags : UInt32, pszpath : PSTR) : HRESULT

  # Params # csidl : Int32 [In],htoken : LibC::HANDLE [In],dwflags : UInt32 [In],pszpath : LibC::LPWSTR [In]
  fun SHSetFolderPathW(csidl : Int32, htoken : LibC::HANDLE, dwflags : UInt32, pszpath : LibC::LPWSTR) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],csidl : Int32 [In],htoken : LibC::HANDLE [In],dwflags : UInt32 [In],pszsubdir : PSTR [In],pszpath : UInt8* [In]
  fun SHGetFolderPathAndSubDirA(hwnd : LibC::HANDLE, csidl : Int32, htoken : LibC::HANDLE, dwflags : UInt32, pszsubdir : PSTR, pszpath : UInt8*) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],csidl : Int32 [In],htoken : LibC::HANDLE [In],dwflags : UInt32 [In],pszsubdir : LibC::LPWSTR [In],pszpath : Char* [In]
  fun SHGetFolderPathAndSubDirW(hwnd : LibC::HANDLE, csidl : Int32, htoken : LibC::HANDLE, dwflags : UInt32, pszsubdir : LibC::LPWSTR, pszpath : Char*) : HRESULT

  # Params # rfid : Guid* [In],dwflags : UInt32 [In],htoken : LibC::HANDLE [In],ppidl : ITEMIDLIST** [In]
  fun SHGetKnownFolderIDList(rfid : Guid*, dwflags : UInt32, htoken : LibC::HANDLE, ppidl : ITEMIDLIST**) : HRESULT

  # Params # rfid : Guid* [In],dwflags : UInt32 [In],htoken : LibC::HANDLE [In],pszpath : LibC::LPWSTR [In]
  fun SHSetKnownFolderPath(rfid : Guid*, dwflags : UInt32, htoken : LibC::HANDLE, pszpath : LibC::LPWSTR) : HRESULT

  # Params # rfid : Guid* [In],dwflags : UInt32 [In],htoken : LibC::HANDLE [In],ppszpath : LibC::LPWSTR* [In]
  # Commented out because function is part of Lib C
  #fun SHGetKnownFolderPath(rfid : Guid*, dwflags : UInt32, htoken : LibC::HANDLE, ppszpath : LibC::LPWSTR*) : HRESULT

  # Params # rfid : Guid* [In],flags : KNOWN_FOLDER_FLAG [In],htoken : LibC::HANDLE [In],riid : Guid* [In],ppv : Void** [In]
  fun SHGetKnownFolderItem(rfid : Guid*, flags : KNOWN_FOLDER_FLAG, htoken : LibC::HANDLE, riid : Guid*, ppv : Void**) : HRESULT

  # Params # pfcs : SHFOLDERCUSTOMSETTINGS* [In],pszpath : LibC::LPWSTR [In],dwreadwrite : UInt32 [In]
  fun SHGetSetFolderCustomSettings(pfcs : SHFOLDERCUSTOMSETTINGS*, pszpath : LibC::LPWSTR, dwreadwrite : UInt32) : HRESULT

  # Params # lpbi : BROWSEINFOA* [In]
  fun SHBrowseForFolderA(lpbi : BROWSEINFOA*) : ITEMIDLIST*

  # Params # lpbi : BROWSEINFOW* [In]
  fun SHBrowseForFolderW(lpbi : BROWSEINFOW*) : ITEMIDLIST*

  # Params # rclsid : Guid* [In]
  fun SHLoadInProc(rclsid : Guid*) : HRESULT

  # Params # ppshf : IShellFolder* [In]
  fun SHGetDesktopFolder(ppshf : IShellFolder*) : HRESULT

  # Params # weventid : SHCNE_ID [In],uflags : SHCNF_FLAGS [In],dwitem1 : Void* [In],dwitem2 : Void* [In]
  fun SHChangeNotify(weventid : SHCNE_ID, uflags : SHCNF_FLAGS, dwitem1 : Void*, dwitem2 : Void*) : Void

  # Params # uflags : UInt32 [In],pv : Void* [In]
  fun SHAddToRecentDocs(uflags : UInt32, pv : Void*) : Void

  # Params # pidlextra : ITEMIDLIST* [In]
  fun SHHandleUpdateImage(pidlextra : ITEMIDLIST*) : Int32

  # Params # pszhashitem : PSTR [In],iindex : Int32 [In],uflags : UInt32 [In],iimageindex : Int32 [In]
  fun SHUpdateImageA(pszhashitem : PSTR, iindex : Int32, uflags : UInt32, iimageindex : Int32) : Void

  # Params # pszhashitem : LibC::LPWSTR [In],iindex : Int32 [In],uflags : UInt32 [In],iimageindex : Int32 [In]
  fun SHUpdateImageW(pszhashitem : LibC::LPWSTR, iindex : Int32, uflags : UInt32, iimageindex : Int32) : Void

  # Params # hwnd : LibC::HANDLE [In],fsources : SHCNRF_SOURCE [In],fevents : Int32 [In],wmsg : UInt32 [In],centries : Int32 [In],pshcne : SHChangeNotifyEntry* [In]
  fun SHChangeNotifyRegister(hwnd : LibC::HANDLE, fsources : SHCNRF_SOURCE, fevents : Int32, wmsg : UInt32, centries : Int32, pshcne : SHChangeNotifyEntry*) : UInt32

  # Params # ulid : UInt32 [In]
  fun SHChangeNotifyDeregister(ulid : UInt32) : LibC::BOOL

  # Params # hchange : LibC::HANDLE [In],dwprocid : UInt32 [In],pppidl : ITEMIDLIST*** [In],plevent : Int32* [In]
  fun SHChangeNotification_Lock(hchange : LibC::HANDLE, dwprocid : UInt32, pppidl : ITEMIDLIST***, plevent : Int32*) : ShFindChangeNotificationHandle

  # Params # hlock : LibC::HANDLE [In]
  fun SHChangeNotification_Unlock(hlock : LibC::HANDLE) : LibC::BOOL

  # Params # psf : IShellFolder [In],pidlsimple : ITEMIDLIST* [In],ppidlreal : ITEMIDLIST** [In]
  fun SHGetRealIDL(psf : IShellFolder, pidlsimple : ITEMIDLIST*, ppidlreal : ITEMIDLIST**) : HRESULT

  # Params # ppunk : IUnknown* [In]
  fun SHGetInstanceExplorer(ppunk : IUnknown*) : HRESULT

  # Params # psf : IShellFolder [In],pidl : ITEMIDLIST* [In],nformat : SHGDFIL_FORMAT [In],pv : Void* [In],cb : Int32 [In]
  fun SHGetDataFromIDListA(psf : IShellFolder, pidl : ITEMIDLIST*, nformat : SHGDFIL_FORMAT, pv : Void*, cb : Int32) : HRESULT

  # Params # psf : IShellFolder [In],pidl : ITEMIDLIST* [In],nformat : SHGDFIL_FORMAT [In],pv : Void* [In],cb : Int32 [In]
  fun SHGetDataFromIDListW(psf : IShellFolder, pidl : ITEMIDLIST*, nformat : SHGDFIL_FORMAT, pv : Void*, cb : Int32) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],pszprompt : LibC::LPWSTR [In],dwreturn : UInt32 [In]
  fun RestartDialog(hwnd : LibC::HANDLE, pszprompt : LibC::LPWSTR, dwreturn : UInt32) : Int32

  # Params # hwnd : LibC::HANDLE [In],pszprompt : LibC::LPWSTR [In],dwreturn : UInt32 [In],dwreasoncode : UInt32 [In]
  fun RestartDialogEx(hwnd : LibC::HANDLE, pszprompt : LibC::LPWSTR, dwreturn : UInt32, dwreasoncode : UInt32) : Int32

  # Params # pszclsid : LibC::LPWSTR [In],pclsid : Guid* [In],punkouter : IUnknown [In],riid : Guid* [In],ppv : Void** [In]
  fun SHCoCreateInstance(pszclsid : LibC::LPWSTR, pclsid : Guid*, punkouter : IUnknown, riid : Guid*, ppv : Void**) : HRESULT

  # Params # pidlfolder : ITEMIDLIST* [In],cidl : UInt32 [In],apidl : ITEMIDLIST** [In],pdtinner : IDataObject [In],riid : Guid* [In],ppv : Void** [In]
  fun SHCreateDataObject(pidlfolder : ITEMIDLIST*, cidl : UInt32, apidl : ITEMIDLIST**, pdtinner : IDataObject, riid : Guid*, ppv : Void**) : HRESULT

  # Params # pidlfolder : ITEMIDLIST* [In],cidl : UInt32 [In],apidl : ITEMIDLIST** [In],ppdtobj : IDataObject* [In]
  fun CIDLData_CreateFromIDArray(pidlfolder : ITEMIDLIST*, cidl : UInt32, apidl : ITEMIDLIST**, ppdtobj : IDataObject*) : HRESULT

  # Params # cfmt : UInt32 [In],afmt : FORMATETC* [In],ppenumformatetc : IEnumFORMATETC* [In]
  fun SHCreateStdEnumFmtEtc(cfmt : UInt32, afmt : FORMATETC*, ppenumformatetc : IEnumFORMATETC*) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],pdata : IDataObject [In],pdsrc : IDropSource [In],dweffect : UInt32 [In],pdweffect : UInt32* [In]
  fun SHDoDragDrop(hwnd : LibC::HANDLE, pdata : IDataObject, pdsrc : IDropSource, dweffect : UInt32, pdweffect : UInt32*) : HRESULT

  # Params # him : HIMAGELIST [In],pptoffset : POINT* [In]
  fun DAD_SetDragImage(him : HIMAGELIST, pptoffset : POINT*) : LibC::BOOL

  # Params # hwndtarget : LibC::HANDLE [In],ptstart : POINT [In]
  fun DAD_DragEnterEx(hwndtarget : LibC::HANDLE, ptstart : POINT) : LibC::BOOL

  # Params # hwndtarget : LibC::HANDLE [In],ptstart : POINT [In],pdtobject : IDataObject [In]
  fun DAD_DragEnterEx2(hwndtarget : LibC::HANDLE, ptstart : POINT, pdtobject : IDataObject) : LibC::BOOL

  # Params # fshow : LibC::BOOL [In]
  fun DAD_ShowDragImage(fshow : LibC::BOOL) : LibC::BOOL

  # Params # pt : POINT [In]
  fun DAD_DragMove(pt : POINT) : LibC::BOOL

  # Params # 
  fun DAD_DragLeave : LibC::BOOL

  # Params # hwnd : LibC::HANDLE [In],pad : AUTO_SCROLL_DATA* [In],pptnow : POINT* [In]
  fun DAD_AutoScroll(hwnd : LibC::HANDLE, pad : AUTO_SCROLL_DATA*, pptnow : POINT*) : LibC::BOOL

  # Params # pcs : CABINETSTATE* [In],clength : Int32 [In]
  fun ReadCabinetState(pcs : CABINETSTATE*, clength : Int32) : LibC::BOOL

  # Params # pcs : CABINETSTATE* [In]
  fun WriteCabinetState(pcs : CABINETSTATE*) : LibC::BOOL

  # Params # pszuniquename : Char* [In],cchmax : UInt32 [In],psztemplate : LibC::LPWSTR [In],pszlongplate : LibC::LPWSTR [In],pszdir : LibC::LPWSTR [In]
  fun PathMakeUniqueName(pszuniquename : Char*, cchmax : UInt32, psztemplate : LibC::LPWSTR, pszlongplate : LibC::LPWSTR, pszdir : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathIsExe(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszdir : LibC::LPWSTR [In],pszspec : LibC::LPWSTR [In]
  fun PathCleanupSpec(pszdir : LibC::LPWSTR, pszspec : LibC::LPWSTR) : PCS_RET

  # Params # pszpath : Char* [In],dirs : UInt16** [In],fflags : PRF_FLAGS [In]
  fun PathResolve(pszpath : Char*, dirs : UInt16**, fflags : PRF_FLAGS) : Int32

  # Params # hwnd : LibC::HANDLE [In],pszfilepath : Char* [In],cchfilepath : UInt32 [In],pszworkingdir : LibC::LPWSTR [In],pszdefext : LibC::LPWSTR [In],pszfilters : LibC::LPWSTR [In],psztitle : LibC::LPWSTR [In]
  fun GetFileNameFromBrowse(hwnd : LibC::HANDLE, pszfilepath : Char*, cchfilepath : UInt32, pszworkingdir : LibC::LPWSTR, pszdefext : LibC::LPWSTR, pszfilters : LibC::LPWSTR, psztitle : LibC::LPWSTR) : LibC::BOOL

  # Params # idrive : Int32 [In]
  fun DriveType(idrive : Int32) : Int32

  # Params # idrive : Int32 [In],foktohitnet : LibC::BOOL [In]
  fun RealDriveType(idrive : Int32, foktohitnet : LibC::BOOL) : Int32

  # Params # idrive : Int32 [In]
  fun IsNetDrive(idrive : Int32) : Int32

  # Params # hmdst : LibC::HANDLE [In],hmsrc : LibC::HANDLE [In],uinsert : UInt32 [In],uidadjust : UInt32 [In],uidadjustmax : UInt32 [In],uflags : MM_FLAGS [In]
  fun Shell_MergeMenus(hmdst : LibC::HANDLE, hmsrc : LibC::HANDLE, uinsert : UInt32, uidadjust : UInt32, uidadjustmax : UInt32, uflags : MM_FLAGS) : UInt32

  # Params # hwnd : LibC::HANDLE [In],shopobjecttype : SHOP_TYPE [In],pszobjectname : LibC::LPWSTR [In],pszpropertypage : LibC::LPWSTR [In]
  fun SHObjectProperties(hwnd : LibC::HANDLE, shopobjecttype : SHOP_TYPE, pszobjectname : LibC::LPWSTR, pszpropertypage : LibC::LPWSTR) : LibC::BOOL

  # Params # hwnd : LibC::HANDLE [In],drive : UInt32 [In],fmtid : SHFMT_ID [In],options : SHFMT_OPT [In]
  fun SHFormatDrive(hwnd : LibC::HANDLE, drive : UInt32, fmtid : SHFMT_ID, options : SHFMT_OPT) : UInt32

  # Params # hpsxa : HPSXA [In]
  fun SHDestroyPropSheetExtArray(hpsxa : HPSXA) : Void

  # Params # hpsxa : HPSXA [In],lpfnaddpage : LPFNSVADDPROPSHEETPAGE [In],lparam : LPARAM [In]
  fun SHAddFromPropSheetExtArray(hpsxa : HPSXA, lpfnaddpage : LPFNSVADDPROPSHEETPAGE, lparam : LPARAM) : UInt32

  # Params # hpsxa : HPSXA [In],upageid : UInt32 [In],lpfnreplacewith : LPFNSVADDPROPSHEETPAGE [In],lparam : LPARAM [In]
  fun SHReplaceFromPropSheetExtArray(hpsxa : HPSXA, upageid : UInt32, lpfnreplacewith : LPFNSVADDPROPSHEETPAGE, lparam : LPARAM) : UInt32

  # Params # hkey : HKEY [In],pszsubkey : LibC::LPWSTR [In],pszvalue : LibC::LPWSTR [In],grfmode : UInt32 [In]
  fun OpenRegStream(hkey : HKEY, pszsubkey : LibC::LPWSTR, pszvalue : LibC::LPWSTR, grfmode : UInt32) : IStream

  # Params # pidlfolder : ITEMIDLIST* [In],pidlsavefile : ITEMIDLIST* [In]
  fun SHFindFiles(pidlfolder : ITEMIDLIST*, pidlsavefile : ITEMIDLIST*) : LibC::BOOL

  # Params # pszlongpath : Char* [In]
  fun PathGetShortPath(pszlongpath : Char*) : Void

  # Params # pszuniquename : Char* [In],pszpath : LibC::LPWSTR [In],pszshort : LibC::LPWSTR [In],pszfilespec : LibC::LPWSTR [In]
  fun PathYetAnotherMakeUniqueName(pszuniquename : Char*, pszpath : LibC::LPWSTR, pszshort : LibC::LPWSTR, pszfilespec : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun Win32DeleteFile(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # rest : RESTRICTIONS [In]
  fun SHRestricted(rest : RESTRICTIONS) : UInt32

  # Params # pidl : ITEMIDLIST* [In]
  fun SignalFileOpen(pidl : ITEMIDLIST*) : LibC::BOOL

  # Params # psf : IShellFolder [In],pidl : ITEMIDLIST* [In],pkey : PROPERTYKEY* [In],pv : VARIANT* [In],pffoundpropkey : LibC::BOOL* [In]
  fun AssocGetDetailsOfPropKey(psf : IShellFolder, pidl : ITEMIDLIST*, pkey : PROPERTYKEY*, pv : VARIANT*, pffoundpropkey : LibC::BOOL*) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],pszremotename : LibC::LPWSTR [In],dwtype : UInt32 [In]
  fun SHStartNetConnectionDialogW(hwnd : LibC::HANDLE, pszremotename : LibC::LPWSTR, dwtype : UInt32) : HRESULT

  # Params # psziconfile : PSTR [In],iindex : Int32 [In],uflags : UInt32 [In],phiconlarge : HANDLE* [In],phiconsmall : HANDLE* [In],niconsize : UInt32 [In]
  fun SHDefExtractIconA(psziconfile : PSTR, iindex : Int32, uflags : UInt32, phiconlarge : HANDLE*, phiconsmall : HANDLE*, niconsize : UInt32) : HRESULT

  # Params # psziconfile : LibC::LPWSTR [In],iindex : Int32 [In],uflags : UInt32 [In],phiconlarge : HANDLE* [In],phiconsmall : HANDLE* [In],niconsize : UInt32 [In]
  fun SHDefExtractIconW(psziconfile : LibC::LPWSTR, iindex : Int32, uflags : UInt32, phiconlarge : HANDLE*, phiconsmall : HANDLE*, niconsize : UInt32) : HRESULT

  # Params # hwndparent : LibC::HANDLE [In],poainfo : OPENASINFO* [In]
  fun SHOpenWithDialog(hwndparent : LibC::HANDLE, poainfo : OPENASINFO*) : HRESULT

  # Params # phiml : HIMAGELIST* [In],phimlsmall : HIMAGELIST* [In]
  fun Shell_GetImageLists(phiml : HIMAGELIST*, phimlsmall : HIMAGELIST*) : LibC::BOOL

  # Params # pwsziconpath : LibC::LPWSTR [In],iiconindex : Int32 [In],uiconflags : UInt32 [In]
  fun Shell_GetCachedImageIndex(pwsziconpath : LibC::LPWSTR, iiconindex : Int32, uiconflags : UInt32) : Int32

  # Params # psziconpath : PSTR [In],iiconindex : Int32 [In],uiconflags : UInt32 [In]
  fun Shell_GetCachedImageIndexA(psziconpath : PSTR, iiconindex : Int32, uiconflags : UInt32) : Int32

  # Params # psziconpath : LibC::LPWSTR [In],iiconindex : Int32 [In],uiconflags : UInt32 [In]
  fun Shell_GetCachedImageIndexW(psziconpath : LibC::LPWSTR, iiconindex : Int32, uiconflags : UInt32) : Int32

  # Params # hwndowner : LibC::HANDLE [In],pszfile : LibC::LPWSTR [In],fconnect : VALIDATEUNC_OPTION [In]
  fun SHValidateUNC(hwndowner : LibC::HANDLE, pszfile : LibC::LPWSTR, fconnect : VALIDATEUNC_OPTION) : LibC::BOOL

  # Params # punk : IUnknown [In]
  fun SHSetInstanceExplorer(punk : IUnknown) : Void

  # Params # 
  fun IsUserAnAdmin : LibC::BOOL

  # Params # hwndmain : LibC::HANDLE [In],umsg : UInt32 [In],lparam : LPARAM [In]
  fun SHShellFolderView_Message(hwndmain : LibC::HANDLE, umsg : UInt32, lparam : LPARAM) : LRESULT

  # Params # pcsfv : SFV_CREATE* [In],ppsv : IShellView* [In]
  fun SHCreateShellFolderView(pcsfv : SFV_CREATE*, ppsv : IShellView*) : HRESULT

  # Params # pidlfolder : ITEMIDLIST* [In],hwnd : LibC::HANDLE [In],cidl : UInt32 [In],apidl : ITEMIDLIST** [In],psf : IShellFolder [In],pfn : LPFNDFMCALLBACK [In],nkeys : UInt32 [In],ahkeys : HKEY* [In],ppcm : IContextMenu* [In]
  fun CDefFolderMenu_Create2(pidlfolder : ITEMIDLIST*, hwnd : LibC::HANDLE, cidl : UInt32, apidl : ITEMIDLIST**, psf : IShellFolder, pfn : LPFNDFMCALLBACK, nkeys : UInt32, ahkeys : HKEY*, ppcm : IContextMenu*) : HRESULT

  # Params # pdcm : DEFCONTEXTMENU* [In],riid : Guid* [In],ppv : Void** [In]
  fun SHCreateDefaultContextMenu(pdcm : DEFCONTEXTMENU*, riid : Guid*, ppv : Void**) : HRESULT

  # Params # hmenu : LibC::HANDLE [In],hwndowner : LibC::HANDLE [In],idcmdfirst : UInt32 [In],idcmdlast : UInt32 [In]
  fun SHFind_InitMenuPopup(hmenu : LibC::HANDLE, hwndowner : LibC::HANDLE, idcmdfirst : UInt32, idcmdlast : UInt32) : IContextMenu

  # Params # pcsfv : CSFV* [In],ppsv : IShellView* [In]
  fun SHCreateShellFolderViewEx(pcsfv : CSFV*, ppsv : IShellView*) : HRESULT

  # Params # lpss : SHELLSTATEA* [In],dwmask : SSF_MASK [In],bset : LibC::BOOL [In]
  fun SHGetSetSettings(lpss : SHELLSTATEA*, dwmask : SSF_MASK, bset : LibC::BOOL) : Void

  # Params # psfs : SHELLFLAGSTATE* [In],dwmask : UInt32 [In]
  fun SHGetSettings(psfs : SHELLFLAGSTATE*, dwmask : UInt32) : Void

  # Params # pidl : ITEMIDLIST* [In],riid : Guid* [In],ppv : Void** [In],ppidllast : ITEMIDLIST** [In]
  fun SHBindToParent(pidl : ITEMIDLIST*, riid : Guid*, ppv : Void**, ppidllast : ITEMIDLIST**) : HRESULT

  # Params # psfroot : IShellFolder [In],pidl : ITEMIDLIST* [In],riid : Guid* [In],ppv : Void** [In],ppidllast : ITEMIDLIST** [In]
  fun SHBindToFolderIDListParent(psfroot : IShellFolder, pidl : ITEMIDLIST*, riid : Guid*, ppv : Void**, ppidllast : ITEMIDLIST**) : HRESULT

  # Params # psfroot : IShellFolder [In],pidl : ITEMIDLIST* [In],ppbc : IBindCtx [In],riid : Guid* [In],ppv : Void** [In],ppidllast : ITEMIDLIST** [In]
  fun SHBindToFolderIDListParentEx(psfroot : IShellFolder, pidl : ITEMIDLIST*, ppbc : IBindCtx, riid : Guid*, ppv : Void**, ppidllast : ITEMIDLIST**) : HRESULT

  # Params # psf : IShellFolder [In],pidl : ITEMIDLIST* [In],pbc : IBindCtx [In],riid : Guid* [In],ppv : Void** [In]
  fun SHBindToObject(psf : IShellFolder, pidl : ITEMIDLIST*, pbc : IBindCtx, riid : Guid*, ppv : Void**) : HRESULT

  # Params # pszname : LibC::LPWSTR [In],pbc : IBindCtx [In],ppidl : ITEMIDLIST** [In],sfgaoin : UInt32 [In],psfgaoout : UInt32* [In]
  fun SHParseDisplayName(pszname : LibC::LPWSTR, pbc : IBindCtx, ppidl : ITEMIDLIST**, sfgaoin : UInt32, psfgaoout : UInt32*) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],punkenablemodless : IUnknown [In],pszpath : PSTR [In],dwflags : UInt32 [In]
  fun SHPathPrepareForWriteA(hwnd : LibC::HANDLE, punkenablemodless : IUnknown, pszpath : PSTR, dwflags : UInt32) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],punkenablemodless : IUnknown [In],pszpath : LibC::LPWSTR [In],dwflags : UInt32 [In]
  fun SHPathPrepareForWriteW(hwnd : LibC::HANDLE, punkenablemodless : IUnknown, pszpath : LibC::LPWSTR, dwflags : UInt32) : HRESULT

  # Params # pszfile : LibC::LPWSTR [In],dwfileattributes : UInt32 [In],riid : Guid* [In],ppv : Void** [In]
  fun SHCreateFileExtractIconW(pszfile : LibC::LPWSTR, dwfileattributes : UInt32, riid : Guid*, ppv : Void**) : HRESULT

  # Params # hwndedit : LibC::HANDLE [In],psf : IShellFolder [In]
  fun SHLimitInputEdit(hwndedit : LibC::HANDLE, psf : IShellFolder) : HRESULT

  # Params # pdo : IDataObject [In],dwattributemask : UInt32 [In],pdwattributes : UInt32* [In],pcitems : UInt32* [In]
  fun SHGetAttributesFromDataObject(pdo : IDataObject, dwattributemask : UInt32, pdwattributes : UInt32*, pcitems : UInt32*) : HRESULT

  # Params # pshf : IShellFolder [In],pidl : ITEMIDLIST* [In],piindexsel : Int32* [In]
  fun SHMapPIDLToSystemImageListIndex(pshf : IShellFolder, pidl : ITEMIDLIST*, piindexsel : Int32*) : Int32

  # Params # psz : LibC::LPWSTR [In],pclsid : Guid* [In]
  fun SHCLSIDFromString(psz : LibC::LPWSTR, pclsid : Guid*) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],psziconpath : Char* [In],cchiconpath : UInt32 [In],piiconindex : Int32* [In]
  fun PickIconDlg(hwnd : LibC::HANDLE, psziconpath : Char*, cchiconpath : UInt32, piiconindex : Int32*) : Int32

  # Params # pstgparent : IStorage [In],pszfilespec : LibC::LPWSTR [In],grfmode : UInt32 [In],riid : Guid* [In],ppv : Void** [In]
  fun StgMakeUniqueName(pstgparent : IStorage, pszfilespec : LibC::LPWSTR, grfmode : UInt32, riid : Guid*, ppv : Void**) : HRESULT

  # Params # status : SCNRT_STATUS [In]
  fun SHChangeNotifyRegisterThread(status : SCNRT_STATUS) : Void

  # Params # psz : LibC::LPWSTR [In]
  fun PathQualify(psz : LibC::LPWSTR) : Void

  # Params # pszfile : PSTR [In],dwattr : UInt32 [In]
  fun PathIsSlowA(pszfile : PSTR, dwattr : UInt32) : LibC::BOOL

  # Params # pszfile : LibC::LPWSTR [In],dwattr : UInt32 [In]
  fun PathIsSlowW(pszfile : LibC::LPWSTR, dwattr : UInt32) : LibC::BOOL

  # Params # hkey : HKEY [In],pszsubkey : LibC::LPWSTR [In],max_iface : UInt32 [In]
  fun SHCreatePropSheetExtArray(hkey : HKEY, pszsubkey : LibC::LPWSTR, max_iface : UInt32) : HPSXA

  # Params # pszcaption : LibC::LPWSTR [In],ahkeys : HKEY* [In],ckeys : UInt32 [In],pclsiddefault : Guid* [In],pdtobj : IDataObject [In],psb : IShellBrowser [In],pstartpage : LibC::LPWSTR [In]
  fun SHOpenPropSheetW(pszcaption : LibC::LPWSTR, ahkeys : HKEY*, ckeys : UInt32, pclsiddefault : Guid*, pdtobj : IDataObject, psb : IShellBrowser, pstartpage : LibC::LPWSTR) : LibC::BOOL

  # Params # hwnd : LibC::HANDLE [In],pszdistunit : LibC::LPWSTR [In],dwflags : UInt32 [In],psdi : SOFTDISTINFO* [In]
  fun SoftwareUpdateMessageBox(hwnd : LibC::HANDLE, pszdistunit : LibC::LPWSTR, dwflags : UInt32, psdi : SOFTDISTINFO*) : UInt32

  # Params # pdtobj : IDataObject [In],dwflags : UInt32 [In]
  fun SHMultiFileProperties(pdtobj : IDataObject, dwflags : UInt32) : HRESULT

  # Params # ppmoniker : IMoniker* [In]
  fun SHCreateQueryCancelAutoPlayMoniker(ppmoniker : IMoniker*) : HRESULT

  # Params # pszfilename : LibC::LPWSTR [In],pfparseprivacypreferences : LibC::BOOL* [In],pfparsepersiterules : LibC::BOOL* [In]
  fun ImportPrivacySettings(pszfilename : LibC::LPWSTR, pfparseprivacypreferences : LibC::BOOL*, pfparsepersiterules : LibC::BOOL*) : LibC::BOOL

  # Params # devicetype : DISPLAY_DEVICE_TYPE [In]
  fun GetScaleFactorForDevice(devicetype : DISPLAY_DEVICE_TYPE) : DEVICE_SCALE_FACTOR

  # Params # displaydevice : DISPLAY_DEVICE_TYPE [In],hwndnotify : LibC::HANDLE [In],umsgnotify : UInt32 [In],pdwcookie : UInt32* [In]
  fun RegisterScaleChangeNotifications(displaydevice : DISPLAY_DEVICE_TYPE, hwndnotify : LibC::HANDLE, umsgnotify : UInt32, pdwcookie : UInt32*) : HRESULT

  # Params # displaydevice : DISPLAY_DEVICE_TYPE [In],dwcookie : UInt32 [In]
  fun RevokeScaleChangeNotifications(displaydevice : DISPLAY_DEVICE_TYPE, dwcookie : UInt32) : HRESULT

  # Params # hmon : HMONITOR [In],pscale : DEVICE_SCALE_FACTOR* [In]
  fun GetScaleFactorForMonitor(hmon : HMONITOR, pscale : DEVICE_SCALE_FACTOR*) : HRESULT

  # Params # hevent : LibC::HANDLE [In],pdwcookie : LibC::UINT_PTR* [In]
  fun RegisterScaleChangeEvent(hevent : LibC::HANDLE, pdwcookie : LibC::UINT_PTR*) : HRESULT

  # Params # dwcookie : LibC::UINT_PTR [In]
  fun UnregisterScaleChangeEvent(dwcookie : LibC::UINT_PTR) : HRESULT

  # Params # param0 : SHELL_UI_COMPONENT [In]
  fun GetDpiForShellUIComponent(param0 : SHELL_UI_COMPONENT) : UInt32

  # Params # lpcmdline : LibC::LPWSTR [In],pnumargs : Int32* [In]
  fun CommandLineToArgvW(lpcmdline : LibC::LPWSTR, pnumargs : Int32*) : LibC::LPWSTR*

  # Params # hdrop : HDROP [In],ifile : UInt32 [In],lpszfile : UInt8* [In],cch : UInt32 [In]
  fun DragQueryFileA(hdrop : HDROP, ifile : UInt32, lpszfile : UInt8*, cch : UInt32) : UInt32

  # Params # hdrop : HDROP [In],ifile : UInt32 [In],lpszfile : Char* [In],cch : UInt32 [In]
  fun DragQueryFileW(hdrop : HDROP, ifile : UInt32, lpszfile : Char*, cch : UInt32) : UInt32

  # Params # hdrop : HDROP [In],ppt : POINT* [In]
  fun DragQueryPoint(hdrop : HDROP, ppt : POINT*) : LibC::BOOL

  # Params # hdrop : HDROP [In]
  fun DragFinish(hdrop : HDROP) : Void

  # Params # hwnd : LibC::HANDLE [In],faccept : LibC::BOOL [In]
  fun DragAcceptFiles(hwnd : LibC::HANDLE, faccept : LibC::BOOL) : Void

  # Params # hwnd : LibC::HANDLE [In],lpoperation : PSTR [In],lpfile : PSTR [In],lpparameters : PSTR [In],lpdirectory : PSTR [In],nshowcmd : Int32 [In]
  fun ShellExecuteA(hwnd : LibC::HANDLE, lpoperation : PSTR, lpfile : PSTR, lpparameters : PSTR, lpdirectory : PSTR, nshowcmd : Int32) : HINSTANCE

  # Params # hwnd : LibC::HANDLE [In],lpoperation : LibC::LPWSTR [In],lpfile : LibC::LPWSTR [In],lpparameters : LibC::LPWSTR [In],lpdirectory : LibC::LPWSTR [In],nshowcmd : Int32 [In]
  fun ShellExecuteW(hwnd : LibC::HANDLE, lpoperation : LibC::LPWSTR, lpfile : LibC::LPWSTR, lpparameters : LibC::LPWSTR, lpdirectory : LibC::LPWSTR, nshowcmd : Int32) : HINSTANCE

  # Params # lpfile : PSTR [In],lpdirectory : PSTR [In],lpresult : UInt8* [In]
  fun FindExecutableA(lpfile : PSTR, lpdirectory : PSTR, lpresult : UInt8*) : HINSTANCE

  # Params # lpfile : LibC::LPWSTR [In],lpdirectory : LibC::LPWSTR [In],lpresult : Char* [In]
  fun FindExecutableW(lpfile : LibC::LPWSTR, lpdirectory : LibC::LPWSTR, lpresult : Char*) : HINSTANCE

  # Params # hwnd : LibC::HANDLE [In],szapp : PSTR [In],szotherstuff : PSTR [In],hicon : LibC::HANDLE [In]
  fun ShellAboutA(hwnd : LibC::HANDLE, szapp : PSTR, szotherstuff : PSTR, hicon : LibC::HANDLE) : Int32

  # Params # hwnd : LibC::HANDLE [In],szapp : LibC::LPWSTR [In],szotherstuff : LibC::LPWSTR [In],hicon : LibC::HANDLE [In]
  fun ShellAboutW(hwnd : LibC::HANDLE, szapp : LibC::LPWSTR, szotherstuff : LibC::LPWSTR, hicon : LibC::HANDLE) : Int32

  # Params # hinst : HINSTANCE [In],hicon : LibC::HANDLE [In]
  fun DuplicateIcon(hinst : HINSTANCE, hicon : LibC::HANDLE) : HANDLE

  # Params # hinst : HINSTANCE [In],psziconpath : UInt8* [In],piicon : UInt16* [In]
  fun ExtractAssociatedIconA(hinst : HINSTANCE, psziconpath : UInt8*, piicon : UInt16*) : HANDLE

  # Params # hinst : HINSTANCE [In],psziconpath : Char* [In],piicon : UInt16* [In]
  fun ExtractAssociatedIconW(hinst : HINSTANCE, psziconpath : Char*, piicon : UInt16*) : HANDLE

  # Params # hinst : HINSTANCE [In],psziconpath : UInt8* [In],piiconindex : UInt16* [In],piiconid : UInt16* [In]
  fun ExtractAssociatedIconExA(hinst : HINSTANCE, psziconpath : UInt8*, piiconindex : UInt16*, piiconid : UInt16*) : HANDLE

  # Params # hinst : HINSTANCE [In],psziconpath : Char* [In],piiconindex : UInt16* [In],piiconid : UInt16* [In]
  fun ExtractAssociatedIconExW(hinst : HINSTANCE, psziconpath : Char*, piiconindex : UInt16*, piiconid : UInt16*) : HANDLE

  # Params # hinst : HINSTANCE [In],pszexefilename : PSTR [In],niconindex : UInt32 [In]
  fun ExtractIconA(hinst : HINSTANCE, pszexefilename : PSTR, niconindex : UInt32) : HANDLE

  # Params # hinst : HINSTANCE [In],pszexefilename : LibC::LPWSTR [In],niconindex : UInt32 [In]
  fun ExtractIconW(hinst : HINSTANCE, pszexefilename : LibC::LPWSTR, niconindex : UInt32) : HANDLE

  # Params # dwmessage : UInt32 [In],pdata : APPBARDATA* [In]
  fun SHAppBarMessage(dwmessage : UInt32, pdata : APPBARDATA*) : LibC::UINT_PTR

  # Params # pszsrc : UInt8* [In],cchsrc : UInt32 [In]
  fun DoEnvironmentSubstA(pszsrc : UInt8*, cchsrc : UInt32) : UInt32

  # Params # pszsrc : Char* [In],cchsrc : UInt32 [In]
  fun DoEnvironmentSubstW(pszsrc : Char*, cchsrc : UInt32) : UInt32

  # Params # lpszfile : PSTR [In],niconindex : Int32 [In],phiconlarge : HANDLE* [In],phiconsmall : HANDLE* [In],nicons : UInt32 [In]
  fun ExtractIconExA(lpszfile : PSTR, niconindex : Int32, phiconlarge : HANDLE*, phiconsmall : HANDLE*, nicons : UInt32) : UInt32

  # Params # lpszfile : LibC::LPWSTR [In],niconindex : Int32 [In],phiconlarge : HANDLE* [In],phiconsmall : HANDLE* [In],nicons : UInt32 [In]
  fun ExtractIconExW(lpszfile : LibC::LPWSTR, niconindex : Int32, phiconlarge : HANDLE*, phiconsmall : HANDLE*, nicons : UInt32) : UInt32

  # Params # lpfileop : SHFILEOPSTRUCTA* [In]
  fun SHFileOperationA(lpfileop : SHFILEOPSTRUCTA*) : Int32

  # Params # lpfileop : SHFILEOPSTRUCTW* [In]
  fun SHFileOperationW(lpfileop : SHFILEOPSTRUCTW*) : Int32

  # Params # hnamemappings : LibC::HANDLE [In]
  fun SHFreeNameMappings(hnamemappings : LibC::HANDLE) : Void

  # Params # pexecinfo : SHELLEXECUTEINFOA* [In]
  fun ShellExecuteExA(pexecinfo : SHELLEXECUTEINFOA*) : LibC::BOOL

  # Params # pexecinfo : SHELLEXECUTEINFOW* [In]
  fun ShellExecuteExW(pexecinfo : SHELLEXECUTEINFOW*) : LibC::BOOL

  # Params # pscpi : SHCREATEPROCESSINFOW* [In]
  fun SHCreateProcessAsUserW(pscpi : SHCREATEPROCESSINFOW*) : LibC::BOOL

  # Params # pszcmdtemplate : LibC::LPWSTR [In],ppszapplication : LibC::LPWSTR* [In],ppszcommandline : LibC::LPWSTR* [In],ppszparameters : LibC::LPWSTR* [In]
  fun SHEvaluateSystemCommandTemplate(pszcmdtemplate : LibC::LPWSTR, ppszapplication : LibC::LPWSTR*, ppszcommandline : LibC::LPWSTR*, ppszparameters : LibC::LPWSTR*) : HRESULT

  # Params # rgclasses : ASSOCIATIONELEMENT* [In],cclasses : UInt32 [In],riid : Guid* [In],ppv : Void** [In]
  fun AssocCreateForClasses(rgclasses : ASSOCIATIONELEMENT*, cclasses : UInt32, riid : Guid*, ppv : Void**) : HRESULT

  # Params # pszrootpath : PSTR [In],pshqueryrbinfo : SHQUERYRBINFO* [In]
  fun SHQueryRecycleBinA(pszrootpath : PSTR, pshqueryrbinfo : SHQUERYRBINFO*) : HRESULT

  # Params # pszrootpath : LibC::LPWSTR [In],pshqueryrbinfo : SHQUERYRBINFO* [In]
  fun SHQueryRecycleBinW(pszrootpath : LibC::LPWSTR, pshqueryrbinfo : SHQUERYRBINFO*) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],pszrootpath : PSTR [In],dwflags : UInt32 [In]
  fun SHEmptyRecycleBinA(hwnd : LibC::HANDLE, pszrootpath : PSTR, dwflags : UInt32) : HRESULT

  # Params # hwnd : LibC::HANDLE [In],pszrootpath : LibC::LPWSTR [In],dwflags : UInt32 [In]
  fun SHEmptyRecycleBinW(hwnd : LibC::HANDLE, pszrootpath : LibC::LPWSTR, dwflags : UInt32) : HRESULT

  # Params # pquns : QUERY_USER_NOTIFICATION_STATE* [In]
  fun SHQueryUserNotificationState(pquns : QUERY_USER_NOTIFICATION_STATE*) : HRESULT

  # Params # dwmessage : NOTIFY_ICON_MESSAGE [In],lpdata : NOTIFYICONDATAA* [In]
  fun Shell_NotifyIconA(dwmessage : NOTIFY_ICON_MESSAGE, lpdata : NOTIFYICONDATAA*) : LibC::BOOL

  # Params # dwmessage : NOTIFY_ICON_MESSAGE [In],lpdata : NOTIFYICONDATAW* [In]
  fun Shell_NotifyIconW(dwmessage : NOTIFY_ICON_MESSAGE, lpdata : NOTIFYICONDATAW*) : LibC::BOOL

  # Params # identifier : NOTIFYICONIDENTIFIER* [In],iconlocation : RECT* [In]
  fun Shell_NotifyIconGetRect(identifier : NOTIFYICONIDENTIFIER*, iconlocation : RECT*) : HRESULT

  # Params # pszpath : PSTR [In],dwfileattributes : FILE_FLAGS_AND_ATTRIBUTES [In],psfi : SHFILEINFOA* [In],cbfileinfo : UInt32 [In],uflags : SHGFI_FLAGS [In]
  fun SHGetFileInfoA(pszpath : PSTR, dwfileattributes : FILE_FLAGS_AND_ATTRIBUTES, psfi : SHFILEINFOA*, cbfileinfo : UInt32, uflags : SHGFI_FLAGS) : LibC::UINT_PTR

  # Params # pszpath : LibC::LPWSTR [In],dwfileattributes : FILE_FLAGS_AND_ATTRIBUTES [In],psfi : SHFILEINFOW* [In],cbfileinfo : UInt32 [In],uflags : SHGFI_FLAGS [In]
  fun SHGetFileInfoW(pszpath : LibC::LPWSTR, dwfileattributes : FILE_FLAGS_AND_ATTRIBUTES, psfi : SHFILEINFOW*, cbfileinfo : UInt32, uflags : SHGFI_FLAGS) : LibC::UINT_PTR

  # Params # siid : SHSTOCKICONID [In],uflags : UInt32 [In],psii : SHSTOCKICONINFO* [In]
  fun SHGetStockIconInfo(siid : SHSTOCKICONID, uflags : UInt32, psii : SHSTOCKICONINFO*) : HRESULT

  # Params # pszdirectoryname : PSTR [In],pulfreebytesavailabletocaller : ULARGE_INTEGER* [In],pultotalnumberofbytes : ULARGE_INTEGER* [In],pultotalnumberoffreebytes : ULARGE_INTEGER* [In]
  fun SHGetDiskFreeSpaceExA(pszdirectoryname : PSTR, pulfreebytesavailabletocaller : ULARGE_INTEGER*, pultotalnumberofbytes : ULARGE_INTEGER*, pultotalnumberoffreebytes : ULARGE_INTEGER*) : LibC::BOOL

  # Params # pszdirectoryname : LibC::LPWSTR [In],pulfreebytesavailabletocaller : ULARGE_INTEGER* [In],pultotalnumberofbytes : ULARGE_INTEGER* [In],pultotalnumberoffreebytes : ULARGE_INTEGER* [In]
  fun SHGetDiskFreeSpaceExW(pszdirectoryname : LibC::LPWSTR, pulfreebytesavailabletocaller : ULARGE_INTEGER*, pultotalnumberofbytes : ULARGE_INTEGER*, pultotalnumberoffreebytes : ULARGE_INTEGER*) : LibC::BOOL

  # Params # pszlinkto : PSTR [In],pszdir : PSTR [In],pszname : UInt8* [In],pfmustcopy : LibC::BOOL* [In],uflags : UInt32 [In]
  fun SHGetNewLinkInfoA(pszlinkto : PSTR, pszdir : PSTR, pszname : UInt8*, pfmustcopy : LibC::BOOL*, uflags : UInt32) : LibC::BOOL

  # Params # pszlinkto : LibC::LPWSTR [In],pszdir : LibC::LPWSTR [In],pszname : Char* [In],pfmustcopy : LibC::BOOL* [In],uflags : UInt32 [In]
  fun SHGetNewLinkInfoW(pszlinkto : LibC::LPWSTR, pszdir : LibC::LPWSTR, pszname : Char*, pfmustcopy : LibC::BOOL*, uflags : UInt32) : LibC::BOOL

  # Params # hwnd : LibC::HANDLE [In],uaction : UInt32 [In],lpbuf1 : PSTR [In],lpbuf2 : PSTR [In],fmodal : LibC::BOOL [In]
  fun SHInvokePrinterCommandA(hwnd : LibC::HANDLE, uaction : UInt32, lpbuf1 : PSTR, lpbuf2 : PSTR, fmodal : LibC::BOOL) : LibC::BOOL

  # Params # hwnd : LibC::HANDLE [In],uaction : UInt32 [In],lpbuf1 : LibC::LPWSTR [In],lpbuf2 : LibC::LPWSTR [In],fmodal : LibC::BOOL [In]
  fun SHInvokePrinterCommandW(hwnd : LibC::HANDLE, uaction : UInt32, lpbuf1 : LibC::LPWSTR, lpbuf2 : LibC::LPWSTR, fmodal : LibC::BOOL) : LibC::BOOL

  # Params # 
  fun SHLoadNonloadedIconOverlayIdentifiers : HRESULT

  # Params # pwszpath : LibC::LPWSTR [In],pdwstatus : UInt32* [In]
  fun SHIsFileAvailableOffline(pwszpath : LibC::LPWSTR, pdwstatus : UInt32*) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In],pszresmodule : LibC::LPWSTR [In],idsres : Int32 [In]
  fun SHSetLocalizedName(pszpath : LibC::LPWSTR, pszresmodule : LibC::LPWSTR, idsres : Int32) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In]
  fun SHRemoveLocalizedName(pszpath : LibC::LPWSTR) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In],pszresmodule : Char* [In],cch : UInt32 [In],pidsres : Int32* [In]
  fun SHGetLocalizedName(pszpath : LibC::LPWSTR, pszresmodule : Char*, cch : UInt32, pidsres : Int32*) : HRESULT

  # Params # happinst : HINSTANCE [In],hwnd : LibC::HANDLE [In],lpctext : PSTR [In],lpctitle : PSTR [In],fustyle : UInt32 [In]
  fun ShellMessageBoxA(happinst : HINSTANCE, hwnd : LibC::HANDLE, lpctext : PSTR, lpctitle : PSTR, fustyle : UInt32) : Int32

  # Params # happinst : HINSTANCE [In],hwnd : LibC::HANDLE [In],lpctext : LibC::LPWSTR [In],lpctitle : LibC::LPWSTR [In],fustyle : UInt32 [In]
  fun ShellMessageBoxW(happinst : HINSTANCE, hwnd : LibC::HANDLE, lpctext : LibC::LPWSTR, lpctitle : LibC::LPWSTR, fustyle : UInt32) : Int32

  # Params # pszpath : PSTR [In]
  fun IsLFNDriveA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun IsLFNDriveW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # hkeyuser : HKEY [In],dwindex : UInt32 [In],pszmailaddress : Char* [In],cchmailaddress : Int32 [In]
  fun SHEnumerateUnreadMailAccountsW(hkeyuser : HKEY, dwindex : UInt32, pszmailaddress : Char*, cchmailaddress : Int32) : HRESULT

  # Params # hkeyuser : HKEY [In],pszmailaddress : LibC::LPWSTR [In],pdwcount : UInt32* [In],pfiletime : FILETIME* [In],pszshellexecutecommand : Char* [In],cchshellexecutecommand : Int32 [In]
  fun SHGetUnreadMailCountW(hkeyuser : HKEY, pszmailaddress : LibC::LPWSTR, pdwcount : UInt32*, pfiletime : FILETIME*, pszshellexecutecommand : Char*, cchshellexecutecommand : Int32) : HRESULT

  # Params # pszmailaddress : LibC::LPWSTR [In],dwcount : UInt32 [In],pszshellexecutecommand : LibC::LPWSTR [In]
  fun SHSetUnreadMailCountW(pszmailaddress : LibC::LPWSTR, dwcount : UInt32, pszshellexecutecommand : LibC::LPWSTR) : HRESULT

  # Params # htoken : LibC::HANDLE [In],ulrid : UInt32 [In]
  fun SHTestTokenMembership(htoken : LibC::HANDLE, ulrid : UInt32) : LibC::BOOL

  # Params # iimagelist : Int32 [In],riid : Guid* [In],ppvobj : Void** [In]
  fun SHGetImageList(iimagelist : Int32, riid : Guid*, ppvobj : Void**) : HRESULT

  # Params # 
  fun InitNetworkAddressControl : LibC::BOOL

  # Params # pszdrive : LibC::LPWSTR [In],pdwmediacontent : UInt32* [In]
  fun SHGetDriveMedia(pszdrive : LibC::LPWSTR, pdwmediacontent : UInt32*) : HRESULT

  # Params # pszstart : PSTR [In],wmatch : UInt16 [In]
  fun StrChrA(pszstart : PSTR, wmatch : UInt16) : PSTR

  # Params # pszstart : LibC::LPWSTR [In],wmatch : Char [In]
  fun StrChrW(pszstart : LibC::LPWSTR, wmatch : Char) : LibC::LPWSTR

  # Params # pszstart : PSTR [In],wmatch : UInt16 [In]
  fun StrChrIA(pszstart : PSTR, wmatch : UInt16) : PSTR

  # Params # pszstart : LibC::LPWSTR [In],wmatch : Char [In]
  fun StrChrIW(pszstart : LibC::LPWSTR, wmatch : Char) : LibC::LPWSTR

  # Params # pszstart : LibC::LPWSTR [In],wmatch : Char [In],cchmax : UInt32 [In]
  fun StrChrNW(pszstart : LibC::LPWSTR, wmatch : Char, cchmax : UInt32) : LibC::LPWSTR

  # Params # pszstart : LibC::LPWSTR [In],wmatch : Char [In],cchmax : UInt32 [In]
  fun StrChrNIW(pszstart : LibC::LPWSTR, wmatch : Char, cchmax : UInt32) : LibC::LPWSTR

  # Params # psz1 : PSTR [In],psz2 : PSTR [In],nchar : Int32 [In]
  fun StrCmpNA(psz1 : PSTR, psz2 : PSTR, nchar : Int32) : Int32

  # Params # psz1 : LibC::LPWSTR [In],psz2 : LibC::LPWSTR [In],nchar : Int32 [In]
  fun StrCmpNW(psz1 : LibC::LPWSTR, psz2 : LibC::LPWSTR, nchar : Int32) : Int32

  # Params # psz1 : PSTR [In],psz2 : PSTR [In],nchar : Int32 [In]
  fun StrCmpNIA(psz1 : PSTR, psz2 : PSTR, nchar : Int32) : Int32

  # Params # psz1 : LibC::LPWSTR [In],psz2 : LibC::LPWSTR [In],nchar : Int32 [In]
  fun StrCmpNIW(psz1 : LibC::LPWSTR, psz2 : LibC::LPWSTR, nchar : Int32) : Int32

  # Params # pszstr : PSTR [In],pszset : PSTR [In]
  fun StrCSpnA(pszstr : PSTR, pszset : PSTR) : Int32

  # Params # pszstr : LibC::LPWSTR [In],pszset : LibC::LPWSTR [In]
  fun StrCSpnW(pszstr : LibC::LPWSTR, pszset : LibC::LPWSTR) : Int32

  # Params # pszstr : PSTR [In],pszset : PSTR [In]
  fun StrCSpnIA(pszstr : PSTR, pszset : PSTR) : Int32

  # Params # pszstr : LibC::LPWSTR [In],pszset : LibC::LPWSTR [In]
  fun StrCSpnIW(pszstr : LibC::LPWSTR, pszset : LibC::LPWSTR) : Int32

  # Params # pszsrch : PSTR [In]
  fun StrDupA(pszsrch : PSTR) : PSTR

  # Params # pszsrch : LibC::LPWSTR [In]
  fun StrDupW(pszsrch : LibC::LPWSTR) : LibC::LPWSTR

  # Params # ull : UInt64 [In],flags : SFBS_FLAGS [In],pszbuf : Char* [In],cchbuf : UInt32 [In]
  fun StrFormatByteSizeEx(ull : UInt64, flags : SFBS_FLAGS, pszbuf : Char*, cchbuf : UInt32) : HRESULT

  # Params # dw : UInt32 [In],pszbuf : UInt8* [In],cchbuf : UInt32 [In]
  fun StrFormatByteSizeA(dw : UInt32, pszbuf : UInt8*, cchbuf : UInt32) : PSTR

  # Params # qdw : Int64 [In],pszbuf : UInt8* [In],cchbuf : UInt32 [In]
  fun StrFormatByteSize64A(qdw : Int64, pszbuf : UInt8*, cchbuf : UInt32) : PSTR

  # Params # qdw : Int64 [In],pszbuf : Char* [In],cchbuf : UInt32 [In]
  fun StrFormatByteSizeW(qdw : Int64, pszbuf : Char*, cchbuf : UInt32) : LibC::LPWSTR

  # Params # qdw : Int64 [In],pszbuf : Char* [In],cchbuf : UInt32 [In]
  fun StrFormatKBSizeW(qdw : Int64, pszbuf : Char*, cchbuf : UInt32) : LibC::LPWSTR

  # Params # qdw : Int64 [In],pszbuf : UInt8* [In],cchbuf : UInt32 [In]
  fun StrFormatKBSizeA(qdw : Int64, pszbuf : UInt8*, cchbuf : UInt32) : PSTR

  # Params # pszout : UInt8* [In],cchmax : UInt32 [In],dwtimems : UInt32 [In],digits : Int32 [In]
  fun StrFromTimeIntervalA(pszout : UInt8*, cchmax : UInt32, dwtimems : UInt32, digits : Int32) : Int32

  # Params # pszout : Char* [In],cchmax : UInt32 [In],dwtimems : UInt32 [In],digits : Int32 [In]
  fun StrFromTimeIntervalW(pszout : Char*, cchmax : UInt32, dwtimems : UInt32, digits : Int32) : Int32

  # Params # fcasesens : LibC::BOOL [In],pszstring1 : PSTR [In],pszstring2 : PSTR [In],nchar : Int32 [In]
  fun StrIsIntlEqualA(fcasesens : LibC::BOOL, pszstring1 : PSTR, pszstring2 : PSTR, nchar : Int32) : LibC::BOOL

  # Params # fcasesens : LibC::BOOL [In],pszstring1 : LibC::LPWSTR [In],pszstring2 : LibC::LPWSTR [In],nchar : Int32 [In]
  fun StrIsIntlEqualW(fcasesens : LibC::BOOL, pszstring1 : LibC::LPWSTR, pszstring2 : LibC::LPWSTR, nchar : Int32) : LibC::BOOL

  # Params # psz1 : UInt8* [In],psz2 : PSTR [In],cchmax : Int32 [In]
  fun StrNCatA(psz1 : UInt8*, psz2 : PSTR, cchmax : Int32) : PSTR

  # Params # psz1 : Char* [In],psz2 : LibC::LPWSTR [In],cchmax : Int32 [In]
  fun StrNCatW(psz1 : Char*, psz2 : LibC::LPWSTR, cchmax : Int32) : LibC::LPWSTR

  # Params # psz : PSTR [In],pszset : PSTR [In]
  fun StrPBrkA(psz : PSTR, pszset : PSTR) : PSTR

  # Params # psz : LibC::LPWSTR [In],pszset : LibC::LPWSTR [In]
  fun StrPBrkW(psz : LibC::LPWSTR, pszset : LibC::LPWSTR) : LibC::LPWSTR

  # Params # pszstart : PSTR [In],pszend : PSTR [In],wmatch : UInt16 [In]
  fun StrRChrA(pszstart : PSTR, pszend : PSTR, wmatch : UInt16) : PSTR

  # Params # pszstart : LibC::LPWSTR [In],pszend : LibC::LPWSTR [In],wmatch : Char [In]
  fun StrRChrW(pszstart : LibC::LPWSTR, pszend : LibC::LPWSTR, wmatch : Char) : LibC::LPWSTR

  # Params # pszstart : PSTR [In],pszend : PSTR [In],wmatch : UInt16 [In]
  fun StrRChrIA(pszstart : PSTR, pszend : PSTR, wmatch : UInt16) : PSTR

  # Params # pszstart : LibC::LPWSTR [In],pszend : LibC::LPWSTR [In],wmatch : Char [In]
  fun StrRChrIW(pszstart : LibC::LPWSTR, pszend : LibC::LPWSTR, wmatch : Char) : LibC::LPWSTR

  # Params # pszsource : PSTR [In],pszlast : PSTR [In],pszsrch : PSTR [In]
  fun StrRStrIA(pszsource : PSTR, pszlast : PSTR, pszsrch : PSTR) : PSTR

  # Params # pszsource : LibC::LPWSTR [In],pszlast : LibC::LPWSTR [In],pszsrch : LibC::LPWSTR [In]
  fun StrRStrIW(pszsource : LibC::LPWSTR, pszlast : LibC::LPWSTR, pszsrch : LibC::LPWSTR) : LibC::LPWSTR

  # Params # psz : PSTR [In],pszset : PSTR [In]
  fun StrSpnA(psz : PSTR, pszset : PSTR) : Int32

  # Params # psz : LibC::LPWSTR [In],pszset : LibC::LPWSTR [In]
  fun StrSpnW(psz : LibC::LPWSTR, pszset : LibC::LPWSTR) : Int32

  # Params # pszfirst : PSTR [In],pszsrch : PSTR [In]
  fun StrStrA(pszfirst : PSTR, pszsrch : PSTR) : PSTR

  # Params # pszfirst : LibC::LPWSTR [In],pszsrch : LibC::LPWSTR [In]
  fun StrStrW(pszfirst : LibC::LPWSTR, pszsrch : LibC::LPWSTR) : LibC::LPWSTR

  # Params # pszfirst : PSTR [In],pszsrch : PSTR [In]
  fun StrStrIA(pszfirst : PSTR, pszsrch : PSTR) : PSTR

  # Params # pszfirst : LibC::LPWSTR [In],pszsrch : LibC::LPWSTR [In]
  fun StrStrIW(pszfirst : LibC::LPWSTR, pszsrch : LibC::LPWSTR) : LibC::LPWSTR

  # Params # pszfirst : LibC::LPWSTR [In],pszsrch : LibC::LPWSTR [In],cchmax : UInt32 [In]
  fun StrStrNW(pszfirst : LibC::LPWSTR, pszsrch : LibC::LPWSTR, cchmax : UInt32) : LibC::LPWSTR

  # Params # pszfirst : LibC::LPWSTR [In],pszsrch : LibC::LPWSTR [In],cchmax : UInt32 [In]
  fun StrStrNIW(pszfirst : LibC::LPWSTR, pszsrch : LibC::LPWSTR, cchmax : UInt32) : LibC::LPWSTR

  # Params # pszsrc : PSTR [In]
  fun StrToIntA(pszsrc : PSTR) : Int32

  # Params # pszsrc : LibC::LPWSTR [In]
  fun StrToIntW(pszsrc : LibC::LPWSTR) : Int32

  # Params # pszstring : PSTR [In],dwflags : Int32 [In],piret : Int32* [In]
  fun StrToIntExA(pszstring : PSTR, dwflags : Int32, piret : Int32*) : LibC::BOOL

  # Params # pszstring : LibC::LPWSTR [In],dwflags : Int32 [In],piret : Int32* [In]
  fun StrToIntExW(pszstring : LibC::LPWSTR, dwflags : Int32, piret : Int32*) : LibC::BOOL

  # Params # pszstring : PSTR [In],dwflags : Int32 [In],pllret : Int64* [In]
  fun StrToInt64ExA(pszstring : PSTR, dwflags : Int32, pllret : Int64*) : LibC::BOOL

  # Params # pszstring : LibC::LPWSTR [In],dwflags : Int32 [In],pllret : Int64* [In]
  fun StrToInt64ExW(pszstring : LibC::LPWSTR, dwflags : Int32, pllret : Int64*) : LibC::BOOL

  # Params # psz : PSTR [In],psztrimchars : PSTR [In]
  fun StrTrimA(psz : PSTR, psztrimchars : PSTR) : LibC::BOOL

  # Params # psz : LibC::LPWSTR [In],psztrimchars : LibC::LPWSTR [In]
  fun StrTrimW(psz : LibC::LPWSTR, psztrimchars : LibC::LPWSTR) : LibC::BOOL

  # Params # psz1 : LibC::LPWSTR [In],psz2 : LibC::LPWSTR [In]
  fun StrCatW(psz1 : LibC::LPWSTR, psz2 : LibC::LPWSTR) : LibC::LPWSTR

  # Params # psz1 : LibC::LPWSTR [In],psz2 : LibC::LPWSTR [In]
  fun StrCmpW(psz1 : LibC::LPWSTR, psz2 : LibC::LPWSTR) : Int32

  # Params # psz1 : LibC::LPWSTR [In],psz2 : LibC::LPWSTR [In]
  fun StrCmpIW(psz1 : LibC::LPWSTR, psz2 : LibC::LPWSTR) : Int32

  # Params # psz1 : LibC::LPWSTR [In],psz2 : LibC::LPWSTR [In]
  fun StrCpyW(psz1 : LibC::LPWSTR, psz2 : LibC::LPWSTR) : LibC::LPWSTR

  # Params # pszdst : Char* [In],pszsrc : LibC::LPWSTR [In],cchmax : Int32 [In]
  fun StrCpyNW(pszdst : Char*, pszsrc : LibC::LPWSTR, cchmax : Int32) : LibC::LPWSTR

  # Params # pszdest : Char* [In],pszsrc : LibC::LPWSTR [In],cchdestbuffsize : Int32 [In]
  fun StrCatBuffW(pszdest : Char*, pszsrc : LibC::LPWSTR, cchdestbuffsize : Int32) : LibC::LPWSTR

  # Params # pszdest : UInt8* [In],pszsrc : PSTR [In],cchdestbuffsize : Int32 [In]
  fun StrCatBuffA(pszdest : UInt8*, pszsrc : PSTR, cchdestbuffsize : Int32) : PSTR

  # Params # w1 : UInt16 [In],w2 : UInt16 [In]
  fun ChrCmpIA(w1 : UInt16, w2 : UInt16) : LibC::BOOL

  # Params # w1 : Char [In],w2 : Char [In]
  fun ChrCmpIW(w1 : Char, w2 : Char) : LibC::BOOL

  # Params # pszdest : UInt8* [In],cchdest : Int32 [In],pszfmt : PSTR [In],arglist : Int8* [In]
  fun wvnsprintfA(pszdest : UInt8*, cchdest : Int32, pszfmt : PSTR, arglist : Int8*) : Int32

  # Params # pszdest : Char* [In],cchdest : Int32 [In],pszfmt : LibC::LPWSTR [In],arglist : Int8* [In]
  fun wvnsprintfW(pszdest : Char*, cchdest : Int32, pszfmt : LibC::LPWSTR, arglist : Int8*) : Int32

  # Params # pszdest : UInt8* [In],cchdest : Int32 [In],pszfmt : PSTR [In]
  fun wnsprintfA(pszdest : UInt8*, cchdest : Int32, pszfmt : PSTR) : Int32

  # Params # pszdest : Char* [In],cchdest : Int32 [In],pszfmt : LibC::LPWSTR [In]
  fun wnsprintfW(pszdest : Char*, cchdest : Int32, pszfmt : LibC::LPWSTR) : Int32

  # Params # pstr : STRRET* [In],pidl : ITEMIDLIST* [In],ppsz : PSTR* [In]
  fun StrRetToStrA(pstr : STRRET*, pidl : ITEMIDLIST*, ppsz : PSTR*) : HRESULT

  # Params # pstr : STRRET* [In],pidl : ITEMIDLIST* [In],ppsz : LibC::LPWSTR* [In]
  fun StrRetToStrW(pstr : STRRET*, pidl : ITEMIDLIST*, ppsz : LibC::LPWSTR*) : HRESULT

  # Params # pstr : STRRET* [In],pidl : ITEMIDLIST* [In],pszbuf : UInt8* [In],cchbuf : UInt32 [In]
  fun StrRetToBufA(pstr : STRRET*, pidl : ITEMIDLIST*, pszbuf : UInt8*, cchbuf : UInt32) : HRESULT

  # Params # pstr : STRRET* [In],pidl : ITEMIDLIST* [In],pszbuf : Char* [In],cchbuf : UInt32 [In]
  fun StrRetToBufW(pstr : STRRET*, pidl : ITEMIDLIST*, pszbuf : Char*, cchbuf : UInt32) : HRESULT

  # Params # psz : PSTR [In],ppwsz : LibC::LPWSTR* [In]
  fun SHStrDupA(psz : PSTR, ppwsz : LibC::LPWSTR*) : HRESULT

  # Params # psz : LibC::LPWSTR [In],ppwsz : LibC::LPWSTR* [In]
  fun SHStrDupW(psz : LibC::LPWSTR, ppwsz : LibC::LPWSTR*) : HRESULT

  # Params # psz1 : LibC::LPWSTR [In],psz2 : LibC::LPWSTR [In]
  fun StrCmpLogicalW(psz1 : LibC::LPWSTR, psz2 : LibC::LPWSTR) : Int32

  # Params # pszdst : Char* [In],cchdst : UInt32 [In],ichat : UInt32 [In],pszsrc : LibC::LPWSTR [In]
  fun StrCatChainW(pszdst : Char*, cchdst : UInt32, ichat : UInt32, pszsrc : LibC::LPWSTR) : UInt32

  # Params # pstr : STRRET* [In],pidl : ITEMIDLIST* [In],pbstr : UInt8** [In]
  fun StrRetToBSTR(pstr : STRRET*, pidl : ITEMIDLIST*, pbstr : UInt8**) : HRESULT

  # Params # pszsource : LibC::LPWSTR [In],pszoutbuf : Char* [In],cchoutbuf : UInt32 [In],ppvreserved : Void** [In]
  fun SHLoadIndirectString(pszsource : LibC::LPWSTR, pszoutbuf : Char*, cchoutbuf : UInt32, ppvreserved : Void**) : HRESULT

  # Params # wch : CHAR [In]
  fun IsCharSpaceA(wch : CHAR) : LibC::BOOL

  # Params # wch : Char [In]
  fun IsCharSpaceW(wch : Char) : LibC::BOOL

  # Params # pszstr1 : PSTR [In],pszstr2 : PSTR [In]
  fun StrCmpCA(pszstr1 : PSTR, pszstr2 : PSTR) : Int32

  # Params # pszstr1 : LibC::LPWSTR [In],pszstr2 : LibC::LPWSTR [In]
  fun StrCmpCW(pszstr1 : LibC::LPWSTR, pszstr2 : LibC::LPWSTR) : Int32

  # Params # pszstr1 : PSTR [In],pszstr2 : PSTR [In]
  fun StrCmpICA(pszstr1 : PSTR, pszstr2 : PSTR) : Int32

  # Params # pszstr1 : LibC::LPWSTR [In],pszstr2 : LibC::LPWSTR [In]
  fun StrCmpICW(pszstr1 : LibC::LPWSTR, pszstr2 : LibC::LPWSTR) : Int32

  # Params # pszstr1 : PSTR [In],pszstr2 : PSTR [In],nchar : Int32 [In]
  fun StrCmpNCA(pszstr1 : PSTR, pszstr2 : PSTR, nchar : Int32) : Int32

  # Params # pszstr1 : LibC::LPWSTR [In],pszstr2 : LibC::LPWSTR [In],nchar : Int32 [In]
  fun StrCmpNCW(pszstr1 : LibC::LPWSTR, pszstr2 : LibC::LPWSTR, nchar : Int32) : Int32

  # Params # pszstr1 : PSTR [In],pszstr2 : PSTR [In],nchar : Int32 [In]
  fun StrCmpNICA(pszstr1 : PSTR, pszstr2 : PSTR, nchar : Int32) : Int32

  # Params # pszstr1 : LibC::LPWSTR [In],pszstr2 : LibC::LPWSTR [In],nchar : Int32 [In]
  fun StrCmpNICW(pszstr1 : LibC::LPWSTR, pszstr2 : LibC::LPWSTR, nchar : Int32) : Int32

  # Params # fcasesens : LibC::BOOL [In],lpstring1 : UInt8* [In],lpstring2 : UInt8* [In],nchar : Int32 [In]
  fun IntlStrEqWorkerA(fcasesens : LibC::BOOL, lpstring1 : UInt8*, lpstring2 : UInt8*, nchar : Int32) : LibC::BOOL

  # Params # fcasesens : LibC::BOOL [In],lpstring1 : Char* [In],lpstring2 : Char* [In],nchar : Int32 [In]
  fun IntlStrEqWorkerW(fcasesens : LibC::BOOL, lpstring1 : Char*, lpstring2 : Char*, nchar : Int32) : LibC::BOOL

  # Params # pszpath : UInt8* [In]
  fun PathAddBackslashA(pszpath : UInt8*) : PSTR

  # Params # pszpath : Char* [In]
  fun PathAddBackslashW(pszpath : Char*) : LibC::LPWSTR

  # Params # pszpath : UInt8* [In],pszext : PSTR [In]
  fun PathAddExtensionA(pszpath : UInt8*, pszext : PSTR) : LibC::BOOL

  # Params # pszpath : Char* [In],pszext : LibC::LPWSTR [In]
  fun PathAddExtensionW(pszpath : Char*, pszext : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : UInt8* [In],pszmore : PSTR [In]
  fun PathAppendA(pszpath : UInt8*, pszmore : PSTR) : LibC::BOOL

  # Params # pszpath : Char* [In],pszmore : LibC::LPWSTR [In]
  fun PathAppendW(pszpath : Char*, pszmore : LibC::LPWSTR) : LibC::BOOL

  # Params # pszroot : UInt8* [In],idrive : Int32 [In]
  fun PathBuildRootA(pszroot : UInt8*, idrive : Int32) : PSTR

  # Params # pszroot : Char* [In],idrive : Int32 [In]
  fun PathBuildRootW(pszroot : Char*, idrive : Int32) : LibC::LPWSTR

  # Params # pszbuf : UInt8* [In],pszpath : PSTR [In]
  fun PathCanonicalizeA(pszbuf : UInt8*, pszpath : PSTR) : LibC::BOOL

  # Params # pszbuf : Char* [In],pszpath : LibC::LPWSTR [In]
  fun PathCanonicalizeW(pszbuf : Char*, pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszdest : UInt8* [In],pszdir : PSTR [In],pszfile : PSTR [In]
  fun PathCombineA(pszdest : UInt8*, pszdir : PSTR, pszfile : PSTR) : PSTR

  # Params # pszdest : Char* [In],pszdir : LibC::LPWSTR [In],pszfile : LibC::LPWSTR [In]
  fun PathCombineW(pszdest : Char*, pszdir : LibC::LPWSTR, pszfile : LibC::LPWSTR) : LibC::LPWSTR

  # Params # hdc : HDC [In],pszpath : UInt8* [In],dx : UInt32 [In]
  fun PathCompactPathA(hdc : HDC, pszpath : UInt8*, dx : UInt32) : LibC::BOOL

  # Params # hdc : HDC [In],pszpath : Char* [In],dx : UInt32 [In]
  fun PathCompactPathW(hdc : HDC, pszpath : Char*, dx : UInt32) : LibC::BOOL

  # Params # pszout : UInt8* [In],pszsrc : PSTR [In],cchmax : UInt32 [In],dwflags : UInt32 [In]
  fun PathCompactPathExA(pszout : UInt8*, pszsrc : PSTR, cchmax : UInt32, dwflags : UInt32) : LibC::BOOL

  # Params # pszout : Char* [In],pszsrc : LibC::LPWSTR [In],cchmax : UInt32 [In],dwflags : UInt32 [In]
  fun PathCompactPathExW(pszout : Char*, pszsrc : LibC::LPWSTR, cchmax : UInt32, dwflags : UInt32) : LibC::BOOL

  # Params # pszfile1 : PSTR [In],pszfile2 : PSTR [In],achpath : UInt8* [In]
  fun PathCommonPrefixA(pszfile1 : PSTR, pszfile2 : PSTR, achpath : UInt8*) : Int32

  # Params # pszfile1 : LibC::LPWSTR [In],pszfile2 : LibC::LPWSTR [In],achpath : Char* [In]
  fun PathCommonPrefixW(pszfile1 : LibC::LPWSTR, pszfile2 : LibC::LPWSTR, achpath : Char*) : Int32

  # Params # pszpath : PSTR [In]
  fun PathFileExistsA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathFileExistsW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathFindExtensionA(pszpath : PSTR) : PSTR

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathFindExtensionW(pszpath : LibC::LPWSTR) : LibC::LPWSTR

  # Params # pszpath : PSTR [In]
  fun PathFindFileNameA(pszpath : PSTR) : PSTR

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathFindFileNameW(pszpath : LibC::LPWSTR) : LibC::LPWSTR

  # Params # pszpath : PSTR [In]
  fun PathFindNextComponentA(pszpath : PSTR) : PSTR

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathFindNextComponentW(pszpath : LibC::LPWSTR) : LibC::LPWSTR

  # Params # pszpath : UInt8* [In],ppszotherdirs : Int8** [In]
  fun PathFindOnPathA(pszpath : UInt8*, ppszotherdirs : Int8**) : LibC::BOOL

  # Params # pszpath : Char* [In],ppszotherdirs : UInt16** [In]
  fun PathFindOnPathW(pszpath : Char*, ppszotherdirs : UInt16**) : LibC::BOOL

  # Params # pszpath : PSTR [In],apszsuffix : PSTR* [In],iarraysize : Int32 [In]
  fun PathFindSuffixArrayA(pszpath : PSTR, apszsuffix : PSTR*, iarraysize : Int32) : PSTR

  # Params # pszpath : LibC::LPWSTR [In],apszsuffix : LibC::LPWSTR* [In],iarraysize : Int32 [In]
  fun PathFindSuffixArrayW(pszpath : LibC::LPWSTR, apszsuffix : LibC::LPWSTR*, iarraysize : Int32) : LibC::LPWSTR

  # Params # pszpath : PSTR [In]
  fun PathGetArgsA(pszpath : PSTR) : PSTR

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathGetArgsW(pszpath : LibC::LPWSTR) : LibC::LPWSTR

  # Params # pszname : PSTR [In]
  fun PathIsLFNFileSpecA(pszname : PSTR) : LibC::BOOL

  # Params # pszname : LibC::LPWSTR [In]
  fun PathIsLFNFileSpecW(pszname : LibC::LPWSTR) : LibC::BOOL

  # Params # ch : UInt8 [In]
  fun PathGetCharTypeA(ch : UInt8) : UInt32

  # Params # ch : Char [In]
  fun PathGetCharTypeW(ch : Char) : UInt32

  # Params # pszpath : PSTR [In]
  fun PathGetDriveNumberA(pszpath : PSTR) : Int32

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathGetDriveNumberW(pszpath : LibC::LPWSTR) : Int32

  # Params # pszpath : PSTR [In]
  fun PathIsDirectoryA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathIsDirectoryW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathIsDirectoryEmptyA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathIsDirectoryEmptyW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathIsFileSpecA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathIsFileSpecW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszprefix : PSTR [In],pszpath : PSTR [In]
  fun PathIsPrefixA(pszprefix : PSTR, pszpath : PSTR) : LibC::BOOL

  # Params # pszprefix : LibC::LPWSTR [In],pszpath : LibC::LPWSTR [In]
  fun PathIsPrefixW(pszprefix : LibC::LPWSTR, pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathIsRelativeA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathIsRelativeW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathIsRootA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathIsRootW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath1 : PSTR [In],pszpath2 : PSTR [In]
  fun PathIsSameRootA(pszpath1 : PSTR, pszpath2 : PSTR) : LibC::BOOL

  # Params # pszpath1 : LibC::LPWSTR [In],pszpath2 : LibC::LPWSTR [In]
  fun PathIsSameRootW(pszpath1 : LibC::LPWSTR, pszpath2 : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathIsUNCA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathIsUNCW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathIsNetworkPathA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathIsNetworkPathW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathIsUNCServerA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathIsUNCServerW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathIsUNCServerShareA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathIsUNCServerShareW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In],pszcontenttype : PSTR [In]
  fun PathIsContentTypeA(pszpath : PSTR, pszcontenttype : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In],pszcontenttype : LibC::LPWSTR [In]
  fun PathIsContentTypeW(pszpath : LibC::LPWSTR, pszcontenttype : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathIsURLA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathIsURLW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathMakePrettyA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathMakePrettyW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszfile : PSTR [In],pszspec : PSTR [In]
  fun PathMatchSpecA(pszfile : PSTR, pszspec : PSTR) : LibC::BOOL

  # Params # pszfile : LibC::LPWSTR [In],pszspec : LibC::LPWSTR [In]
  fun PathMatchSpecW(pszfile : LibC::LPWSTR, pszspec : LibC::LPWSTR) : LibC::BOOL

  # Params # pszfile : PSTR [In],pszspec : PSTR [In],dwflags : UInt32 [In]
  fun PathMatchSpecExA(pszfile : PSTR, pszspec : PSTR, dwflags : UInt32) : HRESULT

  # Params # pszfile : LibC::LPWSTR [In],pszspec : LibC::LPWSTR [In],dwflags : UInt32 [In]
  fun PathMatchSpecExW(pszfile : LibC::LPWSTR, pszspec : LibC::LPWSTR, dwflags : UInt32) : HRESULT

  # Params # psziconfile : PSTR [In]
  fun PathParseIconLocationA(psziconfile : PSTR) : Int32

  # Params # psziconfile : LibC::LPWSTR [In]
  fun PathParseIconLocationW(psziconfile : LibC::LPWSTR) : Int32

  # Params # lpsz : UInt8* [In]
  fun PathQuoteSpacesA(lpsz : UInt8*) : LibC::BOOL

  # Params # lpsz : Char* [In]
  fun PathQuoteSpacesW(lpsz : Char*) : LibC::BOOL

  # Params # pszpath : UInt8* [In],pszfrom : PSTR [In],dwattrfrom : UInt32 [In],pszto : PSTR [In],dwattrto : UInt32 [In]
  fun PathRelativePathToA(pszpath : UInt8*, pszfrom : PSTR, dwattrfrom : UInt32, pszto : PSTR, dwattrto : UInt32) : LibC::BOOL

  # Params # pszpath : Char* [In],pszfrom : LibC::LPWSTR [In],dwattrfrom : UInt32 [In],pszto : LibC::LPWSTR [In],dwattrto : UInt32 [In]
  fun PathRelativePathToW(pszpath : Char*, pszfrom : LibC::LPWSTR, dwattrfrom : UInt32, pszto : LibC::LPWSTR, dwattrto : UInt32) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathRemoveArgsA(pszpath : PSTR) : Void

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathRemoveArgsW(pszpath : LibC::LPWSTR) : Void

  # Params # pszpath : PSTR [In]
  fun PathRemoveBackslashA(pszpath : PSTR) : PSTR

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathRemoveBackslashW(pszpath : LibC::LPWSTR) : LibC::LPWSTR

  # Params # pszpath : PSTR [In]
  fun PathRemoveBlanksA(pszpath : PSTR) : Void

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathRemoveBlanksW(pszpath : LibC::LPWSTR) : Void

  # Params # pszpath : PSTR [In]
  fun PathRemoveExtensionA(pszpath : PSTR) : Void

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathRemoveExtensionW(pszpath : LibC::LPWSTR) : Void

  # Params # pszpath : PSTR [In]
  fun PathRemoveFileSpecA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathRemoveFileSpecW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : UInt8* [In],pszext : PSTR [In]
  fun PathRenameExtensionA(pszpath : UInt8*, pszext : PSTR) : LibC::BOOL

  # Params # pszpath : Char* [In],pszext : LibC::LPWSTR [In]
  fun PathRenameExtensionW(pszpath : Char*, pszext : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In],pszbuf : UInt8* [In],cchbuf : UInt32 [In]
  fun PathSearchAndQualifyA(pszpath : PSTR, pszbuf : UInt8*, cchbuf : UInt32) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In],pszbuf : Char* [In],cchbuf : UInt32 [In]
  fun PathSearchAndQualifyW(pszpath : LibC::LPWSTR, pszbuf : Char*, cchbuf : UInt32) : LibC::BOOL

  # Params # hdlg : LibC::HANDLE [In],id : Int32 [In],pszpath : PSTR [In]
  fun PathSetDlgItemPathA(hdlg : LibC::HANDLE, id : Int32, pszpath : PSTR) : Void

  # Params # hdlg : LibC::HANDLE [In],id : Int32 [In],pszpath : LibC::LPWSTR [In]
  fun PathSetDlgItemPathW(hdlg : LibC::HANDLE, id : Int32, pszpath : LibC::LPWSTR) : Void

  # Params # pszpath : PSTR [In]
  fun PathSkipRootA(pszpath : PSTR) : PSTR

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathSkipRootW(pszpath : LibC::LPWSTR) : LibC::LPWSTR

  # Params # pszpath : PSTR [In]
  fun PathStripPathA(pszpath : PSTR) : Void

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathStripPathW(pszpath : LibC::LPWSTR) : Void

  # Params # pszpath : PSTR [In]
  fun PathStripToRootA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathStripToRootW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # lpsz : PSTR [In]
  fun PathUnquoteSpacesA(lpsz : PSTR) : LibC::BOOL

  # Params # lpsz : LibC::LPWSTR [In]
  fun PathUnquoteSpacesW(lpsz : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathMakeSystemFolderA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathMakeSystemFolderW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathUnmakeSystemFolderA(pszpath : PSTR) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathUnmakeSystemFolderW(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : PSTR [In],dwattrb : UInt32 [In]
  fun PathIsSystemFolderA(pszpath : PSTR, dwattrb : UInt32) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In],dwattrb : UInt32 [In]
  fun PathIsSystemFolderW(pszpath : LibC::LPWSTR, dwattrb : UInt32) : LibC::BOOL

  # Params # pszpath : PSTR [In]
  fun PathUndecorateA(pszpath : PSTR) : Void

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathUndecorateW(pszpath : LibC::LPWSTR) : Void

  # Params # pszpath : PSTR [In],pszbuf : UInt8* [In],cchbuf : UInt32 [In]
  fun PathUnExpandEnvStringsA(pszpath : PSTR, pszbuf : UInt8*, cchbuf : UInt32) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In],pszbuf : Char* [In],cchbuf : UInt32 [In]
  fun PathUnExpandEnvStringsW(pszpath : LibC::LPWSTR, pszbuf : Char*, cchbuf : UInt32) : LibC::BOOL

  # Params # psz1 : PSTR [In],psz2 : PSTR [In],fignoreslash : LibC::BOOL [In]
  fun UrlCompareA(psz1 : PSTR, psz2 : PSTR, fignoreslash : LibC::BOOL) : Int32

  # Params # psz1 : LibC::LPWSTR [In],psz2 : LibC::LPWSTR [In],fignoreslash : LibC::BOOL [In]
  fun UrlCompareW(psz1 : LibC::LPWSTR, psz2 : LibC::LPWSTR, fignoreslash : LibC::BOOL) : Int32

  # Params # pszbase : PSTR [In],pszrelative : PSTR [In],pszcombined : UInt8* [In],pcchcombined : UInt32* [In],dwflags : UInt32 [In]
  fun UrlCombineA(pszbase : PSTR, pszrelative : PSTR, pszcombined : UInt8*, pcchcombined : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszbase : LibC::LPWSTR [In],pszrelative : LibC::LPWSTR [In],pszcombined : Char* [In],pcchcombined : UInt32* [In],dwflags : UInt32 [In]
  fun UrlCombineW(pszbase : LibC::LPWSTR, pszrelative : LibC::LPWSTR, pszcombined : Char*, pcchcombined : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszurl : PSTR [In],pszcanonicalized : UInt8* [In],pcchcanonicalized : UInt32* [In],dwflags : UInt32 [In]
  fun UrlCanonicalizeA(pszurl : PSTR, pszcanonicalized : UInt8*, pcchcanonicalized : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszurl : LibC::LPWSTR [In],pszcanonicalized : Char* [In],pcchcanonicalized : UInt32* [In],dwflags : UInt32 [In]
  fun UrlCanonicalizeW(pszurl : LibC::LPWSTR, pszcanonicalized : Char*, pcchcanonicalized : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszurl : PSTR [In]
  fun UrlIsOpaqueA(pszurl : PSTR) : LibC::BOOL

  # Params # pszurl : LibC::LPWSTR [In]
  fun UrlIsOpaqueW(pszurl : LibC::LPWSTR) : LibC::BOOL

  # Params # pszurl : PSTR [In]
  fun UrlIsNoHistoryA(pszurl : PSTR) : LibC::BOOL

  # Params # pszurl : LibC::LPWSTR [In]
  fun UrlIsNoHistoryW(pszurl : LibC::LPWSTR) : LibC::BOOL

  # Params # pszurl : PSTR [In],urlis : URLIS [In]
  fun UrlIsA(pszurl : PSTR, urlis : URLIS) : LibC::BOOL

  # Params # pszurl : LibC::LPWSTR [In],urlis : URLIS [In]
  fun UrlIsW(pszurl : LibC::LPWSTR, urlis : URLIS) : LibC::BOOL

  # Params # pszurl : PSTR [In]
  fun UrlGetLocationA(pszurl : PSTR) : PSTR

  # Params # pszurl : LibC::LPWSTR [In]
  fun UrlGetLocationW(pszurl : LibC::LPWSTR) : LibC::LPWSTR

  # Params # pszurl : PSTR [In],pszunescaped : UInt8* [In],pcchunescaped : UInt32* [In],dwflags : UInt32 [In]
  fun UrlUnescapeA(pszurl : PSTR, pszunescaped : UInt8*, pcchunescaped : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszurl : LibC::LPWSTR [In],pszunescaped : Char* [In],pcchunescaped : UInt32* [In],dwflags : UInt32 [In]
  fun UrlUnescapeW(pszurl : LibC::LPWSTR, pszunescaped : Char*, pcchunescaped : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszurl : PSTR [In],pszescaped : UInt8* [In],pcchescaped : UInt32* [In],dwflags : UInt32 [In]
  fun UrlEscapeA(pszurl : PSTR, pszescaped : UInt8*, pcchescaped : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszurl : LibC::LPWSTR [In],pszescaped : Char* [In],pcchescaped : UInt32* [In],dwflags : UInt32 [In]
  fun UrlEscapeW(pszurl : LibC::LPWSTR, pszescaped : Char*, pcchescaped : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszpath : PSTR [In],pszurl : UInt8* [In],pcchurl : UInt32* [In],dwflags : UInt32 [In]
  fun UrlCreateFromPathA(pszpath : PSTR, pszurl : UInt8*, pcchurl : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In],pszurl : Char* [In],pcchurl : UInt32* [In],dwflags : UInt32 [In]
  fun UrlCreateFromPathW(pszpath : LibC::LPWSTR, pszurl : Char*, pcchurl : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszurl : PSTR [In],pszpath : UInt8* [In],pcchpath : UInt32* [In],dwflags : UInt32 [In]
  fun PathCreateFromUrlA(pszurl : PSTR, pszpath : UInt8*, pcchpath : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszurl : LibC::LPWSTR [In],pszpath : Char* [In],pcchpath : UInt32* [In],dwflags : UInt32 [In]
  fun PathCreateFromUrlW(pszurl : LibC::LPWSTR, pszpath : Char*, pcchpath : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszin : LibC::LPWSTR [In],ppszout : LibC::LPWSTR* [In],dwflags : UInt32 [In]
  fun PathCreateFromUrlAlloc(pszin : LibC::LPWSTR, ppszout : LibC::LPWSTR*, dwflags : UInt32) : HRESULT

  # Params # pszurl : PSTR [In],pbhash : UInt8* [In],cbhash : UInt32 [In]
  fun UrlHashA(pszurl : PSTR, pbhash : UInt8*, cbhash : UInt32) : HRESULT

  # Params # pszurl : LibC::LPWSTR [In],pbhash : UInt8* [In],cbhash : UInt32 [In]
  fun UrlHashW(pszurl : LibC::LPWSTR, pbhash : UInt8*, cbhash : UInt32) : HRESULT

  # Params # pszin : LibC::LPWSTR [In],pszout : Char* [In],pcchout : UInt32* [In],dwpart : UInt32 [In],dwflags : UInt32 [In]
  fun UrlGetPartW(pszin : LibC::LPWSTR, pszout : Char*, pcchout : UInt32*, dwpart : UInt32, dwflags : UInt32) : HRESULT

  # Params # pszin : PSTR [In],pszout : UInt8* [In],pcchout : UInt32* [In],dwpart : UInt32 [In],dwflags : UInt32 [In]
  fun UrlGetPartA(pszin : PSTR, pszout : UInt8*, pcchout : UInt32*, dwpart : UInt32, dwflags : UInt32) : HRESULT

  # Params # pszin : PSTR [In],pszout : UInt8* [In],pcchout : UInt32* [In],dwflags : UInt32 [In]
  fun UrlApplySchemeA(pszin : PSTR, pszout : UInt8*, pcchout : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pszin : LibC::LPWSTR [In],pszout : Char* [In],pcchout : UInt32* [In],dwflags : UInt32 [In]
  fun UrlApplySchemeW(pszin : LibC::LPWSTR, pszout : Char*, pcchout : UInt32*, dwflags : UInt32) : HRESULT

  # Params # pbdata : UInt8* [In],cbdata : UInt32 [In],pbhash : UInt8* [In],cbhash : UInt32 [In]
  fun HashData(pbdata : UInt8*, cbdata : UInt32, pbhash : UInt8*, cbhash : UInt32) : HRESULT

  # Params # pcszurl : LibC::LPWSTR [In],psztranslatedurl : Char* [In],cchmax : UInt32 [In]
  fun UrlFixupW(pcszurl : LibC::LPWSTR, psztranslatedurl : Char*, cchmax : UInt32) : HRESULT

  # Params # pcszurl : PSTR [In],ppu : PARSEDURLA* [In]
  fun ParseURLA(pcszurl : PSTR, ppu : PARSEDURLA*) : HRESULT

  # Params # pcszurl : LibC::LPWSTR [In],ppu : PARSEDURLW* [In]
  fun ParseURLW(pcszurl : LibC::LPWSTR, ppu : PARSEDURLW*) : HRESULT

  # Params # hkey : HKEY [In],pszsubkey : PSTR [In]
  fun SHDeleteEmptyKeyA(hkey : HKEY, pszsubkey : PSTR) : LSTATUS

  # Params # hkey : HKEY [In],pszsubkey : LibC::LPWSTR [In]
  fun SHDeleteEmptyKeyW(hkey : HKEY, pszsubkey : LibC::LPWSTR) : LSTATUS

  # Params # hkey : HKEY [In],pszsubkey : PSTR [In]
  fun SHDeleteKeyA(hkey : HKEY, pszsubkey : PSTR) : LSTATUS

  # Params # hkey : HKEY [In],pszsubkey : LibC::LPWSTR [In]
  fun SHDeleteKeyW(hkey : HKEY, pszsubkey : LibC::LPWSTR) : LSTATUS

  # Params # hkey : HKEY [In]
  fun SHRegDuplicateHKey(hkey : HKEY) : HKEY

  # Params # hkey : HKEY [In],pszsubkey : PSTR [In],pszvalue : PSTR [In]
  fun SHDeleteValueA(hkey : HKEY, pszsubkey : PSTR, pszvalue : PSTR) : LSTATUS

  # Params # hkey : HKEY [In],pszsubkey : LibC::LPWSTR [In],pszvalue : LibC::LPWSTR [In]
  fun SHDeleteValueW(hkey : HKEY, pszsubkey : LibC::LPWSTR, pszvalue : LibC::LPWSTR) : LSTATUS

  # Params # hkey : HKEY [In],pszsubkey : PSTR [In],pszvalue : PSTR [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In]
  fun SHGetValueA(hkey : HKEY, pszsubkey : PSTR, pszvalue : PSTR, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*) : LSTATUS

  # Params # hkey : HKEY [In],pszsubkey : LibC::LPWSTR [In],pszvalue : LibC::LPWSTR [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In]
  fun SHGetValueW(hkey : HKEY, pszsubkey : LibC::LPWSTR, pszvalue : LibC::LPWSTR, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*) : LSTATUS

  # Params # hkey : HKEY [In],pszsubkey : PSTR [In],pszvalue : PSTR [In],dwtype : UInt32 [In],pvdata : Void* [In],cbdata : UInt32 [In]
  fun SHSetValueA(hkey : HKEY, pszsubkey : PSTR, pszvalue : PSTR, dwtype : UInt32, pvdata : Void*, cbdata : UInt32) : LSTATUS

  # Params # hkey : HKEY [In],pszsubkey : LibC::LPWSTR [In],pszvalue : LibC::LPWSTR [In],dwtype : UInt32 [In],pvdata : Void* [In],cbdata : UInt32 [In]
  fun SHSetValueW(hkey : HKEY, pszsubkey : LibC::LPWSTR, pszvalue : LibC::LPWSTR, dwtype : UInt32, pvdata : Void*, cbdata : UInt32) : LSTATUS

  # Params # hkey : HKEY [In],pszsubkey : PSTR [In],pszvalue : PSTR [In],srrfflags : Int32 [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In]
  fun SHRegGetValueA(hkey : HKEY, pszsubkey : PSTR, pszvalue : PSTR, srrfflags : Int32, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*) : LSTATUS

  # Params # hkey : HKEY [In],pszsubkey : LibC::LPWSTR [In],pszvalue : LibC::LPWSTR [In],srrfflags : Int32 [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In]
  fun SHRegGetValueW(hkey : HKEY, pszsubkey : LibC::LPWSTR, pszvalue : LibC::LPWSTR, srrfflags : Int32, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*) : LSTATUS

  # Params # pwszkey : LibC::LPWSTR [In],pwszvalue : LibC::LPWSTR [In],srrfflags : Int32 [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In]
  fun SHRegGetValueFromHKCUHKLM(pwszkey : LibC::LPWSTR, pwszvalue : LibC::LPWSTR, srrfflags : Int32, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*) : LSTATUS

  # Params # hkey : HKEY [In],pszvalue : PSTR [In],pdwreserved : UInt32* [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In]
  fun SHQueryValueExA(hkey : HKEY, pszvalue : PSTR, pdwreserved : UInt32*, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*) : LSTATUS

  # Params # hkey : HKEY [In],pszvalue : LibC::LPWSTR [In],pdwreserved : UInt32* [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In]
  fun SHQueryValueExW(hkey : HKEY, pszvalue : LibC::LPWSTR, pdwreserved : UInt32*, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*) : LSTATUS

  # Params # hkey : HKEY [In],dwindex : UInt32 [In],pszname : UInt8* [In],pcchname : UInt32* [In]
  fun SHEnumKeyExA(hkey : HKEY, dwindex : UInt32, pszname : UInt8*, pcchname : UInt32*) : LSTATUS

  # Params # hkey : HKEY [In],dwindex : UInt32 [In],pszname : Char* [In],pcchname : UInt32* [In]
  fun SHEnumKeyExW(hkey : HKEY, dwindex : UInt32, pszname : Char*, pcchname : UInt32*) : LSTATUS

  # Params # hkey : HKEY [In],dwindex : UInt32 [In],pszvaluename : UInt8* [In],pcchvaluename : UInt32* [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In]
  fun SHEnumValueA(hkey : HKEY, dwindex : UInt32, pszvaluename : UInt8*, pcchvaluename : UInt32*, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*) : LSTATUS

  # Params # hkey : HKEY [In],dwindex : UInt32 [In],pszvaluename : Char* [In],pcchvaluename : UInt32* [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In]
  fun SHEnumValueW(hkey : HKEY, dwindex : UInt32, pszvaluename : Char*, pcchvaluename : UInt32*, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*) : LSTATUS

  # Params # hkey : HKEY [In],pcsubkeys : UInt32* [In],pcchmaxsubkeylen : UInt32* [In],pcvalues : UInt32* [In],pcchmaxvaluenamelen : UInt32* [In]
  fun SHQueryInfoKeyA(hkey : HKEY, pcsubkeys : UInt32*, pcchmaxsubkeylen : UInt32*, pcvalues : UInt32*, pcchmaxvaluenamelen : UInt32*) : LSTATUS

  # Params # hkey : HKEY [In],pcsubkeys : UInt32* [In],pcchmaxsubkeylen : UInt32* [In],pcvalues : UInt32* [In],pcchmaxvaluenamelen : UInt32* [In]
  fun SHQueryInfoKeyW(hkey : HKEY, pcsubkeys : UInt32*, pcchmaxsubkeylen : UInt32*, pcvalues : UInt32*, pcchmaxvaluenamelen : UInt32*) : LSTATUS

  # Params # hkeysrc : HKEY [In],pszsrcsubkey : PSTR [In],hkeydest : HKEY [In],freserved : UInt32 [In]
  fun SHCopyKeyA(hkeysrc : HKEY, pszsrcsubkey : PSTR, hkeydest : HKEY, freserved : UInt32) : LSTATUS

  # Params # hkeysrc : HKEY [In],pszsrcsubkey : LibC::LPWSTR [In],hkeydest : HKEY [In],freserved : UInt32 [In]
  fun SHCopyKeyW(hkeysrc : HKEY, pszsrcsubkey : LibC::LPWSTR, hkeydest : HKEY, freserved : UInt32) : LSTATUS

  # Params # hkey : HKEY [In],pcszsubkey : PSTR [In],pcszvalue : PSTR [In],pszpath : UInt8* [In],dwflags : UInt32 [In]
  fun SHRegGetPathA(hkey : HKEY, pcszsubkey : PSTR, pcszvalue : PSTR, pszpath : UInt8*, dwflags : UInt32) : LSTATUS

  # Params # hkey : HKEY [In],pcszsubkey : LibC::LPWSTR [In],pcszvalue : LibC::LPWSTR [In],pszpath : Char* [In],dwflags : UInt32 [In]
  fun SHRegGetPathW(hkey : HKEY, pcszsubkey : LibC::LPWSTR, pcszvalue : LibC::LPWSTR, pszpath : Char*, dwflags : UInt32) : LSTATUS

  # Params # hkey : HKEY [In],pcszsubkey : PSTR [In],pcszvalue : PSTR [In],pcszpath : PSTR [In],dwflags : UInt32 [In]
  fun SHRegSetPathA(hkey : HKEY, pcszsubkey : PSTR, pcszvalue : PSTR, pcszpath : PSTR, dwflags : UInt32) : LSTATUS

  # Params # hkey : HKEY [In],pcszsubkey : LibC::LPWSTR [In],pcszvalue : LibC::LPWSTR [In],pcszpath : LibC::LPWSTR [In],dwflags : UInt32 [In]
  fun SHRegSetPathW(hkey : HKEY, pcszsubkey : LibC::LPWSTR, pcszvalue : LibC::LPWSTR, pcszpath : LibC::LPWSTR, dwflags : UInt32) : LSTATUS

  # Params # pszpath : PSTR [In],samdesired : UInt32 [In],hrelativeuskey : LibC::IntPtrT [In],phnewuskey : LibC::IntPtrT* [In],dwflags : UInt32 [In]
  fun SHRegCreateUSKeyA(pszpath : PSTR, samdesired : UInt32, hrelativeuskey : LibC::IntPtrT, phnewuskey : LibC::IntPtrT*, dwflags : UInt32) : LSTATUS

  # Params # pwzpath : LibC::LPWSTR [In],samdesired : UInt32 [In],hrelativeuskey : LibC::IntPtrT [In],phnewuskey : LibC::IntPtrT* [In],dwflags : UInt32 [In]
  fun SHRegCreateUSKeyW(pwzpath : LibC::LPWSTR, samdesired : UInt32, hrelativeuskey : LibC::IntPtrT, phnewuskey : LibC::IntPtrT*, dwflags : UInt32) : LSTATUS

  # Params # pszpath : PSTR [In],samdesired : UInt32 [In],hrelativeuskey : LibC::IntPtrT [In],phnewuskey : LibC::IntPtrT* [In],fignorehkcu : LibC::BOOL [In]
  fun SHRegOpenUSKeyA(pszpath : PSTR, samdesired : UInt32, hrelativeuskey : LibC::IntPtrT, phnewuskey : LibC::IntPtrT*, fignorehkcu : LibC::BOOL) : LSTATUS

  # Params # pwzpath : LibC::LPWSTR [In],samdesired : UInt32 [In],hrelativeuskey : LibC::IntPtrT [In],phnewuskey : LibC::IntPtrT* [In],fignorehkcu : LibC::BOOL [In]
  fun SHRegOpenUSKeyW(pwzpath : LibC::LPWSTR, samdesired : UInt32, hrelativeuskey : LibC::IntPtrT, phnewuskey : LibC::IntPtrT*, fignorehkcu : LibC::BOOL) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],pszvalue : PSTR [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In],fignorehkcu : LibC::BOOL [In],pvdefaultdata : Void* [In],dwdefaultdatasize : UInt32 [In]
  fun SHRegQueryUSValueA(huskey : LibC::IntPtrT, pszvalue : PSTR, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*, fignorehkcu : LibC::BOOL, pvdefaultdata : Void*, dwdefaultdatasize : UInt32) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],pszvalue : LibC::LPWSTR [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In],fignorehkcu : LibC::BOOL [In],pvdefaultdata : Void* [In],dwdefaultdatasize : UInt32 [In]
  fun SHRegQueryUSValueW(huskey : LibC::IntPtrT, pszvalue : LibC::LPWSTR, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*, fignorehkcu : LibC::BOOL, pvdefaultdata : Void*, dwdefaultdatasize : UInt32) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],pszvalue : PSTR [In],dwtype : UInt32 [In],pvdata : Void* [In],cbdata : UInt32 [In],dwflags : UInt32 [In]
  fun SHRegWriteUSValueA(huskey : LibC::IntPtrT, pszvalue : PSTR, dwtype : UInt32, pvdata : Void*, cbdata : UInt32, dwflags : UInt32) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],pwzvalue : LibC::LPWSTR [In],dwtype : UInt32 [In],pvdata : Void* [In],cbdata : UInt32 [In],dwflags : UInt32 [In]
  fun SHRegWriteUSValueW(huskey : LibC::IntPtrT, pwzvalue : LibC::LPWSTR, dwtype : UInt32, pvdata : Void*, cbdata : UInt32, dwflags : UInt32) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],pszvalue : PSTR [In],delregflags : SHREGDEL_FLAGS [In]
  fun SHRegDeleteUSValueA(huskey : LibC::IntPtrT, pszvalue : PSTR, delregflags : SHREGDEL_FLAGS) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],pwzvalue : LibC::LPWSTR [In],delregflags : SHREGDEL_FLAGS [In]
  fun SHRegDeleteUSValueW(huskey : LibC::IntPtrT, pwzvalue : LibC::LPWSTR, delregflags : SHREGDEL_FLAGS) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],pwzsubkey : LibC::LPWSTR [In],delregflags : SHREGDEL_FLAGS [In]
  fun SHRegDeleteEmptyUSKeyW(huskey : LibC::IntPtrT, pwzsubkey : LibC::LPWSTR, delregflags : SHREGDEL_FLAGS) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],pszsubkey : PSTR [In],delregflags : SHREGDEL_FLAGS [In]
  fun SHRegDeleteEmptyUSKeyA(huskey : LibC::IntPtrT, pszsubkey : PSTR, delregflags : SHREGDEL_FLAGS) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],dwindex : UInt32 [In],pszname : UInt8* [In],pcchname : UInt32* [In],enumregflags : SHREGENUM_FLAGS [In]
  fun SHRegEnumUSKeyA(huskey : LibC::IntPtrT, dwindex : UInt32, pszname : UInt8*, pcchname : UInt32*, enumregflags : SHREGENUM_FLAGS) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],dwindex : UInt32 [In],pwzname : Char* [In],pcchname : UInt32* [In],enumregflags : SHREGENUM_FLAGS [In]
  fun SHRegEnumUSKeyW(huskey : LibC::IntPtrT, dwindex : UInt32, pwzname : Char*, pcchname : UInt32*, enumregflags : SHREGENUM_FLAGS) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],dwindex : UInt32 [In],pszvaluename : UInt8* [In],pcchvaluename : UInt32* [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In],enumregflags : SHREGENUM_FLAGS [In]
  fun SHRegEnumUSValueA(huskey : LibC::IntPtrT, dwindex : UInt32, pszvaluename : UInt8*, pcchvaluename : UInt32*, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*, enumregflags : SHREGENUM_FLAGS) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],dwindex : UInt32 [In],pszvaluename : Char* [In],pcchvaluename : UInt32* [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In],enumregflags : SHREGENUM_FLAGS [In]
  fun SHRegEnumUSValueW(huskey : LibC::IntPtrT, dwindex : UInt32, pszvaluename : Char*, pcchvaluename : UInt32*, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*, enumregflags : SHREGENUM_FLAGS) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],pcsubkeys : UInt32* [In],pcchmaxsubkeylen : UInt32* [In],pcvalues : UInt32* [In],pcchmaxvaluenamelen : UInt32* [In],enumregflags : SHREGENUM_FLAGS [In]
  fun SHRegQueryInfoUSKeyA(huskey : LibC::IntPtrT, pcsubkeys : UInt32*, pcchmaxsubkeylen : UInt32*, pcvalues : UInt32*, pcchmaxvaluenamelen : UInt32*, enumregflags : SHREGENUM_FLAGS) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In],pcsubkeys : UInt32* [In],pcchmaxsubkeylen : UInt32* [In],pcvalues : UInt32* [In],pcchmaxvaluenamelen : UInt32* [In],enumregflags : SHREGENUM_FLAGS [In]
  fun SHRegQueryInfoUSKeyW(huskey : LibC::IntPtrT, pcsubkeys : UInt32*, pcchmaxsubkeylen : UInt32*, pcvalues : UInt32*, pcchmaxvaluenamelen : UInt32*, enumregflags : SHREGENUM_FLAGS) : LSTATUS

  # Params # huskey : LibC::IntPtrT [In]
  fun SHRegCloseUSKey(huskey : LibC::IntPtrT) : LSTATUS

  # Params # pszsubkey : PSTR [In],pszvalue : PSTR [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In],fignorehkcu : LibC::BOOL [In],pvdefaultdata : Void* [In],dwdefaultdatasize : UInt32 [In]
  fun SHRegGetUSValueA(pszsubkey : PSTR, pszvalue : PSTR, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*, fignorehkcu : LibC::BOOL, pvdefaultdata : Void*, dwdefaultdatasize : UInt32) : LSTATUS

  # Params # pszsubkey : LibC::LPWSTR [In],pszvalue : LibC::LPWSTR [In],pdwtype : UInt32* [In],pvdata : Void* [In],pcbdata : UInt32* [In],fignorehkcu : LibC::BOOL [In],pvdefaultdata : Void* [In],dwdefaultdatasize : UInt32 [In]
  fun SHRegGetUSValueW(pszsubkey : LibC::LPWSTR, pszvalue : LibC::LPWSTR, pdwtype : UInt32*, pvdata : Void*, pcbdata : UInt32*, fignorehkcu : LibC::BOOL, pvdefaultdata : Void*, dwdefaultdatasize : UInt32) : LSTATUS

  # Params # pszsubkey : PSTR [In],pszvalue : PSTR [In],dwtype : UInt32 [In],pvdata : Void* [In],cbdata : UInt32 [In],dwflags : UInt32 [In]
  fun SHRegSetUSValueA(pszsubkey : PSTR, pszvalue : PSTR, dwtype : UInt32, pvdata : Void*, cbdata : UInt32, dwflags : UInt32) : LSTATUS

  # Params # pwzsubkey : LibC::LPWSTR [In],pwzvalue : LibC::LPWSTR [In],dwtype : UInt32 [In],pvdata : Void* [In],cbdata : UInt32 [In],dwflags : UInt32 [In]
  fun SHRegSetUSValueW(pwzsubkey : LibC::LPWSTR, pwzvalue : LibC::LPWSTR, dwtype : UInt32, pvdata : Void*, cbdata : UInt32, dwflags : UInt32) : LSTATUS

  # Params # hk : HKEY [In],pwzkey : LibC::LPWSTR [In],idefault : Int32 [In]
  fun SHRegGetIntW(hk : HKEY, pwzkey : LibC::LPWSTR, idefault : Int32) : Int32

  # Params # pszsubkey : PSTR [In],pszvalue : PSTR [In],fignorehkcu : LibC::BOOL [In],fdefault : LibC::BOOL [In]
  fun SHRegGetBoolUSValueA(pszsubkey : PSTR, pszvalue : PSTR, fignorehkcu : LibC::BOOL, fdefault : LibC::BOOL) : LibC::BOOL

  # Params # pszsubkey : LibC::LPWSTR [In],pszvalue : LibC::LPWSTR [In],fignorehkcu : LibC::BOOL [In],fdefault : LibC::BOOL [In]
  fun SHRegGetBoolUSValueW(pszsubkey : LibC::LPWSTR, pszvalue : LibC::LPWSTR, fignorehkcu : LibC::BOOL, fdefault : LibC::BOOL) : LibC::BOOL

  # Params # clsid : Guid [In],riid : Guid* [In],ppv : Void** [In]
  fun AssocCreate(clsid : Guid, riid : Guid*, ppv : Void**) : HRESULT

  # Params # flags : UInt32 [In],str : ASSOCSTR [In],pszassoc : PSTR [In],pszextra : PSTR [In],pszout : UInt8* [In],pcchout : UInt32* [In]
  fun AssocQueryStringA(flags : UInt32, str : ASSOCSTR, pszassoc : PSTR, pszextra : PSTR, pszout : UInt8*, pcchout : UInt32*) : HRESULT

  # Params # flags : UInt32 [In],str : ASSOCSTR [In],pszassoc : LibC::LPWSTR [In],pszextra : LibC::LPWSTR [In],pszout : Char* [In],pcchout : UInt32* [In]
  fun AssocQueryStringW(flags : UInt32, str : ASSOCSTR, pszassoc : LibC::LPWSTR, pszextra : LibC::LPWSTR, pszout : Char*, pcchout : UInt32*) : HRESULT

  # Params # flags : UInt32 [In],str : ASSOCSTR [In],hkassoc : HKEY [In],pszextra : PSTR [In],pszout : UInt8* [In],pcchout : UInt32* [In]
  fun AssocQueryStringByKeyA(flags : UInt32, str : ASSOCSTR, hkassoc : HKEY, pszextra : PSTR, pszout : UInt8*, pcchout : UInt32*) : HRESULT

  # Params # flags : UInt32 [In],str : ASSOCSTR [In],hkassoc : HKEY [In],pszextra : LibC::LPWSTR [In],pszout : Char* [In],pcchout : UInt32* [In]
  fun AssocQueryStringByKeyW(flags : UInt32, str : ASSOCSTR, hkassoc : HKEY, pszextra : LibC::LPWSTR, pszout : Char*, pcchout : UInt32*) : HRESULT

  # Params # flags : UInt32 [In],key : ASSOCKEY [In],pszassoc : PSTR [In],pszextra : PSTR [In],phkeyout : HKEY* [In]
  fun AssocQueryKeyA(flags : UInt32, key : ASSOCKEY, pszassoc : PSTR, pszextra : PSTR, phkeyout : HKEY*) : HRESULT

  # Params # flags : UInt32 [In],key : ASSOCKEY [In],pszassoc : LibC::LPWSTR [In],pszextra : LibC::LPWSTR [In],phkeyout : HKEY* [In]
  fun AssocQueryKeyW(flags : UInt32, key : ASSOCKEY, pszassoc : LibC::LPWSTR, pszextra : LibC::LPWSTR, phkeyout : HKEY*) : HRESULT

  # Params # pszassoc : LibC::LPWSTR [In]
  fun AssocIsDangerous(pszassoc : LibC::LPWSTR) : LibC::BOOL

  # Params # pszext : LibC::LPWSTR [In],ptype : PERCEIVED* [In],pflag : UInt32* [In],ppsztype : LibC::LPWSTR* [In]
  fun AssocGetPerceivedType(pszext : LibC::LPWSTR, ptype : PERCEIVED*, pflag : UInt32*, ppsztype : LibC::LPWSTR*) : HRESULT

  # Params # hkey : HKEY [In],pszsubkey : PSTR [In],pszvalue : PSTR [In],grfmode : UInt32 [In]
  fun SHOpenRegStreamA(hkey : HKEY, pszsubkey : PSTR, pszvalue : PSTR, grfmode : UInt32) : IStream

  # Params # hkey : HKEY [In],pszsubkey : LibC::LPWSTR [In],pszvalue : LibC::LPWSTR [In],grfmode : UInt32 [In]
  fun SHOpenRegStreamW(hkey : HKEY, pszsubkey : LibC::LPWSTR, pszvalue : LibC::LPWSTR, grfmode : UInt32) : IStream

  # Params # hkey : HKEY [In],pszsubkey : PSTR [In],pszvalue : PSTR [In],grfmode : UInt32 [In]
  fun SHOpenRegStream2A(hkey : HKEY, pszsubkey : PSTR, pszvalue : PSTR, grfmode : UInt32) : IStream

  # Params # hkey : HKEY [In],pszsubkey : LibC::LPWSTR [In],pszvalue : LibC::LPWSTR [In],grfmode : UInt32 [In]
  fun SHOpenRegStream2W(hkey : HKEY, pszsubkey : LibC::LPWSTR, pszvalue : LibC::LPWSTR, grfmode : UInt32) : IStream

  # Params # pszfile : PSTR [In],grfmode : UInt32 [In],ppstm : IStream* [In]
  fun SHCreateStreamOnFileA(pszfile : PSTR, grfmode : UInt32, ppstm : IStream*) : HRESULT

  # Params # pszfile : LibC::LPWSTR [In],grfmode : UInt32 [In],ppstm : IStream* [In]
  fun SHCreateStreamOnFileW(pszfile : LibC::LPWSTR, grfmode : UInt32, ppstm : IStream*) : HRESULT

  # Params # pszfile : LibC::LPWSTR [In],grfmode : UInt32 [In],dwattributes : UInt32 [In],fcreate : LibC::BOOL [In],pstmtemplate : IStream [In],ppstm : IStream* [In]
  fun SHCreateStreamOnFileEx(pszfile : LibC::LPWSTR, grfmode : UInt32, dwattributes : UInt32, fcreate : LibC::BOOL, pstmtemplate : IStream, ppstm : IStream*) : HRESULT

  # Params # pinit : UInt8* [In],cbinit : UInt32 [In]
  fun SHCreateMemStream(pinit : UInt8*, cbinit : UInt32) : IStream

  # Params # pszlanguages : UInt8* [In],pcchlanguages : UInt32* [In]
  fun GetAcceptLanguagesA(pszlanguages : UInt8*, pcchlanguages : UInt32*) : HRESULT

  # Params # pszlanguages : Char* [In],pcchlanguages : UInt32* [In]
  fun GetAcceptLanguagesW(pszlanguages : Char*, pcchlanguages : UInt32*) : HRESULT

  # Params # ppunk : IUnknown* [In],punk : IUnknown [In]
  fun IUnknown_Set(ppunk : IUnknown*, punk : IUnknown) : Void

  # Params # ppunk : Void** [In]
  fun IUnknown_AtomicRelease(ppunk : Void**) : Void

  # Params # punk : IUnknown [In],phwnd : HANDLE* [In]
  fun IUnknown_GetWindow(punk : IUnknown, phwnd : HANDLE*) : HRESULT

  # Params # punk : IUnknown [In],punksite : IUnknown [In]
  fun IUnknown_SetSite(punk : IUnknown, punksite : IUnknown) : HRESULT

  # Params # punk : IUnknown [In],riid : Guid* [In],ppv : Void** [In]
  fun IUnknown_GetSite(punk : IUnknown, riid : Guid*, ppv : Void**) : HRESULT

  # Params # punk : IUnknown [In],guidservice : Guid* [In],riid : Guid* [In],ppvout : Void** [In]
  fun IUnknown_QueryService(punk : IUnknown, guidservice : Guid*, riid : Guid*, ppvout : Void**) : HRESULT

  # Params # pstm : IStream [In],pv : Void* [In],cb : UInt32 [In]
  fun IStream_Read(pstm : IStream, pv : Void*, cb : UInt32) : HRESULT

  # Params # pstm : IStream [In],pv : Void* [In],cb : UInt32 [In]
  fun IStream_Write(pstm : IStream, pv : Void*, cb : UInt32) : HRESULT

  # Params # pstm : IStream [In]
  fun IStream_Reset(pstm : IStream) : HRESULT

  # Params # pstm : IStream [In],pui : ULARGE_INTEGER* [In]
  fun IStream_Size(pstm : IStream, pui : ULARGE_INTEGER*) : HRESULT

  # Params # punk : IUnknown [In],riidevent : Guid* [In],fconnect : LibC::BOOL [In],punktarget : IUnknown [In],pdwcookie : UInt32* [In],ppcpout : IConnectionPoint* [In]
  fun ConnectToConnectionPoint(punk : IUnknown, riidevent : Guid*, fconnect : LibC::BOOL, punktarget : IUnknown, pdwcookie : UInt32*, ppcpout : IConnectionPoint*) : HRESULT

  # Params # pstm : IStream [In],ppidlout : ITEMIDLIST** [In]
  fun IStream_ReadPidl(pstm : IStream, ppidlout : ITEMIDLIST**) : HRESULT

  # Params # pstm : IStream [In],pidlwrite : ITEMIDLIST* [In]
  fun IStream_WritePidl(pstm : IStream, pidlwrite : ITEMIDLIST*) : HRESULT

  # Params # pstm : IStream [In],ppsz : LibC::LPWSTR* [In]
  fun IStream_ReadStr(pstm : IStream, ppsz : LibC::LPWSTR*) : HRESULT

  # Params # pstm : IStream [In],psz : LibC::LPWSTR [In]
  fun IStream_WriteStr(pstm : IStream, psz : LibC::LPWSTR) : HRESULT

  # Params # pstmfrom : IStream [In],pstmto : IStream [In],cb : UInt32 [In]
  fun IStream_Copy(pstmfrom : IStream, pstmto : IStream, cb : UInt32) : HRESULT

  # Params # pidl : ITEMIDLIST* [In],pszbagname : LibC::LPWSTR [In],dwflags : UInt32 [In],riid : Guid* [In],ppv : Void** [In]
  fun SHGetViewStatePropertyBag(pidl : ITEMIDLIST*, pszbagname : LibC::LPWSTR, dwflags : UInt32, riid : Guid*, ppv : Void**) : HRESULT

  # Params # pft : FILETIME* [In],pdwflags : UInt32* [In],pszbuf : UInt8* [In],cchbuf : UInt32 [In]
  fun SHFormatDateTimeA(pft : FILETIME*, pdwflags : UInt32*, pszbuf : UInt8*, cchbuf : UInt32) : Int32

  # Params # pft : FILETIME* [In],pdwflags : UInt32* [In],pszbuf : Char* [In],cchbuf : UInt32 [In]
  fun SHFormatDateTimeW(pft : FILETIME*, pdwflags : UInt32*, pszbuf : Char*, cchbuf : UInt32) : Int32

  # Params # pszsrc : PSTR [In],pwszdst : Char* [In],cwchbuf : Int32 [In]
  fun SHAnsiToUnicode(pszsrc : PSTR, pwszdst : Char*, cwchbuf : Int32) : Int32

  # Params # pszsrc : PSTR [In],pszdst : UInt8* [In],cchbuf : Int32 [In]
  fun SHAnsiToAnsi(pszsrc : PSTR, pszdst : UInt8*, cchbuf : Int32) : Int32

  # Params # pwszsrc : LibC::LPWSTR [In],pszdst : UInt8* [In],cchbuf : Int32 [In]
  fun SHUnicodeToAnsi(pwszsrc : LibC::LPWSTR, pszdst : UInt8*, cchbuf : Int32) : Int32

  # Params # pwzsrc : LibC::LPWSTR [In],pwzdst : Char* [In],cwchbuf : Int32 [In]
  fun SHUnicodeToUnicode(pwzsrc : LibC::LPWSTR, pwzdst : Char*, cwchbuf : Int32) : Int32

  # Params # hwnd : LibC::HANDLE [In],psztext : PSTR [In],pszcaption : PSTR [In],utype : UInt32 [In],idefault : Int32 [In],pszregval : PSTR [In]
  fun SHMessageBoxCheckA(hwnd : LibC::HANDLE, psztext : PSTR, pszcaption : PSTR, utype : UInt32, idefault : Int32, pszregval : PSTR) : Int32

  # Params # hwnd : LibC::HANDLE [In],psztext : LibC::LPWSTR [In],pszcaption : LibC::LPWSTR [In],utype : UInt32 [In],idefault : Int32 [In],pszregval : LibC::LPWSTR [In]
  fun SHMessageBoxCheckW(hwnd : LibC::HANDLE, psztext : LibC::LPWSTR, pszcaption : LibC::LPWSTR, utype : UInt32, idefault : Int32, pszregval : LibC::LPWSTR) : Int32

  # Params # umsg : UInt32 [In],wparam : LibC::UINT_PTR [In],lparam : LPARAM [In]
  fun SHSendMessageBroadcastA(umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT

  # Params # umsg : UInt32 [In],wparam : LibC::UINT_PTR [In],lparam : LPARAM [In]
  fun SHSendMessageBroadcastW(umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT

  # Params # pszmenu : PSTR [In]
  fun SHStripMneumonicA(pszmenu : PSTR) : CHAR

  # Params # pszmenu : LibC::LPWSTR [In]
  fun SHStripMneumonicW(pszmenu : LibC::LPWSTR) : Char

  # Params # dwos : OS [In]
  fun IsOS(dwos : OS) : LibC::BOOL

  # Params # id : SHGLOBALCOUNTER [In]
  fun SHGlobalCounterGetValue(id : SHGLOBALCOUNTER) : Int32

  # Params # id : SHGLOBALCOUNTER [In]
  fun SHGlobalCounterIncrement(id : SHGLOBALCOUNTER) : Int32

  # Params # id : SHGLOBALCOUNTER [In]
  fun SHGlobalCounterDecrement(id : SHGLOBALCOUNTER) : Int32

  # Params # pvdata : Void* [In],dwsize : UInt32 [In],dwprocessid : UInt32 [In]
  fun SHAllocShared(pvdata : Void*, dwsize : UInt32, dwprocessid : UInt32) : LibC::HANDLE

  # Params # hdata : LibC::HANDLE [In],dwprocessid : UInt32 [In]
  fun SHFreeShared(hdata : LibC::HANDLE, dwprocessid : UInt32) : LibC::BOOL

  # Params # hdata : LibC::HANDLE [In],dwprocessid : UInt32 [In]
  fun SHLockShared(hdata : LibC::HANDLE, dwprocessid : UInt32) : Void*

  # Params # pvdata : Void* [In]
  fun SHUnlockShared(pvdata : Void*) : LibC::BOOL

  # Params # 
  fun WhichPlatform : UInt32

  # Params # that : Void* [In],pqit : QITAB* [In],riid : Guid* [In],ppv : Void** [In]
  fun QISearch(that : Void*, pqit : QITAB*, riid : Guid*, ppv : Void**) : HRESULT

  # Params # dwtype : UInt32 [In]
  fun SHIsLowMemoryMachine(dwtype : UInt32) : LibC::BOOL

  # Params # hmenu : LibC::HANDLE [In],id : UInt32 [In]
  fun GetMenuPosFromID(hmenu : LibC::HANDLE, id : UInt32) : Int32

  # Params # pbmap : UInt8* [In],cbmap : UInt32 [In]
  fun SHGetInverseCMAP(pbmap : UInt8*, cbmap : UInt32) : HRESULT

  # Params # hwndedit : LibC::HANDLE [In],dwflags : UInt32 [In]
  fun SHAutoComplete(hwndedit : LibC::HANDLE, dwflags : UInt32) : HRESULT

  # Params # pcref : Int32* [In],ppunk : IUnknown* [In]
  fun SHCreateThreadRef(pcref : Int32*, ppunk : IUnknown*) : HRESULT

  # Params # punk : IUnknown [In]
  fun SHSetThreadRef(punk : IUnknown) : HRESULT

  # Params # ppunk : IUnknown* [In]
  fun SHGetThreadRef(ppunk : IUnknown*) : HRESULT

  # Params # pbc : IBindCtx [In],pclsid : Guid* [In]
  fun SHSkipJunction(pbc : IBindCtx, pclsid : Guid*) : LibC::BOOL

  # Params # pfnthreadproc : LPTHREAD_START_ROUTINE [In],pdata : Void* [In],flags : UInt32 [In],pfncallback : LPTHREAD_START_ROUTINE [In]
  fun SHCreateThread(pfnthreadproc : LPTHREAD_START_ROUTINE, pdata : Void*, flags : UInt32, pfncallback : LPTHREAD_START_ROUTINE) : LibC::BOOL

  # Params # pfnthreadproc : LPTHREAD_START_ROUTINE [In],pdata : Void* [In],flags : UInt32 [In],pfncallback : LPTHREAD_START_ROUTINE [In],phandle : LibC::HANDLE* [In]
  fun SHCreateThreadWithHandle(pfnthreadproc : LPTHREAD_START_ROUTINE, pdata : Void*, flags : UInt32, pfncallback : LPTHREAD_START_ROUTINE, phandle : LibC::HANDLE*) : LibC::BOOL

  # Params # 
  fun SHReleaseThreadRef : HRESULT

  # Params # hdc : HDC [In]
  fun SHCreateShellPalette(hdc : HDC) : HPALETTE

  # Params # clrrgb : UInt32 [In],pwhue : UInt16* [In],pwluminance : UInt16* [In],pwsaturation : UInt16* [In]
  fun ColorRGBToHLS(clrrgb : UInt32, pwhue : UInt16*, pwluminance : UInt16*, pwsaturation : UInt16*) : Void

  # Params # whue : UInt16 [In],wluminance : UInt16 [In],wsaturation : UInt16 [In]
  fun ColorHLSToRGB(whue : UInt16, wluminance : UInt16, wsaturation : UInt16) : UInt32

  # Params # clrrgb : UInt32 [In],n : Int32 [In],fscale : LibC::BOOL [In]
  fun ColorAdjustLuma(clrrgb : UInt32, n : Int32, fscale : LibC::BOOL) : UInt32

  # Params # 
  fun IsInternetESCEnabled : LibC::BOOL

  # Params # pimktrgt : IMoniker [In],pwzlocation : LibC::LPWSTR [In],pwzfriendlyname : LibC::LPWSTR [In],pihlsite : IHlinkSite [In],dwsitedata : UInt32 [In],piunkouter : IUnknown [In],riid : Guid* [In],ppvobj : Void** [In]
  fun HlinkCreateFromMoniker(pimktrgt : IMoniker, pwzlocation : LibC::LPWSTR, pwzfriendlyname : LibC::LPWSTR, pihlsite : IHlinkSite, dwsitedata : UInt32, piunkouter : IUnknown, riid : Guid*, ppvobj : Void**) : HRESULT

  # Params # pwztarget : LibC::LPWSTR [In],pwzlocation : LibC::LPWSTR [In],pwzfriendlyname : LibC::LPWSTR [In],pihlsite : IHlinkSite [In],dwsitedata : UInt32 [In],piunkouter : IUnknown [In],riid : Guid* [In],ppvobj : Void** [In]
  fun HlinkCreateFromString(pwztarget : LibC::LPWSTR, pwzlocation : LibC::LPWSTR, pwzfriendlyname : LibC::LPWSTR, pihlsite : IHlinkSite, dwsitedata : UInt32, piunkouter : IUnknown, riid : Guid*, ppvobj : Void**) : HRESULT

  # Params # pidataobj : IDataObject [In],pihlsite : IHlinkSite [In],dwsitedata : UInt32 [In],piunkouter : IUnknown [In],riid : Guid* [In],ppvobj : Void** [In]
  fun HlinkCreateFromData(pidataobj : IDataObject, pihlsite : IHlinkSite, dwsitedata : UInt32, piunkouter : IUnknown, riid : Guid*, ppvobj : Void**) : HRESULT

  # Params # pidataobj : IDataObject [In]
  fun HlinkQueryCreateFromData(pidataobj : IDataObject) : HRESULT

  # Params # pihl : IHlink [In],riid : Guid* [In],pihlsiteforclone : IHlinkSite [In],dwsitedata : UInt32 [In],ppvobj : Void** [In]
  fun HlinkClone(pihl : IHlink, riid : Guid*, pihlsiteforclone : IHlinkSite, dwsitedata : UInt32, ppvobj : Void**) : HRESULT

  # Params # piunkouter : IUnknown [In],riid : Guid* [In],ppvobj : Void** [In]
  fun HlinkCreateBrowseContext(piunkouter : IUnknown, riid : Guid*, ppvobj : Void**) : HRESULT

  # Params # pwztarget : LibC::LPWSTR [In],pwzlocation : LibC::LPWSTR [In],pihlsite : IHlinkSite [In],dwsitedata : UInt32 [In],pihlframe : IHlinkFrame [In],grfhlnf : UInt32 [In],pibc : IBindCtx [In],pibsc : IBindStatusCallback [In],pihlbc : IHlinkBrowseContext [In]
  fun HlinkNavigateToStringReference(pwztarget : LibC::LPWSTR, pwzlocation : LibC::LPWSTR, pihlsite : IHlinkSite, dwsitedata : UInt32, pihlframe : IHlinkFrame, grfhlnf : UInt32, pibc : IBindCtx, pibsc : IBindStatusCallback, pihlbc : IHlinkBrowseContext) : HRESULT

  # Params # pihl : IHlink [In],pihlframe : IHlinkFrame [In],grfhlnf : UInt32 [In],pbc : IBindCtx [In],pibsc : IBindStatusCallback [In],pihlbc : IHlinkBrowseContext [In]
  fun HlinkNavigate(pihl : IHlink, pihlframe : IHlinkFrame, grfhlnf : UInt32, pbc : IBindCtx, pibsc : IBindStatusCallback, pihlbc : IHlinkBrowseContext) : HRESULT

  # Params # pihlframe : IHlinkFrame [In],pihlbc : IHlinkBrowseContext [In],grfhlnf : UInt32 [In],pimktarget : IMoniker [In],pwzlocation : LibC::LPWSTR [In],pwzfriendlyname : LibC::LPWSTR [In],puhlid : UInt32* [In]
  fun HlinkOnNavigate(pihlframe : IHlinkFrame, pihlbc : IHlinkBrowseContext, grfhlnf : UInt32, pimktarget : IMoniker, pwzlocation : LibC::LPWSTR, pwzfriendlyname : LibC::LPWSTR, puhlid : UInt32*) : HRESULT

  # Params # pihlframe : IHlinkFrame [In],pihlbc : IHlinkBrowseContext [In],uhlid : UInt32 [In],pimktrgt : IMoniker [In],pwzlocation : LibC::LPWSTR [In],pwzfriendlyname : LibC::LPWSTR [In]
  fun HlinkUpdateStackItem(pihlframe : IHlinkFrame, pihlbc : IHlinkBrowseContext, uhlid : UInt32, pimktrgt : IMoniker, pwzlocation : LibC::LPWSTR, pwzfriendlyname : LibC::LPWSTR) : HRESULT

  # Params # dwreserved : UInt32 [In],pihlbc : IHlinkBrowseContext [In],pimkold : IMoniker [In],pimknew : IMoniker [In]
  fun HlinkOnRenameDocument(dwreserved : UInt32, pihlbc : IHlinkBrowseContext, pimkold : IMoniker, pimknew : IMoniker) : HRESULT

  # Params # pimkreference : IMoniker [In],reserved : UInt32 [In],pibc : IBindCtx [In],cfmtetc : UInt32 [In],rgfmtetc : FORMATETC* [In],pibsc : IBindStatusCallback [In],pimkbase : IMoniker [In]
  fun HlinkResolveMonikerForData(pimkreference : IMoniker, reserved : UInt32, pibc : IBindCtx, cfmtetc : UInt32, rgfmtetc : FORMATETC*, pibsc : IBindStatusCallback, pimkbase : IMoniker) : HRESULT

  # Params # pwzreference : LibC::LPWSTR [In],reserved : UInt32 [In],pibc : IBindCtx [In],cfmtetc : UInt32 [In],rgfmtetc : FORMATETC* [In],pibsc : IBindStatusCallback [In],pimkbase : IMoniker [In]
  fun HlinkResolveStringForData(pwzreference : LibC::LPWSTR, reserved : UInt32, pibc : IBindCtx, cfmtetc : UInt32, rgfmtetc : FORMATETC*, pibsc : IBindStatusCallback, pimkbase : IMoniker) : HRESULT

  # Params # pibc : IBindCtx [In],pwzdisplayname : LibC::LPWSTR [In],fnoforceabs : LibC::BOOL [In],pccheaten : UInt32* [In],ppimk : IMoniker* [In]
  fun HlinkParseDisplayName(pibc : IBindCtx, pwzdisplayname : LibC::LPWSTR, fnoforceabs : LibC::BOOL, pccheaten : UInt32*, ppimk : IMoniker*) : HRESULT

  # Params # pwzadditionalheaders : LibC::LPWSTR [In],phwnd : LibC::HANDLE [In],pszusername : LibC::LPWSTR [In],pszpassword : LibC::LPWSTR [In],piunkouter : IUnknown [In],riid : Guid* [In],ppvobj : Void** [In]
  fun HlinkCreateExtensionServices(pwzadditionalheaders : LibC::LPWSTR, phwnd : LibC::HANDLE, pszusername : LibC::LPWSTR, pszpassword : LibC::LPWSTR, piunkouter : IUnknown, riid : Guid*, ppvobj : Void**) : HRESULT

  # Params # pibc : IBindCtx [In],pimkin : IMoniker [In],ppimkout : IMoniker* [In]
  fun HlinkPreprocessMoniker(pibc : IBindCtx, pimkin : IMoniker, ppimkout : IMoniker*) : HRESULT

  # Params # piunk : IUnknown [In],pistm : IStream [In],fcleardirty : LibC::BOOL [In]
  fun OleSaveToStreamEx(piunk : IUnknown, pistm : IStream, fcleardirty : LibC::BOOL) : HRESULT

  # Params # ureference : UInt32 [In],pwzreference : LibC::LPWSTR [In]
  fun HlinkSetSpecialReference(ureference : UInt32, pwzreference : LibC::LPWSTR) : HRESULT

  # Params # ureference : UInt32 [In],ppwzreference : LibC::LPWSTR* [In]
  fun HlinkGetSpecialReference(ureference : UInt32, ppwzreference : LibC::LPWSTR*) : HRESULT

  # Params # grfhlshortcutf : UInt32 [In],pihl : IHlink [In],pwzdir : LibC::LPWSTR [In],pwzfilename : LibC::LPWSTR [In],ppwzshortcutfile : LibC::LPWSTR* [In],dwreserved : UInt32 [In]
  fun HlinkCreateShortcut(grfhlshortcutf : UInt32, pihl : IHlink, pwzdir : LibC::LPWSTR, pwzfilename : LibC::LPWSTR, ppwzshortcutfile : LibC::LPWSTR*, dwreserved : UInt32) : HRESULT

  # Params # grfhlshortcutf : UInt32 [In],pimktarget : IMoniker [In],pwzlocation : LibC::LPWSTR [In],pwzdir : LibC::LPWSTR [In],pwzfilename : LibC::LPWSTR [In],ppwzshortcutfile : LibC::LPWSTR* [In],dwreserved : UInt32 [In]
  fun HlinkCreateShortcutFromMoniker(grfhlshortcutf : UInt32, pimktarget : IMoniker, pwzlocation : LibC::LPWSTR, pwzdir : LibC::LPWSTR, pwzfilename : LibC::LPWSTR, ppwzshortcutfile : LibC::LPWSTR*, dwreserved : UInt32) : HRESULT

  # Params # grfhlshortcutf : UInt32 [In],pwztarget : LibC::LPWSTR [In],pwzlocation : LibC::LPWSTR [In],pwzdir : LibC::LPWSTR [In],pwzfilename : LibC::LPWSTR [In],ppwzshortcutfile : LibC::LPWSTR* [In],dwreserved : UInt32 [In]
  fun HlinkCreateShortcutFromString(grfhlshortcutf : UInt32, pwztarget : LibC::LPWSTR, pwzlocation : LibC::LPWSTR, pwzdir : LibC::LPWSTR, pwzfilename : LibC::LPWSTR, ppwzshortcutfile : LibC::LPWSTR*, dwreserved : UInt32) : HRESULT

  # Params # pwzshortcutfilename : LibC::LPWSTR [In],pihlsite : IHlinkSite [In],dwsitedata : UInt32 [In],piunkouter : IUnknown [In],riid : Guid* [In],ppvobj : Void** [In]
  fun HlinkResolveShortcut(pwzshortcutfilename : LibC::LPWSTR, pihlsite : IHlinkSite, dwsitedata : UInt32, piunkouter : IUnknown, riid : Guid*, ppvobj : Void**) : HRESULT

  # Params # pwzshortcutfilename : LibC::LPWSTR [In],ppimktarget : IMoniker* [In],ppwzlocation : LibC::LPWSTR* [In]
  fun HlinkResolveShortcutToMoniker(pwzshortcutfilename : LibC::LPWSTR, ppimktarget : IMoniker*, ppwzlocation : LibC::LPWSTR*) : HRESULT

  # Params # pwzshortcutfilename : LibC::LPWSTR [In],ppwztarget : LibC::LPWSTR* [In],ppwzlocation : LibC::LPWSTR* [In]
  fun HlinkResolveShortcutToString(pwzshortcutfilename : LibC::LPWSTR, ppwztarget : LibC::LPWSTR*, ppwzlocation : LibC::LPWSTR*) : HRESULT

  # Params # pwzfilename : LibC::LPWSTR [In]
  fun HlinkIsShortcut(pwzfilename : LibC::LPWSTR) : HRESULT

  # Params # pwzparams : LibC::LPWSTR [In],pwzname : LibC::LPWSTR [In],ppwzvalue : LibC::LPWSTR* [In]
  fun HlinkGetValueFromParams(pwzparams : LibC::LPWSTR, pwzname : LibC::LPWSTR, ppwzvalue : LibC::LPWSTR*) : HRESULT

  # Params # pwzurl : LibC::LPWSTR [In],grfflags : UInt32 [In],ppwztranslatedurl : LibC::LPWSTR* [In]
  fun HlinkTranslateURL(pwzurl : LibC::LPWSTR, grfflags : UInt32, ppwztranslatedurl : LibC::LPWSTR*) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In],ppszserver : LibC::LPWSTR* [In]
  fun PathIsUNCEx(pszpath : LibC::LPWSTR, ppszserver : LibC::LPWSTR*) : LibC::BOOL

  # Params # pszpath : LibC::LPWSTR [In]
  fun PathCchIsRoot(pszpath : LibC::LPWSTR) : LibC::BOOL

  # Params # pszpath : Char* [In],cchpath : LibC::UINT_PTR [In],ppszend : LibC::LPWSTR* [In],pcchremaining : LibC::UINT_PTR* [In]
  fun PathCchAddBackslashEx(pszpath : Char*, cchpath : LibC::UINT_PTR, ppszend : LibC::LPWSTR*, pcchremaining : LibC::UINT_PTR*) : HRESULT

  # Params # pszpath : Char* [In],cchpath : LibC::UINT_PTR [In]
  fun PathCchAddBackslash(pszpath : Char*, cchpath : LibC::UINT_PTR) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In],cchpath : LibC::UINT_PTR [In],ppszend : LibC::LPWSTR* [In],pcchremaining : LibC::UINT_PTR* [In]
  fun PathCchRemoveBackslashEx(pszpath : LibC::LPWSTR, cchpath : LibC::UINT_PTR, ppszend : LibC::LPWSTR*, pcchremaining : LibC::UINT_PTR*) : HRESULT

  # Params # pszpath : Char* [In],cchpath : LibC::UINT_PTR [In]
  fun PathCchRemoveBackslash(pszpath : Char*, cchpath : LibC::UINT_PTR) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In],ppszrootend : LibC::LPWSTR* [In]
  fun PathCchSkipRoot(pszpath : LibC::LPWSTR, ppszrootend : LibC::LPWSTR*) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In],cchpath : LibC::UINT_PTR [In]
  fun PathCchStripToRoot(pszpath : LibC::LPWSTR, cchpath : LibC::UINT_PTR) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In],cchpath : LibC::UINT_PTR [In]
  fun PathCchRemoveFileSpec(pszpath : LibC::LPWSTR, cchpath : LibC::UINT_PTR) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In],cchpath : LibC::UINT_PTR [In],ppszext : LibC::LPWSTR* [In]
  fun PathCchFindExtension(pszpath : LibC::LPWSTR, cchpath : LibC::UINT_PTR, ppszext : LibC::LPWSTR*) : HRESULT

  # Params # pszpath : Char* [In],cchpath : LibC::UINT_PTR [In],pszext : LibC::LPWSTR [In]
  fun PathCchAddExtension(pszpath : Char*, cchpath : LibC::UINT_PTR, pszext : LibC::LPWSTR) : HRESULT

  # Params # pszpath : Char* [In],cchpath : LibC::UINT_PTR [In],pszext : LibC::LPWSTR [In]
  fun PathCchRenameExtension(pszpath : Char*, cchpath : LibC::UINT_PTR, pszext : LibC::LPWSTR) : HRESULT

  # Params # pszpath : LibC::LPWSTR [In],cchpath : LibC::UINT_PTR [In]
  fun PathCchRemoveExtension(pszpath : LibC::LPWSTR, cchpath : LibC::UINT_PTR) : HRESULT

  # Params # pszpathout : Char* [In],cchpathout : LibC::UINT_PTR [In],pszpathin : LibC::LPWSTR [In],dwflags : UInt32 [In]
  fun PathCchCanonicalizeEx(pszpathout : Char*, cchpathout : LibC::UINT_PTR, pszpathin : LibC::LPWSTR, dwflags : UInt32) : HRESULT

  # Params # pszpathout : Char* [In],cchpathout : LibC::UINT_PTR [In],pszpathin : LibC::LPWSTR [In]
  fun PathCchCanonicalize(pszpathout : Char*, cchpathout : LibC::UINT_PTR, pszpathin : LibC::LPWSTR) : HRESULT

  # Params # pszpathout : Char* [In],cchpathout : LibC::UINT_PTR [In],pszpathin : LibC::LPWSTR [In],pszmore : LibC::LPWSTR [In],dwflags : UInt32 [In]
  fun PathCchCombineEx(pszpathout : Char*, cchpathout : LibC::UINT_PTR, pszpathin : LibC::LPWSTR, pszmore : LibC::LPWSTR, dwflags : UInt32) : HRESULT

  # Params # pszpathout : Char* [In],cchpathout : LibC::UINT_PTR [In],pszpathin : LibC::LPWSTR [In],pszmore : LibC::LPWSTR [In]
  fun PathCchCombine(pszpathout : Char*, cchpathout : LibC::UINT_PTR, pszpathin : LibC::LPWSTR, pszmore : LibC::LPWSTR) : HRESULT

  # Params # pszpath : Char* [In],cchpath : LibC::UINT_PTR [In],pszmore : LibC::LPWSTR [In],dwflags : UInt32 [In]
  fun PathCchAppendEx(pszpath : Char*, cchpath : LibC::UINT_PTR, pszmore : LibC::LPWSTR, dwflags : UInt32) : HRESULT

  # Params # pszpath : Char* [In],cchpath : LibC::UINT_PTR [In],pszmore : LibC::LPWSTR [In]
  fun PathCchAppend(pszpath : Char*, cchpath : LibC::UINT_PTR, pszmore : LibC::LPWSTR) : HRESULT

  # Params # pszpath : Char* [In],cchpath : LibC::UINT_PTR [In]
  fun PathCchStripPrefix(pszpath : Char*, cchpath : LibC::UINT_PTR) : HRESULT

  # Params # pszpathin : LibC::LPWSTR [In],pszmore : LibC::LPWSTR [In],dwflags : UInt32 [In],ppszpathout : LibC::LPWSTR* [In]
  fun PathAllocCombine(pszpathin : LibC::LPWSTR, pszmore : LibC::LPWSTR, dwflags : UInt32, ppszpathout : LibC::LPWSTR*) : HRESULT

  # Params # pszpathin : LibC::LPWSTR [In],dwflags : UInt32 [In],ppszpathout : LibC::LPWSTR* [In]
  fun PathAllocCanonicalize(pszpathin : LibC::LPWSTR, dwflags : UInt32, ppszpathout : LibC::LPWSTR*) : HRESULT

  # Params # routine : PAPPSTATE_CHANGE_ROUTINE [In],context : Void* [In],registration : APPSTATE_REGISTRATION** [In]
  fun RegisterAppStateChangeNotification(routine : PAPPSTATE_CHANGE_ROUTINE, context : Void*, registration : APPSTATE_REGISTRATION**) : UInt32

  # Params # registration : APPSTATE_REGISTRATION* [In]
  fun UnregisterAppStateChangeNotification(registration : APPSTATE_REGISTRATION*) : Void

  # Params # routine : PAPPCONSTRAIN_CHANGE_ROUTINE [In],context : Void* [In],registration : APPCONSTRAIN_REGISTRATION** [In]
  fun RegisterAppConstrainedChangeNotification(routine : PAPPCONSTRAIN_CHANGE_ROUTINE, context : Void*, registration : APPCONSTRAIN_REGISTRATION**) : UInt32

  # Params # registration : APPCONSTRAIN_REGISTRATION* [In]
  fun UnregisterAppConstrainedChangeNotification(registration : APPCONSTRAIN_REGISTRATION*) : Void
end
struct LibWin32::INotifyReplica
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def you_are_a_replica(ulcotherreplicas : UInt32, rgpmkotherreplicas : IMoniker*) : HRESULT
    @lpVtbl.value.you_are_a_replica.unsafe_as(Proc(UInt32, IMoniker*, HRESULT)).call(ulcotherreplicas, rgpmkotherreplicas)
  end
end
struct LibWin32::IContextMenu
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def query_context_menu(hmenu : LibC::HANDLE, indexmenu : UInt32, idcmdfirst : UInt32, idcmdlast : UInt32, uflags : UInt32) : HRESULT
    @lpVtbl.value.query_context_menu.unsafe_as(Proc(LibC::HANDLE, UInt32, UInt32, UInt32, UInt32, HRESULT)).call(hmenu, indexmenu, idcmdfirst, idcmdlast, uflags)
  end
  def invoke_command(pici : CMINVOKECOMMANDINFO*) : HRESULT
    @lpVtbl.value.invoke_command.unsafe_as(Proc(CMINVOKECOMMANDINFO*, HRESULT)).call(pici)
  end
  def get_command_string(idcmd : LibC::UINT_PTR, utype : UInt32, preserved : UInt32*, pszname : PSTR, cchmax : UInt32) : HRESULT
    @lpVtbl.value.get_command_string.unsafe_as(Proc(LibC::UINT_PTR, UInt32, UInt32*, PSTR, UInt32, HRESULT)).call(idcmd, utype, preserved, pszname, cchmax)
  end
end
struct LibWin32::IContextMenu2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def query_context_menu(hmenu : LibC::HANDLE, indexmenu : UInt32, idcmdfirst : UInt32, idcmdlast : UInt32, uflags : UInt32) : HRESULT
    @lpVtbl.value.query_context_menu.unsafe_as(Proc(LibC::HANDLE, UInt32, UInt32, UInt32, UInt32, HRESULT)).call(hmenu, indexmenu, idcmdfirst, idcmdlast, uflags)
  end
  def invoke_command(pici : CMINVOKECOMMANDINFO*) : HRESULT
    @lpVtbl.value.invoke_command.unsafe_as(Proc(CMINVOKECOMMANDINFO*, HRESULT)).call(pici)
  end
  def get_command_string(idcmd : LibC::UINT_PTR, utype : UInt32, preserved : UInt32*, pszname : PSTR, cchmax : UInt32) : HRESULT
    @lpVtbl.value.get_command_string.unsafe_as(Proc(LibC::UINT_PTR, UInt32, UInt32*, PSTR, UInt32, HRESULT)).call(idcmd, utype, preserved, pszname, cchmax)
  end
  def handle_menu_msg(umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : HRESULT
    @lpVtbl.value.handle_menu_msg.unsafe_as(Proc(UInt32, LibC::UINT_PTR, LPARAM, HRESULT)).call(umsg, wparam, lparam)
  end
end
struct LibWin32::IContextMenu3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def query_context_menu(hmenu : LibC::HANDLE, indexmenu : UInt32, idcmdfirst : UInt32, idcmdlast : UInt32, uflags : UInt32) : HRESULT
    @lpVtbl.value.query_context_menu.unsafe_as(Proc(LibC::HANDLE, UInt32, UInt32, UInt32, UInt32, HRESULT)).call(hmenu, indexmenu, idcmdfirst, idcmdlast, uflags)
  end
  def invoke_command(pici : CMINVOKECOMMANDINFO*) : HRESULT
    @lpVtbl.value.invoke_command.unsafe_as(Proc(CMINVOKECOMMANDINFO*, HRESULT)).call(pici)
  end
  def get_command_string(idcmd : LibC::UINT_PTR, utype : UInt32, preserved : UInt32*, pszname : PSTR, cchmax : UInt32) : HRESULT
    @lpVtbl.value.get_command_string.unsafe_as(Proc(LibC::UINT_PTR, UInt32, UInt32*, PSTR, UInt32, HRESULT)).call(idcmd, utype, preserved, pszname, cchmax)
  end
  def handle_menu_msg(umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : HRESULT
    @lpVtbl.value.handle_menu_msg.unsafe_as(Proc(UInt32, LibC::UINT_PTR, LPARAM, HRESULT)).call(umsg, wparam, lparam)
  end
  def handle_menu_msg2(umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM, plresult : LRESULT*) : HRESULT
    @lpVtbl.value.handle_menu_msg2.unsafe_as(Proc(UInt32, LibC::UINT_PTR, LPARAM, LRESULT*, HRESULT)).call(umsg, wparam, lparam, plresult)
  end
end
struct LibWin32::IExecuteCommand
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_key_state(grfkeystate : UInt32) : HRESULT
    @lpVtbl.value.set_key_state.unsafe_as(Proc(UInt32, HRESULT)).call(grfkeystate)
  end
  def set_parameters(pszparameters : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_parameters.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszparameters)
  end
  def set_position(pt : POINT) : HRESULT
    @lpVtbl.value.set_position.unsafe_as(Proc(POINT, HRESULT)).call(pt)
  end
  def set_show_window(nshow : Int32) : HRESULT
    @lpVtbl.value.set_show_window.unsafe_as(Proc(Int32, HRESULT)).call(nshow)
  end
  def set_no_show_ui(fnoshowui : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_no_show_ui.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fnoshowui)
  end
  def set_directory(pszdirectory : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_directory.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszdirectory)
  end
  def execute : HRESULT
    @lpVtbl.value.execute.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IPersistFolder
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_class_id(pclassid : Guid*) : HRESULT
    @lpVtbl.value.get_class_id.unsafe_as(Proc(Guid*, HRESULT)).call(pclassid)
  end
  def initialize(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
end
struct LibWin32::IRunnableTask
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def run : HRESULT
    @lpVtbl.value.run.unsafe_as(Proc(HRESULT)).call
  end
  def kill(bwait : LibC::BOOL) : HRESULT
    @lpVtbl.value.kill.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(bwait)
  end
  def suspend : HRESULT
    @lpVtbl.value.suspend.unsafe_as(Proc(HRESULT)).call
  end
  def resume : HRESULT
    @lpVtbl.value.resume.unsafe_as(Proc(HRESULT)).call
  end
  def is_running : UInt32
    @lpVtbl.value.is_running.unsafe_as(Proc(UInt32)).call
  end
end
struct LibWin32::IShellTaskScheduler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_task(prt : IRunnableTask, rtoid : Guid*, lparam : LibC::UINT_PTR, dwpriority : UInt32) : HRESULT
    @lpVtbl.value.add_task.unsafe_as(Proc(IRunnableTask, Guid*, LibC::UINT_PTR, UInt32, HRESULT)).call(prt, rtoid, lparam, dwpriority)
  end
  def remove_tasks(rtoid : Guid*, lparam : LibC::UINT_PTR, bwaitifrunning : LibC::BOOL) : HRESULT
    @lpVtbl.value.remove_tasks.unsafe_as(Proc(Guid*, LibC::UINT_PTR, LibC::BOOL, HRESULT)).call(rtoid, lparam, bwaitifrunning)
  end
  def count_tasks(rtoid : Guid*) : UInt32
    @lpVtbl.value.count_tasks.unsafe_as(Proc(Guid*, UInt32)).call(rtoid)
  end
  def status(dwreleasestatus : UInt32, dwthreadtimeout : UInt32) : HRESULT
    @lpVtbl.value.status.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwreleasestatus, dwthreadtimeout)
  end
end
struct LibWin32::IPersistFolder2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_class_id(pclassid : Guid*) : HRESULT
    @lpVtbl.value.get_class_id.unsafe_as(Proc(Guid*, HRESULT)).call(pclassid)
  end
  def initialize(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def get_cur_folder(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_cur_folder.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
end
struct LibWin32::IPersistFolder3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_class_id(pclassid : Guid*) : HRESULT
    @lpVtbl.value.get_class_id.unsafe_as(Proc(Guid*, HRESULT)).call(pclassid)
  end
  def initialize(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def get_cur_folder(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_cur_folder.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def initialize_ex(pbc : IBindCtx, pidlroot : ITEMIDLIST*, ppfti : PERSIST_FOLDER_TARGET_INFO*) : HRESULT
    @lpVtbl.value.initialize_ex.unsafe_as(Proc(IBindCtx, ITEMIDLIST*, PERSIST_FOLDER_TARGET_INFO*, HRESULT)).call(pbc, pidlroot, ppfti)
  end
  def get_folder_target_info(ppfti : PERSIST_FOLDER_TARGET_INFO*) : HRESULT
    @lpVtbl.value.get_folder_target_info.unsafe_as(Proc(PERSIST_FOLDER_TARGET_INFO*, HRESULT)).call(ppfti)
  end
end
struct LibWin32::IPersistIDList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_class_id(pclassid : Guid*) : HRESULT
    @lpVtbl.value.get_class_id.unsafe_as(Proc(Guid*, HRESULT)).call(pclassid)
  end
  def set_id_list(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.set_id_list.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def get_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
end
struct LibWin32::IEnumIDList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : ITEMIDLIST**, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, ITEMIDLIST**, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumIDList*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumIDList*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::IEnumFullIDList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : ITEMIDLIST**, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, ITEMIDLIST**, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumFullIDList*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumFullIDList*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::IFileSyncMergeHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def merge(localfilepath : LibC::LPWSTR, serverfilepath : LibC::LPWSTR, updatestatus : MERGE_UPDATE_STATUS*) : HRESULT
    @lpVtbl.value.merge.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, MERGE_UPDATE_STATUS*, HRESULT)).call(localfilepath, serverfilepath, updatestatus)
  end
  def show_resolve_conflict_ui_async(localfilepath : LibC::LPWSTR, monitortodisplayon : HMONITOR) : HRESULT
    @lpVtbl.value.show_resolve_conflict_ui_async.unsafe_as(Proc(LibC::LPWSTR, HMONITOR, HRESULT)).call(localfilepath, monitortodisplayon)
  end
end
struct LibWin32::IObjectWithFolderEnumMode
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_mode(femode : FOLDER_ENUM_MODE) : HRESULT
    @lpVtbl.value.set_mode.unsafe_as(Proc(FOLDER_ENUM_MODE, HRESULT)).call(femode)
  end
  def get_mode(pfemode : FOLDER_ENUM_MODE*) : HRESULT
    @lpVtbl.value.get_mode.unsafe_as(Proc(FOLDER_ENUM_MODE*, HRESULT)).call(pfemode)
  end
end
struct LibWin32::IParseAndCreateItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_item(psi : IShellItem) : HRESULT
    @lpVtbl.value.set_item.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def get_item(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
end
struct LibWin32::IShellFolder
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def parse_display_name(hwnd : LibC::HANDLE, pbc : IBindCtx, pszdisplayname : LibC::LPWSTR, pcheaten : UInt32*, ppidl : ITEMIDLIST**, pdwattributes : UInt32*) : HRESULT
    @lpVtbl.value.parse_display_name.unsafe_as(Proc(LibC::HANDLE, IBindCtx, LibC::LPWSTR, UInt32*, ITEMIDLIST**, UInt32*, HRESULT)).call(hwnd, pbc, pszdisplayname, pcheaten, ppidl, pdwattributes)
  end
  def enum_objects(hwnd : LibC::HANDLE, grfflags : UInt32, ppenumidlist : IEnumIDList*) : HRESULT
    @lpVtbl.value.enum_objects.unsafe_as(Proc(LibC::HANDLE, UInt32, IEnumIDList*, HRESULT)).call(hwnd, grfflags, ppenumidlist)
  end
  def bind_to_object(pidl : ITEMIDLIST*, pbc : IBindCtx, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.bind_to_object.unsafe_as(Proc(ITEMIDLIST*, IBindCtx, Guid*, Void**, HRESULT)).call(pidl, pbc, riid, ppv)
  end
  def bind_to_storage(pidl : ITEMIDLIST*, pbc : IBindCtx, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.bind_to_storage.unsafe_as(Proc(ITEMIDLIST*, IBindCtx, Guid*, Void**, HRESULT)).call(pidl, pbc, riid, ppv)
  end
  def compare_i_ds(lparam : LPARAM, pidl1 : ITEMIDLIST*, pidl2 : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.compare_i_ds.unsafe_as(Proc(LPARAM, ITEMIDLIST*, ITEMIDLIST*, HRESULT)).call(lparam, pidl1, pidl2)
  end
  def create_view_object(hwndowner : LibC::HANDLE, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.create_view_object.unsafe_as(Proc(LibC::HANDLE, Guid*, Void**, HRESULT)).call(hwndowner, riid, ppv)
  end
  def get_attributes_of(cidl : UInt32, apidl : ITEMIDLIST**, rgfinout : UInt32*) : HRESULT
    @lpVtbl.value.get_attributes_of.unsafe_as(Proc(UInt32, ITEMIDLIST**, UInt32*, HRESULT)).call(cidl, apidl, rgfinout)
  end
  def get_ui_object_of(hwndowner : LibC::HANDLE, cidl : UInt32, apidl : ITEMIDLIST**, riid : Guid*, rgfreserved : UInt32*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_ui_object_of.unsafe_as(Proc(LibC::HANDLE, UInt32, ITEMIDLIST**, Guid*, UInt32*, Void**, HRESULT)).call(hwndowner, cidl, apidl, riid, rgfreserved, ppv)
  end
  def get_display_name_of(pidl : ITEMIDLIST*, uflags : UInt32, pname : STRRET*) : HRESULT
    @lpVtbl.value.get_display_name_of.unsafe_as(Proc(ITEMIDLIST*, UInt32, STRRET*, HRESULT)).call(pidl, uflags, pname)
  end
  def set_name_of(hwnd : LibC::HANDLE, pidl : ITEMIDLIST*, pszname : LibC::LPWSTR, uflags : UInt32, ppidlout : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.set_name_of.unsafe_as(Proc(LibC::HANDLE, ITEMIDLIST*, LibC::LPWSTR, UInt32, ITEMIDLIST**, HRESULT)).call(hwnd, pidl, pszname, uflags, ppidlout)
  end
end
struct LibWin32::IEnumExtraSearch
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : EXTRASEARCH*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, EXTRASEARCH*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumExtraSearch*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumExtraSearch*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::IShellFolder2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def parse_display_name(hwnd : LibC::HANDLE, pbc : IBindCtx, pszdisplayname : LibC::LPWSTR, pcheaten : UInt32*, ppidl : ITEMIDLIST**, pdwattributes : UInt32*) : HRESULT
    @lpVtbl.value.parse_display_name.unsafe_as(Proc(LibC::HANDLE, IBindCtx, LibC::LPWSTR, UInt32*, ITEMIDLIST**, UInt32*, HRESULT)).call(hwnd, pbc, pszdisplayname, pcheaten, ppidl, pdwattributes)
  end
  def enum_objects(hwnd : LibC::HANDLE, grfflags : UInt32, ppenumidlist : IEnumIDList*) : HRESULT
    @lpVtbl.value.enum_objects.unsafe_as(Proc(LibC::HANDLE, UInt32, IEnumIDList*, HRESULT)).call(hwnd, grfflags, ppenumidlist)
  end
  def bind_to_object(pidl : ITEMIDLIST*, pbc : IBindCtx, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.bind_to_object.unsafe_as(Proc(ITEMIDLIST*, IBindCtx, Guid*, Void**, HRESULT)).call(pidl, pbc, riid, ppv)
  end
  def bind_to_storage(pidl : ITEMIDLIST*, pbc : IBindCtx, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.bind_to_storage.unsafe_as(Proc(ITEMIDLIST*, IBindCtx, Guid*, Void**, HRESULT)).call(pidl, pbc, riid, ppv)
  end
  def compare_i_ds(lparam : LPARAM, pidl1 : ITEMIDLIST*, pidl2 : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.compare_i_ds.unsafe_as(Proc(LPARAM, ITEMIDLIST*, ITEMIDLIST*, HRESULT)).call(lparam, pidl1, pidl2)
  end
  def create_view_object(hwndowner : LibC::HANDLE, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.create_view_object.unsafe_as(Proc(LibC::HANDLE, Guid*, Void**, HRESULT)).call(hwndowner, riid, ppv)
  end
  def get_attributes_of(cidl : UInt32, apidl : ITEMIDLIST**, rgfinout : UInt32*) : HRESULT
    @lpVtbl.value.get_attributes_of.unsafe_as(Proc(UInt32, ITEMIDLIST**, UInt32*, HRESULT)).call(cidl, apidl, rgfinout)
  end
  def get_ui_object_of(hwndowner : LibC::HANDLE, cidl : UInt32, apidl : ITEMIDLIST**, riid : Guid*, rgfreserved : UInt32*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_ui_object_of.unsafe_as(Proc(LibC::HANDLE, UInt32, ITEMIDLIST**, Guid*, UInt32*, Void**, HRESULT)).call(hwndowner, cidl, apidl, riid, rgfreserved, ppv)
  end
  def get_display_name_of(pidl : ITEMIDLIST*, uflags : UInt32, pname : STRRET*) : HRESULT
    @lpVtbl.value.get_display_name_of.unsafe_as(Proc(ITEMIDLIST*, UInt32, STRRET*, HRESULT)).call(pidl, uflags, pname)
  end
  def set_name_of(hwnd : LibC::HANDLE, pidl : ITEMIDLIST*, pszname : LibC::LPWSTR, uflags : UInt32, ppidlout : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.set_name_of.unsafe_as(Proc(LibC::HANDLE, ITEMIDLIST*, LibC::LPWSTR, UInt32, ITEMIDLIST**, HRESULT)).call(hwnd, pidl, pszname, uflags, ppidlout)
  end
  def get_default_search_guid(pguid : Guid*) : HRESULT
    @lpVtbl.value.get_default_search_guid.unsafe_as(Proc(Guid*, HRESULT)).call(pguid)
  end
  def enum_searches(ppenum : IEnumExtraSearch*) : HRESULT
    @lpVtbl.value.enum_searches.unsafe_as(Proc(IEnumExtraSearch*, HRESULT)).call(ppenum)
  end
  def get_default_column(dwres : UInt32, psort : UInt32*, pdisplay : UInt32*) : HRESULT
    @lpVtbl.value.get_default_column.unsafe_as(Proc(UInt32, UInt32*, UInt32*, HRESULT)).call(dwres, psort, pdisplay)
  end
  def get_default_column_state(icolumn : UInt32, pcsflags : UInt32*) : HRESULT
    @lpVtbl.value.get_default_column_state.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(icolumn, pcsflags)
  end
  def get_details_ex(pidl : ITEMIDLIST*, pscid : PROPERTYKEY*, pv : VARIANT*) : HRESULT
    @lpVtbl.value.get_details_ex.unsafe_as(Proc(ITEMIDLIST*, PROPERTYKEY*, VARIANT*, HRESULT)).call(pidl, pscid, pv)
  end
  def get_details_of(pidl : ITEMIDLIST*, icolumn : UInt32, psd : SHELLDETAILS*) : HRESULT
    @lpVtbl.value.get_details_of.unsafe_as(Proc(ITEMIDLIST*, UInt32, SHELLDETAILS*, HRESULT)).call(pidl, icolumn, psd)
  end
  def map_column_to_scid(icolumn : UInt32, pscid : PROPERTYKEY*) : HRESULT
    @lpVtbl.value.map_column_to_scid.unsafe_as(Proc(UInt32, PROPERTYKEY*, HRESULT)).call(icolumn, pscid)
  end
end
struct LibWin32::IShellView
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def translate_accelerator(pmsg : MSG*) : HRESULT
    @lpVtbl.value.translate_accelerator.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
  def enable_modeless(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable_modeless.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
  def ui_activate(ustate : UInt32) : HRESULT
    @lpVtbl.value.ui_activate.unsafe_as(Proc(UInt32, HRESULT)).call(ustate)
  end
  def refresh : HRESULT
    @lpVtbl.value.refresh.unsafe_as(Proc(HRESULT)).call
  end
  def create_view_window(psvprevious : IShellView, pfs : FOLDERSETTINGS*, psb : IShellBrowser, prcview : RECT*, phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.create_view_window.unsafe_as(Proc(IShellView, FOLDERSETTINGS*, IShellBrowser, RECT*, HANDLE*, HRESULT)).call(psvprevious, pfs, psb, prcview, phwnd)
  end
  def destroy_view_window : HRESULT
    @lpVtbl.value.destroy_view_window.unsafe_as(Proc(HRESULT)).call
  end
  def get_current_info(pfs : FOLDERSETTINGS*) : HRESULT
    @lpVtbl.value.get_current_info.unsafe_as(Proc(FOLDERSETTINGS*, HRESULT)).call(pfs)
  end
  def add_property_sheet_pages(dwreserved : UInt32, pfn : LPFNSVADDPROPSHEETPAGE, lparam : LPARAM) : HRESULT
    @lpVtbl.value.add_property_sheet_pages.unsafe_as(Proc(UInt32, LPFNSVADDPROPSHEETPAGE, LPARAM, HRESULT)).call(dwreserved, pfn, lparam)
  end
  def save_view_state : HRESULT
    @lpVtbl.value.save_view_state.unsafe_as(Proc(HRESULT)).call
  end
  def select_item(pidlitem : ITEMIDLIST*, uflags : UInt32) : HRESULT
    @lpVtbl.value.select_item.unsafe_as(Proc(ITEMIDLIST*, UInt32, HRESULT)).call(pidlitem, uflags)
  end
  def get_item_object(uitem : UInt32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_item_object.unsafe_as(Proc(UInt32, Guid*, Void**, HRESULT)).call(uitem, riid, ppv)
  end
end
struct LibWin32::IShellView2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def translate_accelerator(pmsg : MSG*) : HRESULT
    @lpVtbl.value.translate_accelerator.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
  def enable_modeless(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable_modeless.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
  def ui_activate(ustate : UInt32) : HRESULT
    @lpVtbl.value.ui_activate.unsafe_as(Proc(UInt32, HRESULT)).call(ustate)
  end
  def refresh : HRESULT
    @lpVtbl.value.refresh.unsafe_as(Proc(HRESULT)).call
  end
  def create_view_window(psvprevious : IShellView, pfs : FOLDERSETTINGS*, psb : IShellBrowser, prcview : RECT*, phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.create_view_window.unsafe_as(Proc(IShellView, FOLDERSETTINGS*, IShellBrowser, RECT*, HANDLE*, HRESULT)).call(psvprevious, pfs, psb, prcview, phwnd)
  end
  def destroy_view_window : HRESULT
    @lpVtbl.value.destroy_view_window.unsafe_as(Proc(HRESULT)).call
  end
  def get_current_info(pfs : FOLDERSETTINGS*) : HRESULT
    @lpVtbl.value.get_current_info.unsafe_as(Proc(FOLDERSETTINGS*, HRESULT)).call(pfs)
  end
  def add_property_sheet_pages(dwreserved : UInt32, pfn : LPFNSVADDPROPSHEETPAGE, lparam : LPARAM) : HRESULT
    @lpVtbl.value.add_property_sheet_pages.unsafe_as(Proc(UInt32, LPFNSVADDPROPSHEETPAGE, LPARAM, HRESULT)).call(dwreserved, pfn, lparam)
  end
  def save_view_state : HRESULT
    @lpVtbl.value.save_view_state.unsafe_as(Proc(HRESULT)).call
  end
  def select_item(pidlitem : ITEMIDLIST*, uflags : UInt32) : HRESULT
    @lpVtbl.value.select_item.unsafe_as(Proc(ITEMIDLIST*, UInt32, HRESULT)).call(pidlitem, uflags)
  end
  def get_item_object(uitem : UInt32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_item_object.unsafe_as(Proc(UInt32, Guid*, Void**, HRESULT)).call(uitem, riid, ppv)
  end
  def get_view(pvid : Guid*, uview : UInt32) : HRESULT
    @lpVtbl.value.get_view.unsafe_as(Proc(Guid*, UInt32, HRESULT)).call(pvid, uview)
  end
  def create_view_window2(lpparams : SV2CVW2_PARAMS*) : HRESULT
    @lpVtbl.value.create_view_window2.unsafe_as(Proc(SV2CVW2_PARAMS*, HRESULT)).call(lpparams)
  end
  def handle_rename(pidlnew : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.handle_rename.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidlnew)
  end
  def select_and_position_item(pidlitem : ITEMIDLIST*, uflags : UInt32, ppt : POINT*) : HRESULT
    @lpVtbl.value.select_and_position_item.unsafe_as(Proc(ITEMIDLIST*, UInt32, POINT*, HRESULT)).call(pidlitem, uflags, ppt)
  end
end
struct LibWin32::IFolderView
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_current_view_mode(pviewmode : UInt32*) : HRESULT
    @lpVtbl.value.get_current_view_mode.unsafe_as(Proc(UInt32*, HRESULT)).call(pviewmode)
  end
  def set_current_view_mode(viewmode : UInt32) : HRESULT
    @lpVtbl.value.set_current_view_mode.unsafe_as(Proc(UInt32, HRESULT)).call(viewmode)
  end
  def get_folder(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
  def item(iitemindex : Int32, ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, ITEMIDLIST**, HRESULT)).call(iitemindex, ppidl)
  end
  def item_count(uflags : UInt32, pcitems : Int32*) : HRESULT
    @lpVtbl.value.item_count.unsafe_as(Proc(UInt32, Int32*, HRESULT)).call(uflags, pcitems)
  end
  def items(uflags : UInt32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.items.unsafe_as(Proc(UInt32, Guid*, Void**, HRESULT)).call(uflags, riid, ppv)
  end
  def get_selection_marked_item(piitem : Int32*) : HRESULT
    @lpVtbl.value.get_selection_marked_item.unsafe_as(Proc(Int32*, HRESULT)).call(piitem)
  end
  def get_focused_item(piitem : Int32*) : HRESULT
    @lpVtbl.value.get_focused_item.unsafe_as(Proc(Int32*, HRESULT)).call(piitem)
  end
  def get_item_position(pidl : ITEMIDLIST*, ppt : POINT*) : HRESULT
    @lpVtbl.value.get_item_position.unsafe_as(Proc(ITEMIDLIST*, POINT*, HRESULT)).call(pidl, ppt)
  end
  def get_spacing(ppt : POINT*) : HRESULT
    @lpVtbl.value.get_spacing.unsafe_as(Proc(POINT*, HRESULT)).call(ppt)
  end
  def get_default_spacing(ppt : POINT*) : HRESULT
    @lpVtbl.value.get_default_spacing.unsafe_as(Proc(POINT*, HRESULT)).call(ppt)
  end
  def get_auto_arrange : HRESULT
    @lpVtbl.value.get_auto_arrange.unsafe_as(Proc(HRESULT)).call
  end
  def select_item(iitem : Int32, dwflags : UInt32) : HRESULT
    @lpVtbl.value.select_item.unsafe_as(Proc(Int32, UInt32, HRESULT)).call(iitem, dwflags)
  end
  def select_and_position_items(cidl : UInt32, apidl : ITEMIDLIST**, apt : POINT*, dwflags : UInt32) : HRESULT
    @lpVtbl.value.select_and_position_items.unsafe_as(Proc(UInt32, ITEMIDLIST**, POINT*, UInt32, HRESULT)).call(cidl, apidl, apt, dwflags)
  end
end
struct LibWin32::IFolderView2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_current_view_mode(pviewmode : UInt32*) : HRESULT
    @lpVtbl.value.get_current_view_mode.unsafe_as(Proc(UInt32*, HRESULT)).call(pviewmode)
  end
  def set_current_view_mode(viewmode : UInt32) : HRESULT
    @lpVtbl.value.set_current_view_mode.unsafe_as(Proc(UInt32, HRESULT)).call(viewmode)
  end
  def get_folder(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
  def item(iitemindex : Int32, ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(Int32, ITEMIDLIST**, HRESULT)).call(iitemindex, ppidl)
  end
  def item_count(uflags : UInt32, pcitems : Int32*) : HRESULT
    @lpVtbl.value.item_count.unsafe_as(Proc(UInt32, Int32*, HRESULT)).call(uflags, pcitems)
  end
  def items(uflags : UInt32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.items.unsafe_as(Proc(UInt32, Guid*, Void**, HRESULT)).call(uflags, riid, ppv)
  end
  def get_selection_marked_item(piitem : Int32*) : HRESULT
    @lpVtbl.value.get_selection_marked_item.unsafe_as(Proc(Int32*, HRESULT)).call(piitem)
  end
  def get_focused_item(piitem : Int32*) : HRESULT
    @lpVtbl.value.get_focused_item.unsafe_as(Proc(Int32*, HRESULT)).call(piitem)
  end
  def get_item_position(pidl : ITEMIDLIST*, ppt : POINT*) : HRESULT
    @lpVtbl.value.get_item_position.unsafe_as(Proc(ITEMIDLIST*, POINT*, HRESULT)).call(pidl, ppt)
  end
  def get_spacing(ppt : POINT*) : HRESULT
    @lpVtbl.value.get_spacing.unsafe_as(Proc(POINT*, HRESULT)).call(ppt)
  end
  def get_default_spacing(ppt : POINT*) : HRESULT
    @lpVtbl.value.get_default_spacing.unsafe_as(Proc(POINT*, HRESULT)).call(ppt)
  end
  def get_auto_arrange : HRESULT
    @lpVtbl.value.get_auto_arrange.unsafe_as(Proc(HRESULT)).call
  end
  def select_item(iitem : Int32, dwflags : UInt32) : HRESULT
    @lpVtbl.value.select_item.unsafe_as(Proc(Int32, UInt32, HRESULT)).call(iitem, dwflags)
  end
  def select_and_position_items(cidl : UInt32, apidl : ITEMIDLIST**, apt : POINT*, dwflags : UInt32) : HRESULT
    @lpVtbl.value.select_and_position_items.unsafe_as(Proc(UInt32, ITEMIDLIST**, POINT*, UInt32, HRESULT)).call(cidl, apidl, apt, dwflags)
  end
  def set_group_by(key : PROPERTYKEY*, fascending : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_group_by.unsafe_as(Proc(PROPERTYKEY*, LibC::BOOL, HRESULT)).call(key, fascending)
  end
  def get_group_by(pkey : PROPERTYKEY*, pfascending : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_group_by.unsafe_as(Proc(PROPERTYKEY*, LibC::BOOL*, HRESULT)).call(pkey, pfascending)
  end
  def set_view_property(pidl : ITEMIDLIST*, propkey : PROPERTYKEY*, propvar : PROPVARIANT*) : HRESULT
    @lpVtbl.value.set_view_property.unsafe_as(Proc(ITEMIDLIST*, PROPERTYKEY*, PROPVARIANT*, HRESULT)).call(pidl, propkey, propvar)
  end
  def get_view_property(pidl : ITEMIDLIST*, propkey : PROPERTYKEY*, ppropvar : PROPVARIANT*) : HRESULT
    @lpVtbl.value.get_view_property.unsafe_as(Proc(ITEMIDLIST*, PROPERTYKEY*, PROPVARIANT*, HRESULT)).call(pidl, propkey, ppropvar)
  end
  def set_tile_view_properties(pidl : ITEMIDLIST*, pszproplist : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_tile_view_properties.unsafe_as(Proc(ITEMIDLIST*, LibC::LPWSTR, HRESULT)).call(pidl, pszproplist)
  end
  def set_extended_tile_view_properties(pidl : ITEMIDLIST*, pszproplist : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_extended_tile_view_properties.unsafe_as(Proc(ITEMIDLIST*, LibC::LPWSTR, HRESULT)).call(pidl, pszproplist)
  end
  def set_text(itype : FVTEXTTYPE, pwsztext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_text.unsafe_as(Proc(FVTEXTTYPE, LibC::LPWSTR, HRESULT)).call(itype, pwsztext)
  end
  def set_current_folder_flags(dwmask : UInt32, dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_current_folder_flags.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwmask, dwflags)
  end
  def get_current_folder_flags(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_current_folder_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
  def get_sort_column_count(pccolumns : Int32*) : HRESULT
    @lpVtbl.value.get_sort_column_count.unsafe_as(Proc(Int32*, HRESULT)).call(pccolumns)
  end
  def set_sort_columns(rgsortcolumns : SORTCOLUMN*, ccolumns : Int32) : HRESULT
    @lpVtbl.value.set_sort_columns.unsafe_as(Proc(SORTCOLUMN*, Int32, HRESULT)).call(rgsortcolumns, ccolumns)
  end
  def get_sort_columns(rgsortcolumns : SORTCOLUMN*, ccolumns : Int32) : HRESULT
    @lpVtbl.value.get_sort_columns.unsafe_as(Proc(SORTCOLUMN*, Int32, HRESULT)).call(rgsortcolumns, ccolumns)
  end
  def get_item(iitem : Int32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(Int32, Guid*, Void**, HRESULT)).call(iitem, riid, ppv)
  end
  def get_visible_item(istart : Int32, fprevious : LibC::BOOL, piitem : Int32*) : HRESULT
    @lpVtbl.value.get_visible_item.unsafe_as(Proc(Int32, LibC::BOOL, Int32*, HRESULT)).call(istart, fprevious, piitem)
  end
  def get_selected_item(istart : Int32, piitem : Int32*) : HRESULT
    @lpVtbl.value.get_selected_item.unsafe_as(Proc(Int32, Int32*, HRESULT)).call(istart, piitem)
  end
  def get_selection(fnoneimpliesfolder : LibC::BOOL, ppsia : IShellItemArray*) : HRESULT
    @lpVtbl.value.get_selection.unsafe_as(Proc(LibC::BOOL, IShellItemArray*, HRESULT)).call(fnoneimpliesfolder, ppsia)
  end
  def get_selection_state(pidl : ITEMIDLIST*, pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_selection_state.unsafe_as(Proc(ITEMIDLIST*, UInt32*, HRESULT)).call(pidl, pdwflags)
  end
  def invoke_verb_on_selection(pszverb : PSTR) : HRESULT
    @lpVtbl.value.invoke_verb_on_selection.unsafe_as(Proc(PSTR, HRESULT)).call(pszverb)
  end
  def set_view_mode_and_icon_size(uviewmode : FOLDERVIEWMODE, iimagesize : Int32) : HRESULT
    @lpVtbl.value.set_view_mode_and_icon_size.unsafe_as(Proc(FOLDERVIEWMODE, Int32, HRESULT)).call(uviewmode, iimagesize)
  end
  def get_view_mode_and_icon_size(puviewmode : FOLDERVIEWMODE*, piimagesize : Int32*) : HRESULT
    @lpVtbl.value.get_view_mode_and_icon_size.unsafe_as(Proc(FOLDERVIEWMODE*, Int32*, HRESULT)).call(puviewmode, piimagesize)
  end
  def set_group_subset_count(cvisiblerows : UInt32) : HRESULT
    @lpVtbl.value.set_group_subset_count.unsafe_as(Proc(UInt32, HRESULT)).call(cvisiblerows)
  end
  def get_group_subset_count(pcvisiblerows : UInt32*) : HRESULT
    @lpVtbl.value.get_group_subset_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pcvisiblerows)
  end
  def set_redraw(fredrawon : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_redraw.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fredrawon)
  end
  def is_move_in_same_folder : HRESULT
    @lpVtbl.value.is_move_in_same_folder.unsafe_as(Proc(HRESULT)).call
  end
  def do_rename : HRESULT
    @lpVtbl.value.do_rename.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IFolderViewSettings
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_column_property_list(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_column_property_list.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
  def get_group_by_property(pkey : PROPERTYKEY*, pfgroupascending : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_group_by_property.unsafe_as(Proc(PROPERTYKEY*, LibC::BOOL*, HRESULT)).call(pkey, pfgroupascending)
  end
  def get_view_mode(plvm : FOLDERLOGICALVIEWMODE*) : HRESULT
    @lpVtbl.value.get_view_mode.unsafe_as(Proc(FOLDERLOGICALVIEWMODE*, HRESULT)).call(plvm)
  end
  def get_icon_size(puiconsize : UInt32*) : HRESULT
    @lpVtbl.value.get_icon_size.unsafe_as(Proc(UInt32*, HRESULT)).call(puiconsize)
  end
  def get_folder_flags(pfoldermask : FOLDERFLAGS*, pfolderflags : FOLDERFLAGS*) : HRESULT
    @lpVtbl.value.get_folder_flags.unsafe_as(Proc(FOLDERFLAGS*, FOLDERFLAGS*, HRESULT)).call(pfoldermask, pfolderflags)
  end
  def get_sort_columns(rgsortcolumns : SORTCOLUMN*, ccolumnsin : UInt32, pccolumnsout : UInt32*) : HRESULT
    @lpVtbl.value.get_sort_columns.unsafe_as(Proc(SORTCOLUMN*, UInt32, UInt32*, HRESULT)).call(rgsortcolumns, ccolumnsin, pccolumnsout)
  end
  def get_group_subset_count(pcvisiblerows : UInt32*) : HRESULT
    @lpVtbl.value.get_group_subset_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pcvisiblerows)
  end
end
struct LibWin32::IInitializeNetworkFolder
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(pidl : ITEMIDLIST*, pidltarget : ITEMIDLIST*, udisplaytype : UInt32, pszresname : LibC::LPWSTR, pszprovider : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(ITEMIDLIST*, ITEMIDLIST*, UInt32, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(pidl, pidltarget, udisplaytype, pszresname, pszprovider)
  end
end
struct LibWin32::INetworkFolderInternal
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_resource_display_type(displaytype : UInt32*) : HRESULT
    @lpVtbl.value.get_resource_display_type.unsafe_as(Proc(UInt32*, HRESULT)).call(displaytype)
  end
  def get_id_list(idlist : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(idlist)
  end
  def get_provider(itemidcount : UInt32, itemids : ITEMIDLIST**, providermaxlength : UInt32, provider : Char*) : HRESULT
    @lpVtbl.value.get_provider.unsafe_as(Proc(UInt32, ITEMIDLIST**, UInt32, Char*, HRESULT)).call(itemidcount, itemids, providermaxlength, provider)
  end
end
struct LibWin32::IPreviewHandlerVisuals
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_background_color(color : UInt32) : HRESULT
    @lpVtbl.value.set_background_color.unsafe_as(Proc(UInt32, HRESULT)).call(color)
  end
  def set_font(plf : LOGFONTW*) : HRESULT
    @lpVtbl.value.set_font.unsafe_as(Proc(LOGFONTW*, HRESULT)).call(plf)
  end
  def set_text_color(color : UInt32) : HRESULT
    @lpVtbl.value.set_text_color.unsafe_as(Proc(UInt32, HRESULT)).call(color)
  end
end
struct LibWin32::ICommDlgBrowser
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_default_command(ppshv : IShellView) : HRESULT
    @lpVtbl.value.on_default_command.unsafe_as(Proc(IShellView, HRESULT)).call(ppshv)
  end
  def on_state_change(ppshv : IShellView, uchange : UInt32) : HRESULT
    @lpVtbl.value.on_state_change.unsafe_as(Proc(IShellView, UInt32, HRESULT)).call(ppshv, uchange)
  end
  def include_object(ppshv : IShellView, pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.include_object.unsafe_as(Proc(IShellView, ITEMIDLIST*, HRESULT)).call(ppshv, pidl)
  end
end
struct LibWin32::ICommDlgBrowser2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_default_command(ppshv : IShellView) : HRESULT
    @lpVtbl.value.on_default_command.unsafe_as(Proc(IShellView, HRESULT)).call(ppshv)
  end
  def on_state_change(ppshv : IShellView, uchange : UInt32) : HRESULT
    @lpVtbl.value.on_state_change.unsafe_as(Proc(IShellView, UInt32, HRESULT)).call(ppshv, uchange)
  end
  def include_object(ppshv : IShellView, pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.include_object.unsafe_as(Proc(IShellView, ITEMIDLIST*, HRESULT)).call(ppshv, pidl)
  end
  def notify(ppshv : IShellView, dwnotifytype : UInt32) : HRESULT
    @lpVtbl.value.notify.unsafe_as(Proc(IShellView, UInt32, HRESULT)).call(ppshv, dwnotifytype)
  end
  def get_default_menu_text(ppshv : IShellView, psztext : Char*, cchmax : Int32) : HRESULT
    @lpVtbl.value.get_default_menu_text.unsafe_as(Proc(IShellView, Char*, Int32, HRESULT)).call(ppshv, psztext, cchmax)
  end
  def get_view_flags(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_view_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
end
struct LibWin32::IColumnManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_column_info(propkey : PROPERTYKEY*, pcmci : CM_COLUMNINFO*) : HRESULT
    @lpVtbl.value.set_column_info.unsafe_as(Proc(PROPERTYKEY*, CM_COLUMNINFO*, HRESULT)).call(propkey, pcmci)
  end
  def get_column_info(propkey : PROPERTYKEY*, pcmci : CM_COLUMNINFO*) : HRESULT
    @lpVtbl.value.get_column_info.unsafe_as(Proc(PROPERTYKEY*, CM_COLUMNINFO*, HRESULT)).call(propkey, pcmci)
  end
  def get_column_count(dwflags : CM_ENUM_FLAGS, pucount : UInt32*) : HRESULT
    @lpVtbl.value.get_column_count.unsafe_as(Proc(CM_ENUM_FLAGS, UInt32*, HRESULT)).call(dwflags, pucount)
  end
  def get_columns(dwflags : CM_ENUM_FLAGS, rgkeyorder : PROPERTYKEY*, ccolumns : UInt32) : HRESULT
    @lpVtbl.value.get_columns.unsafe_as(Proc(CM_ENUM_FLAGS, PROPERTYKEY*, UInt32, HRESULT)).call(dwflags, rgkeyorder, ccolumns)
  end
  def set_columns(rgkeyorder : PROPERTYKEY*, cvisible : UInt32) : HRESULT
    @lpVtbl.value.set_columns.unsafe_as(Proc(PROPERTYKEY*, UInt32, HRESULT)).call(rgkeyorder, cvisible)
  end
end
struct LibWin32::IFolderFilterSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_filter(punk : IUnknown) : HRESULT
    @lpVtbl.value.set_filter.unsafe_as(Proc(IUnknown, HRESULT)).call(punk)
  end
end
struct LibWin32::IFolderFilter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def should_show(psf : IShellFolder, pidlfolder : ITEMIDLIST*, pidlitem : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.should_show.unsafe_as(Proc(IShellFolder, ITEMIDLIST*, ITEMIDLIST*, HRESULT)).call(psf, pidlfolder, pidlitem)
  end
  def get_enum_flags(psf : IShellFolder, pidlfolder : ITEMIDLIST*, phwnd : HANDLE*, pgrfflags : UInt32*) : HRESULT
    @lpVtbl.value.get_enum_flags.unsafe_as(Proc(IShellFolder, ITEMIDLIST*, HANDLE*, UInt32*, HRESULT)).call(psf, pidlfolder, phwnd, pgrfflags)
  end
end
struct LibWin32::IInputObjectSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_focus_change_is(punkobj : IUnknown, fsetfocus : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_focus_change_is.unsafe_as(Proc(IUnknown, LibC::BOOL, HRESULT)).call(punkobj, fsetfocus)
  end
end
struct LibWin32::IInputObject
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def ui_activate_io(factivate : LibC::BOOL, pmsg : MSG*) : HRESULT
    @lpVtbl.value.ui_activate_io.unsafe_as(Proc(LibC::BOOL, MSG*, HRESULT)).call(factivate, pmsg)
  end
  def has_focus_io : HRESULT
    @lpVtbl.value.has_focus_io.unsafe_as(Proc(HRESULT)).call
  end
  def translate_accelerator_io(pmsg : MSG*) : HRESULT
    @lpVtbl.value.translate_accelerator_io.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
end
struct LibWin32::IInputObject2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def ui_activate_io(factivate : LibC::BOOL, pmsg : MSG*) : HRESULT
    @lpVtbl.value.ui_activate_io.unsafe_as(Proc(LibC::BOOL, MSG*, HRESULT)).call(factivate, pmsg)
  end
  def has_focus_io : HRESULT
    @lpVtbl.value.has_focus_io.unsafe_as(Proc(HRESULT)).call
  end
  def translate_accelerator_io(pmsg : MSG*) : HRESULT
    @lpVtbl.value.translate_accelerator_io.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
  def translate_accelerator_global(pmsg : MSG*) : HRESULT
    @lpVtbl.value.translate_accelerator_global.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
end
struct LibWin32::IShellIcon
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_icon_of(pidl : ITEMIDLIST*, flags : UInt32, piconindex : Int32*) : HRESULT
    @lpVtbl.value.get_icon_of.unsafe_as(Proc(ITEMIDLIST*, UInt32, Int32*, HRESULT)).call(pidl, flags, piconindex)
  end
end
struct LibWin32::IShellBrowser
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def insert_menus_sb(hmenushared : LibC::HANDLE, lpmenuwidths : OleMenuGroupWidths*) : HRESULT
    @lpVtbl.value.insert_menus_sb.unsafe_as(Proc(LibC::HANDLE, OleMenuGroupWidths*, HRESULT)).call(hmenushared, lpmenuwidths)
  end
  def set_menu_sb(hmenushared : LibC::HANDLE, holemenures : LibC::IntPtrT, hwndactiveobject : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_menu_sb.unsafe_as(Proc(LibC::HANDLE, LibC::IntPtrT, LibC::HANDLE, HRESULT)).call(hmenushared, holemenures, hwndactiveobject)
  end
  def remove_menus_sb(hmenushared : LibC::HANDLE) : HRESULT
    @lpVtbl.value.remove_menus_sb.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hmenushared)
  end
  def set_status_text_sb(pszstatustext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_status_text_sb.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszstatustext)
  end
  def enable_modeless_sb(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable_modeless_sb.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
  def translate_accelerator_sb(pmsg : MSG*, wid : UInt16) : HRESULT
    @lpVtbl.value.translate_accelerator_sb.unsafe_as(Proc(MSG*, UInt16, HRESULT)).call(pmsg, wid)
  end
  def browse_object(pidl : ITEMIDLIST*, wflags : UInt32) : HRESULT
    @lpVtbl.value.browse_object.unsafe_as(Proc(ITEMIDLIST*, UInt32, HRESULT)).call(pidl, wflags)
  end
  def get_view_state_stream(grfmode : UInt32, ppstrm : IStream*) : HRESULT
    @lpVtbl.value.get_view_state_stream.unsafe_as(Proc(UInt32, IStream*, HRESULT)).call(grfmode, ppstrm)
  end
  def get_control_window(id : UInt32, phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_control_window.unsafe_as(Proc(UInt32, HANDLE*, HRESULT)).call(id, phwnd)
  end
  def send_control_msg(id : UInt32, umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM, pret : LRESULT*) : HRESULT
    @lpVtbl.value.send_control_msg.unsafe_as(Proc(UInt32, UInt32, LibC::UINT_PTR, LPARAM, LRESULT*, HRESULT)).call(id, umsg, wparam, lparam, pret)
  end
  def query_active_shell_view(ppshv : IShellView*) : HRESULT
    @lpVtbl.value.query_active_shell_view.unsafe_as(Proc(IShellView*, HRESULT)).call(ppshv)
  end
  def on_view_window_active(pshv : IShellView) : HRESULT
    @lpVtbl.value.on_view_window_active.unsafe_as(Proc(IShellView, HRESULT)).call(pshv)
  end
  def set_toolbar_items(lpbuttons : TBBUTTON*, nbuttons : UInt32, uflags : UInt32) : HRESULT
    @lpVtbl.value.set_toolbar_items.unsafe_as(Proc(TBBUTTON*, UInt32, UInt32, HRESULT)).call(lpbuttons, nbuttons, uflags)
  end
end
struct LibWin32::IProfferService
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def proffer_service(serviceid : Guid*, serviceprovider : IServiceProvider, cookie : UInt32*) : HRESULT
    @lpVtbl.value.proffer_service.unsafe_as(Proc(Guid*, IServiceProvider, UInt32*, HRESULT)).call(serviceid, serviceprovider, cookie)
  end
  def revoke_service(cookie : UInt32) : HRESULT
    @lpVtbl.value.revoke_service.unsafe_as(Proc(UInt32, HRESULT)).call(cookie)
  end
end
struct LibWin32::IGetServiceIds
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_service_ids(serviceidcount : UInt32*, serviceids : Guid**) : HRESULT
    @lpVtbl.value.get_service_ids.unsafe_as(Proc(UInt32*, Guid**, HRESULT)).call(serviceidcount, serviceids)
  end
end
struct LibWin32::IShellItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def bind_to_handler(pbc : IBindCtx, bhid : Guid*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.bind_to_handler.unsafe_as(Proc(IBindCtx, Guid*, Guid*, Void**, HRESULT)).call(pbc, bhid, riid, ppv)
  end
  def get_parent(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def get_display_name(sigdnname : SIGDN, ppszname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_display_name.unsafe_as(Proc(SIGDN, LibC::LPWSTR*, HRESULT)).call(sigdnname, ppszname)
  end
  def get_attributes(sfgaomask : UInt32, psfgaoattribs : UInt32*) : HRESULT
    @lpVtbl.value.get_attributes.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(sfgaomask, psfgaoattribs)
  end
  def compare(psi : IShellItem, hint : UInt32, piorder : Int32*) : HRESULT
    @lpVtbl.value.compare.unsafe_as(Proc(IShellItem, UInt32, Int32*, HRESULT)).call(psi, hint, piorder)
  end
end
struct LibWin32::IShellItem2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def bind_to_handler(pbc : IBindCtx, bhid : Guid*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.bind_to_handler.unsafe_as(Proc(IBindCtx, Guid*, Guid*, Void**, HRESULT)).call(pbc, bhid, riid, ppv)
  end
  def get_parent(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def get_display_name(sigdnname : SIGDN, ppszname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_display_name.unsafe_as(Proc(SIGDN, LibC::LPWSTR*, HRESULT)).call(sigdnname, ppszname)
  end
  def get_attributes(sfgaomask : UInt32, psfgaoattribs : UInt32*) : HRESULT
    @lpVtbl.value.get_attributes.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(sfgaomask, psfgaoattribs)
  end
  def compare(psi : IShellItem, hint : UInt32, piorder : Int32*) : HRESULT
    @lpVtbl.value.compare.unsafe_as(Proc(IShellItem, UInt32, Int32*, HRESULT)).call(psi, hint, piorder)
  end
  def get_property_store(flags : GETPROPERTYSTOREFLAGS, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_property_store.unsafe_as(Proc(GETPROPERTYSTOREFLAGS, Guid*, Void**, HRESULT)).call(flags, riid, ppv)
  end
  def get_property_store_with_create_object(flags : GETPROPERTYSTOREFLAGS, punkcreateobject : IUnknown, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_property_store_with_create_object.unsafe_as(Proc(GETPROPERTYSTOREFLAGS, IUnknown, Guid*, Void**, HRESULT)).call(flags, punkcreateobject, riid, ppv)
  end
  def get_property_store_for_keys(rgkeys : PROPERTYKEY*, ckeys : UInt32, flags : GETPROPERTYSTOREFLAGS, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_property_store_for_keys.unsafe_as(Proc(PROPERTYKEY*, UInt32, GETPROPERTYSTOREFLAGS, Guid*, Void**, HRESULT)).call(rgkeys, ckeys, flags, riid, ppv)
  end
  def get_property_description_list(keytype : PROPERTYKEY*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_property_description_list.unsafe_as(Proc(PROPERTYKEY*, Guid*, Void**, HRESULT)).call(keytype, riid, ppv)
  end
  def update(pbc : IBindCtx) : HRESULT
    @lpVtbl.value.update.unsafe_as(Proc(IBindCtx, HRESULT)).call(pbc)
  end
  def get_property(key : PROPERTYKEY*, ppropvar : PROPVARIANT*) : HRESULT
    @lpVtbl.value.get_property.unsafe_as(Proc(PROPERTYKEY*, PROPVARIANT*, HRESULT)).call(key, ppropvar)
  end
  def get_clsid(key : PROPERTYKEY*, pclsid : Guid*) : HRESULT
    @lpVtbl.value.get_clsid.unsafe_as(Proc(PROPERTYKEY*, Guid*, HRESULT)).call(key, pclsid)
  end
  def get_file_time(key : PROPERTYKEY*, pft : FILETIME*) : HRESULT
    @lpVtbl.value.get_file_time.unsafe_as(Proc(PROPERTYKEY*, FILETIME*, HRESULT)).call(key, pft)
  end
  def get_int32(key : PROPERTYKEY*, pi : Int32*) : HRESULT
    @lpVtbl.value.get_int32.unsafe_as(Proc(PROPERTYKEY*, Int32*, HRESULT)).call(key, pi)
  end
  def get_string(key : PROPERTYKEY*, ppsz : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_string.unsafe_as(Proc(PROPERTYKEY*, LibC::LPWSTR*, HRESULT)).call(key, ppsz)
  end
  def get_u_int32(key : PROPERTYKEY*, pui : UInt32*) : HRESULT
    @lpVtbl.value.get_u_int32.unsafe_as(Proc(PROPERTYKEY*, UInt32*, HRESULT)).call(key, pui)
  end
  def get_u_int64(key : PROPERTYKEY*, pull : UInt64*) : HRESULT
    @lpVtbl.value.get_u_int64.unsafe_as(Proc(PROPERTYKEY*, UInt64*, HRESULT)).call(key, pull)
  end
  def get_bool(key : PROPERTYKEY*, pf : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_bool.unsafe_as(Proc(PROPERTYKEY*, LibC::BOOL*, HRESULT)).call(key, pf)
  end
end
struct LibWin32::IShellItemImageFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_image(size : SIZE, flags : SIIGBF, phbm : HBITMAP*) : HRESULT
    @lpVtbl.value.get_image.unsafe_as(Proc(SIZE, SIIGBF, HBITMAP*, HRESULT)).call(size, flags, phbm)
  end
end
struct LibWin32::IEnumShellItems
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : IShellItem*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, IShellItem*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumShellItems*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumShellItems*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::ITransferAdviseSink
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def update_progress(ullsizecurrent : UInt64, ullsizetotal : UInt64, nfilescurrent : Int32, nfilestotal : Int32, nfolderscurrent : Int32, nfolderstotal : Int32) : HRESULT
    @lpVtbl.value.update_progress.unsafe_as(Proc(UInt64, UInt64, Int32, Int32, Int32, Int32, HRESULT)).call(ullsizecurrent, ullsizetotal, nfilescurrent, nfilestotal, nfolderscurrent, nfolderstotal)
  end
  def update_transfer_state(ts : UInt32) : HRESULT
    @lpVtbl.value.update_transfer_state.unsafe_as(Proc(UInt32, HRESULT)).call(ts)
  end
  def confirm_overwrite(psisource : IShellItem, psidestparent : IShellItem, pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.confirm_overwrite.unsafe_as(Proc(IShellItem, IShellItem, LibC::LPWSTR, HRESULT)).call(psisource, psidestparent, pszname)
  end
  def confirm_encryption_loss(psisource : IShellItem) : HRESULT
    @lpVtbl.value.confirm_encryption_loss.unsafe_as(Proc(IShellItem, HRESULT)).call(psisource)
  end
  def file_failure(psi : IShellItem, pszitem : LibC::LPWSTR, hrerror : HRESULT, pszrename : Char*, cchrename : UInt32) : HRESULT
    @lpVtbl.value.file_failure.unsafe_as(Proc(IShellItem, LibC::LPWSTR, HRESULT, Char*, UInt32, HRESULT)).call(psi, pszitem, hrerror, pszrename, cchrename)
  end
  def sub_stream_failure(psi : IShellItem, pszstreamname : LibC::LPWSTR, hrerror : HRESULT) : HRESULT
    @lpVtbl.value.sub_stream_failure.unsafe_as(Proc(IShellItem, LibC::LPWSTR, HRESULT, HRESULT)).call(psi, pszstreamname, hrerror)
  end
  def property_failure(psi : IShellItem, pkey : PROPERTYKEY*, hrerror : HRESULT) : HRESULT
    @lpVtbl.value.property_failure.unsafe_as(Proc(IShellItem, PROPERTYKEY*, HRESULT, HRESULT)).call(psi, pkey, hrerror)
  end
end
struct LibWin32::ITransferSource
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def advise(psink : ITransferAdviseSink, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(ITransferAdviseSink, UInt32*, HRESULT)).call(psink, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def set_properties(pproparray : IPropertyChangeArray) : HRESULT
    @lpVtbl.value.set_properties.unsafe_as(Proc(IPropertyChangeArray, HRESULT)).call(pproparray)
  end
  def open_item(psi : IShellItem, flags : UInt32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.open_item.unsafe_as(Proc(IShellItem, UInt32, Guid*, Void**, HRESULT)).call(psi, flags, riid, ppv)
  end
  def move_item(psi : IShellItem, psiparentdst : IShellItem, psznamedst : LibC::LPWSTR, flags : UInt32, ppsinew : IShellItem*) : HRESULT
    @lpVtbl.value.move_item.unsafe_as(Proc(IShellItem, IShellItem, LibC::LPWSTR, UInt32, IShellItem*, HRESULT)).call(psi, psiparentdst, psznamedst, flags, ppsinew)
  end
  def recycle_item(psisource : IShellItem, psiparentdest : IShellItem, flags : UInt32, ppsinewdest : IShellItem*) : HRESULT
    @lpVtbl.value.recycle_item.unsafe_as(Proc(IShellItem, IShellItem, UInt32, IShellItem*, HRESULT)).call(psisource, psiparentdest, flags, ppsinewdest)
  end
  def remove_item(psisource : IShellItem, flags : UInt32) : HRESULT
    @lpVtbl.value.remove_item.unsafe_as(Proc(IShellItem, UInt32, HRESULT)).call(psisource, flags)
  end
  def rename_item(psisource : IShellItem, psznewname : LibC::LPWSTR, flags : UInt32, ppsinewdest : IShellItem*) : HRESULT
    @lpVtbl.value.rename_item.unsafe_as(Proc(IShellItem, LibC::LPWSTR, UInt32, IShellItem*, HRESULT)).call(psisource, psznewname, flags, ppsinewdest)
  end
  def link_item(psisource : IShellItem, psiparentdest : IShellItem, psznewname : LibC::LPWSTR, flags : UInt32, ppsinewdest : IShellItem*) : HRESULT
    @lpVtbl.value.link_item.unsafe_as(Proc(IShellItem, IShellItem, LibC::LPWSTR, UInt32, IShellItem*, HRESULT)).call(psisource, psiparentdest, psznewname, flags, ppsinewdest)
  end
  def apply_properties_to_item(psisource : IShellItem, ppsinew : IShellItem*) : HRESULT
    @lpVtbl.value.apply_properties_to_item.unsafe_as(Proc(IShellItem, IShellItem*, HRESULT)).call(psisource, ppsinew)
  end
  def get_default_destination_name(psisource : IShellItem, psiparentdest : IShellItem, ppszdestinationname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_default_destination_name.unsafe_as(Proc(IShellItem, IShellItem, LibC::LPWSTR*, HRESULT)).call(psisource, psiparentdest, ppszdestinationname)
  end
  def enter_folder(psichildfolderdest : IShellItem) : HRESULT
    @lpVtbl.value.enter_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psichildfolderdest)
  end
  def leave_folder(psichildfolderdest : IShellItem) : HRESULT
    @lpVtbl.value.leave_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psichildfolderdest)
  end
end
struct LibWin32::IEnumResources
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, psir : SHELL_ITEM_RESOURCE*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, SHELL_ITEM_RESOURCE*, UInt32*, HRESULT)).call(celt, psir, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenumr : IEnumResources*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumResources*, HRESULT)).call(ppenumr)
  end
end
struct LibWin32::IShellItemResources
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_attributes(pdwattributes : UInt32*) : HRESULT
    @lpVtbl.value.get_attributes.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwattributes)
  end
  def get_size(pullsize : UInt64*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(UInt64*, HRESULT)).call(pullsize)
  end
  def get_times(pftcreation : FILETIME*, pftwrite : FILETIME*, pftaccess : FILETIME*) : HRESULT
    @lpVtbl.value.get_times.unsafe_as(Proc(FILETIME*, FILETIME*, FILETIME*, HRESULT)).call(pftcreation, pftwrite, pftaccess)
  end
  def set_times(pftcreation : FILETIME*, pftwrite : FILETIME*, pftaccess : FILETIME*) : HRESULT
    @lpVtbl.value.set_times.unsafe_as(Proc(FILETIME*, FILETIME*, FILETIME*, HRESULT)).call(pftcreation, pftwrite, pftaccess)
  end
  def get_resource_description(pcsir : SHELL_ITEM_RESOURCE*, ppszdescription : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_resource_description.unsafe_as(Proc(SHELL_ITEM_RESOURCE*, LibC::LPWSTR*, HRESULT)).call(pcsir, ppszdescription)
  end
  def enum_resources(ppenumr : IEnumResources*) : HRESULT
    @lpVtbl.value.enum_resources.unsafe_as(Proc(IEnumResources*, HRESULT)).call(ppenumr)
  end
  def supports_resource(pcsir : SHELL_ITEM_RESOURCE*) : HRESULT
    @lpVtbl.value.supports_resource.unsafe_as(Proc(SHELL_ITEM_RESOURCE*, HRESULT)).call(pcsir)
  end
  def open_resource(pcsir : SHELL_ITEM_RESOURCE*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.open_resource.unsafe_as(Proc(SHELL_ITEM_RESOURCE*, Guid*, Void**, HRESULT)).call(pcsir, riid, ppv)
  end
  def create_resource(pcsir : SHELL_ITEM_RESOURCE*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.create_resource.unsafe_as(Proc(SHELL_ITEM_RESOURCE*, Guid*, Void**, HRESULT)).call(pcsir, riid, ppv)
  end
  def mark_for_delete : HRESULT
    @lpVtbl.value.mark_for_delete.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ITransferDestination
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def advise(psink : ITransferAdviseSink, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(ITransferAdviseSink, UInt32*, HRESULT)).call(psink, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def create_item(pszname : LibC::LPWSTR, dwattributes : UInt32, ullsize : UInt64, flags : UInt32, riiditem : Guid*, ppvitem : Void**, riidresources : Guid*, ppvresources : Void**) : HRESULT
    @lpVtbl.value.create_item.unsafe_as(Proc(LibC::LPWSTR, UInt32, UInt64, UInt32, Guid*, Void**, Guid*, Void**, HRESULT)).call(pszname, dwattributes, ullsize, flags, riiditem, ppvitem, riidresources, ppvresources)
  end
end
struct LibWin32::IFileOperationProgressSink
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def start_operations : HRESULT
    @lpVtbl.value.start_operations.unsafe_as(Proc(HRESULT)).call
  end
  def finish_operations(hrresult : HRESULT) : HRESULT
    @lpVtbl.value.finish_operations.unsafe_as(Proc(HRESULT, HRESULT)).call(hrresult)
  end
  def pre_rename_item(dwflags : UInt32, psiitem : IShellItem, psznewname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.pre_rename_item.unsafe_as(Proc(UInt32, IShellItem, LibC::LPWSTR, HRESULT)).call(dwflags, psiitem, psznewname)
  end
  def post_rename_item(dwflags : UInt32, psiitem : IShellItem, psznewname : LibC::LPWSTR, hrrename : HRESULT, psinewlycreated : IShellItem) : HRESULT
    @lpVtbl.value.post_rename_item.unsafe_as(Proc(UInt32, IShellItem, LibC::LPWSTR, HRESULT, IShellItem, HRESULT)).call(dwflags, psiitem, psznewname, hrrename, psinewlycreated)
  end
  def pre_move_item(dwflags : UInt32, psiitem : IShellItem, psidestinationfolder : IShellItem, psznewname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.pre_move_item.unsafe_as(Proc(UInt32, IShellItem, IShellItem, LibC::LPWSTR, HRESULT)).call(dwflags, psiitem, psidestinationfolder, psznewname)
  end
  def post_move_item(dwflags : UInt32, psiitem : IShellItem, psidestinationfolder : IShellItem, psznewname : LibC::LPWSTR, hrmove : HRESULT, psinewlycreated : IShellItem) : HRESULT
    @lpVtbl.value.post_move_item.unsafe_as(Proc(UInt32, IShellItem, IShellItem, LibC::LPWSTR, HRESULT, IShellItem, HRESULT)).call(dwflags, psiitem, psidestinationfolder, psznewname, hrmove, psinewlycreated)
  end
  def pre_copy_item(dwflags : UInt32, psiitem : IShellItem, psidestinationfolder : IShellItem, psznewname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.pre_copy_item.unsafe_as(Proc(UInt32, IShellItem, IShellItem, LibC::LPWSTR, HRESULT)).call(dwflags, psiitem, psidestinationfolder, psznewname)
  end
  def post_copy_item(dwflags : UInt32, psiitem : IShellItem, psidestinationfolder : IShellItem, psznewname : LibC::LPWSTR, hrcopy : HRESULT, psinewlycreated : IShellItem) : HRESULT
    @lpVtbl.value.post_copy_item.unsafe_as(Proc(UInt32, IShellItem, IShellItem, LibC::LPWSTR, HRESULT, IShellItem, HRESULT)).call(dwflags, psiitem, psidestinationfolder, psznewname, hrcopy, psinewlycreated)
  end
  def pre_delete_item(dwflags : UInt32, psiitem : IShellItem) : HRESULT
    @lpVtbl.value.pre_delete_item.unsafe_as(Proc(UInt32, IShellItem, HRESULT)).call(dwflags, psiitem)
  end
  def post_delete_item(dwflags : UInt32, psiitem : IShellItem, hrdelete : HRESULT, psinewlycreated : IShellItem) : HRESULT
    @lpVtbl.value.post_delete_item.unsafe_as(Proc(UInt32, IShellItem, HRESULT, IShellItem, HRESULT)).call(dwflags, psiitem, hrdelete, psinewlycreated)
  end
  def pre_new_item(dwflags : UInt32, psidestinationfolder : IShellItem, psznewname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.pre_new_item.unsafe_as(Proc(UInt32, IShellItem, LibC::LPWSTR, HRESULT)).call(dwflags, psidestinationfolder, psznewname)
  end
  def post_new_item(dwflags : UInt32, psidestinationfolder : IShellItem, psznewname : LibC::LPWSTR, psztemplatename : LibC::LPWSTR, dwfileattributes : UInt32, hrnew : HRESULT, psinewitem : IShellItem) : HRESULT
    @lpVtbl.value.post_new_item.unsafe_as(Proc(UInt32, IShellItem, LibC::LPWSTR, LibC::LPWSTR, UInt32, HRESULT, IShellItem, HRESULT)).call(dwflags, psidestinationfolder, psznewname, psztemplatename, dwfileattributes, hrnew, psinewitem)
  end
  def update_progress(iworktotal : UInt32, iworksofar : UInt32) : HRESULT
    @lpVtbl.value.update_progress.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(iworktotal, iworksofar)
  end
  def reset_timer : HRESULT
    @lpVtbl.value.reset_timer.unsafe_as(Proc(HRESULT)).call
  end
  def pause_timer : HRESULT
    @lpVtbl.value.pause_timer.unsafe_as(Proc(HRESULT)).call
  end
  def resume_timer : HRESULT
    @lpVtbl.value.resume_timer.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IShellItemArray
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def bind_to_handler(pbc : IBindCtx, bhid : Guid*, riid : Guid*, ppvout : Void**) : HRESULT
    @lpVtbl.value.bind_to_handler.unsafe_as(Proc(IBindCtx, Guid*, Guid*, Void**, HRESULT)).call(pbc, bhid, riid, ppvout)
  end
  def get_property_store(flags : GETPROPERTYSTOREFLAGS, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_property_store.unsafe_as(Proc(GETPROPERTYSTOREFLAGS, Guid*, Void**, HRESULT)).call(flags, riid, ppv)
  end
  def get_property_description_list(keytype : PROPERTYKEY*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_property_description_list.unsafe_as(Proc(PROPERTYKEY*, Guid*, Void**, HRESULT)).call(keytype, riid, ppv)
  end
  def get_attributes(attribflags : SIATTRIBFLAGS, sfgaomask : UInt32, psfgaoattribs : UInt32*) : HRESULT
    @lpVtbl.value.get_attributes.unsafe_as(Proc(SIATTRIBFLAGS, UInt32, UInt32*, HRESULT)).call(attribflags, sfgaomask, psfgaoattribs)
  end
  def get_count(pdwnumitems : UInt32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwnumitems)
  end
  def get_item_at(dwindex : UInt32, ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_item_at.unsafe_as(Proc(UInt32, IShellItem*, HRESULT)).call(dwindex, ppsi)
  end
  def enum_items(ppenumshellitems : IEnumShellItems*) : HRESULT
    @lpVtbl.value.enum_items.unsafe_as(Proc(IEnumShellItems*, HRESULT)).call(ppenumshellitems)
  end
end
struct LibWin32::IInitializeWithItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(psi : IShellItem, grfmode : UInt32) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(IShellItem, UInt32, HRESULT)).call(psi, grfmode)
  end
end
struct LibWin32::IObjectWithSelection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_selection(psia : IShellItemArray) : HRESULT
    @lpVtbl.value.set_selection.unsafe_as(Proc(IShellItemArray, HRESULT)).call(psia)
  end
  def get_selection(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_selection.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
end
struct LibWin32::IObjectWithBackReferences
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def remove_back_references : HRESULT
    @lpVtbl.value.remove_back_references.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ICategoryProvider
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def can_categorize_on_scid(pscid : PROPERTYKEY*) : HRESULT
    @lpVtbl.value.can_categorize_on_scid.unsafe_as(Proc(PROPERTYKEY*, HRESULT)).call(pscid)
  end
  def get_default_category(pguid : Guid*, pscid : PROPERTYKEY*) : HRESULT
    @lpVtbl.value.get_default_category.unsafe_as(Proc(Guid*, PROPERTYKEY*, HRESULT)).call(pguid, pscid)
  end
  def get_category_for_scid(pscid : PROPERTYKEY*, pguid : Guid*) : HRESULT
    @lpVtbl.value.get_category_for_scid.unsafe_as(Proc(PROPERTYKEY*, Guid*, HRESULT)).call(pscid, pguid)
  end
  def enum_categories(penum : IEnumGUID*) : HRESULT
    @lpVtbl.value.enum_categories.unsafe_as(Proc(IEnumGUID*, HRESULT)).call(penum)
  end
  def get_category_name(pguid : Guid*, pszname : Char*, cch : UInt32) : HRESULT
    @lpVtbl.value.get_category_name.unsafe_as(Proc(Guid*, Char*, UInt32, HRESULT)).call(pguid, pszname, cch)
  end
  def create_category(pguid : Guid*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.create_category.unsafe_as(Proc(Guid*, Guid*, Void**, HRESULT)).call(pguid, riid, ppv)
  end
end
struct LibWin32::ICategorizer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_description(pszdesc : Char*, cch : UInt32) : HRESULT
    @lpVtbl.value.get_description.unsafe_as(Proc(Char*, UInt32, HRESULT)).call(pszdesc, cch)
  end
  def get_category(cidl : UInt32, apidl : ITEMIDLIST**, rgcategoryids : UInt32*) : HRESULT
    @lpVtbl.value.get_category.unsafe_as(Proc(UInt32, ITEMIDLIST**, UInt32*, HRESULT)).call(cidl, apidl, rgcategoryids)
  end
  def get_category_info(dwcategoryid : UInt32, pci : CATEGORY_INFO*) : HRESULT
    @lpVtbl.value.get_category_info.unsafe_as(Proc(UInt32, CATEGORY_INFO*, HRESULT)).call(dwcategoryid, pci)
  end
  def compare_category(csfflags : CATSORT_FLAGS, dwcategoryid1 : UInt32, dwcategoryid2 : UInt32) : HRESULT
    @lpVtbl.value.compare_category.unsafe_as(Proc(CATSORT_FLAGS, UInt32, UInt32, HRESULT)).call(csfflags, dwcategoryid1, dwcategoryid2)
  end
end
struct LibWin32::IDropTargetHelper
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def drag_enter(hwndtarget : LibC::HANDLE, pdataobject : IDataObject, ppt : POINT*, dweffect : UInt32) : HRESULT
    @lpVtbl.value.drag_enter.unsafe_as(Proc(LibC::HANDLE, IDataObject, POINT*, UInt32, HRESULT)).call(hwndtarget, pdataobject, ppt, dweffect)
  end
  def drag_leave : HRESULT
    @lpVtbl.value.drag_leave.unsafe_as(Proc(HRESULT)).call
  end
  def drag_over(ppt : POINT*, dweffect : UInt32) : HRESULT
    @lpVtbl.value.drag_over.unsafe_as(Proc(POINT*, UInt32, HRESULT)).call(ppt, dweffect)
  end
  def drop(pdataobject : IDataObject, ppt : POINT*, dweffect : UInt32) : HRESULT
    @lpVtbl.value.drop.unsafe_as(Proc(IDataObject, POINT*, UInt32, HRESULT)).call(pdataobject, ppt, dweffect)
  end
  def show(fshow : LibC::BOOL) : HRESULT
    @lpVtbl.value.show.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fshow)
  end
end
struct LibWin32::IDragSourceHelper
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize_from_bitmap(pshdi : SHDRAGIMAGE*, pdataobject : IDataObject) : HRESULT
    @lpVtbl.value.initialize_from_bitmap.unsafe_as(Proc(SHDRAGIMAGE*, IDataObject, HRESULT)).call(pshdi, pdataobject)
  end
  def initialize_from_window(hwnd : LibC::HANDLE, ppt : POINT*, pdataobject : IDataObject) : HRESULT
    @lpVtbl.value.initialize_from_window.unsafe_as(Proc(LibC::HANDLE, POINT*, IDataObject, HRESULT)).call(hwnd, ppt, pdataobject)
  end
end
struct LibWin32::IShellLinkA
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_path(pszfile : UInt8*, cch : Int32, pfd : WIN32_FIND_DATAA*, fflags : UInt32) : HRESULT
    @lpVtbl.value.get_path.unsafe_as(Proc(UInt8*, Int32, WIN32_FIND_DATAA*, UInt32, HRESULT)).call(pszfile, cch, pfd, fflags)
  end
  def get_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def set_id_list(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.set_id_list.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def get_description(pszname : UInt8*, cch : Int32) : HRESULT
    @lpVtbl.value.get_description.unsafe_as(Proc(UInt8*, Int32, HRESULT)).call(pszname, cch)
  end
  def set_description(pszname : PSTR) : HRESULT
    @lpVtbl.value.set_description.unsafe_as(Proc(PSTR, HRESULT)).call(pszname)
  end
  def get_working_directory(pszdir : UInt8*, cch : Int32) : HRESULT
    @lpVtbl.value.get_working_directory.unsafe_as(Proc(UInt8*, Int32, HRESULT)).call(pszdir, cch)
  end
  def set_working_directory(pszdir : PSTR) : HRESULT
    @lpVtbl.value.set_working_directory.unsafe_as(Proc(PSTR, HRESULT)).call(pszdir)
  end
  def get_arguments(pszargs : UInt8*, cch : Int32) : HRESULT
    @lpVtbl.value.get_arguments.unsafe_as(Proc(UInt8*, Int32, HRESULT)).call(pszargs, cch)
  end
  def set_arguments(pszargs : PSTR) : HRESULT
    @lpVtbl.value.set_arguments.unsafe_as(Proc(PSTR, HRESULT)).call(pszargs)
  end
  def get_hotkey(pwhotkey : UInt16*) : HRESULT
    @lpVtbl.value.get_hotkey.unsafe_as(Proc(UInt16*, HRESULT)).call(pwhotkey)
  end
  def set_hotkey(whotkey : UInt16) : HRESULT
    @lpVtbl.value.set_hotkey.unsafe_as(Proc(UInt16, HRESULT)).call(whotkey)
  end
  def get_show_cmd(pishowcmd : Int32*) : HRESULT
    @lpVtbl.value.get_show_cmd.unsafe_as(Proc(Int32*, HRESULT)).call(pishowcmd)
  end
  def set_show_cmd(ishowcmd : Int32) : HRESULT
    @lpVtbl.value.set_show_cmd.unsafe_as(Proc(Int32, HRESULT)).call(ishowcmd)
  end
  def get_icon_location(psziconpath : UInt8*, cch : Int32, piicon : Int32*) : HRESULT
    @lpVtbl.value.get_icon_location.unsafe_as(Proc(UInt8*, Int32, Int32*, HRESULT)).call(psziconpath, cch, piicon)
  end
  def set_icon_location(psziconpath : PSTR, iicon : Int32) : HRESULT
    @lpVtbl.value.set_icon_location.unsafe_as(Proc(PSTR, Int32, HRESULT)).call(psziconpath, iicon)
  end
  def set_relative_path(pszpathrel : PSTR, dwreserved : UInt32) : HRESULT
    @lpVtbl.value.set_relative_path.unsafe_as(Proc(PSTR, UInt32, HRESULT)).call(pszpathrel, dwreserved)
  end
  def resolve(hwnd : LibC::HANDLE, fflags : UInt32) : HRESULT
    @lpVtbl.value.resolve.unsafe_as(Proc(LibC::HANDLE, UInt32, HRESULT)).call(hwnd, fflags)
  end
  def set_path(pszfile : PSTR) : HRESULT
    @lpVtbl.value.set_path.unsafe_as(Proc(PSTR, HRESULT)).call(pszfile)
  end
end
struct LibWin32::IShellLinkW
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_path(pszfile : Char*, cch : Int32, pfd : WIN32_FIND_DATAW*, fflags : UInt32) : HRESULT
    @lpVtbl.value.get_path.unsafe_as(Proc(Char*, Int32, WIN32_FIND_DATAW*, UInt32, HRESULT)).call(pszfile, cch, pfd, fflags)
  end
  def get_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def set_id_list(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.set_id_list.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def get_description(pszname : Char*, cch : Int32) : HRESULT
    @lpVtbl.value.get_description.unsafe_as(Proc(Char*, Int32, HRESULT)).call(pszname, cch)
  end
  def set_description(pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_description.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszname)
  end
  def get_working_directory(pszdir : Char*, cch : Int32) : HRESULT
    @lpVtbl.value.get_working_directory.unsafe_as(Proc(Char*, Int32, HRESULT)).call(pszdir, cch)
  end
  def set_working_directory(pszdir : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_working_directory.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszdir)
  end
  def get_arguments(pszargs : Char*, cch : Int32) : HRESULT
    @lpVtbl.value.get_arguments.unsafe_as(Proc(Char*, Int32, HRESULT)).call(pszargs, cch)
  end
  def set_arguments(pszargs : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_arguments.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszargs)
  end
  def get_hotkey(pwhotkey : UInt16*) : HRESULT
    @lpVtbl.value.get_hotkey.unsafe_as(Proc(UInt16*, HRESULT)).call(pwhotkey)
  end
  def set_hotkey(whotkey : UInt16) : HRESULT
    @lpVtbl.value.set_hotkey.unsafe_as(Proc(UInt16, HRESULT)).call(whotkey)
  end
  def get_show_cmd(pishowcmd : Int32*) : HRESULT
    @lpVtbl.value.get_show_cmd.unsafe_as(Proc(Int32*, HRESULT)).call(pishowcmd)
  end
  def set_show_cmd(ishowcmd : Int32) : HRESULT
    @lpVtbl.value.set_show_cmd.unsafe_as(Proc(Int32, HRESULT)).call(ishowcmd)
  end
  def get_icon_location(psziconpath : Char*, cch : Int32, piicon : Int32*) : HRESULT
    @lpVtbl.value.get_icon_location.unsafe_as(Proc(Char*, Int32, Int32*, HRESULT)).call(psziconpath, cch, piicon)
  end
  def set_icon_location(psziconpath : LibC::LPWSTR, iicon : Int32) : HRESULT
    @lpVtbl.value.set_icon_location.unsafe_as(Proc(LibC::LPWSTR, Int32, HRESULT)).call(psziconpath, iicon)
  end
  def set_relative_path(pszpathrel : LibC::LPWSTR, dwreserved : UInt32) : HRESULT
    @lpVtbl.value.set_relative_path.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(pszpathrel, dwreserved)
  end
  def resolve(hwnd : LibC::HANDLE, fflags : UInt32) : HRESULT
    @lpVtbl.value.resolve.unsafe_as(Proc(LibC::HANDLE, UInt32, HRESULT)).call(hwnd, fflags)
  end
  def set_path(pszfile : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_path.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszfile)
  end
end
struct LibWin32::IShellLinkDataList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_data_block(pdatablock : Void*) : HRESULT
    @lpVtbl.value.add_data_block.unsafe_as(Proc(Void*, HRESULT)).call(pdatablock)
  end
  def copy_data_block(dwsig : UInt32, ppdatablock : Void**) : HRESULT
    @lpVtbl.value.copy_data_block.unsafe_as(Proc(UInt32, Void**, HRESULT)).call(dwsig, ppdatablock)
  end
  def remove_data_block(dwsig : UInt32) : HRESULT
    @lpVtbl.value.remove_data_block.unsafe_as(Proc(UInt32, HRESULT)).call(dwsig)
  end
  def get_flags(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
  def set_flags(dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_flags.unsafe_as(Proc(UInt32, HRESULT)).call(dwflags)
  end
end
struct LibWin32::IResolveShellLink
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def resolve_shell_link(punklink : IUnknown, hwnd : LibC::HANDLE, fflags : UInt32) : HRESULT
    @lpVtbl.value.resolve_shell_link.unsafe_as(Proc(IUnknown, LibC::HANDLE, UInt32, HRESULT)).call(punklink, hwnd, fflags)
  end
end
struct LibWin32::IActionProgressDialog
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(flags : UInt32, psztitle : LibC::LPWSTR, pszcancel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(UInt32, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(flags, psztitle, pszcancel)
  end
  def stop : HRESULT
    @lpVtbl.value.stop.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IActionProgress
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def begin_(action : SPACTION, flags : UInt32) : HRESULT
    @lpVtbl.value.begin_.unsafe_as(Proc(SPACTION, UInt32, HRESULT)).call(action, flags)
  end
  def update_progress(ulcompleted : UInt64, ultotal : UInt64) : HRESULT
    @lpVtbl.value.update_progress.unsafe_as(Proc(UInt64, UInt64, HRESULT)).call(ulcompleted, ultotal)
  end
  def update_text(sptext : SPTEXT, psztext : LibC::LPWSTR, fmaycompact : LibC::BOOL) : HRESULT
    @lpVtbl.value.update_text.unsafe_as(Proc(SPTEXT, LibC::LPWSTR, LibC::BOOL, HRESULT)).call(sptext, psztext, fmaycompact)
  end
  def query_cancel(pfcancelled : LibC::BOOL*) : HRESULT
    @lpVtbl.value.query_cancel.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfcancelled)
  end
  def reset_cancel : HRESULT
    @lpVtbl.value.reset_cancel.unsafe_as(Proc(HRESULT)).call
  end
  def end_ : HRESULT
    @lpVtbl.value.end_.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IShellExtInit
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(pidlfolder : ITEMIDLIST*, pdtobj : IDataObject, hkeyprogid : HKEY) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(ITEMIDLIST*, IDataObject, HKEY, HRESULT)).call(pidlfolder, pdtobj, hkeyprogid)
  end
end
struct LibWin32::IShellPropSheetExt
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_pages(pfnaddpage : LPFNSVADDPROPSHEETPAGE, lparam : LPARAM) : HRESULT
    @lpVtbl.value.add_pages.unsafe_as(Proc(LPFNSVADDPROPSHEETPAGE, LPARAM, HRESULT)).call(pfnaddpage, lparam)
  end
  def replace_page(upageid : UInt32, pfnreplacewith : LPFNSVADDPROPSHEETPAGE, lparam : LPARAM) : HRESULT
    @lpVtbl.value.replace_page.unsafe_as(Proc(UInt32, LPFNSVADDPROPSHEETPAGE, LPARAM, HRESULT)).call(upageid, pfnreplacewith, lparam)
  end
end
struct LibWin32::IRemoteComputer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(pszmachine : LibC::LPWSTR, benumerating : LibC::BOOL) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(LibC::LPWSTR, LibC::BOOL, HRESULT)).call(pszmachine, benumerating)
  end
end
struct LibWin32::IQueryContinue
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def query_continue : HRESULT
    @lpVtbl.value.query_continue.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IObjectWithCancelEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_cancel_event(phevent : LibC::HANDLE*) : HRESULT
    @lpVtbl.value.get_cancel_event.unsafe_as(Proc(LibC::HANDLE*, HRESULT)).call(phevent)
  end
end
struct LibWin32::IUserNotification
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_balloon_info(psztitle : LibC::LPWSTR, psztext : LibC::LPWSTR, dwinfoflags : UInt32) : HRESULT
    @lpVtbl.value.set_balloon_info.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, UInt32, HRESULT)).call(psztitle, psztext, dwinfoflags)
  end
  def set_balloon_retry(dwshowtime : UInt32, dwinterval : UInt32, cretrycount : UInt32) : HRESULT
    @lpVtbl.value.set_balloon_retry.unsafe_as(Proc(UInt32, UInt32, UInt32, HRESULT)).call(dwshowtime, dwinterval, cretrycount)
  end
  def set_icon_info(hicon : LibC::HANDLE, psztooltip : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_icon_info.unsafe_as(Proc(LibC::HANDLE, LibC::LPWSTR, HRESULT)).call(hicon, psztooltip)
  end
  def show(pqc : IQueryContinue, dwcontinuepollinterval : UInt32) : HRESULT
    @lpVtbl.value.show.unsafe_as(Proc(IQueryContinue, UInt32, HRESULT)).call(pqc, dwcontinuepollinterval)
  end
  def play_sound(pszsoundname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.play_sound.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszsoundname)
  end
end
struct LibWin32::IItemNameLimits
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_valid_characters(ppwszvalidchars : LibC::LPWSTR*, ppwszinvalidchars : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_valid_characters.unsafe_as(Proc(LibC::LPWSTR*, LibC::LPWSTR*, HRESULT)).call(ppwszvalidchars, ppwszinvalidchars)
  end
  def get_max_length(pszname : LibC::LPWSTR, pimaxnamelen : Int32*) : HRESULT
    @lpVtbl.value.get_max_length.unsafe_as(Proc(LibC::LPWSTR, Int32*, HRESULT)).call(pszname, pimaxnamelen)
  end
end
struct LibWin32::ISearchFolderItemFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_display_name(pszdisplayname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_display_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszdisplayname)
  end
  def set_folder_type_id(ftid : Guid) : HRESULT
    @lpVtbl.value.set_folder_type_id.unsafe_as(Proc(Guid, HRESULT)).call(ftid)
  end
  def set_folder_logical_view_mode(flvm : FOLDERLOGICALVIEWMODE) : HRESULT
    @lpVtbl.value.set_folder_logical_view_mode.unsafe_as(Proc(FOLDERLOGICALVIEWMODE, HRESULT)).call(flvm)
  end
  def set_icon_size(iiconsize : Int32) : HRESULT
    @lpVtbl.value.set_icon_size.unsafe_as(Proc(Int32, HRESULT)).call(iiconsize)
  end
  def set_visible_columns(cvisiblecolumns : UInt32, rgkey : PROPERTYKEY*) : HRESULT
    @lpVtbl.value.set_visible_columns.unsafe_as(Proc(UInt32, PROPERTYKEY*, HRESULT)).call(cvisiblecolumns, rgkey)
  end
  def set_sort_columns(csortcolumns : UInt32, rgsortcolumns : SORTCOLUMN*) : HRESULT
    @lpVtbl.value.set_sort_columns.unsafe_as(Proc(UInt32, SORTCOLUMN*, HRESULT)).call(csortcolumns, rgsortcolumns)
  end
  def set_group_column(keygroup : PROPERTYKEY*) : HRESULT
    @lpVtbl.value.set_group_column.unsafe_as(Proc(PROPERTYKEY*, HRESULT)).call(keygroup)
  end
  def set_stacks(cstackkeys : UInt32, rgstackkeys : PROPERTYKEY*) : HRESULT
    @lpVtbl.value.set_stacks.unsafe_as(Proc(UInt32, PROPERTYKEY*, HRESULT)).call(cstackkeys, rgstackkeys)
  end
  def set_scope(psiascope : IShellItemArray) : HRESULT
    @lpVtbl.value.set_scope.unsafe_as(Proc(IShellItemArray, HRESULT)).call(psiascope)
  end
  def set_condition(pcondition : ICondition) : HRESULT
    @lpVtbl.value.set_condition.unsafe_as(Proc(ICondition, HRESULT)).call(pcondition)
  end
  def get_shell_item(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_shell_item.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
  def get_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
end
struct LibWin32::IExtractImage
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_location(pszpathbuffer : Char*, cch : UInt32, pdwpriority : UInt32*, prgsize : SIZE*, dwrecclrdepth : UInt32, pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_location.unsafe_as(Proc(Char*, UInt32, UInt32*, SIZE*, UInt32, UInt32*, HRESULT)).call(pszpathbuffer, cch, pdwpriority, prgsize, dwrecclrdepth, pdwflags)
  end
  def extract(phbmpthumbnail : HBITMAP*) : HRESULT
    @lpVtbl.value.extract.unsafe_as(Proc(HBITMAP*, HRESULT)).call(phbmpthumbnail)
  end
end
struct LibWin32::IExtractImage2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_location(pszpathbuffer : Char*, cch : UInt32, pdwpriority : UInt32*, prgsize : SIZE*, dwrecclrdepth : UInt32, pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_location.unsafe_as(Proc(Char*, UInt32, UInt32*, SIZE*, UInt32, UInt32*, HRESULT)).call(pszpathbuffer, cch, pdwpriority, prgsize, dwrecclrdepth, pdwflags)
  end
  def extract(phbmpthumbnail : HBITMAP*) : HRESULT
    @lpVtbl.value.extract.unsafe_as(Proc(HBITMAP*, HRESULT)).call(phbmpthumbnail)
  end
  def get_date_stamp(pdatestamp : FILETIME*) : HRESULT
    @lpVtbl.value.get_date_stamp.unsafe_as(Proc(FILETIME*, HRESULT)).call(pdatestamp)
  end
end
struct LibWin32::IThumbnailHandlerFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_thumbnail_handler(pidlchild : ITEMIDLIST*, pbc : IBindCtx, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_thumbnail_handler.unsafe_as(Proc(ITEMIDLIST*, IBindCtx, Guid*, Void**, HRESULT)).call(pidlchild, pbc, riid, ppv)
  end
end
struct LibWin32::IParentAndItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_parent_and_item(pidlparent : ITEMIDLIST*, psf : IShellFolder, pidlchild : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.set_parent_and_item.unsafe_as(Proc(ITEMIDLIST*, IShellFolder, ITEMIDLIST*, HRESULT)).call(pidlparent, psf, pidlchild)
  end
  def get_parent_and_item(ppidlparent : ITEMIDLIST**, ppsf : IShellFolder*, ppidlchild : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_parent_and_item.unsafe_as(Proc(ITEMIDLIST**, IShellFolder*, ITEMIDLIST**, HRESULT)).call(ppidlparent, ppsf, ppidlchild)
  end
end
struct LibWin32::IDockingWindow
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def show_dw(fshow : LibC::BOOL) : HRESULT
    @lpVtbl.value.show_dw.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fshow)
  end
  def close_dw(dwreserved : UInt32) : HRESULT
    @lpVtbl.value.close_dw.unsafe_as(Proc(UInt32, HRESULT)).call(dwreserved)
  end
  def resize_border_dw(prcborder : RECT*, punktoolbarsite : IUnknown, freserved : LibC::BOOL) : HRESULT
    @lpVtbl.value.resize_border_dw.unsafe_as(Proc(RECT*, IUnknown, LibC::BOOL, HRESULT)).call(prcborder, punktoolbarsite, freserved)
  end
end
struct LibWin32::IDeskBand
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def show_dw(fshow : LibC::BOOL) : HRESULT
    @lpVtbl.value.show_dw.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fshow)
  end
  def close_dw(dwreserved : UInt32) : HRESULT
    @lpVtbl.value.close_dw.unsafe_as(Proc(UInt32, HRESULT)).call(dwreserved)
  end
  def resize_border_dw(prcborder : RECT*, punktoolbarsite : IUnknown, freserved : LibC::BOOL) : HRESULT
    @lpVtbl.value.resize_border_dw.unsafe_as(Proc(RECT*, IUnknown, LibC::BOOL, HRESULT)).call(prcborder, punktoolbarsite, freserved)
  end
  def get_band_info(dwbandid : UInt32, dwviewmode : UInt32, pdbi : DESKBANDINFO*) : HRESULT
    @lpVtbl.value.get_band_info.unsafe_as(Proc(UInt32, UInt32, DESKBANDINFO*, HRESULT)).call(dwbandid, dwviewmode, pdbi)
  end
end
struct LibWin32::IDeskBandInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_default_band_width(dwbandid : UInt32, dwviewmode : UInt32, pnwidth : Int32*) : HRESULT
    @lpVtbl.value.get_default_band_width.unsafe_as(Proc(UInt32, UInt32, Int32*, HRESULT)).call(dwbandid, dwviewmode, pnwidth)
  end
end
struct LibWin32::ITaskbarList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def hr_init : HRESULT
    @lpVtbl.value.hr_init.unsafe_as(Proc(HRESULT)).call
  end
  def add_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.add_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def delete_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.delete_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def activate_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.activate_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def set_active_alt(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_active_alt.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
end
struct LibWin32::ITaskbarList2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def hr_init : HRESULT
    @lpVtbl.value.hr_init.unsafe_as(Proc(HRESULT)).call
  end
  def add_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.add_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def delete_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.delete_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def activate_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.activate_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def set_active_alt(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_active_alt.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def mark_fullscreen_window(hwnd : LibC::HANDLE, ffullscreen : LibC::BOOL) : HRESULT
    @lpVtbl.value.mark_fullscreen_window.unsafe_as(Proc(LibC::HANDLE, LibC::BOOL, HRESULT)).call(hwnd, ffullscreen)
  end
end
struct LibWin32::ITaskbarList3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def hr_init : HRESULT
    @lpVtbl.value.hr_init.unsafe_as(Proc(HRESULT)).call
  end
  def add_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.add_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def delete_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.delete_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def activate_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.activate_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def set_active_alt(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_active_alt.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def mark_fullscreen_window(hwnd : LibC::HANDLE, ffullscreen : LibC::BOOL) : HRESULT
    @lpVtbl.value.mark_fullscreen_window.unsafe_as(Proc(LibC::HANDLE, LibC::BOOL, HRESULT)).call(hwnd, ffullscreen)
  end
  def set_progress_value(hwnd : LibC::HANDLE, ullcompleted : UInt64, ulltotal : UInt64) : HRESULT
    @lpVtbl.value.set_progress_value.unsafe_as(Proc(LibC::HANDLE, UInt64, UInt64, HRESULT)).call(hwnd, ullcompleted, ulltotal)
  end
  def set_progress_state(hwnd : LibC::HANDLE, tbpflags : TBPFLAG) : HRESULT
    @lpVtbl.value.set_progress_state.unsafe_as(Proc(LibC::HANDLE, TBPFLAG, HRESULT)).call(hwnd, tbpflags)
  end
  def register_tab(hwndtab : LibC::HANDLE, hwndmdi : LibC::HANDLE) : HRESULT
    @lpVtbl.value.register_tab.unsafe_as(Proc(LibC::HANDLE, LibC::HANDLE, HRESULT)).call(hwndtab, hwndmdi)
  end
  def unregister_tab(hwndtab : LibC::HANDLE) : HRESULT
    @lpVtbl.value.unregister_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndtab)
  end
  def set_tab_order(hwndtab : LibC::HANDLE, hwndinsertbefore : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_tab_order.unsafe_as(Proc(LibC::HANDLE, LibC::HANDLE, HRESULT)).call(hwndtab, hwndinsertbefore)
  end
  def set_tab_active(hwndtab : LibC::HANDLE, hwndmdi : LibC::HANDLE, dwreserved : UInt32) : HRESULT
    @lpVtbl.value.set_tab_active.unsafe_as(Proc(LibC::HANDLE, LibC::HANDLE, UInt32, HRESULT)).call(hwndtab, hwndmdi, dwreserved)
  end
  def thumb_bar_add_buttons(hwnd : LibC::HANDLE, cbuttons : UInt32, pbutton : THUMBBUTTON*) : HRESULT
    @lpVtbl.value.thumb_bar_add_buttons.unsafe_as(Proc(LibC::HANDLE, UInt32, THUMBBUTTON*, HRESULT)).call(hwnd, cbuttons, pbutton)
  end
  def thumb_bar_update_buttons(hwnd : LibC::HANDLE, cbuttons : UInt32, pbutton : THUMBBUTTON*) : HRESULT
    @lpVtbl.value.thumb_bar_update_buttons.unsafe_as(Proc(LibC::HANDLE, UInt32, THUMBBUTTON*, HRESULT)).call(hwnd, cbuttons, pbutton)
  end
  def thumb_bar_set_image_list(hwnd : LibC::HANDLE, himl : HIMAGELIST) : HRESULT
    @lpVtbl.value.thumb_bar_set_image_list.unsafe_as(Proc(LibC::HANDLE, HIMAGELIST, HRESULT)).call(hwnd, himl)
  end
  def set_overlay_icon(hwnd : LibC::HANDLE, hicon : LibC::HANDLE, pszdescription : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_overlay_icon.unsafe_as(Proc(LibC::HANDLE, LibC::HANDLE, LibC::LPWSTR, HRESULT)).call(hwnd, hicon, pszdescription)
  end
  def set_thumbnail_tooltip(hwnd : LibC::HANDLE, psztip : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_thumbnail_tooltip.unsafe_as(Proc(LibC::HANDLE, LibC::LPWSTR, HRESULT)).call(hwnd, psztip)
  end
  def set_thumbnail_clip(hwnd : LibC::HANDLE, prcclip : RECT*) : HRESULT
    @lpVtbl.value.set_thumbnail_clip.unsafe_as(Proc(LibC::HANDLE, RECT*, HRESULT)).call(hwnd, prcclip)
  end
end
struct LibWin32::ITaskbarList4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def hr_init : HRESULT
    @lpVtbl.value.hr_init.unsafe_as(Proc(HRESULT)).call
  end
  def add_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.add_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def delete_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.delete_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def activate_tab(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.activate_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def set_active_alt(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_active_alt.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def mark_fullscreen_window(hwnd : LibC::HANDLE, ffullscreen : LibC::BOOL) : HRESULT
    @lpVtbl.value.mark_fullscreen_window.unsafe_as(Proc(LibC::HANDLE, LibC::BOOL, HRESULT)).call(hwnd, ffullscreen)
  end
  def set_progress_value(hwnd : LibC::HANDLE, ullcompleted : UInt64, ulltotal : UInt64) : HRESULT
    @lpVtbl.value.set_progress_value.unsafe_as(Proc(LibC::HANDLE, UInt64, UInt64, HRESULT)).call(hwnd, ullcompleted, ulltotal)
  end
  def set_progress_state(hwnd : LibC::HANDLE, tbpflags : TBPFLAG) : HRESULT
    @lpVtbl.value.set_progress_state.unsafe_as(Proc(LibC::HANDLE, TBPFLAG, HRESULT)).call(hwnd, tbpflags)
  end
  def register_tab(hwndtab : LibC::HANDLE, hwndmdi : LibC::HANDLE) : HRESULT
    @lpVtbl.value.register_tab.unsafe_as(Proc(LibC::HANDLE, LibC::HANDLE, HRESULT)).call(hwndtab, hwndmdi)
  end
  def unregister_tab(hwndtab : LibC::HANDLE) : HRESULT
    @lpVtbl.value.unregister_tab.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndtab)
  end
  def set_tab_order(hwndtab : LibC::HANDLE, hwndinsertbefore : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_tab_order.unsafe_as(Proc(LibC::HANDLE, LibC::HANDLE, HRESULT)).call(hwndtab, hwndinsertbefore)
  end
  def set_tab_active(hwndtab : LibC::HANDLE, hwndmdi : LibC::HANDLE, dwreserved : UInt32) : HRESULT
    @lpVtbl.value.set_tab_active.unsafe_as(Proc(LibC::HANDLE, LibC::HANDLE, UInt32, HRESULT)).call(hwndtab, hwndmdi, dwreserved)
  end
  def thumb_bar_add_buttons(hwnd : LibC::HANDLE, cbuttons : UInt32, pbutton : THUMBBUTTON*) : HRESULT
    @lpVtbl.value.thumb_bar_add_buttons.unsafe_as(Proc(LibC::HANDLE, UInt32, THUMBBUTTON*, HRESULT)).call(hwnd, cbuttons, pbutton)
  end
  def thumb_bar_update_buttons(hwnd : LibC::HANDLE, cbuttons : UInt32, pbutton : THUMBBUTTON*) : HRESULT
    @lpVtbl.value.thumb_bar_update_buttons.unsafe_as(Proc(LibC::HANDLE, UInt32, THUMBBUTTON*, HRESULT)).call(hwnd, cbuttons, pbutton)
  end
  def thumb_bar_set_image_list(hwnd : LibC::HANDLE, himl : HIMAGELIST) : HRESULT
    @lpVtbl.value.thumb_bar_set_image_list.unsafe_as(Proc(LibC::HANDLE, HIMAGELIST, HRESULT)).call(hwnd, himl)
  end
  def set_overlay_icon(hwnd : LibC::HANDLE, hicon : LibC::HANDLE, pszdescription : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_overlay_icon.unsafe_as(Proc(LibC::HANDLE, LibC::HANDLE, LibC::LPWSTR, HRESULT)).call(hwnd, hicon, pszdescription)
  end
  def set_thumbnail_tooltip(hwnd : LibC::HANDLE, psztip : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_thumbnail_tooltip.unsafe_as(Proc(LibC::HANDLE, LibC::LPWSTR, HRESULT)).call(hwnd, psztip)
  end
  def set_thumbnail_clip(hwnd : LibC::HANDLE, prcclip : RECT*) : HRESULT
    @lpVtbl.value.set_thumbnail_clip.unsafe_as(Proc(LibC::HANDLE, RECT*, HRESULT)).call(hwnd, prcclip)
  end
  def set_tab_properties(hwndtab : LibC::HANDLE, stpflags : STPFLAG) : HRESULT
    @lpVtbl.value.set_tab_properties.unsafe_as(Proc(LibC::HANDLE, STPFLAG, HRESULT)).call(hwndtab, stpflags)
  end
end
struct LibWin32::IExplorerBrowserEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_navigation_pending(pidlfolder : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.on_navigation_pending.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidlfolder)
  end
  def on_view_created(psv : IShellView) : HRESULT
    @lpVtbl.value.on_view_created.unsafe_as(Proc(IShellView, HRESULT)).call(psv)
  end
  def on_navigation_complete(pidlfolder : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.on_navigation_complete.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidlfolder)
  end
  def on_navigation_failed(pidlfolder : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.on_navigation_failed.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidlfolder)
  end
end
struct LibWin32::IExplorerBrowser
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(hwndparent : LibC::HANDLE, prc : RECT*, pfs : FOLDERSETTINGS*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(LibC::HANDLE, RECT*, FOLDERSETTINGS*, HRESULT)).call(hwndparent, prc, pfs)
  end
  def destroy : HRESULT
    @lpVtbl.value.destroy.unsafe_as(Proc(HRESULT)).call
  end
  def set_rect(phdwp : LibC::IntPtrT*, rcbrowser : RECT) : HRESULT
    @lpVtbl.value.set_rect.unsafe_as(Proc(LibC::IntPtrT*, RECT, HRESULT)).call(phdwp, rcbrowser)
  end
  def set_property_bag(pszpropertybag : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_property_bag.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszpropertybag)
  end
  def set_empty_text(pszemptytext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_empty_text.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszemptytext)
  end
  def set_folder_settings(pfs : FOLDERSETTINGS*) : HRESULT
    @lpVtbl.value.set_folder_settings.unsafe_as(Proc(FOLDERSETTINGS*, HRESULT)).call(pfs)
  end
  def advise(psbe : IExplorerBrowserEvents, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(IExplorerBrowserEvents, UInt32*, HRESULT)).call(psbe, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def set_options(dwflag : EXPLORER_BROWSER_OPTIONS) : HRESULT
    @lpVtbl.value.set_options.unsafe_as(Proc(EXPLORER_BROWSER_OPTIONS, HRESULT)).call(dwflag)
  end
  def get_options(pdwflag : EXPLORER_BROWSER_OPTIONS*) : HRESULT
    @lpVtbl.value.get_options.unsafe_as(Proc(EXPLORER_BROWSER_OPTIONS*, HRESULT)).call(pdwflag)
  end
  def browse_to_id_list(pidl : ITEMIDLIST*, uflags : UInt32) : HRESULT
    @lpVtbl.value.browse_to_id_list.unsafe_as(Proc(ITEMIDLIST*, UInt32, HRESULT)).call(pidl, uflags)
  end
  def browse_to_object(punk : IUnknown, uflags : UInt32) : HRESULT
    @lpVtbl.value.browse_to_object.unsafe_as(Proc(IUnknown, UInt32, HRESULT)).call(punk, uflags)
  end
  def fill_from_object(punk : IUnknown, dwflags : EXPLORER_BROWSER_FILL_FLAGS) : HRESULT
    @lpVtbl.value.fill_from_object.unsafe_as(Proc(IUnknown, EXPLORER_BROWSER_FILL_FLAGS, HRESULT)).call(punk, dwflags)
  end
  def remove_all : HRESULT
    @lpVtbl.value.remove_all.unsafe_as(Proc(HRESULT)).call
  end
  def get_current_view(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_current_view.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
end
struct LibWin32::IEnumObjects
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, riid : Guid*, rgelt : Void**, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, Guid*, Void**, UInt32*, HRESULT)).call(celt, riid, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumObjects*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumObjects*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::IOperationsProgressDialog
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def start_progress_dialog(hwndowner : LibC::HANDLE, flags : UInt32) : HRESULT
    @lpVtbl.value.start_progress_dialog.unsafe_as(Proc(LibC::HANDLE, UInt32, HRESULT)).call(hwndowner, flags)
  end
  def stop_progress_dialog : HRESULT
    @lpVtbl.value.stop_progress_dialog.unsafe_as(Proc(HRESULT)).call
  end
  def set_operation(action : SPACTION) : HRESULT
    @lpVtbl.value.set_operation.unsafe_as(Proc(SPACTION, HRESULT)).call(action)
  end
  def set_mode(mode : UInt32) : HRESULT
    @lpVtbl.value.set_mode.unsafe_as(Proc(UInt32, HRESULT)).call(mode)
  end
  def update_progress(ullpointscurrent : UInt64, ullpointstotal : UInt64, ullsizecurrent : UInt64, ullsizetotal : UInt64, ullitemscurrent : UInt64, ullitemstotal : UInt64) : HRESULT
    @lpVtbl.value.update_progress.unsafe_as(Proc(UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, HRESULT)).call(ullpointscurrent, ullpointstotal, ullsizecurrent, ullsizetotal, ullitemscurrent, ullitemstotal)
  end
  def update_locations(psisource : IShellItem, psitarget : IShellItem, psiitem : IShellItem) : HRESULT
    @lpVtbl.value.update_locations.unsafe_as(Proc(IShellItem, IShellItem, IShellItem, HRESULT)).call(psisource, psitarget, psiitem)
  end
  def reset_timer : HRESULT
    @lpVtbl.value.reset_timer.unsafe_as(Proc(HRESULT)).call
  end
  def pause_timer : HRESULT
    @lpVtbl.value.pause_timer.unsafe_as(Proc(HRESULT)).call
  end
  def resume_timer : HRESULT
    @lpVtbl.value.resume_timer.unsafe_as(Proc(HRESULT)).call
  end
  def get_milliseconds(pullelapsed : UInt64*, pullremaining : UInt64*) : HRESULT
    @lpVtbl.value.get_milliseconds.unsafe_as(Proc(UInt64*, UInt64*, HRESULT)).call(pullelapsed, pullremaining)
  end
  def get_operation_status(popstatus : PDOPSTATUS*) : HRESULT
    @lpVtbl.value.get_operation_status.unsafe_as(Proc(PDOPSTATUS*, HRESULT)).call(popstatus)
  end
end
struct LibWin32::IIOCancelInformation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_cancel_information(dwthreadid : UInt32, umsgcancel : UInt32) : HRESULT
    @lpVtbl.value.set_cancel_information.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwthreadid, umsgcancel)
  end
  def get_cancel_information(pdwthreadid : UInt32*, pumsgcancel : UInt32*) : HRESULT
    @lpVtbl.value.get_cancel_information.unsafe_as(Proc(UInt32*, UInt32*, HRESULT)).call(pdwthreadid, pumsgcancel)
  end
end
struct LibWin32::IFileOperation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def advise(pfops : IFileOperationProgressSink, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(IFileOperationProgressSink, UInt32*, HRESULT)).call(pfops, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def set_operation_flags(dwoperationflags : UInt32) : HRESULT
    @lpVtbl.value.set_operation_flags.unsafe_as(Proc(UInt32, HRESULT)).call(dwoperationflags)
  end
  def set_progress_message(pszmessage : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_progress_message.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszmessage)
  end
  def set_progress_dialog(popd : IOperationsProgressDialog) : HRESULT
    @lpVtbl.value.set_progress_dialog.unsafe_as(Proc(IOperationsProgressDialog, HRESULT)).call(popd)
  end
  def set_properties(pproparray : IPropertyChangeArray) : HRESULT
    @lpVtbl.value.set_properties.unsafe_as(Proc(IPropertyChangeArray, HRESULT)).call(pproparray)
  end
  def set_owner_window(hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_owner_window.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndowner)
  end
  def apply_properties_to_item(psiitem : IShellItem) : HRESULT
    @lpVtbl.value.apply_properties_to_item.unsafe_as(Proc(IShellItem, HRESULT)).call(psiitem)
  end
  def apply_properties_to_items(punkitems : IUnknown) : HRESULT
    @lpVtbl.value.apply_properties_to_items.unsafe_as(Proc(IUnknown, HRESULT)).call(punkitems)
  end
  def rename_item(psiitem : IShellItem, psznewname : LibC::LPWSTR, pfopsitem : IFileOperationProgressSink) : HRESULT
    @lpVtbl.value.rename_item.unsafe_as(Proc(IShellItem, LibC::LPWSTR, IFileOperationProgressSink, HRESULT)).call(psiitem, psznewname, pfopsitem)
  end
  def rename_items(punkitems : IUnknown, psznewname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.rename_items.unsafe_as(Proc(IUnknown, LibC::LPWSTR, HRESULT)).call(punkitems, psznewname)
  end
  def move_item(psiitem : IShellItem, psidestinationfolder : IShellItem, psznewname : LibC::LPWSTR, pfopsitem : IFileOperationProgressSink) : HRESULT
    @lpVtbl.value.move_item.unsafe_as(Proc(IShellItem, IShellItem, LibC::LPWSTR, IFileOperationProgressSink, HRESULT)).call(psiitem, psidestinationfolder, psznewname, pfopsitem)
  end
  def move_items(punkitems : IUnknown, psidestinationfolder : IShellItem) : HRESULT
    @lpVtbl.value.move_items.unsafe_as(Proc(IUnknown, IShellItem, HRESULT)).call(punkitems, psidestinationfolder)
  end
  def copy_item(psiitem : IShellItem, psidestinationfolder : IShellItem, pszcopyname : LibC::LPWSTR, pfopsitem : IFileOperationProgressSink) : HRESULT
    @lpVtbl.value.copy_item.unsafe_as(Proc(IShellItem, IShellItem, LibC::LPWSTR, IFileOperationProgressSink, HRESULT)).call(psiitem, psidestinationfolder, pszcopyname, pfopsitem)
  end
  def copy_items(punkitems : IUnknown, psidestinationfolder : IShellItem) : HRESULT
    @lpVtbl.value.copy_items.unsafe_as(Proc(IUnknown, IShellItem, HRESULT)).call(punkitems, psidestinationfolder)
  end
  def delete_item(psiitem : IShellItem, pfopsitem : IFileOperationProgressSink) : HRESULT
    @lpVtbl.value.delete_item.unsafe_as(Proc(IShellItem, IFileOperationProgressSink, HRESULT)).call(psiitem, pfopsitem)
  end
  def delete_items(punkitems : IUnknown) : HRESULT
    @lpVtbl.value.delete_items.unsafe_as(Proc(IUnknown, HRESULT)).call(punkitems)
  end
  def new_item(psidestinationfolder : IShellItem, dwfileattributes : UInt32, pszname : LibC::LPWSTR, psztemplatename : LibC::LPWSTR, pfopsitem : IFileOperationProgressSink) : HRESULT
    @lpVtbl.value.new_item.unsafe_as(Proc(IShellItem, UInt32, LibC::LPWSTR, LibC::LPWSTR, IFileOperationProgressSink, HRESULT)).call(psidestinationfolder, dwfileattributes, pszname, psztemplatename, pfopsitem)
  end
  def perform_operations : HRESULT
    @lpVtbl.value.perform_operations.unsafe_as(Proc(HRESULT)).call
  end
  def get_any_operations_aborted(pfanyoperationsaborted : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_any_operations_aborted.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfanyoperationsaborted)
  end
end
struct LibWin32::IFileOperation2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def advise(pfops : IFileOperationProgressSink, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(IFileOperationProgressSink, UInt32*, HRESULT)).call(pfops, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def set_operation_flags(dwoperationflags : UInt32) : HRESULT
    @lpVtbl.value.set_operation_flags.unsafe_as(Proc(UInt32, HRESULT)).call(dwoperationflags)
  end
  def set_progress_message(pszmessage : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_progress_message.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszmessage)
  end
  def set_progress_dialog(popd : IOperationsProgressDialog) : HRESULT
    @lpVtbl.value.set_progress_dialog.unsafe_as(Proc(IOperationsProgressDialog, HRESULT)).call(popd)
  end
  def set_properties(pproparray : IPropertyChangeArray) : HRESULT
    @lpVtbl.value.set_properties.unsafe_as(Proc(IPropertyChangeArray, HRESULT)).call(pproparray)
  end
  def set_owner_window(hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_owner_window.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndowner)
  end
  def apply_properties_to_item(psiitem : IShellItem) : HRESULT
    @lpVtbl.value.apply_properties_to_item.unsafe_as(Proc(IShellItem, HRESULT)).call(psiitem)
  end
  def apply_properties_to_items(punkitems : IUnknown) : HRESULT
    @lpVtbl.value.apply_properties_to_items.unsafe_as(Proc(IUnknown, HRESULT)).call(punkitems)
  end
  def rename_item(psiitem : IShellItem, psznewname : LibC::LPWSTR, pfopsitem : IFileOperationProgressSink) : HRESULT
    @lpVtbl.value.rename_item.unsafe_as(Proc(IShellItem, LibC::LPWSTR, IFileOperationProgressSink, HRESULT)).call(psiitem, psznewname, pfopsitem)
  end
  def rename_items(punkitems : IUnknown, psznewname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.rename_items.unsafe_as(Proc(IUnknown, LibC::LPWSTR, HRESULT)).call(punkitems, psznewname)
  end
  def move_item(psiitem : IShellItem, psidestinationfolder : IShellItem, psznewname : LibC::LPWSTR, pfopsitem : IFileOperationProgressSink) : HRESULT
    @lpVtbl.value.move_item.unsafe_as(Proc(IShellItem, IShellItem, LibC::LPWSTR, IFileOperationProgressSink, HRESULT)).call(psiitem, psidestinationfolder, psznewname, pfopsitem)
  end
  def move_items(punkitems : IUnknown, psidestinationfolder : IShellItem) : HRESULT
    @lpVtbl.value.move_items.unsafe_as(Proc(IUnknown, IShellItem, HRESULT)).call(punkitems, psidestinationfolder)
  end
  def copy_item(psiitem : IShellItem, psidestinationfolder : IShellItem, pszcopyname : LibC::LPWSTR, pfopsitem : IFileOperationProgressSink) : HRESULT
    @lpVtbl.value.copy_item.unsafe_as(Proc(IShellItem, IShellItem, LibC::LPWSTR, IFileOperationProgressSink, HRESULT)).call(psiitem, psidestinationfolder, pszcopyname, pfopsitem)
  end
  def copy_items(punkitems : IUnknown, psidestinationfolder : IShellItem) : HRESULT
    @lpVtbl.value.copy_items.unsafe_as(Proc(IUnknown, IShellItem, HRESULT)).call(punkitems, psidestinationfolder)
  end
  def delete_item(psiitem : IShellItem, pfopsitem : IFileOperationProgressSink) : HRESULT
    @lpVtbl.value.delete_item.unsafe_as(Proc(IShellItem, IFileOperationProgressSink, HRESULT)).call(psiitem, pfopsitem)
  end
  def delete_items(punkitems : IUnknown) : HRESULT
    @lpVtbl.value.delete_items.unsafe_as(Proc(IUnknown, HRESULT)).call(punkitems)
  end
  def new_item(psidestinationfolder : IShellItem, dwfileattributes : UInt32, pszname : LibC::LPWSTR, psztemplatename : LibC::LPWSTR, pfopsitem : IFileOperationProgressSink) : HRESULT
    @lpVtbl.value.new_item.unsafe_as(Proc(IShellItem, UInt32, LibC::LPWSTR, LibC::LPWSTR, IFileOperationProgressSink, HRESULT)).call(psidestinationfolder, dwfileattributes, pszname, psztemplatename, pfopsitem)
  end
  def perform_operations : HRESULT
    @lpVtbl.value.perform_operations.unsafe_as(Proc(HRESULT)).call
  end
  def get_any_operations_aborted(pfanyoperationsaborted : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_any_operations_aborted.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfanyoperationsaborted)
  end
  def set_operation_flags2(operationflags2 : FILE_OPERATION_FLAGS2) : HRESULT
    @lpVtbl.value.set_operation_flags2.unsafe_as(Proc(FILE_OPERATION_FLAGS2, HRESULT)).call(operationflags2)
  end
end
struct LibWin32::IObjectProvider
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def query_object(guidobject : Guid*, riid : Guid*, ppvout : Void**) : HRESULT
    @lpVtbl.value.query_object.unsafe_as(Proc(Guid*, Guid*, Void**, HRESULT)).call(guidobject, riid, ppvout)
  end
end
struct LibWin32::INamespaceWalkCB
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def found_item(psf : IShellFolder, pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.found_item.unsafe_as(Proc(IShellFolder, ITEMIDLIST*, HRESULT)).call(psf, pidl)
  end
  def enter_folder(psf : IShellFolder, pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.enter_folder.unsafe_as(Proc(IShellFolder, ITEMIDLIST*, HRESULT)).call(psf, pidl)
  end
  def leave_folder(psf : IShellFolder, pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.leave_folder.unsafe_as(Proc(IShellFolder, ITEMIDLIST*, HRESULT)).call(psf, pidl)
  end
  def initialize_progress_dialog(ppsztitle : LibC::LPWSTR*, ppszcancel : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.initialize_progress_dialog.unsafe_as(Proc(LibC::LPWSTR*, LibC::LPWSTR*, HRESULT)).call(ppsztitle, ppszcancel)
  end
end
struct LibWin32::INamespaceWalkCB2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def found_item(psf : IShellFolder, pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.found_item.unsafe_as(Proc(IShellFolder, ITEMIDLIST*, HRESULT)).call(psf, pidl)
  end
  def enter_folder(psf : IShellFolder, pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.enter_folder.unsafe_as(Proc(IShellFolder, ITEMIDLIST*, HRESULT)).call(psf, pidl)
  end
  def leave_folder(psf : IShellFolder, pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.leave_folder.unsafe_as(Proc(IShellFolder, ITEMIDLIST*, HRESULT)).call(psf, pidl)
  end
  def initialize_progress_dialog(ppsztitle : LibC::LPWSTR*, ppszcancel : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.initialize_progress_dialog.unsafe_as(Proc(LibC::LPWSTR*, LibC::LPWSTR*, HRESULT)).call(ppsztitle, ppszcancel)
  end
  def walk_complete(hr : HRESULT) : HRESULT
    @lpVtbl.value.walk_complete.unsafe_as(Proc(HRESULT, HRESULT)).call(hr)
  end
end
struct LibWin32::INamespaceWalk
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def walk(punktowalk : IUnknown, dwflags : UInt32, cdepth : Int32, pnswcb : INamespaceWalkCB) : HRESULT
    @lpVtbl.value.walk.unsafe_as(Proc(IUnknown, UInt32, Int32, INamespaceWalkCB, HRESULT)).call(punktowalk, dwflags, cdepth, pnswcb)
  end
  def get_id_array_result(pcitems : UInt32*, prgpidl : ITEMIDLIST***) : HRESULT
    @lpVtbl.value.get_id_array_result.unsafe_as(Proc(UInt32*, ITEMIDLIST***, HRESULT)).call(pcitems, prgpidl)
  end
end
struct LibWin32::IBandSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_band(punk : IUnknown) : HRESULT
    @lpVtbl.value.add_band.unsafe_as(Proc(IUnknown, HRESULT)).call(punk)
  end
  def enum_bands(uband : UInt32, pdwbandid : UInt32*) : HRESULT
    @lpVtbl.value.enum_bands.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(uband, pdwbandid)
  end
  def query_band(dwbandid : UInt32, ppstb : IDeskBand*, pdwstate : UInt32*, pszname : Char*, cchname : Int32) : HRESULT
    @lpVtbl.value.query_band.unsafe_as(Proc(UInt32, IDeskBand*, UInt32*, Char*, Int32, HRESULT)).call(dwbandid, ppstb, pdwstate, pszname, cchname)
  end
  def set_band_state(dwbandid : UInt32, dwmask : UInt32, dwstate : UInt32) : HRESULT
    @lpVtbl.value.set_band_state.unsafe_as(Proc(UInt32, UInt32, UInt32, HRESULT)).call(dwbandid, dwmask, dwstate)
  end
  def remove_band(dwbandid : UInt32) : HRESULT
    @lpVtbl.value.remove_band.unsafe_as(Proc(UInt32, HRESULT)).call(dwbandid)
  end
  def get_band_object(dwbandid : UInt32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_band_object.unsafe_as(Proc(UInt32, Guid*, Void**, HRESULT)).call(dwbandid, riid, ppv)
  end
  def set_band_site_info(pbsinfo : BANDSITEINFO*) : HRESULT
    @lpVtbl.value.set_band_site_info.unsafe_as(Proc(BANDSITEINFO*, HRESULT)).call(pbsinfo)
  end
  def get_band_site_info(pbsinfo : BANDSITEINFO*) : HRESULT
    @lpVtbl.value.get_band_site_info.unsafe_as(Proc(BANDSITEINFO*, HRESULT)).call(pbsinfo)
  end
end
struct LibWin32::IModalWindow
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show(hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.show.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndowner)
  end
end
struct LibWin32::IContextMenuSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def do_context_menu_popup(punkcontextmenu : IUnknown, fflags : UInt32, pt : POINT) : HRESULT
    @lpVtbl.value.do_context_menu_popup.unsafe_as(Proc(IUnknown, UInt32, POINT, HRESULT)).call(punkcontextmenu, fflags, pt)
  end
end
struct LibWin32::IMenuBand
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def is_menu_message(pmsg : MSG*) : HRESULT
    @lpVtbl.value.is_menu_message.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
  def translate_menu_message(pmsg : MSG*, plret : LRESULT*) : HRESULT
    @lpVtbl.value.translate_menu_message.unsafe_as(Proc(MSG*, LRESULT*, HRESULT)).call(pmsg, plret)
  end
end
struct LibWin32::IRegTreeItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_check_state(pbcheck : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_check_state.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pbcheck)
  end
  def set_check_state(bcheck : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_check_state.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(bcheck)
  end
end
struct LibWin32::IDeskBar
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def set_client(punkclient : IUnknown) : HRESULT
    @lpVtbl.value.set_client.unsafe_as(Proc(IUnknown, HRESULT)).call(punkclient)
  end
  def get_client(ppunkclient : IUnknown*) : HRESULT
    @lpVtbl.value.get_client.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppunkclient)
  end
  def on_pos_rect_change_db(prc : RECT*) : HRESULT
    @lpVtbl.value.on_pos_rect_change_db.unsafe_as(Proc(RECT*, HRESULT)).call(prc)
  end
end
struct LibWin32::IMenuPopup
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def set_client(punkclient : IUnknown) : HRESULT
    @lpVtbl.value.set_client.unsafe_as(Proc(IUnknown, HRESULT)).call(punkclient)
  end
  def get_client(ppunkclient : IUnknown*) : HRESULT
    @lpVtbl.value.get_client.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppunkclient)
  end
  def on_pos_rect_change_db(prc : RECT*) : HRESULT
    @lpVtbl.value.on_pos_rect_change_db.unsafe_as(Proc(RECT*, HRESULT)).call(prc)
  end
  def popup(ppt : POINTL*, prcexclude : RECTL*, dwflags : Int32) : HRESULT
    @lpVtbl.value.popup.unsafe_as(Proc(POINTL*, RECTL*, Int32, HRESULT)).call(ppt, prcexclude, dwflags)
  end
  def on_select(dwselecttype : UInt32) : HRESULT
    @lpVtbl.value.on_select.unsafe_as(Proc(UInt32, HRESULT)).call(dwselecttype)
  end
  def set_sub_menu(pmp : IMenuPopup, fset : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_sub_menu.unsafe_as(Proc(IMenuPopup, LibC::BOOL, HRESULT)).call(pmp, fset)
  end
end
struct LibWin32::IFileIsInUse
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_app_name(ppszname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_app_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszname)
  end
  def get_usage(pfut : FILE_USAGE_TYPE*) : HRESULT
    @lpVtbl.value.get_usage.unsafe_as(Proc(FILE_USAGE_TYPE*, HRESULT)).call(pfut)
  end
  def get_capabilities(pdwcapflags : UInt32*) : HRESULT
    @lpVtbl.value.get_capabilities.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwcapflags)
  end
  def get_switch_to_hwnd(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_switch_to_hwnd.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def close_file : HRESULT
    @lpVtbl.value.close_file.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IFileDialogEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_file_ok(pfd : IFileDialog) : HRESULT
    @lpVtbl.value.on_file_ok.unsafe_as(Proc(IFileDialog, HRESULT)).call(pfd)
  end
  def on_folder_changing(pfd : IFileDialog, psifolder : IShellItem) : HRESULT
    @lpVtbl.value.on_folder_changing.unsafe_as(Proc(IFileDialog, IShellItem, HRESULT)).call(pfd, psifolder)
  end
  def on_folder_change(pfd : IFileDialog) : HRESULT
    @lpVtbl.value.on_folder_change.unsafe_as(Proc(IFileDialog, HRESULT)).call(pfd)
  end
  def on_selection_change(pfd : IFileDialog) : HRESULT
    @lpVtbl.value.on_selection_change.unsafe_as(Proc(IFileDialog, HRESULT)).call(pfd)
  end
  def on_share_violation(pfd : IFileDialog, psi : IShellItem, presponse : FDE_SHAREVIOLATION_RESPONSE*) : HRESULT
    @lpVtbl.value.on_share_violation.unsafe_as(Proc(IFileDialog, IShellItem, FDE_SHAREVIOLATION_RESPONSE*, HRESULT)).call(pfd, psi, presponse)
  end
  def on_type_change(pfd : IFileDialog) : HRESULT
    @lpVtbl.value.on_type_change.unsafe_as(Proc(IFileDialog, HRESULT)).call(pfd)
  end
  def on_overwrite(pfd : IFileDialog, psi : IShellItem, presponse : FDE_OVERWRITE_RESPONSE*) : HRESULT
    @lpVtbl.value.on_overwrite.unsafe_as(Proc(IFileDialog, IShellItem, FDE_OVERWRITE_RESPONSE*, HRESULT)).call(pfd, psi, presponse)
  end
end
struct LibWin32::IFileDialog
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show(hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.show.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndowner)
  end
  def set_file_types(cfiletypes : UInt32, rgfilterspec : COMDLG_FILTERSPEC*) : HRESULT
    @lpVtbl.value.set_file_types.unsafe_as(Proc(UInt32, COMDLG_FILTERSPEC*, HRESULT)).call(cfiletypes, rgfilterspec)
  end
  def set_file_type_index(ifiletype : UInt32) : HRESULT
    @lpVtbl.value.set_file_type_index.unsafe_as(Proc(UInt32, HRESULT)).call(ifiletype)
  end
  def get_file_type_index(pifiletype : UInt32*) : HRESULT
    @lpVtbl.value.get_file_type_index.unsafe_as(Proc(UInt32*, HRESULT)).call(pifiletype)
  end
  def advise(pfde : IFileDialogEvents, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(IFileDialogEvents, UInt32*, HRESULT)).call(pfde, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def set_options(fos : UInt32) : HRESULT
    @lpVtbl.value.set_options.unsafe_as(Proc(UInt32, HRESULT)).call(fos)
  end
  def get_options(pfos : UInt32*) : HRESULT
    @lpVtbl.value.get_options.unsafe_as(Proc(UInt32*, HRESULT)).call(pfos)
  end
  def set_default_folder(psi : IShellItem) : HRESULT
    @lpVtbl.value.set_default_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def set_folder(psi : IShellItem) : HRESULT
    @lpVtbl.value.set_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def get_folder(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def get_current_selection(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_current_selection.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def set_file_name(pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_file_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszname)
  end
  def get_file_name(pszname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_file_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(pszname)
  end
  def set_title(psztitle : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_title.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztitle)
  end
  def set_ok_button_label(psztext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_ok_button_label.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztext)
  end
  def set_file_name_label(pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_file_name_label.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszlabel)
  end
  def get_result(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_result.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def add_place(psi : IShellItem, fdap : FDAP) : HRESULT
    @lpVtbl.value.add_place.unsafe_as(Proc(IShellItem, FDAP, HRESULT)).call(psi, fdap)
  end
  def set_default_extension(pszdefaultextension : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_default_extension.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszdefaultextension)
  end
  def close(hr : HRESULT) : HRESULT
    @lpVtbl.value.close.unsafe_as(Proc(HRESULT, HRESULT)).call(hr)
  end
  def set_client_guid(guid : Guid*) : HRESULT
    @lpVtbl.value.set_client_guid.unsafe_as(Proc(Guid*, HRESULT)).call(guid)
  end
  def clear_client_data : HRESULT
    @lpVtbl.value.clear_client_data.unsafe_as(Proc(HRESULT)).call
  end
  def set_filter(pfilter : IShellItemFilter) : HRESULT
    @lpVtbl.value.set_filter.unsafe_as(Proc(IShellItemFilter, HRESULT)).call(pfilter)
  end
end
struct LibWin32::IFileSaveDialog
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show(hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.show.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndowner)
  end
  def set_file_types(cfiletypes : UInt32, rgfilterspec : COMDLG_FILTERSPEC*) : HRESULT
    @lpVtbl.value.set_file_types.unsafe_as(Proc(UInt32, COMDLG_FILTERSPEC*, HRESULT)).call(cfiletypes, rgfilterspec)
  end
  def set_file_type_index(ifiletype : UInt32) : HRESULT
    @lpVtbl.value.set_file_type_index.unsafe_as(Proc(UInt32, HRESULT)).call(ifiletype)
  end
  def get_file_type_index(pifiletype : UInt32*) : HRESULT
    @lpVtbl.value.get_file_type_index.unsafe_as(Proc(UInt32*, HRESULT)).call(pifiletype)
  end
  def advise(pfde : IFileDialogEvents, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(IFileDialogEvents, UInt32*, HRESULT)).call(pfde, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def set_options(fos : UInt32) : HRESULT
    @lpVtbl.value.set_options.unsafe_as(Proc(UInt32, HRESULT)).call(fos)
  end
  def get_options(pfos : UInt32*) : HRESULT
    @lpVtbl.value.get_options.unsafe_as(Proc(UInt32*, HRESULT)).call(pfos)
  end
  def set_default_folder(psi : IShellItem) : HRESULT
    @lpVtbl.value.set_default_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def set_folder(psi : IShellItem) : HRESULT
    @lpVtbl.value.set_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def get_folder(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def get_current_selection(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_current_selection.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def set_file_name(pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_file_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszname)
  end
  def get_file_name(pszname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_file_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(pszname)
  end
  def set_title(psztitle : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_title.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztitle)
  end
  def set_ok_button_label(psztext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_ok_button_label.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztext)
  end
  def set_file_name_label(pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_file_name_label.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszlabel)
  end
  def get_result(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_result.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def add_place(psi : IShellItem, fdap : FDAP) : HRESULT
    @lpVtbl.value.add_place.unsafe_as(Proc(IShellItem, FDAP, HRESULT)).call(psi, fdap)
  end
  def set_default_extension(pszdefaultextension : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_default_extension.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszdefaultextension)
  end
  def close(hr : HRESULT) : HRESULT
    @lpVtbl.value.close.unsafe_as(Proc(HRESULT, HRESULT)).call(hr)
  end
  def set_client_guid(guid : Guid*) : HRESULT
    @lpVtbl.value.set_client_guid.unsafe_as(Proc(Guid*, HRESULT)).call(guid)
  end
  def clear_client_data : HRESULT
    @lpVtbl.value.clear_client_data.unsafe_as(Proc(HRESULT)).call
  end
  def set_filter(pfilter : IShellItemFilter) : HRESULT
    @lpVtbl.value.set_filter.unsafe_as(Proc(IShellItemFilter, HRESULT)).call(pfilter)
  end
  def set_save_as_item(psi : IShellItem) : HRESULT
    @lpVtbl.value.set_save_as_item.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def set_properties(pstore : IPropertyStore) : HRESULT
    @lpVtbl.value.set_properties.unsafe_as(Proc(IPropertyStore, HRESULT)).call(pstore)
  end
  def set_collected_properties(plist : IPropertyDescriptionList, fappenddefault : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_collected_properties.unsafe_as(Proc(IPropertyDescriptionList, LibC::BOOL, HRESULT)).call(plist, fappenddefault)
  end
  def get_properties(ppstore : IPropertyStore*) : HRESULT
    @lpVtbl.value.get_properties.unsafe_as(Proc(IPropertyStore*, HRESULT)).call(ppstore)
  end
  def apply_properties(psi : IShellItem, pstore : IPropertyStore, hwnd : LibC::HANDLE, psink : IFileOperationProgressSink) : HRESULT
    @lpVtbl.value.apply_properties.unsafe_as(Proc(IShellItem, IPropertyStore, LibC::HANDLE, IFileOperationProgressSink, HRESULT)).call(psi, pstore, hwnd, psink)
  end
end
struct LibWin32::IFileOpenDialog
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show(hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.show.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndowner)
  end
  def set_file_types(cfiletypes : UInt32, rgfilterspec : COMDLG_FILTERSPEC*) : HRESULT
    @lpVtbl.value.set_file_types.unsafe_as(Proc(UInt32, COMDLG_FILTERSPEC*, HRESULT)).call(cfiletypes, rgfilterspec)
  end
  def set_file_type_index(ifiletype : UInt32) : HRESULT
    @lpVtbl.value.set_file_type_index.unsafe_as(Proc(UInt32, HRESULT)).call(ifiletype)
  end
  def get_file_type_index(pifiletype : UInt32*) : HRESULT
    @lpVtbl.value.get_file_type_index.unsafe_as(Proc(UInt32*, HRESULT)).call(pifiletype)
  end
  def advise(pfde : IFileDialogEvents, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(IFileDialogEvents, UInt32*, HRESULT)).call(pfde, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def set_options(fos : UInt32) : HRESULT
    @lpVtbl.value.set_options.unsafe_as(Proc(UInt32, HRESULT)).call(fos)
  end
  def get_options(pfos : UInt32*) : HRESULT
    @lpVtbl.value.get_options.unsafe_as(Proc(UInt32*, HRESULT)).call(pfos)
  end
  def set_default_folder(psi : IShellItem) : HRESULT
    @lpVtbl.value.set_default_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def set_folder(psi : IShellItem) : HRESULT
    @lpVtbl.value.set_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def get_folder(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def get_current_selection(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_current_selection.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def set_file_name(pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_file_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszname)
  end
  def get_file_name(pszname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_file_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(pszname)
  end
  def set_title(psztitle : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_title.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztitle)
  end
  def set_ok_button_label(psztext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_ok_button_label.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztext)
  end
  def set_file_name_label(pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_file_name_label.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszlabel)
  end
  def get_result(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_result.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def add_place(psi : IShellItem, fdap : FDAP) : HRESULT
    @lpVtbl.value.add_place.unsafe_as(Proc(IShellItem, FDAP, HRESULT)).call(psi, fdap)
  end
  def set_default_extension(pszdefaultextension : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_default_extension.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszdefaultextension)
  end
  def close(hr : HRESULT) : HRESULT
    @lpVtbl.value.close.unsafe_as(Proc(HRESULT, HRESULT)).call(hr)
  end
  def set_client_guid(guid : Guid*) : HRESULT
    @lpVtbl.value.set_client_guid.unsafe_as(Proc(Guid*, HRESULT)).call(guid)
  end
  def clear_client_data : HRESULT
    @lpVtbl.value.clear_client_data.unsafe_as(Proc(HRESULT)).call
  end
  def set_filter(pfilter : IShellItemFilter) : HRESULT
    @lpVtbl.value.set_filter.unsafe_as(Proc(IShellItemFilter, HRESULT)).call(pfilter)
  end
  def get_results(ppenum : IShellItemArray*) : HRESULT
    @lpVtbl.value.get_results.unsafe_as(Proc(IShellItemArray*, HRESULT)).call(ppenum)
  end
  def get_selected_items(ppsai : IShellItemArray*) : HRESULT
    @lpVtbl.value.get_selected_items.unsafe_as(Proc(IShellItemArray*, HRESULT)).call(ppsai)
  end
end
struct LibWin32::IFileDialogCustomize
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def enable_open_drop_down(dwidctl : UInt32) : HRESULT
    @lpVtbl.value.enable_open_drop_down.unsafe_as(Proc(UInt32, HRESULT)).call(dwidctl)
  end
  def add_menu(dwidctl : UInt32, pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.add_menu.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(dwidctl, pszlabel)
  end
  def add_push_button(dwidctl : UInt32, pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.add_push_button.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(dwidctl, pszlabel)
  end
  def add_combo_box(dwidctl : UInt32) : HRESULT
    @lpVtbl.value.add_combo_box.unsafe_as(Proc(UInt32, HRESULT)).call(dwidctl)
  end
  def add_radio_button_list(dwidctl : UInt32) : HRESULT
    @lpVtbl.value.add_radio_button_list.unsafe_as(Proc(UInt32, HRESULT)).call(dwidctl)
  end
  def add_check_button(dwidctl : UInt32, pszlabel : LibC::LPWSTR, bchecked : LibC::BOOL) : HRESULT
    @lpVtbl.value.add_check_button.unsafe_as(Proc(UInt32, LibC::LPWSTR, LibC::BOOL, HRESULT)).call(dwidctl, pszlabel, bchecked)
  end
  def add_edit_box(dwidctl : UInt32, psztext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.add_edit_box.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(dwidctl, psztext)
  end
  def add_separator(dwidctl : UInt32) : HRESULT
    @lpVtbl.value.add_separator.unsafe_as(Proc(UInt32, HRESULT)).call(dwidctl)
  end
  def add_text(dwidctl : UInt32, psztext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.add_text.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(dwidctl, psztext)
  end
  def set_control_label(dwidctl : UInt32, pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_control_label.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(dwidctl, pszlabel)
  end
  def get_control_state(dwidctl : UInt32, pdwstate : CDCONTROLSTATEF*) : HRESULT
    @lpVtbl.value.get_control_state.unsafe_as(Proc(UInt32, CDCONTROLSTATEF*, HRESULT)).call(dwidctl, pdwstate)
  end
  def set_control_state(dwidctl : UInt32, dwstate : CDCONTROLSTATEF) : HRESULT
    @lpVtbl.value.set_control_state.unsafe_as(Proc(UInt32, CDCONTROLSTATEF, HRESULT)).call(dwidctl, dwstate)
  end
  def get_edit_box_text(dwidctl : UInt32, ppsztext : UInt16**) : HRESULT
    @lpVtbl.value.get_edit_box_text.unsafe_as(Proc(UInt32, UInt16**, HRESULT)).call(dwidctl, ppsztext)
  end
  def set_edit_box_text(dwidctl : UInt32, psztext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_edit_box_text.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(dwidctl, psztext)
  end
  def get_check_button_state(dwidctl : UInt32, pbchecked : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_check_button_state.unsafe_as(Proc(UInt32, LibC::BOOL*, HRESULT)).call(dwidctl, pbchecked)
  end
  def set_check_button_state(dwidctl : UInt32, bchecked : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_check_button_state.unsafe_as(Proc(UInt32, LibC::BOOL, HRESULT)).call(dwidctl, bchecked)
  end
  def add_control_item(dwidctl : UInt32, dwiditem : UInt32, pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.add_control_item.unsafe_as(Proc(UInt32, UInt32, LibC::LPWSTR, HRESULT)).call(dwidctl, dwiditem, pszlabel)
  end
  def remove_control_item(dwidctl : UInt32, dwiditem : UInt32) : HRESULT
    @lpVtbl.value.remove_control_item.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwidctl, dwiditem)
  end
  def remove_all_control_items(dwidctl : UInt32) : HRESULT
    @lpVtbl.value.remove_all_control_items.unsafe_as(Proc(UInt32, HRESULT)).call(dwidctl)
  end
  def get_control_item_state(dwidctl : UInt32, dwiditem : UInt32, pdwstate : CDCONTROLSTATEF*) : HRESULT
    @lpVtbl.value.get_control_item_state.unsafe_as(Proc(UInt32, UInt32, CDCONTROLSTATEF*, HRESULT)).call(dwidctl, dwiditem, pdwstate)
  end
  def set_control_item_state(dwidctl : UInt32, dwiditem : UInt32, dwstate : CDCONTROLSTATEF) : HRESULT
    @lpVtbl.value.set_control_item_state.unsafe_as(Proc(UInt32, UInt32, CDCONTROLSTATEF, HRESULT)).call(dwidctl, dwiditem, dwstate)
  end
  def get_selected_control_item(dwidctl : UInt32, pdwiditem : UInt32*) : HRESULT
    @lpVtbl.value.get_selected_control_item.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(dwidctl, pdwiditem)
  end
  def set_selected_control_item(dwidctl : UInt32, dwiditem : UInt32) : HRESULT
    @lpVtbl.value.set_selected_control_item.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwidctl, dwiditem)
  end
  def start_visual_group(dwidctl : UInt32, pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.start_visual_group.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(dwidctl, pszlabel)
  end
  def end_visual_group : HRESULT
    @lpVtbl.value.end_visual_group.unsafe_as(Proc(HRESULT)).call
  end
  def make_prominent(dwidctl : UInt32) : HRESULT
    @lpVtbl.value.make_prominent.unsafe_as(Proc(UInt32, HRESULT)).call(dwidctl)
  end
  def set_control_item_text(dwidctl : UInt32, dwiditem : UInt32, pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_control_item_text.unsafe_as(Proc(UInt32, UInt32, LibC::LPWSTR, HRESULT)).call(dwidctl, dwiditem, pszlabel)
  end
end
struct LibWin32::IApplicationAssociationRegistration
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def query_current_default(pszquery : LibC::LPWSTR, atquerytype : ASSOCIATIONTYPE, alquerylevel : ASSOCIATIONLEVEL, ppszassociation : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.query_current_default.unsafe_as(Proc(LibC::LPWSTR, ASSOCIATIONTYPE, ASSOCIATIONLEVEL, LibC::LPWSTR*, HRESULT)).call(pszquery, atquerytype, alquerylevel, ppszassociation)
  end
  def query_app_is_default(pszquery : LibC::LPWSTR, atquerytype : ASSOCIATIONTYPE, alquerylevel : ASSOCIATIONLEVEL, pszappregistryname : LibC::LPWSTR, pfdefault : LibC::BOOL*) : HRESULT
    @lpVtbl.value.query_app_is_default.unsafe_as(Proc(LibC::LPWSTR, ASSOCIATIONTYPE, ASSOCIATIONLEVEL, LibC::LPWSTR, LibC::BOOL*, HRESULT)).call(pszquery, atquerytype, alquerylevel, pszappregistryname, pfdefault)
  end
  def query_app_is_default_all(alquerylevel : ASSOCIATIONLEVEL, pszappregistryname : LibC::LPWSTR, pfdefault : LibC::BOOL*) : HRESULT
    @lpVtbl.value.query_app_is_default_all.unsafe_as(Proc(ASSOCIATIONLEVEL, LibC::LPWSTR, LibC::BOOL*, HRESULT)).call(alquerylevel, pszappregistryname, pfdefault)
  end
  def set_app_as_default(pszappregistryname : LibC::LPWSTR, pszset : LibC::LPWSTR, atsettype : ASSOCIATIONTYPE) : HRESULT
    @lpVtbl.value.set_app_as_default.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, ASSOCIATIONTYPE, HRESULT)).call(pszappregistryname, pszset, atsettype)
  end
  def set_app_as_default_all(pszappregistryname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_app_as_default_all.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszappregistryname)
  end
  def clear_user_associations : HRESULT
    @lpVtbl.value.clear_user_associations.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IDelegateFolder
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_item_alloc(pmalloc : IMalloc) : HRESULT
    @lpVtbl.value.set_item_alloc.unsafe_as(Proc(IMalloc, HRESULT)).call(pmalloc)
  end
end
struct LibWin32::IBrowserFrameOptions
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_frame_options(dwmask : UInt32, pdwoptions : UInt32*) : HRESULT
    @lpVtbl.value.get_frame_options.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(dwmask, pdwoptions)
  end
end
struct LibWin32::INewWindowManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def evaluate_new_window(pszurl : LibC::LPWSTR, pszname : LibC::LPWSTR, pszurlcontext : LibC::LPWSTR, pszfeatures : LibC::LPWSTR, freplace : LibC::BOOL, dwflags : UInt32, dwuseractiontime : UInt32) : HRESULT
    @lpVtbl.value.evaluate_new_window.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::BOOL, UInt32, UInt32, HRESULT)).call(pszurl, pszname, pszurlcontext, pszfeatures, freplace, dwflags, dwuseractiontime)
  end
end
struct LibWin32::IAttachmentExecute
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_client_title(psztitle : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_client_title.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztitle)
  end
  def set_client_guid(guid : Guid*) : HRESULT
    @lpVtbl.value.set_client_guid.unsafe_as(Proc(Guid*, HRESULT)).call(guid)
  end
  def set_local_path(pszlocalpath : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_local_path.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszlocalpath)
  end
  def set_file_name(pszfilename : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_file_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszfilename)
  end
  def set_source(pszsource : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_source.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszsource)
  end
  def set_referrer(pszreferrer : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_referrer.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszreferrer)
  end
  def check_policy : HRESULT
    @lpVtbl.value.check_policy.unsafe_as(Proc(HRESULT)).call
  end
  def prompt(hwnd : LibC::HANDLE, prompt : ATTACHMENT_PROMPT, paction : ATTACHMENT_ACTION*) : HRESULT
    @lpVtbl.value.prompt.unsafe_as(Proc(LibC::HANDLE, ATTACHMENT_PROMPT, ATTACHMENT_ACTION*, HRESULT)).call(hwnd, prompt, paction)
  end
  def save : HRESULT
    @lpVtbl.value.save.unsafe_as(Proc(HRESULT)).call
  end
  def execute(hwnd : LibC::HANDLE, pszverb : LibC::LPWSTR, phprocess : LibC::HANDLE*) : HRESULT
    @lpVtbl.value.execute.unsafe_as(Proc(LibC::HANDLE, LibC::LPWSTR, LibC::HANDLE*, HRESULT)).call(hwnd, pszverb, phprocess)
  end
  def save_with_ui(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.save_with_ui.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def clear_client_state : HRESULT
    @lpVtbl.value.clear_client_state.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IShellMenuCallback
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def callback_sm(psmd : SMDATA*, umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : HRESULT
    @lpVtbl.value.callback_sm.unsafe_as(Proc(SMDATA*, UInt32, LibC::UINT_PTR, LPARAM, HRESULT)).call(psmd, umsg, wparam, lparam)
  end
end
struct LibWin32::IShellMenu
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(psmc : IShellMenuCallback, uid : UInt32, uidancestor : UInt32, dwflags : UInt32) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(IShellMenuCallback, UInt32, UInt32, UInt32, HRESULT)).call(psmc, uid, uidancestor, dwflags)
  end
  def get_menu_info(ppsmc : IShellMenuCallback*, puid : UInt32*, puidancestor : UInt32*, pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_menu_info.unsafe_as(Proc(IShellMenuCallback*, UInt32*, UInt32*, UInt32*, HRESULT)).call(ppsmc, puid, puidancestor, pdwflags)
  end
  def set_shell_folder(psf : IShellFolder, pidlfolder : ITEMIDLIST*, hkey : HKEY, dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_shell_folder.unsafe_as(Proc(IShellFolder, ITEMIDLIST*, HKEY, UInt32, HRESULT)).call(psf, pidlfolder, hkey, dwflags)
  end
  def get_shell_folder(pdwflags : UInt32*, ppidl : ITEMIDLIST**, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_shell_folder.unsafe_as(Proc(UInt32*, ITEMIDLIST**, Guid*, Void**, HRESULT)).call(pdwflags, ppidl, riid, ppv)
  end
  def set_menu(hmenu : LibC::HANDLE, hwnd : LibC::HANDLE, dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_menu.unsafe_as(Proc(LibC::HANDLE, LibC::HANDLE, UInt32, HRESULT)).call(hmenu, hwnd, dwflags)
  end
  def get_menu(phmenu : HANDLE*, phwnd : HANDLE*, pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_menu.unsafe_as(Proc(HANDLE*, HANDLE*, UInt32*, HRESULT)).call(phmenu, phwnd, pdwflags)
  end
  def invalidate_item(psmd : SMDATA*, dwflags : UInt32) : HRESULT
    @lpVtbl.value.invalidate_item.unsafe_as(Proc(SMDATA*, UInt32, HRESULT)).call(psmd, dwflags)
  end
  def get_state(psmd : SMDATA*) : HRESULT
    @lpVtbl.value.get_state.unsafe_as(Proc(SMDATA*, HRESULT)).call(psmd)
  end
  def set_menu_toolbar(punk : IUnknown, dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_menu_toolbar.unsafe_as(Proc(IUnknown, UInt32, HRESULT)).call(punk, dwflags)
  end
end
struct LibWin32::IKnownFolder
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_id(pkfid : Guid*) : HRESULT
    @lpVtbl.value.get_id.unsafe_as(Proc(Guid*, HRESULT)).call(pkfid)
  end
  def get_category(pcategory : KF_CATEGORY*) : HRESULT
    @lpVtbl.value.get_category.unsafe_as(Proc(KF_CATEGORY*, HRESULT)).call(pcategory)
  end
  def get_shell_item(dwflags : UInt32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_shell_item.unsafe_as(Proc(UInt32, Guid*, Void**, HRESULT)).call(dwflags, riid, ppv)
  end
  def get_path(dwflags : UInt32, ppszpath : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_path.unsafe_as(Proc(UInt32, LibC::LPWSTR*, HRESULT)).call(dwflags, ppszpath)
  end
  def set_path(dwflags : UInt32, pszpath : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_path.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(dwflags, pszpath)
  end
  def get_id_list(dwflags : UInt32, ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_id_list.unsafe_as(Proc(UInt32, ITEMIDLIST**, HRESULT)).call(dwflags, ppidl)
  end
  def get_folder_type(pftid : Guid*) : HRESULT
    @lpVtbl.value.get_folder_type.unsafe_as(Proc(Guid*, HRESULT)).call(pftid)
  end
  def get_redirection_capabilities(pcapabilities : UInt32*) : HRESULT
    @lpVtbl.value.get_redirection_capabilities.unsafe_as(Proc(UInt32*, HRESULT)).call(pcapabilities)
  end
  def get_folder_definition(pkfd : KNOWNFOLDER_DEFINITION*) : HRESULT
    @lpVtbl.value.get_folder_definition.unsafe_as(Proc(KNOWNFOLDER_DEFINITION*, HRESULT)).call(pkfd)
  end
end
struct LibWin32::IKnownFolderManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def folder_id_from_csidl(ncsidl : Int32, pfid : Guid*) : HRESULT
    @lpVtbl.value.folder_id_from_csidl.unsafe_as(Proc(Int32, Guid*, HRESULT)).call(ncsidl, pfid)
  end
  def folder_id_to_csidl(rfid : Guid*, pncsidl : Int32*) : HRESULT
    @lpVtbl.value.folder_id_to_csidl.unsafe_as(Proc(Guid*, Int32*, HRESULT)).call(rfid, pncsidl)
  end
  def get_folder_ids(ppkfid : Guid**, pcount : UInt32*) : HRESULT
    @lpVtbl.value.get_folder_ids.unsafe_as(Proc(Guid**, UInt32*, HRESULT)).call(ppkfid, pcount)
  end
  def get_folder(rfid : Guid*, ppkf : IKnownFolder*) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(Guid*, IKnownFolder*, HRESULT)).call(rfid, ppkf)
  end
  def get_folder_by_name(pszcanonicalname : LibC::LPWSTR, ppkf : IKnownFolder*) : HRESULT
    @lpVtbl.value.get_folder_by_name.unsafe_as(Proc(LibC::LPWSTR, IKnownFolder*, HRESULT)).call(pszcanonicalname, ppkf)
  end
  def register_folder(rfid : Guid*, pkfd : KNOWNFOLDER_DEFINITION*) : HRESULT
    @lpVtbl.value.register_folder.unsafe_as(Proc(Guid*, KNOWNFOLDER_DEFINITION*, HRESULT)).call(rfid, pkfd)
  end
  def unregister_folder(rfid : Guid*) : HRESULT
    @lpVtbl.value.unregister_folder.unsafe_as(Proc(Guid*, HRESULT)).call(rfid)
  end
  def find_folder_from_path(pszpath : LibC::LPWSTR, mode : FFFP_MODE, ppkf : IKnownFolder*) : HRESULT
    @lpVtbl.value.find_folder_from_path.unsafe_as(Proc(LibC::LPWSTR, FFFP_MODE, IKnownFolder*, HRESULT)).call(pszpath, mode, ppkf)
  end
  def find_folder_from_id_list(pidl : ITEMIDLIST*, ppkf : IKnownFolder*) : HRESULT
    @lpVtbl.value.find_folder_from_id_list.unsafe_as(Proc(ITEMIDLIST*, IKnownFolder*, HRESULT)).call(pidl, ppkf)
  end
  def redirect(rfid : Guid*, hwnd : LibC::HANDLE, flags : UInt32, psztargetpath : LibC::LPWSTR, cfolders : UInt32, pexclusion : Guid*, ppszerror : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.redirect.unsafe_as(Proc(Guid*, LibC::HANDLE, UInt32, LibC::LPWSTR, UInt32, Guid*, LibC::LPWSTR*, HRESULT)).call(rfid, hwnd, flags, psztargetpath, cfolders, pexclusion, ppszerror)
  end
end
struct LibWin32::ISharingConfigurationManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_share(dsid : DEF_SHARE_ID, role : SHARE_ROLE) : HRESULT
    @lpVtbl.value.create_share.unsafe_as(Proc(DEF_SHARE_ID, SHARE_ROLE, HRESULT)).call(dsid, role)
  end
  def delete_share(dsid : DEF_SHARE_ID) : HRESULT
    @lpVtbl.value.delete_share.unsafe_as(Proc(DEF_SHARE_ID, HRESULT)).call(dsid)
  end
  def share_exists(dsid : DEF_SHARE_ID) : HRESULT
    @lpVtbl.value.share_exists.unsafe_as(Proc(DEF_SHARE_ID, HRESULT)).call(dsid)
  end
  def get_share_permissions(dsid : DEF_SHARE_ID, prole : SHARE_ROLE*) : HRESULT
    @lpVtbl.value.get_share_permissions.unsafe_as(Proc(DEF_SHARE_ID, SHARE_ROLE*, HRESULT)).call(dsid, prole)
  end
  def share_printers : HRESULT
    @lpVtbl.value.share_printers.unsafe_as(Proc(HRESULT)).call
  end
  def stop_sharing_printers : HRESULT
    @lpVtbl.value.stop_sharing_printers.unsafe_as(Proc(HRESULT)).call
  end
  def are_printers_shared : HRESULT
    @lpVtbl.value.are_printers_shared.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IRelatedItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_item_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_item_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def get_item(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
end
struct LibWin32::IIdentityName
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_item_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_item_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def get_item(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
end
struct LibWin32::IDelegateItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_item_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_item_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def get_item(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
end
struct LibWin32::ICurrentItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_item_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_item_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def get_item(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
end
struct LibWin32::ITransferMediumItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_item_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_item_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def get_item(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
end
struct LibWin32::IDisplayItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_item_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_item_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def get_item(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
end
struct LibWin32::IViewStateIdentityItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_item_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_item_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def get_item(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
end
struct LibWin32::IPreviewItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_item_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_item_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def get_item(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
end
struct LibWin32::IDestinationStreamFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_destination_stream(ppstm : IStream*) : HRESULT
    @lpVtbl.value.get_destination_stream.unsafe_as(Proc(IStream*, HRESULT)).call(ppstm)
  end
end
struct LibWin32::ICreateProcessInputs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_create_flags(pdwcreationflags : UInt32*) : HRESULT
    @lpVtbl.value.get_create_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwcreationflags)
  end
  def set_create_flags(dwcreationflags : UInt32) : HRESULT
    @lpVtbl.value.set_create_flags.unsafe_as(Proc(UInt32, HRESULT)).call(dwcreationflags)
  end
  def add_create_flags(dwcreationflags : UInt32) : HRESULT
    @lpVtbl.value.add_create_flags.unsafe_as(Proc(UInt32, HRESULT)).call(dwcreationflags)
  end
  def set_hot_key(whotkey : UInt16) : HRESULT
    @lpVtbl.value.set_hot_key.unsafe_as(Proc(UInt16, HRESULT)).call(whotkey)
  end
  def add_startup_flags(dwstartupinfoflags : UInt32) : HRESULT
    @lpVtbl.value.add_startup_flags.unsafe_as(Proc(UInt32, HRESULT)).call(dwstartupinfoflags)
  end
  def set_title(psztitle : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_title.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztitle)
  end
  def set_environment_variable(pszname : LibC::LPWSTR, pszvalue : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_environment_variable.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(pszname, pszvalue)
  end
end
struct LibWin32::ICreatingProcess
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_creating(pcpi : ICreateProcessInputs) : HRESULT
    @lpVtbl.value.on_creating.unsafe_as(Proc(ICreateProcessInputs, HRESULT)).call(pcpi)
  end
end
struct LibWin32::ILaunchUIContext
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_associated_window(value : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_associated_window.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(value)
  end
  def set_tab_grouping_preference(value : UInt32) : HRESULT
    @lpVtbl.value.set_tab_grouping_preference.unsafe_as(Proc(UInt32, HRESULT)).call(value)
  end
end
struct LibWin32::ILaunchUIContextProvider
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def update_context(context : ILaunchUIContext) : HRESULT
    @lpVtbl.value.update_context.unsafe_as(Proc(ILaunchUIContext, HRESULT)).call(context)
  end
end
struct LibWin32::INewMenuClient
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def include_items(pflags : Int32*) : HRESULT
    @lpVtbl.value.include_items.unsafe_as(Proc(Int32*, HRESULT)).call(pflags)
  end
  def select_and_edit_item(pidlitem : ITEMIDLIST*, flags : Int32) : HRESULT
    @lpVtbl.value.select_and_edit_item.unsafe_as(Proc(ITEMIDLIST*, Int32, HRESULT)).call(pidlitem, flags)
  end
end
struct LibWin32::IInitializeWithBindCtx
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(pbc : IBindCtx) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(IBindCtx, HRESULT)).call(pbc)
  end
end
struct LibWin32::IShellItemFilter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def include_item(psi : IShellItem) : HRESULT
    @lpVtbl.value.include_item.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def get_enum_flags_for_item(psi : IShellItem, pgrfflags : UInt32*) : HRESULT
    @lpVtbl.value.get_enum_flags_for_item.unsafe_as(Proc(IShellItem, UInt32*, HRESULT)).call(psi, pgrfflags)
  end
end
struct LibWin32::INameSpaceTreeControl
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(hwndparent : LibC::HANDLE, prc : RECT*, nsctsflags : UInt32) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(LibC::HANDLE, RECT*, UInt32, HRESULT)).call(hwndparent, prc, nsctsflags)
  end
  def tree_advise(punk : IUnknown, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.tree_advise.unsafe_as(Proc(IUnknown, UInt32*, HRESULT)).call(punk, pdwcookie)
  end
  def tree_unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.tree_unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def append_root(psiroot : IShellItem, grfenumflags : UInt32, grfrootstyle : UInt32, pif : IShellItemFilter) : HRESULT
    @lpVtbl.value.append_root.unsafe_as(Proc(IShellItem, UInt32, UInt32, IShellItemFilter, HRESULT)).call(psiroot, grfenumflags, grfrootstyle, pif)
  end
  def insert_root(iindex : Int32, psiroot : IShellItem, grfenumflags : UInt32, grfrootstyle : UInt32, pif : IShellItemFilter) : HRESULT
    @lpVtbl.value.insert_root.unsafe_as(Proc(Int32, IShellItem, UInt32, UInt32, IShellItemFilter, HRESULT)).call(iindex, psiroot, grfenumflags, grfrootstyle, pif)
  end
  def remove_root(psiroot : IShellItem) : HRESULT
    @lpVtbl.value.remove_root.unsafe_as(Proc(IShellItem, HRESULT)).call(psiroot)
  end
  def remove_all_roots : HRESULT
    @lpVtbl.value.remove_all_roots.unsafe_as(Proc(HRESULT)).call
  end
  def get_root_items(ppsiarootitems : IShellItemArray*) : HRESULT
    @lpVtbl.value.get_root_items.unsafe_as(Proc(IShellItemArray*, HRESULT)).call(ppsiarootitems)
  end
  def set_item_state(psi : IShellItem, nstcismask : UInt32, nstcisflags : UInt32) : HRESULT
    @lpVtbl.value.set_item_state.unsafe_as(Proc(IShellItem, UInt32, UInt32, HRESULT)).call(psi, nstcismask, nstcisflags)
  end
  def get_item_state(psi : IShellItem, nstcismask : UInt32, pnstcisflags : UInt32*) : HRESULT
    @lpVtbl.value.get_item_state.unsafe_as(Proc(IShellItem, UInt32, UInt32*, HRESULT)).call(psi, nstcismask, pnstcisflags)
  end
  def get_selected_items(psiaitems : IShellItemArray*) : HRESULT
    @lpVtbl.value.get_selected_items.unsafe_as(Proc(IShellItemArray*, HRESULT)).call(psiaitems)
  end
  def get_item_custom_state(psi : IShellItem, pistatenumber : Int32*) : HRESULT
    @lpVtbl.value.get_item_custom_state.unsafe_as(Proc(IShellItem, Int32*, HRESULT)).call(psi, pistatenumber)
  end
  def set_item_custom_state(psi : IShellItem, istatenumber : Int32) : HRESULT
    @lpVtbl.value.set_item_custom_state.unsafe_as(Proc(IShellItem, Int32, HRESULT)).call(psi, istatenumber)
  end
  def ensure_item_visible(psi : IShellItem) : HRESULT
    @lpVtbl.value.ensure_item_visible.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def set_theme(psztheme : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_theme.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztheme)
  end
  def get_next_item(psi : IShellItem, nstcgi : NSTCGNI, ppsinext : IShellItem*) : HRESULT
    @lpVtbl.value.get_next_item.unsafe_as(Proc(IShellItem, NSTCGNI, IShellItem*, HRESULT)).call(psi, nstcgi, ppsinext)
  end
  def hit_test(ppt : POINT*, ppsiout : IShellItem*) : HRESULT
    @lpVtbl.value.hit_test.unsafe_as(Proc(POINT*, IShellItem*, HRESULT)).call(ppt, ppsiout)
  end
  def get_item_rect(psi : IShellItem, prect : RECT*) : HRESULT
    @lpVtbl.value.get_item_rect.unsafe_as(Proc(IShellItem, RECT*, HRESULT)).call(psi, prect)
  end
  def collapse_all : HRESULT
    @lpVtbl.value.collapse_all.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::INameSpaceTreeControlFolderCapabilities
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_folder_capabilities(nfcmask : NSTCFOLDERCAPABILITIES, pnfcvalue : NSTCFOLDERCAPABILITIES*) : HRESULT
    @lpVtbl.value.get_folder_capabilities.unsafe_as(Proc(NSTCFOLDERCAPABILITIES, NSTCFOLDERCAPABILITIES*, HRESULT)).call(nfcmask, pnfcvalue)
  end
end
struct LibWin32::IPreviewHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_window(hwnd : LibC::HANDLE, prc : RECT*) : HRESULT
    @lpVtbl.value.set_window.unsafe_as(Proc(LibC::HANDLE, RECT*, HRESULT)).call(hwnd, prc)
  end
  def set_rect(prc : RECT*) : HRESULT
    @lpVtbl.value.set_rect.unsafe_as(Proc(RECT*, HRESULT)).call(prc)
  end
  def do_preview : HRESULT
    @lpVtbl.value.do_preview.unsafe_as(Proc(HRESULT)).call
  end
  def unload : HRESULT
    @lpVtbl.value.unload.unsafe_as(Proc(HRESULT)).call
  end
  def set_focus : HRESULT
    @lpVtbl.value.set_focus.unsafe_as(Proc(HRESULT)).call
  end
  def query_focus(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.query_focus.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def translate_accelerator(pmsg : MSG*) : HRESULT
    @lpVtbl.value.translate_accelerator.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
end
struct LibWin32::IPreviewHandlerFrame
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window_context(pinfo : PREVIEWHANDLERFRAMEINFO*) : HRESULT
    @lpVtbl.value.get_window_context.unsafe_as(Proc(PREVIEWHANDLERFRAMEINFO*, HRESULT)).call(pinfo)
  end
  def translate_accelerator(pmsg : MSG*) : HRESULT
    @lpVtbl.value.translate_accelerator.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
end
struct LibWin32::IExplorerPaneVisibility
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_pane_state(ep : Guid*, peps : UInt32*) : HRESULT
    @lpVtbl.value.get_pane_state.unsafe_as(Proc(Guid*, UInt32*, HRESULT)).call(ep, peps)
  end
end
struct LibWin32::IContextMenuCB
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def call_back(psf : IShellFolder, hwndowner : LibC::HANDLE, pdtobj : IDataObject, umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : HRESULT
    @lpVtbl.value.call_back.unsafe_as(Proc(IShellFolder, LibC::HANDLE, IDataObject, UInt32, LibC::UINT_PTR, LPARAM, HRESULT)).call(psf, hwndowner, pdtobj, umsg, wparam, lparam)
  end
end
struct LibWin32::IDefaultExtractIconInit
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_flags(uflags : UInt32) : HRESULT
    @lpVtbl.value.set_flags.unsafe_as(Proc(UInt32, HRESULT)).call(uflags)
  end
  def set_key(hkey : HKEY) : HRESULT
    @lpVtbl.value.set_key.unsafe_as(Proc(HKEY, HRESULT)).call(hkey)
  end
  def set_normal_icon(pszfile : LibC::LPWSTR, iicon : Int32) : HRESULT
    @lpVtbl.value.set_normal_icon.unsafe_as(Proc(LibC::LPWSTR, Int32, HRESULT)).call(pszfile, iicon)
  end
  def set_open_icon(pszfile : LibC::LPWSTR, iicon : Int32) : HRESULT
    @lpVtbl.value.set_open_icon.unsafe_as(Proc(LibC::LPWSTR, Int32, HRESULT)).call(pszfile, iicon)
  end
  def set_shortcut_icon(pszfile : LibC::LPWSTR, iicon : Int32) : HRESULT
    @lpVtbl.value.set_shortcut_icon.unsafe_as(Proc(LibC::LPWSTR, Int32, HRESULT)).call(pszfile, iicon)
  end
  def set_default_icon(pszfile : LibC::LPWSTR, iicon : Int32) : HRESULT
    @lpVtbl.value.set_default_icon.unsafe_as(Proc(LibC::LPWSTR, Int32, HRESULT)).call(pszfile, iicon)
  end
end
struct LibWin32::IExplorerCommand
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_title(psiitemarray : IShellItemArray, ppszname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(IShellItemArray, LibC::LPWSTR*, HRESULT)).call(psiitemarray, ppszname)
  end
  def get_icon(psiitemarray : IShellItemArray, ppszicon : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_icon.unsafe_as(Proc(IShellItemArray, LibC::LPWSTR*, HRESULT)).call(psiitemarray, ppszicon)
  end
  def get_tool_tip(psiitemarray : IShellItemArray, ppszinfotip : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_tool_tip.unsafe_as(Proc(IShellItemArray, LibC::LPWSTR*, HRESULT)).call(psiitemarray, ppszinfotip)
  end
  def get_canonical_name(pguidcommandname : Guid*) : HRESULT
    @lpVtbl.value.get_canonical_name.unsafe_as(Proc(Guid*, HRESULT)).call(pguidcommandname)
  end
  def get_state(psiitemarray : IShellItemArray, foktobeslow : LibC::BOOL, pcmdstate : UInt32*) : HRESULT
    @lpVtbl.value.get_state.unsafe_as(Proc(IShellItemArray, LibC::BOOL, UInt32*, HRESULT)).call(psiitemarray, foktobeslow, pcmdstate)
  end
  def invoke(psiitemarray : IShellItemArray, pbc : IBindCtx) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(IShellItemArray, IBindCtx, HRESULT)).call(psiitemarray, pbc)
  end
  def get_flags(pflags : UInt32*) : HRESULT
    @lpVtbl.value.get_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pflags)
  end
  def enum_sub_commands(ppenum : IEnumExplorerCommand*) : HRESULT
    @lpVtbl.value.enum_sub_commands.unsafe_as(Proc(IEnumExplorerCommand*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::IExplorerCommandState
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_state(psiitemarray : IShellItemArray, foktobeslow : LibC::BOOL, pcmdstate : UInt32*) : HRESULT
    @lpVtbl.value.get_state.unsafe_as(Proc(IShellItemArray, LibC::BOOL, UInt32*, HRESULT)).call(psiitemarray, foktobeslow, pcmdstate)
  end
end
struct LibWin32::IInitializeCommand
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(pszcommandname : LibC::LPWSTR, ppb : IPropertyBag) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(LibC::LPWSTR, IPropertyBag, HRESULT)).call(pszcommandname, ppb)
  end
end
struct LibWin32::IEnumExplorerCommand
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, puicommand : IExplorerCommand*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, IExplorerCommand*, UInt32*, HRESULT)).call(celt, puicommand, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumExplorerCommand*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumExplorerCommand*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::IExplorerCommandProvider
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_commands(punksite : IUnknown, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_commands.unsafe_as(Proc(IUnknown, Guid*, Void**, HRESULT)).call(punksite, riid, ppv)
  end
  def get_command(rguidcommandid : Guid*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_command.unsafe_as(Proc(Guid*, Guid*, Void**, HRESULT)).call(rguidcommandid, riid, ppv)
  end
end
struct LibWin32::IOpenControlPanel
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def open(pszname : LibC::LPWSTR, pszpage : LibC::LPWSTR, punksite : IUnknown) : HRESULT
    @lpVtbl.value.open.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, IUnknown, HRESULT)).call(pszname, pszpage, punksite)
  end
  def get_path(pszname : LibC::LPWSTR, pszpath : Char*, cchpath : UInt32) : HRESULT
    @lpVtbl.value.get_path.unsafe_as(Proc(LibC::LPWSTR, Char*, UInt32, HRESULT)).call(pszname, pszpath, cchpath)
  end
  def get_current_view(pview : CPVIEW*) : HRESULT
    @lpVtbl.value.get_current_view.unsafe_as(Proc(CPVIEW*, HRESULT)).call(pview)
  end
end
struct LibWin32::IFileSystemBindData
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_find_data(pfd : WIN32_FIND_DATAW*) : HRESULT
    @lpVtbl.value.set_find_data.unsafe_as(Proc(WIN32_FIND_DATAW*, HRESULT)).call(pfd)
  end
  def get_find_data(pfd : WIN32_FIND_DATAW*) : HRESULT
    @lpVtbl.value.get_find_data.unsafe_as(Proc(WIN32_FIND_DATAW*, HRESULT)).call(pfd)
  end
end
struct LibWin32::IFileSystemBindData2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_find_data(pfd : WIN32_FIND_DATAW*) : HRESULT
    @lpVtbl.value.set_find_data.unsafe_as(Proc(WIN32_FIND_DATAW*, HRESULT)).call(pfd)
  end
  def get_find_data(pfd : WIN32_FIND_DATAW*) : HRESULT
    @lpVtbl.value.get_find_data.unsafe_as(Proc(WIN32_FIND_DATAW*, HRESULT)).call(pfd)
  end
  def set_file_id(lifileid : LARGE_INTEGER) : HRESULT
    @lpVtbl.value.set_file_id.unsafe_as(Proc(LARGE_INTEGER, HRESULT)).call(lifileid)
  end
  def get_file_id(plifileid : LARGE_INTEGER*) : HRESULT
    @lpVtbl.value.get_file_id.unsafe_as(Proc(LARGE_INTEGER*, HRESULT)).call(plifileid)
  end
  def set_junction_clsid(clsid : Guid*) : HRESULT
    @lpVtbl.value.set_junction_clsid.unsafe_as(Proc(Guid*, HRESULT)).call(clsid)
  end
  def get_junction_clsid(pclsid : Guid*) : HRESULT
    @lpVtbl.value.get_junction_clsid.unsafe_as(Proc(Guid*, HRESULT)).call(pclsid)
  end
end
struct LibWin32::ICustomDestinationList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_app_id(pszappid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_app_id.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszappid)
  end
  def begin_list(pcminslots : UInt32*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.begin_list.unsafe_as(Proc(UInt32*, Guid*, Void**, HRESULT)).call(pcminslots, riid, ppv)
  end
  def append_category(pszcategory : LibC::LPWSTR, poa : IObjectArray) : HRESULT
    @lpVtbl.value.append_category.unsafe_as(Proc(LibC::LPWSTR, IObjectArray, HRESULT)).call(pszcategory, poa)
  end
  def append_known_category(category : KNOWNDESTCATEGORY) : HRESULT
    @lpVtbl.value.append_known_category.unsafe_as(Proc(KNOWNDESTCATEGORY, HRESULT)).call(category)
  end
  def add_user_tasks(poa : IObjectArray) : HRESULT
    @lpVtbl.value.add_user_tasks.unsafe_as(Proc(IObjectArray, HRESULT)).call(poa)
  end
  def commit_list : HRESULT
    @lpVtbl.value.commit_list.unsafe_as(Proc(HRESULT)).call
  end
  def get_removed_destinations(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_removed_destinations.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
  def delete_list(pszappid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.delete_list.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszappid)
  end
  def abort_list : HRESULT
    @lpVtbl.value.abort_list.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IApplicationDestinations
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_app_id(pszappid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_app_id.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszappid)
  end
  def remove_destination(punk : IUnknown) : HRESULT
    @lpVtbl.value.remove_destination.unsafe_as(Proc(IUnknown, HRESULT)).call(punk)
  end
  def remove_all_destinations : HRESULT
    @lpVtbl.value.remove_all_destinations.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IApplicationDocumentLists
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_app_id(pszappid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_app_id.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszappid)
  end
  def get_list(listtype : APPDOCLISTTYPE, citemsdesired : UInt32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_list.unsafe_as(Proc(APPDOCLISTTYPE, UInt32, Guid*, Void**, HRESULT)).call(listtype, citemsdesired, riid, ppv)
  end
end
struct LibWin32::IObjectWithAppUserModelID
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_app_id(pszappid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_app_id.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszappid)
  end
  def get_app_id(ppszappid : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_app_id.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszappid)
  end
end
struct LibWin32::IObjectWithProgID
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_prog_id(pszprogid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_prog_id.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszprogid)
  end
  def get_prog_id(ppszprogid : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_prog_id.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszprogid)
  end
end
struct LibWin32::IUpdateIDList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def update(pbc : IBindCtx, pidlin : ITEMIDLIST*, ppidlout : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.update.unsafe_as(Proc(IBindCtx, ITEMIDLIST*, ITEMIDLIST**, HRESULT)).call(pbc, pidlin, ppidlout)
  end
end
struct LibWin32::IDesktopWallpaper
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_wallpaper(monitorid : LibC::LPWSTR, wallpaper : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_wallpaper.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(monitorid, wallpaper)
  end
  def get_wallpaper(monitorid : LibC::LPWSTR, wallpaper : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_wallpaper.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR*, HRESULT)).call(monitorid, wallpaper)
  end
  def get_monitor_device_path_at(monitorindex : UInt32, monitorid : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_monitor_device_path_at.unsafe_as(Proc(UInt32, LibC::LPWSTR*, HRESULT)).call(monitorindex, monitorid)
  end
  def get_monitor_device_path_count(count : UInt32*) : HRESULT
    @lpVtbl.value.get_monitor_device_path_count.unsafe_as(Proc(UInt32*, HRESULT)).call(count)
  end
  def get_monitor_rect(monitorid : LibC::LPWSTR, displayrect : RECT*) : HRESULT
    @lpVtbl.value.get_monitor_rect.unsafe_as(Proc(LibC::LPWSTR, RECT*, HRESULT)).call(monitorid, displayrect)
  end
  def set_background_color(color : UInt32) : HRESULT
    @lpVtbl.value.set_background_color.unsafe_as(Proc(UInt32, HRESULT)).call(color)
  end
  def get_background_color(color : UInt32*) : HRESULT
    @lpVtbl.value.get_background_color.unsafe_as(Proc(UInt32*, HRESULT)).call(color)
  end
  def set_position(position : DESKTOP_WALLPAPER_POSITION) : HRESULT
    @lpVtbl.value.set_position.unsafe_as(Proc(DESKTOP_WALLPAPER_POSITION, HRESULT)).call(position)
  end
  def get_position(position : DESKTOP_WALLPAPER_POSITION*) : HRESULT
    @lpVtbl.value.get_position.unsafe_as(Proc(DESKTOP_WALLPAPER_POSITION*, HRESULT)).call(position)
  end
  def set_slideshow(items : IShellItemArray) : HRESULT
    @lpVtbl.value.set_slideshow.unsafe_as(Proc(IShellItemArray, HRESULT)).call(items)
  end
  def get_slideshow(items : IShellItemArray*) : HRESULT
    @lpVtbl.value.get_slideshow.unsafe_as(Proc(IShellItemArray*, HRESULT)).call(items)
  end
  def set_slideshow_options(options : DESKTOP_SLIDESHOW_OPTIONS, slideshowtick : UInt32) : HRESULT
    @lpVtbl.value.set_slideshow_options.unsafe_as(Proc(DESKTOP_SLIDESHOW_OPTIONS, UInt32, HRESULT)).call(options, slideshowtick)
  end
  def get_slideshow_options(options : DESKTOP_SLIDESHOW_OPTIONS*, slideshowtick : UInt32*) : HRESULT
    @lpVtbl.value.get_slideshow_options.unsafe_as(Proc(DESKTOP_SLIDESHOW_OPTIONS*, UInt32*, HRESULT)).call(options, slideshowtick)
  end
  def advance_slideshow(monitorid : LibC::LPWSTR, direction : DESKTOP_SLIDESHOW_DIRECTION) : HRESULT
    @lpVtbl.value.advance_slideshow.unsafe_as(Proc(LibC::LPWSTR, DESKTOP_SLIDESHOW_DIRECTION, HRESULT)).call(monitorid, direction)
  end
  def get_status(state : DESKTOP_SLIDESHOW_STATE*) : HRESULT
    @lpVtbl.value.get_status.unsafe_as(Proc(DESKTOP_SLIDESHOW_STATE*, HRESULT)).call(state)
  end
  def enable(enable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(enable)
  end
end
struct LibWin32::IHomeGroup
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def is_member(member : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_member.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(member)
  end
  def show_sharing_wizard(owner : LibC::HANDLE, sharingchoices : HOMEGROUPSHARINGCHOICES*) : HRESULT
    @lpVtbl.value.show_sharing_wizard.unsafe_as(Proc(LibC::HANDLE, HOMEGROUPSHARINGCHOICES*, HRESULT)).call(owner, sharingchoices)
  end
end
struct LibWin32::IInitializeWithPropertyStore
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(pps : IPropertyStore) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(IPropertyStore, HRESULT)).call(pps)
  end
end
struct LibWin32::IOpenSearchSource
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_results(hwnd : LibC::HANDLE, pszquery : LibC::LPWSTR, dwstartindex : UInt32, dwcount : UInt32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_results.unsafe_as(Proc(LibC::HANDLE, LibC::LPWSTR, UInt32, UInt32, Guid*, Void**, HRESULT)).call(hwnd, pszquery, dwstartindex, dwcount, riid, ppv)
  end
end
struct LibWin32::IShellLibrary
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def load_library_from_item(psilibrary : IShellItem, grfmode : UInt32) : HRESULT
    @lpVtbl.value.load_library_from_item.unsafe_as(Proc(IShellItem, UInt32, HRESULT)).call(psilibrary, grfmode)
  end
  def load_library_from_known_folder(kfidlibrary : Guid*, grfmode : UInt32) : HRESULT
    @lpVtbl.value.load_library_from_known_folder.unsafe_as(Proc(Guid*, UInt32, HRESULT)).call(kfidlibrary, grfmode)
  end
  def add_folder(psilocation : IShellItem) : HRESULT
    @lpVtbl.value.add_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psilocation)
  end
  def remove_folder(psilocation : IShellItem) : HRESULT
    @lpVtbl.value.remove_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psilocation)
  end
  def get_folders(lff : LIBRARYFOLDERFILTER, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_folders.unsafe_as(Proc(LIBRARYFOLDERFILTER, Guid*, Void**, HRESULT)).call(lff, riid, ppv)
  end
  def resolve_folder(psifoldertoresolve : IShellItem, dwtimeout : UInt32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.resolve_folder.unsafe_as(Proc(IShellItem, UInt32, Guid*, Void**, HRESULT)).call(psifoldertoresolve, dwtimeout, riid, ppv)
  end
  def get_default_save_folder(dsft : DEFAULTSAVEFOLDERTYPE, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_default_save_folder.unsafe_as(Proc(DEFAULTSAVEFOLDERTYPE, Guid*, Void**, HRESULT)).call(dsft, riid, ppv)
  end
  def set_default_save_folder(dsft : DEFAULTSAVEFOLDERTYPE, psi : IShellItem) : HRESULT
    @lpVtbl.value.set_default_save_folder.unsafe_as(Proc(DEFAULTSAVEFOLDERTYPE, IShellItem, HRESULT)).call(dsft, psi)
  end
  def get_options(plofoptions : LIBRARYOPTIONFLAGS*) : HRESULT
    @lpVtbl.value.get_options.unsafe_as(Proc(LIBRARYOPTIONFLAGS*, HRESULT)).call(plofoptions)
  end
  def set_options(lofmask : LIBRARYOPTIONFLAGS, lofoptions : LIBRARYOPTIONFLAGS) : HRESULT
    @lpVtbl.value.set_options.unsafe_as(Proc(LIBRARYOPTIONFLAGS, LIBRARYOPTIONFLAGS, HRESULT)).call(lofmask, lofoptions)
  end
  def get_folder_type(pftid : Guid*) : HRESULT
    @lpVtbl.value.get_folder_type.unsafe_as(Proc(Guid*, HRESULT)).call(pftid)
  end
  def set_folder_type(ftid : Guid*) : HRESULT
    @lpVtbl.value.set_folder_type.unsafe_as(Proc(Guid*, HRESULT)).call(ftid)
  end
  def get_icon(ppszicon : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_icon.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszicon)
  end
  def set_icon(pszicon : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_icon.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszicon)
  end
  def commit : HRESULT
    @lpVtbl.value.commit.unsafe_as(Proc(HRESULT)).call
  end
  def save(psifoldertosavein : IShellItem, pszlibraryname : LibC::LPWSTR, lsf : LIBRARYSAVEFLAGS, ppsisavedto : IShellItem*) : HRESULT
    @lpVtbl.value.save.unsafe_as(Proc(IShellItem, LibC::LPWSTR, LIBRARYSAVEFLAGS, IShellItem*, HRESULT)).call(psifoldertosavein, pszlibraryname, lsf, ppsisavedto)
  end
  def save_in_known_folder(kfidtosavein : Guid*, pszlibraryname : LibC::LPWSTR, lsf : LIBRARYSAVEFLAGS, ppsisavedto : IShellItem*) : HRESULT
    @lpVtbl.value.save_in_known_folder.unsafe_as(Proc(Guid*, LibC::LPWSTR, LIBRARYSAVEFLAGS, IShellItem*, HRESULT)).call(kfidtosavein, pszlibraryname, lsf, ppsisavedto)
  end
end
struct LibWin32::IDefaultFolderMenuInitialize
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(hwnd : LibC::HANDLE, pcmcb : IContextMenuCB, pidlfolder : ITEMIDLIST*, psf : IShellFolder, cidl : UInt32, apidl : ITEMIDLIST**, punkassociation : IUnknown, ckeys : UInt32, akeys : HKEY*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(LibC::HANDLE, IContextMenuCB, ITEMIDLIST*, IShellFolder, UInt32, ITEMIDLIST**, IUnknown, UInt32, HKEY*, HRESULT)).call(hwnd, pcmcb, pidlfolder, psf, cidl, apidl, punkassociation, ckeys, akeys)
  end
  def set_menu_restrictions(dfmrvalues : DEFAULT_FOLDER_MENU_RESTRICTIONS) : HRESULT
    @lpVtbl.value.set_menu_restrictions.unsafe_as(Proc(DEFAULT_FOLDER_MENU_RESTRICTIONS, HRESULT)).call(dfmrvalues)
  end
  def get_menu_restrictions(dfmrmask : DEFAULT_FOLDER_MENU_RESTRICTIONS, pdfmrvalues : DEFAULT_FOLDER_MENU_RESTRICTIONS*) : HRESULT
    @lpVtbl.value.get_menu_restrictions.unsafe_as(Proc(DEFAULT_FOLDER_MENU_RESTRICTIONS, DEFAULT_FOLDER_MENU_RESTRICTIONS*, HRESULT)).call(dfmrmask, pdfmrvalues)
  end
  def set_handler_clsid(rclsid : Guid*) : HRESULT
    @lpVtbl.value.set_handler_clsid.unsafe_as(Proc(Guid*, HRESULT)).call(rclsid)
  end
end
struct LibWin32::IApplicationActivationManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def activate_application(appusermodelid : LibC::LPWSTR, arguments : LibC::LPWSTR, options : ACTIVATEOPTIONS, processid : UInt32*) : HRESULT
    @lpVtbl.value.activate_application.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, ACTIVATEOPTIONS, UInt32*, HRESULT)).call(appusermodelid, arguments, options, processid)
  end
  def activate_for_file(appusermodelid : LibC::LPWSTR, itemarray : IShellItemArray, verb : LibC::LPWSTR, processid : UInt32*) : HRESULT
    @lpVtbl.value.activate_for_file.unsafe_as(Proc(LibC::LPWSTR, IShellItemArray, LibC::LPWSTR, UInt32*, HRESULT)).call(appusermodelid, itemarray, verb, processid)
  end
  def activate_for_protocol(appusermodelid : LibC::LPWSTR, itemarray : IShellItemArray, processid : UInt32*) : HRESULT
    @lpVtbl.value.activate_for_protocol.unsafe_as(Proc(LibC::LPWSTR, IShellItemArray, UInt32*, HRESULT)).call(appusermodelid, itemarray, processid)
  end
end
struct LibWin32::IVirtualDesktopManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def is_window_on_current_virtual_desktop(toplevelwindow : LibC::HANDLE, oncurrentdesktop : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_window_on_current_virtual_desktop.unsafe_as(Proc(LibC::HANDLE, LibC::BOOL*, HRESULT)).call(toplevelwindow, oncurrentdesktop)
  end
  def get_window_desktop_id(toplevelwindow : LibC::HANDLE, desktopid : Guid*) : HRESULT
    @lpVtbl.value.get_window_desktop_id.unsafe_as(Proc(LibC::HANDLE, Guid*, HRESULT)).call(toplevelwindow, desktopid)
  end
  def move_window_to_desktop(toplevelwindow : LibC::HANDLE, desktopid : Guid*) : HRESULT
    @lpVtbl.value.move_window_to_desktop.unsafe_as(Proc(LibC::HANDLE, Guid*, HRESULT)).call(toplevelwindow, desktopid)
  end
end
struct LibWin32::IAssocHandlerInvoker
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def supports_selection : HRESULT
    @lpVtbl.value.supports_selection.unsafe_as(Proc(HRESULT)).call
  end
  def invoke : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IAssocHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_name(ppsz : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppsz)
  end
  def get_ui_name(ppsz : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_ui_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppsz)
  end
  def get_icon_location(ppszpath : LibC::LPWSTR*, pindex : Int32*) : HRESULT
    @lpVtbl.value.get_icon_location.unsafe_as(Proc(LibC::LPWSTR*, Int32*, HRESULT)).call(ppszpath, pindex)
  end
  def is_recommended : HRESULT
    @lpVtbl.value.is_recommended.unsafe_as(Proc(HRESULT)).call
  end
  def make_default(pszdescription : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.make_default.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszdescription)
  end
  def invoke(pdo : IDataObject) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(IDataObject, HRESULT)).call(pdo)
  end
  def create_invoker(pdo : IDataObject, ppinvoker : IAssocHandlerInvoker*) : HRESULT
    @lpVtbl.value.create_invoker.unsafe_as(Proc(IDataObject, IAssocHandlerInvoker*, HRESULT)).call(pdo, ppinvoker)
  end
end
struct LibWin32::IEnumAssocHandlers
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : IAssocHandler*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, IAssocHandler*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
end
struct LibWin32::IDataObjectProvider
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_data_object(dataobject : IDataObject*) : HRESULT
    @lpVtbl.value.get_data_object.unsafe_as(Proc(IDataObject*, HRESULT)).call(dataobject)
  end
  def set_data_object(dataobject : IDataObject) : HRESULT
    @lpVtbl.value.set_data_object.unsafe_as(Proc(IDataObject, HRESULT)).call(dataobject)
  end
end
struct LibWin32::IDataTransferManagerInterop
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_for_window(appwindow : LibC::HANDLE, riid : Guid*, datatransfermanager : Void**) : HRESULT
    @lpVtbl.value.get_for_window.unsafe_as(Proc(LibC::HANDLE, Guid*, Void**, HRESULT)).call(appwindow, riid, datatransfermanager)
  end
  def show_share_ui_for_window(appwindow : LibC::HANDLE) : HRESULT
    @lpVtbl.value.show_share_ui_for_window.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(appwindow)
  end
end
struct LibWin32::IFrameworkInputPaneHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def showing(prcinputpanescreenlocation : RECT*, fensurefocusedelementinview : LibC::BOOL) : HRESULT
    @lpVtbl.value.showing.unsafe_as(Proc(RECT*, LibC::BOOL, HRESULT)).call(prcinputpanescreenlocation, fensurefocusedelementinview)
  end
  def hiding(fensurefocusedelementinview : LibC::BOOL) : HRESULT
    @lpVtbl.value.hiding.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fensurefocusedelementinview)
  end
end
struct LibWin32::IFrameworkInputPane
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def advise(pwindow : IUnknown, phandler : IFrameworkInputPaneHandler, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(IUnknown, IFrameworkInputPaneHandler, UInt32*, HRESULT)).call(pwindow, phandler, pdwcookie)
  end
  def advise_with_hwnd(hwnd : LibC::HANDLE, phandler : IFrameworkInputPaneHandler, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise_with_hwnd.unsafe_as(Proc(LibC::HANDLE, IFrameworkInputPaneHandler, UInt32*, HRESULT)).call(hwnd, phandler, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def location(prcinputpanescreenlocation : RECT*) : HRESULT
    @lpVtbl.value.location.unsafe_as(Proc(RECT*, HRESULT)).call(prcinputpanescreenlocation)
  end
end
struct LibWin32::IAppVisibilityEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def app_visibility_on_monitor_changed(hmonitor : HMONITOR, previousmode : MONITOR_APP_VISIBILITY, currentmode : MONITOR_APP_VISIBILITY) : HRESULT
    @lpVtbl.value.app_visibility_on_monitor_changed.unsafe_as(Proc(HMONITOR, MONITOR_APP_VISIBILITY, MONITOR_APP_VISIBILITY, HRESULT)).call(hmonitor, previousmode, currentmode)
  end
  def launcher_visibility_change(currentvisiblestate : LibC::BOOL) : HRESULT
    @lpVtbl.value.launcher_visibility_change.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(currentvisiblestate)
  end
end
struct LibWin32::IAppVisibility
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_app_visibility_on_monitor(hmonitor : HMONITOR, pmode : MONITOR_APP_VISIBILITY*) : HRESULT
    @lpVtbl.value.get_app_visibility_on_monitor.unsafe_as(Proc(HMONITOR, MONITOR_APP_VISIBILITY*, HRESULT)).call(hmonitor, pmode)
  end
  def is_launcher_visible(pfvisible : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_launcher_visible.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfvisible)
  end
  def advise(pcallback : IAppVisibilityEvents, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(IAppVisibilityEvents, UInt32*, HRESULT)).call(pcallback, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
end
struct LibWin32::IPackageExecutionStateChangeNotification
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_state_changed(pszpackagefullname : LibC::LPWSTR, pesnewstate : PACKAGE_EXECUTION_STATE) : HRESULT
    @lpVtbl.value.on_state_changed.unsafe_as(Proc(LibC::LPWSTR, PACKAGE_EXECUTION_STATE, HRESULT)).call(pszpackagefullname, pesnewstate)
  end
end
struct LibWin32::IPackageDebugSettings
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def enable_debugging(packagefullname : LibC::LPWSTR, debuggercommandline : LibC::LPWSTR, environment : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.enable_debugging.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(packagefullname, debuggercommandline, environment)
  end
  def disable_debugging(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.disable_debugging.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def suspend(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.suspend.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def resume(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.resume.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def terminate_all_processes(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.terminate_all_processes.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def set_target_session_id(sessionid : UInt32) : HRESULT
    @lpVtbl.value.set_target_session_id.unsafe_as(Proc(UInt32, HRESULT)).call(sessionid)
  end
  def enumerate_background_tasks(packagefullname : LibC::LPWSTR, taskcount : UInt32*, taskids : Guid**, tasknames : LibC::LPWSTR**) : HRESULT
    @lpVtbl.value.enumerate_background_tasks.unsafe_as(Proc(LibC::LPWSTR, UInt32*, Guid**, LibC::LPWSTR**, HRESULT)).call(packagefullname, taskcount, taskids, tasknames)
  end
  def activate_background_task(taskid : Guid*) : HRESULT
    @lpVtbl.value.activate_background_task.unsafe_as(Proc(Guid*, HRESULT)).call(taskid)
  end
  def start_servicing(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.start_servicing.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def stop_servicing(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.stop_servicing.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def start_session_redirection(packagefullname : LibC::LPWSTR, sessionid : UInt32) : HRESULT
    @lpVtbl.value.start_session_redirection.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(packagefullname, sessionid)
  end
  def stop_session_redirection(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.stop_session_redirection.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def get_package_execution_state(packagefullname : LibC::LPWSTR, packageexecutionstate : PACKAGE_EXECUTION_STATE*) : HRESULT
    @lpVtbl.value.get_package_execution_state.unsafe_as(Proc(LibC::LPWSTR, PACKAGE_EXECUTION_STATE*, HRESULT)).call(packagefullname, packageexecutionstate)
  end
  def register_for_package_state_changes(packagefullname : LibC::LPWSTR, ppackageexecutionstatechangenotification : IPackageExecutionStateChangeNotification, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.register_for_package_state_changes.unsafe_as(Proc(LibC::LPWSTR, IPackageExecutionStateChangeNotification, UInt32*, HRESULT)).call(packagefullname, ppackageexecutionstatechangenotification, pdwcookie)
  end
  def unregister_for_package_state_changes(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unregister_for_package_state_changes.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
end
struct LibWin32::IPackageDebugSettings2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def enable_debugging(packagefullname : LibC::LPWSTR, debuggercommandline : LibC::LPWSTR, environment : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.enable_debugging.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(packagefullname, debuggercommandline, environment)
  end
  def disable_debugging(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.disable_debugging.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def suspend(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.suspend.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def resume(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.resume.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def terminate_all_processes(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.terminate_all_processes.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def set_target_session_id(sessionid : UInt32) : HRESULT
    @lpVtbl.value.set_target_session_id.unsafe_as(Proc(UInt32, HRESULT)).call(sessionid)
  end
  def enumerate_background_tasks(packagefullname : LibC::LPWSTR, taskcount : UInt32*, taskids : Guid**, tasknames : LibC::LPWSTR**) : HRESULT
    @lpVtbl.value.enumerate_background_tasks.unsafe_as(Proc(LibC::LPWSTR, UInt32*, Guid**, LibC::LPWSTR**, HRESULT)).call(packagefullname, taskcount, taskids, tasknames)
  end
  def activate_background_task(taskid : Guid*) : HRESULT
    @lpVtbl.value.activate_background_task.unsafe_as(Proc(Guid*, HRESULT)).call(taskid)
  end
  def start_servicing(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.start_servicing.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def stop_servicing(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.stop_servicing.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def start_session_redirection(packagefullname : LibC::LPWSTR, sessionid : UInt32) : HRESULT
    @lpVtbl.value.start_session_redirection.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(packagefullname, sessionid)
  end
  def stop_session_redirection(packagefullname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.stop_session_redirection.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(packagefullname)
  end
  def get_package_execution_state(packagefullname : LibC::LPWSTR, packageexecutionstate : PACKAGE_EXECUTION_STATE*) : HRESULT
    @lpVtbl.value.get_package_execution_state.unsafe_as(Proc(LibC::LPWSTR, PACKAGE_EXECUTION_STATE*, HRESULT)).call(packagefullname, packageexecutionstate)
  end
  def register_for_package_state_changes(packagefullname : LibC::LPWSTR, ppackageexecutionstatechangenotification : IPackageExecutionStateChangeNotification, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.register_for_package_state_changes.unsafe_as(Proc(LibC::LPWSTR, IPackageExecutionStateChangeNotification, UInt32*, HRESULT)).call(packagefullname, ppackageexecutionstatechangenotification, pdwcookie)
  end
  def unregister_for_package_state_changes(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unregister_for_package_state_changes.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def enumerate_apps(packagefullname : LibC::LPWSTR, appcount : UInt32*, appusermodelids : LibC::LPWSTR**, appdisplaynames : LibC::LPWSTR**) : HRESULT
    @lpVtbl.value.enumerate_apps.unsafe_as(Proc(LibC::LPWSTR, UInt32*, LibC::LPWSTR**, LibC::LPWSTR**, HRESULT)).call(packagefullname, appcount, appusermodelids, appdisplaynames)
  end
end
struct LibWin32::ISuspensionDependencyManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def register_as_child(processhandle : LibC::HANDLE) : HRESULT
    @lpVtbl.value.register_as_child.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(processhandle)
  end
  def group_child_with_parent(childprocesshandle : LibC::HANDLE) : HRESULT
    @lpVtbl.value.group_child_with_parent.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(childprocesshandle)
  end
  def ungroup_child_from_parent(childprocesshandle : LibC::HANDLE) : HRESULT
    @lpVtbl.value.ungroup_child_from_parent.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(childprocesshandle)
  end
end
struct LibWin32::IExecuteCommandApplicationHostEnvironment
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_value(pahe : AHE_TYPE*) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(AHE_TYPE*, HRESULT)).call(pahe)
  end
end
struct LibWin32::IExecuteCommandHost
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_ui_mode(puimode : EC_HOST_UI_MODE*) : HRESULT
    @lpVtbl.value.get_ui_mode.unsafe_as(Proc(EC_HOST_UI_MODE*, HRESULT)).call(puimode)
  end
end
struct LibWin32::IApplicationDesignModeSettings
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_native_display_size(nativedisplaysizepixels : SIZE) : HRESULT
    @lpVtbl.value.set_native_display_size.unsafe_as(Proc(SIZE, HRESULT)).call(nativedisplaysizepixels)
  end
  def set_scale_factor(scalefactor : DEVICE_SCALE_FACTOR) : HRESULT
    @lpVtbl.value.set_scale_factor.unsafe_as(Proc(DEVICE_SCALE_FACTOR, HRESULT)).call(scalefactor)
  end
  def set_application_view_state(viewstate : APPLICATION_VIEW_STATE) : HRESULT
    @lpVtbl.value.set_application_view_state.unsafe_as(Proc(APPLICATION_VIEW_STATE, HRESULT)).call(viewstate)
  end
  def compute_application_size(applicationsizepixels : SIZE*) : HRESULT
    @lpVtbl.value.compute_application_size.unsafe_as(Proc(SIZE*, HRESULT)).call(applicationsizepixels)
  end
  def is_application_view_state_supported(viewstate : APPLICATION_VIEW_STATE, nativedisplaysizepixels : SIZE, scalefactor : DEVICE_SCALE_FACTOR, supported : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_application_view_state_supported.unsafe_as(Proc(APPLICATION_VIEW_STATE, SIZE, DEVICE_SCALE_FACTOR, LibC::BOOL*, HRESULT)).call(viewstate, nativedisplaysizepixels, scalefactor, supported)
  end
  def trigger_edge_gesture(edgegesturekind : EDGE_GESTURE_KIND) : HRESULT
    @lpVtbl.value.trigger_edge_gesture.unsafe_as(Proc(EDGE_GESTURE_KIND, HRESULT)).call(edgegesturekind)
  end
end
struct LibWin32::IApplicationDesignModeSettings2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_native_display_size(nativedisplaysizepixels : SIZE) : HRESULT
    @lpVtbl.value.set_native_display_size.unsafe_as(Proc(SIZE, HRESULT)).call(nativedisplaysizepixels)
  end
  def set_scale_factor(scalefactor : DEVICE_SCALE_FACTOR) : HRESULT
    @lpVtbl.value.set_scale_factor.unsafe_as(Proc(DEVICE_SCALE_FACTOR, HRESULT)).call(scalefactor)
  end
  def set_application_view_state(viewstate : APPLICATION_VIEW_STATE) : HRESULT
    @lpVtbl.value.set_application_view_state.unsafe_as(Proc(APPLICATION_VIEW_STATE, HRESULT)).call(viewstate)
  end
  def compute_application_size(applicationsizepixels : SIZE*) : HRESULT
    @lpVtbl.value.compute_application_size.unsafe_as(Proc(SIZE*, HRESULT)).call(applicationsizepixels)
  end
  def is_application_view_state_supported(viewstate : APPLICATION_VIEW_STATE, nativedisplaysizepixels : SIZE, scalefactor : DEVICE_SCALE_FACTOR, supported : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_application_view_state_supported.unsafe_as(Proc(APPLICATION_VIEW_STATE, SIZE, DEVICE_SCALE_FACTOR, LibC::BOOL*, HRESULT)).call(viewstate, nativedisplaysizepixels, scalefactor, supported)
  end
  def trigger_edge_gesture(edgegesturekind : EDGE_GESTURE_KIND) : HRESULT
    @lpVtbl.value.trigger_edge_gesture.unsafe_as(Proc(EDGE_GESTURE_KIND, HRESULT)).call(edgegesturekind)
  end
  def set_native_display_orientation(nativedisplayorientation : NATIVE_DISPLAY_ORIENTATION) : HRESULT
    @lpVtbl.value.set_native_display_orientation.unsafe_as(Proc(NATIVE_DISPLAY_ORIENTATION, HRESULT)).call(nativedisplayorientation)
  end
  def set_application_view_orientation(vieworientation : APPLICATION_VIEW_ORIENTATION) : HRESULT
    @lpVtbl.value.set_application_view_orientation.unsafe_as(Proc(APPLICATION_VIEW_ORIENTATION, HRESULT)).call(vieworientation)
  end
  def set_adjacent_display_edges(adjacentdisplayedges : ADJACENT_DISPLAY_EDGES) : HRESULT
    @lpVtbl.value.set_adjacent_display_edges.unsafe_as(Proc(ADJACENT_DISPLAY_EDGES, HRESULT)).call(adjacentdisplayedges)
  end
  def set_is_on_lock_screen(isonlockscreen : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_is_on_lock_screen.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(isonlockscreen)
  end
  def set_application_view_min_width(viewminwidth : APPLICATION_VIEW_MIN_WIDTH) : HRESULT
    @lpVtbl.value.set_application_view_min_width.unsafe_as(Proc(APPLICATION_VIEW_MIN_WIDTH, HRESULT)).call(viewminwidth)
  end
  def get_application_size_bounds(minapplicationsizepixels : SIZE*, maxapplicationsizepixels : SIZE*) : HRESULT
    @lpVtbl.value.get_application_size_bounds.unsafe_as(Proc(SIZE*, SIZE*, HRESULT)).call(minapplicationsizepixels, maxapplicationsizepixels)
  end
  def get_application_view_orientation(applicationsizepixels : SIZE, vieworientation : APPLICATION_VIEW_ORIENTATION*) : HRESULT
    @lpVtbl.value.get_application_view_orientation.unsafe_as(Proc(SIZE, APPLICATION_VIEW_ORIENTATION*, HRESULT)).call(applicationsizepixels, vieworientation)
  end
end
struct LibWin32::ILaunchTargetMonitor
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_monitor(monitor : HMONITOR*) : HRESULT
    @lpVtbl.value.get_monitor.unsafe_as(Proc(HMONITOR*, HRESULT)).call(monitor)
  end
end
struct LibWin32::ILaunchSourceViewSizePreference
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_source_view_to_position(hwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_source_view_to_position.unsafe_as(Proc(HANDLE*, HRESULT)).call(hwnd)
  end
  def get_source_view_size_preference(sourcesizeafterlaunch : APPLICATION_VIEW_SIZE_PREFERENCE*) : HRESULT
    @lpVtbl.value.get_source_view_size_preference.unsafe_as(Proc(APPLICATION_VIEW_SIZE_PREFERENCE*, HRESULT)).call(sourcesizeafterlaunch)
  end
end
struct LibWin32::ILaunchTargetViewSizePreference
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_target_view_size_preference(targetsizeonlaunch : APPLICATION_VIEW_SIZE_PREFERENCE*) : HRESULT
    @lpVtbl.value.get_target_view_size_preference.unsafe_as(Proc(APPLICATION_VIEW_SIZE_PREFERENCE*, HRESULT)).call(targetsizeonlaunch)
  end
end
struct LibWin32::ILaunchSourceAppUserModelId
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_app_user_model_id(launchingapp : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_app_user_model_id.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(launchingapp)
  end
end
struct LibWin32::IInitializeWithWindow
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
end
struct LibWin32::IHandlerInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_application_display_name(value : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_application_display_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(value)
  end
  def get_application_publisher(value : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_application_publisher.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(value)
  end
  def get_application_icon_reference(value : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_application_icon_reference.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(value)
  end
end
struct LibWin32::IHandlerInfo2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_application_display_name(value : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_application_display_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(value)
  end
  def get_application_publisher(value : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_application_publisher.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(value)
  end
  def get_application_icon_reference(value : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_application_icon_reference.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(value)
  end
  def get_application_id(value : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_application_id.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(value)
  end
end
struct LibWin32::IHandlerActivationHost
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def before_co_create_instance(clsidhandler : Guid*, itemsbeingactivated : IShellItemArray, handlerinfo : IHandlerInfo) : HRESULT
    @lpVtbl.value.before_co_create_instance.unsafe_as(Proc(Guid*, IShellItemArray, IHandlerInfo, HRESULT)).call(clsidhandler, itemsbeingactivated, handlerinfo)
  end
  def before_create_process(applicationpath : LibC::LPWSTR, commandline : LibC::LPWSTR, handlerinfo : IHandlerInfo) : HRESULT
    @lpVtbl.value.before_create_process.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, IHandlerInfo, HRESULT)).call(applicationpath, commandline, handlerinfo)
  end
end
struct LibWin32::IAppActivationUIInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_monitor(value : HMONITOR*) : HRESULT
    @lpVtbl.value.get_monitor.unsafe_as(Proc(HMONITOR*, HRESULT)).call(value)
  end
  def get_invoke_point(value : POINT*) : HRESULT
    @lpVtbl.value.get_invoke_point.unsafe_as(Proc(POINT*, HRESULT)).call(value)
  end
  def get_show_command(value : Int32*) : HRESULT
    @lpVtbl.value.get_show_command.unsafe_as(Proc(Int32*, HRESULT)).call(value)
  end
  def get_show_ui(value : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_show_ui.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(value)
  end
  def get_key_state(value : UInt32*) : HRESULT
    @lpVtbl.value.get_key_state.unsafe_as(Proc(UInt32*, HRESULT)).call(value)
  end
end
struct LibWin32::IContactManagerInterop
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show_contact_card_for_window(appwindow : LibC::HANDLE, contact : IUnknown, selection : RECT*, preferredplacement : FLYOUT_PLACEMENT) : HRESULT
    @lpVtbl.value.show_contact_card_for_window.unsafe_as(Proc(LibC::HANDLE, IUnknown, RECT*, FLYOUT_PLACEMENT, HRESULT)).call(appwindow, contact, selection, preferredplacement)
  end
end
struct LibWin32::IShellIconOverlayIdentifier
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def is_member_of(pwszpath : LibC::LPWSTR, dwattrib : UInt32) : HRESULT
    @lpVtbl.value.is_member_of.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(pwszpath, dwattrib)
  end
  def get_overlay_info(pwsziconfile : Char*, cchmax : Int32, pindex : Int32*, pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_overlay_info.unsafe_as(Proc(Char*, Int32, Int32*, UInt32*, HRESULT)).call(pwsziconfile, cchmax, pindex, pdwflags)
  end
  def get_priority(ppriority : Int32*) : HRESULT
    @lpVtbl.value.get_priority.unsafe_as(Proc(Int32*, HRESULT)).call(ppriority)
  end
end
struct LibWin32::IBannerNotificationHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_banner_event(notification : BANNER_NOTIFICATION*) : HRESULT
    @lpVtbl.value.on_banner_event.unsafe_as(Proc(BANNER_NOTIFICATION*, HRESULT)).call(notification)
  end
end
struct LibWin32::ISortColumnArray
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_count(columncount : UInt32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(UInt32*, HRESULT)).call(columncount)
  end
  def get_at(index : UInt32, sortcolumn : SORTCOLUMN*) : HRESULT
    @lpVtbl.value.get_at.unsafe_as(Proc(UInt32, SORTCOLUMN*, HRESULT)).call(index, sortcolumn)
  end
  def get_sort_type(type : SORT_ORDER_TYPE*) : HRESULT
    @lpVtbl.value.get_sort_type.unsafe_as(Proc(SORT_ORDER_TYPE*, HRESULT)).call(type)
  end
end
struct LibWin32::IPropertyKeyStore
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_key_count(keycount : Int32*) : HRESULT
    @lpVtbl.value.get_key_count.unsafe_as(Proc(Int32*, HRESULT)).call(keycount)
  end
  def get_key_at(index : Int32, pkey : PROPERTYKEY*) : HRESULT
    @lpVtbl.value.get_key_at.unsafe_as(Proc(Int32, PROPERTYKEY*, HRESULT)).call(index, pkey)
  end
  def append_key(key : PROPERTYKEY*) : HRESULT
    @lpVtbl.value.append_key.unsafe_as(Proc(PROPERTYKEY*, HRESULT)).call(key)
  end
  def delete_key(index : Int32) : HRESULT
    @lpVtbl.value.delete_key.unsafe_as(Proc(Int32, HRESULT)).call(index)
  end
  def is_key_in_store(key : PROPERTYKEY*) : HRESULT
    @lpVtbl.value.is_key_in_store.unsafe_as(Proc(PROPERTYKEY*, HRESULT)).call(key)
  end
  def remove_key(key : PROPERTYKEY*) : HRESULT
    @lpVtbl.value.remove_key.unsafe_as(Proc(PROPERTYKEY*, HRESULT)).call(key)
  end
end
struct LibWin32::IQueryCodePage
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_code_page(puicodepage : UInt32*) : HRESULT
    @lpVtbl.value.get_code_page.unsafe_as(Proc(UInt32*, HRESULT)).call(puicodepage)
  end
  def set_code_page(uicodepage : UInt32) : HRESULT
    @lpVtbl.value.set_code_page.unsafe_as(Proc(UInt32, HRESULT)).call(uicodepage)
  end
end
struct LibWin32::IFolderViewOptions
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_folder_view_options(fvomask : FOLDERVIEWOPTIONS, fvoflags : FOLDERVIEWOPTIONS) : HRESULT
    @lpVtbl.value.set_folder_view_options.unsafe_as(Proc(FOLDERVIEWOPTIONS, FOLDERVIEWOPTIONS, HRESULT)).call(fvomask, fvoflags)
  end
  def get_folder_view_options(pfvoflags : FOLDERVIEWOPTIONS*) : HRESULT
    @lpVtbl.value.get_folder_view_options.unsafe_as(Proc(FOLDERVIEWOPTIONS*, HRESULT)).call(pfvoflags)
  end
end
struct LibWin32::IShellView3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def translate_accelerator(pmsg : MSG*) : HRESULT
    @lpVtbl.value.translate_accelerator.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
  def enable_modeless(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable_modeless.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
  def ui_activate(ustate : UInt32) : HRESULT
    @lpVtbl.value.ui_activate.unsafe_as(Proc(UInt32, HRESULT)).call(ustate)
  end
  def refresh : HRESULT
    @lpVtbl.value.refresh.unsafe_as(Proc(HRESULT)).call
  end
  def create_view_window(psvprevious : IShellView, pfs : FOLDERSETTINGS*, psb : IShellBrowser, prcview : RECT*, phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.create_view_window.unsafe_as(Proc(IShellView, FOLDERSETTINGS*, IShellBrowser, RECT*, HANDLE*, HRESULT)).call(psvprevious, pfs, psb, prcview, phwnd)
  end
  def destroy_view_window : HRESULT
    @lpVtbl.value.destroy_view_window.unsafe_as(Proc(HRESULT)).call
  end
  def get_current_info(pfs : FOLDERSETTINGS*) : HRESULT
    @lpVtbl.value.get_current_info.unsafe_as(Proc(FOLDERSETTINGS*, HRESULT)).call(pfs)
  end
  def add_property_sheet_pages(dwreserved : UInt32, pfn : LPFNSVADDPROPSHEETPAGE, lparam : LPARAM) : HRESULT
    @lpVtbl.value.add_property_sheet_pages.unsafe_as(Proc(UInt32, LPFNSVADDPROPSHEETPAGE, LPARAM, HRESULT)).call(dwreserved, pfn, lparam)
  end
  def save_view_state : HRESULT
    @lpVtbl.value.save_view_state.unsafe_as(Proc(HRESULT)).call
  end
  def select_item(pidlitem : ITEMIDLIST*, uflags : UInt32) : HRESULT
    @lpVtbl.value.select_item.unsafe_as(Proc(ITEMIDLIST*, UInt32, HRESULT)).call(pidlitem, uflags)
  end
  def get_item_object(uitem : UInt32, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_item_object.unsafe_as(Proc(UInt32, Guid*, Void**, HRESULT)).call(uitem, riid, ppv)
  end
  def get_view(pvid : Guid*, uview : UInt32) : HRESULT
    @lpVtbl.value.get_view.unsafe_as(Proc(Guid*, UInt32, HRESULT)).call(pvid, uview)
  end
  def create_view_window2(lpparams : SV2CVW2_PARAMS*) : HRESULT
    @lpVtbl.value.create_view_window2.unsafe_as(Proc(SV2CVW2_PARAMS*, HRESULT)).call(lpparams)
  end
  def handle_rename(pidlnew : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.handle_rename.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidlnew)
  end
  def select_and_position_item(pidlitem : ITEMIDLIST*, uflags : UInt32, ppt : POINT*) : HRESULT
    @lpVtbl.value.select_and_position_item.unsafe_as(Proc(ITEMIDLIST*, UInt32, POINT*, HRESULT)).call(pidlitem, uflags, ppt)
  end
  def create_view_window3(psbowner : IShellBrowser, psvprev : IShellView, dwviewflags : UInt32, dwmask : FOLDERFLAGS, dwflags : FOLDERFLAGS, fvmode : FOLDERVIEWMODE, pvid : Guid*, prcview : RECT*, phwndview : HANDLE*) : HRESULT
    @lpVtbl.value.create_view_window3.unsafe_as(Proc(IShellBrowser, IShellView, UInt32, FOLDERFLAGS, FOLDERFLAGS, FOLDERVIEWMODE, Guid*, RECT*, HANDLE*, HRESULT)).call(psbowner, psvprev, dwviewflags, dwmask, dwflags, fvmode, pvid, prcview, phwndview)
  end
end
struct LibWin32::ISearchBoxInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_condition(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_condition.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
  def get_text(ppsz : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_text.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppsz)
  end
end
struct LibWin32::IVisualProperties
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_watermark(hbmp : HBITMAP, vpwf : VPWATERMARKFLAGS) : HRESULT
    @lpVtbl.value.set_watermark.unsafe_as(Proc(HBITMAP, VPWATERMARKFLAGS, HRESULT)).call(hbmp, vpwf)
  end
  def set_color(vpcf : VPCOLORFLAGS, cr : UInt32) : HRESULT
    @lpVtbl.value.set_color.unsafe_as(Proc(VPCOLORFLAGS, UInt32, HRESULT)).call(vpcf, cr)
  end
  def get_color(vpcf : VPCOLORFLAGS, pcr : UInt32*) : HRESULT
    @lpVtbl.value.get_color.unsafe_as(Proc(VPCOLORFLAGS, UInt32*, HRESULT)).call(vpcf, pcr)
  end
  def set_item_height(cyiteminpixels : Int32) : HRESULT
    @lpVtbl.value.set_item_height.unsafe_as(Proc(Int32, HRESULT)).call(cyiteminpixels)
  end
  def get_item_height(cyiteminpixels : Int32*) : HRESULT
    @lpVtbl.value.get_item_height.unsafe_as(Proc(Int32*, HRESULT)).call(cyiteminpixels)
  end
  def set_font(plf : LOGFONTW*, bredraw : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_font.unsafe_as(Proc(LOGFONTW*, LibC::BOOL, HRESULT)).call(plf, bredraw)
  end
  def get_font(plf : LOGFONTW*) : HRESULT
    @lpVtbl.value.get_font.unsafe_as(Proc(LOGFONTW*, HRESULT)).call(plf)
  end
  def set_theme(pszsubappname : LibC::LPWSTR, pszsubidlist : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_theme.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(pszsubappname, pszsubidlist)
  end
end
struct LibWin32::ICommDlgBrowser3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_default_command(ppshv : IShellView) : HRESULT
    @lpVtbl.value.on_default_command.unsafe_as(Proc(IShellView, HRESULT)).call(ppshv)
  end
  def on_state_change(ppshv : IShellView, uchange : UInt32) : HRESULT
    @lpVtbl.value.on_state_change.unsafe_as(Proc(IShellView, UInt32, HRESULT)).call(ppshv, uchange)
  end
  def include_object(ppshv : IShellView, pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.include_object.unsafe_as(Proc(IShellView, ITEMIDLIST*, HRESULT)).call(ppshv, pidl)
  end
  def notify(ppshv : IShellView, dwnotifytype : UInt32) : HRESULT
    @lpVtbl.value.notify.unsafe_as(Proc(IShellView, UInt32, HRESULT)).call(ppshv, dwnotifytype)
  end
  def get_default_menu_text(ppshv : IShellView, psztext : Char*, cchmax : Int32) : HRESULT
    @lpVtbl.value.get_default_menu_text.unsafe_as(Proc(IShellView, Char*, Int32, HRESULT)).call(ppshv, psztext, cchmax)
  end
  def get_view_flags(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_view_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
  def on_column_clicked(ppshv : IShellView, icolumn : Int32) : HRESULT
    @lpVtbl.value.on_column_clicked.unsafe_as(Proc(IShellView, Int32, HRESULT)).call(ppshv, icolumn)
  end
  def get_current_filter(pszfilespec : Char*, cchfilespec : Int32) : HRESULT
    @lpVtbl.value.get_current_filter.unsafe_as(Proc(Char*, Int32, HRESULT)).call(pszfilespec, cchfilespec)
  end
  def on_pre_view_created(ppshv : IShellView) : HRESULT
    @lpVtbl.value.on_pre_view_created.unsafe_as(Proc(IShellView, HRESULT)).call(ppshv)
  end
end
struct LibWin32::IUserAccountChangeCallback
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_picture_change(pszusername : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.on_picture_change.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszusername)
  end
end
struct LibWin32::IStreamAsync
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def read(pv : Void*, cb : UInt32, pcbread : UInt32*) : HRESULT
    @lpVtbl.value.read.unsafe_as(Proc(Void*, UInt32, UInt32*, HRESULT)).call(pv, cb, pcbread)
  end
  def write(pv : Void*, cb : UInt32, pcbwritten : UInt32*) : HRESULT
    @lpVtbl.value.write.unsafe_as(Proc(Void*, UInt32, UInt32*, HRESULT)).call(pv, cb, pcbwritten)
  end
  def seek(dlibmove : LARGE_INTEGER, dworigin : STREAM_SEEK, plibnewposition : ULARGE_INTEGER*) : HRESULT
    @lpVtbl.value.seek.unsafe_as(Proc(LARGE_INTEGER, STREAM_SEEK, ULARGE_INTEGER*, HRESULT)).call(dlibmove, dworigin, plibnewposition)
  end
  def set_size(libnewsize : ULARGE_INTEGER) : HRESULT
    @lpVtbl.value.set_size.unsafe_as(Proc(ULARGE_INTEGER, HRESULT)).call(libnewsize)
  end
  def copy_to(pstm : IStream, cb : ULARGE_INTEGER, pcbread : ULARGE_INTEGER*, pcbwritten : ULARGE_INTEGER*) : HRESULT
    @lpVtbl.value.copy_to.unsafe_as(Proc(IStream, ULARGE_INTEGER, ULARGE_INTEGER*, ULARGE_INTEGER*, HRESULT)).call(pstm, cb, pcbread, pcbwritten)
  end
  def commit(grfcommitflags : UInt32) : HRESULT
    @lpVtbl.value.commit.unsafe_as(Proc(UInt32, HRESULT)).call(grfcommitflags)
  end
  def revert : HRESULT
    @lpVtbl.value.revert.unsafe_as(Proc(HRESULT)).call
  end
  def lock_region(liboffset : ULARGE_INTEGER, cb : ULARGE_INTEGER, dwlocktype : UInt32) : HRESULT
    @lpVtbl.value.lock_region.unsafe_as(Proc(ULARGE_INTEGER, ULARGE_INTEGER, UInt32, HRESULT)).call(liboffset, cb, dwlocktype)
  end
  def unlock_region(liboffset : ULARGE_INTEGER, cb : ULARGE_INTEGER, dwlocktype : UInt32) : HRESULT
    @lpVtbl.value.unlock_region.unsafe_as(Proc(ULARGE_INTEGER, ULARGE_INTEGER, UInt32, HRESULT)).call(liboffset, cb, dwlocktype)
  end
  def stat(pstatstg : STATSTG*, grfstatflag : UInt32) : HRESULT
    @lpVtbl.value.stat.unsafe_as(Proc(STATSTG*, UInt32, HRESULT)).call(pstatstg, grfstatflag)
  end
  def clone(ppstm : IStream*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IStream*, HRESULT)).call(ppstm)
  end
  def read_async(pv : Void*, cb : UInt32, pcbread : UInt32*, lpoverlapped : OVERLAPPED*) : HRESULT
    @lpVtbl.value.read_async.unsafe_as(Proc(Void*, UInt32, UInt32*, OVERLAPPED*, HRESULT)).call(pv, cb, pcbread, lpoverlapped)
  end
  def write_async(lpbuffer : Void*, cb : UInt32, pcbwritten : UInt32*, lpoverlapped : OVERLAPPED*) : HRESULT
    @lpVtbl.value.write_async.unsafe_as(Proc(Void*, UInt32, UInt32*, OVERLAPPED*, HRESULT)).call(lpbuffer, cb, pcbwritten, lpoverlapped)
  end
  def overlapped_result(lpoverlapped : OVERLAPPED*, lpnumberofbytestransferred : UInt32*, bwait : LibC::BOOL) : HRESULT
    @lpVtbl.value.overlapped_result.unsafe_as(Proc(OVERLAPPED*, UInt32*, LibC::BOOL, HRESULT)).call(lpoverlapped, lpnumberofbytestransferred, bwait)
  end
  def cancel_io : HRESULT
    @lpVtbl.value.cancel_io.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IStreamUnbufferedInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_sector_size(pcbsectorsize : UInt32*) : HRESULT
    @lpVtbl.value.get_sector_size.unsafe_as(Proc(UInt32*, HRESULT)).call(pcbsectorsize)
  end
end
struct LibWin32::IDragSourceHelper2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize_from_bitmap(pshdi : SHDRAGIMAGE*, pdataobject : IDataObject) : HRESULT
    @lpVtbl.value.initialize_from_bitmap.unsafe_as(Proc(SHDRAGIMAGE*, IDataObject, HRESULT)).call(pshdi, pdataobject)
  end
  def initialize_from_window(hwnd : LibC::HANDLE, ppt : POINT*, pdataobject : IDataObject) : HRESULT
    @lpVtbl.value.initialize_from_window.unsafe_as(Proc(LibC::HANDLE, POINT*, IDataObject, HRESULT)).call(hwnd, ppt, pdataobject)
  end
  def set_flags(dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_flags.unsafe_as(Proc(UInt32, HRESULT)).call(dwflags)
  end
end
struct LibWin32::IHWEventHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(pszparams : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszparams)
  end
  def handle_event(pszdeviceid : LibC::LPWSTR, pszaltdeviceid : LibC::LPWSTR, pszeventtype : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.handle_event.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(pszdeviceid, pszaltdeviceid, pszeventtype)
  end
  def handle_event_with_content(pszdeviceid : LibC::LPWSTR, pszaltdeviceid : LibC::LPWSTR, pszeventtype : LibC::LPWSTR, pszcontenttypehandler : LibC::LPWSTR, pdataobject : IDataObject) : HRESULT
    @lpVtbl.value.handle_event_with_content.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, IDataObject, HRESULT)).call(pszdeviceid, pszaltdeviceid, pszeventtype, pszcontenttypehandler, pdataobject)
  end
end
struct LibWin32::IHWEventHandler2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(pszparams : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszparams)
  end
  def handle_event(pszdeviceid : LibC::LPWSTR, pszaltdeviceid : LibC::LPWSTR, pszeventtype : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.handle_event.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(pszdeviceid, pszaltdeviceid, pszeventtype)
  end
  def handle_event_with_content(pszdeviceid : LibC::LPWSTR, pszaltdeviceid : LibC::LPWSTR, pszeventtype : LibC::LPWSTR, pszcontenttypehandler : LibC::LPWSTR, pdataobject : IDataObject) : HRESULT
    @lpVtbl.value.handle_event_with_content.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, IDataObject, HRESULT)).call(pszdeviceid, pszaltdeviceid, pszeventtype, pszcontenttypehandler, pdataobject)
  end
  def handle_event_with_hwnd(pszdeviceid : LibC::LPWSTR, pszaltdeviceid : LibC::LPWSTR, pszeventtype : LibC::LPWSTR, hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.handle_event_with_hwnd.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::HANDLE, HRESULT)).call(pszdeviceid, pszaltdeviceid, pszeventtype, hwndowner)
  end
end
struct LibWin32::IQueryCancelAutoPlay
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def allow_auto_play(pszpath : LibC::LPWSTR, dwcontenttype : UInt32, pszlabel : LibC::LPWSTR, dwserialnumber : UInt32) : HRESULT
    @lpVtbl.value.allow_auto_play.unsafe_as(Proc(LibC::LPWSTR, UInt32, LibC::LPWSTR, UInt32, HRESULT)).call(pszpath, dwcontenttype, pszlabel, dwserialnumber)
  end
end
struct LibWin32::IDynamicHWHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_dynamic_info(pszdeviceid : LibC::LPWSTR, dwcontenttype : UInt32, ppszaction : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_dynamic_info.unsafe_as(Proc(LibC::LPWSTR, UInt32, LibC::LPWSTR*, HRESULT)).call(pszdeviceid, dwcontenttype, ppszaction)
  end
end
struct LibWin32::IUserNotificationCallback
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_balloon_user_click(pt : POINT*) : HRESULT
    @lpVtbl.value.on_balloon_user_click.unsafe_as(Proc(POINT*, HRESULT)).call(pt)
  end
  def on_left_click(pt : POINT*) : HRESULT
    @lpVtbl.value.on_left_click.unsafe_as(Proc(POINT*, HRESULT)).call(pt)
  end
  def on_context_menu(pt : POINT*) : HRESULT
    @lpVtbl.value.on_context_menu.unsafe_as(Proc(POINT*, HRESULT)).call(pt)
  end
end
struct LibWin32::IUserNotification2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_balloon_info(psztitle : LibC::LPWSTR, psztext : LibC::LPWSTR, dwinfoflags : UInt32) : HRESULT
    @lpVtbl.value.set_balloon_info.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, UInt32, HRESULT)).call(psztitle, psztext, dwinfoflags)
  end
  def set_balloon_retry(dwshowtime : UInt32, dwinterval : UInt32, cretrycount : UInt32) : HRESULT
    @lpVtbl.value.set_balloon_retry.unsafe_as(Proc(UInt32, UInt32, UInt32, HRESULT)).call(dwshowtime, dwinterval, cretrycount)
  end
  def set_icon_info(hicon : LibC::HANDLE, psztooltip : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_icon_info.unsafe_as(Proc(LibC::HANDLE, LibC::LPWSTR, HRESULT)).call(hicon, psztooltip)
  end
  def show(pqc : IQueryContinue, dwcontinuepollinterval : UInt32, psink : IUserNotificationCallback) : HRESULT
    @lpVtbl.value.show.unsafe_as(Proc(IQueryContinue, UInt32, IUserNotificationCallback, HRESULT)).call(pqc, dwcontinuepollinterval, psink)
  end
  def play_sound(pszsoundname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.play_sound.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszsoundname)
  end
end
struct LibWin32::IDeskBand2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def show_dw(fshow : LibC::BOOL) : HRESULT
    @lpVtbl.value.show_dw.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fshow)
  end
  def close_dw(dwreserved : UInt32) : HRESULT
    @lpVtbl.value.close_dw.unsafe_as(Proc(UInt32, HRESULT)).call(dwreserved)
  end
  def resize_border_dw(prcborder : RECT*, punktoolbarsite : IUnknown, freserved : LibC::BOOL) : HRESULT
    @lpVtbl.value.resize_border_dw.unsafe_as(Proc(RECT*, IUnknown, LibC::BOOL, HRESULT)).call(prcborder, punktoolbarsite, freserved)
  end
  def get_band_info(dwbandid : UInt32, dwviewmode : UInt32, pdbi : DESKBANDINFO*) : HRESULT
    @lpVtbl.value.get_band_info.unsafe_as(Proc(UInt32, UInt32, DESKBANDINFO*, HRESULT)).call(dwbandid, dwviewmode, pdbi)
  end
  def can_render_composited(pfcanrendercomposited : LibC::BOOL*) : HRESULT
    @lpVtbl.value.can_render_composited.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfcanrendercomposited)
  end
  def set_composition_state(fcompositionenabled : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_composition_state.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fcompositionenabled)
  end
  def get_composition_state(pfcompositionenabled : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_composition_state.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfcompositionenabled)
  end
end
struct LibWin32::IStartMenuPinnedList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def remove_from_list(pitem : IShellItem) : HRESULT
    @lpVtbl.value.remove_from_list.unsafe_as(Proc(IShellItem, HRESULT)).call(pitem)
  end
end
struct LibWin32::ICDBurn
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_recorder_drive_letter(pszdrive : Char*, cch : UInt32) : HRESULT
    @lpVtbl.value.get_recorder_drive_letter.unsafe_as(Proc(Char*, UInt32, HRESULT)).call(pszdrive, cch)
  end
  def burn(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.burn.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
  def has_recordable_drive(pfhasrecorder : LibC::BOOL*) : HRESULT
    @lpVtbl.value.has_recordable_drive.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfhasrecorder)
  end
end
struct LibWin32::IWizardSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_previous_page(phpage : HPROPSHEETPAGE*) : HRESULT
    @lpVtbl.value.get_previous_page.unsafe_as(Proc(HPROPSHEETPAGE*, HRESULT)).call(phpage)
  end
  def get_next_page(phpage : HPROPSHEETPAGE*) : HRESULT
    @lpVtbl.value.get_next_page.unsafe_as(Proc(HPROPSHEETPAGE*, HRESULT)).call(phpage)
  end
  def get_cancelled_page(phpage : HPROPSHEETPAGE*) : HRESULT
    @lpVtbl.value.get_cancelled_page.unsafe_as(Proc(HPROPSHEETPAGE*, HRESULT)).call(phpage)
  end
end
struct LibWin32::IWizardExtension
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_pages(apages : HPROPSHEETPAGE*, cpages : UInt32, pnpagesadded : UInt32*) : HRESULT
    @lpVtbl.value.add_pages.unsafe_as(Proc(HPROPSHEETPAGE*, UInt32, UInt32*, HRESULT)).call(apages, cpages, pnpagesadded)
  end
  def get_first_page(phpage : HPROPSHEETPAGE*) : HRESULT
    @lpVtbl.value.get_first_page.unsafe_as(Proc(HPROPSHEETPAGE*, HRESULT)).call(phpage)
  end
  def get_last_page(phpage : HPROPSHEETPAGE*) : HRESULT
    @lpVtbl.value.get_last_page.unsafe_as(Proc(HPROPSHEETPAGE*, HRESULT)).call(phpage)
  end
end
struct LibWin32::IWebWizardExtension
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_pages(apages : HPROPSHEETPAGE*, cpages : UInt32, pnpagesadded : UInt32*) : HRESULT
    @lpVtbl.value.add_pages.unsafe_as(Proc(HPROPSHEETPAGE*, UInt32, UInt32*, HRESULT)).call(apages, cpages, pnpagesadded)
  end
  def get_first_page(phpage : HPROPSHEETPAGE*) : HRESULT
    @lpVtbl.value.get_first_page.unsafe_as(Proc(HPROPSHEETPAGE*, HRESULT)).call(phpage)
  end
  def get_last_page(phpage : HPROPSHEETPAGE*) : HRESULT
    @lpVtbl.value.get_last_page.unsafe_as(Proc(HPROPSHEETPAGE*, HRESULT)).call(phpage)
  end
  def set_initial_url(pszurl : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_initial_url.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszurl)
  end
  def set_error_url(pszerrorurl : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_error_url.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszerrorurl)
  end
end
struct LibWin32::IPublishingWizard
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_pages(apages : HPROPSHEETPAGE*, cpages : UInt32, pnpagesadded : UInt32*) : HRESULT
    @lpVtbl.value.add_pages.unsafe_as(Proc(HPROPSHEETPAGE*, UInt32, UInt32*, HRESULT)).call(apages, cpages, pnpagesadded)
  end
  def get_first_page(phpage : HPROPSHEETPAGE*) : HRESULT
    @lpVtbl.value.get_first_page.unsafe_as(Proc(HPROPSHEETPAGE*, HRESULT)).call(phpage)
  end
  def get_last_page(phpage : HPROPSHEETPAGE*) : HRESULT
    @lpVtbl.value.get_last_page.unsafe_as(Proc(HPROPSHEETPAGE*, HRESULT)).call(phpage)
  end
  def initialize(pdo : IDataObject, dwoptions : UInt32, pszservicescope : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(IDataObject, UInt32, LibC::LPWSTR, HRESULT)).call(pdo, dwoptions, pszservicescope)
  end
  def get_transfer_manifest(phrfromtransfer : HRESULT*, pdocmanifest : IXMLDOMDocument*) : HRESULT
    @lpVtbl.value.get_transfer_manifest.unsafe_as(Proc(HRESULT*, IXMLDOMDocument*, HRESULT)).call(phrfromtransfer, pdocmanifest)
  end
end
struct LibWin32::IFolderViewHost
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(hwndparent : LibC::HANDLE, pdo : IDataObject, prc : RECT*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(LibC::HANDLE, IDataObject, RECT*, HRESULT)).call(hwndparent, pdo, prc)
  end
end
struct LibWin32::IAccessibleObject
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_accessible_name(pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_accessible_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszname)
  end
end
struct LibWin32::IResultsFolder
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_item(psi : IShellItem) : HRESULT
    @lpVtbl.value.add_item.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def add_id_list(pidl : ITEMIDLIST*, ppidladded : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.add_id_list.unsafe_as(Proc(ITEMIDLIST*, ITEMIDLIST**, HRESULT)).call(pidl, ppidladded)
  end
  def remove_item(psi : IShellItem) : HRESULT
    @lpVtbl.value.remove_item.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def remove_id_list(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.remove_id_list.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def remove_all : HRESULT
    @lpVtbl.value.remove_all.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IAutoCompleteDropDown
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_drop_down_status(pdwflags : UInt32*, ppwszstring : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_drop_down_status.unsafe_as(Proc(UInt32*, LibC::LPWSTR*, HRESULT)).call(pdwflags, ppwszstring)
  end
  def reset_enumerator : HRESULT
    @lpVtbl.value.reset_enumerator.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ICDBurnExt
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_supported_action_types(pdwactions : UInt32*) : HRESULT
    @lpVtbl.value.get_supported_action_types.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwactions)
  end
end
struct LibWin32::IEnumReadyCallback
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def enum_ready : HRESULT
    @lpVtbl.value.enum_ready.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IEnumerableView
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_enum_ready_callback(percb : IEnumReadyCallback) : HRESULT
    @lpVtbl.value.set_enum_ready_callback.unsafe_as(Proc(IEnumReadyCallback, HRESULT)).call(percb)
  end
  def create_enum_id_list_from_contents(pidlfolder : ITEMIDLIST*, dwenumflags : UInt32, ppenumidlist : IEnumIDList*) : HRESULT
    @lpVtbl.value.create_enum_id_list_from_contents.unsafe_as(Proc(ITEMIDLIST*, UInt32, IEnumIDList*, HRESULT)).call(pidlfolder, dwenumflags, ppenumidlist)
  end
end
struct LibWin32::IInsertItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def insert_item(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.insert_item.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
end
struct LibWin32::IFolderBandPriv
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_cascade(fcascade : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_cascade.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fcascade)
  end
  def set_accelerators(faccelerators : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_accelerators.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(faccelerators)
  end
  def set_no_icons(fnoicons : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_no_icons.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fnoicons)
  end
  def set_no_text(fnotext : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_no_text.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fnotext)
  end
end
struct LibWin32::IImageRecompress
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def recompress_image(psi : IShellItem, cx : Int32, cy : Int32, iquality : Int32, pstg : IStorage, ppstrmout : IStream*) : HRESULT
    @lpVtbl.value.recompress_image.unsafe_as(Proc(IShellItem, Int32, Int32, Int32, IStorage, IStream*, HRESULT)).call(psi, cx, cy, iquality, pstg, ppstrmout)
  end
end
struct LibWin32::IFileDialogControlEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_item_selected(pfdc : IFileDialogCustomize, dwidctl : UInt32, dwiditem : UInt32) : HRESULT
    @lpVtbl.value.on_item_selected.unsafe_as(Proc(IFileDialogCustomize, UInt32, UInt32, HRESULT)).call(pfdc, dwidctl, dwiditem)
  end
  def on_button_clicked(pfdc : IFileDialogCustomize, dwidctl : UInt32) : HRESULT
    @lpVtbl.value.on_button_clicked.unsafe_as(Proc(IFileDialogCustomize, UInt32, HRESULT)).call(pfdc, dwidctl)
  end
  def on_check_button_toggled(pfdc : IFileDialogCustomize, dwidctl : UInt32, bchecked : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_check_button_toggled.unsafe_as(Proc(IFileDialogCustomize, UInt32, LibC::BOOL, HRESULT)).call(pfdc, dwidctl, bchecked)
  end
  def on_control_activating(pfdc : IFileDialogCustomize, dwidctl : UInt32) : HRESULT
    @lpVtbl.value.on_control_activating.unsafe_as(Proc(IFileDialogCustomize, UInt32, HRESULT)).call(pfdc, dwidctl)
  end
end
struct LibWin32::IFileDialog2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show(hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.show.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndowner)
  end
  def set_file_types(cfiletypes : UInt32, rgfilterspec : COMDLG_FILTERSPEC*) : HRESULT
    @lpVtbl.value.set_file_types.unsafe_as(Proc(UInt32, COMDLG_FILTERSPEC*, HRESULT)).call(cfiletypes, rgfilterspec)
  end
  def set_file_type_index(ifiletype : UInt32) : HRESULT
    @lpVtbl.value.set_file_type_index.unsafe_as(Proc(UInt32, HRESULT)).call(ifiletype)
  end
  def get_file_type_index(pifiletype : UInt32*) : HRESULT
    @lpVtbl.value.get_file_type_index.unsafe_as(Proc(UInt32*, HRESULT)).call(pifiletype)
  end
  def advise(pfde : IFileDialogEvents, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(IFileDialogEvents, UInt32*, HRESULT)).call(pfde, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def set_options(fos : UInt32) : HRESULT
    @lpVtbl.value.set_options.unsafe_as(Proc(UInt32, HRESULT)).call(fos)
  end
  def get_options(pfos : UInt32*) : HRESULT
    @lpVtbl.value.get_options.unsafe_as(Proc(UInt32*, HRESULT)).call(pfos)
  end
  def set_default_folder(psi : IShellItem) : HRESULT
    @lpVtbl.value.set_default_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def set_folder(psi : IShellItem) : HRESULT
    @lpVtbl.value.set_folder.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def get_folder(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def get_current_selection(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_current_selection.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def set_file_name(pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_file_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszname)
  end
  def get_file_name(pszname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_file_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(pszname)
  end
  def set_title(psztitle : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_title.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztitle)
  end
  def set_ok_button_label(psztext : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_ok_button_label.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztext)
  end
  def set_file_name_label(pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_file_name_label.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszlabel)
  end
  def get_result(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_result.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
  def add_place(psi : IShellItem, fdap : FDAP) : HRESULT
    @lpVtbl.value.add_place.unsafe_as(Proc(IShellItem, FDAP, HRESULT)).call(psi, fdap)
  end
  def set_default_extension(pszdefaultextension : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_default_extension.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszdefaultextension)
  end
  def close(hr : HRESULT) : HRESULT
    @lpVtbl.value.close.unsafe_as(Proc(HRESULT, HRESULT)).call(hr)
  end
  def set_client_guid(guid : Guid*) : HRESULT
    @lpVtbl.value.set_client_guid.unsafe_as(Proc(Guid*, HRESULT)).call(guid)
  end
  def clear_client_data : HRESULT
    @lpVtbl.value.clear_client_data.unsafe_as(Proc(HRESULT)).call
  end
  def set_filter(pfilter : IShellItemFilter) : HRESULT
    @lpVtbl.value.set_filter.unsafe_as(Proc(IShellItemFilter, HRESULT)).call(pfilter)
  end
  def set_cancel_button_label(pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_cancel_button_label.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszlabel)
  end
  def set_navigation_root(psi : IShellItem) : HRESULT
    @lpVtbl.value.set_navigation_root.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
end
struct LibWin32::IApplicationAssociationRegistrationUI
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def launch_advanced_association_ui(pszappregistryname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.launch_advanced_association_ui.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszappregistryname)
  end
end
struct LibWin32::IShellRunDll
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def run(pszargs : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.run.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszargs)
  end
end
struct LibWin32::IPreviousVersionsInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def are_snapshots_available(pszpath : LibC::LPWSTR, foktobeslow : LibC::BOOL, pfavailable : LibC::BOOL*) : HRESULT
    @lpVtbl.value.are_snapshots_available.unsafe_as(Proc(LibC::LPWSTR, LibC::BOOL, LibC::BOOL*, HRESULT)).call(pszpath, foktobeslow, pfavailable)
  end
end
struct LibWin32::IUseToBrowseItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_item_id_list(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_item_id_list.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def get_item(ppsi : IShellItem*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(IShellItem*, HRESULT)).call(ppsi)
  end
end
struct LibWin32::INameSpaceTreeControl2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(hwndparent : LibC::HANDLE, prc : RECT*, nsctsflags : UInt32) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(LibC::HANDLE, RECT*, UInt32, HRESULT)).call(hwndparent, prc, nsctsflags)
  end
  def tree_advise(punk : IUnknown, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.tree_advise.unsafe_as(Proc(IUnknown, UInt32*, HRESULT)).call(punk, pdwcookie)
  end
  def tree_unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.tree_unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def append_root(psiroot : IShellItem, grfenumflags : UInt32, grfrootstyle : UInt32, pif : IShellItemFilter) : HRESULT
    @lpVtbl.value.append_root.unsafe_as(Proc(IShellItem, UInt32, UInt32, IShellItemFilter, HRESULT)).call(psiroot, grfenumflags, grfrootstyle, pif)
  end
  def insert_root(iindex : Int32, psiroot : IShellItem, grfenumflags : UInt32, grfrootstyle : UInt32, pif : IShellItemFilter) : HRESULT
    @lpVtbl.value.insert_root.unsafe_as(Proc(Int32, IShellItem, UInt32, UInt32, IShellItemFilter, HRESULT)).call(iindex, psiroot, grfenumflags, grfrootstyle, pif)
  end
  def remove_root(psiroot : IShellItem) : HRESULT
    @lpVtbl.value.remove_root.unsafe_as(Proc(IShellItem, HRESULT)).call(psiroot)
  end
  def remove_all_roots : HRESULT
    @lpVtbl.value.remove_all_roots.unsafe_as(Proc(HRESULT)).call
  end
  def get_root_items(ppsiarootitems : IShellItemArray*) : HRESULT
    @lpVtbl.value.get_root_items.unsafe_as(Proc(IShellItemArray*, HRESULT)).call(ppsiarootitems)
  end
  def set_item_state(psi : IShellItem, nstcismask : UInt32, nstcisflags : UInt32) : HRESULT
    @lpVtbl.value.set_item_state.unsafe_as(Proc(IShellItem, UInt32, UInt32, HRESULT)).call(psi, nstcismask, nstcisflags)
  end
  def get_item_state(psi : IShellItem, nstcismask : UInt32, pnstcisflags : UInt32*) : HRESULT
    @lpVtbl.value.get_item_state.unsafe_as(Proc(IShellItem, UInt32, UInt32*, HRESULT)).call(psi, nstcismask, pnstcisflags)
  end
  def get_selected_items(psiaitems : IShellItemArray*) : HRESULT
    @lpVtbl.value.get_selected_items.unsafe_as(Proc(IShellItemArray*, HRESULT)).call(psiaitems)
  end
  def get_item_custom_state(psi : IShellItem, pistatenumber : Int32*) : HRESULT
    @lpVtbl.value.get_item_custom_state.unsafe_as(Proc(IShellItem, Int32*, HRESULT)).call(psi, pistatenumber)
  end
  def set_item_custom_state(psi : IShellItem, istatenumber : Int32) : HRESULT
    @lpVtbl.value.set_item_custom_state.unsafe_as(Proc(IShellItem, Int32, HRESULT)).call(psi, istatenumber)
  end
  def ensure_item_visible(psi : IShellItem) : HRESULT
    @lpVtbl.value.ensure_item_visible.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def set_theme(psztheme : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_theme.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psztheme)
  end
  def get_next_item(psi : IShellItem, nstcgi : NSTCGNI, ppsinext : IShellItem*) : HRESULT
    @lpVtbl.value.get_next_item.unsafe_as(Proc(IShellItem, NSTCGNI, IShellItem*, HRESULT)).call(psi, nstcgi, ppsinext)
  end
  def hit_test(ppt : POINT*, ppsiout : IShellItem*) : HRESULT
    @lpVtbl.value.hit_test.unsafe_as(Proc(POINT*, IShellItem*, HRESULT)).call(ppt, ppsiout)
  end
  def get_item_rect(psi : IShellItem, prect : RECT*) : HRESULT
    @lpVtbl.value.get_item_rect.unsafe_as(Proc(IShellItem, RECT*, HRESULT)).call(psi, prect)
  end
  def collapse_all : HRESULT
    @lpVtbl.value.collapse_all.unsafe_as(Proc(HRESULT)).call
  end
  def set_control_style(nstcsmask : UInt32, nstcsstyle : UInt32) : HRESULT
    @lpVtbl.value.set_control_style.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(nstcsmask, nstcsstyle)
  end
  def get_control_style(nstcsmask : UInt32, pnstcsstyle : UInt32*) : HRESULT
    @lpVtbl.value.get_control_style.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(nstcsmask, pnstcsstyle)
  end
  def set_control_style2(nstcsmask : NSTCSTYLE2, nstcsstyle : NSTCSTYLE2) : HRESULT
    @lpVtbl.value.set_control_style2.unsafe_as(Proc(NSTCSTYLE2, NSTCSTYLE2, HRESULT)).call(nstcsmask, nstcsstyle)
  end
  def get_control_style2(nstcsmask : NSTCSTYLE2, pnstcsstyle : NSTCSTYLE2*) : HRESULT
    @lpVtbl.value.get_control_style2.unsafe_as(Proc(NSTCSTYLE2, NSTCSTYLE2*, HRESULT)).call(nstcsmask, pnstcsstyle)
  end
end
struct LibWin32::INameSpaceTreeControlEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_item_click(psi : IShellItem, nstcehittest : UInt32, nstceclicktype : UInt32) : HRESULT
    @lpVtbl.value.on_item_click.unsafe_as(Proc(IShellItem, UInt32, UInt32, HRESULT)).call(psi, nstcehittest, nstceclicktype)
  end
  def on_property_item_commit(psi : IShellItem) : HRESULT
    @lpVtbl.value.on_property_item_commit.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def on_item_state_changing(psi : IShellItem, nstcismask : UInt32, nstcisstate : UInt32) : HRESULT
    @lpVtbl.value.on_item_state_changing.unsafe_as(Proc(IShellItem, UInt32, UInt32, HRESULT)).call(psi, nstcismask, nstcisstate)
  end
  def on_item_state_changed(psi : IShellItem, nstcismask : UInt32, nstcisstate : UInt32) : HRESULT
    @lpVtbl.value.on_item_state_changed.unsafe_as(Proc(IShellItem, UInt32, UInt32, HRESULT)).call(psi, nstcismask, nstcisstate)
  end
  def on_selection_changed(psiaselection : IShellItemArray) : HRESULT
    @lpVtbl.value.on_selection_changed.unsafe_as(Proc(IShellItemArray, HRESULT)).call(psiaselection)
  end
  def on_keyboard_input(umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : HRESULT
    @lpVtbl.value.on_keyboard_input.unsafe_as(Proc(UInt32, LibC::UINT_PTR, LPARAM, HRESULT)).call(umsg, wparam, lparam)
  end
  def on_before_expand(psi : IShellItem) : HRESULT
    @lpVtbl.value.on_before_expand.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def on_after_expand(psi : IShellItem) : HRESULT
    @lpVtbl.value.on_after_expand.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def on_begin_label_edit(psi : IShellItem) : HRESULT
    @lpVtbl.value.on_begin_label_edit.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def on_end_label_edit(psi : IShellItem) : HRESULT
    @lpVtbl.value.on_end_label_edit.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def on_get_tool_tip(psi : IShellItem, psztip : Char*, cchtip : Int32) : HRESULT
    @lpVtbl.value.on_get_tool_tip.unsafe_as(Proc(IShellItem, Char*, Int32, HRESULT)).call(psi, psztip, cchtip)
  end
  def on_before_item_delete(psi : IShellItem) : HRESULT
    @lpVtbl.value.on_before_item_delete.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def on_item_added(psi : IShellItem, fisroot : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_item_added.unsafe_as(Proc(IShellItem, LibC::BOOL, HRESULT)).call(psi, fisroot)
  end
  def on_item_deleted(psi : IShellItem, fisroot : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_item_deleted.unsafe_as(Proc(IShellItem, LibC::BOOL, HRESULT)).call(psi, fisroot)
  end
  def on_before_context_menu(psi : IShellItem, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.on_before_context_menu.unsafe_as(Proc(IShellItem, Guid*, Void**, HRESULT)).call(psi, riid, ppv)
  end
  def on_after_context_menu(psi : IShellItem, pcmin : IContextMenu, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.on_after_context_menu.unsafe_as(Proc(IShellItem, IContextMenu, Guid*, Void**, HRESULT)).call(psi, pcmin, riid, ppv)
  end
  def on_before_state_image_change(psi : IShellItem) : HRESULT
    @lpVtbl.value.on_before_state_image_change.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def on_get_default_icon_index(psi : IShellItem, pidefaulticon : Int32*, piopenicon : Int32*) : HRESULT
    @lpVtbl.value.on_get_default_icon_index.unsafe_as(Proc(IShellItem, Int32*, Int32*, HRESULT)).call(psi, pidefaulticon, piopenicon)
  end
end
struct LibWin32::INameSpaceTreeControlDropHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_drag_enter(psiover : IShellItem, psiadata : IShellItemArray, foutsidesource : LibC::BOOL, grfkeystate : UInt32, pdweffect : UInt32*) : HRESULT
    @lpVtbl.value.on_drag_enter.unsafe_as(Proc(IShellItem, IShellItemArray, LibC::BOOL, UInt32, UInt32*, HRESULT)).call(psiover, psiadata, foutsidesource, grfkeystate, pdweffect)
  end
  def on_drag_over(psiover : IShellItem, psiadata : IShellItemArray, grfkeystate : UInt32, pdweffect : UInt32*) : HRESULT
    @lpVtbl.value.on_drag_over.unsafe_as(Proc(IShellItem, IShellItemArray, UInt32, UInt32*, HRESULT)).call(psiover, psiadata, grfkeystate, pdweffect)
  end
  def on_drag_position(psiover : IShellItem, psiadata : IShellItemArray, inewposition : Int32, ioldposition : Int32) : HRESULT
    @lpVtbl.value.on_drag_position.unsafe_as(Proc(IShellItem, IShellItemArray, Int32, Int32, HRESULT)).call(psiover, psiadata, inewposition, ioldposition)
  end
  def on_drop(psiover : IShellItem, psiadata : IShellItemArray, iposition : Int32, grfkeystate : UInt32, pdweffect : UInt32*) : HRESULT
    @lpVtbl.value.on_drop.unsafe_as(Proc(IShellItem, IShellItemArray, Int32, UInt32, UInt32*, HRESULT)).call(psiover, psiadata, iposition, grfkeystate, pdweffect)
  end
  def on_drop_position(psiover : IShellItem, psiadata : IShellItemArray, inewposition : Int32, ioldposition : Int32) : HRESULT
    @lpVtbl.value.on_drop_position.unsafe_as(Proc(IShellItem, IShellItemArray, Int32, Int32, HRESULT)).call(psiover, psiadata, inewposition, ioldposition)
  end
  def on_drag_leave(psiover : IShellItem) : HRESULT
    @lpVtbl.value.on_drag_leave.unsafe_as(Proc(IShellItem, HRESULT)).call(psiover)
  end
end
struct LibWin32::INameSpaceTreeAccessible
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_get_default_accessibility_action(psi : IShellItem, pbstrdefaultaction : UInt8**) : HRESULT
    @lpVtbl.value.on_get_default_accessibility_action.unsafe_as(Proc(IShellItem, UInt8**, HRESULT)).call(psi, pbstrdefaultaction)
  end
  def on_do_default_accessibility_action(psi : IShellItem) : HRESULT
    @lpVtbl.value.on_do_default_accessibility_action.unsafe_as(Proc(IShellItem, HRESULT)).call(psi)
  end
  def on_get_accessibility_role(psi : IShellItem, pvarrole : VARIANT*) : HRESULT
    @lpVtbl.value.on_get_accessibility_role.unsafe_as(Proc(IShellItem, VARIANT*, HRESULT)).call(psi, pvarrole)
  end
end
struct LibWin32::INameSpaceTreeControlCustomDraw
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def pre_paint(hdc : HDC, prc : RECT*, plres : LRESULT*) : HRESULT
    @lpVtbl.value.pre_paint.unsafe_as(Proc(HDC, RECT*, LRESULT*, HRESULT)).call(hdc, prc, plres)
  end
  def post_paint(hdc : HDC, prc : RECT*) : HRESULT
    @lpVtbl.value.post_paint.unsafe_as(Proc(HDC, RECT*, HRESULT)).call(hdc, prc)
  end
  def item_pre_paint(hdc : HDC, prc : RECT*, pnstccditem : NSTCCUSTOMDRAW*, pclrtext : UInt32*, pclrtextbk : UInt32*, plres : LRESULT*) : HRESULT
    @lpVtbl.value.item_pre_paint.unsafe_as(Proc(HDC, RECT*, NSTCCUSTOMDRAW*, UInt32*, UInt32*, LRESULT*, HRESULT)).call(hdc, prc, pnstccditem, pclrtext, pclrtextbk, plres)
  end
  def item_post_paint(hdc : HDC, prc : RECT*, pnstccditem : NSTCCUSTOMDRAW*) : HRESULT
    @lpVtbl.value.item_post_paint.unsafe_as(Proc(HDC, RECT*, NSTCCUSTOMDRAW*, HRESULT)).call(hdc, prc, pnstccditem)
  end
end
struct LibWin32::ITrayDeskBand
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show_desk_band(clsid : Guid*) : HRESULT
    @lpVtbl.value.show_desk_band.unsafe_as(Proc(Guid*, HRESULT)).call(clsid)
  end
  def hide_desk_band(clsid : Guid*) : HRESULT
    @lpVtbl.value.hide_desk_band.unsafe_as(Proc(Guid*, HRESULT)).call(clsid)
  end
  def is_desk_band_shown(clsid : Guid*) : HRESULT
    @lpVtbl.value.is_desk_band_shown.unsafe_as(Proc(Guid*, HRESULT)).call(clsid)
  end
  def desk_band_registration_changed : HRESULT
    @lpVtbl.value.desk_band_registration_changed.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IBandHost
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_band(rclsidband : Guid*, favailable : LibC::BOOL, fvisible : LibC::BOOL, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.create_band.unsafe_as(Proc(Guid*, LibC::BOOL, LibC::BOOL, Guid*, Void**, HRESULT)).call(rclsidband, favailable, fvisible, riid, ppv)
  end
  def set_band_availability(rclsidband : Guid*, favailable : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_band_availability.unsafe_as(Proc(Guid*, LibC::BOOL, HRESULT)).call(rclsidband, favailable)
  end
  def destroy_band(rclsidband : Guid*) : HRESULT
    @lpVtbl.value.destroy_band.unsafe_as(Proc(Guid*, HRESULT)).call(rclsidband)
  end
end
struct LibWin32::IComputerInfoChangeNotify
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def computer_info_changed : HRESULT
    @lpVtbl.value.computer_info_changed.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IDesktopGadget
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def run_gadget(gadgetpath : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.run_gadget.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(gadgetpath)
  end
end
struct LibWin32::IAccessibilityDockingServiceCallback
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def undocked(undockreason : UNDOCK_REASON) : HRESULT
    @lpVtbl.value.undocked.unsafe_as(Proc(UNDOCK_REASON, HRESULT)).call(undockreason)
  end
end
struct LibWin32::IAccessibilityDockingService
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_available_size(hmonitor : HMONITOR, pcxfixed : UInt32*, pcymax : UInt32*) : HRESULT
    @lpVtbl.value.get_available_size.unsafe_as(Proc(HMONITOR, UInt32*, UInt32*, HRESULT)).call(hmonitor, pcxfixed, pcymax)
  end
  def dock_window(hwnd : LibC::HANDLE, hmonitor : HMONITOR, cyrequested : UInt32, pcallback : IAccessibilityDockingServiceCallback) : HRESULT
    @lpVtbl.value.dock_window.unsafe_as(Proc(LibC::HANDLE, HMONITOR, UInt32, IAccessibilityDockingServiceCallback, HRESULT)).call(hwnd, hmonitor, cyrequested, pcallback)
  end
  def undock_window(hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.undock_window.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwnd)
  end
end
struct LibWin32::IStorageProviderBanners
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_banner(provideridentity : LibC::LPWSTR, subscriptionid : LibC::LPWSTR, contentid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_banner.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(provideridentity, subscriptionid, contentid)
  end
  def clear_banner(provideridentity : LibC::LPWSTR, subscriptionid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.clear_banner.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(provideridentity, subscriptionid)
  end
  def clear_all_banners(provideridentity : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.clear_all_banners.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(provideridentity)
  end
  def get_banner(provideridentity : LibC::LPWSTR, subscriptionid : LibC::LPWSTR, contentid : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_banner.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR*, HRESULT)).call(provideridentity, subscriptionid, contentid)
  end
end
struct LibWin32::IStorageProviderCopyHook
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def copy_callback(hwnd : LibC::HANDLE, operation : UInt32, flags : UInt32, srcfile : LibC::LPWSTR, srcattribs : UInt32, destfile : LibC::LPWSTR, destattribs : UInt32, result : UInt32*) : HRESULT
    @lpVtbl.value.copy_callback.unsafe_as(Proc(LibC::HANDLE, UInt32, UInt32, LibC::LPWSTR, UInt32, LibC::LPWSTR, UInt32, UInt32*, HRESULT)).call(hwnd, operation, flags, srcfile, srcattribs, destfile, destattribs, result)
  end
end
struct LibWin32::IWebBrowser
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def go_back : HRESULT
    @lpVtbl.value.go_back.unsafe_as(Proc(HRESULT)).call
  end
  def go_forward : HRESULT
    @lpVtbl.value.go_forward.unsafe_as(Proc(HRESULT)).call
  end
  def go_home : HRESULT
    @lpVtbl.value.go_home.unsafe_as(Proc(HRESULT)).call
  end
  def go_search : HRESULT
    @lpVtbl.value.go_search.unsafe_as(Proc(HRESULT)).call
  end
  def navigate(url : UInt8*, flags : VARIANT*, targetframename : VARIANT*, postdata : VARIANT*, headers : VARIANT*) : HRESULT
    @lpVtbl.value.navigate.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, flags, targetframename, postdata, headers)
  end
  def refresh : HRESULT
    @lpVtbl.value.refresh.unsafe_as(Proc(HRESULT)).call
  end
  def refresh2(level : VARIANT*) : HRESULT
    @lpVtbl.value.refresh2.unsafe_as(Proc(VARIANT*, HRESULT)).call(level)
  end
  def stop : HRESULT
    @lpVtbl.value.stop.unsafe_as(Proc(HRESULT)).call
  end
  def get_application(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_parent(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_container(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_container.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_document(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_top_level_container(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_top_level_container.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def get_type(type : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(type)
  end
  def get_left(pl : Int32*) : HRESULT
    @lpVtbl.value.get_left.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_left(left : Int32) : HRESULT
    @lpVtbl.value.put_left.unsafe_as(Proc(Int32, HRESULT)).call(left)
  end
  def get_top(pl : Int32*) : HRESULT
    @lpVtbl.value.get_top.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_top(top : Int32) : HRESULT
    @lpVtbl.value.put_top.unsafe_as(Proc(Int32, HRESULT)).call(top)
  end
  def get_width(pl : Int32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_width(width : Int32) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(Int32, HRESULT)).call(width)
  end
  def get_height(pl : Int32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_height(height : Int32) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(Int32, HRESULT)).call(height)
  end
  def get_location_name(locationname : UInt8**) : HRESULT
    @lpVtbl.value.get_location_name.unsafe_as(Proc(UInt8**, HRESULT)).call(locationname)
  end
  def get_location_url(locationurl : UInt8**) : HRESULT
    @lpVtbl.value.get_location_url.unsafe_as(Proc(UInt8**, HRESULT)).call(locationurl)
  end
  def get_busy(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_busy.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
end
struct LibWin32::DWebBrowserEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IWebBrowserApp
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def go_back : HRESULT
    @lpVtbl.value.go_back.unsafe_as(Proc(HRESULT)).call
  end
  def go_forward : HRESULT
    @lpVtbl.value.go_forward.unsafe_as(Proc(HRESULT)).call
  end
  def go_home : HRESULT
    @lpVtbl.value.go_home.unsafe_as(Proc(HRESULT)).call
  end
  def go_search : HRESULT
    @lpVtbl.value.go_search.unsafe_as(Proc(HRESULT)).call
  end
  def navigate(url : UInt8*, flags : VARIANT*, targetframename : VARIANT*, postdata : VARIANT*, headers : VARIANT*) : HRESULT
    @lpVtbl.value.navigate.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, flags, targetframename, postdata, headers)
  end
  def refresh : HRESULT
    @lpVtbl.value.refresh.unsafe_as(Proc(HRESULT)).call
  end
  def refresh2(level : VARIANT*) : HRESULT
    @lpVtbl.value.refresh2.unsafe_as(Proc(VARIANT*, HRESULT)).call(level)
  end
  def stop : HRESULT
    @lpVtbl.value.stop.unsafe_as(Proc(HRESULT)).call
  end
  def get_application(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_parent(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_container(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_container.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_document(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_top_level_container(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_top_level_container.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def get_type(type : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(type)
  end
  def get_left(pl : Int32*) : HRESULT
    @lpVtbl.value.get_left.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_left(left : Int32) : HRESULT
    @lpVtbl.value.put_left.unsafe_as(Proc(Int32, HRESULT)).call(left)
  end
  def get_top(pl : Int32*) : HRESULT
    @lpVtbl.value.get_top.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_top(top : Int32) : HRESULT
    @lpVtbl.value.put_top.unsafe_as(Proc(Int32, HRESULT)).call(top)
  end
  def get_width(pl : Int32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_width(width : Int32) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(Int32, HRESULT)).call(width)
  end
  def get_height(pl : Int32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_height(height : Int32) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(Int32, HRESULT)).call(height)
  end
  def get_location_name(locationname : UInt8**) : HRESULT
    @lpVtbl.value.get_location_name.unsafe_as(Proc(UInt8**, HRESULT)).call(locationname)
  end
  def get_location_url(locationurl : UInt8**) : HRESULT
    @lpVtbl.value.get_location_url.unsafe_as(Proc(UInt8**, HRESULT)).call(locationurl)
  end
  def get_busy(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_busy.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def quit : HRESULT
    @lpVtbl.value.quit.unsafe_as(Proc(HRESULT)).call
  end
  def client_to_window(pcx : Int32*, pcy : Int32*) : HRESULT
    @lpVtbl.value.client_to_window.unsafe_as(Proc(Int32*, Int32*, HRESULT)).call(pcx, pcy)
  end
  def put_property(property : UInt8*, vtvalue : VARIANT) : HRESULT
    @lpVtbl.value.put_property.unsafe_as(Proc(UInt8*, VARIANT, HRESULT)).call(property, vtvalue)
  end
  def get_property(property : UInt8*, pvtvalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_property.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(property, pvtvalue)
  end
  def get_name(name : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(name)
  end
  def get_hwnd(phwnd : SHANDLE_PTR*) : HRESULT
    @lpVtbl.value.get_hwnd.unsafe_as(Proc(SHANDLE_PTR*, HRESULT)).call(phwnd)
  end
  def get_full_name(fullname : UInt8**) : HRESULT
    @lpVtbl.value.get_full_name.unsafe_as(Proc(UInt8**, HRESULT)).call(fullname)
  end
  def get_path(path : UInt8**) : HRESULT
    @lpVtbl.value.get_path.unsafe_as(Proc(UInt8**, HRESULT)).call(path)
  end
  def get_visible(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_visible.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def put_visible(value : Int16) : HRESULT
    @lpVtbl.value.put_visible.unsafe_as(Proc(Int16, HRESULT)).call(value)
  end
  def get_status_bar(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_status_bar.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def put_status_bar(value : Int16) : HRESULT
    @lpVtbl.value.put_status_bar.unsafe_as(Proc(Int16, HRESULT)).call(value)
  end
  def get_status_text(statustext : UInt8**) : HRESULT
    @lpVtbl.value.get_status_text.unsafe_as(Proc(UInt8**, HRESULT)).call(statustext)
  end
  def put_status_text(statustext : UInt8*) : HRESULT
    @lpVtbl.value.put_status_text.unsafe_as(Proc(UInt8*, HRESULT)).call(statustext)
  end
  def get_tool_bar(value : Int32*) : HRESULT
    @lpVtbl.value.get_tool_bar.unsafe_as(Proc(Int32*, HRESULT)).call(value)
  end
  def put_tool_bar(value : Int32) : HRESULT
    @lpVtbl.value.put_tool_bar.unsafe_as(Proc(Int32, HRESULT)).call(value)
  end
  def get_menu_bar(value : Int16*) : HRESULT
    @lpVtbl.value.get_menu_bar.unsafe_as(Proc(Int16*, HRESULT)).call(value)
  end
  def put_menu_bar(value : Int16) : HRESULT
    @lpVtbl.value.put_menu_bar.unsafe_as(Proc(Int16, HRESULT)).call(value)
  end
  def get_full_screen(pbfullscreen : Int16*) : HRESULT
    @lpVtbl.value.get_full_screen.unsafe_as(Proc(Int16*, HRESULT)).call(pbfullscreen)
  end
  def put_full_screen(bfullscreen : Int16) : HRESULT
    @lpVtbl.value.put_full_screen.unsafe_as(Proc(Int16, HRESULT)).call(bfullscreen)
  end
end
struct LibWin32::IWebBrowser2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def go_back : HRESULT
    @lpVtbl.value.go_back.unsafe_as(Proc(HRESULT)).call
  end
  def go_forward : HRESULT
    @lpVtbl.value.go_forward.unsafe_as(Proc(HRESULT)).call
  end
  def go_home : HRESULT
    @lpVtbl.value.go_home.unsafe_as(Proc(HRESULT)).call
  end
  def go_search : HRESULT
    @lpVtbl.value.go_search.unsafe_as(Proc(HRESULT)).call
  end
  def navigate(url : UInt8*, flags : VARIANT*, targetframename : VARIANT*, postdata : VARIANT*, headers : VARIANT*) : HRESULT
    @lpVtbl.value.navigate.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, flags, targetframename, postdata, headers)
  end
  def refresh : HRESULT
    @lpVtbl.value.refresh.unsafe_as(Proc(HRESULT)).call
  end
  def refresh2(level : VARIANT*) : HRESULT
    @lpVtbl.value.refresh2.unsafe_as(Proc(VARIANT*, HRESULT)).call(level)
  end
  def stop : HRESULT
    @lpVtbl.value.stop.unsafe_as(Proc(HRESULT)).call
  end
  def get_application(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_parent(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_container(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_container.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_document(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_document.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_top_level_container(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_top_level_container.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def get_type(type : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(type)
  end
  def get_left(pl : Int32*) : HRESULT
    @lpVtbl.value.get_left.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_left(left : Int32) : HRESULT
    @lpVtbl.value.put_left.unsafe_as(Proc(Int32, HRESULT)).call(left)
  end
  def get_top(pl : Int32*) : HRESULT
    @lpVtbl.value.get_top.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_top(top : Int32) : HRESULT
    @lpVtbl.value.put_top.unsafe_as(Proc(Int32, HRESULT)).call(top)
  end
  def get_width(pl : Int32*) : HRESULT
    @lpVtbl.value.get_width.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_width(width : Int32) : HRESULT
    @lpVtbl.value.put_width.unsafe_as(Proc(Int32, HRESULT)).call(width)
  end
  def get_height(pl : Int32*) : HRESULT
    @lpVtbl.value.get_height.unsafe_as(Proc(Int32*, HRESULT)).call(pl)
  end
  def put_height(height : Int32) : HRESULT
    @lpVtbl.value.put_height.unsafe_as(Proc(Int32, HRESULT)).call(height)
  end
  def get_location_name(locationname : UInt8**) : HRESULT
    @lpVtbl.value.get_location_name.unsafe_as(Proc(UInt8**, HRESULT)).call(locationname)
  end
  def get_location_url(locationurl : UInt8**) : HRESULT
    @lpVtbl.value.get_location_url.unsafe_as(Proc(UInt8**, HRESULT)).call(locationurl)
  end
  def get_busy(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_busy.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def quit : HRESULT
    @lpVtbl.value.quit.unsafe_as(Proc(HRESULT)).call
  end
  def client_to_window(pcx : Int32*, pcy : Int32*) : HRESULT
    @lpVtbl.value.client_to_window.unsafe_as(Proc(Int32*, Int32*, HRESULT)).call(pcx, pcy)
  end
  def put_property(property : UInt8*, vtvalue : VARIANT) : HRESULT
    @lpVtbl.value.put_property.unsafe_as(Proc(UInt8*, VARIANT, HRESULT)).call(property, vtvalue)
  end
  def get_property(property : UInt8*, pvtvalue : VARIANT*) : HRESULT
    @lpVtbl.value.get_property.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(property, pvtvalue)
  end
  def get_name(name : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(name)
  end
  def get_hwnd(phwnd : SHANDLE_PTR*) : HRESULT
    @lpVtbl.value.get_hwnd.unsafe_as(Proc(SHANDLE_PTR*, HRESULT)).call(phwnd)
  end
  def get_full_name(fullname : UInt8**) : HRESULT
    @lpVtbl.value.get_full_name.unsafe_as(Proc(UInt8**, HRESULT)).call(fullname)
  end
  def get_path(path : UInt8**) : HRESULT
    @lpVtbl.value.get_path.unsafe_as(Proc(UInt8**, HRESULT)).call(path)
  end
  def get_visible(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_visible.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def put_visible(value : Int16) : HRESULT
    @lpVtbl.value.put_visible.unsafe_as(Proc(Int16, HRESULT)).call(value)
  end
  def get_status_bar(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_status_bar.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def put_status_bar(value : Int16) : HRESULT
    @lpVtbl.value.put_status_bar.unsafe_as(Proc(Int16, HRESULT)).call(value)
  end
  def get_status_text(statustext : UInt8**) : HRESULT
    @lpVtbl.value.get_status_text.unsafe_as(Proc(UInt8**, HRESULT)).call(statustext)
  end
  def put_status_text(statustext : UInt8*) : HRESULT
    @lpVtbl.value.put_status_text.unsafe_as(Proc(UInt8*, HRESULT)).call(statustext)
  end
  def get_tool_bar(value : Int32*) : HRESULT
    @lpVtbl.value.get_tool_bar.unsafe_as(Proc(Int32*, HRESULT)).call(value)
  end
  def put_tool_bar(value : Int32) : HRESULT
    @lpVtbl.value.put_tool_bar.unsafe_as(Proc(Int32, HRESULT)).call(value)
  end
  def get_menu_bar(value : Int16*) : HRESULT
    @lpVtbl.value.get_menu_bar.unsafe_as(Proc(Int16*, HRESULT)).call(value)
  end
  def put_menu_bar(value : Int16) : HRESULT
    @lpVtbl.value.put_menu_bar.unsafe_as(Proc(Int16, HRESULT)).call(value)
  end
  def get_full_screen(pbfullscreen : Int16*) : HRESULT
    @lpVtbl.value.get_full_screen.unsafe_as(Proc(Int16*, HRESULT)).call(pbfullscreen)
  end
  def put_full_screen(bfullscreen : Int16) : HRESULT
    @lpVtbl.value.put_full_screen.unsafe_as(Proc(Int16, HRESULT)).call(bfullscreen)
  end
  def navigate2(url : VARIANT*, flags : VARIANT*, targetframename : VARIANT*, postdata : VARIANT*, headers : VARIANT*) : HRESULT
    @lpVtbl.value.navigate2.unsafe_as(Proc(VARIANT*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, flags, targetframename, postdata, headers)
  end
  def query_status_wb(cmdid : OLECMDID, pcmdf : OLECMDF*) : HRESULT
    @lpVtbl.value.query_status_wb.unsafe_as(Proc(OLECMDID, OLECMDF*, HRESULT)).call(cmdid, pcmdf)
  end
  def exec_wb(cmdid : OLECMDID, cmdexecopt : OLECMDEXECOPT, pvain : VARIANT*, pvaout : VARIANT*) : HRESULT
    @lpVtbl.value.exec_wb.unsafe_as(Proc(OLECMDID, OLECMDEXECOPT, VARIANT*, VARIANT*, HRESULT)).call(cmdid, cmdexecopt, pvain, pvaout)
  end
  def show_browser_bar(pvaclsid : VARIANT*, pvarshow : VARIANT*, pvarsize : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_bar.unsafe_as(Proc(VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(pvaclsid, pvarshow, pvarsize)
  end
  def get_ready_state(plreadystate : READYSTATE*) : HRESULT
    @lpVtbl.value.get_ready_state.unsafe_as(Proc(READYSTATE*, HRESULT)).call(plreadystate)
  end
  def get_offline(pboffline : Int16*) : HRESULT
    @lpVtbl.value.get_offline.unsafe_as(Proc(Int16*, HRESULT)).call(pboffline)
  end
  def put_offline(boffline : Int16) : HRESULT
    @lpVtbl.value.put_offline.unsafe_as(Proc(Int16, HRESULT)).call(boffline)
  end
  def get_silent(pbsilent : Int16*) : HRESULT
    @lpVtbl.value.get_silent.unsafe_as(Proc(Int16*, HRESULT)).call(pbsilent)
  end
  def put_silent(bsilent : Int16) : HRESULT
    @lpVtbl.value.put_silent.unsafe_as(Proc(Int16, HRESULT)).call(bsilent)
  end
  def get_register_as_browser(pbregister : Int16*) : HRESULT
    @lpVtbl.value.get_register_as_browser.unsafe_as(Proc(Int16*, HRESULT)).call(pbregister)
  end
  def put_register_as_browser(bregister : Int16) : HRESULT
    @lpVtbl.value.put_register_as_browser.unsafe_as(Proc(Int16, HRESULT)).call(bregister)
  end
  def get_register_as_drop_target(pbregister : Int16*) : HRESULT
    @lpVtbl.value.get_register_as_drop_target.unsafe_as(Proc(Int16*, HRESULT)).call(pbregister)
  end
  def put_register_as_drop_target(bregister : Int16) : HRESULT
    @lpVtbl.value.put_register_as_drop_target.unsafe_as(Proc(Int16, HRESULT)).call(bregister)
  end
  def get_theater_mode(pbregister : Int16*) : HRESULT
    @lpVtbl.value.get_theater_mode.unsafe_as(Proc(Int16*, HRESULT)).call(pbregister)
  end
  def put_theater_mode(bregister : Int16) : HRESULT
    @lpVtbl.value.put_theater_mode.unsafe_as(Proc(Int16, HRESULT)).call(bregister)
  end
  def get_address_bar(value : Int16*) : HRESULT
    @lpVtbl.value.get_address_bar.unsafe_as(Proc(Int16*, HRESULT)).call(value)
  end
  def put_address_bar(value : Int16) : HRESULT
    @lpVtbl.value.put_address_bar.unsafe_as(Proc(Int16, HRESULT)).call(value)
  end
  def get_resizable(value : Int16*) : HRESULT
    @lpVtbl.value.get_resizable.unsafe_as(Proc(Int16*, HRESULT)).call(value)
  end
  def put_resizable(value : Int16) : HRESULT
    @lpVtbl.value.put_resizable.unsafe_as(Proc(Int16, HRESULT)).call(value)
  end
end
struct LibWin32::DWebBrowserEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DShellWindowsEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IShellWindows
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_count(count : Int32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(Int32*, HRESULT)).call(count)
  end
  def item(index : VARIANT, folder : IDispatch*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT, IDispatch*, HRESULT)).call(index, folder)
  end
  def _new_enum(ppunk : IUnknown*) : HRESULT
    @lpVtbl.value._new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppunk)
  end
  def register(pid : IDispatch, hwnd : Int32, swclass : Int32, plcookie : Int32*) : HRESULT
    @lpVtbl.value.register.unsafe_as(Proc(IDispatch, Int32, Int32, Int32*, HRESULT)).call(pid, hwnd, swclass, plcookie)
  end
  def register_pending(lthreadid : Int32, pvarloc : VARIANT*, pvarlocroot : VARIANT*, swclass : Int32, plcookie : Int32*) : HRESULT
    @lpVtbl.value.register_pending.unsafe_as(Proc(Int32, VARIANT*, VARIANT*, Int32, Int32*, HRESULT)).call(lthreadid, pvarloc, pvarlocroot, swclass, plcookie)
  end
  def revoke(lcookie : Int32) : HRESULT
    @lpVtbl.value.revoke.unsafe_as(Proc(Int32, HRESULT)).call(lcookie)
  end
  def on_navigate(lcookie : Int32, pvarloc : VARIANT*) : HRESULT
    @lpVtbl.value.on_navigate.unsafe_as(Proc(Int32, VARIANT*, HRESULT)).call(lcookie, pvarloc)
  end
  def on_activated(lcookie : Int32, factive : Int16) : HRESULT
    @lpVtbl.value.on_activated.unsafe_as(Proc(Int32, Int16, HRESULT)).call(lcookie, factive)
  end
  def find_window_sw(pvarloc : VARIANT*, pvarlocroot : VARIANT*, swclass : Int32, phwnd : Int32*, swfwoptions : Int32, ppdispout : IDispatch*) : HRESULT
    @lpVtbl.value.find_window_sw.unsafe_as(Proc(VARIANT*, VARIANT*, Int32, Int32*, Int32, IDispatch*, HRESULT)).call(pvarloc, pvarlocroot, swclass, phwnd, swfwoptions, ppdispout)
  end
  def on_created(lcookie : Int32, punk : IUnknown) : HRESULT
    @lpVtbl.value.on_created.unsafe_as(Proc(Int32, IUnknown, HRESULT)).call(lcookie, punk)
  end
  def process_attach_detach(fattach : Int16) : HRESULT
    @lpVtbl.value.process_attach_detach.unsafe_as(Proc(Int16, HRESULT)).call(fattach)
  end
end
struct LibWin32::IShellUIHelper
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def reset_first_boot_mode : HRESULT
    @lpVtbl.value.reset_first_boot_mode.unsafe_as(Proc(HRESULT)).call
  end
  def reset_safe_mode : HRESULT
    @lpVtbl.value.reset_safe_mode.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_offline_desktop : HRESULT
    @lpVtbl.value.refresh_offline_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def add_favorite(url : UInt8*, title : VARIANT*) : HRESULT
    @lpVtbl.value.add_favorite.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(url, title)
  end
  def add_channel(url : UInt8*) : HRESULT
    @lpVtbl.value.add_channel.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def add_desktop_component(url : UInt8*, type : UInt8*, left : VARIANT*, top : VARIANT*, width : VARIANT*, height : VARIANT*) : HRESULT
    @lpVtbl.value.add_desktop_component.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, type, left, top, width, height)
  end
  def is_subscribed(url : UInt8*, pbool : Int16*) : HRESULT
    @lpVtbl.value.is_subscribed.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(url, pbool)
  end
  def navigate_and_find(url : UInt8*, strquery : UInt8*, vartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.navigate_and_find.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, strquery, vartargetframe)
  end
  def import_export_favorites(fimport : Int16, strimpexppath : UInt8*) : HRESULT
    @lpVtbl.value.import_export_favorites.unsafe_as(Proc(Int16, UInt8*, HRESULT)).call(fimport, strimpexppath)
  end
  def auto_complete_save_form(form : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_save_form.unsafe_as(Proc(VARIANT*, HRESULT)).call(form)
  end
  def auto_scan(strsearch : UInt8*, strfailureurl : UInt8*, pvartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.auto_scan.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(strsearch, strfailureurl, pvartargetframe)
  end
  def auto_complete_attach(reserved : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_attach.unsafe_as(Proc(VARIANT*, HRESULT)).call(reserved)
  end
  def show_browser_ui(bstrname : UInt8*, pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_ui.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, HRESULT)).call(bstrname, pvarin, pvarout)
  end
end
struct LibWin32::IShellUIHelper2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def reset_first_boot_mode : HRESULT
    @lpVtbl.value.reset_first_boot_mode.unsafe_as(Proc(HRESULT)).call
  end
  def reset_safe_mode : HRESULT
    @lpVtbl.value.reset_safe_mode.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_offline_desktop : HRESULT
    @lpVtbl.value.refresh_offline_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def add_favorite(url : UInt8*, title : VARIANT*) : HRESULT
    @lpVtbl.value.add_favorite.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(url, title)
  end
  def add_channel(url : UInt8*) : HRESULT
    @lpVtbl.value.add_channel.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def add_desktop_component(url : UInt8*, type : UInt8*, left : VARIANT*, top : VARIANT*, width : VARIANT*, height : VARIANT*) : HRESULT
    @lpVtbl.value.add_desktop_component.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, type, left, top, width, height)
  end
  def is_subscribed(url : UInt8*, pbool : Int16*) : HRESULT
    @lpVtbl.value.is_subscribed.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(url, pbool)
  end
  def navigate_and_find(url : UInt8*, strquery : UInt8*, vartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.navigate_and_find.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, strquery, vartargetframe)
  end
  def import_export_favorites(fimport : Int16, strimpexppath : UInt8*) : HRESULT
    @lpVtbl.value.import_export_favorites.unsafe_as(Proc(Int16, UInt8*, HRESULT)).call(fimport, strimpexppath)
  end
  def auto_complete_save_form(form : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_save_form.unsafe_as(Proc(VARIANT*, HRESULT)).call(form)
  end
  def auto_scan(strsearch : UInt8*, strfailureurl : UInt8*, pvartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.auto_scan.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(strsearch, strfailureurl, pvartargetframe)
  end
  def auto_complete_attach(reserved : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_attach.unsafe_as(Proc(VARIANT*, HRESULT)).call(reserved)
  end
  def show_browser_ui(bstrname : UInt8*, pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_ui.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, HRESULT)).call(bstrname, pvarin, pvarout)
  end
  def add_search_provider(url : UInt8*) : HRESULT
    @lpVtbl.value.add_search_provider.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def run_once_shown : HRESULT
    @lpVtbl.value.run_once_shown.unsafe_as(Proc(HRESULT)).call
  end
  def skip_run_once : HRESULT
    @lpVtbl.value.skip_run_once.unsafe_as(Proc(HRESULT)).call
  end
  def customize_settings(fsqm : Int16, fphishing : Int16, bstrlocale : UInt8*) : HRESULT
    @lpVtbl.value.customize_settings.unsafe_as(Proc(Int16, Int16, UInt8*, HRESULT)).call(fsqm, fphishing, bstrlocale)
  end
  def sqm_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.sqm_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def phishing_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.phishing_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def brand_image_uri(pbstruri : UInt8**) : HRESULT
    @lpVtbl.value.brand_image_uri.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstruri)
  end
  def skip_tabs_welcome : HRESULT
    @lpVtbl.value.skip_tabs_welcome.unsafe_as(Proc(HRESULT)).call
  end
  def diagnose_connection : HRESULT
    @lpVtbl.value.diagnose_connection.unsafe_as(Proc(HRESULT)).call
  end
  def customize_clear_type(fset : Int16) : HRESULT
    @lpVtbl.value.customize_clear_type.unsafe_as(Proc(Int16, HRESULT)).call(fset)
  end
  def is_search_provider_installed(url : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_search_provider_installed.unsafe_as(Proc(UInt8*, UInt32*, HRESULT)).call(url, pdwresult)
  end
  def is_search_migrated(pfmigrated : Int16*) : HRESULT
    @lpVtbl.value.is_search_migrated.unsafe_as(Proc(Int16*, HRESULT)).call(pfmigrated)
  end
  def default_search_provider(pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.default_search_provider.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrname)
  end
  def run_once_required_settings_complete(fcomplete : Int16) : HRESULT
    @lpVtbl.value.run_once_required_settings_complete.unsafe_as(Proc(Int16, HRESULT)).call(fcomplete)
  end
  def run_once_has_shown(pfshown : Int16*) : HRESULT
    @lpVtbl.value.run_once_has_shown.unsafe_as(Proc(Int16*, HRESULT)).call(pfshown)
  end
  def search_guide_url(pbstrurl : UInt8**) : HRESULT
    @lpVtbl.value.search_guide_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrurl)
  end
end
struct LibWin32::IShellUIHelper3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def reset_first_boot_mode : HRESULT
    @lpVtbl.value.reset_first_boot_mode.unsafe_as(Proc(HRESULT)).call
  end
  def reset_safe_mode : HRESULT
    @lpVtbl.value.reset_safe_mode.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_offline_desktop : HRESULT
    @lpVtbl.value.refresh_offline_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def add_favorite(url : UInt8*, title : VARIANT*) : HRESULT
    @lpVtbl.value.add_favorite.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(url, title)
  end
  def add_channel(url : UInt8*) : HRESULT
    @lpVtbl.value.add_channel.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def add_desktop_component(url : UInt8*, type : UInt8*, left : VARIANT*, top : VARIANT*, width : VARIANT*, height : VARIANT*) : HRESULT
    @lpVtbl.value.add_desktop_component.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, type, left, top, width, height)
  end
  def is_subscribed(url : UInt8*, pbool : Int16*) : HRESULT
    @lpVtbl.value.is_subscribed.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(url, pbool)
  end
  def navigate_and_find(url : UInt8*, strquery : UInt8*, vartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.navigate_and_find.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, strquery, vartargetframe)
  end
  def import_export_favorites(fimport : Int16, strimpexppath : UInt8*) : HRESULT
    @lpVtbl.value.import_export_favorites.unsafe_as(Proc(Int16, UInt8*, HRESULT)).call(fimport, strimpexppath)
  end
  def auto_complete_save_form(form : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_save_form.unsafe_as(Proc(VARIANT*, HRESULT)).call(form)
  end
  def auto_scan(strsearch : UInt8*, strfailureurl : UInt8*, pvartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.auto_scan.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(strsearch, strfailureurl, pvartargetframe)
  end
  def auto_complete_attach(reserved : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_attach.unsafe_as(Proc(VARIANT*, HRESULT)).call(reserved)
  end
  def show_browser_ui(bstrname : UInt8*, pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_ui.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, HRESULT)).call(bstrname, pvarin, pvarout)
  end
  def add_search_provider(url : UInt8*) : HRESULT
    @lpVtbl.value.add_search_provider.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def run_once_shown : HRESULT
    @lpVtbl.value.run_once_shown.unsafe_as(Proc(HRESULT)).call
  end
  def skip_run_once : HRESULT
    @lpVtbl.value.skip_run_once.unsafe_as(Proc(HRESULT)).call
  end
  def customize_settings(fsqm : Int16, fphishing : Int16, bstrlocale : UInt8*) : HRESULT
    @lpVtbl.value.customize_settings.unsafe_as(Proc(Int16, Int16, UInt8*, HRESULT)).call(fsqm, fphishing, bstrlocale)
  end
  def sqm_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.sqm_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def phishing_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.phishing_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def brand_image_uri(pbstruri : UInt8**) : HRESULT
    @lpVtbl.value.brand_image_uri.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstruri)
  end
  def skip_tabs_welcome : HRESULT
    @lpVtbl.value.skip_tabs_welcome.unsafe_as(Proc(HRESULT)).call
  end
  def diagnose_connection : HRESULT
    @lpVtbl.value.diagnose_connection.unsafe_as(Proc(HRESULT)).call
  end
  def customize_clear_type(fset : Int16) : HRESULT
    @lpVtbl.value.customize_clear_type.unsafe_as(Proc(Int16, HRESULT)).call(fset)
  end
  def is_search_provider_installed(url : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_search_provider_installed.unsafe_as(Proc(UInt8*, UInt32*, HRESULT)).call(url, pdwresult)
  end
  def is_search_migrated(pfmigrated : Int16*) : HRESULT
    @lpVtbl.value.is_search_migrated.unsafe_as(Proc(Int16*, HRESULT)).call(pfmigrated)
  end
  def default_search_provider(pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.default_search_provider.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrname)
  end
  def run_once_required_settings_complete(fcomplete : Int16) : HRESULT
    @lpVtbl.value.run_once_required_settings_complete.unsafe_as(Proc(Int16, HRESULT)).call(fcomplete)
  end
  def run_once_has_shown(pfshown : Int16*) : HRESULT
    @lpVtbl.value.run_once_has_shown.unsafe_as(Proc(Int16*, HRESULT)).call(pfshown)
  end
  def search_guide_url(pbstrurl : UInt8**) : HRESULT
    @lpVtbl.value.search_guide_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrurl)
  end
  def add_service(url : UInt8*) : HRESULT
    @lpVtbl.value.add_service.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def is_service_installed(url : UInt8*, verb : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_service_installed.unsafe_as(Proc(UInt8*, UInt8*, UInt32*, HRESULT)).call(url, verb, pdwresult)
  end
  def in_private_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.in_private_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def add_to_favorites_bar(url : UInt8*, title : UInt8*, type : VARIANT*) : HRESULT
    @lpVtbl.value.add_to_favorites_bar.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, title, type)
  end
  def build_new_tab_page : HRESULT
    @lpVtbl.value.build_new_tab_page.unsafe_as(Proc(HRESULT)).call
  end
  def set_recently_closed_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_recently_closed_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def set_activities_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_activities_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def content_discovery_reset : HRESULT
    @lpVtbl.value.content_discovery_reset.unsafe_as(Proc(HRESULT)).call
  end
  def is_suggested_sites_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.is_suggested_sites_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def enable_suggested_sites(fenable : Int16) : HRESULT
    @lpVtbl.value.enable_suggested_sites.unsafe_as(Proc(Int16, HRESULT)).call(fenable)
  end
  def navigate_to_suggested_sites(bstrrelativeurl : UInt8*) : HRESULT
    @lpVtbl.value.navigate_to_suggested_sites.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrrelativeurl)
  end
  def show_tabs_help : HRESULT
    @lpVtbl.value.show_tabs_help.unsafe_as(Proc(HRESULT)).call
  end
  def show_in_private_help : HRESULT
    @lpVtbl.value.show_in_private_help.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IShellUIHelper4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def reset_first_boot_mode : HRESULT
    @lpVtbl.value.reset_first_boot_mode.unsafe_as(Proc(HRESULT)).call
  end
  def reset_safe_mode : HRESULT
    @lpVtbl.value.reset_safe_mode.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_offline_desktop : HRESULT
    @lpVtbl.value.refresh_offline_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def add_favorite(url : UInt8*, title : VARIANT*) : HRESULT
    @lpVtbl.value.add_favorite.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(url, title)
  end
  def add_channel(url : UInt8*) : HRESULT
    @lpVtbl.value.add_channel.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def add_desktop_component(url : UInt8*, type : UInt8*, left : VARIANT*, top : VARIANT*, width : VARIANT*, height : VARIANT*) : HRESULT
    @lpVtbl.value.add_desktop_component.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, type, left, top, width, height)
  end
  def is_subscribed(url : UInt8*, pbool : Int16*) : HRESULT
    @lpVtbl.value.is_subscribed.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(url, pbool)
  end
  def navigate_and_find(url : UInt8*, strquery : UInt8*, vartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.navigate_and_find.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, strquery, vartargetframe)
  end
  def import_export_favorites(fimport : Int16, strimpexppath : UInt8*) : HRESULT
    @lpVtbl.value.import_export_favorites.unsafe_as(Proc(Int16, UInt8*, HRESULT)).call(fimport, strimpexppath)
  end
  def auto_complete_save_form(form : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_save_form.unsafe_as(Proc(VARIANT*, HRESULT)).call(form)
  end
  def auto_scan(strsearch : UInt8*, strfailureurl : UInt8*, pvartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.auto_scan.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(strsearch, strfailureurl, pvartargetframe)
  end
  def auto_complete_attach(reserved : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_attach.unsafe_as(Proc(VARIANT*, HRESULT)).call(reserved)
  end
  def show_browser_ui(bstrname : UInt8*, pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_ui.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, HRESULT)).call(bstrname, pvarin, pvarout)
  end
  def add_search_provider(url : UInt8*) : HRESULT
    @lpVtbl.value.add_search_provider.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def run_once_shown : HRESULT
    @lpVtbl.value.run_once_shown.unsafe_as(Proc(HRESULT)).call
  end
  def skip_run_once : HRESULT
    @lpVtbl.value.skip_run_once.unsafe_as(Proc(HRESULT)).call
  end
  def customize_settings(fsqm : Int16, fphishing : Int16, bstrlocale : UInt8*) : HRESULT
    @lpVtbl.value.customize_settings.unsafe_as(Proc(Int16, Int16, UInt8*, HRESULT)).call(fsqm, fphishing, bstrlocale)
  end
  def sqm_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.sqm_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def phishing_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.phishing_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def brand_image_uri(pbstruri : UInt8**) : HRESULT
    @lpVtbl.value.brand_image_uri.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstruri)
  end
  def skip_tabs_welcome : HRESULT
    @lpVtbl.value.skip_tabs_welcome.unsafe_as(Proc(HRESULT)).call
  end
  def diagnose_connection : HRESULT
    @lpVtbl.value.diagnose_connection.unsafe_as(Proc(HRESULT)).call
  end
  def customize_clear_type(fset : Int16) : HRESULT
    @lpVtbl.value.customize_clear_type.unsafe_as(Proc(Int16, HRESULT)).call(fset)
  end
  def is_search_provider_installed(url : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_search_provider_installed.unsafe_as(Proc(UInt8*, UInt32*, HRESULT)).call(url, pdwresult)
  end
  def is_search_migrated(pfmigrated : Int16*) : HRESULT
    @lpVtbl.value.is_search_migrated.unsafe_as(Proc(Int16*, HRESULT)).call(pfmigrated)
  end
  def default_search_provider(pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.default_search_provider.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrname)
  end
  def run_once_required_settings_complete(fcomplete : Int16) : HRESULT
    @lpVtbl.value.run_once_required_settings_complete.unsafe_as(Proc(Int16, HRESULT)).call(fcomplete)
  end
  def run_once_has_shown(pfshown : Int16*) : HRESULT
    @lpVtbl.value.run_once_has_shown.unsafe_as(Proc(Int16*, HRESULT)).call(pfshown)
  end
  def search_guide_url(pbstrurl : UInt8**) : HRESULT
    @lpVtbl.value.search_guide_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrurl)
  end
  def add_service(url : UInt8*) : HRESULT
    @lpVtbl.value.add_service.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def is_service_installed(url : UInt8*, verb : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_service_installed.unsafe_as(Proc(UInt8*, UInt8*, UInt32*, HRESULT)).call(url, verb, pdwresult)
  end
  def in_private_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.in_private_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def add_to_favorites_bar(url : UInt8*, title : UInt8*, type : VARIANT*) : HRESULT
    @lpVtbl.value.add_to_favorites_bar.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, title, type)
  end
  def build_new_tab_page : HRESULT
    @lpVtbl.value.build_new_tab_page.unsafe_as(Proc(HRESULT)).call
  end
  def set_recently_closed_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_recently_closed_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def set_activities_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_activities_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def content_discovery_reset : HRESULT
    @lpVtbl.value.content_discovery_reset.unsafe_as(Proc(HRESULT)).call
  end
  def is_suggested_sites_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.is_suggested_sites_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def enable_suggested_sites(fenable : Int16) : HRESULT
    @lpVtbl.value.enable_suggested_sites.unsafe_as(Proc(Int16, HRESULT)).call(fenable)
  end
  def navigate_to_suggested_sites(bstrrelativeurl : UInt8*) : HRESULT
    @lpVtbl.value.navigate_to_suggested_sites.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrrelativeurl)
  end
  def show_tabs_help : HRESULT
    @lpVtbl.value.show_tabs_help.unsafe_as(Proc(HRESULT)).call
  end
  def show_in_private_help : HRESULT
    @lpVtbl.value.show_in_private_help.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode(pfsitemode : Int16*) : HRESULT
    @lpVtbl.value.ms_is_site_mode.unsafe_as(Proc(Int16*, HRESULT)).call(pfsitemode)
  end
  def ms_site_mode_show_thumb_bar : HRESULT
    @lpVtbl.value.ms_site_mode_show_thumb_bar.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_thumb_bar_button(bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarbuttonid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_thumb_bar_button.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstriconurl, bstrtooltip, pvarbuttonid)
  end
  def ms_site_mode_update_thumb_bar_button(buttonid : VARIANT, fenabled : Int16, fvisible : Int16) : HRESULT
    @lpVtbl.value.ms_site_mode_update_thumb_bar_button.unsafe_as(Proc(VARIANT, Int16, Int16, HRESULT)).call(buttonid, fenabled, fvisible)
  end
  def ms_site_mode_set_icon_overlay(iconurl : UInt8*, pvardescription : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_set_icon_overlay.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(iconurl, pvardescription)
  end
  def ms_site_mode_clear_icon_overlay : HRESULT
    @lpVtbl.value.ms_site_mode_clear_icon_overlay.unsafe_as(Proc(HRESULT)).call
  end
  def ms_add_site_mode : HRESULT
    @lpVtbl.value.ms_add_site_mode.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_create_jump_list(bstrheader : UInt8*) : HRESULT
    @lpVtbl.value.ms_site_mode_create_jump_list.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrheader)
  end
  def ms_site_mode_add_jump_list_item(bstrname : UInt8*, bstractionuri : UInt8*, bstriconuri : UInt8*, pvarwindowtype : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_jump_list_item.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstrname, bstractionuri, bstriconuri, pvarwindowtype)
  end
  def ms_site_mode_clear_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_clear_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_show_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_show_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_button_style(uibuttonid : VARIANT, bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarstyleid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_button_style.unsafe_as(Proc(VARIANT, UInt8*, UInt8*, VARIANT*, HRESULT)).call(uibuttonid, bstriconurl, bstrtooltip, pvarstyleid)
  end
  def ms_site_mode_show_button_style(uibuttonid : VARIANT, uistyleid : VARIANT) : HRESULT
    @lpVtbl.value.ms_site_mode_show_button_style.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(uibuttonid, uistyleid)
  end
  def ms_site_mode_activate : HRESULT
    @lpVtbl.value.ms_site_mode_activate.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode_first_run(fpreservestate : Int16, puifirstrun : VARIANT*) : HRESULT
    @lpVtbl.value.ms_is_site_mode_first_run.unsafe_as(Proc(Int16, VARIANT*, HRESULT)).call(fpreservestate, puifirstrun)
  end
  def ms_add_tracking_protection_list(url : UInt8*, bstrfiltername : UInt8*) : HRESULT
    @lpVtbl.value.ms_add_tracking_protection_list.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(url, bstrfiltername)
  end
  def ms_tracking_protection_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_tracking_protection_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def ms_active_x_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_active_x_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
end
struct LibWin32::IShellUIHelper5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def reset_first_boot_mode : HRESULT
    @lpVtbl.value.reset_first_boot_mode.unsafe_as(Proc(HRESULT)).call
  end
  def reset_safe_mode : HRESULT
    @lpVtbl.value.reset_safe_mode.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_offline_desktop : HRESULT
    @lpVtbl.value.refresh_offline_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def add_favorite(url : UInt8*, title : VARIANT*) : HRESULT
    @lpVtbl.value.add_favorite.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(url, title)
  end
  def add_channel(url : UInt8*) : HRESULT
    @lpVtbl.value.add_channel.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def add_desktop_component(url : UInt8*, type : UInt8*, left : VARIANT*, top : VARIANT*, width : VARIANT*, height : VARIANT*) : HRESULT
    @lpVtbl.value.add_desktop_component.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, type, left, top, width, height)
  end
  def is_subscribed(url : UInt8*, pbool : Int16*) : HRESULT
    @lpVtbl.value.is_subscribed.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(url, pbool)
  end
  def navigate_and_find(url : UInt8*, strquery : UInt8*, vartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.navigate_and_find.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, strquery, vartargetframe)
  end
  def import_export_favorites(fimport : Int16, strimpexppath : UInt8*) : HRESULT
    @lpVtbl.value.import_export_favorites.unsafe_as(Proc(Int16, UInt8*, HRESULT)).call(fimport, strimpexppath)
  end
  def auto_complete_save_form(form : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_save_form.unsafe_as(Proc(VARIANT*, HRESULT)).call(form)
  end
  def auto_scan(strsearch : UInt8*, strfailureurl : UInt8*, pvartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.auto_scan.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(strsearch, strfailureurl, pvartargetframe)
  end
  def auto_complete_attach(reserved : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_attach.unsafe_as(Proc(VARIANT*, HRESULT)).call(reserved)
  end
  def show_browser_ui(bstrname : UInt8*, pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_ui.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, HRESULT)).call(bstrname, pvarin, pvarout)
  end
  def add_search_provider(url : UInt8*) : HRESULT
    @lpVtbl.value.add_search_provider.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def run_once_shown : HRESULT
    @lpVtbl.value.run_once_shown.unsafe_as(Proc(HRESULT)).call
  end
  def skip_run_once : HRESULT
    @lpVtbl.value.skip_run_once.unsafe_as(Proc(HRESULT)).call
  end
  def customize_settings(fsqm : Int16, fphishing : Int16, bstrlocale : UInt8*) : HRESULT
    @lpVtbl.value.customize_settings.unsafe_as(Proc(Int16, Int16, UInt8*, HRESULT)).call(fsqm, fphishing, bstrlocale)
  end
  def sqm_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.sqm_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def phishing_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.phishing_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def brand_image_uri(pbstruri : UInt8**) : HRESULT
    @lpVtbl.value.brand_image_uri.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstruri)
  end
  def skip_tabs_welcome : HRESULT
    @lpVtbl.value.skip_tabs_welcome.unsafe_as(Proc(HRESULT)).call
  end
  def diagnose_connection : HRESULT
    @lpVtbl.value.diagnose_connection.unsafe_as(Proc(HRESULT)).call
  end
  def customize_clear_type(fset : Int16) : HRESULT
    @lpVtbl.value.customize_clear_type.unsafe_as(Proc(Int16, HRESULT)).call(fset)
  end
  def is_search_provider_installed(url : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_search_provider_installed.unsafe_as(Proc(UInt8*, UInt32*, HRESULT)).call(url, pdwresult)
  end
  def is_search_migrated(pfmigrated : Int16*) : HRESULT
    @lpVtbl.value.is_search_migrated.unsafe_as(Proc(Int16*, HRESULT)).call(pfmigrated)
  end
  def default_search_provider(pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.default_search_provider.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrname)
  end
  def run_once_required_settings_complete(fcomplete : Int16) : HRESULT
    @lpVtbl.value.run_once_required_settings_complete.unsafe_as(Proc(Int16, HRESULT)).call(fcomplete)
  end
  def run_once_has_shown(pfshown : Int16*) : HRESULT
    @lpVtbl.value.run_once_has_shown.unsafe_as(Proc(Int16*, HRESULT)).call(pfshown)
  end
  def search_guide_url(pbstrurl : UInt8**) : HRESULT
    @lpVtbl.value.search_guide_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrurl)
  end
  def add_service(url : UInt8*) : HRESULT
    @lpVtbl.value.add_service.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def is_service_installed(url : UInt8*, verb : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_service_installed.unsafe_as(Proc(UInt8*, UInt8*, UInt32*, HRESULT)).call(url, verb, pdwresult)
  end
  def in_private_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.in_private_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def add_to_favorites_bar(url : UInt8*, title : UInt8*, type : VARIANT*) : HRESULT
    @lpVtbl.value.add_to_favorites_bar.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, title, type)
  end
  def build_new_tab_page : HRESULT
    @lpVtbl.value.build_new_tab_page.unsafe_as(Proc(HRESULT)).call
  end
  def set_recently_closed_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_recently_closed_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def set_activities_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_activities_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def content_discovery_reset : HRESULT
    @lpVtbl.value.content_discovery_reset.unsafe_as(Proc(HRESULT)).call
  end
  def is_suggested_sites_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.is_suggested_sites_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def enable_suggested_sites(fenable : Int16) : HRESULT
    @lpVtbl.value.enable_suggested_sites.unsafe_as(Proc(Int16, HRESULT)).call(fenable)
  end
  def navigate_to_suggested_sites(bstrrelativeurl : UInt8*) : HRESULT
    @lpVtbl.value.navigate_to_suggested_sites.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrrelativeurl)
  end
  def show_tabs_help : HRESULT
    @lpVtbl.value.show_tabs_help.unsafe_as(Proc(HRESULT)).call
  end
  def show_in_private_help : HRESULT
    @lpVtbl.value.show_in_private_help.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode(pfsitemode : Int16*) : HRESULT
    @lpVtbl.value.ms_is_site_mode.unsafe_as(Proc(Int16*, HRESULT)).call(pfsitemode)
  end
  def ms_site_mode_show_thumb_bar : HRESULT
    @lpVtbl.value.ms_site_mode_show_thumb_bar.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_thumb_bar_button(bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarbuttonid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_thumb_bar_button.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstriconurl, bstrtooltip, pvarbuttonid)
  end
  def ms_site_mode_update_thumb_bar_button(buttonid : VARIANT, fenabled : Int16, fvisible : Int16) : HRESULT
    @lpVtbl.value.ms_site_mode_update_thumb_bar_button.unsafe_as(Proc(VARIANT, Int16, Int16, HRESULT)).call(buttonid, fenabled, fvisible)
  end
  def ms_site_mode_set_icon_overlay(iconurl : UInt8*, pvardescription : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_set_icon_overlay.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(iconurl, pvardescription)
  end
  def ms_site_mode_clear_icon_overlay : HRESULT
    @lpVtbl.value.ms_site_mode_clear_icon_overlay.unsafe_as(Proc(HRESULT)).call
  end
  def ms_add_site_mode : HRESULT
    @lpVtbl.value.ms_add_site_mode.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_create_jump_list(bstrheader : UInt8*) : HRESULT
    @lpVtbl.value.ms_site_mode_create_jump_list.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrheader)
  end
  def ms_site_mode_add_jump_list_item(bstrname : UInt8*, bstractionuri : UInt8*, bstriconuri : UInt8*, pvarwindowtype : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_jump_list_item.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstrname, bstractionuri, bstriconuri, pvarwindowtype)
  end
  def ms_site_mode_clear_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_clear_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_show_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_show_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_button_style(uibuttonid : VARIANT, bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarstyleid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_button_style.unsafe_as(Proc(VARIANT, UInt8*, UInt8*, VARIANT*, HRESULT)).call(uibuttonid, bstriconurl, bstrtooltip, pvarstyleid)
  end
  def ms_site_mode_show_button_style(uibuttonid : VARIANT, uistyleid : VARIANT) : HRESULT
    @lpVtbl.value.ms_site_mode_show_button_style.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(uibuttonid, uistyleid)
  end
  def ms_site_mode_activate : HRESULT
    @lpVtbl.value.ms_site_mode_activate.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode_first_run(fpreservestate : Int16, puifirstrun : VARIANT*) : HRESULT
    @lpVtbl.value.ms_is_site_mode_first_run.unsafe_as(Proc(Int16, VARIANT*, HRESULT)).call(fpreservestate, puifirstrun)
  end
  def ms_add_tracking_protection_list(url : UInt8*, bstrfiltername : UInt8*) : HRESULT
    @lpVtbl.value.ms_add_tracking_protection_list.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(url, bstrfiltername)
  end
  def ms_tracking_protection_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_tracking_protection_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def ms_active_x_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_active_x_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def ms_provision_networks(bstrprovisioningxml : UInt8*, puiresult : VARIANT*) : HRESULT
    @lpVtbl.value.ms_provision_networks.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrprovisioningxml, puiresult)
  end
  def ms_report_safe_url : HRESULT
    @lpVtbl.value.ms_report_safe_url.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_refresh_badge : HRESULT
    @lpVtbl.value.ms_site_mode_refresh_badge.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_clear_badge : HRESULT
    @lpVtbl.value.ms_site_mode_clear_badge.unsafe_as(Proc(HRESULT)).call
  end
  def ms_diagnose_connection_ui_less : HRESULT
    @lpVtbl.value.ms_diagnose_connection_ui_less.unsafe_as(Proc(HRESULT)).call
  end
  def ms_launch_network_client_help : HRESULT
    @lpVtbl.value.ms_launch_network_client_help.unsafe_as(Proc(HRESULT)).call
  end
  def ms_change_default_browser(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_change_default_browser.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
end
struct LibWin32::IShellUIHelper6
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def reset_first_boot_mode : HRESULT
    @lpVtbl.value.reset_first_boot_mode.unsafe_as(Proc(HRESULT)).call
  end
  def reset_safe_mode : HRESULT
    @lpVtbl.value.reset_safe_mode.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_offline_desktop : HRESULT
    @lpVtbl.value.refresh_offline_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def add_favorite(url : UInt8*, title : VARIANT*) : HRESULT
    @lpVtbl.value.add_favorite.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(url, title)
  end
  def add_channel(url : UInt8*) : HRESULT
    @lpVtbl.value.add_channel.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def add_desktop_component(url : UInt8*, type : UInt8*, left : VARIANT*, top : VARIANT*, width : VARIANT*, height : VARIANT*) : HRESULT
    @lpVtbl.value.add_desktop_component.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, type, left, top, width, height)
  end
  def is_subscribed(url : UInt8*, pbool : Int16*) : HRESULT
    @lpVtbl.value.is_subscribed.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(url, pbool)
  end
  def navigate_and_find(url : UInt8*, strquery : UInt8*, vartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.navigate_and_find.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, strquery, vartargetframe)
  end
  def import_export_favorites(fimport : Int16, strimpexppath : UInt8*) : HRESULT
    @lpVtbl.value.import_export_favorites.unsafe_as(Proc(Int16, UInt8*, HRESULT)).call(fimport, strimpexppath)
  end
  def auto_complete_save_form(form : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_save_form.unsafe_as(Proc(VARIANT*, HRESULT)).call(form)
  end
  def auto_scan(strsearch : UInt8*, strfailureurl : UInt8*, pvartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.auto_scan.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(strsearch, strfailureurl, pvartargetframe)
  end
  def auto_complete_attach(reserved : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_attach.unsafe_as(Proc(VARIANT*, HRESULT)).call(reserved)
  end
  def show_browser_ui(bstrname : UInt8*, pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_ui.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, HRESULT)).call(bstrname, pvarin, pvarout)
  end
  def add_search_provider(url : UInt8*) : HRESULT
    @lpVtbl.value.add_search_provider.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def run_once_shown : HRESULT
    @lpVtbl.value.run_once_shown.unsafe_as(Proc(HRESULT)).call
  end
  def skip_run_once : HRESULT
    @lpVtbl.value.skip_run_once.unsafe_as(Proc(HRESULT)).call
  end
  def customize_settings(fsqm : Int16, fphishing : Int16, bstrlocale : UInt8*) : HRESULT
    @lpVtbl.value.customize_settings.unsafe_as(Proc(Int16, Int16, UInt8*, HRESULT)).call(fsqm, fphishing, bstrlocale)
  end
  def sqm_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.sqm_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def phishing_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.phishing_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def brand_image_uri(pbstruri : UInt8**) : HRESULT
    @lpVtbl.value.brand_image_uri.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstruri)
  end
  def skip_tabs_welcome : HRESULT
    @lpVtbl.value.skip_tabs_welcome.unsafe_as(Proc(HRESULT)).call
  end
  def diagnose_connection : HRESULT
    @lpVtbl.value.diagnose_connection.unsafe_as(Proc(HRESULT)).call
  end
  def customize_clear_type(fset : Int16) : HRESULT
    @lpVtbl.value.customize_clear_type.unsafe_as(Proc(Int16, HRESULT)).call(fset)
  end
  def is_search_provider_installed(url : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_search_provider_installed.unsafe_as(Proc(UInt8*, UInt32*, HRESULT)).call(url, pdwresult)
  end
  def is_search_migrated(pfmigrated : Int16*) : HRESULT
    @lpVtbl.value.is_search_migrated.unsafe_as(Proc(Int16*, HRESULT)).call(pfmigrated)
  end
  def default_search_provider(pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.default_search_provider.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrname)
  end
  def run_once_required_settings_complete(fcomplete : Int16) : HRESULT
    @lpVtbl.value.run_once_required_settings_complete.unsafe_as(Proc(Int16, HRESULT)).call(fcomplete)
  end
  def run_once_has_shown(pfshown : Int16*) : HRESULT
    @lpVtbl.value.run_once_has_shown.unsafe_as(Proc(Int16*, HRESULT)).call(pfshown)
  end
  def search_guide_url(pbstrurl : UInt8**) : HRESULT
    @lpVtbl.value.search_guide_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrurl)
  end
  def add_service(url : UInt8*) : HRESULT
    @lpVtbl.value.add_service.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def is_service_installed(url : UInt8*, verb : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_service_installed.unsafe_as(Proc(UInt8*, UInt8*, UInt32*, HRESULT)).call(url, verb, pdwresult)
  end
  def in_private_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.in_private_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def add_to_favorites_bar(url : UInt8*, title : UInt8*, type : VARIANT*) : HRESULT
    @lpVtbl.value.add_to_favorites_bar.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, title, type)
  end
  def build_new_tab_page : HRESULT
    @lpVtbl.value.build_new_tab_page.unsafe_as(Proc(HRESULT)).call
  end
  def set_recently_closed_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_recently_closed_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def set_activities_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_activities_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def content_discovery_reset : HRESULT
    @lpVtbl.value.content_discovery_reset.unsafe_as(Proc(HRESULT)).call
  end
  def is_suggested_sites_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.is_suggested_sites_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def enable_suggested_sites(fenable : Int16) : HRESULT
    @lpVtbl.value.enable_suggested_sites.unsafe_as(Proc(Int16, HRESULT)).call(fenable)
  end
  def navigate_to_suggested_sites(bstrrelativeurl : UInt8*) : HRESULT
    @lpVtbl.value.navigate_to_suggested_sites.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrrelativeurl)
  end
  def show_tabs_help : HRESULT
    @lpVtbl.value.show_tabs_help.unsafe_as(Proc(HRESULT)).call
  end
  def show_in_private_help : HRESULT
    @lpVtbl.value.show_in_private_help.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode(pfsitemode : Int16*) : HRESULT
    @lpVtbl.value.ms_is_site_mode.unsafe_as(Proc(Int16*, HRESULT)).call(pfsitemode)
  end
  def ms_site_mode_show_thumb_bar : HRESULT
    @lpVtbl.value.ms_site_mode_show_thumb_bar.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_thumb_bar_button(bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarbuttonid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_thumb_bar_button.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstriconurl, bstrtooltip, pvarbuttonid)
  end
  def ms_site_mode_update_thumb_bar_button(buttonid : VARIANT, fenabled : Int16, fvisible : Int16) : HRESULT
    @lpVtbl.value.ms_site_mode_update_thumb_bar_button.unsafe_as(Proc(VARIANT, Int16, Int16, HRESULT)).call(buttonid, fenabled, fvisible)
  end
  def ms_site_mode_set_icon_overlay(iconurl : UInt8*, pvardescription : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_set_icon_overlay.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(iconurl, pvardescription)
  end
  def ms_site_mode_clear_icon_overlay : HRESULT
    @lpVtbl.value.ms_site_mode_clear_icon_overlay.unsafe_as(Proc(HRESULT)).call
  end
  def ms_add_site_mode : HRESULT
    @lpVtbl.value.ms_add_site_mode.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_create_jump_list(bstrheader : UInt8*) : HRESULT
    @lpVtbl.value.ms_site_mode_create_jump_list.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrheader)
  end
  def ms_site_mode_add_jump_list_item(bstrname : UInt8*, bstractionuri : UInt8*, bstriconuri : UInt8*, pvarwindowtype : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_jump_list_item.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstrname, bstractionuri, bstriconuri, pvarwindowtype)
  end
  def ms_site_mode_clear_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_clear_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_show_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_show_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_button_style(uibuttonid : VARIANT, bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarstyleid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_button_style.unsafe_as(Proc(VARIANT, UInt8*, UInt8*, VARIANT*, HRESULT)).call(uibuttonid, bstriconurl, bstrtooltip, pvarstyleid)
  end
  def ms_site_mode_show_button_style(uibuttonid : VARIANT, uistyleid : VARIANT) : HRESULT
    @lpVtbl.value.ms_site_mode_show_button_style.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(uibuttonid, uistyleid)
  end
  def ms_site_mode_activate : HRESULT
    @lpVtbl.value.ms_site_mode_activate.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode_first_run(fpreservestate : Int16, puifirstrun : VARIANT*) : HRESULT
    @lpVtbl.value.ms_is_site_mode_first_run.unsafe_as(Proc(Int16, VARIANT*, HRESULT)).call(fpreservestate, puifirstrun)
  end
  def ms_add_tracking_protection_list(url : UInt8*, bstrfiltername : UInt8*) : HRESULT
    @lpVtbl.value.ms_add_tracking_protection_list.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(url, bstrfiltername)
  end
  def ms_tracking_protection_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_tracking_protection_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def ms_active_x_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_active_x_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def ms_provision_networks(bstrprovisioningxml : UInt8*, puiresult : VARIANT*) : HRESULT
    @lpVtbl.value.ms_provision_networks.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrprovisioningxml, puiresult)
  end
  def ms_report_safe_url : HRESULT
    @lpVtbl.value.ms_report_safe_url.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_refresh_badge : HRESULT
    @lpVtbl.value.ms_site_mode_refresh_badge.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_clear_badge : HRESULT
    @lpVtbl.value.ms_site_mode_clear_badge.unsafe_as(Proc(HRESULT)).call
  end
  def ms_diagnose_connection_ui_less : HRESULT
    @lpVtbl.value.ms_diagnose_connection_ui_less.unsafe_as(Proc(HRESULT)).call
  end
  def ms_launch_network_client_help : HRESULT
    @lpVtbl.value.ms_launch_network_client_help.unsafe_as(Proc(HRESULT)).call
  end
  def ms_change_default_browser(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_change_default_browser.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_stop_periodic_tile_update : HRESULT
    @lpVtbl.value.ms_stop_periodic_tile_update.unsafe_as(Proc(HRESULT)).call
  end
  def ms_start_periodic_tile_update(pollinguris : VARIANT, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_tile_update.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, HRESULT)).call(pollinguris, starttime, uiupdaterecurrence)
  end
  def ms_start_periodic_tile_update_batch(pollinguris : VARIANT, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_tile_update_batch.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, HRESULT)).call(pollinguris, starttime, uiupdaterecurrence)
  end
  def ms_clear_tile : HRESULT
    @lpVtbl.value.ms_clear_tile.unsafe_as(Proc(HRESULT)).call
  end
  def ms_enable_tile_notification_queue(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_pinned_site_state(pvarsitestate : VARIANT*) : HRESULT
    @lpVtbl.value.ms_pinned_site_state.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvarsitestate)
  end
  def ms_enable_tile_notification_queue_for_square150x150(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_square150x150.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_enable_tile_notification_queue_for_wide310x150(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_wide310x150.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_enable_tile_notification_queue_for_square310x310(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_square310x310.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_scheduled_tile_notification(bstrnotificationxml : UInt8*, bstrnotificationid : UInt8*, bstrnotificationtag : UInt8*, starttime : VARIANT, expirationtime : VARIANT) : HRESULT
    @lpVtbl.value.ms_scheduled_tile_notification.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, VARIANT, VARIANT, HRESULT)).call(bstrnotificationxml, bstrnotificationid, bstrnotificationtag, starttime, expirationtime)
  end
  def ms_remove_scheduled_tile_notification(bstrnotificationid : UInt8*) : HRESULT
    @lpVtbl.value.ms_remove_scheduled_tile_notification.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrnotificationid)
  end
  def ms_start_periodic_badge_update(pollinguri : UInt8*, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_badge_update.unsafe_as(Proc(UInt8*, VARIANT, VARIANT, HRESULT)).call(pollinguri, starttime, uiupdaterecurrence)
  end
  def ms_stop_periodic_badge_update : HRESULT
    @lpVtbl.value.ms_stop_periodic_badge_update.unsafe_as(Proc(HRESULT)).call
  end
  def ms_launch_internet_options : HRESULT
    @lpVtbl.value.ms_launch_internet_options.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IShellUIHelper7
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def reset_first_boot_mode : HRESULT
    @lpVtbl.value.reset_first_boot_mode.unsafe_as(Proc(HRESULT)).call
  end
  def reset_safe_mode : HRESULT
    @lpVtbl.value.reset_safe_mode.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_offline_desktop : HRESULT
    @lpVtbl.value.refresh_offline_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def add_favorite(url : UInt8*, title : VARIANT*) : HRESULT
    @lpVtbl.value.add_favorite.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(url, title)
  end
  def add_channel(url : UInt8*) : HRESULT
    @lpVtbl.value.add_channel.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def add_desktop_component(url : UInt8*, type : UInt8*, left : VARIANT*, top : VARIANT*, width : VARIANT*, height : VARIANT*) : HRESULT
    @lpVtbl.value.add_desktop_component.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, type, left, top, width, height)
  end
  def is_subscribed(url : UInt8*, pbool : Int16*) : HRESULT
    @lpVtbl.value.is_subscribed.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(url, pbool)
  end
  def navigate_and_find(url : UInt8*, strquery : UInt8*, vartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.navigate_and_find.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, strquery, vartargetframe)
  end
  def import_export_favorites(fimport : Int16, strimpexppath : UInt8*) : HRESULT
    @lpVtbl.value.import_export_favorites.unsafe_as(Proc(Int16, UInt8*, HRESULT)).call(fimport, strimpexppath)
  end
  def auto_complete_save_form(form : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_save_form.unsafe_as(Proc(VARIANT*, HRESULT)).call(form)
  end
  def auto_scan(strsearch : UInt8*, strfailureurl : UInt8*, pvartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.auto_scan.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(strsearch, strfailureurl, pvartargetframe)
  end
  def auto_complete_attach(reserved : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_attach.unsafe_as(Proc(VARIANT*, HRESULT)).call(reserved)
  end
  def show_browser_ui(bstrname : UInt8*, pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_ui.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, HRESULT)).call(bstrname, pvarin, pvarout)
  end
  def add_search_provider(url : UInt8*) : HRESULT
    @lpVtbl.value.add_search_provider.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def run_once_shown : HRESULT
    @lpVtbl.value.run_once_shown.unsafe_as(Proc(HRESULT)).call
  end
  def skip_run_once : HRESULT
    @lpVtbl.value.skip_run_once.unsafe_as(Proc(HRESULT)).call
  end
  def customize_settings(fsqm : Int16, fphishing : Int16, bstrlocale : UInt8*) : HRESULT
    @lpVtbl.value.customize_settings.unsafe_as(Proc(Int16, Int16, UInt8*, HRESULT)).call(fsqm, fphishing, bstrlocale)
  end
  def sqm_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.sqm_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def phishing_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.phishing_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def brand_image_uri(pbstruri : UInt8**) : HRESULT
    @lpVtbl.value.brand_image_uri.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstruri)
  end
  def skip_tabs_welcome : HRESULT
    @lpVtbl.value.skip_tabs_welcome.unsafe_as(Proc(HRESULT)).call
  end
  def diagnose_connection : HRESULT
    @lpVtbl.value.diagnose_connection.unsafe_as(Proc(HRESULT)).call
  end
  def customize_clear_type(fset : Int16) : HRESULT
    @lpVtbl.value.customize_clear_type.unsafe_as(Proc(Int16, HRESULT)).call(fset)
  end
  def is_search_provider_installed(url : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_search_provider_installed.unsafe_as(Proc(UInt8*, UInt32*, HRESULT)).call(url, pdwresult)
  end
  def is_search_migrated(pfmigrated : Int16*) : HRESULT
    @lpVtbl.value.is_search_migrated.unsafe_as(Proc(Int16*, HRESULT)).call(pfmigrated)
  end
  def default_search_provider(pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.default_search_provider.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrname)
  end
  def run_once_required_settings_complete(fcomplete : Int16) : HRESULT
    @lpVtbl.value.run_once_required_settings_complete.unsafe_as(Proc(Int16, HRESULT)).call(fcomplete)
  end
  def run_once_has_shown(pfshown : Int16*) : HRESULT
    @lpVtbl.value.run_once_has_shown.unsafe_as(Proc(Int16*, HRESULT)).call(pfshown)
  end
  def search_guide_url(pbstrurl : UInt8**) : HRESULT
    @lpVtbl.value.search_guide_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrurl)
  end
  def add_service(url : UInt8*) : HRESULT
    @lpVtbl.value.add_service.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def is_service_installed(url : UInt8*, verb : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_service_installed.unsafe_as(Proc(UInt8*, UInt8*, UInt32*, HRESULT)).call(url, verb, pdwresult)
  end
  def in_private_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.in_private_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def add_to_favorites_bar(url : UInt8*, title : UInt8*, type : VARIANT*) : HRESULT
    @lpVtbl.value.add_to_favorites_bar.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, title, type)
  end
  def build_new_tab_page : HRESULT
    @lpVtbl.value.build_new_tab_page.unsafe_as(Proc(HRESULT)).call
  end
  def set_recently_closed_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_recently_closed_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def set_activities_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_activities_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def content_discovery_reset : HRESULT
    @lpVtbl.value.content_discovery_reset.unsafe_as(Proc(HRESULT)).call
  end
  def is_suggested_sites_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.is_suggested_sites_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def enable_suggested_sites(fenable : Int16) : HRESULT
    @lpVtbl.value.enable_suggested_sites.unsafe_as(Proc(Int16, HRESULT)).call(fenable)
  end
  def navigate_to_suggested_sites(bstrrelativeurl : UInt8*) : HRESULT
    @lpVtbl.value.navigate_to_suggested_sites.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrrelativeurl)
  end
  def show_tabs_help : HRESULT
    @lpVtbl.value.show_tabs_help.unsafe_as(Proc(HRESULT)).call
  end
  def show_in_private_help : HRESULT
    @lpVtbl.value.show_in_private_help.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode(pfsitemode : Int16*) : HRESULT
    @lpVtbl.value.ms_is_site_mode.unsafe_as(Proc(Int16*, HRESULT)).call(pfsitemode)
  end
  def ms_site_mode_show_thumb_bar : HRESULT
    @lpVtbl.value.ms_site_mode_show_thumb_bar.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_thumb_bar_button(bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarbuttonid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_thumb_bar_button.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstriconurl, bstrtooltip, pvarbuttonid)
  end
  def ms_site_mode_update_thumb_bar_button(buttonid : VARIANT, fenabled : Int16, fvisible : Int16) : HRESULT
    @lpVtbl.value.ms_site_mode_update_thumb_bar_button.unsafe_as(Proc(VARIANT, Int16, Int16, HRESULT)).call(buttonid, fenabled, fvisible)
  end
  def ms_site_mode_set_icon_overlay(iconurl : UInt8*, pvardescription : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_set_icon_overlay.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(iconurl, pvardescription)
  end
  def ms_site_mode_clear_icon_overlay : HRESULT
    @lpVtbl.value.ms_site_mode_clear_icon_overlay.unsafe_as(Proc(HRESULT)).call
  end
  def ms_add_site_mode : HRESULT
    @lpVtbl.value.ms_add_site_mode.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_create_jump_list(bstrheader : UInt8*) : HRESULT
    @lpVtbl.value.ms_site_mode_create_jump_list.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrheader)
  end
  def ms_site_mode_add_jump_list_item(bstrname : UInt8*, bstractionuri : UInt8*, bstriconuri : UInt8*, pvarwindowtype : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_jump_list_item.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstrname, bstractionuri, bstriconuri, pvarwindowtype)
  end
  def ms_site_mode_clear_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_clear_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_show_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_show_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_button_style(uibuttonid : VARIANT, bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarstyleid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_button_style.unsafe_as(Proc(VARIANT, UInt8*, UInt8*, VARIANT*, HRESULT)).call(uibuttonid, bstriconurl, bstrtooltip, pvarstyleid)
  end
  def ms_site_mode_show_button_style(uibuttonid : VARIANT, uistyleid : VARIANT) : HRESULT
    @lpVtbl.value.ms_site_mode_show_button_style.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(uibuttonid, uistyleid)
  end
  def ms_site_mode_activate : HRESULT
    @lpVtbl.value.ms_site_mode_activate.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode_first_run(fpreservestate : Int16, puifirstrun : VARIANT*) : HRESULT
    @lpVtbl.value.ms_is_site_mode_first_run.unsafe_as(Proc(Int16, VARIANT*, HRESULT)).call(fpreservestate, puifirstrun)
  end
  def ms_add_tracking_protection_list(url : UInt8*, bstrfiltername : UInt8*) : HRESULT
    @lpVtbl.value.ms_add_tracking_protection_list.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(url, bstrfiltername)
  end
  def ms_tracking_protection_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_tracking_protection_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def ms_active_x_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_active_x_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def ms_provision_networks(bstrprovisioningxml : UInt8*, puiresult : VARIANT*) : HRESULT
    @lpVtbl.value.ms_provision_networks.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrprovisioningxml, puiresult)
  end
  def ms_report_safe_url : HRESULT
    @lpVtbl.value.ms_report_safe_url.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_refresh_badge : HRESULT
    @lpVtbl.value.ms_site_mode_refresh_badge.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_clear_badge : HRESULT
    @lpVtbl.value.ms_site_mode_clear_badge.unsafe_as(Proc(HRESULT)).call
  end
  def ms_diagnose_connection_ui_less : HRESULT
    @lpVtbl.value.ms_diagnose_connection_ui_less.unsafe_as(Proc(HRESULT)).call
  end
  def ms_launch_network_client_help : HRESULT
    @lpVtbl.value.ms_launch_network_client_help.unsafe_as(Proc(HRESULT)).call
  end
  def ms_change_default_browser(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_change_default_browser.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_stop_periodic_tile_update : HRESULT
    @lpVtbl.value.ms_stop_periodic_tile_update.unsafe_as(Proc(HRESULT)).call
  end
  def ms_start_periodic_tile_update(pollinguris : VARIANT, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_tile_update.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, HRESULT)).call(pollinguris, starttime, uiupdaterecurrence)
  end
  def ms_start_periodic_tile_update_batch(pollinguris : VARIANT, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_tile_update_batch.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, HRESULT)).call(pollinguris, starttime, uiupdaterecurrence)
  end
  def ms_clear_tile : HRESULT
    @lpVtbl.value.ms_clear_tile.unsafe_as(Proc(HRESULT)).call
  end
  def ms_enable_tile_notification_queue(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_pinned_site_state(pvarsitestate : VARIANT*) : HRESULT
    @lpVtbl.value.ms_pinned_site_state.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvarsitestate)
  end
  def ms_enable_tile_notification_queue_for_square150x150(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_square150x150.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_enable_tile_notification_queue_for_wide310x150(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_wide310x150.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_enable_tile_notification_queue_for_square310x310(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_square310x310.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_scheduled_tile_notification(bstrnotificationxml : UInt8*, bstrnotificationid : UInt8*, bstrnotificationtag : UInt8*, starttime : VARIANT, expirationtime : VARIANT) : HRESULT
    @lpVtbl.value.ms_scheduled_tile_notification.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, VARIANT, VARIANT, HRESULT)).call(bstrnotificationxml, bstrnotificationid, bstrnotificationtag, starttime, expirationtime)
  end
  def ms_remove_scheduled_tile_notification(bstrnotificationid : UInt8*) : HRESULT
    @lpVtbl.value.ms_remove_scheduled_tile_notification.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrnotificationid)
  end
  def ms_start_periodic_badge_update(pollinguri : UInt8*, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_badge_update.unsafe_as(Proc(UInt8*, VARIANT, VARIANT, HRESULT)).call(pollinguri, starttime, uiupdaterecurrence)
  end
  def ms_stop_periodic_badge_update : HRESULT
    @lpVtbl.value.ms_stop_periodic_badge_update.unsafe_as(Proc(HRESULT)).call
  end
  def ms_launch_internet_options : HRESULT
    @lpVtbl.value.ms_launch_internet_options.unsafe_as(Proc(HRESULT)).call
  end
  def set_experimental_flag(bstrflagstring : UInt8*, vfflag : Int16) : HRESULT
    @lpVtbl.value.set_experimental_flag.unsafe_as(Proc(UInt8*, Int16, HRESULT)).call(bstrflagstring, vfflag)
  end
  def get_experimental_flag(bstrflagstring : UInt8*, vfflag : Int16*) : HRESULT
    @lpVtbl.value.get_experimental_flag.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrflagstring, vfflag)
  end
  def set_experimental_value(bstrvaluestring : UInt8*, dwvalue : UInt32) : HRESULT
    @lpVtbl.value.set_experimental_value.unsafe_as(Proc(UInt8*, UInt32, HRESULT)).call(bstrvaluestring, dwvalue)
  end
  def get_experimental_value(bstrvaluestring : UInt8*, pdwvalue : UInt32*) : HRESULT
    @lpVtbl.value.get_experimental_value.unsafe_as(Proc(UInt8*, UInt32*, HRESULT)).call(bstrvaluestring, pdwvalue)
  end
  def reset_all_experimental_flags_and_values : HRESULT
    @lpVtbl.value.reset_all_experimental_flags_and_values.unsafe_as(Proc(HRESULT)).call
  end
  def get_need_ie_auto_launch_flag(bstrurl : UInt8*, flag : Int16*) : HRESULT
    @lpVtbl.value.get_need_ie_auto_launch_flag.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrurl, flag)
  end
  def set_need_ie_auto_launch_flag(bstrurl : UInt8*, flag : Int16) : HRESULT
    @lpVtbl.value.set_need_ie_auto_launch_flag.unsafe_as(Proc(UInt8*, Int16, HRESULT)).call(bstrurl, flag)
  end
  def has_need_ie_auto_launch_flag(bstrurl : UInt8*, exists : Int16*) : HRESULT
    @lpVtbl.value.has_need_ie_auto_launch_flag.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrurl, exists)
  end
  def launch_ie(bstrurl : UInt8*, automated : Int16) : HRESULT
    @lpVtbl.value.launch_ie.unsafe_as(Proc(UInt8*, Int16, HRESULT)).call(bstrurl, automated)
  end
end
struct LibWin32::IShellUIHelper8
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def reset_first_boot_mode : HRESULT
    @lpVtbl.value.reset_first_boot_mode.unsafe_as(Proc(HRESULT)).call
  end
  def reset_safe_mode : HRESULT
    @lpVtbl.value.reset_safe_mode.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_offline_desktop : HRESULT
    @lpVtbl.value.refresh_offline_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def add_favorite(url : UInt8*, title : VARIANT*) : HRESULT
    @lpVtbl.value.add_favorite.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(url, title)
  end
  def add_channel(url : UInt8*) : HRESULT
    @lpVtbl.value.add_channel.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def add_desktop_component(url : UInt8*, type : UInt8*, left : VARIANT*, top : VARIANT*, width : VARIANT*, height : VARIANT*) : HRESULT
    @lpVtbl.value.add_desktop_component.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, type, left, top, width, height)
  end
  def is_subscribed(url : UInt8*, pbool : Int16*) : HRESULT
    @lpVtbl.value.is_subscribed.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(url, pbool)
  end
  def navigate_and_find(url : UInt8*, strquery : UInt8*, vartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.navigate_and_find.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, strquery, vartargetframe)
  end
  def import_export_favorites(fimport : Int16, strimpexppath : UInt8*) : HRESULT
    @lpVtbl.value.import_export_favorites.unsafe_as(Proc(Int16, UInt8*, HRESULT)).call(fimport, strimpexppath)
  end
  def auto_complete_save_form(form : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_save_form.unsafe_as(Proc(VARIANT*, HRESULT)).call(form)
  end
  def auto_scan(strsearch : UInt8*, strfailureurl : UInt8*, pvartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.auto_scan.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(strsearch, strfailureurl, pvartargetframe)
  end
  def auto_complete_attach(reserved : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_attach.unsafe_as(Proc(VARIANT*, HRESULT)).call(reserved)
  end
  def show_browser_ui(bstrname : UInt8*, pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_ui.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, HRESULT)).call(bstrname, pvarin, pvarout)
  end
  def add_search_provider(url : UInt8*) : HRESULT
    @lpVtbl.value.add_search_provider.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def run_once_shown : HRESULT
    @lpVtbl.value.run_once_shown.unsafe_as(Proc(HRESULT)).call
  end
  def skip_run_once : HRESULT
    @lpVtbl.value.skip_run_once.unsafe_as(Proc(HRESULT)).call
  end
  def customize_settings(fsqm : Int16, fphishing : Int16, bstrlocale : UInt8*) : HRESULT
    @lpVtbl.value.customize_settings.unsafe_as(Proc(Int16, Int16, UInt8*, HRESULT)).call(fsqm, fphishing, bstrlocale)
  end
  def sqm_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.sqm_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def phishing_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.phishing_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def brand_image_uri(pbstruri : UInt8**) : HRESULT
    @lpVtbl.value.brand_image_uri.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstruri)
  end
  def skip_tabs_welcome : HRESULT
    @lpVtbl.value.skip_tabs_welcome.unsafe_as(Proc(HRESULT)).call
  end
  def diagnose_connection : HRESULT
    @lpVtbl.value.diagnose_connection.unsafe_as(Proc(HRESULT)).call
  end
  def customize_clear_type(fset : Int16) : HRESULT
    @lpVtbl.value.customize_clear_type.unsafe_as(Proc(Int16, HRESULT)).call(fset)
  end
  def is_search_provider_installed(url : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_search_provider_installed.unsafe_as(Proc(UInt8*, UInt32*, HRESULT)).call(url, pdwresult)
  end
  def is_search_migrated(pfmigrated : Int16*) : HRESULT
    @lpVtbl.value.is_search_migrated.unsafe_as(Proc(Int16*, HRESULT)).call(pfmigrated)
  end
  def default_search_provider(pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.default_search_provider.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrname)
  end
  def run_once_required_settings_complete(fcomplete : Int16) : HRESULT
    @lpVtbl.value.run_once_required_settings_complete.unsafe_as(Proc(Int16, HRESULT)).call(fcomplete)
  end
  def run_once_has_shown(pfshown : Int16*) : HRESULT
    @lpVtbl.value.run_once_has_shown.unsafe_as(Proc(Int16*, HRESULT)).call(pfshown)
  end
  def search_guide_url(pbstrurl : UInt8**) : HRESULT
    @lpVtbl.value.search_guide_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrurl)
  end
  def add_service(url : UInt8*) : HRESULT
    @lpVtbl.value.add_service.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def is_service_installed(url : UInt8*, verb : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_service_installed.unsafe_as(Proc(UInt8*, UInt8*, UInt32*, HRESULT)).call(url, verb, pdwresult)
  end
  def in_private_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.in_private_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def add_to_favorites_bar(url : UInt8*, title : UInt8*, type : VARIANT*) : HRESULT
    @lpVtbl.value.add_to_favorites_bar.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, title, type)
  end
  def build_new_tab_page : HRESULT
    @lpVtbl.value.build_new_tab_page.unsafe_as(Proc(HRESULT)).call
  end
  def set_recently_closed_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_recently_closed_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def set_activities_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_activities_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def content_discovery_reset : HRESULT
    @lpVtbl.value.content_discovery_reset.unsafe_as(Proc(HRESULT)).call
  end
  def is_suggested_sites_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.is_suggested_sites_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def enable_suggested_sites(fenable : Int16) : HRESULT
    @lpVtbl.value.enable_suggested_sites.unsafe_as(Proc(Int16, HRESULT)).call(fenable)
  end
  def navigate_to_suggested_sites(bstrrelativeurl : UInt8*) : HRESULT
    @lpVtbl.value.navigate_to_suggested_sites.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrrelativeurl)
  end
  def show_tabs_help : HRESULT
    @lpVtbl.value.show_tabs_help.unsafe_as(Proc(HRESULT)).call
  end
  def show_in_private_help : HRESULT
    @lpVtbl.value.show_in_private_help.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode(pfsitemode : Int16*) : HRESULT
    @lpVtbl.value.ms_is_site_mode.unsafe_as(Proc(Int16*, HRESULT)).call(pfsitemode)
  end
  def ms_site_mode_show_thumb_bar : HRESULT
    @lpVtbl.value.ms_site_mode_show_thumb_bar.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_thumb_bar_button(bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarbuttonid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_thumb_bar_button.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstriconurl, bstrtooltip, pvarbuttonid)
  end
  def ms_site_mode_update_thumb_bar_button(buttonid : VARIANT, fenabled : Int16, fvisible : Int16) : HRESULT
    @lpVtbl.value.ms_site_mode_update_thumb_bar_button.unsafe_as(Proc(VARIANT, Int16, Int16, HRESULT)).call(buttonid, fenabled, fvisible)
  end
  def ms_site_mode_set_icon_overlay(iconurl : UInt8*, pvardescription : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_set_icon_overlay.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(iconurl, pvardescription)
  end
  def ms_site_mode_clear_icon_overlay : HRESULT
    @lpVtbl.value.ms_site_mode_clear_icon_overlay.unsafe_as(Proc(HRESULT)).call
  end
  def ms_add_site_mode : HRESULT
    @lpVtbl.value.ms_add_site_mode.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_create_jump_list(bstrheader : UInt8*) : HRESULT
    @lpVtbl.value.ms_site_mode_create_jump_list.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrheader)
  end
  def ms_site_mode_add_jump_list_item(bstrname : UInt8*, bstractionuri : UInt8*, bstriconuri : UInt8*, pvarwindowtype : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_jump_list_item.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstrname, bstractionuri, bstriconuri, pvarwindowtype)
  end
  def ms_site_mode_clear_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_clear_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_show_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_show_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_button_style(uibuttonid : VARIANT, bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarstyleid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_button_style.unsafe_as(Proc(VARIANT, UInt8*, UInt8*, VARIANT*, HRESULT)).call(uibuttonid, bstriconurl, bstrtooltip, pvarstyleid)
  end
  def ms_site_mode_show_button_style(uibuttonid : VARIANT, uistyleid : VARIANT) : HRESULT
    @lpVtbl.value.ms_site_mode_show_button_style.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(uibuttonid, uistyleid)
  end
  def ms_site_mode_activate : HRESULT
    @lpVtbl.value.ms_site_mode_activate.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode_first_run(fpreservestate : Int16, puifirstrun : VARIANT*) : HRESULT
    @lpVtbl.value.ms_is_site_mode_first_run.unsafe_as(Proc(Int16, VARIANT*, HRESULT)).call(fpreservestate, puifirstrun)
  end
  def ms_add_tracking_protection_list(url : UInt8*, bstrfiltername : UInt8*) : HRESULT
    @lpVtbl.value.ms_add_tracking_protection_list.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(url, bstrfiltername)
  end
  def ms_tracking_protection_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_tracking_protection_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def ms_active_x_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_active_x_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def ms_provision_networks(bstrprovisioningxml : UInt8*, puiresult : VARIANT*) : HRESULT
    @lpVtbl.value.ms_provision_networks.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrprovisioningxml, puiresult)
  end
  def ms_report_safe_url : HRESULT
    @lpVtbl.value.ms_report_safe_url.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_refresh_badge : HRESULT
    @lpVtbl.value.ms_site_mode_refresh_badge.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_clear_badge : HRESULT
    @lpVtbl.value.ms_site_mode_clear_badge.unsafe_as(Proc(HRESULT)).call
  end
  def ms_diagnose_connection_ui_less : HRESULT
    @lpVtbl.value.ms_diagnose_connection_ui_less.unsafe_as(Proc(HRESULT)).call
  end
  def ms_launch_network_client_help : HRESULT
    @lpVtbl.value.ms_launch_network_client_help.unsafe_as(Proc(HRESULT)).call
  end
  def ms_change_default_browser(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_change_default_browser.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_stop_periodic_tile_update : HRESULT
    @lpVtbl.value.ms_stop_periodic_tile_update.unsafe_as(Proc(HRESULT)).call
  end
  def ms_start_periodic_tile_update(pollinguris : VARIANT, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_tile_update.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, HRESULT)).call(pollinguris, starttime, uiupdaterecurrence)
  end
  def ms_start_periodic_tile_update_batch(pollinguris : VARIANT, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_tile_update_batch.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, HRESULT)).call(pollinguris, starttime, uiupdaterecurrence)
  end
  def ms_clear_tile : HRESULT
    @lpVtbl.value.ms_clear_tile.unsafe_as(Proc(HRESULT)).call
  end
  def ms_enable_tile_notification_queue(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_pinned_site_state(pvarsitestate : VARIANT*) : HRESULT
    @lpVtbl.value.ms_pinned_site_state.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvarsitestate)
  end
  def ms_enable_tile_notification_queue_for_square150x150(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_square150x150.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_enable_tile_notification_queue_for_wide310x150(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_wide310x150.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_enable_tile_notification_queue_for_square310x310(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_square310x310.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_scheduled_tile_notification(bstrnotificationxml : UInt8*, bstrnotificationid : UInt8*, bstrnotificationtag : UInt8*, starttime : VARIANT, expirationtime : VARIANT) : HRESULT
    @lpVtbl.value.ms_scheduled_tile_notification.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, VARIANT, VARIANT, HRESULT)).call(bstrnotificationxml, bstrnotificationid, bstrnotificationtag, starttime, expirationtime)
  end
  def ms_remove_scheduled_tile_notification(bstrnotificationid : UInt8*) : HRESULT
    @lpVtbl.value.ms_remove_scheduled_tile_notification.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrnotificationid)
  end
  def ms_start_periodic_badge_update(pollinguri : UInt8*, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_badge_update.unsafe_as(Proc(UInt8*, VARIANT, VARIANT, HRESULT)).call(pollinguri, starttime, uiupdaterecurrence)
  end
  def ms_stop_periodic_badge_update : HRESULT
    @lpVtbl.value.ms_stop_periodic_badge_update.unsafe_as(Proc(HRESULT)).call
  end
  def ms_launch_internet_options : HRESULT
    @lpVtbl.value.ms_launch_internet_options.unsafe_as(Proc(HRESULT)).call
  end
  def set_experimental_flag(bstrflagstring : UInt8*, vfflag : Int16) : HRESULT
    @lpVtbl.value.set_experimental_flag.unsafe_as(Proc(UInt8*, Int16, HRESULT)).call(bstrflagstring, vfflag)
  end
  def get_experimental_flag(bstrflagstring : UInt8*, vfflag : Int16*) : HRESULT
    @lpVtbl.value.get_experimental_flag.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrflagstring, vfflag)
  end
  def set_experimental_value(bstrvaluestring : UInt8*, dwvalue : UInt32) : HRESULT
    @lpVtbl.value.set_experimental_value.unsafe_as(Proc(UInt8*, UInt32, HRESULT)).call(bstrvaluestring, dwvalue)
  end
  def get_experimental_value(bstrvaluestring : UInt8*, pdwvalue : UInt32*) : HRESULT
    @lpVtbl.value.get_experimental_value.unsafe_as(Proc(UInt8*, UInt32*, HRESULT)).call(bstrvaluestring, pdwvalue)
  end
  def reset_all_experimental_flags_and_values : HRESULT
    @lpVtbl.value.reset_all_experimental_flags_and_values.unsafe_as(Proc(HRESULT)).call
  end
  def get_need_ie_auto_launch_flag(bstrurl : UInt8*, flag : Int16*) : HRESULT
    @lpVtbl.value.get_need_ie_auto_launch_flag.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrurl, flag)
  end
  def set_need_ie_auto_launch_flag(bstrurl : UInt8*, flag : Int16) : HRESULT
    @lpVtbl.value.set_need_ie_auto_launch_flag.unsafe_as(Proc(UInt8*, Int16, HRESULT)).call(bstrurl, flag)
  end
  def has_need_ie_auto_launch_flag(bstrurl : UInt8*, exists : Int16*) : HRESULT
    @lpVtbl.value.has_need_ie_auto_launch_flag.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrurl, exists)
  end
  def launch_ie(bstrurl : UInt8*, automated : Int16) : HRESULT
    @lpVtbl.value.launch_ie.unsafe_as(Proc(UInt8*, Int16, HRESULT)).call(bstrurl, automated)
  end
  def get_cv_list_data(pbstrresult : UInt8**) : HRESULT
    @lpVtbl.value.get_cv_list_data.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrresult)
  end
  def get_cv_list_local_data(pbstrresult : UInt8**) : HRESULT
    @lpVtbl.value.get_cv_list_local_data.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrresult)
  end
  def get_emie_list_data(pbstrresult : UInt8**) : HRESULT
    @lpVtbl.value.get_emie_list_data.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrresult)
  end
  def get_emie_list_local_data(pbstrresult : UInt8**) : HRESULT
    @lpVtbl.value.get_emie_list_local_data.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrresult)
  end
  def open_favorites_pane : HRESULT
    @lpVtbl.value.open_favorites_pane.unsafe_as(Proc(HRESULT)).call
  end
  def open_favorites_settings : HRESULT
    @lpVtbl.value.open_favorites_settings.unsafe_as(Proc(HRESULT)).call
  end
  def launch_in_hvsi(bstrurl : UInt8*) : HRESULT
    @lpVtbl.value.launch_in_hvsi.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrurl)
  end
end
struct LibWin32::IShellUIHelper9
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def reset_first_boot_mode : HRESULT
    @lpVtbl.value.reset_first_boot_mode.unsafe_as(Proc(HRESULT)).call
  end
  def reset_safe_mode : HRESULT
    @lpVtbl.value.reset_safe_mode.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_offline_desktop : HRESULT
    @lpVtbl.value.refresh_offline_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def add_favorite(url : UInt8*, title : VARIANT*) : HRESULT
    @lpVtbl.value.add_favorite.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(url, title)
  end
  def add_channel(url : UInt8*) : HRESULT
    @lpVtbl.value.add_channel.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def add_desktop_component(url : UInt8*, type : UInt8*, left : VARIANT*, top : VARIANT*, width : VARIANT*, height : VARIANT*) : HRESULT
    @lpVtbl.value.add_desktop_component.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, VARIANT*, VARIANT*, VARIANT*, HRESULT)).call(url, type, left, top, width, height)
  end
  def is_subscribed(url : UInt8*, pbool : Int16*) : HRESULT
    @lpVtbl.value.is_subscribed.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(url, pbool)
  end
  def navigate_and_find(url : UInt8*, strquery : UInt8*, vartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.navigate_and_find.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, strquery, vartargetframe)
  end
  def import_export_favorites(fimport : Int16, strimpexppath : UInt8*) : HRESULT
    @lpVtbl.value.import_export_favorites.unsafe_as(Proc(Int16, UInt8*, HRESULT)).call(fimport, strimpexppath)
  end
  def auto_complete_save_form(form : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_save_form.unsafe_as(Proc(VARIANT*, HRESULT)).call(form)
  end
  def auto_scan(strsearch : UInt8*, strfailureurl : UInt8*, pvartargetframe : VARIANT*) : HRESULT
    @lpVtbl.value.auto_scan.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(strsearch, strfailureurl, pvartargetframe)
  end
  def auto_complete_attach(reserved : VARIANT*) : HRESULT
    @lpVtbl.value.auto_complete_attach.unsafe_as(Proc(VARIANT*, HRESULT)).call(reserved)
  end
  def show_browser_ui(bstrname : UInt8*, pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_ui.unsafe_as(Proc(UInt8*, VARIANT*, VARIANT*, HRESULT)).call(bstrname, pvarin, pvarout)
  end
  def add_search_provider(url : UInt8*) : HRESULT
    @lpVtbl.value.add_search_provider.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def run_once_shown : HRESULT
    @lpVtbl.value.run_once_shown.unsafe_as(Proc(HRESULT)).call
  end
  def skip_run_once : HRESULT
    @lpVtbl.value.skip_run_once.unsafe_as(Proc(HRESULT)).call
  end
  def customize_settings(fsqm : Int16, fphishing : Int16, bstrlocale : UInt8*) : HRESULT
    @lpVtbl.value.customize_settings.unsafe_as(Proc(Int16, Int16, UInt8*, HRESULT)).call(fsqm, fphishing, bstrlocale)
  end
  def sqm_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.sqm_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def phishing_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.phishing_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def brand_image_uri(pbstruri : UInt8**) : HRESULT
    @lpVtbl.value.brand_image_uri.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstruri)
  end
  def skip_tabs_welcome : HRESULT
    @lpVtbl.value.skip_tabs_welcome.unsafe_as(Proc(HRESULT)).call
  end
  def diagnose_connection : HRESULT
    @lpVtbl.value.diagnose_connection.unsafe_as(Proc(HRESULT)).call
  end
  def customize_clear_type(fset : Int16) : HRESULT
    @lpVtbl.value.customize_clear_type.unsafe_as(Proc(Int16, HRESULT)).call(fset)
  end
  def is_search_provider_installed(url : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_search_provider_installed.unsafe_as(Proc(UInt8*, UInt32*, HRESULT)).call(url, pdwresult)
  end
  def is_search_migrated(pfmigrated : Int16*) : HRESULT
    @lpVtbl.value.is_search_migrated.unsafe_as(Proc(Int16*, HRESULT)).call(pfmigrated)
  end
  def default_search_provider(pbstrname : UInt8**) : HRESULT
    @lpVtbl.value.default_search_provider.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrname)
  end
  def run_once_required_settings_complete(fcomplete : Int16) : HRESULT
    @lpVtbl.value.run_once_required_settings_complete.unsafe_as(Proc(Int16, HRESULT)).call(fcomplete)
  end
  def run_once_has_shown(pfshown : Int16*) : HRESULT
    @lpVtbl.value.run_once_has_shown.unsafe_as(Proc(Int16*, HRESULT)).call(pfshown)
  end
  def search_guide_url(pbstrurl : UInt8**) : HRESULT
    @lpVtbl.value.search_guide_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrurl)
  end
  def add_service(url : UInt8*) : HRESULT
    @lpVtbl.value.add_service.unsafe_as(Proc(UInt8*, HRESULT)).call(url)
  end
  def is_service_installed(url : UInt8*, verb : UInt8*, pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.is_service_installed.unsafe_as(Proc(UInt8*, UInt8*, UInt32*, HRESULT)).call(url, verb, pdwresult)
  end
  def in_private_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.in_private_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def add_to_favorites_bar(url : UInt8*, title : UInt8*, type : VARIANT*) : HRESULT
    @lpVtbl.value.add_to_favorites_bar.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(url, title, type)
  end
  def build_new_tab_page : HRESULT
    @lpVtbl.value.build_new_tab_page.unsafe_as(Proc(HRESULT)).call
  end
  def set_recently_closed_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_recently_closed_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def set_activities_visible(fvisible : Int16) : HRESULT
    @lpVtbl.value.set_activities_visible.unsafe_as(Proc(Int16, HRESULT)).call(fvisible)
  end
  def content_discovery_reset : HRESULT
    @lpVtbl.value.content_discovery_reset.unsafe_as(Proc(HRESULT)).call
  end
  def is_suggested_sites_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.is_suggested_sites_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def enable_suggested_sites(fenable : Int16) : HRESULT
    @lpVtbl.value.enable_suggested_sites.unsafe_as(Proc(Int16, HRESULT)).call(fenable)
  end
  def navigate_to_suggested_sites(bstrrelativeurl : UInt8*) : HRESULT
    @lpVtbl.value.navigate_to_suggested_sites.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrrelativeurl)
  end
  def show_tabs_help : HRESULT
    @lpVtbl.value.show_tabs_help.unsafe_as(Proc(HRESULT)).call
  end
  def show_in_private_help : HRESULT
    @lpVtbl.value.show_in_private_help.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode(pfsitemode : Int16*) : HRESULT
    @lpVtbl.value.ms_is_site_mode.unsafe_as(Proc(Int16*, HRESULT)).call(pfsitemode)
  end
  def ms_site_mode_show_thumb_bar : HRESULT
    @lpVtbl.value.ms_site_mode_show_thumb_bar.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_thumb_bar_button(bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarbuttonid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_thumb_bar_button.unsafe_as(Proc(UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstriconurl, bstrtooltip, pvarbuttonid)
  end
  def ms_site_mode_update_thumb_bar_button(buttonid : VARIANT, fenabled : Int16, fvisible : Int16) : HRESULT
    @lpVtbl.value.ms_site_mode_update_thumb_bar_button.unsafe_as(Proc(VARIANT, Int16, Int16, HRESULT)).call(buttonid, fenabled, fvisible)
  end
  def ms_site_mode_set_icon_overlay(iconurl : UInt8*, pvardescription : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_set_icon_overlay.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(iconurl, pvardescription)
  end
  def ms_site_mode_clear_icon_overlay : HRESULT
    @lpVtbl.value.ms_site_mode_clear_icon_overlay.unsafe_as(Proc(HRESULT)).call
  end
  def ms_add_site_mode : HRESULT
    @lpVtbl.value.ms_add_site_mode.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_create_jump_list(bstrheader : UInt8*) : HRESULT
    @lpVtbl.value.ms_site_mode_create_jump_list.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrheader)
  end
  def ms_site_mode_add_jump_list_item(bstrname : UInt8*, bstractionuri : UInt8*, bstriconuri : UInt8*, pvarwindowtype : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_jump_list_item.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, VARIANT*, HRESULT)).call(bstrname, bstractionuri, bstriconuri, pvarwindowtype)
  end
  def ms_site_mode_clear_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_clear_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_show_jump_list : HRESULT
    @lpVtbl.value.ms_site_mode_show_jump_list.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_add_button_style(uibuttonid : VARIANT, bstriconurl : UInt8*, bstrtooltip : UInt8*, pvarstyleid : VARIANT*) : HRESULT
    @lpVtbl.value.ms_site_mode_add_button_style.unsafe_as(Proc(VARIANT, UInt8*, UInt8*, VARIANT*, HRESULT)).call(uibuttonid, bstriconurl, bstrtooltip, pvarstyleid)
  end
  def ms_site_mode_show_button_style(uibuttonid : VARIANT, uistyleid : VARIANT) : HRESULT
    @lpVtbl.value.ms_site_mode_show_button_style.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(uibuttonid, uistyleid)
  end
  def ms_site_mode_activate : HRESULT
    @lpVtbl.value.ms_site_mode_activate.unsafe_as(Proc(HRESULT)).call
  end
  def ms_is_site_mode_first_run(fpreservestate : Int16, puifirstrun : VARIANT*) : HRESULT
    @lpVtbl.value.ms_is_site_mode_first_run.unsafe_as(Proc(Int16, VARIANT*, HRESULT)).call(fpreservestate, puifirstrun)
  end
  def ms_add_tracking_protection_list(url : UInt8*, bstrfiltername : UInt8*) : HRESULT
    @lpVtbl.value.ms_add_tracking_protection_list.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(url, bstrfiltername)
  end
  def ms_tracking_protection_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_tracking_protection_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def ms_active_x_filtering_enabled(pfenabled : Int16*) : HRESULT
    @lpVtbl.value.ms_active_x_filtering_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pfenabled)
  end
  def ms_provision_networks(bstrprovisioningxml : UInt8*, puiresult : VARIANT*) : HRESULT
    @lpVtbl.value.ms_provision_networks.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrprovisioningxml, puiresult)
  end
  def ms_report_safe_url : HRESULT
    @lpVtbl.value.ms_report_safe_url.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_refresh_badge : HRESULT
    @lpVtbl.value.ms_site_mode_refresh_badge.unsafe_as(Proc(HRESULT)).call
  end
  def ms_site_mode_clear_badge : HRESULT
    @lpVtbl.value.ms_site_mode_clear_badge.unsafe_as(Proc(HRESULT)).call
  end
  def ms_diagnose_connection_ui_less : HRESULT
    @lpVtbl.value.ms_diagnose_connection_ui_less.unsafe_as(Proc(HRESULT)).call
  end
  def ms_launch_network_client_help : HRESULT
    @lpVtbl.value.ms_launch_network_client_help.unsafe_as(Proc(HRESULT)).call
  end
  def ms_change_default_browser(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_change_default_browser.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_stop_periodic_tile_update : HRESULT
    @lpVtbl.value.ms_stop_periodic_tile_update.unsafe_as(Proc(HRESULT)).call
  end
  def ms_start_periodic_tile_update(pollinguris : VARIANT, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_tile_update.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, HRESULT)).call(pollinguris, starttime, uiupdaterecurrence)
  end
  def ms_start_periodic_tile_update_batch(pollinguris : VARIANT, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_tile_update_batch.unsafe_as(Proc(VARIANT, VARIANT, VARIANT, HRESULT)).call(pollinguris, starttime, uiupdaterecurrence)
  end
  def ms_clear_tile : HRESULT
    @lpVtbl.value.ms_clear_tile.unsafe_as(Proc(HRESULT)).call
  end
  def ms_enable_tile_notification_queue(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_pinned_site_state(pvarsitestate : VARIANT*) : HRESULT
    @lpVtbl.value.ms_pinned_site_state.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvarsitestate)
  end
  def ms_enable_tile_notification_queue_for_square150x150(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_square150x150.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_enable_tile_notification_queue_for_wide310x150(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_wide310x150.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_enable_tile_notification_queue_for_square310x310(fchange : Int16) : HRESULT
    @lpVtbl.value.ms_enable_tile_notification_queue_for_square310x310.unsafe_as(Proc(Int16, HRESULT)).call(fchange)
  end
  def ms_scheduled_tile_notification(bstrnotificationxml : UInt8*, bstrnotificationid : UInt8*, bstrnotificationtag : UInt8*, starttime : VARIANT, expirationtime : VARIANT) : HRESULT
    @lpVtbl.value.ms_scheduled_tile_notification.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, VARIANT, VARIANT, HRESULT)).call(bstrnotificationxml, bstrnotificationid, bstrnotificationtag, starttime, expirationtime)
  end
  def ms_remove_scheduled_tile_notification(bstrnotificationid : UInt8*) : HRESULT
    @lpVtbl.value.ms_remove_scheduled_tile_notification.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrnotificationid)
  end
  def ms_start_periodic_badge_update(pollinguri : UInt8*, starttime : VARIANT, uiupdaterecurrence : VARIANT) : HRESULT
    @lpVtbl.value.ms_start_periodic_badge_update.unsafe_as(Proc(UInt8*, VARIANT, VARIANT, HRESULT)).call(pollinguri, starttime, uiupdaterecurrence)
  end
  def ms_stop_periodic_badge_update : HRESULT
    @lpVtbl.value.ms_stop_periodic_badge_update.unsafe_as(Proc(HRESULT)).call
  end
  def ms_launch_internet_options : HRESULT
    @lpVtbl.value.ms_launch_internet_options.unsafe_as(Proc(HRESULT)).call
  end
  def set_experimental_flag(bstrflagstring : UInt8*, vfflag : Int16) : HRESULT
    @lpVtbl.value.set_experimental_flag.unsafe_as(Proc(UInt8*, Int16, HRESULT)).call(bstrflagstring, vfflag)
  end
  def get_experimental_flag(bstrflagstring : UInt8*, vfflag : Int16*) : HRESULT
    @lpVtbl.value.get_experimental_flag.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrflagstring, vfflag)
  end
  def set_experimental_value(bstrvaluestring : UInt8*, dwvalue : UInt32) : HRESULT
    @lpVtbl.value.set_experimental_value.unsafe_as(Proc(UInt8*, UInt32, HRESULT)).call(bstrvaluestring, dwvalue)
  end
  def get_experimental_value(bstrvaluestring : UInt8*, pdwvalue : UInt32*) : HRESULT
    @lpVtbl.value.get_experimental_value.unsafe_as(Proc(UInt8*, UInt32*, HRESULT)).call(bstrvaluestring, pdwvalue)
  end
  def reset_all_experimental_flags_and_values : HRESULT
    @lpVtbl.value.reset_all_experimental_flags_and_values.unsafe_as(Proc(HRESULT)).call
  end
  def get_need_ie_auto_launch_flag(bstrurl : UInt8*, flag : Int16*) : HRESULT
    @lpVtbl.value.get_need_ie_auto_launch_flag.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrurl, flag)
  end
  def set_need_ie_auto_launch_flag(bstrurl : UInt8*, flag : Int16) : HRESULT
    @lpVtbl.value.set_need_ie_auto_launch_flag.unsafe_as(Proc(UInt8*, Int16, HRESULT)).call(bstrurl, flag)
  end
  def has_need_ie_auto_launch_flag(bstrurl : UInt8*, exists : Int16*) : HRESULT
    @lpVtbl.value.has_need_ie_auto_launch_flag.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrurl, exists)
  end
  def launch_ie(bstrurl : UInt8*, automated : Int16) : HRESULT
    @lpVtbl.value.launch_ie.unsafe_as(Proc(UInt8*, Int16, HRESULT)).call(bstrurl, automated)
  end
  def get_cv_list_data(pbstrresult : UInt8**) : HRESULT
    @lpVtbl.value.get_cv_list_data.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrresult)
  end
  def get_cv_list_local_data(pbstrresult : UInt8**) : HRESULT
    @lpVtbl.value.get_cv_list_local_data.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrresult)
  end
  def get_emie_list_data(pbstrresult : UInt8**) : HRESULT
    @lpVtbl.value.get_emie_list_data.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrresult)
  end
  def get_emie_list_local_data(pbstrresult : UInt8**) : HRESULT
    @lpVtbl.value.get_emie_list_local_data.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrresult)
  end
  def open_favorites_pane : HRESULT
    @lpVtbl.value.open_favorites_pane.unsafe_as(Proc(HRESULT)).call
  end
  def open_favorites_settings : HRESULT
    @lpVtbl.value.open_favorites_settings.unsafe_as(Proc(HRESULT)).call
  end
  def launch_in_hvsi(bstrurl : UInt8*) : HRESULT
    @lpVtbl.value.launch_in_hvsi.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrurl)
  end
  def get_os_sku(pdwresult : UInt32*) : HRESULT
    @lpVtbl.value.get_os_sku.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwresult)
  end
end
struct LibWin32::DShellNameSpaceEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IShellFavoritesNameSpace
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def move_selection_up : HRESULT
    @lpVtbl.value.move_selection_up.unsafe_as(Proc(HRESULT)).call
  end
  def move_selection_down : HRESULT
    @lpVtbl.value.move_selection_down.unsafe_as(Proc(HRESULT)).call
  end
  def reset_sort : HRESULT
    @lpVtbl.value.reset_sort.unsafe_as(Proc(HRESULT)).call
  end
  def new_folder : HRESULT
    @lpVtbl.value.new_folder.unsafe_as(Proc(HRESULT)).call
  end
  def synchronize : HRESULT
    @lpVtbl.value.synchronize.unsafe_as(Proc(HRESULT)).call
  end
  def import : HRESULT
    @lpVtbl.value.import.unsafe_as(Proc(HRESULT)).call
  end
  def export : HRESULT
    @lpVtbl.value.export.unsafe_as(Proc(HRESULT)).call
  end
  def invoke_context_menu_command(strcommand : UInt8*) : HRESULT
    @lpVtbl.value.invoke_context_menu_command.unsafe_as(Proc(UInt8*, HRESULT)).call(strcommand)
  end
  def move_selection_to : HRESULT
    @lpVtbl.value.move_selection_to.unsafe_as(Proc(HRESULT)).call
  end
  def get_subscriptions_enabled(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_subscriptions_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def create_subscription_for_selection(pbool : Int16*) : HRESULT
    @lpVtbl.value.create_subscription_for_selection.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def delete_subscription_for_selection(pbool : Int16*) : HRESULT
    @lpVtbl.value.delete_subscription_for_selection.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def set_root(bstrfullpath : UInt8*) : HRESULT
    @lpVtbl.value.set_root.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrfullpath)
  end
end
struct LibWin32::IShellNameSpace
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def move_selection_up : HRESULT
    @lpVtbl.value.move_selection_up.unsafe_as(Proc(HRESULT)).call
  end
  def move_selection_down : HRESULT
    @lpVtbl.value.move_selection_down.unsafe_as(Proc(HRESULT)).call
  end
  def reset_sort : HRESULT
    @lpVtbl.value.reset_sort.unsafe_as(Proc(HRESULT)).call
  end
  def new_folder : HRESULT
    @lpVtbl.value.new_folder.unsafe_as(Proc(HRESULT)).call
  end
  def synchronize : HRESULT
    @lpVtbl.value.synchronize.unsafe_as(Proc(HRESULT)).call
  end
  def import : HRESULT
    @lpVtbl.value.import.unsafe_as(Proc(HRESULT)).call
  end
  def export : HRESULT
    @lpVtbl.value.export.unsafe_as(Proc(HRESULT)).call
  end
  def invoke_context_menu_command(strcommand : UInt8*) : HRESULT
    @lpVtbl.value.invoke_context_menu_command.unsafe_as(Proc(UInt8*, HRESULT)).call(strcommand)
  end
  def move_selection_to : HRESULT
    @lpVtbl.value.move_selection_to.unsafe_as(Proc(HRESULT)).call
  end
  def get_subscriptions_enabled(pbool : Int16*) : HRESULT
    @lpVtbl.value.get_subscriptions_enabled.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def create_subscription_for_selection(pbool : Int16*) : HRESULT
    @lpVtbl.value.create_subscription_for_selection.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def delete_subscription_for_selection(pbool : Int16*) : HRESULT
    @lpVtbl.value.delete_subscription_for_selection.unsafe_as(Proc(Int16*, HRESULT)).call(pbool)
  end
  def set_root(bstrfullpath : UInt8*) : HRESULT
    @lpVtbl.value.set_root.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrfullpath)
  end
  def get_enum_options(pgrfenumflags : Int32*) : HRESULT
    @lpVtbl.value.get_enum_options.unsafe_as(Proc(Int32*, HRESULT)).call(pgrfenumflags)
  end
  def put_enum_options(lval : Int32) : HRESULT
    @lpVtbl.value.put_enum_options.unsafe_as(Proc(Int32, HRESULT)).call(lval)
  end
  def get_selected_item(pitem : IDispatch*) : HRESULT
    @lpVtbl.value.get_selected_item.unsafe_as(Proc(IDispatch*, HRESULT)).call(pitem)
  end
  def put_selected_item(pitem : IDispatch) : HRESULT
    @lpVtbl.value.put_selected_item.unsafe_as(Proc(IDispatch, HRESULT)).call(pitem)
  end
  def get_root(pvar : VARIANT*) : HRESULT
    @lpVtbl.value.get_root.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvar)
  end
  def put_root(var : VARIANT) : HRESULT
    @lpVtbl.value.put_root.unsafe_as(Proc(VARIANT, HRESULT)).call(var)
  end
  def get_depth(pidepth : Int32*) : HRESULT
    @lpVtbl.value.get_depth.unsafe_as(Proc(Int32*, HRESULT)).call(pidepth)
  end
  def put_depth(idepth : Int32) : HRESULT
    @lpVtbl.value.put_depth.unsafe_as(Proc(Int32, HRESULT)).call(idepth)
  end
  def get_mode(pumode : UInt32*) : HRESULT
    @lpVtbl.value.get_mode.unsafe_as(Proc(UInt32*, HRESULT)).call(pumode)
  end
  def put_mode(umode : UInt32) : HRESULT
    @lpVtbl.value.put_mode.unsafe_as(Proc(UInt32, HRESULT)).call(umode)
  end
  def get_flags(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
  def put_flags(dwflags : UInt32) : HRESULT
    @lpVtbl.value.put_flags.unsafe_as(Proc(UInt32, HRESULT)).call(dwflags)
  end
  def put_tv_flags(dwflags : UInt32) : HRESULT
    @lpVtbl.value.put_tv_flags.unsafe_as(Proc(UInt32, HRESULT)).call(dwflags)
  end
  def get_tv_flags(dwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_tv_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(dwflags)
  end
  def get_columns(bstrcolumns : UInt8**) : HRESULT
    @lpVtbl.value.get_columns.unsafe_as(Proc(UInt8**, HRESULT)).call(bstrcolumns)
  end
  def put_columns(bstrcolumns : UInt8*) : HRESULT
    @lpVtbl.value.put_columns.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrcolumns)
  end
  def get_count_view_types(pitypes : Int32*) : HRESULT
    @lpVtbl.value.get_count_view_types.unsafe_as(Proc(Int32*, HRESULT)).call(pitypes)
  end
  def set_view_type(itype : Int32) : HRESULT
    @lpVtbl.value.set_view_type.unsafe_as(Proc(Int32, HRESULT)).call(itype)
  end
  def selected_items(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.selected_items.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def expand(var : VARIANT, idepth : Int32) : HRESULT
    @lpVtbl.value.expand.unsafe_as(Proc(VARIANT, Int32, HRESULT)).call(var, idepth)
  end
  def unselect_all : HRESULT
    @lpVtbl.value.unselect_all.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IScriptErrorList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def advance_error : HRESULT
    @lpVtbl.value.advance_error.unsafe_as(Proc(HRESULT)).call
  end
  def retreat_error : HRESULT
    @lpVtbl.value.retreat_error.unsafe_as(Proc(HRESULT)).call
  end
  def can_advance_error(pfcanadvance : LibC::BOOL*) : HRESULT
    @lpVtbl.value.can_advance_error.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfcanadvance)
  end
  def can_retreat_error(pfcanretreat : LibC::BOOL*) : HRESULT
    @lpVtbl.value.can_retreat_error.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfcanretreat)
  end
  def get_error_line(plline : Int32*) : HRESULT
    @lpVtbl.value.get_error_line.unsafe_as(Proc(Int32*, HRESULT)).call(plline)
  end
  def get_error_char(plchar : Int32*) : HRESULT
    @lpVtbl.value.get_error_char.unsafe_as(Proc(Int32*, HRESULT)).call(plchar)
  end
  def get_error_code(plcode : Int32*) : HRESULT
    @lpVtbl.value.get_error_code.unsafe_as(Proc(Int32*, HRESULT)).call(plcode)
  end
  def get_error_msg(pstr : UInt8**) : HRESULT
    @lpVtbl.value.get_error_msg.unsafe_as(Proc(UInt8**, HRESULT)).call(pstr)
  end
  def get_error_url(pstr : UInt8**) : HRESULT
    @lpVtbl.value.get_error_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pstr)
  end
  def get_always_show_lock_state(pfalwaysshowlocked : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_always_show_lock_state.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfalwaysshowlocked)
  end
  def get_details_pane_open(pfdetailspaneopen : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_details_pane_open.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfdetailspaneopen)
  end
  def set_details_pane_open(fdetailspaneopen : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_details_pane_open.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fdetailspaneopen)
  end
  def get_per_error_display(pfpererrordisplay : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_per_error_display.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfpererrordisplay)
  end
  def set_per_error_display(fpererrordisplay : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_per_error_display.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fpererrordisplay)
  end
end
struct LibWin32::IFolderViewOC
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def set_folder_view(pdisp : IDispatch) : HRESULT
    @lpVtbl.value.set_folder_view.unsafe_as(Proc(IDispatch, HRESULT)).call(pdisp)
  end
end
struct LibWin32::DShellFolderViewEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::DFConstraint
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_name(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def get_value(pv : VARIANT*) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(VARIANT*, HRESULT)).call(pv)
  end
end
struct LibWin32::FolderItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_name(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def put_name(bs : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(bs)
  end
  def get_path(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_path.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def get_get_link(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_get_link.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_get_folder(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_get_folder.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_is_link(pb : Int16*) : HRESULT
    @lpVtbl.value.get_is_link.unsafe_as(Proc(Int16*, HRESULT)).call(pb)
  end
  def get_is_folder(pb : Int16*) : HRESULT
    @lpVtbl.value.get_is_folder.unsafe_as(Proc(Int16*, HRESULT)).call(pb)
  end
  def get_is_file_system(pb : Int16*) : HRESULT
    @lpVtbl.value.get_is_file_system.unsafe_as(Proc(Int16*, HRESULT)).call(pb)
  end
  def get_is_browsable(pb : Int16*) : HRESULT
    @lpVtbl.value.get_is_browsable.unsafe_as(Proc(Int16*, HRESULT)).call(pb)
  end
  def get_modify_date(pdt : Float64*) : HRESULT
    @lpVtbl.value.get_modify_date.unsafe_as(Proc(Float64*, HRESULT)).call(pdt)
  end
  def put_modify_date(dt : Float64) : HRESULT
    @lpVtbl.value.put_modify_date.unsafe_as(Proc(Float64, HRESULT)).call(dt)
  end
  def get_size(pul : Int32*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(Int32*, HRESULT)).call(pul)
  end
  def get_type(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def verbs(ppfic : FolderItemVerbs*) : HRESULT
    @lpVtbl.value.verbs.unsafe_as(Proc(FolderItemVerbs*, HRESULT)).call(ppfic)
  end
  def invoke_verb(vverb : VARIANT) : HRESULT
    @lpVtbl.value.invoke_verb.unsafe_as(Proc(VARIANT, HRESULT)).call(vverb)
  end
end
struct LibWin32::FolderItems
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_count(plcount : Int32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(Int32*, HRESULT)).call(plcount)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def item(index : VARIANT, ppid : FolderItem*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT, FolderItem*, HRESULT)).call(index, ppid)
  end
  def _new_enum(ppunk : IUnknown*) : HRESULT
    @lpVtbl.value._new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppunk)
  end
end
struct LibWin32::FolderItemVerb
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_name(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def do_it : HRESULT
    @lpVtbl.value.do_it.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::FolderItemVerbs
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_count(plcount : Int32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(Int32*, HRESULT)).call(plcount)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def item(index : VARIANT, ppid : FolderItemVerb*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT, FolderItemVerb*, HRESULT)).call(index, ppid)
  end
  def _new_enum(ppunk : IUnknown*) : HRESULT
    @lpVtbl.value._new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppunk)
  end
end
struct LibWin32::Folder
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_title(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent_folder(ppsf : Folder*) : HRESULT
    @lpVtbl.value.get_parent_folder.unsafe_as(Proc(Folder*, HRESULT)).call(ppsf)
  end
  def items(ppid : FolderItems*) : HRESULT
    @lpVtbl.value.items.unsafe_as(Proc(FolderItems*, HRESULT)).call(ppid)
  end
  def parse_name(bname : UInt8*, ppid : FolderItem*) : HRESULT
    @lpVtbl.value.parse_name.unsafe_as(Proc(UInt8*, FolderItem*, HRESULT)).call(bname, ppid)
  end
  def new_folder(bname : UInt8*, voptions : VARIANT) : HRESULT
    @lpVtbl.value.new_folder.unsafe_as(Proc(UInt8*, VARIANT, HRESULT)).call(bname, voptions)
  end
  def move_here(vitem : VARIANT, voptions : VARIANT) : HRESULT
    @lpVtbl.value.move_here.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(vitem, voptions)
  end
  def copy_here(vitem : VARIANT, voptions : VARIANT) : HRESULT
    @lpVtbl.value.copy_here.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(vitem, voptions)
  end
  def get_details_of(vitem : VARIANT, icolumn : Int32, pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_details_of.unsafe_as(Proc(VARIANT, Int32, UInt8**, HRESULT)).call(vitem, icolumn, pbs)
  end
end
struct LibWin32::Folder2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_title(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent_folder(ppsf : Folder*) : HRESULT
    @lpVtbl.value.get_parent_folder.unsafe_as(Proc(Folder*, HRESULT)).call(ppsf)
  end
  def items(ppid : FolderItems*) : HRESULT
    @lpVtbl.value.items.unsafe_as(Proc(FolderItems*, HRESULT)).call(ppid)
  end
  def parse_name(bname : UInt8*, ppid : FolderItem*) : HRESULT
    @lpVtbl.value.parse_name.unsafe_as(Proc(UInt8*, FolderItem*, HRESULT)).call(bname, ppid)
  end
  def new_folder(bname : UInt8*, voptions : VARIANT) : HRESULT
    @lpVtbl.value.new_folder.unsafe_as(Proc(UInt8*, VARIANT, HRESULT)).call(bname, voptions)
  end
  def move_here(vitem : VARIANT, voptions : VARIANT) : HRESULT
    @lpVtbl.value.move_here.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(vitem, voptions)
  end
  def copy_here(vitem : VARIANT, voptions : VARIANT) : HRESULT
    @lpVtbl.value.copy_here.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(vitem, voptions)
  end
  def get_details_of(vitem : VARIANT, icolumn : Int32, pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_details_of.unsafe_as(Proc(VARIANT, Int32, UInt8**, HRESULT)).call(vitem, icolumn, pbs)
  end
  def get_self(ppfi : FolderItem*) : HRESULT
    @lpVtbl.value.get_self.unsafe_as(Proc(FolderItem*, HRESULT)).call(ppfi)
  end
  def get_offline_status(pul : Int32*) : HRESULT
    @lpVtbl.value.get_offline_status.unsafe_as(Proc(Int32*, HRESULT)).call(pul)
  end
  def synchronize : HRESULT
    @lpVtbl.value.synchronize.unsafe_as(Proc(HRESULT)).call
  end
  def get_have_to_show_web_view_barricade(pbhavetoshowwebviewbarricade : Int16*) : HRESULT
    @lpVtbl.value.get_have_to_show_web_view_barricade.unsafe_as(Proc(Int16*, HRESULT)).call(pbhavetoshowwebviewbarricade)
  end
  def dismissed_web_view_barricade : HRESULT
    @lpVtbl.value.dismissed_web_view_barricade.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::Folder3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_title(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent_folder(ppsf : Folder*) : HRESULT
    @lpVtbl.value.get_parent_folder.unsafe_as(Proc(Folder*, HRESULT)).call(ppsf)
  end
  def items(ppid : FolderItems*) : HRESULT
    @lpVtbl.value.items.unsafe_as(Proc(FolderItems*, HRESULT)).call(ppid)
  end
  def parse_name(bname : UInt8*, ppid : FolderItem*) : HRESULT
    @lpVtbl.value.parse_name.unsafe_as(Proc(UInt8*, FolderItem*, HRESULT)).call(bname, ppid)
  end
  def new_folder(bname : UInt8*, voptions : VARIANT) : HRESULT
    @lpVtbl.value.new_folder.unsafe_as(Proc(UInt8*, VARIANT, HRESULT)).call(bname, voptions)
  end
  def move_here(vitem : VARIANT, voptions : VARIANT) : HRESULT
    @lpVtbl.value.move_here.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(vitem, voptions)
  end
  def copy_here(vitem : VARIANT, voptions : VARIANT) : HRESULT
    @lpVtbl.value.copy_here.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(vitem, voptions)
  end
  def get_details_of(vitem : VARIANT, icolumn : Int32, pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_details_of.unsafe_as(Proc(VARIANT, Int32, UInt8**, HRESULT)).call(vitem, icolumn, pbs)
  end
  def get_self(ppfi : FolderItem*) : HRESULT
    @lpVtbl.value.get_self.unsafe_as(Proc(FolderItem*, HRESULT)).call(ppfi)
  end
  def get_offline_status(pul : Int32*) : HRESULT
    @lpVtbl.value.get_offline_status.unsafe_as(Proc(Int32*, HRESULT)).call(pul)
  end
  def synchronize : HRESULT
    @lpVtbl.value.synchronize.unsafe_as(Proc(HRESULT)).call
  end
  def get_have_to_show_web_view_barricade(pbhavetoshowwebviewbarricade : Int16*) : HRESULT
    @lpVtbl.value.get_have_to_show_web_view_barricade.unsafe_as(Proc(Int16*, HRESULT)).call(pbhavetoshowwebviewbarricade)
  end
  def dismissed_web_view_barricade : HRESULT
    @lpVtbl.value.dismissed_web_view_barricade.unsafe_as(Proc(HRESULT)).call
  end
  def get_show_web_view_barricade(pbshowwebviewbarricade : Int16*) : HRESULT
    @lpVtbl.value.get_show_web_view_barricade.unsafe_as(Proc(Int16*, HRESULT)).call(pbshowwebviewbarricade)
  end
  def put_show_web_view_barricade(bshowwebviewbarricade : Int16) : HRESULT
    @lpVtbl.value.put_show_web_view_barricade.unsafe_as(Proc(Int16, HRESULT)).call(bshowwebviewbarricade)
  end
end
struct LibWin32::FolderItem2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_name(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def put_name(bs : UInt8*) : HRESULT
    @lpVtbl.value.put_name.unsafe_as(Proc(UInt8*, HRESULT)).call(bs)
  end
  def get_path(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_path.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def get_get_link(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_get_link.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_get_folder(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_get_folder.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_is_link(pb : Int16*) : HRESULT
    @lpVtbl.value.get_is_link.unsafe_as(Proc(Int16*, HRESULT)).call(pb)
  end
  def get_is_folder(pb : Int16*) : HRESULT
    @lpVtbl.value.get_is_folder.unsafe_as(Proc(Int16*, HRESULT)).call(pb)
  end
  def get_is_file_system(pb : Int16*) : HRESULT
    @lpVtbl.value.get_is_file_system.unsafe_as(Proc(Int16*, HRESULT)).call(pb)
  end
  def get_is_browsable(pb : Int16*) : HRESULT
    @lpVtbl.value.get_is_browsable.unsafe_as(Proc(Int16*, HRESULT)).call(pb)
  end
  def get_modify_date(pdt : Float64*) : HRESULT
    @lpVtbl.value.get_modify_date.unsafe_as(Proc(Float64*, HRESULT)).call(pdt)
  end
  def put_modify_date(dt : Float64) : HRESULT
    @lpVtbl.value.put_modify_date.unsafe_as(Proc(Float64, HRESULT)).call(dt)
  end
  def get_size(pul : Int32*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(Int32*, HRESULT)).call(pul)
  end
  def get_type(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def verbs(ppfic : FolderItemVerbs*) : HRESULT
    @lpVtbl.value.verbs.unsafe_as(Proc(FolderItemVerbs*, HRESULT)).call(ppfic)
  end
  def invoke_verb(vverb : VARIANT) : HRESULT
    @lpVtbl.value.invoke_verb.unsafe_as(Proc(VARIANT, HRESULT)).call(vverb)
  end
  def invoke_verb_ex(vverb : VARIANT, vargs : VARIANT) : HRESULT
    @lpVtbl.value.invoke_verb_ex.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(vverb, vargs)
  end
  def extended_property(bstrpropname : UInt8*, pvret : VARIANT*) : HRESULT
    @lpVtbl.value.extended_property.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrpropname, pvret)
  end
end
struct LibWin32::FolderItems2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_count(plcount : Int32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(Int32*, HRESULT)).call(plcount)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def item(index : VARIANT, ppid : FolderItem*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT, FolderItem*, HRESULT)).call(index, ppid)
  end
  def _new_enum(ppunk : IUnknown*) : HRESULT
    @lpVtbl.value._new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppunk)
  end
  def invoke_verb_ex(vverb : VARIANT, vargs : VARIANT) : HRESULT
    @lpVtbl.value.invoke_verb_ex.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(vverb, vargs)
  end
end
struct LibWin32::FolderItems3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_count(plcount : Int32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(Int32*, HRESULT)).call(plcount)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def item(index : VARIANT, ppid : FolderItem*) : HRESULT
    @lpVtbl.value.item.unsafe_as(Proc(VARIANT, FolderItem*, HRESULT)).call(index, ppid)
  end
  def _new_enum(ppunk : IUnknown*) : HRESULT
    @lpVtbl.value._new_enum.unsafe_as(Proc(IUnknown*, HRESULT)).call(ppunk)
  end
  def invoke_verb_ex(vverb : VARIANT, vargs : VARIANT) : HRESULT
    @lpVtbl.value.invoke_verb_ex.unsafe_as(Proc(VARIANT, VARIANT, HRESULT)).call(vverb, vargs)
  end
  def filter(grfflags : Int32, bstrfilespec : UInt8*) : HRESULT
    @lpVtbl.value.filter.unsafe_as(Proc(Int32, UInt8*, HRESULT)).call(grfflags, bstrfilespec)
  end
  def get_verbs(ppfic : FolderItemVerbs*) : HRESULT
    @lpVtbl.value.get_verbs.unsafe_as(Proc(FolderItemVerbs*, HRESULT)).call(ppfic)
  end
end
struct LibWin32::IShellLinkDual
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_path(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_path.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def put_path(bs : UInt8*) : HRESULT
    @lpVtbl.value.put_path.unsafe_as(Proc(UInt8*, HRESULT)).call(bs)
  end
  def get_description(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_description.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def put_description(bs : UInt8*) : HRESULT
    @lpVtbl.value.put_description.unsafe_as(Proc(UInt8*, HRESULT)).call(bs)
  end
  def get_working_directory(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_working_directory.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def put_working_directory(bs : UInt8*) : HRESULT
    @lpVtbl.value.put_working_directory.unsafe_as(Proc(UInt8*, HRESULT)).call(bs)
  end
  def get_arguments(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_arguments.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def put_arguments(bs : UInt8*) : HRESULT
    @lpVtbl.value.put_arguments.unsafe_as(Proc(UInt8*, HRESULT)).call(bs)
  end
  def get_hotkey(pihk : Int32*) : HRESULT
    @lpVtbl.value.get_hotkey.unsafe_as(Proc(Int32*, HRESULT)).call(pihk)
  end
  def put_hotkey(ihk : Int32) : HRESULT
    @lpVtbl.value.put_hotkey.unsafe_as(Proc(Int32, HRESULT)).call(ihk)
  end
  def get_show_command(pishowcommand : Int32*) : HRESULT
    @lpVtbl.value.get_show_command.unsafe_as(Proc(Int32*, HRESULT)).call(pishowcommand)
  end
  def put_show_command(ishowcommand : Int32) : HRESULT
    @lpVtbl.value.put_show_command.unsafe_as(Proc(Int32, HRESULT)).call(ishowcommand)
  end
  def resolve(fflags : Int32) : HRESULT
    @lpVtbl.value.resolve.unsafe_as(Proc(Int32, HRESULT)).call(fflags)
  end
  def get_icon_location(pbs : UInt8**, piicon : Int32*) : HRESULT
    @lpVtbl.value.get_icon_location.unsafe_as(Proc(UInt8**, Int32*, HRESULT)).call(pbs, piicon)
  end
  def set_icon_location(bs : UInt8*, iicon : Int32) : HRESULT
    @lpVtbl.value.set_icon_location.unsafe_as(Proc(UInt8*, Int32, HRESULT)).call(bs, iicon)
  end
  def save(vwhere : VARIANT) : HRESULT
    @lpVtbl.value.save.unsafe_as(Proc(VARIANT, HRESULT)).call(vwhere)
  end
end
struct LibWin32::IShellLinkDual2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_path(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_path.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def put_path(bs : UInt8*) : HRESULT
    @lpVtbl.value.put_path.unsafe_as(Proc(UInt8*, HRESULT)).call(bs)
  end
  def get_description(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_description.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def put_description(bs : UInt8*) : HRESULT
    @lpVtbl.value.put_description.unsafe_as(Proc(UInt8*, HRESULT)).call(bs)
  end
  def get_working_directory(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_working_directory.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def put_working_directory(bs : UInt8*) : HRESULT
    @lpVtbl.value.put_working_directory.unsafe_as(Proc(UInt8*, HRESULT)).call(bs)
  end
  def get_arguments(pbs : UInt8**) : HRESULT
    @lpVtbl.value.get_arguments.unsafe_as(Proc(UInt8**, HRESULT)).call(pbs)
  end
  def put_arguments(bs : UInt8*) : HRESULT
    @lpVtbl.value.put_arguments.unsafe_as(Proc(UInt8*, HRESULT)).call(bs)
  end
  def get_hotkey(pihk : Int32*) : HRESULT
    @lpVtbl.value.get_hotkey.unsafe_as(Proc(Int32*, HRESULT)).call(pihk)
  end
  def put_hotkey(ihk : Int32) : HRESULT
    @lpVtbl.value.put_hotkey.unsafe_as(Proc(Int32, HRESULT)).call(ihk)
  end
  def get_show_command(pishowcommand : Int32*) : HRESULT
    @lpVtbl.value.get_show_command.unsafe_as(Proc(Int32*, HRESULT)).call(pishowcommand)
  end
  def put_show_command(ishowcommand : Int32) : HRESULT
    @lpVtbl.value.put_show_command.unsafe_as(Proc(Int32, HRESULT)).call(ishowcommand)
  end
  def resolve(fflags : Int32) : HRESULT
    @lpVtbl.value.resolve.unsafe_as(Proc(Int32, HRESULT)).call(fflags)
  end
  def get_icon_location(pbs : UInt8**, piicon : Int32*) : HRESULT
    @lpVtbl.value.get_icon_location.unsafe_as(Proc(UInt8**, Int32*, HRESULT)).call(pbs, piicon)
  end
  def set_icon_location(bs : UInt8*, iicon : Int32) : HRESULT
    @lpVtbl.value.set_icon_location.unsafe_as(Proc(UInt8*, Int32, HRESULT)).call(bs, iicon)
  end
  def save(vwhere : VARIANT) : HRESULT
    @lpVtbl.value.save.unsafe_as(Proc(VARIANT, HRESULT)).call(vwhere)
  end
  def get_target(ppfi : FolderItem*) : HRESULT
    @lpVtbl.value.get_target.unsafe_as(Proc(FolderItem*, HRESULT)).call(ppfi)
  end
end
struct LibWin32::IShellFolderViewDual
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_folder(ppid : Folder*) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(Folder*, HRESULT)).call(ppid)
  end
  def selected_items(ppid : FolderItems*) : HRESULT
    @lpVtbl.value.selected_items.unsafe_as(Proc(FolderItems*, HRESULT)).call(ppid)
  end
  def get_focused_item(ppid : FolderItem*) : HRESULT
    @lpVtbl.value.get_focused_item.unsafe_as(Proc(FolderItem*, HRESULT)).call(ppid)
  end
  def select_item(pvfi : VARIANT*, dwflags : Int32) : HRESULT
    @lpVtbl.value.select_item.unsafe_as(Proc(VARIANT*, Int32, HRESULT)).call(pvfi, dwflags)
  end
  def popup_item_menu(pfi : FolderItem, vx : VARIANT, vy : VARIANT, pbs : UInt8**) : HRESULT
    @lpVtbl.value.popup_item_menu.unsafe_as(Proc(FolderItem, VARIANT, VARIANT, UInt8**, HRESULT)).call(pfi, vx, vy, pbs)
  end
  def get_script(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_script.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_view_options(plviewoptions : Int32*) : HRESULT
    @lpVtbl.value.get_view_options.unsafe_as(Proc(Int32*, HRESULT)).call(plviewoptions)
  end
end
struct LibWin32::IShellFolderViewDual2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_folder(ppid : Folder*) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(Folder*, HRESULT)).call(ppid)
  end
  def selected_items(ppid : FolderItems*) : HRESULT
    @lpVtbl.value.selected_items.unsafe_as(Proc(FolderItems*, HRESULT)).call(ppid)
  end
  def get_focused_item(ppid : FolderItem*) : HRESULT
    @lpVtbl.value.get_focused_item.unsafe_as(Proc(FolderItem*, HRESULT)).call(ppid)
  end
  def select_item(pvfi : VARIANT*, dwflags : Int32) : HRESULT
    @lpVtbl.value.select_item.unsafe_as(Proc(VARIANT*, Int32, HRESULT)).call(pvfi, dwflags)
  end
  def popup_item_menu(pfi : FolderItem, vx : VARIANT, vy : VARIANT, pbs : UInt8**) : HRESULT
    @lpVtbl.value.popup_item_menu.unsafe_as(Proc(FolderItem, VARIANT, VARIANT, UInt8**, HRESULT)).call(pfi, vx, vy, pbs)
  end
  def get_script(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_script.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_view_options(plviewoptions : Int32*) : HRESULT
    @lpVtbl.value.get_view_options.unsafe_as(Proc(Int32*, HRESULT)).call(plviewoptions)
  end
  def get_current_view_mode(pviewmode : UInt32*) : HRESULT
    @lpVtbl.value.get_current_view_mode.unsafe_as(Proc(UInt32*, HRESULT)).call(pviewmode)
  end
  def put_current_view_mode(viewmode : UInt32) : HRESULT
    @lpVtbl.value.put_current_view_mode.unsafe_as(Proc(UInt32, HRESULT)).call(viewmode)
  end
  def select_item_relative(irelative : Int32) : HRESULT
    @lpVtbl.value.select_item_relative.unsafe_as(Proc(Int32, HRESULT)).call(irelative)
  end
end
struct LibWin32::IShellFolderViewDual3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_folder(ppid : Folder*) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(Folder*, HRESULT)).call(ppid)
  end
  def selected_items(ppid : FolderItems*) : HRESULT
    @lpVtbl.value.selected_items.unsafe_as(Proc(FolderItems*, HRESULT)).call(ppid)
  end
  def get_focused_item(ppid : FolderItem*) : HRESULT
    @lpVtbl.value.get_focused_item.unsafe_as(Proc(FolderItem*, HRESULT)).call(ppid)
  end
  def select_item(pvfi : VARIANT*, dwflags : Int32) : HRESULT
    @lpVtbl.value.select_item.unsafe_as(Proc(VARIANT*, Int32, HRESULT)).call(pvfi, dwflags)
  end
  def popup_item_menu(pfi : FolderItem, vx : VARIANT, vy : VARIANT, pbs : UInt8**) : HRESULT
    @lpVtbl.value.popup_item_menu.unsafe_as(Proc(FolderItem, VARIANT, VARIANT, UInt8**, HRESULT)).call(pfi, vx, vy, pbs)
  end
  def get_script(ppdisp : IDispatch*) : HRESULT
    @lpVtbl.value.get_script.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppdisp)
  end
  def get_view_options(plviewoptions : Int32*) : HRESULT
    @lpVtbl.value.get_view_options.unsafe_as(Proc(Int32*, HRESULT)).call(plviewoptions)
  end
  def get_current_view_mode(pviewmode : UInt32*) : HRESULT
    @lpVtbl.value.get_current_view_mode.unsafe_as(Proc(UInt32*, HRESULT)).call(pviewmode)
  end
  def put_current_view_mode(viewmode : UInt32) : HRESULT
    @lpVtbl.value.put_current_view_mode.unsafe_as(Proc(UInt32, HRESULT)).call(viewmode)
  end
  def select_item_relative(irelative : Int32) : HRESULT
    @lpVtbl.value.select_item_relative.unsafe_as(Proc(Int32, HRESULT)).call(irelative)
  end
  def get_group_by(pbstrgroupby : UInt8**) : HRESULT
    @lpVtbl.value.get_group_by.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrgroupby)
  end
  def put_group_by(bstrgroupby : UInt8*) : HRESULT
    @lpVtbl.value.put_group_by.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrgroupby)
  end
  def get_folder_flags(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_folder_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
  def put_folder_flags(dwflags : UInt32) : HRESULT
    @lpVtbl.value.put_folder_flags.unsafe_as(Proc(UInt32, HRESULT)).call(dwflags)
  end
  def get_sort_columns(pbstrsortcolumns : UInt8**) : HRESULT
    @lpVtbl.value.get_sort_columns.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrsortcolumns)
  end
  def put_sort_columns(bstrsortcolumns : UInt8*) : HRESULT
    @lpVtbl.value.put_sort_columns.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrsortcolumns)
  end
  def put_icon_size(iiconsize : Int32) : HRESULT
    @lpVtbl.value.put_icon_size.unsafe_as(Proc(Int32, HRESULT)).call(iiconsize)
  end
  def get_icon_size(piiconsize : Int32*) : HRESULT
    @lpVtbl.value.get_icon_size.unsafe_as(Proc(Int32*, HRESULT)).call(piiconsize)
  end
  def filter_view(bstrfiltertext : UInt8*) : HRESULT
    @lpVtbl.value.filter_view.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrfiltertext)
  end
end
struct LibWin32::IShellDispatch
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def name_space(vdir : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.name_space.unsafe_as(Proc(VARIANT, Folder*, HRESULT)).call(vdir, ppsdf)
  end
  def browse_for_folder(hwnd : Int32, title : UInt8*, options : Int32, rootfolder : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.browse_for_folder.unsafe_as(Proc(Int32, UInt8*, Int32, VARIANT, Folder*, HRESULT)).call(hwnd, title, options, rootfolder, ppsdf)
  end
  def windows(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.windows.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def open(vdir : VARIANT) : HRESULT
    @lpVtbl.value.open.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def explore(vdir : VARIANT) : HRESULT
    @lpVtbl.value.explore.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def minimize_all : HRESULT
    @lpVtbl.value.minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def undo_minimize_all : HRESULT
    @lpVtbl.value.undo_minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def file_run : HRESULT
    @lpVtbl.value.file_run.unsafe_as(Proc(HRESULT)).call
  end
  def cascade_windows : HRESULT
    @lpVtbl.value.cascade_windows.unsafe_as(Proc(HRESULT)).call
  end
  def tile_vertically : HRESULT
    @lpVtbl.value.tile_vertically.unsafe_as(Proc(HRESULT)).call
  end
  def tile_horizontally : HRESULT
    @lpVtbl.value.tile_horizontally.unsafe_as(Proc(HRESULT)).call
  end
  def shutdown_windows : HRESULT
    @lpVtbl.value.shutdown_windows.unsafe_as(Proc(HRESULT)).call
  end
  def suspend : HRESULT
    @lpVtbl.value.suspend.unsafe_as(Proc(HRESULT)).call
  end
  def eject_pc : HRESULT
    @lpVtbl.value.eject_pc.unsafe_as(Proc(HRESULT)).call
  end
  def set_time : HRESULT
    @lpVtbl.value.set_time.unsafe_as(Proc(HRESULT)).call
  end
  def tray_properties : HRESULT
    @lpVtbl.value.tray_properties.unsafe_as(Proc(HRESULT)).call
  end
  def help : HRESULT
    @lpVtbl.value.help.unsafe_as(Proc(HRESULT)).call
  end
  def find_files : HRESULT
    @lpVtbl.value.find_files.unsafe_as(Proc(HRESULT)).call
  end
  def find_computer : HRESULT
    @lpVtbl.value.find_computer.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_menu : HRESULT
    @lpVtbl.value.refresh_menu.unsafe_as(Proc(HRESULT)).call
  end
  def control_panel_item(bstrdir : UInt8*) : HRESULT
    @lpVtbl.value.control_panel_item.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrdir)
  end
end
struct LibWin32::IShellDispatch2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def name_space(vdir : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.name_space.unsafe_as(Proc(VARIANT, Folder*, HRESULT)).call(vdir, ppsdf)
  end
  def browse_for_folder(hwnd : Int32, title : UInt8*, options : Int32, rootfolder : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.browse_for_folder.unsafe_as(Proc(Int32, UInt8*, Int32, VARIANT, Folder*, HRESULT)).call(hwnd, title, options, rootfolder, ppsdf)
  end
  def windows(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.windows.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def open(vdir : VARIANT) : HRESULT
    @lpVtbl.value.open.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def explore(vdir : VARIANT) : HRESULT
    @lpVtbl.value.explore.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def minimize_all : HRESULT
    @lpVtbl.value.minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def undo_minimize_all : HRESULT
    @lpVtbl.value.undo_minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def file_run : HRESULT
    @lpVtbl.value.file_run.unsafe_as(Proc(HRESULT)).call
  end
  def cascade_windows : HRESULT
    @lpVtbl.value.cascade_windows.unsafe_as(Proc(HRESULT)).call
  end
  def tile_vertically : HRESULT
    @lpVtbl.value.tile_vertically.unsafe_as(Proc(HRESULT)).call
  end
  def tile_horizontally : HRESULT
    @lpVtbl.value.tile_horizontally.unsafe_as(Proc(HRESULT)).call
  end
  def shutdown_windows : HRESULT
    @lpVtbl.value.shutdown_windows.unsafe_as(Proc(HRESULT)).call
  end
  def suspend : HRESULT
    @lpVtbl.value.suspend.unsafe_as(Proc(HRESULT)).call
  end
  def eject_pc : HRESULT
    @lpVtbl.value.eject_pc.unsafe_as(Proc(HRESULT)).call
  end
  def set_time : HRESULT
    @lpVtbl.value.set_time.unsafe_as(Proc(HRESULT)).call
  end
  def tray_properties : HRESULT
    @lpVtbl.value.tray_properties.unsafe_as(Proc(HRESULT)).call
  end
  def help : HRESULT
    @lpVtbl.value.help.unsafe_as(Proc(HRESULT)).call
  end
  def find_files : HRESULT
    @lpVtbl.value.find_files.unsafe_as(Proc(HRESULT)).call
  end
  def find_computer : HRESULT
    @lpVtbl.value.find_computer.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_menu : HRESULT
    @lpVtbl.value.refresh_menu.unsafe_as(Proc(HRESULT)).call
  end
  def control_panel_item(bstrdir : UInt8*) : HRESULT
    @lpVtbl.value.control_panel_item.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrdir)
  end
  def is_restricted(group : UInt8*, restriction : UInt8*, plrestrictvalue : Int32*) : HRESULT
    @lpVtbl.value.is_restricted.unsafe_as(Proc(UInt8*, UInt8*, Int32*, HRESULT)).call(group, restriction, plrestrictvalue)
  end
  def shell_execute(file : UInt8*, vargs : VARIANT, vdir : VARIANT, voperation : VARIANT, vshow : VARIANT) : HRESULT
    @lpVtbl.value.shell_execute.unsafe_as(Proc(UInt8*, VARIANT, VARIANT, VARIANT, VARIANT, HRESULT)).call(file, vargs, vdir, voperation, vshow)
  end
  def find_printer(name : UInt8*, location : UInt8*, model : UInt8*) : HRESULT
    @lpVtbl.value.find_printer.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, HRESULT)).call(name, location, model)
  end
  def get_system_information(name : UInt8*, pv : VARIANT*) : HRESULT
    @lpVtbl.value.get_system_information.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(name, pv)
  end
  def service_start(servicename : UInt8*, persistent : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.service_start.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(servicename, persistent, psuccess)
  end
  def service_stop(servicename : UInt8*, persistent : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.service_stop.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(servicename, persistent, psuccess)
  end
  def is_service_running(servicename : UInt8*, prunning : VARIANT*) : HRESULT
    @lpVtbl.value.is_service_running.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(servicename, prunning)
  end
  def can_start_stop_service(servicename : UInt8*, pcanstartstop : VARIANT*) : HRESULT
    @lpVtbl.value.can_start_stop_service.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(servicename, pcanstartstop)
  end
  def show_browser_bar(bstrclsid : UInt8*, bshow : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_bar.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(bstrclsid, bshow, psuccess)
  end
end
struct LibWin32::IShellDispatch3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def name_space(vdir : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.name_space.unsafe_as(Proc(VARIANT, Folder*, HRESULT)).call(vdir, ppsdf)
  end
  def browse_for_folder(hwnd : Int32, title : UInt8*, options : Int32, rootfolder : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.browse_for_folder.unsafe_as(Proc(Int32, UInt8*, Int32, VARIANT, Folder*, HRESULT)).call(hwnd, title, options, rootfolder, ppsdf)
  end
  def windows(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.windows.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def open(vdir : VARIANT) : HRESULT
    @lpVtbl.value.open.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def explore(vdir : VARIANT) : HRESULT
    @lpVtbl.value.explore.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def minimize_all : HRESULT
    @lpVtbl.value.minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def undo_minimize_all : HRESULT
    @lpVtbl.value.undo_minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def file_run : HRESULT
    @lpVtbl.value.file_run.unsafe_as(Proc(HRESULT)).call
  end
  def cascade_windows : HRESULT
    @lpVtbl.value.cascade_windows.unsafe_as(Proc(HRESULT)).call
  end
  def tile_vertically : HRESULT
    @lpVtbl.value.tile_vertically.unsafe_as(Proc(HRESULT)).call
  end
  def tile_horizontally : HRESULT
    @lpVtbl.value.tile_horizontally.unsafe_as(Proc(HRESULT)).call
  end
  def shutdown_windows : HRESULT
    @lpVtbl.value.shutdown_windows.unsafe_as(Proc(HRESULT)).call
  end
  def suspend : HRESULT
    @lpVtbl.value.suspend.unsafe_as(Proc(HRESULT)).call
  end
  def eject_pc : HRESULT
    @lpVtbl.value.eject_pc.unsafe_as(Proc(HRESULT)).call
  end
  def set_time : HRESULT
    @lpVtbl.value.set_time.unsafe_as(Proc(HRESULT)).call
  end
  def tray_properties : HRESULT
    @lpVtbl.value.tray_properties.unsafe_as(Proc(HRESULT)).call
  end
  def help : HRESULT
    @lpVtbl.value.help.unsafe_as(Proc(HRESULT)).call
  end
  def find_files : HRESULT
    @lpVtbl.value.find_files.unsafe_as(Proc(HRESULT)).call
  end
  def find_computer : HRESULT
    @lpVtbl.value.find_computer.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_menu : HRESULT
    @lpVtbl.value.refresh_menu.unsafe_as(Proc(HRESULT)).call
  end
  def control_panel_item(bstrdir : UInt8*) : HRESULT
    @lpVtbl.value.control_panel_item.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrdir)
  end
  def is_restricted(group : UInt8*, restriction : UInt8*, plrestrictvalue : Int32*) : HRESULT
    @lpVtbl.value.is_restricted.unsafe_as(Proc(UInt8*, UInt8*, Int32*, HRESULT)).call(group, restriction, plrestrictvalue)
  end
  def shell_execute(file : UInt8*, vargs : VARIANT, vdir : VARIANT, voperation : VARIANT, vshow : VARIANT) : HRESULT
    @lpVtbl.value.shell_execute.unsafe_as(Proc(UInt8*, VARIANT, VARIANT, VARIANT, VARIANT, HRESULT)).call(file, vargs, vdir, voperation, vshow)
  end
  def find_printer(name : UInt8*, location : UInt8*, model : UInt8*) : HRESULT
    @lpVtbl.value.find_printer.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, HRESULT)).call(name, location, model)
  end
  def get_system_information(name : UInt8*, pv : VARIANT*) : HRESULT
    @lpVtbl.value.get_system_information.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(name, pv)
  end
  def service_start(servicename : UInt8*, persistent : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.service_start.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(servicename, persistent, psuccess)
  end
  def service_stop(servicename : UInt8*, persistent : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.service_stop.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(servicename, persistent, psuccess)
  end
  def is_service_running(servicename : UInt8*, prunning : VARIANT*) : HRESULT
    @lpVtbl.value.is_service_running.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(servicename, prunning)
  end
  def can_start_stop_service(servicename : UInt8*, pcanstartstop : VARIANT*) : HRESULT
    @lpVtbl.value.can_start_stop_service.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(servicename, pcanstartstop)
  end
  def show_browser_bar(bstrclsid : UInt8*, bshow : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_bar.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(bstrclsid, bshow, psuccess)
  end
  def add_to_recent(varfile : VARIANT, bstrcategory : UInt8*) : HRESULT
    @lpVtbl.value.add_to_recent.unsafe_as(Proc(VARIANT, UInt8*, HRESULT)).call(varfile, bstrcategory)
  end
end
struct LibWin32::IShellDispatch4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def name_space(vdir : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.name_space.unsafe_as(Proc(VARIANT, Folder*, HRESULT)).call(vdir, ppsdf)
  end
  def browse_for_folder(hwnd : Int32, title : UInt8*, options : Int32, rootfolder : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.browse_for_folder.unsafe_as(Proc(Int32, UInt8*, Int32, VARIANT, Folder*, HRESULT)).call(hwnd, title, options, rootfolder, ppsdf)
  end
  def windows(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.windows.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def open(vdir : VARIANT) : HRESULT
    @lpVtbl.value.open.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def explore(vdir : VARIANT) : HRESULT
    @lpVtbl.value.explore.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def minimize_all : HRESULT
    @lpVtbl.value.minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def undo_minimize_all : HRESULT
    @lpVtbl.value.undo_minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def file_run : HRESULT
    @lpVtbl.value.file_run.unsafe_as(Proc(HRESULT)).call
  end
  def cascade_windows : HRESULT
    @lpVtbl.value.cascade_windows.unsafe_as(Proc(HRESULT)).call
  end
  def tile_vertically : HRESULT
    @lpVtbl.value.tile_vertically.unsafe_as(Proc(HRESULT)).call
  end
  def tile_horizontally : HRESULT
    @lpVtbl.value.tile_horizontally.unsafe_as(Proc(HRESULT)).call
  end
  def shutdown_windows : HRESULT
    @lpVtbl.value.shutdown_windows.unsafe_as(Proc(HRESULT)).call
  end
  def suspend : HRESULT
    @lpVtbl.value.suspend.unsafe_as(Proc(HRESULT)).call
  end
  def eject_pc : HRESULT
    @lpVtbl.value.eject_pc.unsafe_as(Proc(HRESULT)).call
  end
  def set_time : HRESULT
    @lpVtbl.value.set_time.unsafe_as(Proc(HRESULT)).call
  end
  def tray_properties : HRESULT
    @lpVtbl.value.tray_properties.unsafe_as(Proc(HRESULT)).call
  end
  def help : HRESULT
    @lpVtbl.value.help.unsafe_as(Proc(HRESULT)).call
  end
  def find_files : HRESULT
    @lpVtbl.value.find_files.unsafe_as(Proc(HRESULT)).call
  end
  def find_computer : HRESULT
    @lpVtbl.value.find_computer.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_menu : HRESULT
    @lpVtbl.value.refresh_menu.unsafe_as(Proc(HRESULT)).call
  end
  def control_panel_item(bstrdir : UInt8*) : HRESULT
    @lpVtbl.value.control_panel_item.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrdir)
  end
  def is_restricted(group : UInt8*, restriction : UInt8*, plrestrictvalue : Int32*) : HRESULT
    @lpVtbl.value.is_restricted.unsafe_as(Proc(UInt8*, UInt8*, Int32*, HRESULT)).call(group, restriction, plrestrictvalue)
  end
  def shell_execute(file : UInt8*, vargs : VARIANT, vdir : VARIANT, voperation : VARIANT, vshow : VARIANT) : HRESULT
    @lpVtbl.value.shell_execute.unsafe_as(Proc(UInt8*, VARIANT, VARIANT, VARIANT, VARIANT, HRESULT)).call(file, vargs, vdir, voperation, vshow)
  end
  def find_printer(name : UInt8*, location : UInt8*, model : UInt8*) : HRESULT
    @lpVtbl.value.find_printer.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, HRESULT)).call(name, location, model)
  end
  def get_system_information(name : UInt8*, pv : VARIANT*) : HRESULT
    @lpVtbl.value.get_system_information.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(name, pv)
  end
  def service_start(servicename : UInt8*, persistent : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.service_start.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(servicename, persistent, psuccess)
  end
  def service_stop(servicename : UInt8*, persistent : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.service_stop.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(servicename, persistent, psuccess)
  end
  def is_service_running(servicename : UInt8*, prunning : VARIANT*) : HRESULT
    @lpVtbl.value.is_service_running.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(servicename, prunning)
  end
  def can_start_stop_service(servicename : UInt8*, pcanstartstop : VARIANT*) : HRESULT
    @lpVtbl.value.can_start_stop_service.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(servicename, pcanstartstop)
  end
  def show_browser_bar(bstrclsid : UInt8*, bshow : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_bar.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(bstrclsid, bshow, psuccess)
  end
  def add_to_recent(varfile : VARIANT, bstrcategory : UInt8*) : HRESULT
    @lpVtbl.value.add_to_recent.unsafe_as(Proc(VARIANT, UInt8*, HRESULT)).call(varfile, bstrcategory)
  end
  def windows_security : HRESULT
    @lpVtbl.value.windows_security.unsafe_as(Proc(HRESULT)).call
  end
  def toggle_desktop : HRESULT
    @lpVtbl.value.toggle_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def explorer_policy(bstrpolicyname : UInt8*, pvalue : VARIANT*) : HRESULT
    @lpVtbl.value.explorer_policy.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrpolicyname, pvalue)
  end
  def get_setting(lsetting : Int32, presult : Int16*) : HRESULT
    @lpVtbl.value.get_setting.unsafe_as(Proc(Int32, Int16*, HRESULT)).call(lsetting, presult)
  end
end
struct LibWin32::IShellDispatch5
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def name_space(vdir : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.name_space.unsafe_as(Proc(VARIANT, Folder*, HRESULT)).call(vdir, ppsdf)
  end
  def browse_for_folder(hwnd : Int32, title : UInt8*, options : Int32, rootfolder : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.browse_for_folder.unsafe_as(Proc(Int32, UInt8*, Int32, VARIANT, Folder*, HRESULT)).call(hwnd, title, options, rootfolder, ppsdf)
  end
  def windows(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.windows.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def open(vdir : VARIANT) : HRESULT
    @lpVtbl.value.open.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def explore(vdir : VARIANT) : HRESULT
    @lpVtbl.value.explore.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def minimize_all : HRESULT
    @lpVtbl.value.minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def undo_minimize_all : HRESULT
    @lpVtbl.value.undo_minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def file_run : HRESULT
    @lpVtbl.value.file_run.unsafe_as(Proc(HRESULT)).call
  end
  def cascade_windows : HRESULT
    @lpVtbl.value.cascade_windows.unsafe_as(Proc(HRESULT)).call
  end
  def tile_vertically : HRESULT
    @lpVtbl.value.tile_vertically.unsafe_as(Proc(HRESULT)).call
  end
  def tile_horizontally : HRESULT
    @lpVtbl.value.tile_horizontally.unsafe_as(Proc(HRESULT)).call
  end
  def shutdown_windows : HRESULT
    @lpVtbl.value.shutdown_windows.unsafe_as(Proc(HRESULT)).call
  end
  def suspend : HRESULT
    @lpVtbl.value.suspend.unsafe_as(Proc(HRESULT)).call
  end
  def eject_pc : HRESULT
    @lpVtbl.value.eject_pc.unsafe_as(Proc(HRESULT)).call
  end
  def set_time : HRESULT
    @lpVtbl.value.set_time.unsafe_as(Proc(HRESULT)).call
  end
  def tray_properties : HRESULT
    @lpVtbl.value.tray_properties.unsafe_as(Proc(HRESULT)).call
  end
  def help : HRESULT
    @lpVtbl.value.help.unsafe_as(Proc(HRESULT)).call
  end
  def find_files : HRESULT
    @lpVtbl.value.find_files.unsafe_as(Proc(HRESULT)).call
  end
  def find_computer : HRESULT
    @lpVtbl.value.find_computer.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_menu : HRESULT
    @lpVtbl.value.refresh_menu.unsafe_as(Proc(HRESULT)).call
  end
  def control_panel_item(bstrdir : UInt8*) : HRESULT
    @lpVtbl.value.control_panel_item.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrdir)
  end
  def is_restricted(group : UInt8*, restriction : UInt8*, plrestrictvalue : Int32*) : HRESULT
    @lpVtbl.value.is_restricted.unsafe_as(Proc(UInt8*, UInt8*, Int32*, HRESULT)).call(group, restriction, plrestrictvalue)
  end
  def shell_execute(file : UInt8*, vargs : VARIANT, vdir : VARIANT, voperation : VARIANT, vshow : VARIANT) : HRESULT
    @lpVtbl.value.shell_execute.unsafe_as(Proc(UInt8*, VARIANT, VARIANT, VARIANT, VARIANT, HRESULT)).call(file, vargs, vdir, voperation, vshow)
  end
  def find_printer(name : UInt8*, location : UInt8*, model : UInt8*) : HRESULT
    @lpVtbl.value.find_printer.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, HRESULT)).call(name, location, model)
  end
  def get_system_information(name : UInt8*, pv : VARIANT*) : HRESULT
    @lpVtbl.value.get_system_information.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(name, pv)
  end
  def service_start(servicename : UInt8*, persistent : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.service_start.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(servicename, persistent, psuccess)
  end
  def service_stop(servicename : UInt8*, persistent : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.service_stop.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(servicename, persistent, psuccess)
  end
  def is_service_running(servicename : UInt8*, prunning : VARIANT*) : HRESULT
    @lpVtbl.value.is_service_running.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(servicename, prunning)
  end
  def can_start_stop_service(servicename : UInt8*, pcanstartstop : VARIANT*) : HRESULT
    @lpVtbl.value.can_start_stop_service.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(servicename, pcanstartstop)
  end
  def show_browser_bar(bstrclsid : UInt8*, bshow : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_bar.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(bstrclsid, bshow, psuccess)
  end
  def add_to_recent(varfile : VARIANT, bstrcategory : UInt8*) : HRESULT
    @lpVtbl.value.add_to_recent.unsafe_as(Proc(VARIANT, UInt8*, HRESULT)).call(varfile, bstrcategory)
  end
  def windows_security : HRESULT
    @lpVtbl.value.windows_security.unsafe_as(Proc(HRESULT)).call
  end
  def toggle_desktop : HRESULT
    @lpVtbl.value.toggle_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def explorer_policy(bstrpolicyname : UInt8*, pvalue : VARIANT*) : HRESULT
    @lpVtbl.value.explorer_policy.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrpolicyname, pvalue)
  end
  def get_setting(lsetting : Int32, presult : Int16*) : HRESULT
    @lpVtbl.value.get_setting.unsafe_as(Proc(Int32, Int16*, HRESULT)).call(lsetting, presult)
  end
  def window_switcher : HRESULT
    @lpVtbl.value.window_switcher.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IShellDispatch6
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def get_application(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_application.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def get_parent(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.get_parent.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def name_space(vdir : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.name_space.unsafe_as(Proc(VARIANT, Folder*, HRESULT)).call(vdir, ppsdf)
  end
  def browse_for_folder(hwnd : Int32, title : UInt8*, options : Int32, rootfolder : VARIANT, ppsdf : Folder*) : HRESULT
    @lpVtbl.value.browse_for_folder.unsafe_as(Proc(Int32, UInt8*, Int32, VARIANT, Folder*, HRESULT)).call(hwnd, title, options, rootfolder, ppsdf)
  end
  def windows(ppid : IDispatch*) : HRESULT
    @lpVtbl.value.windows.unsafe_as(Proc(IDispatch*, HRESULT)).call(ppid)
  end
  def open(vdir : VARIANT) : HRESULT
    @lpVtbl.value.open.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def explore(vdir : VARIANT) : HRESULT
    @lpVtbl.value.explore.unsafe_as(Proc(VARIANT, HRESULT)).call(vdir)
  end
  def minimize_all : HRESULT
    @lpVtbl.value.minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def undo_minimize_all : HRESULT
    @lpVtbl.value.undo_minimize_all.unsafe_as(Proc(HRESULT)).call
  end
  def file_run : HRESULT
    @lpVtbl.value.file_run.unsafe_as(Proc(HRESULT)).call
  end
  def cascade_windows : HRESULT
    @lpVtbl.value.cascade_windows.unsafe_as(Proc(HRESULT)).call
  end
  def tile_vertically : HRESULT
    @lpVtbl.value.tile_vertically.unsafe_as(Proc(HRESULT)).call
  end
  def tile_horizontally : HRESULT
    @lpVtbl.value.tile_horizontally.unsafe_as(Proc(HRESULT)).call
  end
  def shutdown_windows : HRESULT
    @lpVtbl.value.shutdown_windows.unsafe_as(Proc(HRESULT)).call
  end
  def suspend : HRESULT
    @lpVtbl.value.suspend.unsafe_as(Proc(HRESULT)).call
  end
  def eject_pc : HRESULT
    @lpVtbl.value.eject_pc.unsafe_as(Proc(HRESULT)).call
  end
  def set_time : HRESULT
    @lpVtbl.value.set_time.unsafe_as(Proc(HRESULT)).call
  end
  def tray_properties : HRESULT
    @lpVtbl.value.tray_properties.unsafe_as(Proc(HRESULT)).call
  end
  def help : HRESULT
    @lpVtbl.value.help.unsafe_as(Proc(HRESULT)).call
  end
  def find_files : HRESULT
    @lpVtbl.value.find_files.unsafe_as(Proc(HRESULT)).call
  end
  def find_computer : HRESULT
    @lpVtbl.value.find_computer.unsafe_as(Proc(HRESULT)).call
  end
  def refresh_menu : HRESULT
    @lpVtbl.value.refresh_menu.unsafe_as(Proc(HRESULT)).call
  end
  def control_panel_item(bstrdir : UInt8*) : HRESULT
    @lpVtbl.value.control_panel_item.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrdir)
  end
  def is_restricted(group : UInt8*, restriction : UInt8*, plrestrictvalue : Int32*) : HRESULT
    @lpVtbl.value.is_restricted.unsafe_as(Proc(UInt8*, UInt8*, Int32*, HRESULT)).call(group, restriction, plrestrictvalue)
  end
  def shell_execute(file : UInt8*, vargs : VARIANT, vdir : VARIANT, voperation : VARIANT, vshow : VARIANT) : HRESULT
    @lpVtbl.value.shell_execute.unsafe_as(Proc(UInt8*, VARIANT, VARIANT, VARIANT, VARIANT, HRESULT)).call(file, vargs, vdir, voperation, vshow)
  end
  def find_printer(name : UInt8*, location : UInt8*, model : UInt8*) : HRESULT
    @lpVtbl.value.find_printer.unsafe_as(Proc(UInt8*, UInt8*, UInt8*, HRESULT)).call(name, location, model)
  end
  def get_system_information(name : UInt8*, pv : VARIANT*) : HRESULT
    @lpVtbl.value.get_system_information.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(name, pv)
  end
  def service_start(servicename : UInt8*, persistent : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.service_start.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(servicename, persistent, psuccess)
  end
  def service_stop(servicename : UInt8*, persistent : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.service_stop.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(servicename, persistent, psuccess)
  end
  def is_service_running(servicename : UInt8*, prunning : VARIANT*) : HRESULT
    @lpVtbl.value.is_service_running.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(servicename, prunning)
  end
  def can_start_stop_service(servicename : UInt8*, pcanstartstop : VARIANT*) : HRESULT
    @lpVtbl.value.can_start_stop_service.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(servicename, pcanstartstop)
  end
  def show_browser_bar(bstrclsid : UInt8*, bshow : VARIANT, psuccess : VARIANT*) : HRESULT
    @lpVtbl.value.show_browser_bar.unsafe_as(Proc(UInt8*, VARIANT, VARIANT*, HRESULT)).call(bstrclsid, bshow, psuccess)
  end
  def add_to_recent(varfile : VARIANT, bstrcategory : UInt8*) : HRESULT
    @lpVtbl.value.add_to_recent.unsafe_as(Proc(VARIANT, UInt8*, HRESULT)).call(varfile, bstrcategory)
  end
  def windows_security : HRESULT
    @lpVtbl.value.windows_security.unsafe_as(Proc(HRESULT)).call
  end
  def toggle_desktop : HRESULT
    @lpVtbl.value.toggle_desktop.unsafe_as(Proc(HRESULT)).call
  end
  def explorer_policy(bstrpolicyname : UInt8*, pvalue : VARIANT*) : HRESULT
    @lpVtbl.value.explorer_policy.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrpolicyname, pvalue)
  end
  def get_setting(lsetting : Int32, presult : Int16*) : HRESULT
    @lpVtbl.value.get_setting.unsafe_as(Proc(Int32, Int16*, HRESULT)).call(lsetting, presult)
  end
  def window_switcher : HRESULT
    @lpVtbl.value.window_switcher.unsafe_as(Proc(HRESULT)).call
  end
  def search_command : HRESULT
    @lpVtbl.value.search_command.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IFileSearchBand
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def set_focus : HRESULT
    @lpVtbl.value.set_focus.unsafe_as(Proc(HRESULT)).call
  end
  def set_search_parameters(pbstrsearchid : UInt8**, bnavtoresults : Int16, pvarscope : VARIANT*, pvarqueryfile : VARIANT*) : HRESULT
    @lpVtbl.value.set_search_parameters.unsafe_as(Proc(UInt8**, Int16, VARIANT*, VARIANT*, HRESULT)).call(pbstrsearchid, bnavtoresults, pvarscope, pvarqueryfile)
  end
  def get_search_id(pbstrsearchid : UInt8**) : HRESULT
    @lpVtbl.value.get_search_id.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrsearchid)
  end
  def get_scope(pvarscope : VARIANT*) : HRESULT
    @lpVtbl.value.get_scope.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvarscope)
  end
  def get_query_file(pvarfile : VARIANT*) : HRESULT
    @lpVtbl.value.get_query_file.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvarfile)
  end
end
struct LibWin32::IWebWizardHost
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def final_back : HRESULT
    @lpVtbl.value.final_back.unsafe_as(Proc(HRESULT)).call
  end
  def final_next : HRESULT
    @lpVtbl.value.final_next.unsafe_as(Proc(HRESULT)).call
  end
  def cancel : HRESULT
    @lpVtbl.value.cancel.unsafe_as(Proc(HRESULT)).call
  end
  def put_caption(bstrcaption : UInt8*) : HRESULT
    @lpVtbl.value.put_caption.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrcaption)
  end
  def get_caption(pbstrcaption : UInt8**) : HRESULT
    @lpVtbl.value.get_caption.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrcaption)
  end
  def put_property(bstrpropertyname : UInt8*, pvproperty : VARIANT*) : HRESULT
    @lpVtbl.value.put_property.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrpropertyname, pvproperty)
  end
  def get_property(bstrpropertyname : UInt8*, pvproperty : VARIANT*) : HRESULT
    @lpVtbl.value.get_property.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrpropertyname, pvproperty)
  end
  def set_wizard_buttons(vfenableback : Int16, vfenablenext : Int16, vflastpage : Int16) : HRESULT
    @lpVtbl.value.set_wizard_buttons.unsafe_as(Proc(Int16, Int16, Int16, HRESULT)).call(vfenableback, vfenablenext, vflastpage)
  end
  def set_header_text(bstrheadertitle : UInt8*, bstrheadersubtitle : UInt8*) : HRESULT
    @lpVtbl.value.set_header_text.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(bstrheadertitle, bstrheadersubtitle)
  end
end
struct LibWin32::IWebWizardHost2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def final_back : HRESULT
    @lpVtbl.value.final_back.unsafe_as(Proc(HRESULT)).call
  end
  def final_next : HRESULT
    @lpVtbl.value.final_next.unsafe_as(Proc(HRESULT)).call
  end
  def cancel : HRESULT
    @lpVtbl.value.cancel.unsafe_as(Proc(HRESULT)).call
  end
  def put_caption(bstrcaption : UInt8*) : HRESULT
    @lpVtbl.value.put_caption.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrcaption)
  end
  def get_caption(pbstrcaption : UInt8**) : HRESULT
    @lpVtbl.value.get_caption.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrcaption)
  end
  def put_property(bstrpropertyname : UInt8*, pvproperty : VARIANT*) : HRESULT
    @lpVtbl.value.put_property.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrpropertyname, pvproperty)
  end
  def get_property(bstrpropertyname : UInt8*, pvproperty : VARIANT*) : HRESULT
    @lpVtbl.value.get_property.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrpropertyname, pvproperty)
  end
  def set_wizard_buttons(vfenableback : Int16, vfenablenext : Int16, vflastpage : Int16) : HRESULT
    @lpVtbl.value.set_wizard_buttons.unsafe_as(Proc(Int16, Int16, Int16, HRESULT)).call(vfenableback, vfenablenext, vflastpage)
  end
  def set_header_text(bstrheadertitle : UInt8*, bstrheadersubtitle : UInt8*) : HRESULT
    @lpVtbl.value.set_header_text.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(bstrheadertitle, bstrheadersubtitle)
  end
  def sign_string(value : UInt8*, signedvalue : UInt8**) : HRESULT
    @lpVtbl.value.sign_string.unsafe_as(Proc(UInt8*, UInt8**, HRESULT)).call(value, signedvalue)
  end
end
struct LibWin32::INewWDEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_info_count(pctinfo : UInt32*) : HRESULT
    @lpVtbl.value.get_type_info_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pctinfo)
  end
  def get_type_info(itinfo : UInt32, lcid : UInt32, pptinfo : ITypeInfo*) : HRESULT
    @lpVtbl.value.get_type_info.unsafe_as(Proc(UInt32, UInt32, ITypeInfo*, HRESULT)).call(itinfo, lcid, pptinfo)
  end
  def get_i_ds_of_names(riid : Guid*, rgsznames : LibC::LPWSTR*, cnames : UInt32, lcid : UInt32, rgdispid : Int32*) : HRESULT
    @lpVtbl.value.get_i_ds_of_names.unsafe_as(Proc(Guid*, LibC::LPWSTR*, UInt32, UInt32, Int32*, HRESULT)).call(riid, rgsznames, cnames, lcid, rgdispid)
  end
  def invoke(dispidmember : Int32, riid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, riid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
  def final_back : HRESULT
    @lpVtbl.value.final_back.unsafe_as(Proc(HRESULT)).call
  end
  def final_next : HRESULT
    @lpVtbl.value.final_next.unsafe_as(Proc(HRESULT)).call
  end
  def cancel : HRESULT
    @lpVtbl.value.cancel.unsafe_as(Proc(HRESULT)).call
  end
  def put_caption(bstrcaption : UInt8*) : HRESULT
    @lpVtbl.value.put_caption.unsafe_as(Proc(UInt8*, HRESULT)).call(bstrcaption)
  end
  def get_caption(pbstrcaption : UInt8**) : HRESULT
    @lpVtbl.value.get_caption.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrcaption)
  end
  def put_property(bstrpropertyname : UInt8*, pvproperty : VARIANT*) : HRESULT
    @lpVtbl.value.put_property.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrpropertyname, pvproperty)
  end
  def get_property(bstrpropertyname : UInt8*, pvproperty : VARIANT*) : HRESULT
    @lpVtbl.value.get_property.unsafe_as(Proc(UInt8*, VARIANT*, HRESULT)).call(bstrpropertyname, pvproperty)
  end
  def set_wizard_buttons(vfenableback : Int16, vfenablenext : Int16, vflastpage : Int16) : HRESULT
    @lpVtbl.value.set_wizard_buttons.unsafe_as(Proc(Int16, Int16, Int16, HRESULT)).call(vfenableback, vfenablenext, vflastpage)
  end
  def set_header_text(bstrheadertitle : UInt8*, bstrheadersubtitle : UInt8*) : HRESULT
    @lpVtbl.value.set_header_text.unsafe_as(Proc(UInt8*, UInt8*, HRESULT)).call(bstrheadertitle, bstrheadersubtitle)
  end
  def passport_authenticate(bstrsigninurl : UInt8*, pvfauthenitcated : Int16*) : HRESULT
    @lpVtbl.value.passport_authenticate.unsafe_as(Proc(UInt8*, Int16*, HRESULT)).call(bstrsigninurl, pvfauthenitcated)
  end
end
struct LibWin32::IAutoComplete
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def init(hwndedit : LibC::HANDLE, punkacl : IUnknown, pwszregkeypath : LibC::LPWSTR, pwszquickcomplete : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.init.unsafe_as(Proc(LibC::HANDLE, IUnknown, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(hwndedit, punkacl, pwszregkeypath, pwszquickcomplete)
  end
  def enable(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
end
struct LibWin32::IAutoComplete2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def init(hwndedit : LibC::HANDLE, punkacl : IUnknown, pwszregkeypath : LibC::LPWSTR, pwszquickcomplete : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.init.unsafe_as(Proc(LibC::HANDLE, IUnknown, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(hwndedit, punkacl, pwszregkeypath, pwszquickcomplete)
  end
  def enable(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
  def set_options(dwflag : UInt32) : HRESULT
    @lpVtbl.value.set_options.unsafe_as(Proc(UInt32, HRESULT)).call(dwflag)
  end
  def get_options(pdwflag : UInt32*) : HRESULT
    @lpVtbl.value.get_options.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflag)
  end
end
struct LibWin32::IEnumACString
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : LibC::LPWSTR*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, LibC::LPWSTR*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumString*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumString*, HRESULT)).call(ppenum)
  end
  def next_item(pszurl : Char*, cchmax : UInt32, pulsortindex : UInt32*) : HRESULT
    @lpVtbl.value.next_item.unsafe_as(Proc(Char*, UInt32, UInt32*, HRESULT)).call(pszurl, cchmax, pulsortindex)
  end
  def set_enum_options(dwoptions : UInt32) : HRESULT
    @lpVtbl.value.set_enum_options.unsafe_as(Proc(UInt32, HRESULT)).call(dwoptions)
  end
  def get_enum_options(pdwoptions : UInt32*) : HRESULT
    @lpVtbl.value.get_enum_options.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwoptions)
  end
end
struct LibWin32::IDataObjectAsyncCapability
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_async_mode(fdoopasync : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_async_mode.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fdoopasync)
  end
  def get_async_mode(pfisopasync : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_async_mode.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfisopasync)
  end
  def start_operation(pbcreserved : IBindCtx) : HRESULT
    @lpVtbl.value.start_operation.unsafe_as(Proc(IBindCtx, HRESULT)).call(pbcreserved)
  end
  def in_operation(pfinasyncop : LibC::BOOL*) : HRESULT
    @lpVtbl.value.in_operation.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pfinasyncop)
  end
  def end_operation(hresult : HRESULT, pbcreserved : IBindCtx, dweffects : UInt32) : HRESULT
    @lpVtbl.value.end_operation.unsafe_as(Proc(HRESULT, IBindCtx, UInt32, HRESULT)).call(hresult, pbcreserved, dweffects)
  end
end
struct LibWin32::IExtractIconA
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_icon_location(uflags : UInt32, psziconfile : UInt8*, cchmax : UInt32, piindex : Int32*, pwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_icon_location.unsafe_as(Proc(UInt32, UInt8*, UInt32, Int32*, UInt32*, HRESULT)).call(uflags, psziconfile, cchmax, piindex, pwflags)
  end
  def extract(pszfile : PSTR, niconindex : UInt32, phiconlarge : HANDLE*, phiconsmall : HANDLE*, niconsize : UInt32) : HRESULT
    @lpVtbl.value.extract.unsafe_as(Proc(PSTR, UInt32, HANDLE*, HANDLE*, UInt32, HRESULT)).call(pszfile, niconindex, phiconlarge, phiconsmall, niconsize)
  end
end
struct LibWin32::IExtractIconW
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_icon_location(uflags : UInt32, psziconfile : Char*, cchmax : UInt32, piindex : Int32*, pwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_icon_location.unsafe_as(Proc(UInt32, Char*, UInt32, Int32*, UInt32*, HRESULT)).call(uflags, psziconfile, cchmax, piindex, pwflags)
  end
  def extract(pszfile : LibC::LPWSTR, niconindex : UInt32, phiconlarge : HANDLE*, phiconsmall : HANDLE*, niconsize : UInt32) : HRESULT
    @lpVtbl.value.extract.unsafe_as(Proc(LibC::LPWSTR, UInt32, HANDLE*, HANDLE*, UInt32, HRESULT)).call(pszfile, niconindex, phiconlarge, phiconsmall, niconsize)
  end
end
struct LibWin32::IShellIconOverlayManager
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_file_overlay_info(pwszpath : LibC::LPWSTR, dwattrib : UInt32, pindex : Int32*, dwflags : UInt32) : HRESULT
    @lpVtbl.value.get_file_overlay_info.unsafe_as(Proc(LibC::LPWSTR, UInt32, Int32*, UInt32, HRESULT)).call(pwszpath, dwattrib, pindex, dwflags)
  end
  def get_reserved_overlay_info(pwszpath : LibC::LPWSTR, dwattrib : UInt32, pindex : Int32*, dwflags : UInt32, ireservedid : Int32) : HRESULT
    @lpVtbl.value.get_reserved_overlay_info.unsafe_as(Proc(LibC::LPWSTR, UInt32, Int32*, UInt32, Int32, HRESULT)).call(pwszpath, dwattrib, pindex, dwflags, ireservedid)
  end
  def refresh_overlay_images(dwflags : UInt32) : HRESULT
    @lpVtbl.value.refresh_overlay_images.unsafe_as(Proc(UInt32, HRESULT)).call(dwflags)
  end
  def load_nonloaded_overlay_identifiers : HRESULT
    @lpVtbl.value.load_nonloaded_overlay_identifiers.unsafe_as(Proc(HRESULT)).call
  end
  def overlay_index_from_image_index(iimage : Int32, piindex : Int32*, fadd : LibC::BOOL) : HRESULT
    @lpVtbl.value.overlay_index_from_image_index.unsafe_as(Proc(Int32, Int32*, LibC::BOOL, HRESULT)).call(iimage, piindex, fadd)
  end
end
struct LibWin32::IShellIconOverlay
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_overlay_index(pidl : ITEMIDLIST*, pindex : Int32*) : HRESULT
    @lpVtbl.value.get_overlay_index.unsafe_as(Proc(ITEMIDLIST*, Int32*, HRESULT)).call(pidl, pindex)
  end
  def get_overlay_icon_index(pidl : ITEMIDLIST*, piconindex : Int32*) : HRESULT
    @lpVtbl.value.get_overlay_icon_index.unsafe_as(Proc(ITEMIDLIST*, Int32*, HRESULT)).call(pidl, piconindex)
  end
end
struct LibWin32::IURLSearchHook
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def translate(pwszsearchurl : Char*, cchbuffersize : UInt32) : HRESULT
    @lpVtbl.value.translate.unsafe_as(Proc(Char*, UInt32, HRESULT)).call(pwszsearchurl, cchbuffersize)
  end
end
struct LibWin32::ISearchContext
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_search_url(pbstrsearchurl : UInt8**) : HRESULT
    @lpVtbl.value.get_search_url.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrsearchurl)
  end
  def get_search_text(pbstrsearchtext : UInt8**) : HRESULT
    @lpVtbl.value.get_search_text.unsafe_as(Proc(UInt8**, HRESULT)).call(pbstrsearchtext)
  end
  def get_search_style(pdwsearchstyle : UInt32*) : HRESULT
    @lpVtbl.value.get_search_style.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwsearchstyle)
  end
end
struct LibWin32::IURLSearchHook2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def translate(pwszsearchurl : Char*, cchbuffersize : UInt32) : HRESULT
    @lpVtbl.value.translate.unsafe_as(Proc(Char*, UInt32, HRESULT)).call(pwszsearchurl, cchbuffersize)
  end
  def translate_with_search_context(pwszsearchurl : Char*, cchbuffersize : UInt32, psearchcontext : ISearchContext) : HRESULT
    @lpVtbl.value.translate_with_search_context.unsafe_as(Proc(Char*, UInt32, ISearchContext, HRESULT)).call(pwszsearchurl, cchbuffersize, psearchcontext)
  end
end
struct LibWin32::IShellDetails
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_details_of(pidl : ITEMIDLIST*, icolumn : UInt32, pdetails : SHELLDETAILS*) : HRESULT
    @lpVtbl.value.get_details_of.unsafe_as(Proc(ITEMIDLIST*, UInt32, SHELLDETAILS*, HRESULT)).call(pidl, icolumn, pdetails)
  end
  def column_click(icolumn : UInt32) : HRESULT
    @lpVtbl.value.column_click.unsafe_as(Proc(UInt32, HRESULT)).call(icolumn)
  end
end
struct LibWin32::IObjMgr
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def append(punk : IUnknown) : HRESULT
    @lpVtbl.value.append.unsafe_as(Proc(IUnknown, HRESULT)).call(punk)
  end
  def remove(punk : IUnknown) : HRESULT
    @lpVtbl.value.remove.unsafe_as(Proc(IUnknown, HRESULT)).call(punk)
  end
end
struct LibWin32::IACList
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def expand(pszexpand : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.expand.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszexpand)
  end
end
struct LibWin32::IACList2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def expand(pszexpand : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.expand.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszexpand)
  end
  def set_options(dwflag : UInt32) : HRESULT
    @lpVtbl.value.set_options.unsafe_as(Proc(UInt32, HRESULT)).call(dwflag)
  end
  def get_options(pdwflag : UInt32*) : HRESULT
    @lpVtbl.value.get_options.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflag)
  end
end
struct LibWin32::IProgressDialog
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def start_progress_dialog(hwndparent : LibC::HANDLE, punkenablemodless : IUnknown, dwflags : UInt32, pvresevered : Void*) : HRESULT
    @lpVtbl.value.start_progress_dialog.unsafe_as(Proc(LibC::HANDLE, IUnknown, UInt32, Void*, HRESULT)).call(hwndparent, punkenablemodless, dwflags, pvresevered)
  end
  def stop_progress_dialog : HRESULT
    @lpVtbl.value.stop_progress_dialog.unsafe_as(Proc(HRESULT)).call
  end
  def set_title(pwztitle : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_title.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pwztitle)
  end
  def set_animation(hinstanimation : HINSTANCE, idanimation : UInt32) : HRESULT
    @lpVtbl.value.set_animation.unsafe_as(Proc(HINSTANCE, UInt32, HRESULT)).call(hinstanimation, idanimation)
  end
  def has_user_cancelled : LibC::BOOL
    @lpVtbl.value.has_user_cancelled.unsafe_as(Proc(LibC::BOOL)).call
  end
  def set_progress(dwcompleted : UInt32, dwtotal : UInt32) : HRESULT
    @lpVtbl.value.set_progress.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwcompleted, dwtotal)
  end
  def set_progress64(ullcompleted : UInt64, ulltotal : UInt64) : HRESULT
    @lpVtbl.value.set_progress64.unsafe_as(Proc(UInt64, UInt64, HRESULT)).call(ullcompleted, ulltotal)
  end
  def set_line(dwlinenum : UInt32, pwzstring : LibC::LPWSTR, fcompactpath : LibC::BOOL, pvresevered : Void*) : HRESULT
    @lpVtbl.value.set_line.unsafe_as(Proc(UInt32, LibC::LPWSTR, LibC::BOOL, Void*, HRESULT)).call(dwlinenum, pwzstring, fcompactpath, pvresevered)
  end
  def set_cancel_msg(pwzcancelmsg : LibC::LPWSTR, pvresevered : Void*) : HRESULT
    @lpVtbl.value.set_cancel_msg.unsafe_as(Proc(LibC::LPWSTR, Void*, HRESULT)).call(pwzcancelmsg, pvresevered)
  end
  def timer(dwtimeraction : UInt32, pvresevered : Void*) : HRESULT
    @lpVtbl.value.timer.unsafe_as(Proc(UInt32, Void*, HRESULT)).call(dwtimeraction, pvresevered)
  end
end
struct LibWin32::IDockingWindowSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def get_border_dw(punkobj : IUnknown, prcborder : RECT*) : HRESULT
    @lpVtbl.value.get_border_dw.unsafe_as(Proc(IUnknown, RECT*, HRESULT)).call(punkobj, prcborder)
  end
  def request_border_space_dw(punkobj : IUnknown, pbw : RECT*) : HRESULT
    @lpVtbl.value.request_border_space_dw.unsafe_as(Proc(IUnknown, RECT*, HRESULT)).call(punkobj, pbw)
  end
  def set_border_space_dw(punkobj : IUnknown, pbw : RECT*) : HRESULT
    @lpVtbl.value.set_border_space_dw.unsafe_as(Proc(IUnknown, RECT*, HRESULT)).call(punkobj, pbw)
  end
end
struct LibWin32::IShellChangeNotify
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_change(levent : Int32, pidl1 : ITEMIDLIST*, pidl2 : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.on_change.unsafe_as(Proc(Int32, ITEMIDLIST*, ITEMIDLIST*, HRESULT)).call(levent, pidl1, pidl2)
  end
end
struct LibWin32::IQueryInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_info_tip(dwflags : QITIPF_FLAGS, ppwsztip : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_info_tip.unsafe_as(Proc(QITIPF_FLAGS, LibC::LPWSTR*, HRESULT)).call(dwflags, ppwsztip)
  end
  def get_info_flags(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_info_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
end
struct LibWin32::IShellFolderViewCB
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def message_sfvcb(umsg : SFVM_MESSAGE_ID, wparam : LibC::UINT_PTR, lparam : LPARAM) : HRESULT
    @lpVtbl.value.message_sfvcb.unsafe_as(Proc(SFVM_MESSAGE_ID, LibC::UINT_PTR, LPARAM, HRESULT)).call(umsg, wparam, lparam)
  end
end
struct LibWin32::IShellFolderView
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def rearrange(lparamsort : LPARAM) : HRESULT
    @lpVtbl.value.rearrange.unsafe_as(Proc(LPARAM, HRESULT)).call(lparamsort)
  end
  def get_arrange_param(plparamsort : LPARAM*) : HRESULT
    @lpVtbl.value.get_arrange_param.unsafe_as(Proc(LPARAM*, HRESULT)).call(plparamsort)
  end
  def arrange_grid : HRESULT
    @lpVtbl.value.arrange_grid.unsafe_as(Proc(HRESULT)).call
  end
  def auto_arrange : HRESULT
    @lpVtbl.value.auto_arrange.unsafe_as(Proc(HRESULT)).call
  end
  def get_auto_arrange : HRESULT
    @lpVtbl.value.get_auto_arrange.unsafe_as(Proc(HRESULT)).call
  end
  def add_object(pidl : ITEMIDLIST*, puitem : UInt32*) : HRESULT
    @lpVtbl.value.add_object.unsafe_as(Proc(ITEMIDLIST*, UInt32*, HRESULT)).call(pidl, puitem)
  end
  def get_object(ppidl : ITEMIDLIST**, uitem : UInt32) : HRESULT
    @lpVtbl.value.get_object.unsafe_as(Proc(ITEMIDLIST**, UInt32, HRESULT)).call(ppidl, uitem)
  end
  def remove_object(pidl : ITEMIDLIST*, puitem : UInt32*) : HRESULT
    @lpVtbl.value.remove_object.unsafe_as(Proc(ITEMIDLIST*, UInt32*, HRESULT)).call(pidl, puitem)
  end
  def get_object_count(pucount : UInt32*) : HRESULT
    @lpVtbl.value.get_object_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pucount)
  end
  def set_object_count(ucount : UInt32, dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_object_count.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(ucount, dwflags)
  end
  def update_object(pidlold : ITEMIDLIST*, pidlnew : ITEMIDLIST*, puitem : UInt32*) : HRESULT
    @lpVtbl.value.update_object.unsafe_as(Proc(ITEMIDLIST*, ITEMIDLIST*, UInt32*, HRESULT)).call(pidlold, pidlnew, puitem)
  end
  def refresh_object(pidl : ITEMIDLIST*, puitem : UInt32*) : HRESULT
    @lpVtbl.value.refresh_object.unsafe_as(Proc(ITEMIDLIST*, UInt32*, HRESULT)).call(pidl, puitem)
  end
  def set_redraw(bredraw : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_redraw.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(bredraw)
  end
  def get_selected_count(puselected : UInt32*) : HRESULT
    @lpVtbl.value.get_selected_count.unsafe_as(Proc(UInt32*, HRESULT)).call(puselected)
  end
  def get_selected_objects(pppidl : ITEMIDLIST***, puitems : UInt32*) : HRESULT
    @lpVtbl.value.get_selected_objects.unsafe_as(Proc(ITEMIDLIST***, UInt32*, HRESULT)).call(pppidl, puitems)
  end
  def is_drop_on_source(pdroptarget : IDropTarget) : HRESULT
    @lpVtbl.value.is_drop_on_source.unsafe_as(Proc(IDropTarget, HRESULT)).call(pdroptarget)
  end
  def get_drag_point(ppt : POINT*) : HRESULT
    @lpVtbl.value.get_drag_point.unsafe_as(Proc(POINT*, HRESULT)).call(ppt)
  end
  def get_drop_point(ppt : POINT*) : HRESULT
    @lpVtbl.value.get_drop_point.unsafe_as(Proc(POINT*, HRESULT)).call(ppt)
  end
  def move_icons(pdataobject : IDataObject) : HRESULT
    @lpVtbl.value.move_icons.unsafe_as(Proc(IDataObject, HRESULT)).call(pdataobject)
  end
  def set_item_pos(pidl : ITEMIDLIST*, ppt : POINT*) : HRESULT
    @lpVtbl.value.set_item_pos.unsafe_as(Proc(ITEMIDLIST*, POINT*, HRESULT)).call(pidl, ppt)
  end
  def is_bk_drop_target(pdroptarget : IDropTarget) : HRESULT
    @lpVtbl.value.is_bk_drop_target.unsafe_as(Proc(IDropTarget, HRESULT)).call(pdroptarget)
  end
  def set_clipboard(bmove : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_clipboard.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(bmove)
  end
  def set_points(pdataobject : IDataObject) : HRESULT
    @lpVtbl.value.set_points.unsafe_as(Proc(IDataObject, HRESULT)).call(pdataobject)
  end
  def get_item_spacing(pspacing : ITEMSPACING*) : HRESULT
    @lpVtbl.value.get_item_spacing.unsafe_as(Proc(ITEMSPACING*, HRESULT)).call(pspacing)
  end
  def set_callback(pnewcb : IShellFolderViewCB, ppoldcb : IShellFolderViewCB*) : HRESULT
    @lpVtbl.value.set_callback.unsafe_as(Proc(IShellFolderViewCB, IShellFolderViewCB*, HRESULT)).call(pnewcb, ppoldcb)
  end
  def select(dwflags : SFVS_SELECT) : HRESULT
    @lpVtbl.value.select.unsafe_as(Proc(SFVS_SELECT, HRESULT)).call(dwflags)
  end
  def query_support(pdwsupport : UInt32*) : HRESULT
    @lpVtbl.value.query_support.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwsupport)
  end
  def set_automation_object(pdisp : IDispatch) : HRESULT
    @lpVtbl.value.set_automation_object.unsafe_as(Proc(IDispatch, HRESULT)).call(pdisp)
  end
end
struct LibWin32::INamedPropertyBag
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def read_property_npb(pszbagname : LibC::LPWSTR, pszpropname : LibC::LPWSTR, pvar : PROPVARIANT*) : HRESULT
    @lpVtbl.value.read_property_npb.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, PROPVARIANT*, HRESULT)).call(pszbagname, pszpropname, pvar)
  end
  def write_property_npb(pszbagname : LibC::LPWSTR, pszpropname : LibC::LPWSTR, pvar : PROPVARIANT*) : HRESULT
    @lpVtbl.value.write_property_npb.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, PROPVARIANT*, HRESULT)).call(pszbagname, pszpropname, pvar)
  end
  def remove_property_npb(pszbagname : LibC::LPWSTR, pszpropname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.remove_property_npb.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(pszbagname, pszpropname)
  end
end
struct LibWin32::INewShortcutHookA
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_referent(pcszreferent : PSTR, hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_referent.unsafe_as(Proc(PSTR, LibC::HANDLE, HRESULT)).call(pcszreferent, hwnd)
  end
  def get_referent(pszreferent : UInt8*, cchreferent : Int32) : HRESULT
    @lpVtbl.value.get_referent.unsafe_as(Proc(UInt8*, Int32, HRESULT)).call(pszreferent, cchreferent)
  end
  def set_folder(pcszfolder : PSTR) : HRESULT
    @lpVtbl.value.set_folder.unsafe_as(Proc(PSTR, HRESULT)).call(pcszfolder)
  end
  def get_folder(pszfolder : UInt8*, cchfolder : Int32) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(UInt8*, Int32, HRESULT)).call(pszfolder, cchfolder)
  end
  def get_name(pszname : UInt8*, cchname : Int32) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(UInt8*, Int32, HRESULT)).call(pszname, cchname)
  end
  def get_extension(pszextension : UInt8*, cchextension : Int32) : HRESULT
    @lpVtbl.value.get_extension.unsafe_as(Proc(UInt8*, Int32, HRESULT)).call(pszextension, cchextension)
  end
end
struct LibWin32::INewShortcutHookW
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_referent(pcszreferent : LibC::LPWSTR, hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_referent.unsafe_as(Proc(LibC::LPWSTR, LibC::HANDLE, HRESULT)).call(pcszreferent, hwnd)
  end
  def get_referent(pszreferent : Char*, cchreferent : Int32) : HRESULT
    @lpVtbl.value.get_referent.unsafe_as(Proc(Char*, Int32, HRESULT)).call(pszreferent, cchreferent)
  end
  def set_folder(pcszfolder : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_folder.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pcszfolder)
  end
  def get_folder(pszfolder : Char*, cchfolder : Int32) : HRESULT
    @lpVtbl.value.get_folder.unsafe_as(Proc(Char*, Int32, HRESULT)).call(pszfolder, cchfolder)
  end
  def get_name(pszname : Char*, cchname : Int32) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(Char*, Int32, HRESULT)).call(pszname, cchname)
  end
  def get_extension(pszextension : Char*, cchextension : Int32) : HRESULT
    @lpVtbl.value.get_extension.unsafe_as(Proc(Char*, Int32, HRESULT)).call(pszextension, cchextension)
  end
end
struct LibWin32::ICopyHookA
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def copy_callback(hwnd : LibC::HANDLE, wfunc : UInt32, wflags : UInt32, pszsrcfile : PSTR, dwsrcattribs : UInt32, pszdestfile : PSTR, dwdestattribs : UInt32) : UInt32
    @lpVtbl.value.copy_callback.unsafe_as(Proc(LibC::HANDLE, UInt32, UInt32, PSTR, UInt32, PSTR, UInt32, UInt32)).call(hwnd, wfunc, wflags, pszsrcfile, dwsrcattribs, pszdestfile, dwdestattribs)
  end
end
struct LibWin32::ICopyHookW
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def copy_callback(hwnd : LibC::HANDLE, wfunc : UInt32, wflags : UInt32, pszsrcfile : LibC::LPWSTR, dwsrcattribs : UInt32, pszdestfile : LibC::LPWSTR, dwdestattribs : UInt32) : UInt32
    @lpVtbl.value.copy_callback.unsafe_as(Proc(LibC::HANDLE, UInt32, UInt32, LibC::LPWSTR, UInt32, LibC::LPWSTR, UInt32, UInt32)).call(hwnd, wfunc, wflags, pszsrcfile, dwsrcattribs, pszdestfile, dwdestattribs)
  end
end
struct LibWin32::ICurrentWorkingDirectory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_directory(pwzpath : Char*, cchsize : UInt32) : HRESULT
    @lpVtbl.value.get_directory.unsafe_as(Proc(Char*, UInt32, HRESULT)).call(pwzpath, cchsize)
  end
  def set_directory(pwzpath : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_directory.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pwzpath)
  end
end
struct LibWin32::IDockingWindowFrame
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def add_toolbar(punksrc : IUnknown, pwszitem : LibC::LPWSTR, dwaddflags : UInt32) : HRESULT
    @lpVtbl.value.add_toolbar.unsafe_as(Proc(IUnknown, LibC::LPWSTR, UInt32, HRESULT)).call(punksrc, pwszitem, dwaddflags)
  end
  def remove_toolbar(punksrc : IUnknown, dwremoveflags : UInt32) : HRESULT
    @lpVtbl.value.remove_toolbar.unsafe_as(Proc(IUnknown, UInt32, HRESULT)).call(punksrc, dwremoveflags)
  end
  def find_toolbar(pwszitem : LibC::LPWSTR, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.find_toolbar.unsafe_as(Proc(LibC::LPWSTR, Guid*, Void**, HRESULT)).call(pwszitem, riid, ppv)
  end
end
struct LibWin32::IThumbnailCapture
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def capture_thumbnail(pmaxsize : SIZE*, phtmldoc2 : IUnknown, phbmthumbnail : HBITMAP*) : HRESULT
    @lpVtbl.value.capture_thumbnail.unsafe_as(Proc(SIZE*, IUnknown, HBITMAP*, HRESULT)).call(pmaxsize, phtmldoc2, phbmthumbnail)
  end
end
struct LibWin32::IShellFolderBand
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize_sfb(psf : IShellFolder, pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.initialize_sfb.unsafe_as(Proc(IShellFolder, ITEMIDLIST*, HRESULT)).call(psf, pidl)
  end
  def set_band_info_sfb(pbi : BANDINFOSFB*) : HRESULT
    @lpVtbl.value.set_band_info_sfb.unsafe_as(Proc(BANDINFOSFB*, HRESULT)).call(pbi)
  end
  def get_band_info_sfb(pbi : BANDINFOSFB*) : HRESULT
    @lpVtbl.value.get_band_info_sfb.unsafe_as(Proc(BANDINFOSFB*, HRESULT)).call(pbi)
  end
end
struct LibWin32::IDeskBarClient
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_window(phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.get_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwnd)
  end
  def context_sensitive_help(fentermode : LibC::BOOL) : HRESULT
    @lpVtbl.value.context_sensitive_help.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fentermode)
  end
  def set_desk_bar_site(punksite : IUnknown) : HRESULT
    @lpVtbl.value.set_desk_bar_site.unsafe_as(Proc(IUnknown, HRESULT)).call(punksite)
  end
  def set_mode_dbc(dwmode : UInt32) : HRESULT
    @lpVtbl.value.set_mode_dbc.unsafe_as(Proc(UInt32, HRESULT)).call(dwmode)
  end
  def ui_activate_dbc(dwstate : UInt32) : HRESULT
    @lpVtbl.value.ui_activate_dbc.unsafe_as(Proc(UInt32, HRESULT)).call(dwstate)
  end
  def get_size(dwwhich : UInt32, prc : RECT*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(UInt32, RECT*, HRESULT)).call(dwwhich, prc)
  end
end
struct LibWin32::IColumnProvider
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(psci : SHCOLUMNINIT*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(SHCOLUMNINIT*, HRESULT)).call(psci)
  end
  def get_column_info(dwindex : UInt32, psci : SHCOLUMNINFO*) : HRESULT
    @lpVtbl.value.get_column_info.unsafe_as(Proc(UInt32, SHCOLUMNINFO*, HRESULT)).call(dwindex, psci)
  end
  def get_item_data(pscid : PROPERTYKEY*, pscd : SHCOLUMNDATA*, pvardata : VARIANT*) : HRESULT
    @lpVtbl.value.get_item_data.unsafe_as(Proc(PROPERTYKEY*, SHCOLUMNDATA*, VARIANT*, HRESULT)).call(pscid, pscd, pvardata)
  end
end
struct LibWin32::IDocViewSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def on_set_title(pvtitle : VARIANT*) : HRESULT
    @lpVtbl.value.on_set_title.unsafe_as(Proc(VARIANT*, HRESULT)).call(pvtitle)
  end
end
struct LibWin32::IInitializeObject
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IBanneredBar
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_icon_size(iicon : UInt32) : HRESULT
    @lpVtbl.value.set_icon_size.unsafe_as(Proc(UInt32, HRESULT)).call(iicon)
  end
  def get_icon_size(piicon : UInt32*) : HRESULT
    @lpVtbl.value.get_icon_size.unsafe_as(Proc(UInt32*, HRESULT)).call(piicon)
  end
  def set_bitmap(hbitmap : HBITMAP) : HRESULT
    @lpVtbl.value.set_bitmap.unsafe_as(Proc(HBITMAP, HRESULT)).call(hbitmap)
  end
  def get_bitmap(phbitmap : HBITMAP*) : HRESULT
    @lpVtbl.value.get_bitmap.unsafe_as(Proc(HBITMAP*, HRESULT)).call(phbitmap)
  end
end
struct LibWin32::IQueryAssociations
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def init(flags : UInt32, pszassoc : LibC::LPWSTR, hkprogid : HKEY, hwnd : LibC::HANDLE) : HRESULT
    @lpVtbl.value.init.unsafe_as(Proc(UInt32, LibC::LPWSTR, HKEY, LibC::HANDLE, HRESULT)).call(flags, pszassoc, hkprogid, hwnd)
  end
  def get_string(flags : UInt32, str : ASSOCSTR, pszextra : LibC::LPWSTR, pszout : Char*, pcchout : UInt32*) : HRESULT
    @lpVtbl.value.get_string.unsafe_as(Proc(UInt32, ASSOCSTR, LibC::LPWSTR, Char*, UInt32*, HRESULT)).call(flags, str, pszextra, pszout, pcchout)
  end
  def get_key(flags : UInt32, key : ASSOCKEY, pszextra : LibC::LPWSTR, phkeyout : HKEY*) : HRESULT
    @lpVtbl.value.get_key.unsafe_as(Proc(UInt32, ASSOCKEY, LibC::LPWSTR, HKEY*, HRESULT)).call(flags, key, pszextra, phkeyout)
  end
  def get_data(flags : UInt32, data : ASSOCDATA, pszextra : LibC::LPWSTR, pvout : Void*, pcbout : UInt32*) : HRESULT
    @lpVtbl.value.get_data.unsafe_as(Proc(UInt32, ASSOCDATA, LibC::LPWSTR, Void*, UInt32*, HRESULT)).call(flags, data, pszextra, pvout, pcbout)
  end
  def get_enum(flags : UInt32, assocenum : ASSOCENUM, pszextra : LibC::LPWSTR, riid : Guid*, ppvout : Void**) : HRESULT
    @lpVtbl.value.get_enum.unsafe_as(Proc(UInt32, ASSOCENUM, LibC::LPWSTR, Guid*, Void**, HRESULT)).call(flags, assocenum, pszextra, riid, ppvout)
  end
end
struct LibWin32::IShellApp
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_app_info(pai : APPINFODATA*) : HRESULT
    @lpVtbl.value.get_app_info.unsafe_as(Proc(APPINFODATA*, HRESULT)).call(pai)
  end
  def get_possible_actions(pdwactions : UInt32*) : HRESULT
    @lpVtbl.value.get_possible_actions.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwactions)
  end
  def get_slow_app_info(psaid : SLOWAPPINFO*) : HRESULT
    @lpVtbl.value.get_slow_app_info.unsafe_as(Proc(SLOWAPPINFO*, HRESULT)).call(psaid)
  end
  def get_cached_slow_app_info(psaid : SLOWAPPINFO*) : HRESULT
    @lpVtbl.value.get_cached_slow_app_info.unsafe_as(Proc(SLOWAPPINFO*, HRESULT)).call(psaid)
  end
  def is_installed : HRESULT
    @lpVtbl.value.is_installed.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IPublishedApp
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_app_info(pai : APPINFODATA*) : HRESULT
    @lpVtbl.value.get_app_info.unsafe_as(Proc(APPINFODATA*, HRESULT)).call(pai)
  end
  def get_possible_actions(pdwactions : UInt32*) : HRESULT
    @lpVtbl.value.get_possible_actions.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwactions)
  end
  def get_slow_app_info(psaid : SLOWAPPINFO*) : HRESULT
    @lpVtbl.value.get_slow_app_info.unsafe_as(Proc(SLOWAPPINFO*, HRESULT)).call(psaid)
  end
  def get_cached_slow_app_info(psaid : SLOWAPPINFO*) : HRESULT
    @lpVtbl.value.get_cached_slow_app_info.unsafe_as(Proc(SLOWAPPINFO*, HRESULT)).call(psaid)
  end
  def is_installed : HRESULT
    @lpVtbl.value.is_installed.unsafe_as(Proc(HRESULT)).call
  end
  def install(pstinstall : SYSTEMTIME*) : HRESULT
    @lpVtbl.value.install.unsafe_as(Proc(SYSTEMTIME*, HRESULT)).call(pstinstall)
  end
  def get_published_app_info(ppai : PUBAPPINFO*) : HRESULT
    @lpVtbl.value.get_published_app_info.unsafe_as(Proc(PUBAPPINFO*, HRESULT)).call(ppai)
  end
  def unschedule : HRESULT
    @lpVtbl.value.unschedule.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IPublishedApp2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_app_info(pai : APPINFODATA*) : HRESULT
    @lpVtbl.value.get_app_info.unsafe_as(Proc(APPINFODATA*, HRESULT)).call(pai)
  end
  def get_possible_actions(pdwactions : UInt32*) : HRESULT
    @lpVtbl.value.get_possible_actions.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwactions)
  end
  def get_slow_app_info(psaid : SLOWAPPINFO*) : HRESULT
    @lpVtbl.value.get_slow_app_info.unsafe_as(Proc(SLOWAPPINFO*, HRESULT)).call(psaid)
  end
  def get_cached_slow_app_info(psaid : SLOWAPPINFO*) : HRESULT
    @lpVtbl.value.get_cached_slow_app_info.unsafe_as(Proc(SLOWAPPINFO*, HRESULT)).call(psaid)
  end
  def is_installed : HRESULT
    @lpVtbl.value.is_installed.unsafe_as(Proc(HRESULT)).call
  end
  def install(pstinstall : SYSTEMTIME*) : HRESULT
    @lpVtbl.value.install.unsafe_as(Proc(SYSTEMTIME*, HRESULT)).call(pstinstall)
  end
  def get_published_app_info(ppai : PUBAPPINFO*) : HRESULT
    @lpVtbl.value.get_published_app_info.unsafe_as(Proc(PUBAPPINFO*, HRESULT)).call(ppai)
  end
  def unschedule : HRESULT
    @lpVtbl.value.unschedule.unsafe_as(Proc(HRESULT)).call
  end
  def install2(pstinstall : SYSTEMTIME*, hwndparent : LibC::HANDLE) : HRESULT
    @lpVtbl.value.install2.unsafe_as(Proc(SYSTEMTIME*, LibC::HANDLE, HRESULT)).call(pstinstall, hwndparent)
  end
end
struct LibWin32::IEnumPublishedApps
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(pia : IPublishedApp*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(IPublishedApp*, HRESULT)).call(pia)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IAppPublisher
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_number_of_categories(pdwcat : UInt32*) : HRESULT
    @lpVtbl.value.get_number_of_categories.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwcat)
  end
  def get_categories(pappcategorylist : APPCATEGORYINFOLIST*) : HRESULT
    @lpVtbl.value.get_categories.unsafe_as(Proc(APPCATEGORYINFOLIST*, HRESULT)).call(pappcategorylist)
  end
  def get_number_of_apps(pdwapps : UInt32*) : HRESULT
    @lpVtbl.value.get_number_of_apps.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwapps)
  end
  def enum_apps(pappcategoryid : Guid*, ppepa : IEnumPublishedApps*) : HRESULT
    @lpVtbl.value.enum_apps.unsafe_as(Proc(Guid*, IEnumPublishedApps*, HRESULT)).call(pappcategoryid, ppepa)
  end
end
struct LibWin32::ICredentialProviderCredential
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def advise(pcpce : ICredentialProviderCredentialEvents) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(ICredentialProviderCredentialEvents, HRESULT)).call(pcpce)
  end
  def un_advise : HRESULT
    @lpVtbl.value.un_advise.unsafe_as(Proc(HRESULT)).call
  end
  def set_selected(pbautologon : LibC::BOOL*) : HRESULT
    @lpVtbl.value.set_selected.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pbautologon)
  end
  def set_deselected : HRESULT
    @lpVtbl.value.set_deselected.unsafe_as(Proc(HRESULT)).call
  end
  def get_field_state(dwfieldid : UInt32, pcpfs : CREDENTIAL_PROVIDER_FIELD_STATE*, pcpfis : CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*) : HRESULT
    @lpVtbl.value.get_field_state.unsafe_as(Proc(UInt32, CREDENTIAL_PROVIDER_FIELD_STATE*, CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*, HRESULT)).call(dwfieldid, pcpfs, pcpfis)
  end
  def get_string_value(dwfieldid : UInt32, ppsz : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_string_value.unsafe_as(Proc(UInt32, LibC::LPWSTR*, HRESULT)).call(dwfieldid, ppsz)
  end
  def get_bitmap_value(dwfieldid : UInt32, phbmp : HBITMAP*) : HRESULT
    @lpVtbl.value.get_bitmap_value.unsafe_as(Proc(UInt32, HBITMAP*, HRESULT)).call(dwfieldid, phbmp)
  end
  def get_checkbox_value(dwfieldid : UInt32, pbchecked : LibC::BOOL*, ppszlabel : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_checkbox_value.unsafe_as(Proc(UInt32, LibC::BOOL*, LibC::LPWSTR*, HRESULT)).call(dwfieldid, pbchecked, ppszlabel)
  end
  def get_submit_button_value(dwfieldid : UInt32, pdwadjacentto : UInt32*) : HRESULT
    @lpVtbl.value.get_submit_button_value.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(dwfieldid, pdwadjacentto)
  end
  def get_combo_box_value_count(dwfieldid : UInt32, pcitems : UInt32*, pdwselecteditem : UInt32*) : HRESULT
    @lpVtbl.value.get_combo_box_value_count.unsafe_as(Proc(UInt32, UInt32*, UInt32*, HRESULT)).call(dwfieldid, pcitems, pdwselecteditem)
  end
  def get_combo_box_value_at(dwfieldid : UInt32, dwitem : UInt32, ppszitem : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_combo_box_value_at.unsafe_as(Proc(UInt32, UInt32, LibC::LPWSTR*, HRESULT)).call(dwfieldid, dwitem, ppszitem)
  end
  def set_string_value(dwfieldid : UInt32, psz : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_string_value.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(dwfieldid, psz)
  end
  def set_checkbox_value(dwfieldid : UInt32, bchecked : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_checkbox_value.unsafe_as(Proc(UInt32, LibC::BOOL, HRESULT)).call(dwfieldid, bchecked)
  end
  def set_combo_box_selected_value(dwfieldid : UInt32, dwselecteditem : UInt32) : HRESULT
    @lpVtbl.value.set_combo_box_selected_value.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwfieldid, dwselecteditem)
  end
  def command_link_clicked(dwfieldid : UInt32) : HRESULT
    @lpVtbl.value.command_link_clicked.unsafe_as(Proc(UInt32, HRESULT)).call(dwfieldid)
  end
  def get_serialization(pcpgsr : CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, pcpcs : CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, ppszoptionalstatustext : LibC::LPWSTR*, pcpsioptionalstatusicon : CREDENTIAL_PROVIDER_STATUS_ICON*) : HRESULT
    @lpVtbl.value.get_serialization.unsafe_as(Proc(CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, LibC::LPWSTR*, CREDENTIAL_PROVIDER_STATUS_ICON*, HRESULT)).call(pcpgsr, pcpcs, ppszoptionalstatustext, pcpsioptionalstatusicon)
  end
  def report_result(ntsstatus : NTSTATUS, ntssubstatus : NTSTATUS, ppszoptionalstatustext : LibC::LPWSTR*, pcpsioptionalstatusicon : CREDENTIAL_PROVIDER_STATUS_ICON*) : HRESULT
    @lpVtbl.value.report_result.unsafe_as(Proc(NTSTATUS, NTSTATUS, LibC::LPWSTR*, CREDENTIAL_PROVIDER_STATUS_ICON*, HRESULT)).call(ntsstatus, ntssubstatus, ppszoptionalstatustext, pcpsioptionalstatusicon)
  end
end
struct LibWin32::IQueryContinueWithStatus
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def query_continue : HRESULT
    @lpVtbl.value.query_continue.unsafe_as(Proc(HRESULT)).call
  end
  def set_status_message(psz : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_status_message.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(psz)
  end
end
struct LibWin32::IConnectableCredentialProviderCredential
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def advise(pcpce : ICredentialProviderCredentialEvents) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(ICredentialProviderCredentialEvents, HRESULT)).call(pcpce)
  end
  def un_advise : HRESULT
    @lpVtbl.value.un_advise.unsafe_as(Proc(HRESULT)).call
  end
  def set_selected(pbautologon : LibC::BOOL*) : HRESULT
    @lpVtbl.value.set_selected.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pbautologon)
  end
  def set_deselected : HRESULT
    @lpVtbl.value.set_deselected.unsafe_as(Proc(HRESULT)).call
  end
  def get_field_state(dwfieldid : UInt32, pcpfs : CREDENTIAL_PROVIDER_FIELD_STATE*, pcpfis : CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*) : HRESULT
    @lpVtbl.value.get_field_state.unsafe_as(Proc(UInt32, CREDENTIAL_PROVIDER_FIELD_STATE*, CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*, HRESULT)).call(dwfieldid, pcpfs, pcpfis)
  end
  def get_string_value(dwfieldid : UInt32, ppsz : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_string_value.unsafe_as(Proc(UInt32, LibC::LPWSTR*, HRESULT)).call(dwfieldid, ppsz)
  end
  def get_bitmap_value(dwfieldid : UInt32, phbmp : HBITMAP*) : HRESULT
    @lpVtbl.value.get_bitmap_value.unsafe_as(Proc(UInt32, HBITMAP*, HRESULT)).call(dwfieldid, phbmp)
  end
  def get_checkbox_value(dwfieldid : UInt32, pbchecked : LibC::BOOL*, ppszlabel : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_checkbox_value.unsafe_as(Proc(UInt32, LibC::BOOL*, LibC::LPWSTR*, HRESULT)).call(dwfieldid, pbchecked, ppszlabel)
  end
  def get_submit_button_value(dwfieldid : UInt32, pdwadjacentto : UInt32*) : HRESULT
    @lpVtbl.value.get_submit_button_value.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(dwfieldid, pdwadjacentto)
  end
  def get_combo_box_value_count(dwfieldid : UInt32, pcitems : UInt32*, pdwselecteditem : UInt32*) : HRESULT
    @lpVtbl.value.get_combo_box_value_count.unsafe_as(Proc(UInt32, UInt32*, UInt32*, HRESULT)).call(dwfieldid, pcitems, pdwselecteditem)
  end
  def get_combo_box_value_at(dwfieldid : UInt32, dwitem : UInt32, ppszitem : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_combo_box_value_at.unsafe_as(Proc(UInt32, UInt32, LibC::LPWSTR*, HRESULT)).call(dwfieldid, dwitem, ppszitem)
  end
  def set_string_value(dwfieldid : UInt32, psz : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_string_value.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(dwfieldid, psz)
  end
  def set_checkbox_value(dwfieldid : UInt32, bchecked : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_checkbox_value.unsafe_as(Proc(UInt32, LibC::BOOL, HRESULT)).call(dwfieldid, bchecked)
  end
  def set_combo_box_selected_value(dwfieldid : UInt32, dwselecteditem : UInt32) : HRESULT
    @lpVtbl.value.set_combo_box_selected_value.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwfieldid, dwselecteditem)
  end
  def command_link_clicked(dwfieldid : UInt32) : HRESULT
    @lpVtbl.value.command_link_clicked.unsafe_as(Proc(UInt32, HRESULT)).call(dwfieldid)
  end
  def get_serialization(pcpgsr : CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, pcpcs : CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, ppszoptionalstatustext : LibC::LPWSTR*, pcpsioptionalstatusicon : CREDENTIAL_PROVIDER_STATUS_ICON*) : HRESULT
    @lpVtbl.value.get_serialization.unsafe_as(Proc(CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, LibC::LPWSTR*, CREDENTIAL_PROVIDER_STATUS_ICON*, HRESULT)).call(pcpgsr, pcpcs, ppszoptionalstatustext, pcpsioptionalstatusicon)
  end
  def report_result(ntsstatus : NTSTATUS, ntssubstatus : NTSTATUS, ppszoptionalstatustext : LibC::LPWSTR*, pcpsioptionalstatusicon : CREDENTIAL_PROVIDER_STATUS_ICON*) : HRESULT
    @lpVtbl.value.report_result.unsafe_as(Proc(NTSTATUS, NTSTATUS, LibC::LPWSTR*, CREDENTIAL_PROVIDER_STATUS_ICON*, HRESULT)).call(ntsstatus, ntssubstatus, ppszoptionalstatustext, pcpsioptionalstatusicon)
  end
  def connect(pqcws : IQueryContinueWithStatus) : HRESULT
    @lpVtbl.value.connect.unsafe_as(Proc(IQueryContinueWithStatus, HRESULT)).call(pqcws)
  end
  def disconnect : HRESULT
    @lpVtbl.value.disconnect.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ICredentialProviderCredentialEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_field_state(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, cpfs : CREDENTIAL_PROVIDER_FIELD_STATE) : HRESULT
    @lpVtbl.value.set_field_state.unsafe_as(Proc(ICredentialProviderCredential, UInt32, CREDENTIAL_PROVIDER_FIELD_STATE, HRESULT)).call(pcpc, dwfieldid, cpfs)
  end
  def set_field_interactive_state(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, cpfis : CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE) : HRESULT
    @lpVtbl.value.set_field_interactive_state.unsafe_as(Proc(ICredentialProviderCredential, UInt32, CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE, HRESULT)).call(pcpc, dwfieldid, cpfis)
  end
  def set_field_string(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, psz : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_field_string.unsafe_as(Proc(ICredentialProviderCredential, UInt32, LibC::LPWSTR, HRESULT)).call(pcpc, dwfieldid, psz)
  end
  def set_field_checkbox(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, bchecked : LibC::BOOL, pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_field_checkbox.unsafe_as(Proc(ICredentialProviderCredential, UInt32, LibC::BOOL, LibC::LPWSTR, HRESULT)).call(pcpc, dwfieldid, bchecked, pszlabel)
  end
  def set_field_bitmap(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, hbmp : HBITMAP) : HRESULT
    @lpVtbl.value.set_field_bitmap.unsafe_as(Proc(ICredentialProviderCredential, UInt32, HBITMAP, HRESULT)).call(pcpc, dwfieldid, hbmp)
  end
  def set_field_combo_box_selected_item(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, dwselecteditem : UInt32) : HRESULT
    @lpVtbl.value.set_field_combo_box_selected_item.unsafe_as(Proc(ICredentialProviderCredential, UInt32, UInt32, HRESULT)).call(pcpc, dwfieldid, dwselecteditem)
  end
  def delete_field_combo_box_item(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, dwitem : UInt32) : HRESULT
    @lpVtbl.value.delete_field_combo_box_item.unsafe_as(Proc(ICredentialProviderCredential, UInt32, UInt32, HRESULT)).call(pcpc, dwfieldid, dwitem)
  end
  def append_field_combo_box_item(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, pszitem : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.append_field_combo_box_item.unsafe_as(Proc(ICredentialProviderCredential, UInt32, LibC::LPWSTR, HRESULT)).call(pcpc, dwfieldid, pszitem)
  end
  def set_field_submit_button(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, dwadjacentto : UInt32) : HRESULT
    @lpVtbl.value.set_field_submit_button.unsafe_as(Proc(ICredentialProviderCredential, UInt32, UInt32, HRESULT)).call(pcpc, dwfieldid, dwadjacentto)
  end
  def on_creating_window(phwndowner : HANDLE*) : HRESULT
    @lpVtbl.value.on_creating_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwndowner)
  end
end
struct LibWin32::ICredentialProvider
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_usage_scenario(cpus : CREDENTIAL_PROVIDER_USAGE_SCENARIO, dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_usage_scenario.unsafe_as(Proc(CREDENTIAL_PROVIDER_USAGE_SCENARIO, UInt32, HRESULT)).call(cpus, dwflags)
  end
  def set_serialization(pcpcs : CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*) : HRESULT
    @lpVtbl.value.set_serialization.unsafe_as(Proc(CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, HRESULT)).call(pcpcs)
  end
  def advise(pcpe : ICredentialProviderEvents, upadvisecontext : LibC::UINT_PTR) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(ICredentialProviderEvents, LibC::UINT_PTR, HRESULT)).call(pcpe, upadvisecontext)
  end
  def un_advise : HRESULT
    @lpVtbl.value.un_advise.unsafe_as(Proc(HRESULT)).call
  end
  def get_field_descriptor_count(pdwcount : UInt32*) : HRESULT
    @lpVtbl.value.get_field_descriptor_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwcount)
  end
  def get_field_descriptor_at(dwindex : UInt32, ppcpfd : CREDENTIAL_PROVIDER_FIELD_DESCRIPTOR**) : HRESULT
    @lpVtbl.value.get_field_descriptor_at.unsafe_as(Proc(UInt32, CREDENTIAL_PROVIDER_FIELD_DESCRIPTOR**, HRESULT)).call(dwindex, ppcpfd)
  end
  def get_credential_count(pdwcount : UInt32*, pdwdefault : UInt32*, pbautologonwithdefault : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_credential_count.unsafe_as(Proc(UInt32*, UInt32*, LibC::BOOL*, HRESULT)).call(pdwcount, pdwdefault, pbautologonwithdefault)
  end
  def get_credential_at(dwindex : UInt32, ppcpc : ICredentialProviderCredential*) : HRESULT
    @lpVtbl.value.get_credential_at.unsafe_as(Proc(UInt32, ICredentialProviderCredential*, HRESULT)).call(dwindex, ppcpc)
  end
end
struct LibWin32::ICredentialProviderEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def credentials_changed(upadvisecontext : LibC::UINT_PTR) : HRESULT
    @lpVtbl.value.credentials_changed.unsafe_as(Proc(LibC::UINT_PTR, HRESULT)).call(upadvisecontext)
  end
end
struct LibWin32::ICredentialProviderFilter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def filter(cpus : CREDENTIAL_PROVIDER_USAGE_SCENARIO, dwflags : UInt32, rgclsidproviders : Guid*, rgballow : LibC::BOOL*, cproviders : UInt32) : HRESULT
    @lpVtbl.value.filter.unsafe_as(Proc(CREDENTIAL_PROVIDER_USAGE_SCENARIO, UInt32, Guid*, LibC::BOOL*, UInt32, HRESULT)).call(cpus, dwflags, rgclsidproviders, rgballow, cproviders)
  end
  def update_remote_credential(pcpcsin : CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, pcpcsout : CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*) : HRESULT
    @lpVtbl.value.update_remote_credential.unsafe_as(Proc(CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, HRESULT)).call(pcpcsin, pcpcsout)
  end
end
struct LibWin32::ICredentialProviderCredential2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def advise(pcpce : ICredentialProviderCredentialEvents) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(ICredentialProviderCredentialEvents, HRESULT)).call(pcpce)
  end
  def un_advise : HRESULT
    @lpVtbl.value.un_advise.unsafe_as(Proc(HRESULT)).call
  end
  def set_selected(pbautologon : LibC::BOOL*) : HRESULT
    @lpVtbl.value.set_selected.unsafe_as(Proc(LibC::BOOL*, HRESULT)).call(pbautologon)
  end
  def set_deselected : HRESULT
    @lpVtbl.value.set_deselected.unsafe_as(Proc(HRESULT)).call
  end
  def get_field_state(dwfieldid : UInt32, pcpfs : CREDENTIAL_PROVIDER_FIELD_STATE*, pcpfis : CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*) : HRESULT
    @lpVtbl.value.get_field_state.unsafe_as(Proc(UInt32, CREDENTIAL_PROVIDER_FIELD_STATE*, CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE*, HRESULT)).call(dwfieldid, pcpfs, pcpfis)
  end
  def get_string_value(dwfieldid : UInt32, ppsz : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_string_value.unsafe_as(Proc(UInt32, LibC::LPWSTR*, HRESULT)).call(dwfieldid, ppsz)
  end
  def get_bitmap_value(dwfieldid : UInt32, phbmp : HBITMAP*) : HRESULT
    @lpVtbl.value.get_bitmap_value.unsafe_as(Proc(UInt32, HBITMAP*, HRESULT)).call(dwfieldid, phbmp)
  end
  def get_checkbox_value(dwfieldid : UInt32, pbchecked : LibC::BOOL*, ppszlabel : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_checkbox_value.unsafe_as(Proc(UInt32, LibC::BOOL*, LibC::LPWSTR*, HRESULT)).call(dwfieldid, pbchecked, ppszlabel)
  end
  def get_submit_button_value(dwfieldid : UInt32, pdwadjacentto : UInt32*) : HRESULT
    @lpVtbl.value.get_submit_button_value.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(dwfieldid, pdwadjacentto)
  end
  def get_combo_box_value_count(dwfieldid : UInt32, pcitems : UInt32*, pdwselecteditem : UInt32*) : HRESULT
    @lpVtbl.value.get_combo_box_value_count.unsafe_as(Proc(UInt32, UInt32*, UInt32*, HRESULT)).call(dwfieldid, pcitems, pdwselecteditem)
  end
  def get_combo_box_value_at(dwfieldid : UInt32, dwitem : UInt32, ppszitem : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_combo_box_value_at.unsafe_as(Proc(UInt32, UInt32, LibC::LPWSTR*, HRESULT)).call(dwfieldid, dwitem, ppszitem)
  end
  def set_string_value(dwfieldid : UInt32, psz : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_string_value.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(dwfieldid, psz)
  end
  def set_checkbox_value(dwfieldid : UInt32, bchecked : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_checkbox_value.unsafe_as(Proc(UInt32, LibC::BOOL, HRESULT)).call(dwfieldid, bchecked)
  end
  def set_combo_box_selected_value(dwfieldid : UInt32, dwselecteditem : UInt32) : HRESULT
    @lpVtbl.value.set_combo_box_selected_value.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwfieldid, dwselecteditem)
  end
  def command_link_clicked(dwfieldid : UInt32) : HRESULT
    @lpVtbl.value.command_link_clicked.unsafe_as(Proc(UInt32, HRESULT)).call(dwfieldid)
  end
  def get_serialization(pcpgsr : CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, pcpcs : CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, ppszoptionalstatustext : LibC::LPWSTR*, pcpsioptionalstatusicon : CREDENTIAL_PROVIDER_STATUS_ICON*) : HRESULT
    @lpVtbl.value.get_serialization.unsafe_as(Proc(CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE*, CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION*, LibC::LPWSTR*, CREDENTIAL_PROVIDER_STATUS_ICON*, HRESULT)).call(pcpgsr, pcpcs, ppszoptionalstatustext, pcpsioptionalstatusicon)
  end
  def report_result(ntsstatus : NTSTATUS, ntssubstatus : NTSTATUS, ppszoptionalstatustext : LibC::LPWSTR*, pcpsioptionalstatusicon : CREDENTIAL_PROVIDER_STATUS_ICON*) : HRESULT
    @lpVtbl.value.report_result.unsafe_as(Proc(NTSTATUS, NTSTATUS, LibC::LPWSTR*, CREDENTIAL_PROVIDER_STATUS_ICON*, HRESULT)).call(ntsstatus, ntssubstatus, ppszoptionalstatustext, pcpsioptionalstatusicon)
  end
  def get_user_sid(sid : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_user_sid.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(sid)
  end
end
struct LibWin32::ICredentialProviderCredentialWithFieldOptions
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_field_options(fieldid : UInt32, options : CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS*) : HRESULT
    @lpVtbl.value.get_field_options.unsafe_as(Proc(UInt32, CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS*, HRESULT)).call(fieldid, options)
  end
end
struct LibWin32::ICredentialProviderCredentialEvents2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_field_state(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, cpfs : CREDENTIAL_PROVIDER_FIELD_STATE) : HRESULT
    @lpVtbl.value.set_field_state.unsafe_as(Proc(ICredentialProviderCredential, UInt32, CREDENTIAL_PROVIDER_FIELD_STATE, HRESULT)).call(pcpc, dwfieldid, cpfs)
  end
  def set_field_interactive_state(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, cpfis : CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE) : HRESULT
    @lpVtbl.value.set_field_interactive_state.unsafe_as(Proc(ICredentialProviderCredential, UInt32, CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE, HRESULT)).call(pcpc, dwfieldid, cpfis)
  end
  def set_field_string(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, psz : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_field_string.unsafe_as(Proc(ICredentialProviderCredential, UInt32, LibC::LPWSTR, HRESULT)).call(pcpc, dwfieldid, psz)
  end
  def set_field_checkbox(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, bchecked : LibC::BOOL, pszlabel : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_field_checkbox.unsafe_as(Proc(ICredentialProviderCredential, UInt32, LibC::BOOL, LibC::LPWSTR, HRESULT)).call(pcpc, dwfieldid, bchecked, pszlabel)
  end
  def set_field_bitmap(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, hbmp : HBITMAP) : HRESULT
    @lpVtbl.value.set_field_bitmap.unsafe_as(Proc(ICredentialProviderCredential, UInt32, HBITMAP, HRESULT)).call(pcpc, dwfieldid, hbmp)
  end
  def set_field_combo_box_selected_item(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, dwselecteditem : UInt32) : HRESULT
    @lpVtbl.value.set_field_combo_box_selected_item.unsafe_as(Proc(ICredentialProviderCredential, UInt32, UInt32, HRESULT)).call(pcpc, dwfieldid, dwselecteditem)
  end
  def delete_field_combo_box_item(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, dwitem : UInt32) : HRESULT
    @lpVtbl.value.delete_field_combo_box_item.unsafe_as(Proc(ICredentialProviderCredential, UInt32, UInt32, HRESULT)).call(pcpc, dwfieldid, dwitem)
  end
  def append_field_combo_box_item(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, pszitem : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.append_field_combo_box_item.unsafe_as(Proc(ICredentialProviderCredential, UInt32, LibC::LPWSTR, HRESULT)).call(pcpc, dwfieldid, pszitem)
  end
  def set_field_submit_button(pcpc : ICredentialProviderCredential, dwfieldid : UInt32, dwadjacentto : UInt32) : HRESULT
    @lpVtbl.value.set_field_submit_button.unsafe_as(Proc(ICredentialProviderCredential, UInt32, UInt32, HRESULT)).call(pcpc, dwfieldid, dwadjacentto)
  end
  def on_creating_window(phwndowner : HANDLE*) : HRESULT
    @lpVtbl.value.on_creating_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwndowner)
  end
  def begin_field_updates : HRESULT
    @lpVtbl.value.begin_field_updates.unsafe_as(Proc(HRESULT)).call
  end
  def end_field_updates : HRESULT
    @lpVtbl.value.end_field_updates.unsafe_as(Proc(HRESULT)).call
  end
  def set_field_options(credential : ICredentialProviderCredential, fieldid : UInt32, options : CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS) : HRESULT
    @lpVtbl.value.set_field_options.unsafe_as(Proc(ICredentialProviderCredential, UInt32, CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS, HRESULT)).call(credential, fieldid, options)
  end
end
struct LibWin32::ICredentialProviderUser
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_sid(sid : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_sid.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(sid)
  end
  def get_provider_id(providerid : Guid*) : HRESULT
    @lpVtbl.value.get_provider_id.unsafe_as(Proc(Guid*, HRESULT)).call(providerid)
  end
  def get_string_value(key : PROPERTYKEY*, stringvalue : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_string_value.unsafe_as(Proc(PROPERTYKEY*, LibC::LPWSTR*, HRESULT)).call(key, stringvalue)
  end
  def get_value(key : PROPERTYKEY*, value : PROPVARIANT*) : HRESULT
    @lpVtbl.value.get_value.unsafe_as(Proc(PROPERTYKEY*, PROPVARIANT*, HRESULT)).call(key, value)
  end
end
struct LibWin32::ICredentialProviderUserArray
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_provider_filter(guidprovidertofilterto : Guid*) : HRESULT
    @lpVtbl.value.set_provider_filter.unsafe_as(Proc(Guid*, HRESULT)).call(guidprovidertofilterto)
  end
  def get_account_options(credentialprovideraccountoptions : CREDENTIAL_PROVIDER_ACCOUNT_OPTIONS*) : HRESULT
    @lpVtbl.value.get_account_options.unsafe_as(Proc(CREDENTIAL_PROVIDER_ACCOUNT_OPTIONS*, HRESULT)).call(credentialprovideraccountoptions)
  end
  def get_count(usercount : UInt32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(UInt32*, HRESULT)).call(usercount)
  end
  def get_at(userindex : UInt32, user : ICredentialProviderUser*) : HRESULT
    @lpVtbl.value.get_at.unsafe_as(Proc(UInt32, ICredentialProviderUser*, HRESULT)).call(userindex, user)
  end
end
struct LibWin32::ICredentialProviderSetUserArray
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_user_array(users : ICredentialProviderUserArray) : HRESULT
    @lpVtbl.value.set_user_array.unsafe_as(Proc(ICredentialProviderUserArray, HRESULT)).call(users)
  end
end
struct LibWin32::ISyncMgrHandlerCollection
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_handler_enumerator(ppenum : IEnumString*) : HRESULT
    @lpVtbl.value.get_handler_enumerator.unsafe_as(Proc(IEnumString*, HRESULT)).call(ppenum)
  end
  def bind_to_handler(pszhandlerid : LibC::LPWSTR, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.bind_to_handler.unsafe_as(Proc(LibC::LPWSTR, Guid*, Void**, HRESULT)).call(pszhandlerid, riid, ppv)
  end
end
struct LibWin32::ISyncMgrHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_name(ppszname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszname)
  end
  def get_handler_info(pphandlerinfo : ISyncMgrHandlerInfo*) : HRESULT
    @lpVtbl.value.get_handler_info.unsafe_as(Proc(ISyncMgrHandlerInfo*, HRESULT)).call(pphandlerinfo)
  end
  def get_object(rguidobjectid : Guid*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_object.unsafe_as(Proc(Guid*, Guid*, Void**, HRESULT)).call(rguidobjectid, riid, ppv)
  end
  def get_capabilities(pmcapabilities : SYNCMGR_HANDLER_CAPABILITIES*) : HRESULT
    @lpVtbl.value.get_capabilities.unsafe_as(Proc(SYNCMGR_HANDLER_CAPABILITIES*, HRESULT)).call(pmcapabilities)
  end
  def get_policies(pmpolicies : SYNCMGR_HANDLER_POLICIES*) : HRESULT
    @lpVtbl.value.get_policies.unsafe_as(Proc(SYNCMGR_HANDLER_POLICIES*, HRESULT)).call(pmpolicies)
  end
  def activate(factivate : LibC::BOOL) : HRESULT
    @lpVtbl.value.activate.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(factivate)
  end
  def enable(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
  def synchronize(ppszitemids : LibC::LPWSTR*, citems : UInt32, hwndowner : LibC::HANDLE, psessioncreator : ISyncMgrSessionCreator, punk : IUnknown) : HRESULT
    @lpVtbl.value.synchronize.unsafe_as(Proc(LibC::LPWSTR*, UInt32, LibC::HANDLE, ISyncMgrSessionCreator, IUnknown, HRESULT)).call(ppszitemids, citems, hwndowner, psessioncreator, punk)
  end
end
struct LibWin32::ISyncMgrHandlerInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type(pntype : SYNCMGR_HANDLER_TYPE*) : HRESULT
    @lpVtbl.value.get_type.unsafe_as(Proc(SYNCMGR_HANDLER_TYPE*, HRESULT)).call(pntype)
  end
  def get_type_label(ppsztypelabel : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_type_label.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppsztypelabel)
  end
  def get_comment(ppszcomment : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_comment.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszcomment)
  end
  def get_last_sync_time(pftlastsync : FILETIME*) : HRESULT
    @lpVtbl.value.get_last_sync_time.unsafe_as(Proc(FILETIME*, HRESULT)).call(pftlastsync)
  end
  def is_active : HRESULT
    @lpVtbl.value.is_active.unsafe_as(Proc(HRESULT)).call
  end
  def is_enabled : HRESULT
    @lpVtbl.value.is_enabled.unsafe_as(Proc(HRESULT)).call
  end
  def is_connected : HRESULT
    @lpVtbl.value.is_connected.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ISyncMgrSyncItemContainer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_sync_item(pszitemid : LibC::LPWSTR, ppitem : ISyncMgrSyncItem*) : HRESULT
    @lpVtbl.value.get_sync_item.unsafe_as(Proc(LibC::LPWSTR, ISyncMgrSyncItem*, HRESULT)).call(pszitemid, ppitem)
  end
  def get_sync_item_enumerator(ppenum : IEnumSyncMgrSyncItems*) : HRESULT
    @lpVtbl.value.get_sync_item_enumerator.unsafe_as(Proc(IEnumSyncMgrSyncItems*, HRESULT)).call(ppenum)
  end
  def get_sync_item_count(pcitems : UInt32*) : HRESULT
    @lpVtbl.value.get_sync_item_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pcitems)
  end
end
struct LibWin32::ISyncMgrSyncItem
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_item_id(ppszitemid : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_item_id.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszitemid)
  end
  def get_name(ppszname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszname)
  end
  def get_item_info(ppiteminfo : ISyncMgrSyncItemInfo*) : HRESULT
    @lpVtbl.value.get_item_info.unsafe_as(Proc(ISyncMgrSyncItemInfo*, HRESULT)).call(ppiteminfo)
  end
  def get_object(rguidobjectid : Guid*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_object.unsafe_as(Proc(Guid*, Guid*, Void**, HRESULT)).call(rguidobjectid, riid, ppv)
  end
  def get_capabilities(pmcapabilities : SYNCMGR_ITEM_CAPABILITIES*) : HRESULT
    @lpVtbl.value.get_capabilities.unsafe_as(Proc(SYNCMGR_ITEM_CAPABILITIES*, HRESULT)).call(pmcapabilities)
  end
  def get_policies(pmpolicies : SYNCMGR_ITEM_POLICIES*) : HRESULT
    @lpVtbl.value.get_policies.unsafe_as(Proc(SYNCMGR_ITEM_POLICIES*, HRESULT)).call(pmpolicies)
  end
  def enable(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
  def delete : HRESULT
    @lpVtbl.value.delete.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ISyncMgrSyncItemInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_type_label(ppsztypelabel : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_type_label.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppsztypelabel)
  end
  def get_comment(ppszcomment : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_comment.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszcomment)
  end
  def get_last_sync_time(pftlastsync : FILETIME*) : HRESULT
    @lpVtbl.value.get_last_sync_time.unsafe_as(Proc(FILETIME*, HRESULT)).call(pftlastsync)
  end
  def is_enabled : HRESULT
    @lpVtbl.value.is_enabled.unsafe_as(Proc(HRESULT)).call
  end
  def is_connected : HRESULT
    @lpVtbl.value.is_connected.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IEnumSyncMgrSyncItems
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : ISyncMgrSyncItem*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, ISyncMgrSyncItem*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumSyncMgrSyncItems*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumSyncMgrSyncItems*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::ISyncMgrSessionCreator
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_session(pszhandlerid : LibC::LPWSTR, ppszitemids : LibC::LPWSTR*, citems : UInt32, ppcallback : ISyncMgrSyncCallback*) : HRESULT
    @lpVtbl.value.create_session.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR*, UInt32, ISyncMgrSyncCallback*, HRESULT)).call(pszhandlerid, ppszitemids, citems, ppcallback)
  end
end
struct LibWin32::ISyncMgrSyncCallback
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def report_progress(pszitemid : LibC::LPWSTR, pszprogresstext : LibC::LPWSTR, nstatus : SYNCMGR_PROGRESS_STATUS, ucurrentstep : UInt32, umaxstep : UInt32, pncancelrequest : SYNCMGR_CANCEL_REQUEST*) : HRESULT
    @lpVtbl.value.report_progress.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, SYNCMGR_PROGRESS_STATUS, UInt32, UInt32, SYNCMGR_CANCEL_REQUEST*, HRESULT)).call(pszitemid, pszprogresstext, nstatus, ucurrentstep, umaxstep, pncancelrequest)
  end
  def set_handler_progress_text(pszprogresstext : LibC::LPWSTR, pncancelrequest : SYNCMGR_CANCEL_REQUEST*) : HRESULT
    @lpVtbl.value.set_handler_progress_text.unsafe_as(Proc(LibC::LPWSTR, SYNCMGR_CANCEL_REQUEST*, HRESULT)).call(pszprogresstext, pncancelrequest)
  end
  def report_event(pszitemid : LibC::LPWSTR, nlevel : SYNCMGR_EVENT_LEVEL, nflags : SYNCMGR_EVENT_FLAGS, pszname : LibC::LPWSTR, pszdescription : LibC::LPWSTR, pszlinktext : LibC::LPWSTR, pszlinkreference : LibC::LPWSTR, pszcontext : LibC::LPWSTR, pguideventid : Guid*) : HRESULT
    @lpVtbl.value.report_event.unsafe_as(Proc(LibC::LPWSTR, SYNCMGR_EVENT_LEVEL, SYNCMGR_EVENT_FLAGS, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, LibC::LPWSTR, Guid*, HRESULT)).call(pszitemid, nlevel, nflags, pszname, pszdescription, pszlinktext, pszlinkreference, pszcontext, pguideventid)
  end
  def can_continue(pszitemid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.can_continue.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszitemid)
  end
  def query_for_additional_items(ppenumitemids : IEnumString*, ppenumpunks : IEnumUnknown*) : HRESULT
    @lpVtbl.value.query_for_additional_items.unsafe_as(Proc(IEnumString*, IEnumUnknown*, HRESULT)).call(ppenumitemids, ppenumpunks)
  end
  def add_item_to_session(pszitemid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.add_item_to_session.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszitemid)
  end
  def add_i_unknown_to_session(punk : IUnknown) : HRESULT
    @lpVtbl.value.add_i_unknown_to_session.unsafe_as(Proc(IUnknown, HRESULT)).call(punk)
  end
  def propose_item(pnewitem : ISyncMgrSyncItem) : HRESULT
    @lpVtbl.value.propose_item.unsafe_as(Proc(ISyncMgrSyncItem, HRESULT)).call(pnewitem)
  end
  def commit_item(pszitemid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.commit_item.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszitemid)
  end
  def report_manual_sync : HRESULT
    @lpVtbl.value.report_manual_sync.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ISyncMgrUIOperation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def run(hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.run.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndowner)
  end
end
struct LibWin32::ISyncMgrEventLinkUIOperation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def run(hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.run.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndowner)
  end
  def init(rguideventid : Guid*, pevent : ISyncMgrEvent) : HRESULT
    @lpVtbl.value.init.unsafe_as(Proc(Guid*, ISyncMgrEvent, HRESULT)).call(rguideventid, pevent)
  end
end
struct LibWin32::ISyncMgrScheduleWizardUIOperation
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def run(hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.run.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndowner)
  end
  def init_wizard(pszhandlerid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.init_wizard.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszhandlerid)
  end
end
struct LibWin32::ISyncMgrSyncResult
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def result(nstatus : SYNCMGR_PROGRESS_STATUS, cerror : UInt32, cconflicts : UInt32) : HRESULT
    @lpVtbl.value.result.unsafe_as(Proc(SYNCMGR_PROGRESS_STATUS, UInt32, UInt32, HRESULT)).call(nstatus, cerror, cconflicts)
  end
end
struct LibWin32::ISyncMgrControl
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def start_handler_sync(pszhandlerid : LibC::LPWSTR, hwndowner : LibC::HANDLE, punk : IUnknown, nsynccontrolflags : SYNCMGR_SYNC_CONTROL_FLAGS, presult : ISyncMgrSyncResult) : HRESULT
    @lpVtbl.value.start_handler_sync.unsafe_as(Proc(LibC::LPWSTR, LibC::HANDLE, IUnknown, SYNCMGR_SYNC_CONTROL_FLAGS, ISyncMgrSyncResult, HRESULT)).call(pszhandlerid, hwndowner, punk, nsynccontrolflags, presult)
  end
  def start_item_sync(pszhandlerid : LibC::LPWSTR, ppszitemids : LibC::LPWSTR*, citems : UInt32, hwndowner : LibC::HANDLE, punk : IUnknown, nsynccontrolflags : SYNCMGR_SYNC_CONTROL_FLAGS, presult : ISyncMgrSyncResult) : HRESULT
    @lpVtbl.value.start_item_sync.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR*, UInt32, LibC::HANDLE, IUnknown, SYNCMGR_SYNC_CONTROL_FLAGS, ISyncMgrSyncResult, HRESULT)).call(pszhandlerid, ppszitemids, citems, hwndowner, punk, nsynccontrolflags, presult)
  end
  def start_sync_all(hwndowner : LibC::HANDLE) : HRESULT
    @lpVtbl.value.start_sync_all.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndowner)
  end
  def stop_handler_sync(pszhandlerid : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.stop_handler_sync.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pszhandlerid)
  end
  def stop_item_sync(pszhandlerid : LibC::LPWSTR, ppszitemids : LibC::LPWSTR*, citems : UInt32) : HRESULT
    @lpVtbl.value.stop_item_sync.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR*, UInt32, HRESULT)).call(pszhandlerid, ppszitemids, citems)
  end
  def stop_sync_all : HRESULT
    @lpVtbl.value.stop_sync_all.unsafe_as(Proc(HRESULT)).call
  end
  def update_handler_collection(rclsidcollectionid : Guid*, ncontrolflags : SYNCMGR_CONTROL_FLAGS) : HRESULT
    @lpVtbl.value.update_handler_collection.unsafe_as(Proc(Guid*, SYNCMGR_CONTROL_FLAGS, HRESULT)).call(rclsidcollectionid, ncontrolflags)
  end
  def update_handler(pszhandlerid : LibC::LPWSTR, ncontrolflags : SYNCMGR_CONTROL_FLAGS) : HRESULT
    @lpVtbl.value.update_handler.unsafe_as(Proc(LibC::LPWSTR, SYNCMGR_CONTROL_FLAGS, HRESULT)).call(pszhandlerid, ncontrolflags)
  end
  def update_item(pszhandlerid : LibC::LPWSTR, pszitemid : LibC::LPWSTR, ncontrolflags : SYNCMGR_CONTROL_FLAGS) : HRESULT
    @lpVtbl.value.update_item.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, SYNCMGR_CONTROL_FLAGS, HRESULT)).call(pszhandlerid, pszitemid, ncontrolflags)
  end
  def update_events(pszhandlerid : LibC::LPWSTR, pszitemid : LibC::LPWSTR, ncontrolflags : SYNCMGR_CONTROL_FLAGS) : HRESULT
    @lpVtbl.value.update_events.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, SYNCMGR_CONTROL_FLAGS, HRESULT)).call(pszhandlerid, pszitemid, ncontrolflags)
  end
  def update_conflict(pszhandlerid : LibC::LPWSTR, pszitemid : LibC::LPWSTR, pconflict : ISyncMgrConflict, nreason : SYNCMGR_UPDATE_REASON) : HRESULT
    @lpVtbl.value.update_conflict.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, ISyncMgrConflict, SYNCMGR_UPDATE_REASON, HRESULT)).call(pszhandlerid, pszitemid, pconflict, nreason)
  end
  def update_conflicts(pszhandlerid : LibC::LPWSTR, pszitemid : LibC::LPWSTR, ncontrolflags : SYNCMGR_CONTROL_FLAGS) : HRESULT
    @lpVtbl.value.update_conflicts.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, SYNCMGR_CONTROL_FLAGS, HRESULT)).call(pszhandlerid, pszitemid, ncontrolflags)
  end
  def activate_handler(factivate : LibC::BOOL, pszhandlerid : LibC::LPWSTR, hwndowner : LibC::HANDLE, ncontrolflags : SYNCMGR_CONTROL_FLAGS) : HRESULT
    @lpVtbl.value.activate_handler.unsafe_as(Proc(LibC::BOOL, LibC::LPWSTR, LibC::HANDLE, SYNCMGR_CONTROL_FLAGS, HRESULT)).call(factivate, pszhandlerid, hwndowner, ncontrolflags)
  end
  def enable_handler(fenable : LibC::BOOL, pszhandlerid : LibC::LPWSTR, hwndowner : LibC::HANDLE, ncontrolflags : SYNCMGR_CONTROL_FLAGS) : HRESULT
    @lpVtbl.value.enable_handler.unsafe_as(Proc(LibC::BOOL, LibC::LPWSTR, LibC::HANDLE, SYNCMGR_CONTROL_FLAGS, HRESULT)).call(fenable, pszhandlerid, hwndowner, ncontrolflags)
  end
  def enable_item(fenable : LibC::BOOL, pszhandlerid : LibC::LPWSTR, pszitemid : LibC::LPWSTR, hwndowner : LibC::HANDLE, ncontrolflags : SYNCMGR_CONTROL_FLAGS) : HRESULT
    @lpVtbl.value.enable_item.unsafe_as(Proc(LibC::BOOL, LibC::LPWSTR, LibC::LPWSTR, LibC::HANDLE, SYNCMGR_CONTROL_FLAGS, HRESULT)).call(fenable, pszhandlerid, pszitemid, hwndowner, ncontrolflags)
  end
end
struct LibWin32::ISyncMgrEventStore
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_event_enumerator(ppenum : IEnumSyncMgrEvents*) : HRESULT
    @lpVtbl.value.get_event_enumerator.unsafe_as(Proc(IEnumSyncMgrEvents*, HRESULT)).call(ppenum)
  end
  def get_event_count(pcevents : UInt32*) : HRESULT
    @lpVtbl.value.get_event_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pcevents)
  end
  def get_event(rguideventid : Guid*, ppevent : ISyncMgrEvent*) : HRESULT
    @lpVtbl.value.get_event.unsafe_as(Proc(Guid*, ISyncMgrEvent*, HRESULT)).call(rguideventid, ppevent)
  end
  def remove_event(pguideventids : Guid*, cevents : UInt32) : HRESULT
    @lpVtbl.value.remove_event.unsafe_as(Proc(Guid*, UInt32, HRESULT)).call(pguideventids, cevents)
  end
end
struct LibWin32::ISyncMgrEvent
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_event_id(pguideventid : Guid*) : HRESULT
    @lpVtbl.value.get_event_id.unsafe_as(Proc(Guid*, HRESULT)).call(pguideventid)
  end
  def get_handler_id(ppszhandlerid : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_handler_id.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszhandlerid)
  end
  def get_item_id(ppszitemid : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_item_id.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszitemid)
  end
  def get_level(pnlevel : SYNCMGR_EVENT_LEVEL*) : HRESULT
    @lpVtbl.value.get_level.unsafe_as(Proc(SYNCMGR_EVENT_LEVEL*, HRESULT)).call(pnlevel)
  end
  def get_flags(pnflags : SYNCMGR_EVENT_FLAGS*) : HRESULT
    @lpVtbl.value.get_flags.unsafe_as(Proc(SYNCMGR_EVENT_FLAGS*, HRESULT)).call(pnflags)
  end
  def get_time(pfcreationtime : FILETIME*) : HRESULT
    @lpVtbl.value.get_time.unsafe_as(Proc(FILETIME*, HRESULT)).call(pfcreationtime)
  end
  def get_name(ppszname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszname)
  end
  def get_description(ppszdescription : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_description.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszdescription)
  end
  def get_link_text(ppszlinktext : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_link_text.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszlinktext)
  end
  def get_link_reference(ppszlinkreference : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_link_reference.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszlinkreference)
  end
  def get_context(ppszcontext : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_context.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszcontext)
  end
end
struct LibWin32::IEnumSyncMgrEvents
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : ISyncMgrEvent*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, ISyncMgrEvent*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumSyncMgrEvents*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumSyncMgrEvents*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::ISyncMgrConflictStore
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def enum_conflicts(pszhandlerid : LibC::LPWSTR, pszitemid : LibC::LPWSTR, ppenum : IEnumSyncMgrConflict*) : HRESULT
    @lpVtbl.value.enum_conflicts.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, IEnumSyncMgrConflict*, HRESULT)).call(pszhandlerid, pszitemid, ppenum)
  end
  def bind_to_conflict(pconflictidinfo : SYNCMGR_CONFLICT_ID_INFO*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.bind_to_conflict.unsafe_as(Proc(SYNCMGR_CONFLICT_ID_INFO*, Guid*, Void**, HRESULT)).call(pconflictidinfo, riid, ppv)
  end
  def remove_conflicts(rgconflictidinfo : SYNCMGR_CONFLICT_ID_INFO*, cconflicts : UInt32) : HRESULT
    @lpVtbl.value.remove_conflicts.unsafe_as(Proc(SYNCMGR_CONFLICT_ID_INFO*, UInt32, HRESULT)).call(rgconflictidinfo, cconflicts)
  end
  def get_count(pszhandlerid : LibC::LPWSTR, pszitemid : LibC::LPWSTR, pnconflicts : UInt32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, UInt32*, HRESULT)).call(pszhandlerid, pszitemid, pnconflicts)
  end
end
struct LibWin32::IEnumSyncMgrConflict
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : ISyncMgrConflict*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, ISyncMgrConflict*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumSyncMgrConflict*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumSyncMgrConflict*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::ISyncMgrConflict
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_property(propkey : PROPERTYKEY*, ppropvar : PROPVARIANT*) : HRESULT
    @lpVtbl.value.get_property.unsafe_as(Proc(PROPERTYKEY*, PROPVARIANT*, HRESULT)).call(propkey, ppropvar)
  end
  def get_conflict_id_info(pconflictidinfo : SYNCMGR_CONFLICT_ID_INFO*) : HRESULT
    @lpVtbl.value.get_conflict_id_info.unsafe_as(Proc(SYNCMGR_CONFLICT_ID_INFO*, HRESULT)).call(pconflictidinfo)
  end
  def get_items_array(pparray : ISyncMgrConflictItems*) : HRESULT
    @lpVtbl.value.get_items_array.unsafe_as(Proc(ISyncMgrConflictItems*, HRESULT)).call(pparray)
  end
  def resolve(presolveinfo : ISyncMgrConflictResolveInfo) : HRESULT
    @lpVtbl.value.resolve.unsafe_as(Proc(ISyncMgrConflictResolveInfo, HRESULT)).call(presolveinfo)
  end
  def get_resolution_handler(riid : Guid*, ppvresolutionhandler : Void**) : HRESULT
    @lpVtbl.value.get_resolution_handler.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvresolutionhandler)
  end
end
struct LibWin32::ISyncMgrResolutionHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def query_abilities(pdwabilities : UInt32*) : HRESULT
    @lpVtbl.value.query_abilities.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwabilities)
  end
  def keep_other(psiother : IShellItem, pfeedback : SYNCMGR_RESOLUTION_FEEDBACK*) : HRESULT
    @lpVtbl.value.keep_other.unsafe_as(Proc(IShellItem, SYNCMGR_RESOLUTION_FEEDBACK*, HRESULT)).call(psiother, pfeedback)
  end
  def keep_recent(pfeedback : SYNCMGR_RESOLUTION_FEEDBACK*) : HRESULT
    @lpVtbl.value.keep_recent.unsafe_as(Proc(SYNCMGR_RESOLUTION_FEEDBACK*, HRESULT)).call(pfeedback)
  end
  def remove_from_sync_set(pfeedback : SYNCMGR_RESOLUTION_FEEDBACK*) : HRESULT
    @lpVtbl.value.remove_from_sync_set.unsafe_as(Proc(SYNCMGR_RESOLUTION_FEEDBACK*, HRESULT)).call(pfeedback)
  end
  def keep_items(parray : ISyncMgrConflictResolutionItems, pfeedback : SYNCMGR_RESOLUTION_FEEDBACK*) : HRESULT
    @lpVtbl.value.keep_items.unsafe_as(Proc(ISyncMgrConflictResolutionItems, SYNCMGR_RESOLUTION_FEEDBACK*, HRESULT)).call(parray, pfeedback)
  end
end
struct LibWin32::ISyncMgrConflictPresenter
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def present_conflict(pconflict : ISyncMgrConflict, presolveinfo : ISyncMgrConflictResolveInfo) : HRESULT
    @lpVtbl.value.present_conflict.unsafe_as(Proc(ISyncMgrConflict, ISyncMgrConflictResolveInfo, HRESULT)).call(pconflict, presolveinfo)
  end
end
struct LibWin32::ISyncMgrConflictResolveInfo
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_iteration_info(pncurrentconflict : UInt32*, pcconflicts : UInt32*, pcremainingforapplytoall : UInt32*) : HRESULT
    @lpVtbl.value.get_iteration_info.unsafe_as(Proc(UInt32*, UInt32*, UInt32*, HRESULT)).call(pncurrentconflict, pcconflicts, pcremainingforapplytoall)
  end
  def get_presenter_next_step(pnpresenternextstep : SYNCMGR_PRESENTER_NEXT_STEP*) : HRESULT
    @lpVtbl.value.get_presenter_next_step.unsafe_as(Proc(SYNCMGR_PRESENTER_NEXT_STEP*, HRESULT)).call(pnpresenternextstep)
  end
  def get_presenter_choice(pnpresenterchoice : SYNCMGR_PRESENTER_CHOICE*, pfapplytoall : LibC::BOOL*) : HRESULT
    @lpVtbl.value.get_presenter_choice.unsafe_as(Proc(SYNCMGR_PRESENTER_CHOICE*, LibC::BOOL*, HRESULT)).call(pnpresenterchoice, pfapplytoall)
  end
  def get_item_choice_count(pcchoices : UInt32*) : HRESULT
    @lpVtbl.value.get_item_choice_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pcchoices)
  end
  def get_item_choice(ichoice : UInt32, pichoiceindex : UInt32*) : HRESULT
    @lpVtbl.value.get_item_choice.unsafe_as(Proc(UInt32, UInt32*, HRESULT)).call(ichoice, pichoiceindex)
  end
  def set_presenter_next_step(npresenternextstep : SYNCMGR_PRESENTER_NEXT_STEP) : HRESULT
    @lpVtbl.value.set_presenter_next_step.unsafe_as(Proc(SYNCMGR_PRESENTER_NEXT_STEP, HRESULT)).call(npresenternextstep)
  end
  def set_presenter_choice(npresenterchoice : SYNCMGR_PRESENTER_CHOICE, fapplytoall : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_presenter_choice.unsafe_as(Proc(SYNCMGR_PRESENTER_CHOICE, LibC::BOOL, HRESULT)).call(npresenterchoice, fapplytoall)
  end
  def set_item_choices(prgiconflictitemindexes : UInt32*, cchoices : UInt32) : HRESULT
    @lpVtbl.value.set_item_choices.unsafe_as(Proc(UInt32*, UInt32, HRESULT)).call(prgiconflictitemindexes, cchoices)
  end
end
struct LibWin32::ISyncMgrConflictFolder
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_conflict_id_list(pconflict : ISyncMgrConflict, ppidlconflict : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_conflict_id_list.unsafe_as(Proc(ISyncMgrConflict, ITEMIDLIST**, HRESULT)).call(pconflict, ppidlconflict)
  end
end
struct LibWin32::ISyncMgrConflictItems
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_count(pcount : UInt32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pcount)
  end
  def get_item(iindex : UInt32, piteminfo : CONFIRM_CONFLICT_ITEM*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(UInt32, CONFIRM_CONFLICT_ITEM*, HRESULT)).call(iindex, piteminfo)
  end
end
struct LibWin32::ISyncMgrConflictResolutionItems
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_count(pcount : UInt32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pcount)
  end
  def get_item(iindex : UInt32, piteminfo : CONFIRM_CONFLICT_RESULT_INFO*) : HRESULT
    @lpVtbl.value.get_item.unsafe_as(Proc(UInt32, CONFIRM_CONFLICT_RESULT_INFO*, HRESULT)).call(iindex, piteminfo)
  end
end
struct LibWin32::IInputPanelConfiguration
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def enable_focus_tracking : HRESULT
    @lpVtbl.value.enable_focus_tracking.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IInputPanelInvocationConfiguration
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def require_touch_in_edit_control : HRESULT
    @lpVtbl.value.require_touch_in_edit_control.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ISharedBitmap
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_shared_bitmap(phbm : HBITMAP*) : HRESULT
    @lpVtbl.value.get_shared_bitmap.unsafe_as(Proc(HBITMAP*, HRESULT)).call(phbm)
  end
  def get_size(psize : SIZE*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(SIZE*, HRESULT)).call(psize)
  end
  def get_format(pat : WTS_ALPHATYPE*) : HRESULT
    @lpVtbl.value.get_format.unsafe_as(Proc(WTS_ALPHATYPE*, HRESULT)).call(pat)
  end
  def initialize_bitmap(hbm : HBITMAP, wtsat : WTS_ALPHATYPE) : HRESULT
    @lpVtbl.value.initialize_bitmap.unsafe_as(Proc(HBITMAP, WTS_ALPHATYPE, HRESULT)).call(hbm, wtsat)
  end
  def detach(phbm : HBITMAP*) : HRESULT
    @lpVtbl.value.detach.unsafe_as(Proc(HBITMAP*, HRESULT)).call(phbm)
  end
end
struct LibWin32::IThumbnailCache
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_thumbnail(pshellitem : IShellItem, cxyrequestedthumbsize : UInt32, flags : WTS_FLAGS, ppvthumb : ISharedBitmap*, poutflags : WTS_CACHEFLAGS*, pthumbnailid : WTS_THUMBNAILID*) : HRESULT
    @lpVtbl.value.get_thumbnail.unsafe_as(Proc(IShellItem, UInt32, WTS_FLAGS, ISharedBitmap*, WTS_CACHEFLAGS*, WTS_THUMBNAILID*, HRESULT)).call(pshellitem, cxyrequestedthumbsize, flags, ppvthumb, poutflags, pthumbnailid)
  end
  def get_thumbnail_by_id(thumbnailid : WTS_THUMBNAILID, cxyrequestedthumbsize : UInt32, ppvthumb : ISharedBitmap*, poutflags : WTS_CACHEFLAGS*) : HRESULT
    @lpVtbl.value.get_thumbnail_by_id.unsafe_as(Proc(WTS_THUMBNAILID, UInt32, ISharedBitmap*, WTS_CACHEFLAGS*, HRESULT)).call(thumbnailid, cxyrequestedthumbsize, ppvthumb, poutflags)
  end
end
struct LibWin32::IThumbnailProvider
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_thumbnail(cx : UInt32, phbmp : HBITMAP*, pdwalpha : WTS_ALPHATYPE*) : HRESULT
    @lpVtbl.value.get_thumbnail.unsafe_as(Proc(UInt32, HBITMAP*, WTS_ALPHATYPE*, HRESULT)).call(cx, phbmp, pdwalpha)
  end
end
struct LibWin32::IThumbnailSettings
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_context(dwcontext : WTS_CONTEXTFLAGS) : HRESULT
    @lpVtbl.value.set_context.unsafe_as(Proc(WTS_CONTEXTFLAGS, HRESULT)).call(dwcontext)
  end
end
struct LibWin32::IThumbnailCachePrimer
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def page_in_thumbnail(psi : IShellItem, wtsflags : WTS_FLAGS, cxyrequestedthumbsize : UInt32) : HRESULT
    @lpVtbl.value.page_in_thumbnail.unsafe_as(Proc(IShellItem, WTS_FLAGS, UInt32, HRESULT)).call(psi, wtsflags, cxyrequestedthumbsize)
  end
end
struct LibWin32::IShellImageDataFactory
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_i_shell_image_data(ppshimg : IShellImageData*) : HRESULT
    @lpVtbl.value.create_i_shell_image_data.unsafe_as(Proc(IShellImageData*, HRESULT)).call(ppshimg)
  end
  def create_image_from_file(pszpath : LibC::LPWSTR, ppshimg : IShellImageData*) : HRESULT
    @lpVtbl.value.create_image_from_file.unsafe_as(Proc(LibC::LPWSTR, IShellImageData*, HRESULT)).call(pszpath, ppshimg)
  end
  def create_image_from_stream(pstream : IStream, ppshimg : IShellImageData*) : HRESULT
    @lpVtbl.value.create_image_from_stream.unsafe_as(Proc(IStream, IShellImageData*, HRESULT)).call(pstream, ppshimg)
  end
  def get_data_format_from_path(pszpath : LibC::LPWSTR, pdataformat : Guid*) : HRESULT
    @lpVtbl.value.get_data_format_from_path.unsafe_as(Proc(LibC::LPWSTR, Guid*, HRESULT)).call(pszpath, pdataformat)
  end
end
struct LibWin32::IShellImageData
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def decode(dwflags : UInt32, cxdesired : UInt32, cydesired : UInt32) : HRESULT
    @lpVtbl.value.decode.unsafe_as(Proc(UInt32, UInt32, UInt32, HRESULT)).call(dwflags, cxdesired, cydesired)
  end
  def draw(hdc : HDC, prcdest : RECT*, prcsrc : RECT*) : HRESULT
    @lpVtbl.value.draw.unsafe_as(Proc(HDC, RECT*, RECT*, HRESULT)).call(hdc, prcdest, prcsrc)
  end
  def next_frame : HRESULT
    @lpVtbl.value.next_frame.unsafe_as(Proc(HRESULT)).call
  end
  def next_page : HRESULT
    @lpVtbl.value.next_page.unsafe_as(Proc(HRESULT)).call
  end
  def prev_page : HRESULT
    @lpVtbl.value.prev_page.unsafe_as(Proc(HRESULT)).call
  end
  def is_transparent : HRESULT
    @lpVtbl.value.is_transparent.unsafe_as(Proc(HRESULT)).call
  end
  def is_animated : HRESULT
    @lpVtbl.value.is_animated.unsafe_as(Proc(HRESULT)).call
  end
  def is_vector : HRESULT
    @lpVtbl.value.is_vector.unsafe_as(Proc(HRESULT)).call
  end
  def is_multipage : HRESULT
    @lpVtbl.value.is_multipage.unsafe_as(Proc(HRESULT)).call
  end
  def is_editable : HRESULT
    @lpVtbl.value.is_editable.unsafe_as(Proc(HRESULT)).call
  end
  def is_printable : HRESULT
    @lpVtbl.value.is_printable.unsafe_as(Proc(HRESULT)).call
  end
  def is_decoded : HRESULT
    @lpVtbl.value.is_decoded.unsafe_as(Proc(HRESULT)).call
  end
  def get_current_page(pnpage : UInt32*) : HRESULT
    @lpVtbl.value.get_current_page.unsafe_as(Proc(UInt32*, HRESULT)).call(pnpage)
  end
  def get_page_count(pcpages : UInt32*) : HRESULT
    @lpVtbl.value.get_page_count.unsafe_as(Proc(UInt32*, HRESULT)).call(pcpages)
  end
  def select_page(ipage : UInt32) : HRESULT
    @lpVtbl.value.select_page.unsafe_as(Proc(UInt32, HRESULT)).call(ipage)
  end
  def get_size(psize : SIZE*) : HRESULT
    @lpVtbl.value.get_size.unsafe_as(Proc(SIZE*, HRESULT)).call(psize)
  end
  def get_raw_data_format(pdataformat : Guid*) : HRESULT
    @lpVtbl.value.get_raw_data_format.unsafe_as(Proc(Guid*, HRESULT)).call(pdataformat)
  end
  def get_pixel_format(pformat : UInt32*) : HRESULT
    @lpVtbl.value.get_pixel_format.unsafe_as(Proc(UInt32*, HRESULT)).call(pformat)
  end
  def get_delay(pdwdelay : UInt32*) : HRESULT
    @lpVtbl.value.get_delay.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwdelay)
  end
  def get_properties(dwmode : UInt32, pppropset : IPropertySetStorage*) : HRESULT
    @lpVtbl.value.get_properties.unsafe_as(Proc(UInt32, IPropertySetStorage*, HRESULT)).call(dwmode, pppropset)
  end
  def rotate(dwangle : UInt32) : HRESULT
    @lpVtbl.value.rotate.unsafe_as(Proc(UInt32, HRESULT)).call(dwangle)
  end
  def scale(cx : UInt32, cy : UInt32, hints : UInt32) : HRESULT
    @lpVtbl.value.scale.unsafe_as(Proc(UInt32, UInt32, UInt32, HRESULT)).call(cx, cy, hints)
  end
  def discard_edit : HRESULT
    @lpVtbl.value.discard_edit.unsafe_as(Proc(HRESULT)).call
  end
  def set_encoder_params(pbagenc : IPropertyBag) : HRESULT
    @lpVtbl.value.set_encoder_params.unsafe_as(Proc(IPropertyBag, HRESULT)).call(pbagenc)
  end
  def display_name(wszname : LibC::LPWSTR, cch : UInt32) : HRESULT
    @lpVtbl.value.display_name.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(wszname, cch)
  end
  def get_resolution(puresolutionx : UInt32*, puresolutiony : UInt32*) : HRESULT
    @lpVtbl.value.get_resolution.unsafe_as(Proc(UInt32*, UInt32*, HRESULT)).call(puresolutionx, puresolutiony)
  end
  def get_encoder_params(pguidfmt : Guid*, ppencparams : UInt8**) : HRESULT
    @lpVtbl.value.get_encoder_params.unsafe_as(Proc(Guid*, UInt8**, HRESULT)).call(pguidfmt, ppencparams)
  end
  def register_abort(pabort : IShellImageDataAbort, ppabortprev : IShellImageDataAbort*) : HRESULT
    @lpVtbl.value.register_abort.unsafe_as(Proc(IShellImageDataAbort, IShellImageDataAbort*, HRESULT)).call(pabort, ppabortprev)
  end
  def clone_frame(ppimg : UInt8**) : HRESULT
    @lpVtbl.value.clone_frame.unsafe_as(Proc(UInt8**, HRESULT)).call(ppimg)
  end
  def replace_frame(pimg : UInt8*) : HRESULT
    @lpVtbl.value.replace_frame.unsafe_as(Proc(UInt8*, HRESULT)).call(pimg)
  end
end
struct LibWin32::IShellImageDataAbort
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def query_abort : HRESULT
    @lpVtbl.value.query_abort.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::IStorageProviderPropertyHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def retrieve_properties(propertiestoretrieve : PROPERTYKEY*, propertiestoretrievecount : UInt32, retrievedproperties : IPropertyStore*) : HRESULT
    @lpVtbl.value.retrieve_properties.unsafe_as(Proc(PROPERTYKEY*, UInt32, IPropertyStore*, HRESULT)).call(propertiestoretrieve, propertiestoretrievecount, retrievedproperties)
  end
  def save_properties(propertiestosave : IPropertyStore) : HRESULT
    @lpVtbl.value.save_properties.unsafe_as(Proc(IPropertyStore, HRESULT)).call(propertiestosave)
  end
end
struct LibWin32::IStorageProviderHandler
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_property_handler_from_path(path : LibC::LPWSTR, propertyhandler : IStorageProviderPropertyHandler*) : HRESULT
    @lpVtbl.value.get_property_handler_from_path.unsafe_as(Proc(LibC::LPWSTR, IStorageProviderPropertyHandler*, HRESULT)).call(path, propertyhandler)
  end
  def get_property_handler_from_uri(uri : LibC::LPWSTR, propertyhandler : IStorageProviderPropertyHandler*) : HRESULT
    @lpVtbl.value.get_property_handler_from_uri.unsafe_as(Proc(LibC::LPWSTR, IStorageProviderPropertyHandler*, HRESULT)).call(uri, propertyhandler)
  end
  def get_property_handler_from_file_id(fileid : LibC::LPWSTR, propertyhandler : IStorageProviderPropertyHandler*) : HRESULT
    @lpVtbl.value.get_property_handler_from_file_id.unsafe_as(Proc(LibC::LPWSTR, IStorageProviderPropertyHandler*, HRESULT)).call(fileid, propertyhandler)
  end
end
struct LibWin32::ISyncMgrSynchronizeCallback
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def show_properties_completed(hr : HRESULT) : HRESULT
    @lpVtbl.value.show_properties_completed.unsafe_as(Proc(HRESULT, HRESULT)).call(hr)
  end
  def prepare_for_sync_completed(hr : HRESULT) : HRESULT
    @lpVtbl.value.prepare_for_sync_completed.unsafe_as(Proc(HRESULT, HRESULT)).call(hr)
  end
  def synchronize_completed(hr : HRESULT) : HRESULT
    @lpVtbl.value.synchronize_completed.unsafe_as(Proc(HRESULT, HRESULT)).call(hr)
  end
  def show_error_completed(hr : HRESULT, citems : UInt32, pitemids : Guid*) : HRESULT
    @lpVtbl.value.show_error_completed.unsafe_as(Proc(HRESULT, UInt32, Guid*, HRESULT)).call(hr, citems, pitemids)
  end
  def enable_modeless(fenable : LibC::BOOL) : HRESULT
    @lpVtbl.value.enable_modeless.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fenable)
  end
  def progress(itemid : Guid*, psyncprogressitem : SYNCMGRPROGRESSITEM*) : HRESULT
    @lpVtbl.value.progress.unsafe_as(Proc(Guid*, SYNCMGRPROGRESSITEM*, HRESULT)).call(itemid, psyncprogressitem)
  end
  def log_error(dwerrorlevel : UInt32, pszerrortext : LibC::LPWSTR, psynclogerror : SYNCMGRLOGERRORINFO*) : HRESULT
    @lpVtbl.value.log_error.unsafe_as(Proc(UInt32, LibC::LPWSTR, SYNCMGRLOGERRORINFO*, HRESULT)).call(dwerrorlevel, pszerrortext, psynclogerror)
  end
  def delete_log_error(errorid : Guid*, dwreserved : UInt32) : HRESULT
    @lpVtbl.value.delete_log_error.unsafe_as(Proc(Guid*, UInt32, HRESULT)).call(errorid, dwreserved)
  end
  def establish_connection(pwszconnection : LibC::LPWSTR, dwreserved : UInt32) : HRESULT
    @lpVtbl.value.establish_connection.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(pwszconnection, dwreserved)
  end
end
struct LibWin32::ISyncMgrEnumItems
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : SYNCMGRITEM*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, SYNCMGRITEM*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : ISyncMgrEnumItems*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(ISyncMgrEnumItems*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::ISyncMgrSynchronize
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(dwreserved : UInt32, dwsyncmgrflags : UInt32, cbcookie : UInt32, lpcookie : UInt8*) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(UInt32, UInt32, UInt32, UInt8*, HRESULT)).call(dwreserved, dwsyncmgrflags, cbcookie, lpcookie)
  end
  def get_handler_info(ppsyncmgrhandlerinfo : SYNCMGRHANDLERINFO**) : HRESULT
    @lpVtbl.value.get_handler_info.unsafe_as(Proc(SYNCMGRHANDLERINFO**, HRESULT)).call(ppsyncmgrhandlerinfo)
  end
  def enum_sync_mgr_items(ppsyncmgrenumitems : ISyncMgrEnumItems*) : HRESULT
    @lpVtbl.value.enum_sync_mgr_items.unsafe_as(Proc(ISyncMgrEnumItems*, HRESULT)).call(ppsyncmgrenumitems)
  end
  def get_item_object(itemid : Guid*, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_item_object.unsafe_as(Proc(Guid*, Guid*, Void**, HRESULT)).call(itemid, riid, ppv)
  end
  def show_properties(hwndparent : LibC::HANDLE, itemid : Guid*) : HRESULT
    @lpVtbl.value.show_properties.unsafe_as(Proc(LibC::HANDLE, Guid*, HRESULT)).call(hwndparent, itemid)
  end
  def set_progress_callback(lpcallback : ISyncMgrSynchronizeCallback) : HRESULT
    @lpVtbl.value.set_progress_callback.unsafe_as(Proc(ISyncMgrSynchronizeCallback, HRESULT)).call(lpcallback)
  end
  def prepare_for_sync(cbnumitems : UInt32, pitemids : Guid*, hwndparent : LibC::HANDLE, dwreserved : UInt32) : HRESULT
    @lpVtbl.value.prepare_for_sync.unsafe_as(Proc(UInt32, Guid*, LibC::HANDLE, UInt32, HRESULT)).call(cbnumitems, pitemids, hwndparent, dwreserved)
  end
  def synchronize(hwndparent : LibC::HANDLE) : HRESULT
    @lpVtbl.value.synchronize.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hwndparent)
  end
  def set_item_status(pitemid : Guid*, dwsyncmgrstatus : UInt32) : HRESULT
    @lpVtbl.value.set_item_status.unsafe_as(Proc(Guid*, UInt32, HRESULT)).call(pitemid, dwsyncmgrstatus)
  end
  def show_error(hwndparent : LibC::HANDLE, errorid : Guid*) : HRESULT
    @lpVtbl.value.show_error.unsafe_as(Proc(LibC::HANDLE, Guid*, HRESULT)).call(hwndparent, errorid)
  end
end
struct LibWin32::ISyncMgrSynchronizeInvoke
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def update_items(dwinvokeflags : UInt32, clsid : Guid*, cbcookie : UInt32, pcookie : UInt8*) : HRESULT
    @lpVtbl.value.update_items.unsafe_as(Proc(UInt32, Guid*, UInt32, UInt8*, HRESULT)).call(dwinvokeflags, clsid, cbcookie, pcookie)
  end
  def update_all : HRESULT
    @lpVtbl.value.update_all.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ISyncMgrRegister
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def register_sync_mgr_handler(clsidhandler : Guid*, pwszdescription : LibC::LPWSTR, dwsyncmgrregisterflags : UInt32) : HRESULT
    @lpVtbl.value.register_sync_mgr_handler.unsafe_as(Proc(Guid*, LibC::LPWSTR, UInt32, HRESULT)).call(clsidhandler, pwszdescription, dwsyncmgrregisterflags)
  end
  def unregister_sync_mgr_handler(clsidhandler : Guid*, dwreserved : UInt32) : HRESULT
    @lpVtbl.value.unregister_sync_mgr_handler.unsafe_as(Proc(Guid*, UInt32, HRESULT)).call(clsidhandler, dwreserved)
  end
  def get_handler_registration_info(clsidhandler : Guid*, pdwsyncmgrregisterflags : UInt32*) : HRESULT
    @lpVtbl.value.get_handler_registration_info.unsafe_as(Proc(Guid*, UInt32*, HRESULT)).call(clsidhandler, pdwsyncmgrregisterflags)
  end
end
struct LibWin32::IThumbnailStreamCache
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_thumbnail_stream(path : LibC::LPWSTR, cacheid : UInt64, options : ThumbnailStreamCacheOptions, requestedthumbnailsize : UInt32, thumbnailsize : SIZE*, thumbnailstream : IStream*) : HRESULT
    @lpVtbl.value.get_thumbnail_stream.unsafe_as(Proc(LibC::LPWSTR, UInt64, ThumbnailStreamCacheOptions, UInt32, SIZE*, IStream*, HRESULT)).call(path, cacheid, options, requestedthumbnailsize, thumbnailsize, thumbnailstream)
  end
  def set_thumbnail_stream(path : LibC::LPWSTR, cacheid : UInt64, thumbnailsize : SIZE, thumbnailstream : IStream) : HRESULT
    @lpVtbl.value.set_thumbnail_stream.unsafe_as(Proc(LibC::LPWSTR, UInt64, SIZE, IStream, HRESULT)).call(path, cacheid, thumbnailsize, thumbnailstream)
  end
end
struct LibWin32::ITravelLogEntry
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_title(ppsztitle : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppsztitle)
  end
  def get_url(ppszurl : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszurl)
  end
end
struct LibWin32::ITravelLogClient
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def find_window_by_index(dwid : UInt32, ppunk : IUnknown*) : HRESULT
    @lpVtbl.value.find_window_by_index.unsafe_as(Proc(UInt32, IUnknown*, HRESULT)).call(dwid, ppunk)
  end
  def get_window_data(pstream : IStream, pwindata : WINDOWDATA*) : HRESULT
    @lpVtbl.value.get_window_data.unsafe_as(Proc(IStream, WINDOWDATA*, HRESULT)).call(pstream, pwindata)
  end
  def load_history_position(pszurllocation : LibC::LPWSTR, dwposition : UInt32) : HRESULT
    @lpVtbl.value.load_history_position.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(pszurllocation, dwposition)
  end
end
struct LibWin32::IEnumTravelLogEntry
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : ITravelLogEntry*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, ITravelLogEntry*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppenum : IEnumTravelLogEntry*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumTravelLogEntry*, HRESULT)).call(ppenum)
  end
end
struct LibWin32::ITravelLogStg
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def create_entry(pszurl : LibC::LPWSTR, psztitle : LibC::LPWSTR, ptlerelativeto : ITravelLogEntry, fprepend : LibC::BOOL, pptle : ITravelLogEntry*) : HRESULT
    @lpVtbl.value.create_entry.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR, ITravelLogEntry, LibC::BOOL, ITravelLogEntry*, HRESULT)).call(pszurl, psztitle, ptlerelativeto, fprepend, pptle)
  end
  def travel_to(ptle : ITravelLogEntry) : HRESULT
    @lpVtbl.value.travel_to.unsafe_as(Proc(ITravelLogEntry, HRESULT)).call(ptle)
  end
  def enum_entries(flags : TLENUMF, ppenum : IEnumTravelLogEntry*) : HRESULT
    @lpVtbl.value.enum_entries.unsafe_as(Proc(TLENUMF, IEnumTravelLogEntry*, HRESULT)).call(flags, ppenum)
  end
  def find_entries(flags : TLENUMF, pszurl : LibC::LPWSTR, ppenum : IEnumTravelLogEntry*) : HRESULT
    @lpVtbl.value.find_entries.unsafe_as(Proc(TLENUMF, LibC::LPWSTR, IEnumTravelLogEntry*, HRESULT)).call(flags, pszurl, ppenum)
  end
  def get_count(flags : TLENUMF, pcentries : UInt32*) : HRESULT
    @lpVtbl.value.get_count.unsafe_as(Proc(TLENUMF, UInt32*, HRESULT)).call(flags, pcentries)
  end
  def remove_entry(ptle : ITravelLogEntry) : HRESULT
    @lpVtbl.value.remove_entry.unsafe_as(Proc(ITravelLogEntry, HRESULT)).call(ptle)
  end
  def get_relative_entry(ioffset : Int32, ptle : ITravelLogEntry*) : HRESULT
    @lpVtbl.value.get_relative_entry.unsafe_as(Proc(Int32, ITravelLogEntry*, HRESULT)).call(ioffset, ptle)
  end
end
struct LibWin32::IHlink
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_hlink_site(pihlsite : IHlinkSite, dwsitedata : UInt32) : HRESULT
    @lpVtbl.value.set_hlink_site.unsafe_as(Proc(IHlinkSite, UInt32, HRESULT)).call(pihlsite, dwsitedata)
  end
  def get_hlink_site(ppihlsite : IHlinkSite*, pdwsitedata : UInt32*) : HRESULT
    @lpVtbl.value.get_hlink_site.unsafe_as(Proc(IHlinkSite*, UInt32*, HRESULT)).call(ppihlsite, pdwsitedata)
  end
  def set_moniker_reference(grfhlsetf : UInt32, pimktarget : IMoniker, pwzlocation : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_moniker_reference.unsafe_as(Proc(UInt32, IMoniker, LibC::LPWSTR, HRESULT)).call(grfhlsetf, pimktarget, pwzlocation)
  end
  def get_moniker_reference(dwwhichref : UInt32, ppimktarget : IMoniker*, ppwzlocation : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_moniker_reference.unsafe_as(Proc(UInt32, IMoniker*, LibC::LPWSTR*, HRESULT)).call(dwwhichref, ppimktarget, ppwzlocation)
  end
  def set_string_reference(grfhlsetf : UInt32, pwztarget : LibC::LPWSTR, pwzlocation : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_string_reference.unsafe_as(Proc(UInt32, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(grfhlsetf, pwztarget, pwzlocation)
  end
  def get_string_reference(dwwhichref : UInt32, ppwztarget : LibC::LPWSTR*, ppwzlocation : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_string_reference.unsafe_as(Proc(UInt32, LibC::LPWSTR*, LibC::LPWSTR*, HRESULT)).call(dwwhichref, ppwztarget, ppwzlocation)
  end
  def set_friendly_name(pwzfriendlyname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_friendly_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pwzfriendlyname)
  end
  def get_friendly_name(grfhlfnamef : UInt32, ppwzfriendlyname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_friendly_name.unsafe_as(Proc(UInt32, LibC::LPWSTR*, HRESULT)).call(grfhlfnamef, ppwzfriendlyname)
  end
  def set_target_frame_name(pwztargetframename : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_target_frame_name.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pwztargetframename)
  end
  def get_target_frame_name(ppwztargetframename : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_target_frame_name.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppwztargetframename)
  end
  def get_misc_status(pdwstatus : UInt32*) : HRESULT
    @lpVtbl.value.get_misc_status.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwstatus)
  end
  def navigate(grfhlnf : UInt32, pibc : IBindCtx, pibsc : IBindStatusCallback, pihlbc : IHlinkBrowseContext) : HRESULT
    @lpVtbl.value.navigate.unsafe_as(Proc(UInt32, IBindCtx, IBindStatusCallback, IHlinkBrowseContext, HRESULT)).call(grfhlnf, pibc, pibsc, pihlbc)
  end
  def set_additional_params(pwzadditionalparams : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_additional_params.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pwzadditionalparams)
  end
  def get_additional_params(ppwzadditionalparams : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_additional_params.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppwzadditionalparams)
  end
end
struct LibWin32::IHlinkSite
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def query_service(dwsitedata : UInt32, guidservice : Guid*, riid : Guid*, ppiunk : IUnknown*) : HRESULT
    @lpVtbl.value.query_service.unsafe_as(Proc(UInt32, Guid*, Guid*, IUnknown*, HRESULT)).call(dwsitedata, guidservice, riid, ppiunk)
  end
  def get_moniker(dwsitedata : UInt32, dwassign : UInt32, dwwhich : UInt32, ppimk : IMoniker*) : HRESULT
    @lpVtbl.value.get_moniker.unsafe_as(Proc(UInt32, UInt32, UInt32, IMoniker*, HRESULT)).call(dwsitedata, dwassign, dwwhich, ppimk)
  end
  def ready_to_navigate(dwsitedata : UInt32, dwreserved : UInt32) : HRESULT
    @lpVtbl.value.ready_to_navigate.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwsitedata, dwreserved)
  end
  def on_navigation_complete(dwsitedata : UInt32, dwreserved : UInt32, hrerror : HRESULT, pwzerror : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.on_navigation_complete.unsafe_as(Proc(UInt32, UInt32, HRESULT, LibC::LPWSTR, HRESULT)).call(dwsitedata, dwreserved, hrerror, pwzerror)
  end
end
struct LibWin32::IHlinkTarget
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_browse_context(pihlbc : IHlinkBrowseContext) : HRESULT
    @lpVtbl.value.set_browse_context.unsafe_as(Proc(IHlinkBrowseContext, HRESULT)).call(pihlbc)
  end
  def get_browse_context(ppihlbc : IHlinkBrowseContext*) : HRESULT
    @lpVtbl.value.get_browse_context.unsafe_as(Proc(IHlinkBrowseContext*, HRESULT)).call(ppihlbc)
  end
  def navigate(grfhlnf : UInt32, pwzjumplocation : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.navigate.unsafe_as(Proc(UInt32, LibC::LPWSTR, HRESULT)).call(grfhlnf, pwzjumplocation)
  end
  def get_moniker(pwzlocation : LibC::LPWSTR, dwassign : UInt32, ppimklocation : IMoniker*) : HRESULT
    @lpVtbl.value.get_moniker.unsafe_as(Proc(LibC::LPWSTR, UInt32, IMoniker*, HRESULT)).call(pwzlocation, dwassign, ppimklocation)
  end
  def get_friendly_name(pwzlocation : LibC::LPWSTR, ppwzfriendlyname : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_friendly_name.unsafe_as(Proc(LibC::LPWSTR, LibC::LPWSTR*, HRESULT)).call(pwzlocation, ppwzfriendlyname)
  end
end
struct LibWin32::IHlinkFrame
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_browse_context(pihlbc : IHlinkBrowseContext) : HRESULT
    @lpVtbl.value.set_browse_context.unsafe_as(Proc(IHlinkBrowseContext, HRESULT)).call(pihlbc)
  end
  def get_browse_context(ppihlbc : IHlinkBrowseContext*) : HRESULT
    @lpVtbl.value.get_browse_context.unsafe_as(Proc(IHlinkBrowseContext*, HRESULT)).call(ppihlbc)
  end
  def navigate(grfhlnf : UInt32, pbc : IBindCtx, pibsc : IBindStatusCallback, pihlnavigate : IHlink) : HRESULT
    @lpVtbl.value.navigate.unsafe_as(Proc(UInt32, IBindCtx, IBindStatusCallback, IHlink, HRESULT)).call(grfhlnf, pbc, pibsc, pihlnavigate)
  end
  def on_navigate(grfhlnf : UInt32, pimktarget : IMoniker, pwzlocation : LibC::LPWSTR, pwzfriendlyname : LibC::LPWSTR, dwreserved : UInt32) : HRESULT
    @lpVtbl.value.on_navigate.unsafe_as(Proc(UInt32, IMoniker, LibC::LPWSTR, LibC::LPWSTR, UInt32, HRESULT)).call(grfhlnf, pimktarget, pwzlocation, pwzfriendlyname, dwreserved)
  end
  def update_hlink(uhlid : UInt32, pimktarget : IMoniker, pwzlocation : LibC::LPWSTR, pwzfriendlyname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.update_hlink.unsafe_as(Proc(UInt32, IMoniker, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(uhlid, pimktarget, pwzlocation, pwzfriendlyname)
  end
end
struct LibWin32::IEnumHLITEM
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def next(celt : UInt32, rgelt : HLITEM*, pceltfetched : UInt32*) : HRESULT
    @lpVtbl.value.next.unsafe_as(Proc(UInt32, HLITEM*, UInt32*, HRESULT)).call(celt, rgelt, pceltfetched)
  end
  def skip(celt : UInt32) : HRESULT
    @lpVtbl.value.skip.unsafe_as(Proc(UInt32, HRESULT)).call(celt)
  end
  def reset : HRESULT
    @lpVtbl.value.reset.unsafe_as(Proc(HRESULT)).call
  end
  def clone(ppienumhlitem : IEnumHLITEM*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IEnumHLITEM*, HRESULT)).call(ppienumhlitem)
  end
end
struct LibWin32::IHlinkBrowseContext
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def register(reserved : UInt32, piunk : IUnknown, pimk : IMoniker, pdwregister : UInt32*) : HRESULT
    @lpVtbl.value.register.unsafe_as(Proc(UInt32, IUnknown, IMoniker, UInt32*, HRESULT)).call(reserved, piunk, pimk, pdwregister)
  end
  def get_object(pimk : IMoniker, fbindifrootregistered : LibC::BOOL, ppiunk : IUnknown*) : HRESULT
    @lpVtbl.value.get_object.unsafe_as(Proc(IMoniker, LibC::BOOL, IUnknown*, HRESULT)).call(pimk, fbindifrootregistered, ppiunk)
  end
  def revoke(dwregister : UInt32) : HRESULT
    @lpVtbl.value.revoke.unsafe_as(Proc(UInt32, HRESULT)).call(dwregister)
  end
  def set_browse_window_info(phlbwi : HLBWINFO*) : HRESULT
    @lpVtbl.value.set_browse_window_info.unsafe_as(Proc(HLBWINFO*, HRESULT)).call(phlbwi)
  end
  def get_browse_window_info(phlbwi : HLBWINFO*) : HRESULT
    @lpVtbl.value.get_browse_window_info.unsafe_as(Proc(HLBWINFO*, HRESULT)).call(phlbwi)
  end
  def set_initial_hlink(pimktarget : IMoniker, pwzlocation : LibC::LPWSTR, pwzfriendlyname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_initial_hlink.unsafe_as(Proc(IMoniker, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(pimktarget, pwzlocation, pwzfriendlyname)
  end
  def on_navigate_hlink(grfhlnf : UInt32, pimktarget : IMoniker, pwzlocation : LibC::LPWSTR, pwzfriendlyname : LibC::LPWSTR, puhlid : UInt32*) : HRESULT
    @lpVtbl.value.on_navigate_hlink.unsafe_as(Proc(UInt32, IMoniker, LibC::LPWSTR, LibC::LPWSTR, UInt32*, HRESULT)).call(grfhlnf, pimktarget, pwzlocation, pwzfriendlyname, puhlid)
  end
  def update_hlink(uhlid : UInt32, pimktarget : IMoniker, pwzlocation : LibC::LPWSTR, pwzfriendlyname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.update_hlink.unsafe_as(Proc(UInt32, IMoniker, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(uhlid, pimktarget, pwzlocation, pwzfriendlyname)
  end
  def enum_navigation_stack(dwreserved : UInt32, grfhlfnamef : UInt32, ppienumhlitem : IEnumHLITEM*) : HRESULT
    @lpVtbl.value.enum_navigation_stack.unsafe_as(Proc(UInt32, UInt32, IEnumHLITEM*, HRESULT)).call(dwreserved, grfhlfnamef, ppienumhlitem)
  end
  def query_hlink(grfhlqf : UInt32, uhlid : UInt32) : HRESULT
    @lpVtbl.value.query_hlink.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(grfhlqf, uhlid)
  end
  def get_hlink(uhlid : UInt32, ppihl : IHlink*) : HRESULT
    @lpVtbl.value.get_hlink.unsafe_as(Proc(UInt32, IHlink*, HRESULT)).call(uhlid, ppihl)
  end
  def set_current_hlink(uhlid : UInt32) : HRESULT
    @lpVtbl.value.set_current_hlink.unsafe_as(Proc(UInt32, HRESULT)).call(uhlid)
  end
  def clone(piunkouter : IUnknown, riid : Guid*, ppiunkobj : IUnknown*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(IUnknown, Guid*, IUnknown*, HRESULT)).call(piunkouter, riid, ppiunkobj)
  end
  def close(reserved : UInt32) : HRESULT
    @lpVtbl.value.close.unsafe_as(Proc(UInt32, HRESULT)).call(reserved)
  end
end
struct LibWin32::IExtensionServices
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_additional_headers(pwzadditionalheaders : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_additional_headers.unsafe_as(Proc(LibC::LPWSTR, HRESULT)).call(pwzadditionalheaders)
  end
  def set_authenticate_data(phwnd : LibC::HANDLE, pwzusername : LibC::LPWSTR, pwzpassword : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_authenticate_data.unsafe_as(Proc(LibC::HANDLE, LibC::LPWSTR, LibC::LPWSTR, HRESULT)).call(phwnd, pwzusername, pwzpassword)
  end
end
struct LibWin32::ITravelEntry
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def invoke(punk : IUnknown) : HRESULT
    @lpVtbl.value.invoke.unsafe_as(Proc(IUnknown, HRESULT)).call(punk)
  end
  def update(punk : IUnknown, fislocalanchor : LibC::BOOL) : HRESULT
    @lpVtbl.value.update.unsafe_as(Proc(IUnknown, LibC::BOOL, HRESULT)).call(punk, fislocalanchor)
  end
  def get_pidl(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_pidl.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
end
struct LibWin32::ITravelLog
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_entry(punk : IUnknown, fislocalanchor : LibC::BOOL) : HRESULT
    @lpVtbl.value.add_entry.unsafe_as(Proc(IUnknown, LibC::BOOL, HRESULT)).call(punk, fislocalanchor)
  end
  def update_entry(punk : IUnknown, fislocalanchor : LibC::BOOL) : HRESULT
    @lpVtbl.value.update_entry.unsafe_as(Proc(IUnknown, LibC::BOOL, HRESULT)).call(punk, fislocalanchor)
  end
  def update_external(punk : IUnknown, punkhlbrowsecontext : IUnknown) : HRESULT
    @lpVtbl.value.update_external.unsafe_as(Proc(IUnknown, IUnknown, HRESULT)).call(punk, punkhlbrowsecontext)
  end
  def travel(punk : IUnknown, ioffset : Int32) : HRESULT
    @lpVtbl.value.travel.unsafe_as(Proc(IUnknown, Int32, HRESULT)).call(punk, ioffset)
  end
  def get_travel_entry(punk : IUnknown, ioffset : Int32, ppte : ITravelEntry*) : HRESULT
    @lpVtbl.value.get_travel_entry.unsafe_as(Proc(IUnknown, Int32, ITravelEntry*, HRESULT)).call(punk, ioffset, ppte)
  end
  def find_travel_entry(punk : IUnknown, pidl : ITEMIDLIST*, ppte : ITravelEntry*) : HRESULT
    @lpVtbl.value.find_travel_entry.unsafe_as(Proc(IUnknown, ITEMIDLIST*, ITravelEntry*, HRESULT)).call(punk, pidl, ppte)
  end
  def get_tool_tip_text(punk : IUnknown, ioffset : Int32, idstemplate : Int32, pwztext : Char*, cchtext : UInt32) : HRESULT
    @lpVtbl.value.get_tool_tip_text.unsafe_as(Proc(IUnknown, Int32, Int32, Char*, UInt32, HRESULT)).call(punk, ioffset, idstemplate, pwztext, cchtext)
  end
  def insert_menu_entries(punk : IUnknown, hmenu : LibC::HANDLE, npos : Int32, idfirst : Int32, idlast : Int32, dwflags : UInt32) : HRESULT
    @lpVtbl.value.insert_menu_entries.unsafe_as(Proc(IUnknown, LibC::HANDLE, Int32, Int32, Int32, UInt32, HRESULT)).call(punk, hmenu, npos, idfirst, idlast, dwflags)
  end
  def clone(pptl : ITravelLog*) : HRESULT
    @lpVtbl.value.clone.unsafe_as(Proc(ITravelLog*, HRESULT)).call(pptl)
  end
  def count_entries(punk : IUnknown) : UInt32
    @lpVtbl.value.count_entries.unsafe_as(Proc(IUnknown, UInt32)).call(punk)
  end
  def revert : HRESULT
    @lpVtbl.value.revert.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::CIE4ConnectionPoint
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_connection_interface(piid : Guid*) : HRESULT
    @lpVtbl.value.get_connection_interface.unsafe_as(Proc(Guid*, HRESULT)).call(piid)
  end
  def get_connection_point_container(ppcpc : IConnectionPointContainer*) : HRESULT
    @lpVtbl.value.get_connection_point_container.unsafe_as(Proc(IConnectionPointContainer*, HRESULT)).call(ppcpc)
  end
  def advise(punksink : IUnknown, pdwcookie : UInt32*) : HRESULT
    @lpVtbl.value.advise.unsafe_as(Proc(IUnknown, UInt32*, HRESULT)).call(punksink, pdwcookie)
  end
  def unadvise(dwcookie : UInt32) : HRESULT
    @lpVtbl.value.unadvise.unsafe_as(Proc(UInt32, HRESULT)).call(dwcookie)
  end
  def enum_connections(ppenum : IEnumConnections*) : HRESULT
    @lpVtbl.value.enum_connections.unsafe_as(Proc(IEnumConnections*, HRESULT)).call(ppenum)
  end
  def do_invoke_ie4(pf : LibC::BOOL*, ppv : Void**, dispid : Int32, pdispparams : DISPPARAMS*) : HRESULT
    @lpVtbl.value.do_invoke_ie4.unsafe_as(Proc(LibC::BOOL*, Void**, Int32, DISPPARAMS*, HRESULT)).call(pf, ppv, dispid, pdispparams)
  end
  def do_invoke_pidlie4(dispid : Int32, pidl : ITEMIDLIST*, fcancancel : LibC::BOOL) : HRESULT
    @lpVtbl.value.do_invoke_pidlie4.unsafe_as(Proc(Int32, ITEMIDLIST*, LibC::BOOL, HRESULT)).call(dispid, pidl, fcancancel)
  end
end
struct LibWin32::IExpDispSupportXP
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def find_cie4_connection_point(riid : Guid*, ppccp : CIE4ConnectionPoint*) : HRESULT
    @lpVtbl.value.find_cie4_connection_point.unsafe_as(Proc(Guid*, CIE4ConnectionPoint*, HRESULT)).call(riid, ppccp)
  end
  def on_translate_accelerator(pmsg : MSG*, grfmodifiers : UInt32) : HRESULT
    @lpVtbl.value.on_translate_accelerator.unsafe_as(Proc(MSG*, UInt32, HRESULT)).call(pmsg, grfmodifiers)
  end
  def on_invoke(dispidmember : Int32, iid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.on_invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, iid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IExpDispSupport
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def find_connection_point(riid : Guid*, ppccp : IConnectionPoint*) : HRESULT
    @lpVtbl.value.find_connection_point.unsafe_as(Proc(Guid*, IConnectionPoint*, HRESULT)).call(riid, ppccp)
  end
  def on_translate_accelerator(pmsg : MSG*, grfmodifiers : UInt32) : HRESULT
    @lpVtbl.value.on_translate_accelerator.unsafe_as(Proc(MSG*, UInt32, HRESULT)).call(pmsg, grfmodifiers)
  end
  def on_invoke(dispidmember : Int32, iid : Guid*, lcid : UInt32, wflags : UInt16, pdispparams : DISPPARAMS*, pvarresult : VARIANT*, pexcepinfo : EXCEPINFO*, puargerr : UInt32*) : HRESULT
    @lpVtbl.value.on_invoke.unsafe_as(Proc(Int32, Guid*, UInt32, UInt16, DISPPARAMS*, VARIANT*, EXCEPINFO*, UInt32*, HRESULT)).call(dispidmember, iid, lcid, wflags, pdispparams, pvarresult, pexcepinfo, puargerr)
  end
end
struct LibWin32::IBrowserService
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_parent_site(ppipsite : IOleInPlaceSite*) : HRESULT
    @lpVtbl.value.get_parent_site.unsafe_as(Proc(IOleInPlaceSite*, HRESULT)).call(ppipsite)
  end
  def set_title(psv : IShellView, pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_title.unsafe_as(Proc(IShellView, LibC::LPWSTR, HRESULT)).call(psv, pszname)
  end
  def get_title(psv : IShellView, pszname : Char*, cchname : UInt32) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(IShellView, Char*, UInt32, HRESULT)).call(psv, pszname, cchname)
  end
  def get_ole_object(ppobjv : IOleObject*) : HRESULT
    @lpVtbl.value.get_ole_object.unsafe_as(Proc(IOleObject*, HRESULT)).call(ppobjv)
  end
  def get_travel_log(pptl : ITravelLog*) : HRESULT
    @lpVtbl.value.get_travel_log.unsafe_as(Proc(ITravelLog*, HRESULT)).call(pptl)
  end
  def show_control_window(id : UInt32, fshow : LibC::BOOL) : HRESULT
    @lpVtbl.value.show_control_window.unsafe_as(Proc(UInt32, LibC::BOOL, HRESULT)).call(id, fshow)
  end
  def is_control_window_shown(id : UInt32, pfshown : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_control_window_shown.unsafe_as(Proc(UInt32, LibC::BOOL*, HRESULT)).call(id, pfshown)
  end
  def ie_get_display_name(pidl : ITEMIDLIST*, pwszname : LibC::LPWSTR, uflags : UInt32) : HRESULT
    @lpVtbl.value.ie_get_display_name.unsafe_as(Proc(ITEMIDLIST*, LibC::LPWSTR, UInt32, HRESULT)).call(pidl, pwszname, uflags)
  end
  def ie_parse_display_name(uicp : UInt32, pwszpath : LibC::LPWSTR, ppidlout : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.ie_parse_display_name.unsafe_as(Proc(UInt32, LibC::LPWSTR, ITEMIDLIST**, HRESULT)).call(uicp, pwszpath, ppidlout)
  end
  def display_parse_error(hres : HRESULT, pwszpath : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.display_parse_error.unsafe_as(Proc(HRESULT, LibC::LPWSTR, HRESULT)).call(hres, pwszpath)
  end
  def navigate_to_pidl(pidl : ITEMIDLIST*, grfhlnf : UInt32) : HRESULT
    @lpVtbl.value.navigate_to_pidl.unsafe_as(Proc(ITEMIDLIST*, UInt32, HRESULT)).call(pidl, grfhlnf)
  end
  def set_navigate_state(bnstate : BNSTATE) : HRESULT
    @lpVtbl.value.set_navigate_state.unsafe_as(Proc(BNSTATE, HRESULT)).call(bnstate)
  end
  def get_navigate_state(pbnstate : BNSTATE*) : HRESULT
    @lpVtbl.value.get_navigate_state.unsafe_as(Proc(BNSTATE*, HRESULT)).call(pbnstate)
  end
  def notify_redirect(psv : IShellView, pidl : ITEMIDLIST*, pfdidbrowse : LibC::BOOL*) : HRESULT
    @lpVtbl.value.notify_redirect.unsafe_as(Proc(IShellView, ITEMIDLIST*, LibC::BOOL*, HRESULT)).call(psv, pidl, pfdidbrowse)
  end
  def update_window_list : HRESULT
    @lpVtbl.value.update_window_list.unsafe_as(Proc(HRESULT)).call
  end
  def update_back_forward_state : HRESULT
    @lpVtbl.value.update_back_forward_state.unsafe_as(Proc(HRESULT)).call
  end
  def set_flags(dwflags : UInt32, dwflagmask : UInt32) : HRESULT
    @lpVtbl.value.set_flags.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwflags, dwflagmask)
  end
  def get_flags(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
  def can_navigate_now : HRESULT
    @lpVtbl.value.can_navigate_now.unsafe_as(Proc(HRESULT)).call
  end
  def get_pidl(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_pidl.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def set_referrer(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.set_referrer.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def get_browser_index : UInt32
    @lpVtbl.value.get_browser_index.unsafe_as(Proc(UInt32)).call
  end
  def get_browser_by_index(dwid : UInt32, ppunk : IUnknown*) : HRESULT
    @lpVtbl.value.get_browser_by_index.unsafe_as(Proc(UInt32, IUnknown*, HRESULT)).call(dwid, ppunk)
  end
  def get_history_object(ppole : IOleObject*, pstm : IStream*, ppbc : IBindCtx*) : HRESULT
    @lpVtbl.value.get_history_object.unsafe_as(Proc(IOleObject*, IStream*, IBindCtx*, HRESULT)).call(ppole, pstm, ppbc)
  end
  def set_history_object(pole : IOleObject, fislocalanchor : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_history_object.unsafe_as(Proc(IOleObject, LibC::BOOL, HRESULT)).call(pole, fislocalanchor)
  end
  def cache_ole_server(pole : IOleObject) : HRESULT
    @lpVtbl.value.cache_ole_server.unsafe_as(Proc(IOleObject, HRESULT)).call(pole)
  end
  def get_set_code_page(pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.get_set_code_page.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarin, pvarout)
  end
  def on_http_equiv(psv : IShellView, fdone : LibC::BOOL, pvarargin : VARIANT*, pvarargout : VARIANT*) : HRESULT
    @lpVtbl.value.on_http_equiv.unsafe_as(Proc(IShellView, LibC::BOOL, VARIANT*, VARIANT*, HRESULT)).call(psv, fdone, pvarargin, pvarargout)
  end
  def get_palette(hpal : HPALETTE*) : HRESULT
    @lpVtbl.value.get_palette.unsafe_as(Proc(HPALETTE*, HRESULT)).call(hpal)
  end
  def register_window(fforceregister : LibC::BOOL, swc : Int32) : HRESULT
    @lpVtbl.value.register_window.unsafe_as(Proc(LibC::BOOL, Int32, HRESULT)).call(fforceregister, swc)
  end
end
struct LibWin32::IShellService
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_owner(punkowner : IUnknown) : HRESULT
    @lpVtbl.value.set_owner.unsafe_as(Proc(IUnknown, HRESULT)).call(punkowner)
  end
end
struct LibWin32::IBrowserService2
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_parent_site(ppipsite : IOleInPlaceSite*) : HRESULT
    @lpVtbl.value.get_parent_site.unsafe_as(Proc(IOleInPlaceSite*, HRESULT)).call(ppipsite)
  end
  def set_title(psv : IShellView, pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_title.unsafe_as(Proc(IShellView, LibC::LPWSTR, HRESULT)).call(psv, pszname)
  end
  def get_title(psv : IShellView, pszname : Char*, cchname : UInt32) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(IShellView, Char*, UInt32, HRESULT)).call(psv, pszname, cchname)
  end
  def get_ole_object(ppobjv : IOleObject*) : HRESULT
    @lpVtbl.value.get_ole_object.unsafe_as(Proc(IOleObject*, HRESULT)).call(ppobjv)
  end
  def get_travel_log(pptl : ITravelLog*) : HRESULT
    @lpVtbl.value.get_travel_log.unsafe_as(Proc(ITravelLog*, HRESULT)).call(pptl)
  end
  def show_control_window(id : UInt32, fshow : LibC::BOOL) : HRESULT
    @lpVtbl.value.show_control_window.unsafe_as(Proc(UInt32, LibC::BOOL, HRESULT)).call(id, fshow)
  end
  def is_control_window_shown(id : UInt32, pfshown : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_control_window_shown.unsafe_as(Proc(UInt32, LibC::BOOL*, HRESULT)).call(id, pfshown)
  end
  def ie_get_display_name(pidl : ITEMIDLIST*, pwszname : LibC::LPWSTR, uflags : UInt32) : HRESULT
    @lpVtbl.value.ie_get_display_name.unsafe_as(Proc(ITEMIDLIST*, LibC::LPWSTR, UInt32, HRESULT)).call(pidl, pwszname, uflags)
  end
  def ie_parse_display_name(uicp : UInt32, pwszpath : LibC::LPWSTR, ppidlout : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.ie_parse_display_name.unsafe_as(Proc(UInt32, LibC::LPWSTR, ITEMIDLIST**, HRESULT)).call(uicp, pwszpath, ppidlout)
  end
  def display_parse_error(hres : HRESULT, pwszpath : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.display_parse_error.unsafe_as(Proc(HRESULT, LibC::LPWSTR, HRESULT)).call(hres, pwszpath)
  end
  def navigate_to_pidl(pidl : ITEMIDLIST*, grfhlnf : UInt32) : HRESULT
    @lpVtbl.value.navigate_to_pidl.unsafe_as(Proc(ITEMIDLIST*, UInt32, HRESULT)).call(pidl, grfhlnf)
  end
  def set_navigate_state(bnstate : BNSTATE) : HRESULT
    @lpVtbl.value.set_navigate_state.unsafe_as(Proc(BNSTATE, HRESULT)).call(bnstate)
  end
  def get_navigate_state(pbnstate : BNSTATE*) : HRESULT
    @lpVtbl.value.get_navigate_state.unsafe_as(Proc(BNSTATE*, HRESULT)).call(pbnstate)
  end
  def notify_redirect(psv : IShellView, pidl : ITEMIDLIST*, pfdidbrowse : LibC::BOOL*) : HRESULT
    @lpVtbl.value.notify_redirect.unsafe_as(Proc(IShellView, ITEMIDLIST*, LibC::BOOL*, HRESULT)).call(psv, pidl, pfdidbrowse)
  end
  def update_window_list : HRESULT
    @lpVtbl.value.update_window_list.unsafe_as(Proc(HRESULT)).call
  end
  def update_back_forward_state : HRESULT
    @lpVtbl.value.update_back_forward_state.unsafe_as(Proc(HRESULT)).call
  end
  def set_flags(dwflags : UInt32, dwflagmask : UInt32) : HRESULT
    @lpVtbl.value.set_flags.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwflags, dwflagmask)
  end
  def get_flags(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
  def can_navigate_now : HRESULT
    @lpVtbl.value.can_navigate_now.unsafe_as(Proc(HRESULT)).call
  end
  def get_pidl(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_pidl.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def set_referrer(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.set_referrer.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def get_browser_index : UInt32
    @lpVtbl.value.get_browser_index.unsafe_as(Proc(UInt32)).call
  end
  def get_browser_by_index(dwid : UInt32, ppunk : IUnknown*) : HRESULT
    @lpVtbl.value.get_browser_by_index.unsafe_as(Proc(UInt32, IUnknown*, HRESULT)).call(dwid, ppunk)
  end
  def get_history_object(ppole : IOleObject*, pstm : IStream*, ppbc : IBindCtx*) : HRESULT
    @lpVtbl.value.get_history_object.unsafe_as(Proc(IOleObject*, IStream*, IBindCtx*, HRESULT)).call(ppole, pstm, ppbc)
  end
  def set_history_object(pole : IOleObject, fislocalanchor : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_history_object.unsafe_as(Proc(IOleObject, LibC::BOOL, HRESULT)).call(pole, fislocalanchor)
  end
  def cache_ole_server(pole : IOleObject) : HRESULT
    @lpVtbl.value.cache_ole_server.unsafe_as(Proc(IOleObject, HRESULT)).call(pole)
  end
  def get_set_code_page(pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.get_set_code_page.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarin, pvarout)
  end
  def on_http_equiv(psv : IShellView, fdone : LibC::BOOL, pvarargin : VARIANT*, pvarargout : VARIANT*) : HRESULT
    @lpVtbl.value.on_http_equiv.unsafe_as(Proc(IShellView, LibC::BOOL, VARIANT*, VARIANT*, HRESULT)).call(psv, fdone, pvarargin, pvarargout)
  end
  def get_palette(hpal : HPALETTE*) : HRESULT
    @lpVtbl.value.get_palette.unsafe_as(Proc(HPALETTE*, HRESULT)).call(hpal)
  end
  def register_window(fforceregister : LibC::BOOL, swc : Int32) : HRESULT
    @lpVtbl.value.register_window.unsafe_as(Proc(LibC::BOOL, Int32, HRESULT)).call(fforceregister, swc)
  end
  def wnd_proc_bs(hwnd : LibC::HANDLE, umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT
    @lpVtbl.value.wnd_proc_bs.unsafe_as(Proc(LibC::HANDLE, UInt32, LibC::UINT_PTR, LPARAM, LRESULT)).call(hwnd, umsg, wparam, lparam)
  end
  def set_as_def_folder_settings : HRESULT
    @lpVtbl.value.set_as_def_folder_settings.unsafe_as(Proc(HRESULT)).call
  end
  def get_view_rect(prc : RECT*) : HRESULT
    @lpVtbl.value.get_view_rect.unsafe_as(Proc(RECT*, HRESULT)).call(prc)
  end
  def on_size(wparam : LibC::UINT_PTR) : HRESULT
    @lpVtbl.value.on_size.unsafe_as(Proc(LibC::UINT_PTR, HRESULT)).call(wparam)
  end
  def on_create(pcs : CREATESTRUCTW*) : HRESULT
    @lpVtbl.value.on_create.unsafe_as(Proc(CREATESTRUCTW*, HRESULT)).call(pcs)
  end
  def on_command(wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT
    @lpVtbl.value.on_command.unsafe_as(Proc(LibC::UINT_PTR, LPARAM, LRESULT)).call(wparam, lparam)
  end
  def on_destroy : HRESULT
    @lpVtbl.value.on_destroy.unsafe_as(Proc(HRESULT)).call
  end
  def on_notify(pnm : NMHDR*) : LRESULT
    @lpVtbl.value.on_notify.unsafe_as(Proc(NMHDR*, LRESULT)).call(pnm)
  end
  def on_set_focus : HRESULT
    @lpVtbl.value.on_set_focus.unsafe_as(Proc(HRESULT)).call
  end
  def on_frame_window_activate_bs(factive : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_frame_window_activate_bs.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(factive)
  end
  def release_shell_view : HRESULT
    @lpVtbl.value.release_shell_view.unsafe_as(Proc(HRESULT)).call
  end
  def activate_pending_view : HRESULT
    @lpVtbl.value.activate_pending_view.unsafe_as(Proc(HRESULT)).call
  end
  def create_view_window(psvnew : IShellView, psvold : IShellView, prcview : RECT*, phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.create_view_window.unsafe_as(Proc(IShellView, IShellView, RECT*, HANDLE*, HRESULT)).call(psvnew, psvold, prcview, phwnd)
  end
  def create_browser_prop_sheet_ext(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.create_browser_prop_sheet_ext.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
  def get_view_window(phwndview : HANDLE*) : HRESULT
    @lpVtbl.value.get_view_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwndview)
  end
  def get_base_browser_data(pbbd : BASEBROWSERDATALH**) : HRESULT
    @lpVtbl.value.get_base_browser_data.unsafe_as(Proc(BASEBROWSERDATALH**, HRESULT)).call(pbbd)
  end
  def put_base_browser_data : BASEBROWSERDATALH*
    @lpVtbl.value.put_base_browser_data.unsafe_as(Proc(BASEBROWSERDATALH**)).call
  end
  def initialize_travel_log(ptl : ITravelLog, dw : UInt32) : HRESULT
    @lpVtbl.value.initialize_travel_log.unsafe_as(Proc(ITravelLog, UInt32, HRESULT)).call(ptl, dw)
  end
  def set_top_browser : HRESULT
    @lpVtbl.value.set_top_browser.unsafe_as(Proc(HRESULT)).call
  end
  def offline(icmd : Int32) : HRESULT
    @lpVtbl.value.offline.unsafe_as(Proc(Int32, HRESULT)).call(icmd)
  end
  def allow_view_resize(f : LibC::BOOL) : HRESULT
    @lpVtbl.value.allow_view_resize.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(f)
  end
  def set_activate_state(u : UInt32) : HRESULT
    @lpVtbl.value.set_activate_state.unsafe_as(Proc(UInt32, HRESULT)).call(u)
  end
  def update_secure_lock_icon(esecurelock : Int32) : HRESULT
    @lpVtbl.value.update_secure_lock_icon.unsafe_as(Proc(Int32, HRESULT)).call(esecurelock)
  end
  def initialize_download_manager : HRESULT
    @lpVtbl.value.initialize_download_manager.unsafe_as(Proc(HRESULT)).call
  end
  def initialize_transition_site : HRESULT
    @lpVtbl.value.initialize_transition_site.unsafe_as(Proc(HRESULT)).call
  end
  def _initialize(hwnd : LibC::HANDLE, pauto : IUnknown) : HRESULT
    @lpVtbl.value._initialize.unsafe_as(Proc(LibC::HANDLE, IUnknown, HRESULT)).call(hwnd, pauto)
  end
  def _cancel_pending_navigation_async : HRESULT
    @lpVtbl.value._cancel_pending_navigation_async.unsafe_as(Proc(HRESULT)).call
  end
  def _cancel_pending_view : HRESULT
    @lpVtbl.value._cancel_pending_view.unsafe_as(Proc(HRESULT)).call
  end
  def _may_save_changes : HRESULT
    @lpVtbl.value._may_save_changes.unsafe_as(Proc(HRESULT)).call
  end
  def _pause_or_resume_view(fpaused : LibC::BOOL) : HRESULT
    @lpVtbl.value._pause_or_resume_view.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fpaused)
  end
  def _disable_modeless : HRESULT
    @lpVtbl.value._disable_modeless.unsafe_as(Proc(HRESULT)).call
  end
  def _navigate_to_pidl2(pidl : ITEMIDLIST*, grfhlnf : UInt32, dwflags : UInt32) : HRESULT
    @lpVtbl.value._navigate_to_pidl2.unsafe_as(Proc(ITEMIDLIST*, UInt32, UInt32, HRESULT)).call(pidl, grfhlnf, dwflags)
  end
  def _try_shell2_rename(psv : IShellView, pidlnew : ITEMIDLIST*) : HRESULT
    @lpVtbl.value._try_shell2_rename.unsafe_as(Proc(IShellView, ITEMIDLIST*, HRESULT)).call(psv, pidlnew)
  end
  def _switch_activation_now : HRESULT
    @lpVtbl.value._switch_activation_now.unsafe_as(Proc(HRESULT)).call
  end
  def _exec_children(punkbar : IUnknown, fbroadcast : LibC::BOOL, pguidcmdgroup : Guid*, ncmdid : UInt32, ncmdexecopt : UInt32, pvarargin : VARIANT*, pvarargout : VARIANT*) : HRESULT
    @lpVtbl.value._exec_children.unsafe_as(Proc(IUnknown, LibC::BOOL, Guid*, UInt32, UInt32, VARIANT*, VARIANT*, HRESULT)).call(punkbar, fbroadcast, pguidcmdgroup, ncmdid, ncmdexecopt, pvarargin, pvarargout)
  end
  def _send_children(hwndbar : LibC::HANDLE, fbroadcast : LibC::BOOL, umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : HRESULT
    @lpVtbl.value._send_children.unsafe_as(Proc(LibC::HANDLE, LibC::BOOL, UInt32, LibC::UINT_PTR, LPARAM, HRESULT)).call(hwndbar, fbroadcast, umsg, wparam, lparam)
  end
  def get_folder_set_data(pfsd : FOLDERSETDATA*) : HRESULT
    @lpVtbl.value.get_folder_set_data.unsafe_as(Proc(FOLDERSETDATA*, HRESULT)).call(pfsd)
  end
  def _on_focus_change(itb : UInt32) : HRESULT
    @lpVtbl.value._on_focus_change.unsafe_as(Proc(UInt32, HRESULT)).call(itb)
  end
  def v_show_hide_child_windows(fchildonly : LibC::BOOL) : HRESULT
    @lpVtbl.value.v_show_hide_child_windows.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fchildonly)
  end
  def _get_itb_last_focus : UInt32
    @lpVtbl.value._get_itb_last_focus.unsafe_as(Proc(UInt32)).call
  end
  def _put_itb_last_focus(itblastfocus : UInt32) : HRESULT
    @lpVtbl.value._put_itb_last_focus.unsafe_as(Proc(UInt32, HRESULT)).call(itblastfocus)
  end
  def _ui_activate_view(ustate : UInt32) : HRESULT
    @lpVtbl.value._ui_activate_view.unsafe_as(Proc(UInt32, HRESULT)).call(ustate)
  end
  def _get_view_border_rect(prc : RECT*) : HRESULT
    @lpVtbl.value._get_view_border_rect.unsafe_as(Proc(RECT*, HRESULT)).call(prc)
  end
  def _update_view_rect_size : HRESULT
    @lpVtbl.value._update_view_rect_size.unsafe_as(Proc(HRESULT)).call
  end
  def _resize_next_border(itb : UInt32) : HRESULT
    @lpVtbl.value._resize_next_border.unsafe_as(Proc(UInt32, HRESULT)).call(itb)
  end
  def _resize_view : HRESULT
    @lpVtbl.value._resize_view.unsafe_as(Proc(HRESULT)).call
  end
  def _get_effective_client_area(lprectborder : RECT*, hmon : HMONITOR) : HRESULT
    @lpVtbl.value._get_effective_client_area.unsafe_as(Proc(RECT*, HMONITOR, HRESULT)).call(lprectborder, hmon)
  end
  def v_get_view_stream(pidl : ITEMIDLIST*, grfmode : UInt32, pwszname : LibC::LPWSTR) : IStream
    @lpVtbl.value.v_get_view_stream.unsafe_as(Proc(ITEMIDLIST*, UInt32, LibC::LPWSTR, IStream)).call(pidl, grfmode, pwszname)
  end
  def forward_view_msg(umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT
    @lpVtbl.value.forward_view_msg.unsafe_as(Proc(UInt32, LibC::UINT_PTR, LPARAM, LRESULT)).call(umsg, wparam, lparam)
  end
  def set_accelerator_menu(hacc : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_accelerator_menu.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hacc)
  end
  def _get_toolbar_count : Int32
    @lpVtbl.value._get_toolbar_count.unsafe_as(Proc(Int32)).call
  end
  def _get_toolbar_item(itb : Int32) : TOOLBARITEM*
    @lpVtbl.value._get_toolbar_item.unsafe_as(Proc(Int32, TOOLBARITEM**)).call(itb)
  end
  def _save_toolbars(pstm : IStream) : HRESULT
    @lpVtbl.value._save_toolbars.unsafe_as(Proc(IStream, HRESULT)).call(pstm)
  end
  def _load_toolbars(pstm : IStream) : HRESULT
    @lpVtbl.value._load_toolbars.unsafe_as(Proc(IStream, HRESULT)).call(pstm)
  end
  def _close_and_release_toolbars(fclose : LibC::BOOL) : HRESULT
    @lpVtbl.value._close_and_release_toolbars.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fclose)
  end
  def v_may_get_next_toolbar_focus(lpmsg : MSG*, itbnext : UInt32, citb : Int32, pptbi : TOOLBARITEM**, phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.v_may_get_next_toolbar_focus.unsafe_as(Proc(MSG*, UInt32, Int32, TOOLBARITEM**, HANDLE*, HRESULT)).call(lpmsg, itbnext, citb, pptbi, phwnd)
  end
  def _resize_next_border_helper(itb : UInt32, busehmonitor : LibC::BOOL) : HRESULT
    @lpVtbl.value._resize_next_border_helper.unsafe_as(Proc(UInt32, LibC::BOOL, HRESULT)).call(itb, busehmonitor)
  end
  def _find_t_bar(punksrc : IUnknown) : UInt32
    @lpVtbl.value._find_t_bar.unsafe_as(Proc(IUnknown, UInt32)).call(punksrc)
  end
  def _set_focus(ptbi : TOOLBARITEM*, hwnd : LibC::HANDLE, lpmsg : MSG*) : HRESULT
    @lpVtbl.value._set_focus.unsafe_as(Proc(TOOLBARITEM*, LibC::HANDLE, MSG*, HRESULT)).call(ptbi, hwnd, lpmsg)
  end
  def v_may_translate_accelerator(pmsg : MSG*) : HRESULT
    @lpVtbl.value.v_may_translate_accelerator.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
  def _get_border_dw_helper(punksrc : IUnknown, lprectborder : RECT*, busehmonitor : LibC::BOOL) : HRESULT
    @lpVtbl.value._get_border_dw_helper.unsafe_as(Proc(IUnknown, RECT*, LibC::BOOL, HRESULT)).call(punksrc, lprectborder, busehmonitor)
  end
  def v_check_zone_crossing(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.v_check_zone_crossing.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
end
struct LibWin32::IBrowserService3
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_parent_site(ppipsite : IOleInPlaceSite*) : HRESULT
    @lpVtbl.value.get_parent_site.unsafe_as(Proc(IOleInPlaceSite*, HRESULT)).call(ppipsite)
  end
  def set_title(psv : IShellView, pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_title.unsafe_as(Proc(IShellView, LibC::LPWSTR, HRESULT)).call(psv, pszname)
  end
  def get_title(psv : IShellView, pszname : Char*, cchname : UInt32) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(IShellView, Char*, UInt32, HRESULT)).call(psv, pszname, cchname)
  end
  def get_ole_object(ppobjv : IOleObject*) : HRESULT
    @lpVtbl.value.get_ole_object.unsafe_as(Proc(IOleObject*, HRESULT)).call(ppobjv)
  end
  def get_travel_log(pptl : ITravelLog*) : HRESULT
    @lpVtbl.value.get_travel_log.unsafe_as(Proc(ITravelLog*, HRESULT)).call(pptl)
  end
  def show_control_window(id : UInt32, fshow : LibC::BOOL) : HRESULT
    @lpVtbl.value.show_control_window.unsafe_as(Proc(UInt32, LibC::BOOL, HRESULT)).call(id, fshow)
  end
  def is_control_window_shown(id : UInt32, pfshown : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_control_window_shown.unsafe_as(Proc(UInt32, LibC::BOOL*, HRESULT)).call(id, pfshown)
  end
  def ie_get_display_name(pidl : ITEMIDLIST*, pwszname : LibC::LPWSTR, uflags : UInt32) : HRESULT
    @lpVtbl.value.ie_get_display_name.unsafe_as(Proc(ITEMIDLIST*, LibC::LPWSTR, UInt32, HRESULT)).call(pidl, pwszname, uflags)
  end
  def ie_parse_display_name(uicp : UInt32, pwszpath : LibC::LPWSTR, ppidlout : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.ie_parse_display_name.unsafe_as(Proc(UInt32, LibC::LPWSTR, ITEMIDLIST**, HRESULT)).call(uicp, pwszpath, ppidlout)
  end
  def display_parse_error(hres : HRESULT, pwszpath : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.display_parse_error.unsafe_as(Proc(HRESULT, LibC::LPWSTR, HRESULT)).call(hres, pwszpath)
  end
  def navigate_to_pidl(pidl : ITEMIDLIST*, grfhlnf : UInt32) : HRESULT
    @lpVtbl.value.navigate_to_pidl.unsafe_as(Proc(ITEMIDLIST*, UInt32, HRESULT)).call(pidl, grfhlnf)
  end
  def set_navigate_state(bnstate : BNSTATE) : HRESULT
    @lpVtbl.value.set_navigate_state.unsafe_as(Proc(BNSTATE, HRESULT)).call(bnstate)
  end
  def get_navigate_state(pbnstate : BNSTATE*) : HRESULT
    @lpVtbl.value.get_navigate_state.unsafe_as(Proc(BNSTATE*, HRESULT)).call(pbnstate)
  end
  def notify_redirect(psv : IShellView, pidl : ITEMIDLIST*, pfdidbrowse : LibC::BOOL*) : HRESULT
    @lpVtbl.value.notify_redirect.unsafe_as(Proc(IShellView, ITEMIDLIST*, LibC::BOOL*, HRESULT)).call(psv, pidl, pfdidbrowse)
  end
  def update_window_list : HRESULT
    @lpVtbl.value.update_window_list.unsafe_as(Proc(HRESULT)).call
  end
  def update_back_forward_state : HRESULT
    @lpVtbl.value.update_back_forward_state.unsafe_as(Proc(HRESULT)).call
  end
  def set_flags(dwflags : UInt32, dwflagmask : UInt32) : HRESULT
    @lpVtbl.value.set_flags.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwflags, dwflagmask)
  end
  def get_flags(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
  def can_navigate_now : HRESULT
    @lpVtbl.value.can_navigate_now.unsafe_as(Proc(HRESULT)).call
  end
  def get_pidl(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_pidl.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def set_referrer(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.set_referrer.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def get_browser_index : UInt32
    @lpVtbl.value.get_browser_index.unsafe_as(Proc(UInt32)).call
  end
  def get_browser_by_index(dwid : UInt32, ppunk : IUnknown*) : HRESULT
    @lpVtbl.value.get_browser_by_index.unsafe_as(Proc(UInt32, IUnknown*, HRESULT)).call(dwid, ppunk)
  end
  def get_history_object(ppole : IOleObject*, pstm : IStream*, ppbc : IBindCtx*) : HRESULT
    @lpVtbl.value.get_history_object.unsafe_as(Proc(IOleObject*, IStream*, IBindCtx*, HRESULT)).call(ppole, pstm, ppbc)
  end
  def set_history_object(pole : IOleObject, fislocalanchor : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_history_object.unsafe_as(Proc(IOleObject, LibC::BOOL, HRESULT)).call(pole, fislocalanchor)
  end
  def cache_ole_server(pole : IOleObject) : HRESULT
    @lpVtbl.value.cache_ole_server.unsafe_as(Proc(IOleObject, HRESULT)).call(pole)
  end
  def get_set_code_page(pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.get_set_code_page.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarin, pvarout)
  end
  def on_http_equiv(psv : IShellView, fdone : LibC::BOOL, pvarargin : VARIANT*, pvarargout : VARIANT*) : HRESULT
    @lpVtbl.value.on_http_equiv.unsafe_as(Proc(IShellView, LibC::BOOL, VARIANT*, VARIANT*, HRESULT)).call(psv, fdone, pvarargin, pvarargout)
  end
  def get_palette(hpal : HPALETTE*) : HRESULT
    @lpVtbl.value.get_palette.unsafe_as(Proc(HPALETTE*, HRESULT)).call(hpal)
  end
  def register_window(fforceregister : LibC::BOOL, swc : Int32) : HRESULT
    @lpVtbl.value.register_window.unsafe_as(Proc(LibC::BOOL, Int32, HRESULT)).call(fforceregister, swc)
  end
  def wnd_proc_bs(hwnd : LibC::HANDLE, umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT
    @lpVtbl.value.wnd_proc_bs.unsafe_as(Proc(LibC::HANDLE, UInt32, LibC::UINT_PTR, LPARAM, LRESULT)).call(hwnd, umsg, wparam, lparam)
  end
  def set_as_def_folder_settings : HRESULT
    @lpVtbl.value.set_as_def_folder_settings.unsafe_as(Proc(HRESULT)).call
  end
  def get_view_rect(prc : RECT*) : HRESULT
    @lpVtbl.value.get_view_rect.unsafe_as(Proc(RECT*, HRESULT)).call(prc)
  end
  def on_size(wparam : LibC::UINT_PTR) : HRESULT
    @lpVtbl.value.on_size.unsafe_as(Proc(LibC::UINT_PTR, HRESULT)).call(wparam)
  end
  def on_create(pcs : CREATESTRUCTW*) : HRESULT
    @lpVtbl.value.on_create.unsafe_as(Proc(CREATESTRUCTW*, HRESULT)).call(pcs)
  end
  def on_command(wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT
    @lpVtbl.value.on_command.unsafe_as(Proc(LibC::UINT_PTR, LPARAM, LRESULT)).call(wparam, lparam)
  end
  def on_destroy : HRESULT
    @lpVtbl.value.on_destroy.unsafe_as(Proc(HRESULT)).call
  end
  def on_notify(pnm : NMHDR*) : LRESULT
    @lpVtbl.value.on_notify.unsafe_as(Proc(NMHDR*, LRESULT)).call(pnm)
  end
  def on_set_focus : HRESULT
    @lpVtbl.value.on_set_focus.unsafe_as(Proc(HRESULT)).call
  end
  def on_frame_window_activate_bs(factive : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_frame_window_activate_bs.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(factive)
  end
  def release_shell_view : HRESULT
    @lpVtbl.value.release_shell_view.unsafe_as(Proc(HRESULT)).call
  end
  def activate_pending_view : HRESULT
    @lpVtbl.value.activate_pending_view.unsafe_as(Proc(HRESULT)).call
  end
  def create_view_window(psvnew : IShellView, psvold : IShellView, prcview : RECT*, phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.create_view_window.unsafe_as(Proc(IShellView, IShellView, RECT*, HANDLE*, HRESULT)).call(psvnew, psvold, prcview, phwnd)
  end
  def create_browser_prop_sheet_ext(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.create_browser_prop_sheet_ext.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
  def get_view_window(phwndview : HANDLE*) : HRESULT
    @lpVtbl.value.get_view_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwndview)
  end
  def get_base_browser_data(pbbd : BASEBROWSERDATALH**) : HRESULT
    @lpVtbl.value.get_base_browser_data.unsafe_as(Proc(BASEBROWSERDATALH**, HRESULT)).call(pbbd)
  end
  def put_base_browser_data : BASEBROWSERDATALH*
    @lpVtbl.value.put_base_browser_data.unsafe_as(Proc(BASEBROWSERDATALH**)).call
  end
  def initialize_travel_log(ptl : ITravelLog, dw : UInt32) : HRESULT
    @lpVtbl.value.initialize_travel_log.unsafe_as(Proc(ITravelLog, UInt32, HRESULT)).call(ptl, dw)
  end
  def set_top_browser : HRESULT
    @lpVtbl.value.set_top_browser.unsafe_as(Proc(HRESULT)).call
  end
  def offline(icmd : Int32) : HRESULT
    @lpVtbl.value.offline.unsafe_as(Proc(Int32, HRESULT)).call(icmd)
  end
  def allow_view_resize(f : LibC::BOOL) : HRESULT
    @lpVtbl.value.allow_view_resize.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(f)
  end
  def set_activate_state(u : UInt32) : HRESULT
    @lpVtbl.value.set_activate_state.unsafe_as(Proc(UInt32, HRESULT)).call(u)
  end
  def update_secure_lock_icon(esecurelock : Int32) : HRESULT
    @lpVtbl.value.update_secure_lock_icon.unsafe_as(Proc(Int32, HRESULT)).call(esecurelock)
  end
  def initialize_download_manager : HRESULT
    @lpVtbl.value.initialize_download_manager.unsafe_as(Proc(HRESULT)).call
  end
  def initialize_transition_site : HRESULT
    @lpVtbl.value.initialize_transition_site.unsafe_as(Proc(HRESULT)).call
  end
  def _initialize(hwnd : LibC::HANDLE, pauto : IUnknown) : HRESULT
    @lpVtbl.value._initialize.unsafe_as(Proc(LibC::HANDLE, IUnknown, HRESULT)).call(hwnd, pauto)
  end
  def _cancel_pending_navigation_async : HRESULT
    @lpVtbl.value._cancel_pending_navigation_async.unsafe_as(Proc(HRESULT)).call
  end
  def _cancel_pending_view : HRESULT
    @lpVtbl.value._cancel_pending_view.unsafe_as(Proc(HRESULT)).call
  end
  def _may_save_changes : HRESULT
    @lpVtbl.value._may_save_changes.unsafe_as(Proc(HRESULT)).call
  end
  def _pause_or_resume_view(fpaused : LibC::BOOL) : HRESULT
    @lpVtbl.value._pause_or_resume_view.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fpaused)
  end
  def _disable_modeless : HRESULT
    @lpVtbl.value._disable_modeless.unsafe_as(Proc(HRESULT)).call
  end
  def _navigate_to_pidl2(pidl : ITEMIDLIST*, grfhlnf : UInt32, dwflags : UInt32) : HRESULT
    @lpVtbl.value._navigate_to_pidl2.unsafe_as(Proc(ITEMIDLIST*, UInt32, UInt32, HRESULT)).call(pidl, grfhlnf, dwflags)
  end
  def _try_shell2_rename(psv : IShellView, pidlnew : ITEMIDLIST*) : HRESULT
    @lpVtbl.value._try_shell2_rename.unsafe_as(Proc(IShellView, ITEMIDLIST*, HRESULT)).call(psv, pidlnew)
  end
  def _switch_activation_now : HRESULT
    @lpVtbl.value._switch_activation_now.unsafe_as(Proc(HRESULT)).call
  end
  def _exec_children(punkbar : IUnknown, fbroadcast : LibC::BOOL, pguidcmdgroup : Guid*, ncmdid : UInt32, ncmdexecopt : UInt32, pvarargin : VARIANT*, pvarargout : VARIANT*) : HRESULT
    @lpVtbl.value._exec_children.unsafe_as(Proc(IUnknown, LibC::BOOL, Guid*, UInt32, UInt32, VARIANT*, VARIANT*, HRESULT)).call(punkbar, fbroadcast, pguidcmdgroup, ncmdid, ncmdexecopt, pvarargin, pvarargout)
  end
  def _send_children(hwndbar : LibC::HANDLE, fbroadcast : LibC::BOOL, umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : HRESULT
    @lpVtbl.value._send_children.unsafe_as(Proc(LibC::HANDLE, LibC::BOOL, UInt32, LibC::UINT_PTR, LPARAM, HRESULT)).call(hwndbar, fbroadcast, umsg, wparam, lparam)
  end
  def get_folder_set_data(pfsd : FOLDERSETDATA*) : HRESULT
    @lpVtbl.value.get_folder_set_data.unsafe_as(Proc(FOLDERSETDATA*, HRESULT)).call(pfsd)
  end
  def _on_focus_change(itb : UInt32) : HRESULT
    @lpVtbl.value._on_focus_change.unsafe_as(Proc(UInt32, HRESULT)).call(itb)
  end
  def v_show_hide_child_windows(fchildonly : LibC::BOOL) : HRESULT
    @lpVtbl.value.v_show_hide_child_windows.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fchildonly)
  end
  def _get_itb_last_focus : UInt32
    @lpVtbl.value._get_itb_last_focus.unsafe_as(Proc(UInt32)).call
  end
  def _put_itb_last_focus(itblastfocus : UInt32) : HRESULT
    @lpVtbl.value._put_itb_last_focus.unsafe_as(Proc(UInt32, HRESULT)).call(itblastfocus)
  end
  def _ui_activate_view(ustate : UInt32) : HRESULT
    @lpVtbl.value._ui_activate_view.unsafe_as(Proc(UInt32, HRESULT)).call(ustate)
  end
  def _get_view_border_rect(prc : RECT*) : HRESULT
    @lpVtbl.value._get_view_border_rect.unsafe_as(Proc(RECT*, HRESULT)).call(prc)
  end
  def _update_view_rect_size : HRESULT
    @lpVtbl.value._update_view_rect_size.unsafe_as(Proc(HRESULT)).call
  end
  def _resize_next_border(itb : UInt32) : HRESULT
    @lpVtbl.value._resize_next_border.unsafe_as(Proc(UInt32, HRESULT)).call(itb)
  end
  def _resize_view : HRESULT
    @lpVtbl.value._resize_view.unsafe_as(Proc(HRESULT)).call
  end
  def _get_effective_client_area(lprectborder : RECT*, hmon : HMONITOR) : HRESULT
    @lpVtbl.value._get_effective_client_area.unsafe_as(Proc(RECT*, HMONITOR, HRESULT)).call(lprectborder, hmon)
  end
  def v_get_view_stream(pidl : ITEMIDLIST*, grfmode : UInt32, pwszname : LibC::LPWSTR) : IStream
    @lpVtbl.value.v_get_view_stream.unsafe_as(Proc(ITEMIDLIST*, UInt32, LibC::LPWSTR, IStream)).call(pidl, grfmode, pwszname)
  end
  def forward_view_msg(umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT
    @lpVtbl.value.forward_view_msg.unsafe_as(Proc(UInt32, LibC::UINT_PTR, LPARAM, LRESULT)).call(umsg, wparam, lparam)
  end
  def set_accelerator_menu(hacc : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_accelerator_menu.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hacc)
  end
  def _get_toolbar_count : Int32
    @lpVtbl.value._get_toolbar_count.unsafe_as(Proc(Int32)).call
  end
  def _get_toolbar_item(itb : Int32) : TOOLBARITEM*
    @lpVtbl.value._get_toolbar_item.unsafe_as(Proc(Int32, TOOLBARITEM**)).call(itb)
  end
  def _save_toolbars(pstm : IStream) : HRESULT
    @lpVtbl.value._save_toolbars.unsafe_as(Proc(IStream, HRESULT)).call(pstm)
  end
  def _load_toolbars(pstm : IStream) : HRESULT
    @lpVtbl.value._load_toolbars.unsafe_as(Proc(IStream, HRESULT)).call(pstm)
  end
  def _close_and_release_toolbars(fclose : LibC::BOOL) : HRESULT
    @lpVtbl.value._close_and_release_toolbars.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fclose)
  end
  def v_may_get_next_toolbar_focus(lpmsg : MSG*, itbnext : UInt32, citb : Int32, pptbi : TOOLBARITEM**, phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.v_may_get_next_toolbar_focus.unsafe_as(Proc(MSG*, UInt32, Int32, TOOLBARITEM**, HANDLE*, HRESULT)).call(lpmsg, itbnext, citb, pptbi, phwnd)
  end
  def _resize_next_border_helper(itb : UInt32, busehmonitor : LibC::BOOL) : HRESULT
    @lpVtbl.value._resize_next_border_helper.unsafe_as(Proc(UInt32, LibC::BOOL, HRESULT)).call(itb, busehmonitor)
  end
  def _find_t_bar(punksrc : IUnknown) : UInt32
    @lpVtbl.value._find_t_bar.unsafe_as(Proc(IUnknown, UInt32)).call(punksrc)
  end
  def _set_focus(ptbi : TOOLBARITEM*, hwnd : LibC::HANDLE, lpmsg : MSG*) : HRESULT
    @lpVtbl.value._set_focus.unsafe_as(Proc(TOOLBARITEM*, LibC::HANDLE, MSG*, HRESULT)).call(ptbi, hwnd, lpmsg)
  end
  def v_may_translate_accelerator(pmsg : MSG*) : HRESULT
    @lpVtbl.value.v_may_translate_accelerator.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
  def _get_border_dw_helper(punksrc : IUnknown, lprectborder : RECT*, busehmonitor : LibC::BOOL) : HRESULT
    @lpVtbl.value._get_border_dw_helper.unsafe_as(Proc(IUnknown, RECT*, LibC::BOOL, HRESULT)).call(punksrc, lprectborder, busehmonitor)
  end
  def v_check_zone_crossing(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.v_check_zone_crossing.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def _position_view_window(hwnd : LibC::HANDLE, prc : RECT*) : HRESULT
    @lpVtbl.value._position_view_window.unsafe_as(Proc(LibC::HANDLE, RECT*, HRESULT)).call(hwnd, prc)
  end
  def ie_parse_display_name_ex(uicp : UInt32, pwszpath : LibC::LPWSTR, dwflags : UInt32, ppidlout : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.ie_parse_display_name_ex.unsafe_as(Proc(UInt32, LibC::LPWSTR, UInt32, ITEMIDLIST**, HRESULT)).call(uicp, pwszpath, dwflags, ppidlout)
  end
end
struct LibWin32::IBrowserService4
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def get_parent_site(ppipsite : IOleInPlaceSite*) : HRESULT
    @lpVtbl.value.get_parent_site.unsafe_as(Proc(IOleInPlaceSite*, HRESULT)).call(ppipsite)
  end
  def set_title(psv : IShellView, pszname : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.set_title.unsafe_as(Proc(IShellView, LibC::LPWSTR, HRESULT)).call(psv, pszname)
  end
  def get_title(psv : IShellView, pszname : Char*, cchname : UInt32) : HRESULT
    @lpVtbl.value.get_title.unsafe_as(Proc(IShellView, Char*, UInt32, HRESULT)).call(psv, pszname, cchname)
  end
  def get_ole_object(ppobjv : IOleObject*) : HRESULT
    @lpVtbl.value.get_ole_object.unsafe_as(Proc(IOleObject*, HRESULT)).call(ppobjv)
  end
  def get_travel_log(pptl : ITravelLog*) : HRESULT
    @lpVtbl.value.get_travel_log.unsafe_as(Proc(ITravelLog*, HRESULT)).call(pptl)
  end
  def show_control_window(id : UInt32, fshow : LibC::BOOL) : HRESULT
    @lpVtbl.value.show_control_window.unsafe_as(Proc(UInt32, LibC::BOOL, HRESULT)).call(id, fshow)
  end
  def is_control_window_shown(id : UInt32, pfshown : LibC::BOOL*) : HRESULT
    @lpVtbl.value.is_control_window_shown.unsafe_as(Proc(UInt32, LibC::BOOL*, HRESULT)).call(id, pfshown)
  end
  def ie_get_display_name(pidl : ITEMIDLIST*, pwszname : LibC::LPWSTR, uflags : UInt32) : HRESULT
    @lpVtbl.value.ie_get_display_name.unsafe_as(Proc(ITEMIDLIST*, LibC::LPWSTR, UInt32, HRESULT)).call(pidl, pwszname, uflags)
  end
  def ie_parse_display_name(uicp : UInt32, pwszpath : LibC::LPWSTR, ppidlout : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.ie_parse_display_name.unsafe_as(Proc(UInt32, LibC::LPWSTR, ITEMIDLIST**, HRESULT)).call(uicp, pwszpath, ppidlout)
  end
  def display_parse_error(hres : HRESULT, pwszpath : LibC::LPWSTR) : HRESULT
    @lpVtbl.value.display_parse_error.unsafe_as(Proc(HRESULT, LibC::LPWSTR, HRESULT)).call(hres, pwszpath)
  end
  def navigate_to_pidl(pidl : ITEMIDLIST*, grfhlnf : UInt32) : HRESULT
    @lpVtbl.value.navigate_to_pidl.unsafe_as(Proc(ITEMIDLIST*, UInt32, HRESULT)).call(pidl, grfhlnf)
  end
  def set_navigate_state(bnstate : BNSTATE) : HRESULT
    @lpVtbl.value.set_navigate_state.unsafe_as(Proc(BNSTATE, HRESULT)).call(bnstate)
  end
  def get_navigate_state(pbnstate : BNSTATE*) : HRESULT
    @lpVtbl.value.get_navigate_state.unsafe_as(Proc(BNSTATE*, HRESULT)).call(pbnstate)
  end
  def notify_redirect(psv : IShellView, pidl : ITEMIDLIST*, pfdidbrowse : LibC::BOOL*) : HRESULT
    @lpVtbl.value.notify_redirect.unsafe_as(Proc(IShellView, ITEMIDLIST*, LibC::BOOL*, HRESULT)).call(psv, pidl, pfdidbrowse)
  end
  def update_window_list : HRESULT
    @lpVtbl.value.update_window_list.unsafe_as(Proc(HRESULT)).call
  end
  def update_back_forward_state : HRESULT
    @lpVtbl.value.update_back_forward_state.unsafe_as(Proc(HRESULT)).call
  end
  def set_flags(dwflags : UInt32, dwflagmask : UInt32) : HRESULT
    @lpVtbl.value.set_flags.unsafe_as(Proc(UInt32, UInt32, HRESULT)).call(dwflags, dwflagmask)
  end
  def get_flags(pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_flags.unsafe_as(Proc(UInt32*, HRESULT)).call(pdwflags)
  end
  def can_navigate_now : HRESULT
    @lpVtbl.value.can_navigate_now.unsafe_as(Proc(HRESULT)).call
  end
  def get_pidl(ppidl : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.get_pidl.unsafe_as(Proc(ITEMIDLIST**, HRESULT)).call(ppidl)
  end
  def set_referrer(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.set_referrer.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def get_browser_index : UInt32
    @lpVtbl.value.get_browser_index.unsafe_as(Proc(UInt32)).call
  end
  def get_browser_by_index(dwid : UInt32, ppunk : IUnknown*) : HRESULT
    @lpVtbl.value.get_browser_by_index.unsafe_as(Proc(UInt32, IUnknown*, HRESULT)).call(dwid, ppunk)
  end
  def get_history_object(ppole : IOleObject*, pstm : IStream*, ppbc : IBindCtx*) : HRESULT
    @lpVtbl.value.get_history_object.unsafe_as(Proc(IOleObject*, IStream*, IBindCtx*, HRESULT)).call(ppole, pstm, ppbc)
  end
  def set_history_object(pole : IOleObject, fislocalanchor : LibC::BOOL) : HRESULT
    @lpVtbl.value.set_history_object.unsafe_as(Proc(IOleObject, LibC::BOOL, HRESULT)).call(pole, fislocalanchor)
  end
  def cache_ole_server(pole : IOleObject) : HRESULT
    @lpVtbl.value.cache_ole_server.unsafe_as(Proc(IOleObject, HRESULT)).call(pole)
  end
  def get_set_code_page(pvarin : VARIANT*, pvarout : VARIANT*) : HRESULT
    @lpVtbl.value.get_set_code_page.unsafe_as(Proc(VARIANT*, VARIANT*, HRESULT)).call(pvarin, pvarout)
  end
  def on_http_equiv(psv : IShellView, fdone : LibC::BOOL, pvarargin : VARIANT*, pvarargout : VARIANT*) : HRESULT
    @lpVtbl.value.on_http_equiv.unsafe_as(Proc(IShellView, LibC::BOOL, VARIANT*, VARIANT*, HRESULT)).call(psv, fdone, pvarargin, pvarargout)
  end
  def get_palette(hpal : HPALETTE*) : HRESULT
    @lpVtbl.value.get_palette.unsafe_as(Proc(HPALETTE*, HRESULT)).call(hpal)
  end
  def register_window(fforceregister : LibC::BOOL, swc : Int32) : HRESULT
    @lpVtbl.value.register_window.unsafe_as(Proc(LibC::BOOL, Int32, HRESULT)).call(fforceregister, swc)
  end
  def wnd_proc_bs(hwnd : LibC::HANDLE, umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT
    @lpVtbl.value.wnd_proc_bs.unsafe_as(Proc(LibC::HANDLE, UInt32, LibC::UINT_PTR, LPARAM, LRESULT)).call(hwnd, umsg, wparam, lparam)
  end
  def set_as_def_folder_settings : HRESULT
    @lpVtbl.value.set_as_def_folder_settings.unsafe_as(Proc(HRESULT)).call
  end
  def get_view_rect(prc : RECT*) : HRESULT
    @lpVtbl.value.get_view_rect.unsafe_as(Proc(RECT*, HRESULT)).call(prc)
  end
  def on_size(wparam : LibC::UINT_PTR) : HRESULT
    @lpVtbl.value.on_size.unsafe_as(Proc(LibC::UINT_PTR, HRESULT)).call(wparam)
  end
  def on_create(pcs : CREATESTRUCTW*) : HRESULT
    @lpVtbl.value.on_create.unsafe_as(Proc(CREATESTRUCTW*, HRESULT)).call(pcs)
  end
  def on_command(wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT
    @lpVtbl.value.on_command.unsafe_as(Proc(LibC::UINT_PTR, LPARAM, LRESULT)).call(wparam, lparam)
  end
  def on_destroy : HRESULT
    @lpVtbl.value.on_destroy.unsafe_as(Proc(HRESULT)).call
  end
  def on_notify(pnm : NMHDR*) : LRESULT
    @lpVtbl.value.on_notify.unsafe_as(Proc(NMHDR*, LRESULT)).call(pnm)
  end
  def on_set_focus : HRESULT
    @lpVtbl.value.on_set_focus.unsafe_as(Proc(HRESULT)).call
  end
  def on_frame_window_activate_bs(factive : LibC::BOOL) : HRESULT
    @lpVtbl.value.on_frame_window_activate_bs.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(factive)
  end
  def release_shell_view : HRESULT
    @lpVtbl.value.release_shell_view.unsafe_as(Proc(HRESULT)).call
  end
  def activate_pending_view : HRESULT
    @lpVtbl.value.activate_pending_view.unsafe_as(Proc(HRESULT)).call
  end
  def create_view_window(psvnew : IShellView, psvold : IShellView, prcview : RECT*, phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.create_view_window.unsafe_as(Proc(IShellView, IShellView, RECT*, HANDLE*, HRESULT)).call(psvnew, psvold, prcview, phwnd)
  end
  def create_browser_prop_sheet_ext(riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.create_browser_prop_sheet_ext.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppv)
  end
  def get_view_window(phwndview : HANDLE*) : HRESULT
    @lpVtbl.value.get_view_window.unsafe_as(Proc(HANDLE*, HRESULT)).call(phwndview)
  end
  def get_base_browser_data(pbbd : BASEBROWSERDATALH**) : HRESULT
    @lpVtbl.value.get_base_browser_data.unsafe_as(Proc(BASEBROWSERDATALH**, HRESULT)).call(pbbd)
  end
  def put_base_browser_data : BASEBROWSERDATALH*
    @lpVtbl.value.put_base_browser_data.unsafe_as(Proc(BASEBROWSERDATALH**)).call
  end
  def initialize_travel_log(ptl : ITravelLog, dw : UInt32) : HRESULT
    @lpVtbl.value.initialize_travel_log.unsafe_as(Proc(ITravelLog, UInt32, HRESULT)).call(ptl, dw)
  end
  def set_top_browser : HRESULT
    @lpVtbl.value.set_top_browser.unsafe_as(Proc(HRESULT)).call
  end
  def offline(icmd : Int32) : HRESULT
    @lpVtbl.value.offline.unsafe_as(Proc(Int32, HRESULT)).call(icmd)
  end
  def allow_view_resize(f : LibC::BOOL) : HRESULT
    @lpVtbl.value.allow_view_resize.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(f)
  end
  def set_activate_state(u : UInt32) : HRESULT
    @lpVtbl.value.set_activate_state.unsafe_as(Proc(UInt32, HRESULT)).call(u)
  end
  def update_secure_lock_icon(esecurelock : Int32) : HRESULT
    @lpVtbl.value.update_secure_lock_icon.unsafe_as(Proc(Int32, HRESULT)).call(esecurelock)
  end
  def initialize_download_manager : HRESULT
    @lpVtbl.value.initialize_download_manager.unsafe_as(Proc(HRESULT)).call
  end
  def initialize_transition_site : HRESULT
    @lpVtbl.value.initialize_transition_site.unsafe_as(Proc(HRESULT)).call
  end
  def _initialize(hwnd : LibC::HANDLE, pauto : IUnknown) : HRESULT
    @lpVtbl.value._initialize.unsafe_as(Proc(LibC::HANDLE, IUnknown, HRESULT)).call(hwnd, pauto)
  end
  def _cancel_pending_navigation_async : HRESULT
    @lpVtbl.value._cancel_pending_navigation_async.unsafe_as(Proc(HRESULT)).call
  end
  def _cancel_pending_view : HRESULT
    @lpVtbl.value._cancel_pending_view.unsafe_as(Proc(HRESULT)).call
  end
  def _may_save_changes : HRESULT
    @lpVtbl.value._may_save_changes.unsafe_as(Proc(HRESULT)).call
  end
  def _pause_or_resume_view(fpaused : LibC::BOOL) : HRESULT
    @lpVtbl.value._pause_or_resume_view.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fpaused)
  end
  def _disable_modeless : HRESULT
    @lpVtbl.value._disable_modeless.unsafe_as(Proc(HRESULT)).call
  end
  def _navigate_to_pidl2(pidl : ITEMIDLIST*, grfhlnf : UInt32, dwflags : UInt32) : HRESULT
    @lpVtbl.value._navigate_to_pidl2.unsafe_as(Proc(ITEMIDLIST*, UInt32, UInt32, HRESULT)).call(pidl, grfhlnf, dwflags)
  end
  def _try_shell2_rename(psv : IShellView, pidlnew : ITEMIDLIST*) : HRESULT
    @lpVtbl.value._try_shell2_rename.unsafe_as(Proc(IShellView, ITEMIDLIST*, HRESULT)).call(psv, pidlnew)
  end
  def _switch_activation_now : HRESULT
    @lpVtbl.value._switch_activation_now.unsafe_as(Proc(HRESULT)).call
  end
  def _exec_children(punkbar : IUnknown, fbroadcast : LibC::BOOL, pguidcmdgroup : Guid*, ncmdid : UInt32, ncmdexecopt : UInt32, pvarargin : VARIANT*, pvarargout : VARIANT*) : HRESULT
    @lpVtbl.value._exec_children.unsafe_as(Proc(IUnknown, LibC::BOOL, Guid*, UInt32, UInt32, VARIANT*, VARIANT*, HRESULT)).call(punkbar, fbroadcast, pguidcmdgroup, ncmdid, ncmdexecopt, pvarargin, pvarargout)
  end
  def _send_children(hwndbar : LibC::HANDLE, fbroadcast : LibC::BOOL, umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : HRESULT
    @lpVtbl.value._send_children.unsafe_as(Proc(LibC::HANDLE, LibC::BOOL, UInt32, LibC::UINT_PTR, LPARAM, HRESULT)).call(hwndbar, fbroadcast, umsg, wparam, lparam)
  end
  def get_folder_set_data(pfsd : FOLDERSETDATA*) : HRESULT
    @lpVtbl.value.get_folder_set_data.unsafe_as(Proc(FOLDERSETDATA*, HRESULT)).call(pfsd)
  end
  def _on_focus_change(itb : UInt32) : HRESULT
    @lpVtbl.value._on_focus_change.unsafe_as(Proc(UInt32, HRESULT)).call(itb)
  end
  def v_show_hide_child_windows(fchildonly : LibC::BOOL) : HRESULT
    @lpVtbl.value.v_show_hide_child_windows.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fchildonly)
  end
  def _get_itb_last_focus : UInt32
    @lpVtbl.value._get_itb_last_focus.unsafe_as(Proc(UInt32)).call
  end
  def _put_itb_last_focus(itblastfocus : UInt32) : HRESULT
    @lpVtbl.value._put_itb_last_focus.unsafe_as(Proc(UInt32, HRESULT)).call(itblastfocus)
  end
  def _ui_activate_view(ustate : UInt32) : HRESULT
    @lpVtbl.value._ui_activate_view.unsafe_as(Proc(UInt32, HRESULT)).call(ustate)
  end
  def _get_view_border_rect(prc : RECT*) : HRESULT
    @lpVtbl.value._get_view_border_rect.unsafe_as(Proc(RECT*, HRESULT)).call(prc)
  end
  def _update_view_rect_size : HRESULT
    @lpVtbl.value._update_view_rect_size.unsafe_as(Proc(HRESULT)).call
  end
  def _resize_next_border(itb : UInt32) : HRESULT
    @lpVtbl.value._resize_next_border.unsafe_as(Proc(UInt32, HRESULT)).call(itb)
  end
  def _resize_view : HRESULT
    @lpVtbl.value._resize_view.unsafe_as(Proc(HRESULT)).call
  end
  def _get_effective_client_area(lprectborder : RECT*, hmon : HMONITOR) : HRESULT
    @lpVtbl.value._get_effective_client_area.unsafe_as(Proc(RECT*, HMONITOR, HRESULT)).call(lprectborder, hmon)
  end
  def v_get_view_stream(pidl : ITEMIDLIST*, grfmode : UInt32, pwszname : LibC::LPWSTR) : IStream
    @lpVtbl.value.v_get_view_stream.unsafe_as(Proc(ITEMIDLIST*, UInt32, LibC::LPWSTR, IStream)).call(pidl, grfmode, pwszname)
  end
  def forward_view_msg(umsg : UInt32, wparam : LibC::UINT_PTR, lparam : LPARAM) : LRESULT
    @lpVtbl.value.forward_view_msg.unsafe_as(Proc(UInt32, LibC::UINT_PTR, LPARAM, LRESULT)).call(umsg, wparam, lparam)
  end
  def set_accelerator_menu(hacc : LibC::HANDLE) : HRESULT
    @lpVtbl.value.set_accelerator_menu.unsafe_as(Proc(LibC::HANDLE, HRESULT)).call(hacc)
  end
  def _get_toolbar_count : Int32
    @lpVtbl.value._get_toolbar_count.unsafe_as(Proc(Int32)).call
  end
  def _get_toolbar_item(itb : Int32) : TOOLBARITEM*
    @lpVtbl.value._get_toolbar_item.unsafe_as(Proc(Int32, TOOLBARITEM**)).call(itb)
  end
  def _save_toolbars(pstm : IStream) : HRESULT
    @lpVtbl.value._save_toolbars.unsafe_as(Proc(IStream, HRESULT)).call(pstm)
  end
  def _load_toolbars(pstm : IStream) : HRESULT
    @lpVtbl.value._load_toolbars.unsafe_as(Proc(IStream, HRESULT)).call(pstm)
  end
  def _close_and_release_toolbars(fclose : LibC::BOOL) : HRESULT
    @lpVtbl.value._close_and_release_toolbars.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fclose)
  end
  def v_may_get_next_toolbar_focus(lpmsg : MSG*, itbnext : UInt32, citb : Int32, pptbi : TOOLBARITEM**, phwnd : HANDLE*) : HRESULT
    @lpVtbl.value.v_may_get_next_toolbar_focus.unsafe_as(Proc(MSG*, UInt32, Int32, TOOLBARITEM**, HANDLE*, HRESULT)).call(lpmsg, itbnext, citb, pptbi, phwnd)
  end
  def _resize_next_border_helper(itb : UInt32, busehmonitor : LibC::BOOL) : HRESULT
    @lpVtbl.value._resize_next_border_helper.unsafe_as(Proc(UInt32, LibC::BOOL, HRESULT)).call(itb, busehmonitor)
  end
  def _find_t_bar(punksrc : IUnknown) : UInt32
    @lpVtbl.value._find_t_bar.unsafe_as(Proc(IUnknown, UInt32)).call(punksrc)
  end
  def _set_focus(ptbi : TOOLBARITEM*, hwnd : LibC::HANDLE, lpmsg : MSG*) : HRESULT
    @lpVtbl.value._set_focus.unsafe_as(Proc(TOOLBARITEM*, LibC::HANDLE, MSG*, HRESULT)).call(ptbi, hwnd, lpmsg)
  end
  def v_may_translate_accelerator(pmsg : MSG*) : HRESULT
    @lpVtbl.value.v_may_translate_accelerator.unsafe_as(Proc(MSG*, HRESULT)).call(pmsg)
  end
  def _get_border_dw_helper(punksrc : IUnknown, lprectborder : RECT*, busehmonitor : LibC::BOOL) : HRESULT
    @lpVtbl.value._get_border_dw_helper.unsafe_as(Proc(IUnknown, RECT*, LibC::BOOL, HRESULT)).call(punksrc, lprectborder, busehmonitor)
  end
  def v_check_zone_crossing(pidl : ITEMIDLIST*) : HRESULT
    @lpVtbl.value.v_check_zone_crossing.unsafe_as(Proc(ITEMIDLIST*, HRESULT)).call(pidl)
  end
  def _position_view_window(hwnd : LibC::HANDLE, prc : RECT*) : HRESULT
    @lpVtbl.value._position_view_window.unsafe_as(Proc(LibC::HANDLE, RECT*, HRESULT)).call(hwnd, prc)
  end
  def ie_parse_display_name_ex(uicp : UInt32, pwszpath : LibC::LPWSTR, dwflags : UInt32, ppidlout : ITEMIDLIST**) : HRESULT
    @lpVtbl.value.ie_parse_display_name_ex.unsafe_as(Proc(UInt32, LibC::LPWSTR, UInt32, ITEMIDLIST**, HRESULT)).call(uicp, pwszpath, dwflags, ppidlout)
  end
  def activate_view(fpendingview : LibC::BOOL) : HRESULT
    @lpVtbl.value.activate_view.unsafe_as(Proc(LibC::BOOL, HRESULT)).call(fpendingview)
  end
  def save_view_state : HRESULT
    @lpVtbl.value.save_view_state.unsafe_as(Proc(HRESULT)).call
  end
  def _resize_all_borders : HRESULT
    @lpVtbl.value._resize_all_borders.unsafe_as(Proc(HRESULT)).call
  end
end
struct LibWin32::ITrackShellMenu
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def initialize(psmc : IShellMenuCallback, uid : UInt32, uidancestor : UInt32, dwflags : UInt32) : HRESULT
    @lpVtbl.value.initialize.unsafe_as(Proc(IShellMenuCallback, UInt32, UInt32, UInt32, HRESULT)).call(psmc, uid, uidancestor, dwflags)
  end
  def get_menu_info(ppsmc : IShellMenuCallback*, puid : UInt32*, puidancestor : UInt32*, pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_menu_info.unsafe_as(Proc(IShellMenuCallback*, UInt32*, UInt32*, UInt32*, HRESULT)).call(ppsmc, puid, puidancestor, pdwflags)
  end
  def set_shell_folder(psf : IShellFolder, pidlfolder : ITEMIDLIST*, hkey : HKEY, dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_shell_folder.unsafe_as(Proc(IShellFolder, ITEMIDLIST*, HKEY, UInt32, HRESULT)).call(psf, pidlfolder, hkey, dwflags)
  end
  def get_shell_folder(pdwflags : UInt32*, ppidl : ITEMIDLIST**, riid : Guid*, ppv : Void**) : HRESULT
    @lpVtbl.value.get_shell_folder.unsafe_as(Proc(UInt32*, ITEMIDLIST**, Guid*, Void**, HRESULT)).call(pdwflags, ppidl, riid, ppv)
  end
  def set_menu(hmenu : LibC::HANDLE, hwnd : LibC::HANDLE, dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_menu.unsafe_as(Proc(LibC::HANDLE, LibC::HANDLE, UInt32, HRESULT)).call(hmenu, hwnd, dwflags)
  end
  def get_menu(phmenu : HANDLE*, phwnd : HANDLE*, pdwflags : UInt32*) : HRESULT
    @lpVtbl.value.get_menu.unsafe_as(Proc(HANDLE*, HANDLE*, UInt32*, HRESULT)).call(phmenu, phwnd, pdwflags)
  end
  def invalidate_item(psmd : SMDATA*, dwflags : UInt32) : HRESULT
    @lpVtbl.value.invalidate_item.unsafe_as(Proc(SMDATA*, UInt32, HRESULT)).call(psmd, dwflags)
  end
  def get_state(psmd : SMDATA*) : HRESULT
    @lpVtbl.value.get_state.unsafe_as(Proc(SMDATA*, HRESULT)).call(psmd)
  end
  def set_menu_toolbar(punk : IUnknown, dwflags : UInt32) : HRESULT
    @lpVtbl.value.set_menu_toolbar.unsafe_as(Proc(IUnknown, UInt32, HRESULT)).call(punk, dwflags)
  end
  def set_obscured(hwndtb : LibC::HANDLE, punkband : IUnknown, dwsmsetflags : UInt32) : HRESULT
    @lpVtbl.value.set_obscured.unsafe_as(Proc(LibC::HANDLE, IUnknown, UInt32, HRESULT)).call(hwndtb, punkband, dwsmsetflags)
  end
  def popup(hwnd : LibC::HANDLE, ppt : POINTL*, prcexclude : RECTL*, dwflags : Int32) : HRESULT
    @lpVtbl.value.popup.unsafe_as(Proc(LibC::HANDLE, POINTL*, RECTL*, Int32, HRESULT)).call(hwnd, ppt, prcexclude, dwflags)
  end
end
struct LibWin32::ITranscodeImage
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def transcode_image(pshellitem : IShellItem, uimaxwidth : UInt32, uimaxheight : UInt32, flags : UInt32, pvimage : IStream, puiwidth : UInt32*, puiheight : UInt32*) : HRESULT
    @lpVtbl.value.transcode_image.unsafe_as(Proc(IShellItem, UInt32, UInt32, UInt32, IStream, UInt32*, UInt32*, HRESULT)).call(pshellitem, uimaxwidth, uimaxheight, flags, pvimage, puiwidth, puiheight)
  end
end
struct LibWin32::IUniformResourceLocatorA
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_url(pcszurl : PSTR, dwinflags : UInt32) : HRESULT
    @lpVtbl.value.set_url.unsafe_as(Proc(PSTR, UInt32, HRESULT)).call(pcszurl, dwinflags)
  end
  def get_url(ppszurl : PSTR*) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(PSTR*, HRESULT)).call(ppszurl)
  end
  def invoke_command(purlici : Urlinvokecommandinfoa*) : HRESULT
    @lpVtbl.value.invoke_command.unsafe_as(Proc(Urlinvokecommandinfoa*, HRESULT)).call(purlici)
  end
end
struct LibWin32::IUniformResourceLocatorW
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def set_url(pcszurl : LibC::LPWSTR, dwinflags : UInt32) : HRESULT
    @lpVtbl.value.set_url.unsafe_as(Proc(LibC::LPWSTR, UInt32, HRESULT)).call(pcszurl, dwinflags)
  end
  def get_url(ppszurl : LibC::LPWSTR*) : HRESULT
    @lpVtbl.value.get_url.unsafe_as(Proc(LibC::LPWSTR*, HRESULT)).call(ppszurl)
  end
  def invoke_command(purlici : Urlinvokecommandinfow*) : HRESULT
    @lpVtbl.value.invoke_command.unsafe_as(Proc(Urlinvokecommandinfow*, HRESULT)).call(purlici)
  end
end
struct LibWin32::IInputPaneAnimationCoordinator
  def query_interface(riid : Guid*, ppvobject : Void**) : HRESULT
    @lpVtbl.value.query_interface.unsafe_as(Proc(Guid*, Void**, HRESULT)).call(riid, ppvobject)
  end
  def add_ref : UInt32
    @lpVtbl.value.add_ref.unsafe_as(Proc(UInt32)).call
  end
  def release : UInt32
    @lpVtbl.value.release.unsafe_as(Proc(UInt32)).call
  end
  def add_animation(device : IUnknown, animation : IDCompositionAnimation) : HRESULT
    @lpVtbl.value.add_animation.unsafe_as(Proc(IUnknown, IDCompositionAnimation, HRESULT)).call(device, animation)
  end
end
